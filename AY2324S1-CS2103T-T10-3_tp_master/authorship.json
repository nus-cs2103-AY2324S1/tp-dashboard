[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Kailash201"},"content":"[![CI Status](https://github.com/AY2324S1-CS2103T-T10-3/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2324S1-CS2103T-T10-3/tp/actions)","lastModifiedDate":"2023-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"Kailash201"},"content":"* This is ProjectPRO for university students with a lot of projects.\u003cbr\u003e","lastModifiedDate":"2023-10-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"  Example usages:","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"Kailash201"},"content":"  * Group contact lists ","lastModifiedDate":"2023-10-07"},{"lineNumber":8,"author":{"gitId":"Kailash201"},"content":"  * Track group mates availability","lastModifiedDate":"2023-10-07"},{"lineNumber":9,"author":{"gitId":"Kailash201"},"content":"* The project simulates an ongoing school software project for a desktop application (called _ProjectPRO_) used for managing group mates","lastModifiedDate":"2023-10-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"  * It is **written in OOP fashion**. It provides a **reasonably well-written** code base **bigger** (around 6 KLoC) than what students usually write in beginner-level SE modules, without being overwhelmingly big.","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  * It comes with a **reasonable level of user and developer documentation**.","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"Kailash201"},"content":"  ","lastModifiedDate":"2023-10-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"* This project is a **part of the se-education.org** initiative. If you would like to contribute code to this project, see [se-education.org](https://se-education.org#https://se-education.org/#contributing) for more info.","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"Kailash201":6,"-":7}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"mainClassName \u003d \u0027seedu.address.Main\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"lerxuann"},"content":"run {","lastModifiedDate":"2023-10-27"},{"lineNumber":15,"author":{"gitId":"lerxuann"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2023-10-27"},{"lineNumber":16,"author":{"gitId":"lerxuann"},"content":"}","lastModifiedDate":"2023-10-27"},{"lineNumber":17,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-04-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        html.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        xml.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-07-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    archiveFileName \u003d \u0027addressbook.jar\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"ZD292":1,"lerxuann":3,"-":72}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"About Us\"","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"# About Us","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"You can reach us at the email `seer[at]comp.nus.edu.sg`","lastModifiedDate":"2020-06-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"Kailash201"},"content":"### Kailashwaran","lastModifiedDate":"2023-10-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"Kailash201"},"content":"\u003cimg src\u003d\"images/kailash201.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"Kailash201"},"content":"[[github](http://github.com/Kailash201)]","lastModifiedDate":"2023-10-04"},{"lineNumber":19,"author":{"gitId":"Kailash201"},"content":"[[portfolio](team/Kailash201.md)]","lastModifiedDate":"2023-10-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"Kailash201"},"content":"* Roel: Developer","lastModifiedDate":"2023-10-04"},{"lineNumber":22,"author":{"gitId":"Kailash201"},"content":"* Role: Team Lead","lastModifiedDate":"2023-10-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"coderhuang559"},"content":"### Huang Yixin","lastModifiedDate":"2023-10-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"coderhuang559"},"content":"\u003cimg src\u003d\"images/coderhuang559.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-10-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"coderhuang559"},"content":"[[github](http://github.com/coderhuang559)]","lastModifiedDate":"2023-10-04"},{"lineNumber":29,"author":{"gitId":"coderhuang559"},"content":"[[portfolio](team/coderhuang559.md)]","lastModifiedDate":"2023-10-04"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"coderhuang559"},"content":"* Role: Developer","lastModifiedDate":"2023-10-04"},{"lineNumber":32,"author":{"gitId":"-"},"content":"* Responsibilities: UI","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"nicholastng010601"},"content":"### Nicholas Tng","lastModifiedDate":"2023-10-04"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"nicholastng010601"},"content":"\u003cimg src\u003d\"images/nicholastng010601.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-10-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"nicholastng010601"},"content":"[[github](http://github.com/nicholastng010601)]","lastModifiedDate":"2023-10-04"},{"lineNumber":39,"author":{"gitId":"nicholastng010601"},"content":"[[portfolio](team/nicholastng010601.md)]","lastModifiedDate":"2023-10-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"nicholastng010601"},"content":"* Responsibilities: Code quality","lastModifiedDate":"2023-10-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"lerxuann"},"content":"### Goh Ler Xuan","lastModifiedDate":"2023-10-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"lerxuann"},"content":"\u003cimg src\u003d\"images/lerxuann.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-10-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"lerxuann"},"content":"[[github](http://github.com/lerxuann)]","lastModifiedDate":"2023-10-04"},{"lineNumber":49,"author":{"gitId":"lerxuann"},"content":"[[portfolio](team/lerxuann.md)]","lastModifiedDate":"2023-10-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"lerxuann"},"content":"* Responsibilities: Documentation","lastModifiedDate":"2023-10-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"ZD292"},"content":"### Ong Zhen Dong","lastModifiedDate":"2023-09-28"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"ZD292"},"content":"\u003cimg src\u003d\"images/zd292.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-09-28"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"ZD292"},"content":"[[github](https://github.com/zd292)]","lastModifiedDate":"2023-09-28"},{"lineNumber":59,"author":{"gitId":"Kailash201"},"content":"[[portfolio](team/zd292.md)]","lastModifiedDate":"2023-10-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"ZD292"},"content":"* Responsibilities: Team lead","lastModifiedDate":"2023-10-08"}],"authorContributionMap":{"Kailash201":7,"coderhuang559":5,"ZD292":4,"nicholastng010601":5,"lerxuann":5,"-":36}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"Developer Guide\"","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"  pageNav: 3","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"lerxuann"},"content":"# ProjectPRO Developer Guide","lastModifiedDate":"2023-10-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c!-- * Table of Contents --\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003cpage-nav-print /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"lerxuann"},"content":"This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ArchitectureDiagram.puml\" width\u003d\"280\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"lerxuann"},"content":"**`Main`** (consisting of classes [`Main`](https://github.com/AY2324S1-CS2103T-T10-3/tp/blob/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/AY2324S1-CS2103T-T10-3/tp/blob/master/src/main/java/seedu/address/MainApp.java)) is in charge of the app launch and shut down.","lastModifiedDate":"2023-10-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"* At app launch, it initializes the other components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2023-09-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"* At shut down, it shuts down the other components and invokes cleanup methods where necessary.","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"The bulk of the app\u0027s work is done by the following four components:","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2023-09-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ArchitectureSequenceDiagram.puml\" width\u003d\"574\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":58,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ComponentManagers.puml\" width\u003d\"300\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"lerxuann"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/AY2324S1-CS2103T-T10-3/tp/blob/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2023-10-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UiClassDiagram.puml\" alt\u003d\"Structure of the UI Component\"/\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"lerxuann"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/AY2324S1-CS2103T-T10-3/tp/blob/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/AY2324S1-CS2103T-T10-3/tp/blob/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2023-10-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":80,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":81,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":82,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"lerxuann"},"content":"**API** : [`Logic.java`](https://github.com/AY2324S1-CS2103T-T10-3/tp/blob/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2023-10-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/LogicClassDiagram.puml\" width\u003d\"550\"/\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"The sequence diagram below illustrates the interactions within the `Logic` component, taking `execute(\"delete 1\")` API call as an example.","lastModifiedDate":"2023-09-03"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/DeleteSequenceDiagram.puml\" alt\u003d\"Interactions Inside the Logic Component for the `delete 1` Command\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"**Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2023-09-12"},{"lineNumber":99,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2023-09-03"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":103,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it is passed to an `AddressBookParser` object which in turn creates a parser that matches the command (e.g., `DeleteCommandParser`) and uses it to parse the command.","lastModifiedDate":"2023-09-03"},{"lineNumber":104,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `DeleteCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2023-09-03"},{"lineNumber":105,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to delete a person).","lastModifiedDate":"2023-09-03"},{"lineNumber":106,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2023-09-03"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":108,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ParserClasses.puml\" width\u003d\"600\"/\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":117,"author":{"gitId":"lerxuann"},"content":"**API** : [`Model.java`](https://github.com/AY2324S1-CS2103T-T10-3/tp/blob/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2023-10-07"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ModelClassDiagram.puml\" width\u003d\"450\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2021-07-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":131,"author":{"gitId":"-"},"content":"**Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":133,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/BetterModelClassDiagram.puml\" width\u003d\"450\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"lerxuann"},"content":"**API** : [`Storage.java`](https://github.com/AY2324S1-CS2103T-T10-3/tp/blob/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2023-10-07"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/StorageClassDiagram.puml\" width\u003d\"550\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in JSON format, and read them back into corresponding objects.","lastModifiedDate":"2023-09-03"},{"lineNumber":146,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31"},{"lineNumber":147,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"lerxuann"},"content":"### Delete feature","lastModifiedDate":"2023-10-26"},{"lineNumber":160,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":161,"author":{"gitId":"lerxuann"},"content":"#### Implementation","lastModifiedDate":"2023-10-26"},{"lineNumber":162,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":163,"author":{"gitId":"lerxuann"},"content":"The proposed delete person/group mechanism is facilitated by `AddressBook`. It implements the following operations:","lastModifiedDate":"2023-10-26"},{"lineNumber":164,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":165,"author":{"gitId":"lerxuann"},"content":"* `AddressBook#removePerson(Person p)` — Removes Person p from the address book.","lastModifiedDate":"2023-10-26"},{"lineNumber":166,"author":{"gitId":"lerxuann"},"content":"* `AddressBook#removeGroup(Group g)` — Remove Group g from the address book.","lastModifiedDate":"2023-10-26"},{"lineNumber":167,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":168,"author":{"gitId":"lerxuann"},"content":"These operations are exposed in the `Model` interface as `Model#deletePerson()`, `Model#deleteGroup()` respectively.","lastModifiedDate":"2023-10-26"},{"lineNumber":169,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":170,"author":{"gitId":"lerxuann"},"content":"##### Delete Person","lastModifiedDate":"2023-10-26"},{"lineNumber":171,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":172,"author":{"gitId":"lerxuann"},"content":"Given below is an example usage scenario and how the Delete Person mechanism behaves at each step.","lastModifiedDate":"2023-10-26"},{"lineNumber":173,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":174,"author":{"gitId":"lerxuann"},"content":"Step 1. The user executes `delete n/Alex Yeoh` command to delete a person named \u0027Alex Yeoh\u0027 in the address book. After parsing, a new `DeletePersonCommand` object will be returned.","lastModifiedDate":"2023-10-26"},{"lineNumber":175,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":176,"author":{"gitId":"lerxuann"},"content":"Step 2. `DeletePersonCommand` is executed, in which `Model#deletePerson()` is called, removing the Person with name \u0027Alex Yeoh\u0027 from the address book while returning the `Person` object.","lastModifiedDate":"2023-10-26"},{"lineNumber":177,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":178,"author":{"gitId":"lerxuann"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":179,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":180,"author":{"gitId":"lerxuann"},"content":"**Note:** If no such person named \u0027Alex Yeoh\u0027 exists, a `CommandException` will be thrown.","lastModifiedDate":"2023-10-26"},{"lineNumber":181,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":182,"author":{"gitId":"lerxuann"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":183,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":184,"author":{"gitId":"lerxuann"},"content":"Step 3. `Person#getGroups()` is called to obtain a `GroupList` of groups the target person is part of.","lastModifiedDate":"2023-10-26"},{"lineNumber":185,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":186,"author":{"gitId":"lerxuann"},"content":"Step 4. The `GroupList` is converted into a stream, where each element is a `Group`. `Group#removePerson()` is called for each Group in the stream, removing the target Person from all `ObserverableList\u003cPerson\u003e listOfGroupMates` in `Group`.","lastModifiedDate":"2023-10-26"},{"lineNumber":187,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":188,"author":{"gitId":"lerxuann"},"content":"The following sequence diagram shows how the Delete Person operation works:","lastModifiedDate":"2023-10-26"},{"lineNumber":189,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":190,"author":{"gitId":"lerxuann"},"content":"\u003cpuml src\u003d\"diagrams/DeletePersonSequenceDiagram.puml\" alt\u003d\"DeletePersonSequence\" /\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":191,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":192,"author":{"gitId":"lerxuann"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":193,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":194,"author":{"gitId":"lerxuann"},"content":"**Note:** The lifeline for `DeletePersonCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2023-10-26"},{"lineNumber":195,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":196,"author":{"gitId":"lerxuann"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":197,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":198,"author":{"gitId":"lerxuann"},"content":"##### Delete Group","lastModifiedDate":"2023-10-26"},{"lineNumber":199,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":200,"author":{"gitId":"lerxuann"},"content":"Given below is an example usage scenario and how the Delete Group mechanism behaves at each step.","lastModifiedDate":"2023-10-26"},{"lineNumber":201,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":202,"author":{"gitId":"lerxuann"},"content":"Step 1. The user executes `delete g/CS2100` command to delete a group named \u0027CS2100\u0027 in the address book. After parsing, a new `DeleteGroupCommand` object will be returned.","lastModifiedDate":"2023-10-26"},{"lineNumber":203,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":204,"author":{"gitId":"lerxuann"},"content":"Step 2. `DeleteGroupCommand` is executed, in which `Model#deleteGroup()` is called, removing the `Group` with name \u0027CS2100\u0027 (the target group) from the address book while returning the `Group` object.","lastModifiedDate":"2023-10-26"},{"lineNumber":205,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":206,"author":{"gitId":"lerxuann"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":207,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":208,"author":{"gitId":"lerxuann"},"content":"**Note:** If no such group named \u0027CS2100\u0027 exists, a `CommandException` will be thrown.","lastModifiedDate":"2023-10-26"},{"lineNumber":209,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":210,"author":{"gitId":"lerxuann"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":211,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":212,"author":{"gitId":"lerxuann"},"content":"Step 3. `Group#getListOfGroupMates()` is called to obtain a `ObservableList\u003cPerson\u003e` of Persons that are a part of the target group.","lastModifiedDate":"2023-10-26"},{"lineNumber":213,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":214,"author":{"gitId":"lerxuann"},"content":"Step 4. The `ObservableList\u003cPerson\u003e` is converted into a stream, where each element is a `Person`. `Person#removeGroup()` is called for each Person in the stream, removing the target Group from all `GroupList groups` in `Person`.","lastModifiedDate":"2023-10-26"},{"lineNumber":215,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":216,"author":{"gitId":"lerxuann"},"content":"Step 5. `DeleteGroupCommand` creates a new `CommandResult` with the corresponding message, and returns the result to the `LogicManager`.","lastModifiedDate":"2023-10-26"},{"lineNumber":217,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":218,"author":{"gitId":"lerxuann"},"content":"The following sequence diagram shows how the Delete Group operation works:","lastModifiedDate":"2023-10-26"},{"lineNumber":219,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":220,"author":{"gitId":"lerxuann"},"content":"\u003cpuml src\u003d\"diagrams/DeleteGroupSequenceDiagram.puml\" alt\u003d\"DeleteGroupSequence\" /\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":221,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":222,"author":{"gitId":"lerxuann"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":223,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":224,"author":{"gitId":"lerxuann"},"content":"**Note:** The lifeline for `DeleteGroupCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2023-10-26"},{"lineNumber":225,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":226,"author":{"gitId":"lerxuann"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":227,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":228,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":229,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState0.puml\" alt\u003d\"UndoRedoState0\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState1.puml\" alt\u003d\"UndoRedoState1\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState2.puml\" alt\u003d\"UndoRedoState2\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"**Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2023-09-12"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":259,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState3.puml\" alt\u003d\"UndoRedoState3\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":266,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"**Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2023-09-12"},{"lineNumber":269,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoSequenceDiagram.puml\" alt\u003d\"UndoSequenceDiagram\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"ZD292"},"content":"[//]: # (\u003cbox type\u003d\"info\" seamless\u003e)","lastModifiedDate":"2023-10-26"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"-"},"content":"**Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2023-09-12"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":281,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":283,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":287,"author":{"gitId":"-"},"content":"**Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2023-09-12"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState4.puml\" alt\u003d\"UndoRedoState4\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2020-05-23"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState5.puml\" alt\u003d\"UndoRedoState5\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":299,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":301,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/CommitActivityDiagram.puml\" width\u003d\"250\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":303,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":305,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":307,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":308,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":309,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":311,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":312,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":313,"author":{"gitId":"-"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2020-05-23"},{"lineNumber":314,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":315,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":316,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":317,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":318,"author":{"gitId":"coderhuang559"},"content":"### Proposed Group Remark Feature","lastModifiedDate":"2023-10-26"},{"lineNumber":319,"author":{"gitId":"coderhuang559"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":320,"author":{"gitId":"coderhuang559"},"content":"#### Proposed Implementation","lastModifiedDate":"2023-10-26"},{"lineNumber":321,"author":{"gitId":"coderhuang559"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":322,"author":{"gitId":"coderhuang559"},"content":"The proposed group remark feature is facilitated by the `Group` class. It includes a `Group Remark` field and implements the `Group#setGroupRemark()` operation. This feature is exposed in the `Model` interface as `Model#addGroupRemark()`.","lastModifiedDate":"2023-10-26"},{"lineNumber":323,"author":{"gitId":"coderhuang559"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":324,"author":{"gitId":"coderhuang559"},"content":"Here\u0027s an example usage scenario and how the group remark mechanism behaves at each step:","lastModifiedDate":"2023-10-26"},{"lineNumber":325,"author":{"gitId":"coderhuang559"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":326,"author":{"gitId":"coderhuang559"},"content":"**Step 1.** The user creates a group called `CS2103T`. The `Group` is initialized with an empty `groupRemark`.","lastModifiedDate":"2023-10-26"},{"lineNumber":327,"author":{"gitId":"coderhuang559"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":328,"author":{"gitId":"coderhuang559"},"content":"**Step 2.** The user executes the `remark g/CS2103T r/Quiz tomorrow` command to add the remark \"Quiz tomorrow\" to the `CS2103T` group. The `GroupRemarkCommandParser` extracts the group and remark from the input and creates a `GroupRemarkCommand`, which calls `Model#addGroupRemark(groupName, groupRemark)`. The model retrieves the existing `CS2103T` group from the database and calls the group\u0027s `Group#setRemark(groupRemark)`, adding the `groupRemark` to the group.","lastModifiedDate":"2023-10-26"},{"lineNumber":329,"author":{"gitId":"coderhuang559"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":330,"author":{"gitId":"coderhuang559"},"content":"**Note:** If the user wants to modify the group remark, they can execute the same command with the new remark. The existing remark will be deleted and overwritten, and the new remark is stored in the group.","lastModifiedDate":"2023-10-26"},{"lineNumber":331,"author":{"gitId":"coderhuang559"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":332,"author":{"gitId":"coderhuang559"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2023-10-26"},{"lineNumber":333,"author":{"gitId":"coderhuang559"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":334,"author":{"gitId":"coderhuang559"},"content":"\u003cpuml src\u003d\"diagrams/GroupRemarkSequenceDiagram.puml\" alt\u003d\"GroupRemarkSequenceDiagram\" /\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":335,"author":{"gitId":"coderhuang559"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":336,"author":{"gitId":"coderhuang559"},"content":"#### Design Considerations","lastModifiedDate":"2023-10-26"},{"lineNumber":337,"author":{"gitId":"coderhuang559"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":338,"author":{"gitId":"coderhuang559"},"content":"**Aspects:**","lastModifiedDate":"2023-10-26"},{"lineNumber":339,"author":{"gitId":"coderhuang559"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":340,"author":{"gitId":"coderhuang559"},"content":"- **Alternative 1 (current choice):** Overrides original remark","lastModifiedDate":"2023-10-26"},{"lineNumber":341,"author":{"gitId":"coderhuang559"},"content":"    - Pros: Easy to implement.","lastModifiedDate":"2023-10-26"},{"lineNumber":342,"author":{"gitId":"coderhuang559"},"content":"    - Cons: May be troublesome if the user wants to keep contents from the original remark.","lastModifiedDate":"2023-10-26"},{"lineNumber":343,"author":{"gitId":"coderhuang559"},"content":"- **Alternative 2:** Edits original remark","lastModifiedDate":"2023-10-26"},{"lineNumber":344,"author":{"gitId":"coderhuang559"},"content":"    - Pros: Easy to add more information.","lastModifiedDate":"2023-10-26"},{"lineNumber":345,"author":{"gitId":"coderhuang559"},"content":"    - Cons: Could be confusing to edit if there are many changes.","lastModifiedDate":"2023-10-26"},{"lineNumber":346,"author":{"gitId":"coderhuang559"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":347,"author":{"gitId":"coderhuang559"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":348,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":349,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":350,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":351,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":352,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":353,"author":{"gitId":"Kailash201"},"content":"### Add Command Feature","lastModifiedDate":"2023-10-26"},{"lineNumber":354,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":355,"author":{"gitId":"Kailash201"},"content":"The add feature is facilitate by a number of classes such as `Person` and `Model` ","lastModifiedDate":"2023-10-26"},{"lineNumber":356,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":357,"author":{"gitId":"Kailash201"},"content":"Step 1. The user launches the application for the first time.","lastModifiedDate":"2023-10-26"},{"lineNumber":358,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":359,"author":{"gitId":"Kailash201"},"content":"Step 2. The user executes `“add n/John Doe p/98765432 e/johnd@example.com g/CS2103T”` command to add a new person. `LogicManager#execute` is called which then calls `AddressBookParser#parseCommand` to decide on the type of command. `AddressBookParse`r` then calls `AddCommandParser`,","lastModifiedDate":"2023-10-26"},{"lineNumber":360,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":361,"author":{"gitId":"Kailash201"},"content":"Step 3, The `AddCommandParser` is called to read the user input. `AddCommandParser` calls `ArgumentTokenizer#tokenize` to check the prefixes of the user input. `AddCommandParser` then calls `ArgumentMultimap#getValue()` to get inputs after each prefix.","lastModifiedDate":"2023-10-26"},{"lineNumber":362,"author":{"gitId":"Kailash201"},"content":"The result of it is then passed to `ParserUtil#parse{Attribute}` methods to parse each attributes such as `Name`. `AddCommandParser` then makes new person object. `AddCommandParser` then calls `AddCommand` and passes `Person` inside.","lastModifiedDate":"2023-10-26"},{"lineNumber":363,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":364,"author":{"gitId":"Kailash201"},"content":"Step.4 `AddCommand` then calls `Model#addPerson()` which then calls `AddressBook#addPerson()`. The latter method will add person inside the `uniquePersonList` in `addressBook`. `AddCommand` also calls `Model#addGroup` which then calls `AddressBook#addGroup` to add the group inside `grouplist` if the group does not exist.","lastModifiedDate":"2023-10-26"},{"lineNumber":365,"author":{"gitId":"Kailash201"},"content":"Lastly, `AddCommand` adds the person inside the group","lastModifiedDate":"2023-10-26"},{"lineNumber":366,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":367,"author":{"gitId":"Kailash201"},"content":"Note: No duplication is allowed in addressbook for most of Person’s attribute (name, email and phone number.)","lastModifiedDate":"2023-10-26"},{"lineNumber":368,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":369,"author":{"gitId":"Kailash201"},"content":"\u003cpuml src\u003d\"diagrams/AddCommandSequenceDiagram.puml\" alt\u003d\"AddCommandSeqDiagram\" /\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":370,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":371,"author":{"gitId":"Kailash201"},"content":"#### Design consideration:","lastModifiedDate":"2023-10-26"},{"lineNumber":372,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":373,"author":{"gitId":"Kailash201"},"content":"**Aspect: Handling group attribute in user input**","lastModifiedDate":"2023-10-26"},{"lineNumber":374,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":375,"author":{"gitId":"Kailash201"},"content":"* **Alternative 1 (Current Choice):** Only allow user to add one group for each `Add` Command","lastModifiedDate":"2023-10-26"},{"lineNumber":376,"author":{"gitId":"Kailash201"},"content":"  * Pros: Conveniently adds a person into group while creating a new contact at the same time","lastModifiedDate":"2023-10-26"},{"lineNumber":377,"author":{"gitId":"Kailash201"},"content":"  * Cons: User input is relatively longer","lastModifiedDate":"2023-10-26"},{"lineNumber":378,"author":{"gitId":"Kailash201"},"content":"* **Alternative 2:** Allow user to add as many groups as required for each `Add` Command","lastModifiedDate":"2023-10-26"},{"lineNumber":379,"author":{"gitId":"Kailash201"},"content":"  * Pros: Conveniently adds a person into group while creating a new contact at the same time","lastModifiedDate":"2023-10-26"},{"lineNumber":380,"author":{"gitId":"Kailash201"},"content":"  * Cons: User input can get potentially very long, increasing the chance of invalid input","lastModifiedDate":"2023-10-26"},{"lineNumber":381,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":382,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-10-26"},{"lineNumber":383,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":384,"author":{"gitId":"ZD292"},"content":"### Create Group","lastModifiedDate":"2023-10-26"},{"lineNumber":385,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":386,"author":{"gitId":"ZD292"},"content":"#### Proposed Implementation","lastModifiedDate":"2023-10-26"},{"lineNumber":387,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":388,"author":{"gitId":"ZD292"},"content":"The Create Group mechanism is facilitated by `Group`. It is stored internally as a `Group`. This operation is exposed in the `Model` interface as `Model#addGroup()`.","lastModifiedDate":"2023-10-26"},{"lineNumber":389,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":390,"author":{"gitId":"ZD292"},"content":"Given below is an example usage scenario and how the group creation mechanism behaves at each step.","lastModifiedDate":"2023-10-26"},{"lineNumber":391,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":392,"author":{"gitId":"ZD292"},"content":"**Step 1:** User launches the application.","lastModifiedDate":"2023-10-26"},{"lineNumber":393,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":394,"author":{"gitId":"ZD292"},"content":"**Step 2:** The user executes `new g/GROUPNAME` to create a new group with the name GROUPNAME. `CreateGroupCommandParser` parses the GROUPNAME, ensuring the input is valid, and creates a `CreateGroupCommand`, which calls `Model#addGroup()`. The model retrieves the existing groupList from the addressBook and adds this new group to the groupList.","lastModifiedDate":"2023-10-26"},{"lineNumber":395,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":396,"author":{"gitId":"ZD292"},"content":"The following sequence diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2023-10-26"},{"lineNumber":397,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":398,"author":{"gitId":"ZD292"},"content":"#### Design Considerations","lastModifiedDate":"2023-10-26"},{"lineNumber":399,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":400,"author":{"gitId":"ZD292"},"content":"**Aspect: Groups with the same name**","lastModifiedDate":"2023-10-26"},{"lineNumber":401,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":402,"author":{"gitId":"ZD292"},"content":"* **Alternative 1 (current choice):** Group names are Unique","lastModifiedDate":"2023-10-26"},{"lineNumber":403,"author":{"gitId":"ZD292"},"content":"    * Pros: Allow users to create groups with the same name","lastModifiedDate":"2023-10-26"},{"lineNumber":404,"author":{"gitId":"ZD292"},"content":"    * Cons: User might have to be creative with naming groups","lastModifiedDate":"2023-10-26"},{"lineNumber":405,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":406,"author":{"gitId":"ZD292"},"content":"* **Alternative 2:** Group names are not unique but tagged with an id","lastModifiedDate":"2023-10-26"},{"lineNumber":407,"author":{"gitId":"ZD292"},"content":"    * Pros: Users can reuse commonly used group names","lastModifiedDate":"2023-10-26"},{"lineNumber":408,"author":{"gitId":"ZD292"},"content":"    * Cons: Users may get confused as to what each group is meant for","lastModifiedDate":"2023-10-26"},{"lineNumber":409,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":410,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":411,"author":{"gitId":"nicholastng010601"},"content":"### [Proposed] Delete Time Feature","lastModifiedDate":"2023-10-26"},{"lineNumber":412,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":413,"author":{"gitId":"nicholastng010601"},"content":"#### Proposed Implementation","lastModifiedDate":"2023-10-26"},{"lineNumber":414,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":415,"author":{"gitId":"nicholastng010601"},"content":"The proposed delete time feature is facilitated by the `timeIntervalList` and `Person` class. It accesses the `timeIntervalList` from the `Person` class and deletes a time interval with `Person#deleteFreeTime()`. The operation is exposed in the `Model` interface as `Model#deleteTimeFromPerson`.","lastModifiedDate":"2023-10-26"},{"lineNumber":416,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":417,"author":{"gitId":"nicholastng010601"},"content":"Step 1. The user launches the application. The `AddressBook` will be initialized with the free time of its contacts.","lastModifiedDate":"2023-10-26"},{"lineNumber":418,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":419,"author":{"gitId":"nicholastng010601"},"content":"Step 2. The user executes the command `deleteTime n/Alex Yeoh t/mon 1200 - mon 1400 ;tue 1000 - wed 1600`. The `deleteTimeCommandParser` will be called to parse the inputs and call the `deletePersonTimeCommand`. The `deletePersonTime` command calls `Model#deleteTimeFromPerson()`, which will call `Person#deleteFreeTime()`.","lastModifiedDate":"2023-10-26"},{"lineNumber":420,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":421,"author":{"gitId":"nicholastng010601"},"content":"**Note:** Since multiple inputs are allowed, an array list of time intervals are passed around, each of which is to be deleted.","lastModifiedDate":"2023-10-26"},{"lineNumber":422,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":423,"author":{"gitId":"nicholastng010601"},"content":"Step 3. The function will be called in the person\u0027s `timeInterval` list. The application will loop through each time interval that is to be deleted and in the person\u0027s `timeInterval` list. Each time interval will be compared to see whether the `timeIntervalList` contains the time interval to be deleted. Afterwards, the new `timeInterval` list will be saved.","lastModifiedDate":"2023-10-26"},{"lineNumber":424,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":425,"author":{"gitId":"nicholastng010601"},"content":"**Note:** If a time interval is not in the person\u0027s list, that interval will be collated and printed to specifically notify the user which time intervals are not in the list. The other time intervals that are in the list will still be deleted.","lastModifiedDate":"2023-10-26"},{"lineNumber":426,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":427,"author":{"gitId":"nicholastng010601"},"content":"Similarly, the group command does the same, except for the `Group` class.","lastModifiedDate":"2023-10-26"},{"lineNumber":428,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":429,"author":{"gitId":"nicholastng010601"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2023-10-26"},{"lineNumber":430,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":431,"author":{"gitId":"nicholastng010601"},"content":"\u003cpuml src\u003d\"diagrams/DeletePersonTimeDiagram.puml\" alt\u003d\"DeletePersonTimeDiagram\"/\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":432,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":433,"author":{"gitId":"nicholastng010601"},"content":"#### Design Considerations","lastModifiedDate":"2023-10-26"},{"lineNumber":434,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":435,"author":{"gitId":"nicholastng010601"},"content":"**Aspect: Error Messages**","lastModifiedDate":"2023-10-26"},{"lineNumber":436,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":437,"author":{"gitId":"nicholastng010601"},"content":"* Alternative 1 (current choice): Print specific error messages.","lastModifiedDate":"2023-10-26"},{"lineNumber":438,"author":{"gitId":"nicholastng010601"},"content":"  Pros: Allow users to understand which inputs went wrong.","lastModifiedDate":"2023-10-26"},{"lineNumber":439,"author":{"gitId":"nicholastng010601"},"content":"  Cons: May have performance issues in terms of runtime as more functions will be used to craft the error message. Currently, we utilized a `StringBuilder` to craft the message and did extra checks to see whether there had been any errors appended to the error message.","lastModifiedDate":"2023-10-26"},{"lineNumber":440,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":441,"author":{"gitId":"nicholastng010601"},"content":"* Alternative 2: Generalized error message.","lastModifiedDate":"2023-10-26"},{"lineNumber":442,"author":{"gitId":"nicholastng010601"},"content":"  Pros: Will be faster to implement.","lastModifiedDate":"2023-10-26"},{"lineNumber":443,"author":{"gitId":"nicholastng010601"},"content":"  Cons: User might be unsure why the function went wrong.","lastModifiedDate":"2023-10-26"},{"lineNumber":444,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":445,"author":{"gitId":"nicholastng010601"},"content":"**Aspect: How to Handle Multiple Time Inputs**","lastModifiedDate":"2023-10-26"},{"lineNumber":446,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":447,"author":{"gitId":"nicholastng010601"},"content":"* Alternative 1 (current choice): Parse each time input one by one and execute the commands.","lastModifiedDate":"2023-10-26"},{"lineNumber":448,"author":{"gitId":"nicholastng010601"},"content":"  Pros: More user-friendly and efficient as users can delete more time intervals at once.","lastModifiedDate":"2023-10-26"},{"lineNumber":449,"author":{"gitId":"nicholastng010601"},"content":"  Cons: More expensive as more functions will be called to parse the inputs.","lastModifiedDate":"2023-10-26"},{"lineNumber":450,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":451,"author":{"gitId":"nicholastng010601"},"content":"* Alternative 2: Allow only single input.","lastModifiedDate":"2023-10-26"},{"lineNumber":452,"author":{"gitId":"nicholastng010601"},"content":"  Pros: Faster as fewer functions are called.","lastModifiedDate":"2023-10-26"},{"lineNumber":453,"author":{"gitId":"nicholastng010601"},"content":"  Cons: Not as user-friendly since users will have to delete time intervals one by one.","lastModifiedDate":"2023-10-26"},{"lineNumber":454,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":455,"author":{"gitId":"nicholastng010601"},"content":"**Aspect: How to Handle Errors in Time Intervals**","lastModifiedDate":"2023-10-26"},{"lineNumber":456,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":457,"author":{"gitId":"nicholastng010601"},"content":"* Alternative 1 (current choice): Delete the time intervals that are correct and return the intervals that are wrong.","lastModifiedDate":"2023-10-26"},{"lineNumber":458,"author":{"gitId":"nicholastng010601"},"content":"  Pros: Better user experience as users need not rewrite intervals that were right.","lastModifiedDate":"2023-10-26"},{"lineNumber":459,"author":{"gitId":"nicholastng010601"},"content":"  Cons: Increased memory usage to store the errors.","lastModifiedDate":"2023-10-26"},{"lineNumber":460,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":461,"author":{"gitId":"nicholastng010601"},"content":"* Alternative 2: Do not carry out the delete at all.","lastModifiedDate":"2023-10-26"},{"lineNumber":462,"author":{"gitId":"nicholastng010601"},"content":"  Pros: More time and memory efficient.","lastModifiedDate":"2023-10-26"},{"lineNumber":463,"author":{"gitId":"nicholastng010601"},"content":"  Cons: Not as user-friendly since users will have to delete time intervals that were originally correct, wasting their time.","lastModifiedDate":"2023-10-26"},{"lineNumber":464,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":465,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":466,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":467,"author":{"gitId":"ZD292"},"content":"### [Proposed] Group Person","lastModifiedDate":"2023-10-26"},{"lineNumber":468,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":469,"author":{"gitId":"ZD292"},"content":"#### Proposed Implementation","lastModifiedDate":"2023-10-26"},{"lineNumber":470,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":471,"author":{"gitId":"ZD292"},"content":"The group remark mechanism is facilitated by `Group`. It is stored internally as a `Group Remark`. This operation is exposed in the `Model` interface as `Model#groupPerson(personName, groupName)`.","lastModifiedDate":"2023-10-26"},{"lineNumber":472,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":473,"author":{"gitId":"ZD292"},"content":"Given below is an example usage scenario and how the group remark mechanism behaves at each step.","lastModifiedDate":"2023-10-26"},{"lineNumber":474,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":475,"author":{"gitId":"ZD292"},"content":"**Step 1:** User launches the application.","lastModifiedDate":"2023-10-26"},{"lineNumber":476,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":477,"author":{"gitId":"ZD292"},"content":"**Step 2:** The user executes `group n/personName g/groupName` to group a person `personName` into group `groupName`. `GroupPersonCommandParser` parses the personName and groupName ensuring the input is valid and creates a `GroupPersonCommand`, which calls `Model#groupPerson(personName, groupName)`. The model retrieves the existing person and group from the addressBook. Should a person or group not exist, it throws an error. Model calls `Model#assignGroup(Person person, Group group)` which adds a group to a person\u0027s groupList and person to the personList in group.","lastModifiedDate":"2023-10-26"},{"lineNumber":478,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":479,"author":{"gitId":"ZD292"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2023-10-26"},{"lineNumber":480,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":481,"author":{"gitId":"ZD292"},"content":"#### Design Considerations:","lastModifiedDate":"2023-10-26"},{"lineNumber":482,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":483,"author":{"gitId":"ZD292"},"content":"**Aspect: Whether to store references in both person and group**","lastModifiedDate":"2023-10-26"},{"lineNumber":484,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":485,"author":{"gitId":"ZD292"},"content":"* **Alternative 1 (current choice):** Store references in both person and group","lastModifiedDate":"2023-10-26"},{"lineNumber":486,"author":{"gitId":"ZD292"},"content":"    * Pros: Easy to implement. More efficient when searching.","lastModifiedDate":"2023-10-26"},{"lineNumber":487,"author":{"gitId":"ZD292"},"content":"    * Cons: More bug-prone. May have object referencing and loading from storage issues as both the person reference to group, and group reference to person has to be loaded properly.","lastModifiedDate":"2023-10-26"},{"lineNumber":488,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":489,"author":{"gitId":"ZD292"},"content":"* **Alternative 2:** Store reference to the other entity, e.g. store a list of groups in person.","lastModifiedDate":"2023-10-26"},{"lineNumber":490,"author":{"gitId":"ZD292"},"content":"    * Pros: Easier to load from storage. One centralized place to store data. Less coupling.","lastModifiedDate":"2023-10-26"},{"lineNumber":491,"author":{"gitId":"ZD292"},"content":"    * Cons: Searching might become more costly.","lastModifiedDate":"2023-10-26"},{"lineNumber":492,"author":{"gitId":"ZD292"},"content":"  ","lastModifiedDate":"2023-10-26"},{"lineNumber":493,"author":{"gitId":"ZD292"},"content":"* --------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-10-26"},{"lineNumber":494,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":495,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":496,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":497,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":498,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":499,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":500,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":501,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":502,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":503,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":504,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":505,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":506,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":507,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":508,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":509,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":510,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":511,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":512,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":513,"author":{"gitId":"nicholastng010601"},"content":"* University students often spend a lot of time coordinating project meetup","lastModifiedDate":"2023-10-04"},{"lineNumber":514,"author":{"gitId":"nicholastng010601"},"content":"* sessions and waiting for replies and they are not aware of one another’s schedules.","lastModifiedDate":"2023-10-04"},{"lineNumber":515,"author":{"gitId":"nicholastng010601"},"content":"* This app can help to save time by listing available time slots of individuals in a team.","lastModifiedDate":"2023-10-04"},{"lineNumber":516,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":517,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":518,"author":{"gitId":"nicholastng010601"},"content":"**Value proposition**: Text-friendly project management tool that helps students schedule meetings with different groups while also keeping track of tasks and ","lastModifiedDate":"2023-10-04"},{"lineNumber":519,"author":{"gitId":"nicholastng010601"},"content":"responsibilities of each member. Our app will track the schedule of each contact and tasks individuals have to do for their project.","lastModifiedDate":"2023-10-04"},{"lineNumber":520,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":521,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":522,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":523,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":524,"author":{"gitId":"nicholastng010601"},"content":"| Priority | As a ...                                    | I want to ...                | So that I can ...                                                      |","lastModifiedDate":"2023-10-04"},{"lineNumber":525,"author":{"gitId":"-"},"content":"|----------|--------------------------------------------|------------------------------|------------------------------------------------------------------------|","lastModifiedDate":"2023-09-12"},{"lineNumber":526,"author":{"gitId":"nicholastng010601"},"content":"| `***`    | student                                    | add a new contact            | keep track of any new contacts                                         |","lastModifiedDate":"2023-10-04"},{"lineNumber":527,"author":{"gitId":"nicholastng010601"},"content":"| `***`    | student with many contacts                 | organize contacts into groups | easily keep track and manage my contacts                               |","lastModifiedDate":"2023-10-04"},{"lineNumber":528,"author":{"gitId":"nicholastng010601"},"content":"| `***`    | student with many team members             | record team members\u0027 info     | keep track of my team members\u0027 contact information                     |","lastModifiedDate":"2023-10-04"},{"lineNumber":529,"author":{"gitId":"nicholastng010601"},"content":"| `***`    | student with many projects                 | delete a group               | avoid clutter and unnecessary attention to completed projects          |","lastModifiedDate":"2023-10-04"},{"lineNumber":530,"author":{"gitId":"lerxuann"},"content":"| `***`    | student with many contacts                 | search for group members     | quickly access contact details using name, contact number              |","lastModifiedDate":"2023-10-07"},{"lineNumber":531,"author":{"gitId":"nicholastng010601"},"content":"| `***`    | user                                       | save entered information      | avoid repetitive data entry                                            |","lastModifiedDate":"2023-10-04"},{"lineNumber":532,"author":{"gitId":"nicholastng010601"},"content":"| `**`     | team leader                                | add tasks to contacts        | remember who is responsible for which task                             |","lastModifiedDate":"2023-10-04"},{"lineNumber":533,"author":{"gitId":"nicholastng010601"},"content":"| `**`     | student                                    | filter contacts by project   | easily view tasks for a specific project group                         |","lastModifiedDate":"2023-10-04"},{"lineNumber":534,"author":{"gitId":"nicholastng010601"},"content":"| `**`     | user                                       | prioritize tasks             | work on important tasks first                                          |","lastModifiedDate":"2023-10-04"},{"lineNumber":535,"author":{"gitId":"nicholastng010601"},"content":"| `**`     | student                                    | add time slots of group mates| find a suitable meeting time when everyone is available                |","lastModifiedDate":"2023-10-04"},{"lineNumber":536,"author":{"gitId":"nicholastng010601"},"content":"| `**`     | new user                                   | access a help command        | quickly learn about application functions without reading a long guide |","lastModifiedDate":"2023-10-04"},{"lineNumber":537,"author":{"gitId":"nicholastng010601"},"content":"| `*`      | impatient user                             | access the user guide        | quickly learn how to use the application                               |","lastModifiedDate":"2023-10-04"},{"lineNumber":538,"author":{"gitId":"nicholastng010601"},"content":"| `*`      | technology-challenged student              | read the user guide          | gain a better understanding of how to use the application              |","lastModifiedDate":"2023-10-04"},{"lineNumber":539,"author":{"gitId":"nicholastng010601"},"content":"| `*`      | fast but inaccurate typer                  | undo a previous command      | correct typing mistakes                                                |","lastModifiedDate":"2023-10-04"},{"lineNumber":540,"author":{"gitId":"nicholastng010601"},"content":"| `*`      | forgetful student                          | add a reminder               | ensure attendance at upcoming project meetings                         |","lastModifiedDate":"2023-10-04"},{"lineNumber":541,"author":{"gitId":"nicholastng010601"},"content":"| `*`      | student with many projects                 | color code projects          | differentiate between various project groups                           |","lastModifiedDate":"2023-10-04"},{"lineNumber":542,"author":{"gitId":"nicholastng010601"},"content":"| `*`      | lazy user                                  | minimize typing/clicking     | achieve tasks with minimal effort                                      |","lastModifiedDate":"2023-10-04"},{"lineNumber":543,"author":{"gitId":"nicholastng010601"},"content":"| `*`      | student with an irregular schedule         | edit contact information     | easily manage changes in contact details                               |","lastModifiedDate":"2023-10-04"},{"lineNumber":544,"author":{"gitId":"nicholastng010601"},"content":"| `*`      | user                                       | filter contacts by courses   | view contacts based on shared courses or projects                      |","lastModifiedDate":"2023-10-04"},{"lineNumber":545,"author":{"gitId":"nicholastng010601"},"content":"| `*`      | user                                       | upload attachments/files     | improve collaboration and reference for tasks and projects             |","lastModifiedDate":"2023-10-04"},{"lineNumber":546,"author":{"gitId":"nicholastng010601"},"content":"| `*`      | user                                       | view contact profiles        | access course schedules, contact details, and profile pictures         |","lastModifiedDate":"2023-10-04"},{"lineNumber":547,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":548,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":549,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":550,"author":{"gitId":"lerxuann"},"content":"(For all use cases below, the **System** is `ProjectPRO` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2023-10-07"},{"lineNumber":551,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":552,"author":{"gitId":"lerxuann"},"content":"**Use case: Creating contact**","lastModifiedDate":"2023-10-07"},{"lineNumber":553,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":554,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":555,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":556,"author":{"gitId":"lerxuann"},"content":"1. User requests to add contact","lastModifiedDate":"2023-10-07"},{"lineNumber":557,"author":{"gitId":"lerxuann"},"content":"2. ProjectPRO adds new contact","lastModifiedDate":"2023-10-07"},{"lineNumber":558,"author":{"gitId":"lerxuann"},"content":"3. User gets back success command result ","lastModifiedDate":"2023-10-07"},{"lineNumber":559,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":560,"author":{"gitId":"lerxuann"},"content":"   Use Case ends.","lastModifiedDate":"2023-10-07"},{"lineNumber":561,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":562,"author":{"gitId":"lerxuann"},"content":"**Extensions:**","lastModifiedDate":"2023-10-07"},{"lineNumber":563,"author":{"gitId":"lerxuann"},"content":"* 1a.  System detects error in input","lastModifiedDate":"2023-10-07"},{"lineNumber":564,"author":{"gitId":"lerxuann"},"content":"    * 1a1.  User gets error message","lastModifiedDate":"2023-10-07"},{"lineNumber":565,"author":{"gitId":"lerxuann"},"content":"    * Use case repeats from step 1","lastModifiedDate":"2023-10-07"},{"lineNumber":566,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":567,"author":{"gitId":"lerxuann"},"content":"* 1b. System detects duplicate contact requested by user.","lastModifiedDate":"2023-10-07"},{"lineNumber":568,"author":{"gitId":"lerxuann"},"content":"    * 1b1. System displays corresponding error message. ","lastModifiedDate":"2023-10-07"},{"lineNumber":569,"author":{"gitId":"lerxuann"},"content":"    * Use case ends.","lastModifiedDate":"2023-10-07"},{"lineNumber":570,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":571,"author":{"gitId":"lerxuann"},"content":"    ","lastModifiedDate":"2023-10-07"},{"lineNumber":572,"author":{"gitId":"lerxuann"},"content":"**Use case: Delete contact**","lastModifiedDate":"2023-10-07"},{"lineNumber":573,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":574,"author":{"gitId":"lerxuann"},"content":"**MSS**","lastModifiedDate":"2023-10-07"},{"lineNumber":575,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":576,"author":{"gitId":"lerxuann"},"content":"1. User requests to delete contact ","lastModifiedDate":"2023-10-07"},{"lineNumber":577,"author":{"gitId":"lerxuann"},"content":"2. System deletes contact. ","lastModifiedDate":"2023-10-07"},{"lineNumber":578,"author":{"gitId":"lerxuann"},"content":"3. System produces a success message.","lastModifiedDate":"2023-10-07"},{"lineNumber":579,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":580,"author":{"gitId":"lerxuann"},"content":"   Use Case ends","lastModifiedDate":"2023-10-07"},{"lineNumber":581,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":582,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":583,"author":{"gitId":"lerxuann"},"content":"* 1a. System detects incorrect data entered. ","lastModifiedDate":"2023-10-07"},{"lineNumber":584,"author":{"gitId":"lerxuann"},"content":"    * 1a1. System requests for the correct data. ","lastModifiedDate":"2023-10-07"},{"lineNumber":585,"author":{"gitId":"lerxuann"},"content":"    * 1a2. User enters new data ","lastModifiedDate":"2023-10-07"},{"lineNumber":586,"author":{"gitId":"lerxuann"},"content":"    * 1a3. Steps 1a1-1a2 are repeated until the data entered are correct.","lastModifiedDate":"2023-10-07"},{"lineNumber":587,"author":{"gitId":"lerxuann"},"content":"    * Use case resumes from step 2.","lastModifiedDate":"2023-10-07"},{"lineNumber":588,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":589,"author":{"gitId":"lerxuann"},"content":"**Use case: Add contact to group**","lastModifiedDate":"2023-10-07"},{"lineNumber":590,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":591,"author":{"gitId":"lerxuann"},"content":"**MSS**","lastModifiedDate":"2023-10-07"},{"lineNumber":592,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":593,"author":{"gitId":"lerxuann"},"content":"1. User requests to add a contact into a group. ","lastModifiedDate":"2023-10-07"},{"lineNumber":594,"author":{"gitId":"lerxuann"},"content":"2. System adds user into the group successfully. ","lastModifiedDate":"2023-10-07"},{"lineNumber":595,"author":{"gitId":"lerxuann"},"content":"3. System displays a success message.","lastModifiedDate":"2023-10-07"},{"lineNumber":596,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":597,"author":{"gitId":"lerxuann"},"content":"   Use Case ends","lastModifiedDate":"2023-10-07"},{"lineNumber":598,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":599,"author":{"gitId":"lerxuann"},"content":"**Extensions**","lastModifiedDate":"2023-10-07"},{"lineNumber":600,"author":{"gitId":"lerxuann"},"content":"* 1a. System detects an error in the data entered.","lastModifiedDate":"2023-10-07"},{"lineNumber":601,"author":{"gitId":"lerxuann"},"content":"    * 1a1. System requests for the correct data. ","lastModifiedDate":"2023-10-07"},{"lineNumber":602,"author":{"gitId":"lerxuann"},"content":"    * 1a2. User enters new data ","lastModifiedDate":"2023-10-07"},{"lineNumber":603,"author":{"gitId":"lerxuann"},"content":"    * 1a3. Steps 1a1-1a2 are repeated until the data entered are correct. ","lastModifiedDate":"2023-10-07"},{"lineNumber":604,"author":{"gitId":"lerxuann"},"content":"    * Use case resumes from step 2.","lastModifiedDate":"2023-10-07"},{"lineNumber":605,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":606,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":607,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":608,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":609,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":610,"author":{"gitId":"nicholastng010601"},"content":"1. Should work on any mainstream OS as long as it has Java 11 or above installed.","lastModifiedDate":"2023-10-04"},{"lineNumber":611,"author":{"gitId":"-"},"content":"2. Should be able to hold up to 1000 persons without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":612,"author":{"gitId":"-"},"content":"3. A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2020-05-23"},{"lineNumber":613,"author":{"gitId":"nicholastng010601"},"content":"4. Should be able to save the state of the user’s actions.","lastModifiedDate":"2023-10-04"},{"lineNumber":614,"author":{"gitId":"nicholastng010601"},"content":"5. Should be able to handle an increasing number of contacts and events without a significant degradation in performance.","lastModifiedDate":"2023-10-04"},{"lineNumber":615,"author":{"gitId":"nicholastng010601"},"content":"6. Data loss or corruption should not occur, even in the event of unexpected crashes or system failures.","lastModifiedDate":"2023-10-04"},{"lineNumber":616,"author":{"gitId":"nicholastng010601"},"content":"7. Should not support any online features. No user actions or data manipulation should require online features.","lastModifiedDate":"2023-10-04"},{"lineNumber":617,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":618,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":619,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":620,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2020-05-23"},{"lineNumber":621,"author":{"gitId":"nicholastng010601"},"content":"* **Java 11**: Programming language","lastModifiedDate":"2023-10-04"},{"lineNumber":622,"author":{"gitId":"-"},"content":"* **Private contact detail**: A contact detail that is not meant to be shared with others","lastModifiedDate":"2020-05-23"},{"lineNumber":623,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":624,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":625,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":626,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":627,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":628,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":629,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":630,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":631,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":632,"author":{"gitId":"-"},"content":"**Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2023-09-12"},{"lineNumber":633,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":634,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":635,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":636,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":637,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":638,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":639,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":640,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":641,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":642,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":643,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":644,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":645,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":646,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":647,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":648,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":649,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":650,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":651,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":652,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":653,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":654,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":655,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":656,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23"},{"lineNumber":657,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":658,"author":{"gitId":"-"},"content":"   1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23"},{"lineNumber":659,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":660,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":661,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":662,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":663,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":664,"author":{"gitId":"-"},"content":"      Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":665,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":666,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":667,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":668,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":669,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":670,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":671,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":672,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":673,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":674,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":675,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":676,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":677,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"Kailash201":28,"coderhuang559":30,"ZD292":57,"lerxuann":121,"nicholastng010601":86,"-":355}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"User Guide\"","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"  pageNav: 3","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"lerxuann"},"content":"# ProjectPRO User Guide","lastModifiedDate":"2023-10-04"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"lerxuann"},"content":"Text-friendly project management tool that helps students schedule meetings with different groups while also keeping track of tasks and responsibilities of each member. Our app will track the schedule of each contact and tasks individuals have to do for their project.","lastModifiedDate":"2023-10-04"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":11,"author":{"gitId":"lerxuann"},"content":"This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2023-10-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003c!-- * Table of Contents --\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003cpage-nav-print /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"coderhuang559"},"content":"2. Download the latest `ProjectPRO.jar` from [here](https://github.com/AY2324S1-CS2103T-T10-3/tp/releases).","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"coderhuang559"},"content":"3. Copy the file to the folder you want to use as the _home folder_.","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"coderhuang559"},"content":"4. Open a command terminal, `cd` into the folder you put the jar file in, and use the `java -jar ProjectPRO.jar` command to run the application.\u003cbr\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"-"},"content":"   A GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2023-01-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"coderhuang559"},"content":"5. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"   * `list` : Lists all contacts.","lastModifiedDate":"2023-01-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"lerxuann"},"content":"   * `add n/John Doe p/98765432 e/johnd@example.com` : Adds a contact named `John Doe` to the contact list.","lastModifiedDate":"2023-10-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"   * `delete 3` : Deletes the 3rd contact shown in the current list.","lastModifiedDate":"2023-01-01"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"   * `clear` : Deletes all contacts.","lastModifiedDate":"2023-01-01"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"   * `exit` : Exits the app.","lastModifiedDate":"2023-01-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"coderhuang559"},"content":"6. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"**Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"  e.g. in `add n/NAME`, `NAME` is a parameter which can be used as `add n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"  e.g `n/NAME [t/TAG]` can be used as `n/John Doe t/friend` or as `n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"* Items with `…`​ after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"  e.g. `[t/TAG]…​` can be used as ` ` (i.e. 0 times), `t/friend`, `t/friend t/family` etc.","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable.","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, `exit` and `clear`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2021-02-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-02-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"* If you are using a PDF version of this document, be careful when copying and pasting commands that span multiple lines as space characters surrounding line-breaks may be omitted when copied over to the application.","lastModifiedDate":"2023-06-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"### Viewing help : `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"lerxuann"},"content":"Shows a message explaining how to access the help page.","lastModifiedDate":"2023-10-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"![help message](images/helpMessage.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"Format: `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"### Adding a person: `add`","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"lerxuann"},"content":"Adds a person to the contact list.","lastModifiedDate":"2023-10-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"Kailash201"},"content":"Format: `add n/NAME p/PHONE_NUMBER e/EMAIL [g/GROUPNAME]​`","lastModifiedDate":"2023-10-04"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"tip\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":86,"author":{"gitId":"Kailash201"},"content":"**Tip:** A person can be added with or without a group","lastModifiedDate":"2023-10-04"},{"lineNumber":87,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"Kailash201"},"content":"Acceptable values: phone number should be an 8 digit integer, while other parameters be strings.","lastModifiedDate":"2023-10-04"},{"lineNumber":90,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":91,"author":{"gitId":"Kailash201"},"content":"Names should be unique, no two contacts should have the same name input.","lastModifiedDate":"2023-10-04"},{"lineNumber":92,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":93,"author":{"gitId":"Kailash201"},"content":"Expected output when succeeds: “Contact successfully added”","lastModifiedDate":"2023-10-04"},{"lineNumber":94,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":95,"author":{"gitId":"Kailash201"},"content":"Expected output when fails: “Error, invalid input entered”","lastModifiedDate":"2023-10-04"},{"lineNumber":96,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":97,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"Kailash201"},"content":"* `add n/Adam Lee p/81112222 e/adam@example.com g/cs2103 g/cs2101`","lastModifiedDate":"2023-10-04"},{"lineNumber":99,"author":{"gitId":"Kailash201"},"content":"* `add n/Brian p/98765432 e/brian@example.com`","lastModifiedDate":"2023-10-04"},{"lineNumber":100,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"### Listing all persons : `list`","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"lerxuann"},"content":"Shows a list of all persons in the contact list.","lastModifiedDate":"2023-10-07"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"Format: `list`","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"### Editing a person : `edit`","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"lerxuann"},"content":"Edits an existing person in the contact list.","lastModifiedDate":"2023-10-07"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"lerxuann"},"content":"Format: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [t/TAG]…​`","lastModifiedDate":"2023-10-07"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"* Edits the person at the specified `INDEX`. The index refers to the index number shown in the displayed person list. The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"* When editing tags, the existing tags of the person will be removed i.e adding of tags is not cumulative.","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"* You can remove all the person’s tags by typing `t/` without","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    specifying any tags after it.","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"*  `edit 1 p/91234567 e/johndoe@example.com` Edits the phone number and email address of the 1st person to be `91234567` and `johndoe@example.com` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"*  `edit 2 n/Betsy Crower t/` Edits the name of the 2nd person to be `Betsy Crower` and clears all existing tags.","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"### Locating persons by name: `find`","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"Finds persons whose names contain any of the given keywords.","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"Format: `find KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"* The search is case-insensitive. e.g `hans` will match `Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"* The order of the keywords does not matter. e.g. `Hans Bo` will match `Bo Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"* Only the name is searched.","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"* Only full words will be matched e.g. `Han` will not match `Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"* Persons matching at least one keyword will be returned (i.e. `OR` search).","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"  e.g. `Hans Bo` will return `Hans Gruber`, `Bo Yang`","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"* `find John` returns `john` and `John Doe`","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"* `find alex david` returns `Alex Yeoh`, `David Li`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"  ![result for \u0027find alex david\u0027](images/findAlexDavidResult.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"### Deleting a person : `delete`","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"lerxuann"},"content":"Deletes the specified contact from the contact list. (This contact will also be removed from any existing groups.)","lastModifiedDate":"2023-10-04"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"lerxuann"},"content":"Format: `delete NAME`","lastModifiedDate":"2023-10-04"},{"lineNumber":148,"author":{"gitId":"lerxuann"},"content":"* Deletes the contact with the specified NAME","lastModifiedDate":"2023-10-04"},{"lineNumber":149,"author":{"gitId":"lerxuann"},"content":"* NAME has to be unique (no existing contact with same name)","lastModifiedDate":"2023-10-04"},{"lineNumber":150,"author":{"gitId":"lerxuann"},"content":"* NAME has to be an exact match","lastModifiedDate":"2023-10-04"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"lerxuann"},"content":"* `delete Gerald (cs2101)`","lastModifiedDate":"2023-10-04"},{"lineNumber":154,"author":{"gitId":"lerxuann"},"content":"* `delete jane`","lastModifiedDate":"2023-10-04"},{"lineNumber":155,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":156,"author":{"gitId":"lerxuann"},"content":"Acceptable values: `NAME should be a string.`","lastModifiedDate":"2023-10-04"},{"lineNumber":157,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":158,"author":{"gitId":"lerxuann"},"content":"Expected output when succeeds: `Contact successfully deleted`","lastModifiedDate":"2023-10-04"},{"lineNumber":159,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":160,"author":{"gitId":"lerxuann"},"content":"Expected output when fails: `Error, invalid input entered`","lastModifiedDate":"2023-10-04"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"ZD292"},"content":"### Add contacts to groups: `group`","lastModifiedDate":"2023-10-04"},{"lineNumber":163,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":164,"author":{"gitId":"ZD292"},"content":"Add a contact to a group.","lastModifiedDate":"2023-10-04"},{"lineNumber":165,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":166,"author":{"gitId":"ZD292"},"content":"Format: `group n/NAME g/GROUPNAME`","lastModifiedDate":"2023-10-04"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":168,"author":{"gitId":"ZD292"},"content":"* Add the contact with given `NAME` from the given `GROUPNAME`","lastModifiedDate":"2023-10-04"},{"lineNumber":169,"author":{"gitId":"ZD292"},"content":"* If group or name does not exist, print error","lastModifiedDate":"2023-10-04"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":171,"author":{"gitId":"ZD292"},"content":"Acceptable values:","lastModifiedDate":"2023-10-04"},{"lineNumber":172,"author":{"gitId":"ZD292"},"content":"* `NAME` and `GROUPNAME` are strings","lastModifiedDate":"2023-10-04"},{"lineNumber":173,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":174,"author":{"gitId":"ZD292"},"content":"Example(s):","lastModifiedDate":"2023-10-04"},{"lineNumber":175,"author":{"gitId":"ZD292"},"content":"* `group n/John g/cs2101 tut`","lastModifiedDate":"2023-10-04"},{"lineNumber":176,"author":{"gitId":"ZD292"},"content":"* `group n/samantha tan g/saturday 9am yoga`","lastModifiedDate":"2023-10-04"},{"lineNumber":177,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":178,"author":{"gitId":"ZD292"},"content":"Expected outputs when it succeeds: `John is now part of group cs2101.`","lastModifiedDate":"2023-10-04"},{"lineNumber":179,"author":{"gitId":"ZD292"},"content":"Expected output when fails: `Error, invalid input entered`","lastModifiedDate":"2023-10-04"},{"lineNumber":180,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":181,"author":{"gitId":"coderhuang559"},"content":"### Remove contacts from groups: `ungroup`","lastModifiedDate":"2023-10-04"},{"lineNumber":182,"author":{"gitId":"coderhuang559"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":183,"author":{"gitId":"coderhuang559"},"content":"Removes a contact from a group.","lastModifiedDate":"2023-10-04"},{"lineNumber":184,"author":{"gitId":"coderhuang559"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":185,"author":{"gitId":"coderhuang559"},"content":"Format: `ungroup n/NAME g/GROUPNAME`","lastModifiedDate":"2023-10-04"},{"lineNumber":186,"author":{"gitId":"coderhuang559"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":187,"author":{"gitId":"coderhuang559"},"content":"* Deletes the contact with given `NAME` from the given `GROUPNAME`","lastModifiedDate":"2023-10-04"},{"lineNumber":188,"author":{"gitId":"coderhuang559"},"content":"* If group or name does not exist, print error","lastModifiedDate":"2023-10-04"},{"lineNumber":189,"author":{"gitId":"coderhuang559"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":190,"author":{"gitId":"coderhuang559"},"content":"Acceptable values:","lastModifiedDate":"2023-10-04"},{"lineNumber":191,"author":{"gitId":"coderhuang559"},"content":"* `NAME` and `GROUPNAME` are strings","lastModifiedDate":"2023-10-04"},{"lineNumber":192,"author":{"gitId":"coderhuang559"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":193,"author":{"gitId":"coderhuang559"},"content":"Example(s): ","lastModifiedDate":"2023-10-04"},{"lineNumber":194,"author":{"gitId":"coderhuang559"},"content":"* `ungroup n/John g/cs2101 tut`","lastModifiedDate":"2023-10-04"},{"lineNumber":195,"author":{"gitId":"coderhuang559"},"content":"* `ungroup n/samantha tan g/saturday 9am yoga`","lastModifiedDate":"2023-10-04"},{"lineNumber":196,"author":{"gitId":"coderhuang559"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":197,"author":{"gitId":"coderhuang559"},"content":"Expected outputs when it succeeds: `John has been removed from cs2101 tut.`","lastModifiedDate":"2023-10-04"},{"lineNumber":198,"author":{"gitId":"coderhuang559"},"content":"Expected output when fails: `Error, invalid input entered`","lastModifiedDate":"2023-10-04"},{"lineNumber":199,"author":{"gitId":"coderhuang559"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":200,"author":{"gitId":"nicholastng010601"},"content":"### Create a new group : `new`","lastModifiedDate":"2023-10-04"},{"lineNumber":201,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":202,"author":{"gitId":"nicholastng010601"},"content":"Creates a new group with group name provided.","lastModifiedDate":"2023-10-04"},{"lineNumber":203,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":204,"author":{"gitId":"nicholastng010601"},"content":"Format: `new g/GROUPNAME`","lastModifiedDate":"2023-10-04"},{"lineNumber":205,"author":{"gitId":"nicholastng010601"},"content":"* Creates a new group with group name provided. ","lastModifiedDate":"2023-10-04"},{"lineNumber":206,"author":{"gitId":"nicholastng010601"},"content":"* GROUPNAME has to be unique (not an existing group)","lastModifiedDate":"2023-10-04"},{"lineNumber":207,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":208,"author":{"gitId":"nicholastng010601"},"content":"Expected output when succeeds: New group added: GROUPNAME\u003cbr\u003e","lastModifiedDate":"2023-10-04"},{"lineNumber":209,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":210,"author":{"gitId":"lerxuann"},"content":"Expected output when fails: This group already exists in the contact list.\u003cbr\u003e","lastModifiedDate":"2023-10-07"},{"lineNumber":211,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":212,"author":{"gitId":"nicholastng010601"},"content":"Expected output when fails: Invalid command format","lastModifiedDate":"2023-10-04"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":214,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2023-10-04"},{"lineNumber":215,"author":{"gitId":"nicholastng010601"},"content":"* `new g/CS2103T` Creates a new group named CS2103T","lastModifiedDate":"2023-10-04"},{"lineNumber":216,"author":{"gitId":"nicholastng010601"},"content":"* `new g/CS2101_OP1` Creates a new group named CS2101_OP1","lastModifiedDate":"2023-10-04"},{"lineNumber":217,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":219,"author":{"gitId":"-"},"content":"### Clearing all entries : `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"lerxuann"},"content":"Clears all entries from the contact list.","lastModifiedDate":"2023-10-07"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"Format: `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"### Exiting the program : `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"lerxuann"},"content":"All data is saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2023-10-07"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"### Editing the data file","lastModifiedDate":"2021-02-04"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":237,"author":{"gitId":"lerxuann"},"content":"All data is saved automatically as a JSON file. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2023-10-07"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":239,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"warning\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":241,"author":{"gitId":"-"},"content":"**Caution:**","lastModifiedDate":"2023-09-12"},{"lineNumber":242,"author":{"gitId":"lerxuann"},"content":"If your changes to the data file makes its format invalid, ProjectPRO will discard all data and start with an empty data file at the next run.  Hence, it is recommended to take a backup of the file before editing it.","lastModifiedDate":"2023-10-07"},{"lineNumber":243,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":245,"author":{"gitId":"-"},"content":"### Archiving data files `[coming in v2.0]`","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"_Details coming soon ..._","lastModifiedDate":"2021-02-04"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"lerxuann"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous ProjectPRO home folder.","lastModifiedDate":"2023-10-07"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"## Known issues","lastModifiedDate":"2023-09-08"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":260,"author":{"gitId":"-"},"content":"1. **When using multiple screens**, if you move the application to a secondary screen, and later switch to using only the primary screen, the GUI will open off-screen. The remedy is to delete the `preferences.json` file created by the application before running the application again.","lastModifiedDate":"2023-09-08"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":262,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-09-08"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":264,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"Action     | Format, Examples","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"-----------|----------------------------------------------------------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-09-12"},{"lineNumber":268,"author":{"gitId":"ZD292"},"content":"**Add**    | `add n/NAME p/PHONE_NUMBER e/EMAIL [g/GROUPNAME]` \u003cbr\u003e e.g., `add n/Adam Lee p/81112222 e/jamesho@example.com, g/cs2103`","lastModifiedDate":"2023-10-04"},{"lineNumber":269,"author":{"gitId":"-"},"content":"**Clear**  | `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"ZD292"},"content":"**Delete** | `delete NAME`\u003cbr\u003e e.g., `delete nicholas`","lastModifiedDate":"2023-10-04"},{"lineNumber":271,"author":{"gitId":"lerxuann"},"content":"**Edit**   | `edit INDEX [n/NAME] [p/PHONE_NUMBER] [e/EMAIL] [t/TAG]…​`\u003cbr\u003e e.g.,`edit 2 n/James Lee e/jameslee@example.com`","lastModifiedDate":"2023-10-07"},{"lineNumber":272,"author":{"gitId":"-"},"content":"**Find**   | `find KEYWORD [MORE_KEYWORDS]`\u003cbr\u003e e.g., `find James Jake`","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"ZD292"},"content":"**Group**   | `group n/NAME g/GROUPNAME`\u003cbr\u003e e.g., `group n/John g/cs2103 tut` ","lastModifiedDate":"2023-10-04"},{"lineNumber":274,"author":{"gitId":"ZD292"},"content":"**Ungroup**   | `ungroup n/NAME g/GROUPNAME`\u003cbr\u003e e.g., `ungroup n/John g/cs2103 tut` ","lastModifiedDate":"2023-10-04"},{"lineNumber":275,"author":{"gitId":"nicholastng010601"},"content":"**New**    | `new g/GROUPNAME`\u003cbr\u003e e.g., `new g/cs2103`","lastModifiedDate":"2023-10-04"},{"lineNumber":276,"author":{"gitId":"-"},"content":"**List**   | `list`","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"**Help**   | `help`","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"Kailash201":13,"coderhuang559":24,"ZD292":21,"lerxuann":29,"nicholastng010601":16,"-":174}},{"path":"docs/_markbind/layouts/default.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003chead-bottom\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \u003clink rel\u003d\"stylesheet\" href\u003d\"{{baseUrl}}/stylesheets/main.css\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c/head-bottom\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003cheader sticky\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"  \u003cnavbar type\u003d\"dark\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"Kailash201"},"content":"    \u003ca slot\u003d\"brand\" href\u003d\"{{baseUrl}}/index.html\" title\u003d\"Home\" class\u003d\"navbar-brand\"\u003eProjectPRO\u003c/a\u003e","lastModifiedDate":"2023-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    \u003cli\u003e\u003ca href\u003d\"{{baseUrl}}/UserGuide.html\" class\u003d\"nav-link\"\u003eUser Guide\u003c/a\u003e\u003c/li\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    \u003cli\u003e\u003ca href\u003d\"{{baseUrl}}/DeveloperGuide.html\" class\u003d\"nav-link\"\u003eDeveloper Guide\u003c/a\u003e\u003c/li\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    \u003cli\u003e\u003ca href\u003d\"{{baseUrl}}/AboutUs.html\" class\u003d\"nav-link\"\u003eAbout Us\u003c/a\u003e\u003c/li\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    \u003cli\u003e\u003ca href\u003d\"https://github.com/se-edu/addressbook-level3\" target\u003d\"_blank\" class\u003d\"nav-link\"\u003e\u003cmd\u003e:fab-github:\u003c/md\u003e\u003c/a\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    \u003c/li\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    \u003cli slot\u003d\"right\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"      \u003cform class\u003d\"navbar-form\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        \u003csearchbar :data\u003d\"searchData\" placeholder\u003d\"Search\" :on-hit\u003d\"searchCallback\" menu-align-right\u003e\u003c/searchbar\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"      \u003c/form\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003c/li\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  \u003c/navbar\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"\u003c/header\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"\u003cdiv id\u003d\"flex-body\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  \u003cnav id\u003d\"site-nav\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"site-nav-top\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"      \u003cdiv class\u003d\"fw-bold mb-2\" style\u003d\"font-size: 1.25rem;\"\u003eSite Map\u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    \u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"nav-component slim-scroll\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"      \u003csite-nav\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"* [Home]({{ baseUrl }}/index.html)","lastModifiedDate":"2023-09-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"* [User Guide]({{ baseUrl }}/UserGuide.html) :expanded:","lastModifiedDate":"2023-09-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  * [Quick Start]({{ baseUrl }}/UserGuide.html#quick-start)","lastModifiedDate":"2023-09-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  * [Features]({{ baseUrl }}/UserGuide.html#features)","lastModifiedDate":"2023-09-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  * [FAQ]({{ baseUrl }}/UserGuide.html#faq)","lastModifiedDate":"2023-09-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  * [Command Summary]({{ baseUrl }}/UserGuide.html#faq)","lastModifiedDate":"2023-09-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"* [Developer Guide]({{ baseUrl }}/DeveloperGuide.html) :expanded:","lastModifiedDate":"2023-09-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"  * [Acknowledgements]({{ baseUrl }}/DeveloperGuide.html#acknowledgements)","lastModifiedDate":"2023-09-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"  * [Setting Up]({{ baseUrl }}/DeveloperGuide.html#setting-up-getting-started)","lastModifiedDate":"2023-09-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"  * [Design]({{ baseUrl }}/DeveloperGuide.html#design)","lastModifiedDate":"2023-09-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"  * [Implementation]({{ baseUrl }}/DeveloperGuide.html#implementation)","lastModifiedDate":"2023-09-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"  * [Documentation, logging, testing, configuration, dev-ops]({{ baseUrl }}/DeveloperGuide.html#documentation-logging-testing-configuration-dev-ops)","lastModifiedDate":"2023-09-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"  * [Appendix: Requirements]({{ baseUrl }}/DeveloperGuide.html#appendix-requirements)","lastModifiedDate":"2023-09-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"  * [Appendix: Instructions for manual testing]({{ baseUrl }}/DeveloperGuide.html#appendix-instructions-for-manual-testing)","lastModifiedDate":"2023-09-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"* Tutorials","lastModifiedDate":"2023-09-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"  * [Tracing code]({{ baseUrl }}/tutorials/TracingCode.html)","lastModifiedDate":"2023-09-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"  * [Adding a command]({{ baseUrl }}/tutorials/AddRemark.html)","lastModifiedDate":"2023-09-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"  * [Removing Fields]({{ baseUrl }}/tutorials/RemovingFields.html)","lastModifiedDate":"2023-09-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"* [About Us]({{ baseUrl }}/AboutUs.html)","lastModifiedDate":"2023-09-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"      \u003c/site-nav\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    \u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"  \u003c/nav\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  \u003cdiv id\u003d\"content-wrapper\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    {{ content }}","lastModifiedDate":"2023-09-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"  \u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"  \u003cnav id\u003d\"page-nav\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"nav-component slim-scroll\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"      \u003cpage-nav /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    \u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"  \u003c/nav\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  \u003cscroll-top-button\u003e\u003c/scroll-top-button\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"\u003cfooter\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"  \u003c!-- Support MarkBind by including a link to us on your landing page! --\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"  \u003cdiv class\u003d\"text-center\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    \u003csmall\u003e[\u003cmd\u003e**Powered by**\u003c/md\u003e \u003cimg src\u003d\"https://markbind.org/favicon.ico\" width\u003d\"30\"\u003e {{MarkBind}}, generated on {{timestamp}}]\u003c/small\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"  \u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"\u003c/footer\u003e","lastModifiedDate":"2023-09-12"}],"authorContributionMap":{"Kailash201":1,"-":65}},{"path":"docs/diagrams/AddCommandSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Kailash201"},"content":"@startuml","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"Kailash201"},"content":"!include style.puml","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"Kailash201"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"Kailash201"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"Kailash201"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"Kailash201"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"Kailash201"},"content":"participant \":AddCommandParser\" as AddCommandParser LOGIC_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"Kailash201"},"content":"participant \"a:AddCommand\" as AddCommand LOGIC_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"Kailash201"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"Kailash201"},"content":"participant \"Alex Yeoh:Person\" as Person LOGIC_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"Kailash201"},"content":"participant \"g:Group\" as Group LOGIC_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"Kailash201"},"content":"end box","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"Kailash201"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"Kailash201"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"Kailash201"},"content":"participant \":AddressBook\" as AddressBook MODEL_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"Kailash201"},"content":"end box","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"Kailash201"},"content":"[-\u003e LogicManager : execute(Add n/Alex Yeoh ...)","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"Kailash201"},"content":"activate LogicManager","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"Kailash201"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(Add n/Alex Yeoh ...)","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"Kailash201"},"content":"activate AddressBookParser","lastModifiedDate":"2023-10-26"},{"lineNumber":25,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"Kailash201"},"content":"create AddCommandParser","lastModifiedDate":"2023-10-26"},{"lineNumber":27,"author":{"gitId":"Kailash201"},"content":"AddressBookParser -\u003e AddCommandParser","lastModifiedDate":"2023-10-26"},{"lineNumber":28,"author":{"gitId":"Kailash201"},"content":"activate AddCommandParser","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":30,"author":{"gitId":"Kailash201"},"content":"AddCommandParser --\u003e AddressBookParser","lastModifiedDate":"2023-10-26"},{"lineNumber":31,"author":{"gitId":"Kailash201"},"content":"deactivate AddCommandParser","lastModifiedDate":"2023-10-26"},{"lineNumber":32,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":33,"author":{"gitId":"Kailash201"},"content":"AddressBookParser -\u003e AddCommandParser : parse(n/Alex Yeoh ...)","lastModifiedDate":"2023-10-26"},{"lineNumber":34,"author":{"gitId":"Kailash201"},"content":"activate AddCommandParser","lastModifiedDate":"2023-10-26"},{"lineNumber":35,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":36,"author":{"gitId":"Kailash201"},"content":"create Person","lastModifiedDate":"2023-10-26"},{"lineNumber":37,"author":{"gitId":"Kailash201"},"content":"AddCommandParser -\u003e Person","lastModifiedDate":"2023-10-26"},{"lineNumber":38,"author":{"gitId":"Kailash201"},"content":"activate Person","lastModifiedDate":"2023-10-26"},{"lineNumber":39,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":40,"author":{"gitId":"Kailash201"},"content":"Person --\u003e AddCommandParser","lastModifiedDate":"2023-10-26"},{"lineNumber":41,"author":{"gitId":"Kailash201"},"content":"deactivate Person","lastModifiedDate":"2023-10-26"},{"lineNumber":42,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":43,"author":{"gitId":"Kailash201"},"content":"create Group","lastModifiedDate":"2023-10-26"},{"lineNumber":44,"author":{"gitId":"Kailash201"},"content":"AddCommandParser -\u003e Group","lastModifiedDate":"2023-10-26"},{"lineNumber":45,"author":{"gitId":"Kailash201"},"content":"activate Group","lastModifiedDate":"2023-10-26"},{"lineNumber":46,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":47,"author":{"gitId":"Kailash201"},"content":"Group --\u003e AddCommandParser","lastModifiedDate":"2023-10-26"},{"lineNumber":48,"author":{"gitId":"Kailash201"},"content":"deactivate Group","lastModifiedDate":"2023-10-26"},{"lineNumber":49,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":50,"author":{"gitId":"Kailash201"},"content":"Create AddCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":51,"author":{"gitId":"Kailash201"},"content":"AddCommandParser -\u003e AddCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":52,"author":{"gitId":"Kailash201"},"content":"activate AddCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":53,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":54,"author":{"gitId":"Kailash201"},"content":"AddCommand --\u003e AddCommandParser : a","lastModifiedDate":"2023-10-26"},{"lineNumber":55,"author":{"gitId":"Kailash201"},"content":"deactivate AddCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":56,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":57,"author":{"gitId":"Kailash201"},"content":"AddCommandParser --\u003e AddressBookParser : a","lastModifiedDate":"2023-10-26"},{"lineNumber":58,"author":{"gitId":"Kailash201"},"content":"deactivate AddCommandParser","lastModifiedDate":"2023-10-26"},{"lineNumber":59,"author":{"gitId":"Kailash201"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2023-10-26"},{"lineNumber":60,"author":{"gitId":"Kailash201"},"content":"AddCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2023-10-26"},{"lineNumber":61,"author":{"gitId":"Kailash201"},"content":"destroy AddCommandParser","lastModifiedDate":"2023-10-26"},{"lineNumber":62,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":63,"author":{"gitId":"Kailash201"},"content":"AddressBookParser --\u003e LogicManager : a","lastModifiedDate":"2023-10-26"},{"lineNumber":64,"author":{"gitId":"Kailash201"},"content":"deactivate AddressBookParser","lastModifiedDate":"2023-10-26"},{"lineNumber":65,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":66,"author":{"gitId":"Kailash201"},"content":"LogicManager -\u003e AddCommand : execute()","lastModifiedDate":"2023-10-26"},{"lineNumber":67,"author":{"gitId":"Kailash201"},"content":"activate AddCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":68,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":69,"author":{"gitId":"Kailash201"},"content":"AddCommand -\u003e Model : addPerson(Alex Yeoh)","lastModifiedDate":"2023-10-26"},{"lineNumber":70,"author":{"gitId":"Kailash201"},"content":"activate Model","lastModifiedDate":"2023-10-26"},{"lineNumber":71,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":72,"author":{"gitId":"Kailash201"},"content":"Model -\u003e AddressBook : addPerson(Alex Yeoh)","lastModifiedDate":"2023-10-26"},{"lineNumber":73,"author":{"gitId":"Kailash201"},"content":"activate AddressBook","lastModifiedDate":"2023-10-26"},{"lineNumber":74,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":75,"author":{"gitId":"Kailash201"},"content":"AddressBook --\u003e Model","lastModifiedDate":"2023-10-26"},{"lineNumber":76,"author":{"gitId":"Kailash201"},"content":"deactivate AddressBook","lastModifiedDate":"2023-10-26"},{"lineNumber":77,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":78,"author":{"gitId":"Kailash201"},"content":"Model --\u003e AddCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":79,"author":{"gitId":"Kailash201"},"content":"deactivate Model","lastModifiedDate":"2023-10-26"},{"lineNumber":80,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":81,"author":{"gitId":"Kailash201"},"content":"AddCommand -\u003e Person : getGroups()","lastModifiedDate":"2023-10-26"},{"lineNumber":82,"author":{"gitId":"Kailash201"},"content":"activate Person","lastModifiedDate":"2023-10-26"},{"lineNumber":83,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":84,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":85,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":86,"author":{"gitId":"Kailash201"},"content":"Person --\u003e AddCommand : g","lastModifiedDate":"2023-10-26"},{"lineNumber":87,"author":{"gitId":"Kailash201"},"content":"deactivate Person","lastModifiedDate":"2023-10-26"},{"lineNumber":88,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":89,"author":{"gitId":"Kailash201"},"content":"AddCommand -\u003e Model : addGroup(g)","lastModifiedDate":"2023-10-26"},{"lineNumber":90,"author":{"gitId":"Kailash201"},"content":"activate Model","lastModifiedDate":"2023-10-26"},{"lineNumber":91,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":92,"author":{"gitId":"Kailash201"},"content":"Model -\u003e AddressBook : addGroup(g)","lastModifiedDate":"2023-10-26"},{"lineNumber":93,"author":{"gitId":"Kailash201"},"content":"activate AddressBook","lastModifiedDate":"2023-10-26"},{"lineNumber":94,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":95,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":96,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":97,"author":{"gitId":"Kailash201"},"content":"AddressBook --\u003e Model","lastModifiedDate":"2023-10-26"},{"lineNumber":98,"author":{"gitId":"Kailash201"},"content":"deactivate AddressBook","lastModifiedDate":"2023-10-26"},{"lineNumber":99,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":100,"author":{"gitId":"Kailash201"},"content":"Model --\u003e AddCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":101,"author":{"gitId":"Kailash201"},"content":"deactivate Model","lastModifiedDate":"2023-10-26"},{"lineNumber":102,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":103,"author":{"gitId":"Kailash201"},"content":"AddCommand -\u003e Group : addPerson(Alex Yeoh)","lastModifiedDate":"2023-10-26"},{"lineNumber":104,"author":{"gitId":"Kailash201"},"content":"activate Group","lastModifiedDate":"2023-10-26"},{"lineNumber":105,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":106,"author":{"gitId":"Kailash201"},"content":"Group --\u003e AddCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":107,"author":{"gitId":"Kailash201"},"content":"deactivate Group","lastModifiedDate":"2023-10-26"},{"lineNumber":108,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":109,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":110,"author":{"gitId":"Kailash201"},"content":"create CommandResult","lastModifiedDate":"2023-10-26"},{"lineNumber":111,"author":{"gitId":"Kailash201"},"content":"AddCommand -\u003e CommandResult","lastModifiedDate":"2023-10-26"},{"lineNumber":112,"author":{"gitId":"Kailash201"},"content":"activate CommandResult","lastModifiedDate":"2023-10-26"},{"lineNumber":113,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":114,"author":{"gitId":"Kailash201"},"content":"CommandResult --\u003e AddCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":115,"author":{"gitId":"Kailash201"},"content":"deactivate CommandResult","lastModifiedDate":"2023-10-26"},{"lineNumber":116,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":117,"author":{"gitId":"Kailash201"},"content":"AddCommand --\u003e LogicManager : result","lastModifiedDate":"2023-10-26"},{"lineNumber":118,"author":{"gitId":"Kailash201"},"content":"deactivate AddCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":119,"author":{"gitId":"Kailash201"},"content":"[\u003c--LogicManager","lastModifiedDate":"2023-10-26"},{"lineNumber":120,"author":{"gitId":"Kailash201"},"content":"deactivate LogicManager","lastModifiedDate":"2023-10-26"},{"lineNumber":121,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":122,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":123,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":124,"author":{"gitId":"Kailash201"},"content":"@enduml","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"Kailash201":124}},{"path":"docs/diagrams/CreateGroupSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ZD292"},"content":"@startuml","lastModifiedDate":"2023-10-25"},{"lineNumber":2,"author":{"gitId":"ZD292"},"content":"!include style.puml","lastModifiedDate":"2023-10-25"},{"lineNumber":3,"author":{"gitId":"ZD292"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2023-10-25"},{"lineNumber":4,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":5,"author":{"gitId":"ZD292"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"ZD292"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"ZD292"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"ZD292"},"content":"participant \":CreateGroupCommandParser\" as CreateGroupCommandParser LOGIC_COLOR","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"ZD292"},"content":"participant \":CreateGroupCommand\" as CreateGroupCommand LOGIC_COLOR","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"ZD292"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"ZD292"},"content":"end box","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"ZD292"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"ZD292"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"ZD292"},"content":"end box","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"ZD292"},"content":"[-\u003e LogicManager : execute(\"new g/groupName\")","lastModifiedDate":"2023-10-25"},{"lineNumber":18,"author":{"gitId":"ZD292"},"content":"activate LogicManager","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"ZD292"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"new g/groupName\")","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"ZD292"},"content":"activate AddressBookParser","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"ZD292"},"content":"create CreateGroupCommandParser","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"ZD292"},"content":"AddressBookParser -\u003e CreateGroupCommandParser","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"ZD292"},"content":"activate CreateGroupCommandParser","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":27,"author":{"gitId":"ZD292"},"content":"CreateGroupCommandParser --\u003e AddressBookParser","lastModifiedDate":"2023-10-25"},{"lineNumber":28,"author":{"gitId":"ZD292"},"content":"deactivate CreateGroupCommandParser","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":30,"author":{"gitId":"ZD292"},"content":"AddressBookParser -\u003e CreateGroupCommandParser : parse(\"groupName\")","lastModifiedDate":"2023-10-25"},{"lineNumber":31,"author":{"gitId":"ZD292"},"content":"activate CreateGroupCommandParser","lastModifiedDate":"2023-10-25"},{"lineNumber":32,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":33,"author":{"gitId":"ZD292"},"content":"create CreateGroupCommand","lastModifiedDate":"2023-10-25"},{"lineNumber":34,"author":{"gitId":"ZD292"},"content":"CreateGroupCommandParser -\u003e CreateGroupCommand","lastModifiedDate":"2023-10-25"},{"lineNumber":35,"author":{"gitId":"ZD292"},"content":"activate CreateGroupCommand","lastModifiedDate":"2023-10-25"},{"lineNumber":36,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":37,"author":{"gitId":"ZD292"},"content":"CreateGroupCommand --\u003e CreateGroupCommandParser : g","lastModifiedDate":"2023-10-25"},{"lineNumber":38,"author":{"gitId":"ZD292"},"content":"deactivate CreateGroupCommand","lastModifiedDate":"2023-10-25"},{"lineNumber":39,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":40,"author":{"gitId":"ZD292"},"content":"CreateGroupCommandParser --\u003e AddressBookParser : g","lastModifiedDate":"2023-10-25"},{"lineNumber":41,"author":{"gitId":"ZD292"},"content":"deactivate CreateGroupCommandParser","lastModifiedDate":"2023-10-25"},{"lineNumber":42,"author":{"gitId":"ZD292"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2023-10-25"},{"lineNumber":43,"author":{"gitId":"ZD292"},"content":"CreateGroupCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2023-10-25"},{"lineNumber":44,"author":{"gitId":"ZD292"},"content":"destroy CreateGroupCommandParser","lastModifiedDate":"2023-10-25"},{"lineNumber":45,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":46,"author":{"gitId":"ZD292"},"content":"AddressBookParser --\u003e LogicManager : g","lastModifiedDate":"2023-10-25"},{"lineNumber":47,"author":{"gitId":"ZD292"},"content":"deactivate AddressBookParser","lastModifiedDate":"2023-10-25"},{"lineNumber":48,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":49,"author":{"gitId":"ZD292"},"content":"LogicManager -\u003e CreateGroupCommand : execute()","lastModifiedDate":"2023-10-25"},{"lineNumber":50,"author":{"gitId":"ZD292"},"content":"activate CreateGroupCommand","lastModifiedDate":"2023-10-25"},{"lineNumber":51,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":52,"author":{"gitId":"ZD292"},"content":"CreateGroupCommand -\u003e Model : addGroup(groupName)","lastModifiedDate":"2023-10-25"},{"lineNumber":53,"author":{"gitId":"ZD292"},"content":"activate Model","lastModifiedDate":"2023-10-25"},{"lineNumber":54,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":55,"author":{"gitId":"ZD292"},"content":"Model --\u003e CreateGroupCommand","lastModifiedDate":"2023-10-25"},{"lineNumber":56,"author":{"gitId":"ZD292"},"content":"deactivate Model","lastModifiedDate":"2023-10-25"},{"lineNumber":57,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":58,"author":{"gitId":"ZD292"},"content":"create CommandResult","lastModifiedDate":"2023-10-25"},{"lineNumber":59,"author":{"gitId":"ZD292"},"content":"CreateGroupCommand -\u003e CommandResult","lastModifiedDate":"2023-10-25"},{"lineNumber":60,"author":{"gitId":"ZD292"},"content":"activate CommandResult","lastModifiedDate":"2023-10-25"},{"lineNumber":61,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":62,"author":{"gitId":"ZD292"},"content":"CommandResult --\u003e CreateGroupCommand","lastModifiedDate":"2023-10-25"},{"lineNumber":63,"author":{"gitId":"ZD292"},"content":"deactivate CommandResult","lastModifiedDate":"2023-10-25"},{"lineNumber":64,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":65,"author":{"gitId":"ZD292"},"content":"CreateGroupCommand --\u003e LogicManager : result","lastModifiedDate":"2023-10-25"},{"lineNumber":66,"author":{"gitId":"ZD292"},"content":"deactivate CreateGroupCommand","lastModifiedDate":"2023-10-25"},{"lineNumber":67,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":68,"author":{"gitId":"ZD292"},"content":"[\u003c--LogicManager","lastModifiedDate":"2023-10-25"},{"lineNumber":69,"author":{"gitId":"ZD292"},"content":"deactivate LogicManager","lastModifiedDate":"2023-10-25"},{"lineNumber":70,"author":{"gitId":"ZD292"},"content":"@enduml","lastModifiedDate":"2023-10-25"}],"authorContributionMap":{"ZD292":70}},{"path":"docs/diagrams/DeleteGroupSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"lerxuann"},"content":"@startuml","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"lerxuann"},"content":"!include style.puml","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"lerxuann"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"lerxuann"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"lerxuann"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"lerxuann"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"lerxuann"},"content":"participant \":DeleteCommandParser\" as DeleteCommandParser LOGIC_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"lerxuann"},"content":"participant \"d:DeleteGroupCommand\" as DeleteGroupCommand LOGIC_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"lerxuann"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"lerxuann"},"content":"end box","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"lerxuann"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"lerxuann"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"lerxuann"},"content":"end box","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"lerxuann"},"content":"[-\u003e LogicManager : execute(\"delete g/CS2100\")","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"lerxuann"},"content":"activate LogicManager","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"lerxuann"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"delete g/CS2100\")","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"lerxuann"},"content":"activate AddressBookParser","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"lerxuann"},"content":"create DeleteCommandParser","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"lerxuann"},"content":"AddressBookParser -\u003e DeleteCommandParser","lastModifiedDate":"2023-10-26"},{"lineNumber":25,"author":{"gitId":"lerxuann"},"content":"activate DeleteCommandParser","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":27,"author":{"gitId":"lerxuann"},"content":"DeleteCommandParser --\u003e AddressBookParser","lastModifiedDate":"2023-10-26"},{"lineNumber":28,"author":{"gitId":"lerxuann"},"content":"deactivate DeleteCommandParser","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":30,"author":{"gitId":"lerxuann"},"content":"AddressBookParser -\u003e DeleteCommandParser : parse(\"g/CS2100\")","lastModifiedDate":"2023-10-26"},{"lineNumber":31,"author":{"gitId":"lerxuann"},"content":"activate DeleteCommandParser","lastModifiedDate":"2023-10-26"},{"lineNumber":32,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":33,"author":{"gitId":"lerxuann"},"content":"create DeleteGroupCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":34,"author":{"gitId":"lerxuann"},"content":"DeleteCommandParser -\u003e DeleteGroupCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":35,"author":{"gitId":"lerxuann"},"content":"activate DeleteGroupCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":36,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":37,"author":{"gitId":"lerxuann"},"content":"DeleteGroupCommand --\u003e DeleteCommandParser : d","lastModifiedDate":"2023-10-26"},{"lineNumber":38,"author":{"gitId":"lerxuann"},"content":"deactivate DeleteGroupCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":39,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":40,"author":{"gitId":"lerxuann"},"content":"DeleteCommandParser --\u003e AddressBookParser : d","lastModifiedDate":"2023-10-26"},{"lineNumber":41,"author":{"gitId":"lerxuann"},"content":"deactivate DeleteCommandParser","lastModifiedDate":"2023-10-26"},{"lineNumber":42,"author":{"gitId":"lerxuann"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2023-10-26"},{"lineNumber":43,"author":{"gitId":"lerxuann"},"content":"DeleteCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2023-10-26"},{"lineNumber":44,"author":{"gitId":"lerxuann"},"content":"destroy DeleteCommandParser","lastModifiedDate":"2023-10-26"},{"lineNumber":45,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":46,"author":{"gitId":"lerxuann"},"content":"AddressBookParser --\u003e LogicManager : d","lastModifiedDate":"2023-10-26"},{"lineNumber":47,"author":{"gitId":"lerxuann"},"content":"deactivate AddressBookParser","lastModifiedDate":"2023-10-26"},{"lineNumber":48,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":49,"author":{"gitId":"lerxuann"},"content":"LogicManager -\u003e DeleteGroupCommand : execute()","lastModifiedDate":"2023-10-26"},{"lineNumber":50,"author":{"gitId":"lerxuann"},"content":"activate DeleteGroupCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":51,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":52,"author":{"gitId":"lerxuann"},"content":"DeleteGroupCommand -\u003e Model : deletePerson(\"Alex Yeoh\")","lastModifiedDate":"2023-10-26"},{"lineNumber":53,"author":{"gitId":"lerxuann"},"content":"activate Model","lastModifiedDate":"2023-10-26"},{"lineNumber":54,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":55,"author":{"gitId":"lerxuann"},"content":"Model --\u003e DeleteGroupCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":56,"author":{"gitId":"lerxuann"},"content":"deactivate Model","lastModifiedDate":"2023-10-26"},{"lineNumber":57,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":58,"author":{"gitId":"lerxuann"},"content":"create CommandResult","lastModifiedDate":"2023-10-26"},{"lineNumber":59,"author":{"gitId":"lerxuann"},"content":"DeleteGroupCommand -\u003e CommandResult","lastModifiedDate":"2023-10-26"},{"lineNumber":60,"author":{"gitId":"lerxuann"},"content":"activate CommandResult","lastModifiedDate":"2023-10-26"},{"lineNumber":61,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":62,"author":{"gitId":"lerxuann"},"content":"CommandResult --\u003e DeleteGroupCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":63,"author":{"gitId":"lerxuann"},"content":"deactivate CommandResult","lastModifiedDate":"2023-10-26"},{"lineNumber":64,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":65,"author":{"gitId":"lerxuann"},"content":"DeleteGroupCommand --\u003e LogicManager : result","lastModifiedDate":"2023-10-26"},{"lineNumber":66,"author":{"gitId":"lerxuann"},"content":"deactivate DeleteGroupCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":67,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":68,"author":{"gitId":"lerxuann"},"content":"[\u003c--LogicManager","lastModifiedDate":"2023-10-26"},{"lineNumber":69,"author":{"gitId":"lerxuann"},"content":"deactivate LogicManager","lastModifiedDate":"2023-10-26"},{"lineNumber":70,"author":{"gitId":"lerxuann"},"content":"@enduml","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"lerxuann":70}},{"path":"docs/diagrams/DeletePersonSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"lerxuann"},"content":"@startuml","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"lerxuann"},"content":"!include style.puml","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"lerxuann"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"lerxuann"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"lerxuann"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"lerxuann"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"lerxuann"},"content":"participant \":DeleteCommandParser\" as DeleteCommandParser LOGIC_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"lerxuann"},"content":"participant \"d:DeletePersonCommand\" as DeletePersonCommand LOGIC_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"lerxuann"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"lerxuann"},"content":"end box","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"lerxuann"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"lerxuann"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"lerxuann"},"content":"end box","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"lerxuann"},"content":"[-\u003e LogicManager : execute(\"delete n/Alex Yeoh\")","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"lerxuann"},"content":"activate LogicManager","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"lerxuann"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"delete n/Alex Yeoh\")","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"lerxuann"},"content":"activate AddressBookParser","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"lerxuann"},"content":"create DeleteCommandParser","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"lerxuann"},"content":"AddressBookParser -\u003e DeleteCommandParser","lastModifiedDate":"2023-10-26"},{"lineNumber":25,"author":{"gitId":"lerxuann"},"content":"activate DeleteCommandParser","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":27,"author":{"gitId":"lerxuann"},"content":"DeleteCommandParser --\u003e AddressBookParser","lastModifiedDate":"2023-10-26"},{"lineNumber":28,"author":{"gitId":"lerxuann"},"content":"deactivate DeleteCommandParser","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":30,"author":{"gitId":"lerxuann"},"content":"AddressBookParser -\u003e DeleteCommandParser : parse(\"n/Alex Yeoh\")","lastModifiedDate":"2023-10-26"},{"lineNumber":31,"author":{"gitId":"lerxuann"},"content":"activate DeleteCommandParser","lastModifiedDate":"2023-10-26"},{"lineNumber":32,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":33,"author":{"gitId":"lerxuann"},"content":"create DeletePersonCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":34,"author":{"gitId":"lerxuann"},"content":"DeleteCommandParser -\u003e DeletePersonCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":35,"author":{"gitId":"lerxuann"},"content":"activate DeletePersonCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":36,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":37,"author":{"gitId":"lerxuann"},"content":"DeletePersonCommand --\u003e DeleteCommandParser : d","lastModifiedDate":"2023-10-26"},{"lineNumber":38,"author":{"gitId":"lerxuann"},"content":"deactivate DeletePersonCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":39,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":40,"author":{"gitId":"lerxuann"},"content":"DeleteCommandParser --\u003e AddressBookParser : d","lastModifiedDate":"2023-10-26"},{"lineNumber":41,"author":{"gitId":"lerxuann"},"content":"deactivate DeleteCommandParser","lastModifiedDate":"2023-10-26"},{"lineNumber":42,"author":{"gitId":"lerxuann"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2023-10-26"},{"lineNumber":43,"author":{"gitId":"lerxuann"},"content":"DeleteCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2023-10-26"},{"lineNumber":44,"author":{"gitId":"lerxuann"},"content":"destroy DeleteCommandParser","lastModifiedDate":"2023-10-26"},{"lineNumber":45,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":46,"author":{"gitId":"lerxuann"},"content":"AddressBookParser --\u003e LogicManager : d","lastModifiedDate":"2023-10-26"},{"lineNumber":47,"author":{"gitId":"lerxuann"},"content":"deactivate AddressBookParser","lastModifiedDate":"2023-10-26"},{"lineNumber":48,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":49,"author":{"gitId":"lerxuann"},"content":"LogicManager -\u003e DeletePersonCommand : execute()","lastModifiedDate":"2023-10-26"},{"lineNumber":50,"author":{"gitId":"lerxuann"},"content":"activate DeletePersonCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":51,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":52,"author":{"gitId":"lerxuann"},"content":"DeletePersonCommand -\u003e Model : deletePerson(\"Alex Yeoh\")","lastModifiedDate":"2023-10-26"},{"lineNumber":53,"author":{"gitId":"lerxuann"},"content":"activate Model","lastModifiedDate":"2023-10-26"},{"lineNumber":54,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":55,"author":{"gitId":"lerxuann"},"content":"Model --\u003e DeletePersonCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":56,"author":{"gitId":"lerxuann"},"content":"deactivate Model","lastModifiedDate":"2023-10-26"},{"lineNumber":57,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":58,"author":{"gitId":"lerxuann"},"content":"create CommandResult","lastModifiedDate":"2023-10-26"},{"lineNumber":59,"author":{"gitId":"lerxuann"},"content":"DeletePersonCommand -\u003e CommandResult","lastModifiedDate":"2023-10-26"},{"lineNumber":60,"author":{"gitId":"lerxuann"},"content":"activate CommandResult","lastModifiedDate":"2023-10-26"},{"lineNumber":61,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":62,"author":{"gitId":"lerxuann"},"content":"CommandResult --\u003e DeletePersonCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":63,"author":{"gitId":"lerxuann"},"content":"deactivate CommandResult","lastModifiedDate":"2023-10-26"},{"lineNumber":64,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":65,"author":{"gitId":"lerxuann"},"content":"DeletePersonCommand --\u003e LogicManager : result","lastModifiedDate":"2023-10-26"},{"lineNumber":66,"author":{"gitId":"lerxuann"},"content":"deactivate DeletePersonCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":67,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":68,"author":{"gitId":"lerxuann"},"content":"[\u003c--LogicManager","lastModifiedDate":"2023-10-26"},{"lineNumber":69,"author":{"gitId":"lerxuann"},"content":"deactivate LogicManager","lastModifiedDate":"2023-10-26"},{"lineNumber":70,"author":{"gitId":"lerxuann"},"content":"@enduml","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"lerxuann":70}},{"path":"docs/diagrams/DeletePersonTimeDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"nicholastng010601"},"content":"@startuml","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"nicholastng010601"},"content":"!include style.puml","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"nicholastng010601"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"nicholastng010601"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"nicholastng010601"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"nicholastng010601"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"nicholastng010601"},"content":"participant \":DeleteTimeCommandParser\" as DeleteTimeCommandParser LOGIC_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"nicholastng010601"},"content":"participant \"d:DeleteTimeCommand\" as DeleteTimeCommand LOGIC_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"nicholastng010601"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"nicholastng010601"},"content":"end box","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"nicholastng010601"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"nicholastng010601"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"nicholastng010601"},"content":"end box","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"nicholastng010601"},"content":"[-\u003e LogicManager : execute(deleteTime n/Alex Yeoh t/mon 1200 - mon 1400)","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"nicholastng010601"},"content":"activate LogicManager","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"nicholastng010601"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(deleteTime...)","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"nicholastng010601"},"content":"activate AddressBookParser","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"nicholastng010601"},"content":"create DeleteTimeCommandParser","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"nicholastng010601"},"content":"AddressBookParser -\u003e DeleteTimeCommandParser","lastModifiedDate":"2023-10-26"},{"lineNumber":25,"author":{"gitId":"nicholastng010601"},"content":"activate DeleteTimeCommandParser","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":27,"author":{"gitId":"nicholastng010601"},"content":"DeleteTimeCommandParser --\u003e AddressBookParser","lastModifiedDate":"2023-10-26"},{"lineNumber":28,"author":{"gitId":"nicholastng010601"},"content":"deactivate DeleteTimeCommandParser","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":30,"author":{"gitId":"nicholastng010601"},"content":"AddressBookParser -\u003e DeleteTimeCommandParser : parse(n/Alex Yeoh t/...)","lastModifiedDate":"2023-10-26"},{"lineNumber":31,"author":{"gitId":"nicholastng010601"},"content":"activate DeleteTimeCommandParser","lastModifiedDate":"2023-10-26"},{"lineNumber":32,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":33,"author":{"gitId":"nicholastng010601"},"content":"create DeleteTimeCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":34,"author":{"gitId":"nicholastng010601"},"content":"DeleteTimeCommandParser -\u003e DeleteTimeCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":35,"author":{"gitId":"nicholastng010601"},"content":"activate DeleteTimeCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":36,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":37,"author":{"gitId":"nicholastng010601"},"content":"DeleteTimeCommand --\u003e DeleteTimeCommandParser : d","lastModifiedDate":"2023-10-26"},{"lineNumber":38,"author":{"gitId":"nicholastng010601"},"content":"deactivate DeleteTimeCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":39,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":40,"author":{"gitId":"nicholastng010601"},"content":"DeleteTimeCommandParser --\u003e AddressBookParser : d","lastModifiedDate":"2023-10-26"},{"lineNumber":41,"author":{"gitId":"nicholastng010601"},"content":"deactivate DeleteTimeCommandParser","lastModifiedDate":"2023-10-26"},{"lineNumber":42,"author":{"gitId":"nicholastng010601"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2023-10-26"},{"lineNumber":43,"author":{"gitId":"nicholastng010601"},"content":"DeleteTimeCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2023-10-26"},{"lineNumber":44,"author":{"gitId":"nicholastng010601"},"content":"destroy DeleteTimeCommandParser","lastModifiedDate":"2023-10-26"},{"lineNumber":45,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":46,"author":{"gitId":"nicholastng010601"},"content":"AddressBookParser --\u003e LogicManager : d","lastModifiedDate":"2023-10-26"},{"lineNumber":47,"author":{"gitId":"nicholastng010601"},"content":"deactivate AddressBookParser","lastModifiedDate":"2023-10-26"},{"lineNumber":48,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":49,"author":{"gitId":"nicholastng010601"},"content":"LogicManager -\u003e DeleteTimeCommand : execute()","lastModifiedDate":"2023-10-26"},{"lineNumber":50,"author":{"gitId":"nicholastng010601"},"content":"activate DeleteTimeCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":51,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":52,"author":{"gitId":"nicholastng010601"},"content":"DeleteTimeCommand -\u003e Model : deleteTimeFromPerson()","lastModifiedDate":"2023-10-26"},{"lineNumber":53,"author":{"gitId":"nicholastng010601"},"content":"activate Model","lastModifiedDate":"2023-10-26"},{"lineNumber":54,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":55,"author":{"gitId":"nicholastng010601"},"content":"Model --\u003e DeleteTimeCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":56,"author":{"gitId":"nicholastng010601"},"content":"deactivate Model","lastModifiedDate":"2023-10-26"},{"lineNumber":57,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":58,"author":{"gitId":"nicholastng010601"},"content":"create CommandResult","lastModifiedDate":"2023-10-26"},{"lineNumber":59,"author":{"gitId":"nicholastng010601"},"content":"DeleteTimeCommand -\u003e CommandResult","lastModifiedDate":"2023-10-26"},{"lineNumber":60,"author":{"gitId":"nicholastng010601"},"content":"activate CommandResult","lastModifiedDate":"2023-10-26"},{"lineNumber":61,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":62,"author":{"gitId":"nicholastng010601"},"content":"CommandResult --\u003e DeleteTimeCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":63,"author":{"gitId":"nicholastng010601"},"content":"deactivate CommandResult","lastModifiedDate":"2023-10-26"},{"lineNumber":64,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":65,"author":{"gitId":"nicholastng010601"},"content":"DeleteTimeCommand --\u003e LogicManager : result","lastModifiedDate":"2023-10-26"},{"lineNumber":66,"author":{"gitId":"nicholastng010601"},"content":"deactivate DeleteTimeCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":67,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":68,"author":{"gitId":"nicholastng010601"},"content":"[\u003c--LogicManager","lastModifiedDate":"2023-10-26"},{"lineNumber":69,"author":{"gitId":"nicholastng010601"},"content":"deactivate LogicManager","lastModifiedDate":"2023-10-26"},{"lineNumber":70,"author":{"gitId":"nicholastng010601"},"content":"@enduml","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"nicholastng010601":70}},{"path":"docs/diagrams/GroupPersonSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ZD292"},"content":"@startuml","lastModifiedDate":"2023-10-25"},{"lineNumber":2,"author":{"gitId":"ZD292"},"content":"!include style.puml","lastModifiedDate":"2023-10-25"},{"lineNumber":3,"author":{"gitId":"ZD292"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2023-10-25"},{"lineNumber":4,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":5,"author":{"gitId":"ZD292"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"ZD292"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"ZD292"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"ZD292"},"content":"participant \":GroupPersonCommandParser\" as GroupPersonCommandParser LOGIC_COLOR","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"ZD292"},"content":"participant \":GroupPersonCommand\" as GroupPersonCommand LOGIC_COLOR","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"ZD292"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"ZD292"},"content":"end box","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"ZD292"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"ZD292"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"ZD292"},"content":"participant \":AddressBook\" as AddressBook MODEL_COLOR","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"ZD292"},"content":"end box","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":18,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"ZD292"},"content":"[-\u003e LogicManager : execute(\"group n/personName g/groupName\")","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"ZD292"},"content":"activate LogicManager","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"ZD292"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"group n/personName g/groupName\")","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"ZD292"},"content":"activate AddressBookParser","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"ZD292"},"content":"create GroupPersonCommandParser","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"ZD292"},"content":"AddressBookParser -\u003e GroupPersonCommandParser","lastModifiedDate":"2023-10-25"},{"lineNumber":27,"author":{"gitId":"ZD292"},"content":"activate GroupPersonCommandParser","lastModifiedDate":"2023-10-25"},{"lineNumber":28,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"ZD292"},"content":"GroupPersonCommandParser --\u003e AddressBookParser","lastModifiedDate":"2023-10-25"},{"lineNumber":30,"author":{"gitId":"ZD292"},"content":"deactivate GroupPersonCommandParser","lastModifiedDate":"2023-10-25"},{"lineNumber":31,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":32,"author":{"gitId":"ZD292"},"content":"AddressBookParser -\u003e GroupPersonCommandParser : parse(\"n/personName g/groupName\")","lastModifiedDate":"2023-10-25"},{"lineNumber":33,"author":{"gitId":"ZD292"},"content":"activate GroupPersonCommandParser","lastModifiedDate":"2023-10-25"},{"lineNumber":34,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":35,"author":{"gitId":"ZD292"},"content":"create GroupPersonCommand","lastModifiedDate":"2023-10-25"},{"lineNumber":36,"author":{"gitId":"ZD292"},"content":"GroupPersonCommandParser -\u003e GroupPersonCommand","lastModifiedDate":"2023-10-25"},{"lineNumber":37,"author":{"gitId":"ZD292"},"content":"activate GroupPersonCommand","lastModifiedDate":"2023-10-25"},{"lineNumber":38,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":39,"author":{"gitId":"ZD292"},"content":"GroupPersonCommand --\u003e GroupPersonCommandParser : g","lastModifiedDate":"2023-10-25"},{"lineNumber":40,"author":{"gitId":"ZD292"},"content":"deactivate GroupPersonCommand","lastModifiedDate":"2023-10-25"},{"lineNumber":41,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":42,"author":{"gitId":"ZD292"},"content":"GroupPersonCommandParser --\u003e AddressBookParser : g","lastModifiedDate":"2023-10-25"},{"lineNumber":43,"author":{"gitId":"ZD292"},"content":"deactivate GroupPersonCommandParser","lastModifiedDate":"2023-10-25"},{"lineNumber":44,"author":{"gitId":"ZD292"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2023-10-25"},{"lineNumber":45,"author":{"gitId":"ZD292"},"content":"GroupPersonCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2023-10-25"},{"lineNumber":46,"author":{"gitId":"ZD292"},"content":"destroy GroupPersonCommandParser","lastModifiedDate":"2023-10-25"},{"lineNumber":47,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":48,"author":{"gitId":"ZD292"},"content":"AddressBookParser --\u003e LogicManager : g","lastModifiedDate":"2023-10-25"},{"lineNumber":49,"author":{"gitId":"ZD292"},"content":"deactivate AddressBookParser","lastModifiedDate":"2023-10-25"},{"lineNumber":50,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":51,"author":{"gitId":"ZD292"},"content":"LogicManager -\u003e GroupPersonCommand : execute()","lastModifiedDate":"2023-10-25"},{"lineNumber":52,"author":{"gitId":"ZD292"},"content":"activate GroupPersonCommand","lastModifiedDate":"2023-10-25"},{"lineNumber":53,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":54,"author":{"gitId":"ZD292"},"content":"GroupPersonCommand -\u003e Model : groupPerson(personName, groupName)","lastModifiedDate":"2023-10-25"},{"lineNumber":55,"author":{"gitId":"ZD292"},"content":"activate Model","lastModifiedDate":"2023-10-25"},{"lineNumber":56,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":57,"author":{"gitId":"ZD292"},"content":"Model -\u003e AddressBook : getPerson(personName)","lastModifiedDate":"2023-10-25"},{"lineNumber":58,"author":{"gitId":"ZD292"},"content":"activate AddressBook","lastModifiedDate":"2023-10-25"},{"lineNumber":59,"author":{"gitId":"ZD292"},"content":"AddressBook --\u003e Model : p","lastModifiedDate":"2023-10-25"},{"lineNumber":60,"author":{"gitId":"ZD292"},"content":"Model -\u003e AddressBook : getGroup(groupName)","lastModifiedDate":"2023-10-25"},{"lineNumber":61,"author":{"gitId":"ZD292"},"content":"AddressBook --\u003e Model : g","lastModifiedDate":"2023-10-25"},{"lineNumber":62,"author":{"gitId":"ZD292"},"content":"deactivate AddressBook","lastModifiedDate":"2023-10-25"},{"lineNumber":63,"author":{"gitId":"ZD292"},"content":"Model -\u003e Model : assignGroup(p, g)","lastModifiedDate":"2023-10-25"},{"lineNumber":64,"author":{"gitId":"ZD292"},"content":"Model --\u003e GroupPersonCommand","lastModifiedDate":"2023-10-25"},{"lineNumber":65,"author":{"gitId":"ZD292"},"content":"deactivate Model","lastModifiedDate":"2023-10-25"},{"lineNumber":66,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":67,"author":{"gitId":"ZD292"},"content":"create CommandResult","lastModifiedDate":"2023-10-25"},{"lineNumber":68,"author":{"gitId":"ZD292"},"content":"GroupPersonCommand -\u003e CommandResult","lastModifiedDate":"2023-10-25"},{"lineNumber":69,"author":{"gitId":"ZD292"},"content":"activate CommandResult","lastModifiedDate":"2023-10-25"},{"lineNumber":70,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":71,"author":{"gitId":"ZD292"},"content":"CommandResult --\u003e GroupPersonCommand","lastModifiedDate":"2023-10-25"},{"lineNumber":72,"author":{"gitId":"ZD292"},"content":"deactivate CommandResult","lastModifiedDate":"2023-10-25"},{"lineNumber":73,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":74,"author":{"gitId":"ZD292"},"content":"@enduml","lastModifiedDate":"2023-10-25"}],"authorContributionMap":{"ZD292":74}},{"path":"docs/diagrams/GroupRemarkSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"coderhuang559"},"content":"@startuml","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"coderhuang559"},"content":"!include style.puml","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"coderhuang559"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"coderhuang559"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"coderhuang559"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"coderhuang559"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"coderhuang559"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"coderhuang559"},"content":"participant \":GroupRemarkCommandParser\" as GroupRemarkCommandParser LOGIC_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"coderhuang559"},"content":"participant \":GroupRemarkCommand\" as GroupRemarkCommand LOGIC_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"coderhuang559"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"coderhuang559"},"content":"end box","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"coderhuang559"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"coderhuang559"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"coderhuang559"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"coderhuang559"},"content":"\u0027participant \":AddressBook\" as AddressBook MODEL_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"coderhuang559"},"content":"\u0027participant \":Group\" as Group MODEL_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"coderhuang559"},"content":"end box","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"coderhuang559"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"coderhuang559"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"coderhuang559"},"content":"[-\u003e LogicManager: execute(\"remark g/CS2103T r/Quiz tomorrow\")","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"coderhuang559"},"content":"activate LogicManager","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"coderhuang559"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"coderhuang559"},"content":"LogicManager -\u003e AddressBookParser: parseCommand \"remark g/CS2103T r/Quiz tomorrow\"","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"coderhuang559"},"content":"activate AddressBookParser","lastModifiedDate":"2023-10-26"},{"lineNumber":25,"author":{"gitId":"coderhuang559"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"coderhuang559"},"content":"create GroupRemarkCommandParser","lastModifiedDate":"2023-10-26"},{"lineNumber":27,"author":{"gitId":"coderhuang559"},"content":"AddressBookParser -\u003e GroupRemarkCommandParser","lastModifiedDate":"2023-10-26"},{"lineNumber":28,"author":{"gitId":"coderhuang559"},"content":"activate GroupRemarkCommandParser","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"coderhuang559"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":30,"author":{"gitId":"coderhuang559"},"content":"GroupRemarkCommandParser --\u003e AddressBookParser","lastModifiedDate":"2023-10-26"},{"lineNumber":31,"author":{"gitId":"coderhuang559"},"content":"deactivate GroupRemarkCommandParser","lastModifiedDate":"2023-10-26"},{"lineNumber":32,"author":{"gitId":"coderhuang559"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":33,"author":{"gitId":"coderhuang559"},"content":"AddressBookParser -\u003e GroupRemarkCommandParser: parse g/CS2103T n/Quiz tomorrow","lastModifiedDate":"2023-10-26"},{"lineNumber":34,"author":{"gitId":"coderhuang559"},"content":"activate GroupRemarkCommandParser","lastModifiedDate":"2023-10-26"},{"lineNumber":35,"author":{"gitId":"coderhuang559"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":36,"author":{"gitId":"coderhuang559"},"content":"create GroupRemarkCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":37,"author":{"gitId":"coderhuang559"},"content":"GroupRemarkCommandParser -\u003e GroupRemarkCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":38,"author":{"gitId":"coderhuang559"},"content":"activate GroupRemarkCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":39,"author":{"gitId":"coderhuang559"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":40,"author":{"gitId":"coderhuang559"},"content":"GroupRemarkCommand --\u003e GroupRemarkCommandParser: r","lastModifiedDate":"2023-10-26"},{"lineNumber":41,"author":{"gitId":"coderhuang559"},"content":"deactivate GroupRemarkCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":42,"author":{"gitId":"coderhuang559"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":43,"author":{"gitId":"coderhuang559"},"content":"GroupRemarkCommandParser --\u003e AddressBookParser: r","lastModifiedDate":"2023-10-26"},{"lineNumber":44,"author":{"gitId":"coderhuang559"},"content":"deactivate GroupRemarkCommandParser","lastModifiedDate":"2023-10-26"},{"lineNumber":45,"author":{"gitId":"coderhuang559"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2023-10-26"},{"lineNumber":46,"author":{"gitId":"coderhuang559"},"content":"GroupRemarkCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2023-10-26"},{"lineNumber":47,"author":{"gitId":"coderhuang559"},"content":"destroy GroupRemarkCommandParser","lastModifiedDate":"2023-10-26"},{"lineNumber":48,"author":{"gitId":"coderhuang559"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":49,"author":{"gitId":"coderhuang559"},"content":"AddressBookParser --\u003e LogicManager: r","lastModifiedDate":"2023-10-26"},{"lineNumber":50,"author":{"gitId":"coderhuang559"},"content":"deactivate AddressBookParser","lastModifiedDate":"2023-10-26"},{"lineNumber":51,"author":{"gitId":"coderhuang559"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":52,"author":{"gitId":"coderhuang559"},"content":"LogicManager -\u003e GroupRemarkCommand: execute()","lastModifiedDate":"2023-10-26"},{"lineNumber":53,"author":{"gitId":"coderhuang559"},"content":"activate GroupRemarkCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":54,"author":{"gitId":"coderhuang559"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":55,"author":{"gitId":"coderhuang559"},"content":"GroupRemarkCommand -\u003e Model: addGroupRemark(groupName, groupRemark)","lastModifiedDate":"2023-10-26"},{"lineNumber":56,"author":{"gitId":"coderhuang559"},"content":"activate Model","lastModifiedDate":"2023-10-26"},{"lineNumber":57,"author":{"gitId":"coderhuang559"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":58,"author":{"gitId":"coderhuang559"},"content":"\u0027Model -\u003e AddressBook: getGroup(groupName)","lastModifiedDate":"2023-10-26"},{"lineNumber":59,"author":{"gitId":"coderhuang559"},"content":"\u0027activate AddressBook","lastModifiedDate":"2023-10-26"},{"lineNumber":60,"author":{"gitId":"coderhuang559"},"content":"\u0027","lastModifiedDate":"2023-10-26"},{"lineNumber":61,"author":{"gitId":"coderhuang559"},"content":"\u0027AddressBook --\u003e Model: g","lastModifiedDate":"2023-10-26"},{"lineNumber":62,"author":{"gitId":"coderhuang559"},"content":"\u0027deactivate AddressBook","lastModifiedDate":"2023-10-26"},{"lineNumber":63,"author":{"gitId":"coderhuang559"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":64,"author":{"gitId":"coderhuang559"},"content":"\u0027Model -\u003e Group: setGroupRemark(groupRemark)","lastModifiedDate":"2023-10-26"},{"lineNumber":65,"author":{"gitId":"coderhuang559"},"content":"\u0027activate Group","lastModifiedDate":"2023-10-26"},{"lineNumber":66,"author":{"gitId":"coderhuang559"},"content":"\u0027deactivate Group","lastModifiedDate":"2023-10-26"},{"lineNumber":67,"author":{"gitId":"coderhuang559"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":68,"author":{"gitId":"coderhuang559"},"content":"Model --\u003e GroupRemarkCommand: g","lastModifiedDate":"2023-10-26"},{"lineNumber":69,"author":{"gitId":"coderhuang559"},"content":"deactivate Model","lastModifiedDate":"2023-10-26"},{"lineNumber":70,"author":{"gitId":"coderhuang559"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":71,"author":{"gitId":"coderhuang559"},"content":"create CommandResult","lastModifiedDate":"2023-10-26"},{"lineNumber":72,"author":{"gitId":"coderhuang559"},"content":"GroupRemarkCommand -\u003e CommandResult","lastModifiedDate":"2023-10-26"},{"lineNumber":73,"author":{"gitId":"coderhuang559"},"content":"activate CommandResult","lastModifiedDate":"2023-10-26"},{"lineNumber":74,"author":{"gitId":"coderhuang559"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":75,"author":{"gitId":"coderhuang559"},"content":"CommandResult --\u003e GroupRemarkCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":76,"author":{"gitId":"coderhuang559"},"content":"deactivate CommandResult","lastModifiedDate":"2023-10-26"},{"lineNumber":77,"author":{"gitId":"coderhuang559"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":78,"author":{"gitId":"coderhuang559"},"content":"GroupRemarkCommand --\u003e LogicManager: result","lastModifiedDate":"2023-10-26"},{"lineNumber":79,"author":{"gitId":"coderhuang559"},"content":"[\u003c-- LogicManager","lastModifiedDate":"2023-10-26"},{"lineNumber":80,"author":{"gitId":"coderhuang559"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":81,"author":{"gitId":"coderhuang559"},"content":"@enduml","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"coderhuang559":81}},{"path":"docs/diagrams/UnGroupPersonSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ZD292"},"content":"@startuml","lastModifiedDate":"2023-10-25"},{"lineNumber":2,"author":{"gitId":"ZD292"},"content":"!include style.puml","lastModifiedDate":"2023-10-25"},{"lineNumber":3,"author":{"gitId":"ZD292"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2023-10-25"},{"lineNumber":4,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":5,"author":{"gitId":"ZD292"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"ZD292"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"ZD292"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"ZD292"},"content":"participant \":UngroupPersonCommandParser\" as UngroupPersonCommandParser LOGIC_COLOR","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"ZD292"},"content":"participant \":UngroupPersonCommand\" as UngroupPersonCommand LOGIC_COLOR","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"ZD292"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"ZD292"},"content":"end box","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"ZD292"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"ZD292"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"ZD292"},"content":"end box","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":18,"author":{"gitId":"ZD292"},"content":"[-\u003e LogicManager : execute(\"ungroup n/personName g/groupName\")","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"ZD292"},"content":"activate LogicManager","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"ZD292"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"ungroup n/personName g/groupName\")","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"ZD292"},"content":"activate AddressBookParser","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"ZD292"},"content":"create UngroupPersonCommandParser","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"ZD292"},"content":"AddressBookParser -\u003e UngroupPersonCommandParser","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"ZD292"},"content":"activate UngroupPersonCommandParser","lastModifiedDate":"2023-10-25"},{"lineNumber":27,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":28,"author":{"gitId":"ZD292"},"content":"UngroupPersonCommandParser --\u003e AddressBookParser","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"ZD292"},"content":"deactivate UngroupPersonCommandParser","lastModifiedDate":"2023-10-25"},{"lineNumber":30,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":31,"author":{"gitId":"ZD292"},"content":"AddressBookParser -\u003e UngroupPersonCommandParser : parse(\"n/personName g/groupName\")","lastModifiedDate":"2023-10-25"},{"lineNumber":32,"author":{"gitId":"ZD292"},"content":"activate UngroupPersonCommandParser","lastModifiedDate":"2023-10-25"},{"lineNumber":33,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":34,"author":{"gitId":"ZD292"},"content":"create UngroupPersonCommand","lastModifiedDate":"2023-10-25"},{"lineNumber":35,"author":{"gitId":"ZD292"},"content":"UngroupPersonCommandParser -\u003e UngroupPersonCommand","lastModifiedDate":"2023-10-25"},{"lineNumber":36,"author":{"gitId":"ZD292"},"content":"activate UngroupPersonCommand","lastModifiedDate":"2023-10-25"},{"lineNumber":37,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":38,"author":{"gitId":"ZD292"},"content":"UngroupPersonCommand --\u003e UngroupPersonCommandParser : g","lastModifiedDate":"2023-10-25"},{"lineNumber":39,"author":{"gitId":"ZD292"},"content":"deactivate UngroupPersonCommand","lastModifiedDate":"2023-10-25"},{"lineNumber":40,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":41,"author":{"gitId":"ZD292"},"content":"UngroupPersonCommandParser --\u003e AddressBookParser : g","lastModifiedDate":"2023-10-25"},{"lineNumber":42,"author":{"gitId":"ZD292"},"content":"deactivate UngroupPersonCommandParser","lastModifiedDate":"2023-10-25"},{"lineNumber":43,"author":{"gitId":"ZD292"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2023-10-25"},{"lineNumber":44,"author":{"gitId":"ZD292"},"content":"UngroupPersonCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2023-10-25"},{"lineNumber":45,"author":{"gitId":"ZD292"},"content":"destroy UngroupPersonCommandParser","lastModifiedDate":"2023-10-25"},{"lineNumber":46,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":47,"author":{"gitId":"ZD292"},"content":"AddressBookParser --\u003e LogicManager : g","lastModifiedDate":"2023-10-25"},{"lineNumber":48,"author":{"gitId":"ZD292"},"content":"deactivate AddressBookParser","lastModifiedDate":"2023-10-25"},{"lineNumber":49,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":50,"author":{"gitId":"ZD292"},"content":"LogicManager -\u003e UngroupPersonCommand : execute()","lastModifiedDate":"2023-10-25"},{"lineNumber":51,"author":{"gitId":"ZD292"},"content":"activate UngroupPersonCommand","lastModifiedDate":"2023-10-25"},{"lineNumber":52,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":53,"author":{"gitId":"ZD292"},"content":"UngroupPersonCommand -\u003e Model : ungroupPerson(personName, groupName)","lastModifiedDate":"2023-10-25"},{"lineNumber":54,"author":{"gitId":"ZD292"},"content":"activate Model","lastModifiedDate":"2023-10-25"},{"lineNumber":55,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":56,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":57,"author":{"gitId":"ZD292"},"content":"Model -\u003e Model : ungroupPerson(personName, groupName)","lastModifiedDate":"2023-10-25"},{"lineNumber":58,"author":{"gitId":"ZD292"},"content":"Model --\u003e UngroupPersonCommand","lastModifiedDate":"2023-10-25"},{"lineNumber":59,"author":{"gitId":"ZD292"},"content":"deactivate Model","lastModifiedDate":"2023-10-25"},{"lineNumber":60,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":61,"author":{"gitId":"ZD292"},"content":"create CommandResult","lastModifiedDate":"2023-10-25"},{"lineNumber":62,"author":{"gitId":"ZD292"},"content":"UngroupPersonCommand -\u003e CommandResult","lastModifiedDate":"2023-10-25"},{"lineNumber":63,"author":{"gitId":"ZD292"},"content":"activate CommandResult","lastModifiedDate":"2023-10-25"},{"lineNumber":64,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":65,"author":{"gitId":"ZD292"},"content":"CommandResult --\u003e UngroupPersonCommand","lastModifiedDate":"2023-10-25"},{"lineNumber":66,"author":{"gitId":"ZD292"},"content":"deactivate CommandResult","lastModifiedDate":"2023-10-25"},{"lineNumber":67,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":68,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":69,"author":{"gitId":"ZD292"},"content":"@enduml","lastModifiedDate":"2023-10-25"}],"authorContributionMap":{"ZD292":69}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"\"","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"Kailash201"},"content":"# ProjectPRO","lastModifiedDate":"2023-10-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"[![CI Status](https://github.com/se-edu/addressbook-level3/workflows/Java%20CI/badge.svg)](https://github.com/se-edu/addressbook-level3/actions)","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"[![codecov](https://codecov.io/gh/se-edu/addressbook-level3/branch/master/graph/badge.svg)](https://codecov.io/gh/se-edu/addressbook-level3)","lastModifiedDate":"2020-08-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"**AddressBook is a desktop application for managing your contact details.** While it has a GUI, most of the user interactions happen using a CLI (Command Line Interface).","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"* If you are interested in using AddressBook, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"* If you are interested about developing AddressBook, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"Kailash201":1,"-":20}},{"path":"docs/team/coderhuang559.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ZD292"},"content":"---","lastModifiedDate":"2023-09-28"},{"lineNumber":2,"author":{"gitId":"ZD292"},"content":"  layout: default.md","lastModifiedDate":"2023-09-28"},{"lineNumber":3,"author":{"gitId":"coderhuang559"},"content":"  title: \"Huang Yixin\u0027s Project Portfolio Page\"","lastModifiedDate":"2023-10-04"},{"lineNumber":4,"author":{"gitId":"ZD292"},"content":"---","lastModifiedDate":"2023-09-28"},{"lineNumber":5,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":6,"author":{"gitId":"coderhuang559"},"content":"### Project: ProjectPRO","lastModifiedDate":"2023-10-07"},{"lineNumber":7,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":8,"author":{"gitId":"coderhuang559"},"content":"ProjectPRO is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java.","lastModifiedDate":"2023-10-07"}],"authorContributionMap":{"coderhuang559":3,"ZD292":5}},{"path":"docs/team/kailash201.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ZD292"},"content":"---","lastModifiedDate":"2023-09-28"},{"lineNumber":2,"author":{"gitId":"ZD292"},"content":"  layout: default.md","lastModifiedDate":"2023-09-28"},{"lineNumber":3,"author":{"gitId":"Kailash201"},"content":"  title: \"Kailash\u0027s Project Portfolio Page\"","lastModifiedDate":"2023-10-04"},{"lineNumber":4,"author":{"gitId":"ZD292"},"content":"---","lastModifiedDate":"2023-09-28"},{"lineNumber":5,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":6,"author":{"gitId":"ZD292"},"content":"### Project: AddressBook Level 3","lastModifiedDate":"2023-09-28"},{"lineNumber":7,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":8,"author":{"gitId":"ZD292"},"content":"AddressBook - Level 3 is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2023-09-28"},{"lineNumber":9,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":10,"author":{"gitId":"ZD292"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-09-28"},{"lineNumber":11,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":12,"author":{"gitId":"ZD292"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2023-09-28"},{"lineNumber":13,"author":{"gitId":"ZD292"},"content":"  * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2023-09-28"},{"lineNumber":14,"author":{"gitId":"ZD292"},"content":"  * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2023-09-28"},{"lineNumber":15,"author":{"gitId":"ZD292"},"content":"  * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2023-09-28"},{"lineNumber":16,"author":{"gitId":"ZD292"},"content":"  * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2023-09-28"},{"lineNumber":17,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":18,"author":{"gitId":"ZD292"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2023-09-28"},{"lineNumber":19,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":20,"author":{"gitId":"ZD292"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2023-09-28"},{"lineNumber":21,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":22,"author":{"gitId":"ZD292"},"content":"* **Project management**:","lastModifiedDate":"2023-09-28"},{"lineNumber":23,"author":{"gitId":"ZD292"},"content":"  * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2023-09-28"},{"lineNumber":24,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":25,"author":{"gitId":"ZD292"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-09-28"},{"lineNumber":26,"author":{"gitId":"ZD292"},"content":"  * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2023-09-28"},{"lineNumber":27,"author":{"gitId":"ZD292"},"content":"  * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2023-09-28"},{"lineNumber":28,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":29,"author":{"gitId":"ZD292"},"content":"* **Documentation**:","lastModifiedDate":"2023-09-28"},{"lineNumber":30,"author":{"gitId":"ZD292"},"content":"  * User Guide:","lastModifiedDate":"2023-09-28"},{"lineNumber":31,"author":{"gitId":"ZD292"},"content":"    * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2023-09-28"},{"lineNumber":32,"author":{"gitId":"ZD292"},"content":"    * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2023-09-28"},{"lineNumber":33,"author":{"gitId":"ZD292"},"content":"  * Developer Guide:","lastModifiedDate":"2023-09-28"},{"lineNumber":34,"author":{"gitId":"ZD292"},"content":"    * Added implementation details of the `delete` feature.","lastModifiedDate":"2023-09-28"},{"lineNumber":35,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":36,"author":{"gitId":"ZD292"},"content":"* **Community**:","lastModifiedDate":"2023-09-28"},{"lineNumber":37,"author":{"gitId":"ZD292"},"content":"  * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2023-09-28"},{"lineNumber":38,"author":{"gitId":"ZD292"},"content":"  * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2023-09-28"},{"lineNumber":39,"author":{"gitId":"ZD292"},"content":"  * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2023-09-28"},{"lineNumber":40,"author":{"gitId":"ZD292"},"content":"  * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2023-09-28"},{"lineNumber":41,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":42,"author":{"gitId":"ZD292"},"content":"* **Tools**:","lastModifiedDate":"2023-09-28"},{"lineNumber":43,"author":{"gitId":"ZD292"},"content":"  * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2023-09-28"},{"lineNumber":44,"author":{"gitId":"ZD292"},"content":"  * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2023-09-28"},{"lineNumber":45,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":46,"author":{"gitId":"ZD292"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2023-09-28"}],"authorContributionMap":{"Kailash201":1,"ZD292":45}},{"path":"docs/team/lerxuann.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ZD292"},"content":"---","lastModifiedDate":"2023-09-28"},{"lineNumber":2,"author":{"gitId":"ZD292"},"content":"  layout: default.md","lastModifiedDate":"2023-09-28"},{"lineNumber":3,"author":{"gitId":"lerxuann"},"content":"  title: \"Goh Ler Xuan\u0027s Project Portfolio Page\"","lastModifiedDate":"2023-10-04"},{"lineNumber":4,"author":{"gitId":"ZD292"},"content":"---","lastModifiedDate":"2023-09-28"},{"lineNumber":5,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":6,"author":{"gitId":"ZD292"},"content":"### Project: AddressBook Level 3","lastModifiedDate":"2023-09-28"},{"lineNumber":7,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":8,"author":{"gitId":"ZD292"},"content":"AddressBook - Level 3 is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2023-09-28"},{"lineNumber":9,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":10,"author":{"gitId":"ZD292"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-09-28"},{"lineNumber":11,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":12,"author":{"gitId":"ZD292"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2023-09-28"},{"lineNumber":13,"author":{"gitId":"ZD292"},"content":"  * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2023-09-28"},{"lineNumber":14,"author":{"gitId":"ZD292"},"content":"  * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2023-09-28"},{"lineNumber":15,"author":{"gitId":"ZD292"},"content":"  * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2023-09-28"},{"lineNumber":16,"author":{"gitId":"ZD292"},"content":"  * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2023-09-28"},{"lineNumber":17,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":18,"author":{"gitId":"ZD292"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2023-09-28"},{"lineNumber":19,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":20,"author":{"gitId":"ZD292"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2023-09-28"},{"lineNumber":21,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":22,"author":{"gitId":"ZD292"},"content":"* **Project management**:","lastModifiedDate":"2023-09-28"},{"lineNumber":23,"author":{"gitId":"ZD292"},"content":"  * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2023-09-28"},{"lineNumber":24,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":25,"author":{"gitId":"ZD292"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-09-28"},{"lineNumber":26,"author":{"gitId":"ZD292"},"content":"  * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2023-09-28"},{"lineNumber":27,"author":{"gitId":"ZD292"},"content":"  * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2023-09-28"},{"lineNumber":28,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":29,"author":{"gitId":"ZD292"},"content":"* **Documentation**:","lastModifiedDate":"2023-09-28"},{"lineNumber":30,"author":{"gitId":"ZD292"},"content":"  * User Guide:","lastModifiedDate":"2023-09-28"},{"lineNumber":31,"author":{"gitId":"ZD292"},"content":"    * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2023-09-28"},{"lineNumber":32,"author":{"gitId":"ZD292"},"content":"    * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2023-09-28"},{"lineNumber":33,"author":{"gitId":"ZD292"},"content":"  * Developer Guide:","lastModifiedDate":"2023-09-28"},{"lineNumber":34,"author":{"gitId":"ZD292"},"content":"    * Added implementation details of the `delete` feature.","lastModifiedDate":"2023-09-28"},{"lineNumber":35,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":36,"author":{"gitId":"ZD292"},"content":"* **Community**:","lastModifiedDate":"2023-09-28"},{"lineNumber":37,"author":{"gitId":"ZD292"},"content":"  * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2023-09-28"},{"lineNumber":38,"author":{"gitId":"ZD292"},"content":"  * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2023-09-28"},{"lineNumber":39,"author":{"gitId":"ZD292"},"content":"  * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2023-09-28"},{"lineNumber":40,"author":{"gitId":"ZD292"},"content":"  * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2023-09-28"},{"lineNumber":41,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":42,"author":{"gitId":"ZD292"},"content":"* **Tools**:","lastModifiedDate":"2023-09-28"},{"lineNumber":43,"author":{"gitId":"ZD292"},"content":"  * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2023-09-28"},{"lineNumber":44,"author":{"gitId":"ZD292"},"content":"  * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2023-09-28"},{"lineNumber":45,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":46,"author":{"gitId":"ZD292"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2023-09-28"}],"authorContributionMap":{"ZD292":45,"lerxuann":1}},{"path":"docs/team/nicholastng010601.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ZD292"},"content":"---","lastModifiedDate":"2023-09-28"},{"lineNumber":2,"author":{"gitId":"ZD292"},"content":"  layout: default.md","lastModifiedDate":"2023-09-28"},{"lineNumber":3,"author":{"gitId":"nicholastng010601"},"content":"  title: \"Nicholas Tng\u0027s Project Portfolio Page\"","lastModifiedDate":"2023-10-04"},{"lineNumber":4,"author":{"gitId":"ZD292"},"content":"---","lastModifiedDate":"2023-09-28"},{"lineNumber":5,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":6,"author":{"gitId":"ZD292"},"content":"### Project: AddressBook Level 3","lastModifiedDate":"2023-09-28"},{"lineNumber":7,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":8,"author":{"gitId":"ZD292"},"content":"AddressBook - Level 3 is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2023-09-28"},{"lineNumber":9,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":10,"author":{"gitId":"ZD292"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-09-28"},{"lineNumber":11,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":12,"author":{"gitId":"ZD292"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2023-09-28"},{"lineNumber":13,"author":{"gitId":"ZD292"},"content":"  * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2023-09-28"},{"lineNumber":14,"author":{"gitId":"ZD292"},"content":"  * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2023-09-28"},{"lineNumber":15,"author":{"gitId":"ZD292"},"content":"  * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2023-09-28"},{"lineNumber":16,"author":{"gitId":"ZD292"},"content":"  * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2023-09-28"},{"lineNumber":17,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":18,"author":{"gitId":"ZD292"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2023-09-28"},{"lineNumber":19,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":20,"author":{"gitId":"ZD292"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2023-09-28"},{"lineNumber":21,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":22,"author":{"gitId":"ZD292"},"content":"* **Project management**:","lastModifiedDate":"2023-09-28"},{"lineNumber":23,"author":{"gitId":"ZD292"},"content":"  * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2023-09-28"},{"lineNumber":24,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":25,"author":{"gitId":"ZD292"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-09-28"},{"lineNumber":26,"author":{"gitId":"ZD292"},"content":"  * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2023-09-28"},{"lineNumber":27,"author":{"gitId":"ZD292"},"content":"  * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2023-09-28"},{"lineNumber":28,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":29,"author":{"gitId":"ZD292"},"content":"* **Documentation**:","lastModifiedDate":"2023-09-28"},{"lineNumber":30,"author":{"gitId":"ZD292"},"content":"  * User Guide:","lastModifiedDate":"2023-09-28"},{"lineNumber":31,"author":{"gitId":"ZD292"},"content":"    * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2023-09-28"},{"lineNumber":32,"author":{"gitId":"ZD292"},"content":"    * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2023-09-28"},{"lineNumber":33,"author":{"gitId":"ZD292"},"content":"  * Developer Guide:","lastModifiedDate":"2023-09-28"},{"lineNumber":34,"author":{"gitId":"ZD292"},"content":"    * Added implementation details of the `delete` feature.","lastModifiedDate":"2023-09-28"},{"lineNumber":35,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":36,"author":{"gitId":"ZD292"},"content":"* **Community**:","lastModifiedDate":"2023-09-28"},{"lineNumber":37,"author":{"gitId":"ZD292"},"content":"  * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2023-09-28"},{"lineNumber":38,"author":{"gitId":"ZD292"},"content":"  * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2023-09-28"},{"lineNumber":39,"author":{"gitId":"ZD292"},"content":"  * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2023-09-28"},{"lineNumber":40,"author":{"gitId":"ZD292"},"content":"  * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2023-09-28"},{"lineNumber":41,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":42,"author":{"gitId":"ZD292"},"content":"* **Tools**:","lastModifiedDate":"2023-09-28"},{"lineNumber":43,"author":{"gitId":"ZD292"},"content":"  * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2023-09-28"},{"lineNumber":44,"author":{"gitId":"ZD292"},"content":"  * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2023-09-28"},{"lineNumber":45,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":46,"author":{"gitId":"ZD292"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2023-09-28"},{"lineNumber":47,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-10-07"}],"authorContributionMap":{"ZD292":45,"nicholastng010601":2}},{"path":"docs/team/zd292.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ZD292"},"content":"---","lastModifiedDate":"2023-09-28"},{"lineNumber":2,"author":{"gitId":"ZD292"},"content":"  layout: default.md","lastModifiedDate":"2023-09-28"},{"lineNumber":3,"author":{"gitId":"ZD292"},"content":"  title: \"John Doe\u0027s Project Portfolio Page\"","lastModifiedDate":"2023-09-28"},{"lineNumber":4,"author":{"gitId":"ZD292"},"content":"---","lastModifiedDate":"2023-09-28"},{"lineNumber":5,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":6,"author":{"gitId":"ZD292"},"content":"### Project: AddressBook Level 3","lastModifiedDate":"2023-09-28"},{"lineNumber":7,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":8,"author":{"gitId":"ZD292"},"content":"AddressBook - Level 3 is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2023-09-28"},{"lineNumber":9,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":10,"author":{"gitId":"ZD292"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-09-28"},{"lineNumber":11,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":12,"author":{"gitId":"ZD292"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2023-09-28"},{"lineNumber":13,"author":{"gitId":"ZD292"},"content":"  * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2023-09-28"},{"lineNumber":14,"author":{"gitId":"ZD292"},"content":"  * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2023-09-28"},{"lineNumber":15,"author":{"gitId":"ZD292"},"content":"  * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2023-09-28"},{"lineNumber":16,"author":{"gitId":"ZD292"},"content":"  * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2023-09-28"},{"lineNumber":17,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":18,"author":{"gitId":"ZD292"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2023-09-28"},{"lineNumber":19,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":20,"author":{"gitId":"ZD292"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2023-09-28"},{"lineNumber":21,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":22,"author":{"gitId":"ZD292"},"content":"* **Project management**:","lastModifiedDate":"2023-09-28"},{"lineNumber":23,"author":{"gitId":"ZD292"},"content":"  * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2023-09-28"},{"lineNumber":24,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":25,"author":{"gitId":"ZD292"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-09-28"},{"lineNumber":26,"author":{"gitId":"ZD292"},"content":"  * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2023-09-28"},{"lineNumber":27,"author":{"gitId":"ZD292"},"content":"  * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2023-09-28"},{"lineNumber":28,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":29,"author":{"gitId":"ZD292"},"content":"* **Documentation**:","lastModifiedDate":"2023-09-28"},{"lineNumber":30,"author":{"gitId":"ZD292"},"content":"  * User Guide:","lastModifiedDate":"2023-09-28"},{"lineNumber":31,"author":{"gitId":"ZD292"},"content":"    * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2023-09-28"},{"lineNumber":32,"author":{"gitId":"ZD292"},"content":"    * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2023-09-28"},{"lineNumber":33,"author":{"gitId":"ZD292"},"content":"  * Developer Guide:","lastModifiedDate":"2023-09-28"},{"lineNumber":34,"author":{"gitId":"ZD292"},"content":"    * Added implementation details of the `delete` feature.","lastModifiedDate":"2023-09-28"},{"lineNumber":35,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":36,"author":{"gitId":"ZD292"},"content":"* **Community**:","lastModifiedDate":"2023-09-28"},{"lineNumber":37,"author":{"gitId":"ZD292"},"content":"  * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2023-09-28"},{"lineNumber":38,"author":{"gitId":"ZD292"},"content":"  * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2023-09-28"},{"lineNumber":39,"author":{"gitId":"ZD292"},"content":"  * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2023-09-28"},{"lineNumber":40,"author":{"gitId":"ZD292"},"content":"  * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2023-09-28"},{"lineNumber":41,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":42,"author":{"gitId":"ZD292"},"content":"* **Tools**:","lastModifiedDate":"2023-09-28"},{"lineNumber":43,"author":{"gitId":"ZD292"},"content":"  * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2023-09-28"},{"lineNumber":44,"author":{"gitId":"ZD292"},"content":"  * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2023-09-28"},{"lineNumber":45,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":46,"author":{"gitId":"ZD292"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2023-09-28"}],"authorContributionMap":{"ZD292":46}},{"path":"src/.idea/misc.xml","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"nicholastng010601"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":2,"author":{"gitId":"nicholastng010601"},"content":"\u003cproject version\u003d\"4\"\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":3,"author":{"gitId":"nicholastng010601"},"content":"  \u003ccomponent name\u003d\"ProjectRootManager\" version\u003d\"2\" project-jdk-name\u003d\"zulu-11\" project-jdk-type\u003d\"JavaSDK\"\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":4,"author":{"gitId":"nicholastng010601"},"content":"    \u003coutput url\u003d\"file://$PROJECT_DIR$/out\" /\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":5,"author":{"gitId":"nicholastng010601"},"content":"  \u003c/component\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":6,"author":{"gitId":"nicholastng010601"},"content":"\u003c/project\u003e","lastModifiedDate":"2023-10-03"}],"authorContributionMap":{"nicholastng010601":6}},{"path":"src/.idea/modules.xml","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"nicholastng010601"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":2,"author":{"gitId":"nicholastng010601"},"content":"\u003cproject version\u003d\"4\"\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":3,"author":{"gitId":"nicholastng010601"},"content":"  \u003ccomponent name\u003d\"ProjectModuleManager\"\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":4,"author":{"gitId":"nicholastng010601"},"content":"    \u003cmodules\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":5,"author":{"gitId":"nicholastng010601"},"content":"      \u003cmodule fileurl\u003d\"file://$PROJECT_DIR$/main/main.iml\" filepath\u003d\"$PROJECT_DIR$/main/main.iml\" /\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":6,"author":{"gitId":"nicholastng010601"},"content":"      \u003cmodule fileurl\u003d\"file://$PROJECT_DIR$/.idea/src.iml\" filepath\u003d\"$PROJECT_DIR$/.idea/src.iml\" /\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":7,"author":{"gitId":"nicholastng010601"},"content":"      \u003cmodule fileurl\u003d\"file://$PROJECT_DIR$/test/test.iml\" filepath\u003d\"$PROJECT_DIR$/test/test.iml\" /\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":8,"author":{"gitId":"nicholastng010601"},"content":"    \u003c/modules\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":9,"author":{"gitId":"nicholastng010601"},"content":"  \u003c/component\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":10,"author":{"gitId":"nicholastng010601"},"content":"\u003c/project\u003e","lastModifiedDate":"2023-10-03"}],"authorContributionMap":{"nicholastng010601":10}},{"path":"src/.idea/vcs.xml","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"nicholastng010601"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":2,"author":{"gitId":"nicholastng010601"},"content":"\u003cproject version\u003d\"4\"\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":3,"author":{"gitId":"nicholastng010601"},"content":"  \u003ccomponent name\u003d\"VcsDirectoryMappings\"\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":4,"author":{"gitId":"nicholastng010601"},"content":"    \u003cmapping directory\u003d\"$PROJECT_DIR$/..\" vcs\u003d\"Git\" /\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":5,"author":{"gitId":"nicholastng010601"},"content":"  \u003c/component\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":6,"author":{"gitId":"nicholastng010601"},"content":"\u003c/project\u003e","lastModifiedDate":"2023-10-03"}],"authorContributionMap":{"nicholastng010601":6}},{"path":"src/main/java/seedu/address/Main.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address;","lastModifiedDate":"2019-02-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-07-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2019-02-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-07-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2019-02-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * The main entry point to the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * This is a workaround for the following error when MainApp is made the","lastModifiedDate":"2019-02-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * entry point of the application:","lastModifiedDate":"2019-02-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" *     Error: JavaFX runtime components are missing, and are required to run this application","lastModifiedDate":"2019-02-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The reason is that MainApp extends Application. In that case, the","lastModifiedDate":"2019-02-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * LauncherHelper will check for the javafx.graphics module to be present","lastModifiedDate":"2019-02-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * as a named module. We don\u0027t use JavaFX via the module system so it can\u0027t","lastModifiedDate":"2019-02-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * find the javafx.graphics module, and so the launch is aborted.","lastModifiedDate":"2019-02-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * By having a separate main class (Main) that doesn\u0027t extend Application","lastModifiedDate":"2019-02-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * to be the entry point of the application, we avoid this issue.","lastModifiedDate":"2019-02-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2019-02-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class Main {","lastModifiedDate":"2019-02-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static Logger logger \u003d LogsCenter.getLogger(Main.class);","lastModifiedDate":"2023-07-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-02-08"},{"lineNumber":28,"author":{"gitId":"ZD292"},"content":"//        assert false;","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // As per https://github.com/openjdk/jfx/blob/master/doc-files/release-notes-16.md","lastModifiedDate":"2023-07-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // JavaFX 16 (or later) runtime logs a warning at startup if JavaFX classes are loaded from","lastModifiedDate":"2023-07-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // the classpath instead of a module.","lastModifiedDate":"2023-07-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // Our application does not use Java modules yet. Even if it did, modules are ignored when","lastModifiedDate":"2023-07-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // packed into a FAT Jar file (as we do), which means this warning will persist even then.","lastModifiedDate":"2023-07-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // The warning however, can be safely ignored. Thus, the following log informs","lastModifiedDate":"2023-07-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // the user (if looking at the log output) that the said warning appearing in the log","lastModifiedDate":"2023-07-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // can be ignored.","lastModifiedDate":"2023-07-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        logger.warning(\"The warning about Unsupported JavaFX configuration below can be ignored.\");","lastModifiedDate":"2023-07-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        Application.launch(MainApp.class, args);","lastModifiedDate":"2019-02-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-02-08"}],"authorContributionMap":{"ZD292":1,"-":40}},{"path":"src/main/java/seedu/address/logic/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2023-07-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2023-07-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-07-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-07-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2023-07-14"},{"lineNumber":8,"author":{"gitId":"ZD292"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2023-10-10"},{"lineNumber":9,"author":{"gitId":"Kailash201"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-10-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2019-02-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_PERSON_DISPLAYED_INDEX \u003d \"The person index provided is invalid\";","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1$d persons listed!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_FIELDS \u003d","lastModifiedDate":"2023-07-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"                \"Multiple values specified for the following single-valued field(s): \";","lastModifiedDate":"2023-07-14"},{"lineNumber":23,"author":{"gitId":"nicholastng010601"},"content":"    public static final String MESSAGE_NO_PERSON_WITH_NAME_FOUND \u003d \"No person with such name found.\\n\"","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"nicholastng010601"},"content":"            + \"Please provide the person\u0027s full name as in the existing contactlist.\";","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"nicholastng010601"},"content":"    public static final java.lang.String MESSAGE_DUPLICATE_PERSON_IN_GROUP \u003d","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"nicholastng010601"},"content":"            \"Error, invalid input entered, unable to put the person into group\";","lastModifiedDate":"2023-10-25"},{"lineNumber":27,"author":{"gitId":"nicholastng010601"},"content":"    public static final String MESSAGE_NO_GROUP_WITH_NAME_FOUND \u003d \"No group with such name found.\\n\"","lastModifiedDate":"2023-10-25"},{"lineNumber":28,"author":{"gitId":"nicholastng010601"},"content":"            + \"Please provide the group\u0027s full name as in the existing contactlist.\";","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":30,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-07-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Returns an error message indicating the duplicate prefixes.","lastModifiedDate":"2023-07-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-07-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static String getErrorMessageForDuplicatePrefixes(Prefix... duplicatePrefixes) {","lastModifiedDate":"2023-07-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assert duplicatePrefixes.length \u003e 0;","lastModifiedDate":"2023-07-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        Set\u003cString\u003e duplicateFields \u003d","lastModifiedDate":"2023-07-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                Stream.of(duplicatePrefixes).map(Prefix::toString).collect(Collectors.toSet());","lastModifiedDate":"2023-07-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return MESSAGE_DUPLICATE_FIELDS + String.join(\" \", duplicateFields);","lastModifiedDate":"2023-07-14"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Formats the {@code person} for display to the user.","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-02-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static String format(Person person) {","lastModifiedDate":"2019-02-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2019-02-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        builder.append(person.getName())","lastModifiedDate":"2019-02-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2019-02-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                .append(person.getPhone())","lastModifiedDate":"2019-02-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2019-02-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                .append(person.getEmail())","lastModifiedDate":"2019-02-23"},{"lineNumber":54,"author":{"gitId":"Kailash201"},"content":"                .append(\"; Groups: \");","lastModifiedDate":"2023-10-06"},{"lineNumber":55,"author":{"gitId":"Kailash201"},"content":"        person.getGroups().toStream().map(Group::getGroupName).forEach(builder::append);","lastModifiedDate":"2023-10-06"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":59,"author":{"gitId":"nicholastng010601"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":60,"author":{"gitId":"nicholastng010601"},"content":"     * Formats the {@code group} for display to the user.","lastModifiedDate":"2023-10-03"},{"lineNumber":61,"author":{"gitId":"nicholastng010601"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":62,"author":{"gitId":"nicholastng010601"},"content":"    public static String format(Group group) {","lastModifiedDate":"2023-10-03"},{"lineNumber":63,"author":{"gitId":"nicholastng010601"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2023-10-03"},{"lineNumber":64,"author":{"gitId":"nicholastng010601"},"content":"        builder.append(group.getGroupName());","lastModifiedDate":"2023-10-03"},{"lineNumber":65,"author":{"gitId":"nicholastng010601"},"content":"        return builder.toString();","lastModifiedDate":"2023-10-03"},{"lineNumber":66,"author":{"gitId":"nicholastng010601"},"content":"    }","lastModifiedDate":"2023-10-03"},{"lineNumber":67,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":68,"author":{"gitId":"Kailash201"},"content":"    /**","lastModifiedDate":"2023-10-22"},{"lineNumber":69,"author":{"gitId":"Kailash201"},"content":"     * Formats the {@code name} for display to the user.","lastModifiedDate":"2023-10-22"},{"lineNumber":70,"author":{"gitId":"Kailash201"},"content":"     */","lastModifiedDate":"2023-10-22"},{"lineNumber":71,"author":{"gitId":"Kailash201"},"content":"    public static String format(Name personName) {","lastModifiedDate":"2023-10-21"},{"lineNumber":72,"author":{"gitId":"Kailash201"},"content":"        //add print function","lastModifiedDate":"2023-10-21"},{"lineNumber":73,"author":{"gitId":"Kailash201"},"content":"        return personName.fullName;","lastModifiedDate":"2023-10-21"},{"lineNumber":74,"author":{"gitId":"Kailash201"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":75,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":76,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Kailash201":12,"ZD292":1,"nicholastng010601":17,"-":47}},{"path":"src/main/java/seedu/address/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"Kailash201"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GROUPTAG;","lastModifiedDate":"2023-10-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-01-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Adds a person to the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"nicholastng010601"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a person to the address book. \\n\"","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2017-06-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2017-05-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2017-05-09"},{"lineNumber":27,"author":{"gitId":"nicholastng010601"},"content":"        + PREFIX_GROUPTAG + \"GROUPNAME \\n\"","lastModifiedDate":"2023-10-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2017-06-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2017-05-09"},{"lineNumber":32,"author":{"gitId":"Kailash201"},"content":"        + PREFIX_GROUPTAG + \"CS2103T\";","lastModifiedDate":"2023-10-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New person added: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book\";","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"nicholastng010601"},"content":"    public static final String MESSAGE_DUPLICATE_NAME \u003d \"This name already exists in the address book\";","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"nicholastng010601"},"content":"    public static final String MESSAGE_DUPLICATE_PHONE \u003d \"This number already exists in the address book\";","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"nicholastng010601"},"content":"    public static final String MESSAGE_DUPLICATE_EMAIL \u003d \"This email already exists in the address book\";","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private final Person toAdd;","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Creates an AddCommand to add the specified {@code Person}","lastModifiedDate":"2018-01-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public AddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        toAdd \u003d person;","lastModifiedDate":"2018-01-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"nicholastng010601"},"content":"        boolean[] fields \u003d model.usedFields(toAdd);","lastModifiedDate":"2023-10-13"},{"lineNumber":55,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (model.hasPerson(toAdd)) {","lastModifiedDate":"2023-10-22"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":58,"author":{"gitId":"nicholastng010601"},"content":"        } else if (fields[1]) {","lastModifiedDate":"2023-10-13"},{"lineNumber":59,"author":{"gitId":"nicholastng010601"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_NAME);","lastModifiedDate":"2023-10-13"},{"lineNumber":60,"author":{"gitId":"nicholastng010601"},"content":"        } else if (fields[2]) {","lastModifiedDate":"2023-10-13"},{"lineNumber":61,"author":{"gitId":"nicholastng010601"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PHONE);","lastModifiedDate":"2023-10-13"},{"lineNumber":62,"author":{"gitId":"Kailash201"},"content":"        } else if (fields[3]) {","lastModifiedDate":"2023-10-22"},{"lineNumber":63,"author":{"gitId":"nicholastng010601"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_EMAIL);","lastModifiedDate":"2023-10-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        model.addPerson(toAdd);","lastModifiedDate":"2016-09-25"},{"lineNumber":67,"author":{"gitId":"Kailash201"},"content":"        toAdd.getGroups().toStream().findFirst().ifPresent(group -\u003e {","lastModifiedDate":"2023-10-12"},{"lineNumber":68,"author":{"gitId":"nicholastng010601"},"content":"            if (!model.hasGroup(group)) {","lastModifiedDate":"2023-10-22"},{"lineNumber":69,"author":{"gitId":"Kailash201"},"content":"                model.addGroup(group);","lastModifiedDate":"2023-10-12"},{"lineNumber":70,"author":{"gitId":"nicholastng010601"},"content":"            }","lastModifiedDate":"2023-10-22"},{"lineNumber":71,"author":{"gitId":"Kailash201"},"content":"            try {","lastModifiedDate":"2023-10-12"},{"lineNumber":72,"author":{"gitId":"Kailash201"},"content":"                group.addPerson(toAdd);","lastModifiedDate":"2023-10-12"},{"lineNumber":73,"author":{"gitId":"Kailash201"},"content":"            } catch (CommandException e) {","lastModifiedDate":"2023-10-12"},{"lineNumber":74,"author":{"gitId":"Kailash201"},"content":"                throw new RuntimeException(e);","lastModifiedDate":"2023-10-12"},{"lineNumber":75,"author":{"gitId":"Kailash201"},"content":"            }","lastModifiedDate":"2023-10-12"},{"lineNumber":76,"author":{"gitId":"Kailash201"},"content":"        });","lastModifiedDate":"2023-10-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, Messages.format(toAdd)));","lastModifiedDate":"2019-02-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        if (!(other instanceof AddCommand)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        AddCommand otherAddCommand \u003d (AddCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return toAdd.equals(otherAddCommand.toAdd);","lastModifiedDate":"2023-07-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            .add(\"toAdd\", toAdd)","lastModifiedDate":"2019-02-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Kailash201":12,"nicholastng010601":13,"-":76}},{"path":"src/main/java/seedu/address/logic/commands/AddGroupFreeTimeCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"coderhuang559"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-25"},{"lineNumber":2,"author":{"gitId":"coderhuang559"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":3,"author":{"gitId":"coderhuang559"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-25"},{"lineNumber":4,"author":{"gitId":"coderhuang559"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-25"},{"lineNumber":5,"author":{"gitId":"coderhuang559"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"coderhuang559"},"content":"import seedu.address.model.TimeInterval;","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"coderhuang559"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"coderhuang559"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"coderhuang559"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"coderhuang559"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"coderhuang559"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"coderhuang559"},"content":"import static seedu.address.logic.parser.CliSyntax.*;","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"coderhuang559"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"coderhuang559"},"content":"public class AddGroupFreeTimeCommand extends Command {","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"coderhuang559"},"content":"    public static final String COMMAND_WORD \u003d \"addmeeting\";","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"coderhuang559"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"coderhuang559"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-10-25"},{"lineNumber":18,"author":{"gitId":"coderhuang559"},"content":"            + \": Add free time to a group.\\n\"","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"coderhuang559"},"content":"            + \"Parameters: \"","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"coderhuang559"},"content":"            + PREFIX_GROUPTAG + \"GROUP\\n\"","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"coderhuang559"},"content":"            + PREFIX_FREETIME + \"FREE TIME \\n\"","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"coderhuang559"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"coderhuang559"},"content":"            + PREFIX_GROUPTAG + \"CS2103T \"","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"coderhuang559"},"content":"            + PREFIX_FREETIME + \"mon 1200 - mon 1400 ;tue 1000 - wed 1600\";","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"coderhuang559"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"coderhuang559"},"content":"    public static final String MESSAGE_NO_GROUP_WITH_NAME_FOUND \u003d \"No group with such name found.\\n\"","lastModifiedDate":"2023-10-25"},{"lineNumber":27,"author":{"gitId":"coderhuang559"},"content":"            + \"Please provide the group\u0027s full name as in the existing contactlist.\";","lastModifiedDate":"2023-10-25"},{"lineNumber":28,"author":{"gitId":"coderhuang559"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"coderhuang559"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Free time added to: %1$s\";","lastModifiedDate":"2023-10-25"},{"lineNumber":30,"author":{"gitId":"coderhuang559"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":31,"author":{"gitId":"coderhuang559"},"content":"    private final Group toAdd;","lastModifiedDate":"2023-10-25"},{"lineNumber":32,"author":{"gitId":"coderhuang559"},"content":"    private final ArrayList\u003cTimeInterval\u003e toAddFreeTime;","lastModifiedDate":"2023-10-25"},{"lineNumber":33,"author":{"gitId":"coderhuang559"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":34,"author":{"gitId":"coderhuang559"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":35,"author":{"gitId":"coderhuang559"},"content":"     * AddGroupFreeTimeCommand constructor.","lastModifiedDate":"2023-10-25"},{"lineNumber":36,"author":{"gitId":"coderhuang559"},"content":"     * @param toAdd The group object to be added to.","lastModifiedDate":"2023-10-25"},{"lineNumber":37,"author":{"gitId":"coderhuang559"},"content":"     * @param toAddFreeTime ArrayList of time intervals to be added to group.","lastModifiedDate":"2023-10-25"},{"lineNumber":38,"author":{"gitId":"coderhuang559"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":39,"author":{"gitId":"coderhuang559"},"content":"    public AddGroupFreeTimeCommand(Group toAdd, ArrayList\u003cTimeInterval\u003e toAddFreeTime) {","lastModifiedDate":"2023-10-25"},{"lineNumber":40,"author":{"gitId":"coderhuang559"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2023-10-25"},{"lineNumber":41,"author":{"gitId":"coderhuang559"},"content":"        requireNonNull(toAddFreeTime);","lastModifiedDate":"2023-10-25"},{"lineNumber":42,"author":{"gitId":"coderhuang559"},"content":"        this.toAddFreeTime \u003d toAddFreeTime;","lastModifiedDate":"2023-10-25"},{"lineNumber":43,"author":{"gitId":"coderhuang559"},"content":"        this.toAdd \u003d toAdd;","lastModifiedDate":"2023-10-25"},{"lineNumber":44,"author":{"gitId":"coderhuang559"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":45,"author":{"gitId":"coderhuang559"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":46,"author":{"gitId":"coderhuang559"},"content":"    @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":47,"author":{"gitId":"coderhuang559"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-25"},{"lineNumber":48,"author":{"gitId":"coderhuang559"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-25"},{"lineNumber":49,"author":{"gitId":"coderhuang559"},"content":"        if (model.hasGroup(toAdd)) {","lastModifiedDate":"2023-10-25"},{"lineNumber":50,"author":{"gitId":"nicholastng010601"},"content":"            model.addTimeToGroup(toAdd, toAddFreeTime);","lastModifiedDate":"2023-10-25"},{"lineNumber":51,"author":{"gitId":"coderhuang559"},"content":"        } else {","lastModifiedDate":"2023-10-25"},{"lineNumber":52,"author":{"gitId":"coderhuang559"},"content":"            throw new CommandException(MESSAGE_NO_GROUP_WITH_NAME_FOUND);","lastModifiedDate":"2023-10-25"},{"lineNumber":53,"author":{"gitId":"coderhuang559"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":54,"author":{"gitId":"coderhuang559"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":55,"author":{"gitId":"coderhuang559"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, Messages.format(toAdd)));","lastModifiedDate":"2023-10-25"},{"lineNumber":56,"author":{"gitId":"coderhuang559"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":57,"author":{"gitId":"coderhuang559"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":58,"author":{"gitId":"coderhuang559"},"content":"    @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":59,"author":{"gitId":"coderhuang559"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-25"},{"lineNumber":60,"author":{"gitId":"coderhuang559"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-25"},{"lineNumber":61,"author":{"gitId":"coderhuang559"},"content":"            return true;","lastModifiedDate":"2023-10-25"},{"lineNumber":62,"author":{"gitId":"coderhuang559"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":63,"author":{"gitId":"coderhuang559"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":64,"author":{"gitId":"coderhuang559"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-25"},{"lineNumber":65,"author":{"gitId":"coderhuang559"},"content":"        if (!(other instanceof AddGroupFreeTimeCommand)) {","lastModifiedDate":"2023-10-25"},{"lineNumber":66,"author":{"gitId":"coderhuang559"},"content":"            return false;","lastModifiedDate":"2023-10-25"},{"lineNumber":67,"author":{"gitId":"coderhuang559"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":68,"author":{"gitId":"coderhuang559"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":69,"author":{"gitId":"coderhuang559"},"content":"        AddGroupFreeTimeCommand otherAddGroupFreeTimeCommand \u003d (AddGroupFreeTimeCommand) other;","lastModifiedDate":"2023-10-25"},{"lineNumber":70,"author":{"gitId":"coderhuang559"},"content":"        return toAdd.equals(otherAddGroupFreeTimeCommand.toAdd)","lastModifiedDate":"2023-10-25"},{"lineNumber":71,"author":{"gitId":"coderhuang559"},"content":"                \u0026\u0026 toAddFreeTime.equals(otherAddGroupFreeTimeCommand.toAddFreeTime);","lastModifiedDate":"2023-10-25"},{"lineNumber":72,"author":{"gitId":"coderhuang559"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":73,"author":{"gitId":"coderhuang559"},"content":"}","lastModifiedDate":"2023-10-25"}],"authorContributionMap":{"coderhuang559":72,"nicholastng010601":1}},{"path":"src/main/java/seedu/address/logic/commands/AddTimeCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Kailash201"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-21"},{"lineNumber":2,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":3,"author":{"gitId":"Kailash201"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-21"},{"lineNumber":4,"author":{"gitId":"Kailash201"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_FREETIME;","lastModifiedDate":"2023-10-21"},{"lineNumber":5,"author":{"gitId":"Kailash201"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-21"},{"lineNumber":6,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":7,"author":{"gitId":"Kailash201"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-21"},{"lineNumber":8,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":9,"author":{"gitId":"Kailash201"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-21"},{"lineNumber":10,"author":{"gitId":"Kailash201"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-21"},{"lineNumber":11,"author":{"gitId":"Kailash201"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-21"},{"lineNumber":12,"author":{"gitId":"Kailash201"},"content":"import seedu.address.model.TimeInterval;","lastModifiedDate":"2023-10-21"},{"lineNumber":13,"author":{"gitId":"Kailash201"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-10-21"},{"lineNumber":14,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":15,"author":{"gitId":"Kailash201"},"content":"/**","lastModifiedDate":"2023-10-22"},{"lineNumber":16,"author":{"gitId":"Kailash201"},"content":" * Adds free time to person.","lastModifiedDate":"2023-10-22"},{"lineNumber":17,"author":{"gitId":"Kailash201"},"content":" */","lastModifiedDate":"2023-10-22"},{"lineNumber":18,"author":{"gitId":"Kailash201"},"content":"public class AddTimeCommand extends Command {","lastModifiedDate":"2023-10-21"},{"lineNumber":19,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":20,"author":{"gitId":"Kailash201"},"content":"    public static final String COMMAND_WORD \u003d \"addtime\";","lastModifiedDate":"2023-10-21"},{"lineNumber":21,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":22,"author":{"gitId":"Kailash201"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds free time to an existing person. \\n\"","lastModifiedDate":"2023-10-21"},{"lineNumber":23,"author":{"gitId":"Kailash201"},"content":"        + \"Parameters: \"","lastModifiedDate":"2023-10-21"},{"lineNumber":24,"author":{"gitId":"Kailash201"},"content":"        + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2023-10-21"},{"lineNumber":25,"author":{"gitId":"nicholastng010601"},"content":"        + PREFIX_FREETIME + \"FREE TIME \\n\"","lastModifiedDate":"2023-10-23"},{"lineNumber":26,"author":{"gitId":"Kailash201"},"content":"        + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2023-10-21"},{"lineNumber":27,"author":{"gitId":"Kailash201"},"content":"        + PREFIX_NAME + \"Alex Yeoh \"","lastModifiedDate":"2023-10-21"},{"lineNumber":28,"author":{"gitId":"Kailash201"},"content":"        + PREFIX_FREETIME + \"mon 1200 - mon 1400 ;tue 1000 - wed 1600\";","lastModifiedDate":"2023-10-21"},{"lineNumber":29,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":30,"author":{"gitId":"Kailash201"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Free time added to: %1$s\";","lastModifiedDate":"2023-10-21"},{"lineNumber":31,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":32,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":33,"author":{"gitId":"nicholastng010601"},"content":"    private final ArrayList\u003cTimeInterval\u003e toAddFreeTimes;","lastModifiedDate":"2023-10-25"},{"lineNumber":34,"author":{"gitId":"Kailash201"},"content":"    private final Name toAddPerson;","lastModifiedDate":"2023-10-21"},{"lineNumber":35,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":36,"author":{"gitId":"Kailash201"},"content":"    /**","lastModifiedDate":"2023-10-22"},{"lineNumber":37,"author":{"gitId":"Kailash201"},"content":"     * AddTimeCommand constructor.","lastModifiedDate":"2023-10-22"},{"lineNumber":38,"author":{"gitId":"Kailash201"},"content":"     * @param toAddPerson The person object to be added to.","lastModifiedDate":"2023-10-22"},{"lineNumber":39,"author":{"gitId":"nicholastng010601"},"content":"     * @param toAddFreeTimes ArrayList of time intervals to be added to person.","lastModifiedDate":"2023-10-25"},{"lineNumber":40,"author":{"gitId":"Kailash201"},"content":"     */","lastModifiedDate":"2023-10-22"},{"lineNumber":41,"author":{"gitId":"nicholastng010601"},"content":"    public AddTimeCommand(Name toAddPerson, ArrayList\u003cTimeInterval\u003e toAddFreeTimes) {","lastModifiedDate":"2023-10-25"},{"lineNumber":42,"author":{"gitId":"Kailash201"},"content":"        requireNonNull(toAddPerson);","lastModifiedDate":"2023-10-21"},{"lineNumber":43,"author":{"gitId":"nicholastng010601"},"content":"        requireNonNull(toAddFreeTimes);","lastModifiedDate":"2023-10-25"},{"lineNumber":44,"author":{"gitId":"nicholastng010601"},"content":"        this.toAddFreeTimes \u003d toAddFreeTimes;","lastModifiedDate":"2023-10-25"},{"lineNumber":45,"author":{"gitId":"Kailash201"},"content":"        this.toAddPerson \u003d toAddPerson;","lastModifiedDate":"2023-10-21"},{"lineNumber":46,"author":{"gitId":"Kailash201"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":47,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":48,"author":{"gitId":"Kailash201"},"content":"    @Override","lastModifiedDate":"2023-10-21"},{"lineNumber":49,"author":{"gitId":"Kailash201"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-21"},{"lineNumber":50,"author":{"gitId":"Kailash201"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-21"},{"lineNumber":51,"author":{"gitId":"Kailash201"},"content":"        if (model.hasPerson(toAddPerson)) {","lastModifiedDate":"2023-10-21"},{"lineNumber":52,"author":{"gitId":"nicholastng010601"},"content":"            model.addTimeToPerson(toAddPerson, toAddFreeTimes);","lastModifiedDate":"2023-10-25"},{"lineNumber":53,"author":{"gitId":"Kailash201"},"content":"        } else {","lastModifiedDate":"2023-10-21"},{"lineNumber":54,"author":{"gitId":"Kailash201"},"content":"            throw new CommandException(\"Person does not exists\");","lastModifiedDate":"2023-10-21"},{"lineNumber":55,"author":{"gitId":"Kailash201"},"content":"        }","lastModifiedDate":"2023-10-21"},{"lineNumber":56,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":57,"author":{"gitId":"Kailash201"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, Messages.format(toAddPerson)));","lastModifiedDate":"2023-10-21"},{"lineNumber":58,"author":{"gitId":"Kailash201"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":59,"author":{"gitId":"Kailash201"},"content":"}","lastModifiedDate":"2023-10-21"}],"authorContributionMap":{"Kailash201":52,"nicholastng010601":7}},{"path":"src/main/java/seedu/address/logic/commands/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"coderhuang559"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Represents a command with hidden internal logic and the ability to be executed.","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public abstract class Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result message.","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2018-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * @return feedback message of the operation result for display","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"coderhuang559"},"content":"    public abstract CommandResult execute(Model model) throws CommandException, ParseException;","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"coderhuang559":2,"-":19}},{"path":"src/main/java/seedu/address/logic/commands/CommandResult.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-12-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Represents the result of a command execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class CommandResult {","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final String feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"Kailash201"},"content":"    /**","lastModifiedDate":"2023-10-22"},{"lineNumber":17,"author":{"gitId":"Kailash201"},"content":"     * Help information should be shown to the user.","lastModifiedDate":"2023-10-22"},{"lineNumber":18,"author":{"gitId":"Kailash201"},"content":"     */","lastModifiedDate":"2023-10-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final boolean showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"Kailash201"},"content":"    /**","lastModifiedDate":"2023-10-22"},{"lineNumber":22,"author":{"gitId":"Kailash201"},"content":"     * The application should exit.","lastModifiedDate":"2023-10-22"},{"lineNumber":23,"author":{"gitId":"Kailash201"},"content":"     */","lastModifiedDate":"2023-10-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final boolean exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified fields.","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser, boolean showHelp, boolean exit) {","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.showHelp \u003d showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.exit \u003d exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser},","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * and other fields set to their default value.","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this(feedbackToUser, false, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public String getFeedbackToUser() {","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean isShowHelp() {","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public boolean isExit() {","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        if (!(other instanceof CommandResult)) {","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-12-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        CommandResult otherCommandResult \u003d (CommandResult) other;","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return feedbackToUser.equals(otherCommandResult.feedbackToUser)","lastModifiedDate":"2018-12-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            \u0026\u0026 showHelp \u003d\u003d otherCommandResult.showHelp","lastModifiedDate":"2018-12-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            \u0026\u0026 exit \u003d\u003d otherCommandResult.exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return Objects.hash(feedbackToUser, showHelp, exit);","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            .add(\"feedbackToUser\", feedbackToUser)","lastModifiedDate":"2019-02-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            .add(\"showHelp\", showHelp)","lastModifiedDate":"2019-02-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            .add(\"exit\", exit)","lastModifiedDate":"2019-02-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Kailash201":6,"-":80}},{"path":"src/main/java/seedu/address/logic/commands/CreateGroupCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nicholastng010601"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-03"},{"lineNumber":2,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":3,"author":{"gitId":"Kailash201"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-06"},{"lineNumber":4,"author":{"gitId":"Kailash201"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GROUPTAG;","lastModifiedDate":"2023-10-06"},{"lineNumber":5,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":6,"author":{"gitId":"nicholastng010601"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-03"},{"lineNumber":7,"author":{"gitId":"nicholastng010601"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-03"},{"lineNumber":8,"author":{"gitId":"ZD292"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2023-10-10"},{"lineNumber":9,"author":{"gitId":"nicholastng010601"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-03"},{"lineNumber":10,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":11,"author":{"gitId":"Kailash201"},"content":"/**","lastModifiedDate":"2023-10-06"},{"lineNumber":12,"author":{"gitId":"Kailash201"},"content":" * Adds a group to projectPRO","lastModifiedDate":"2023-10-06"},{"lineNumber":13,"author":{"gitId":"Kailash201"},"content":" */","lastModifiedDate":"2023-10-06"},{"lineNumber":14,"author":{"gitId":"nicholastng010601"},"content":"public class CreateGroupCommand extends Command {","lastModifiedDate":"2023-10-03"},{"lineNumber":15,"author":{"gitId":"nicholastng010601"},"content":"    public static final String COMMAND_WORD \u003d \"new\";","lastModifiedDate":"2023-10-03"},{"lineNumber":16,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":17,"author":{"gitId":"nicholastng010601"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a group to the address book. \\n\"","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"nicholastng010601"},"content":"        + \"Parameters: \"","lastModifiedDate":"2023-10-03"},{"lineNumber":19,"author":{"gitId":"nicholastng010601"},"content":"        + PREFIX_GROUPTAG + \"GROUPNAME \\n\"","lastModifiedDate":"2023-10-03"},{"lineNumber":20,"author":{"gitId":"nicholastng010601"},"content":"        + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2023-10-03"},{"lineNumber":21,"author":{"gitId":"nicholastng010601"},"content":"        + PREFIX_GROUPTAG + \"CS2103T\";","lastModifiedDate":"2023-10-03"},{"lineNumber":22,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":23,"author":{"gitId":"nicholastng010601"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New group added: %1$s\";","lastModifiedDate":"2023-10-03"},{"lineNumber":24,"author":{"gitId":"nicholastng010601"},"content":"    public static final String MESSAGE_DUPLICATE_GROUP \u003d \"This group already exists in the address book\";","lastModifiedDate":"2023-10-03"},{"lineNumber":25,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":26,"author":{"gitId":"nicholastng010601"},"content":"    private final Group toAdd;","lastModifiedDate":"2023-10-03"},{"lineNumber":27,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":28,"author":{"gitId":"Kailash201"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":29,"author":{"gitId":"Kailash201"},"content":"     * Creates an newCommand to add the specified {@code Group}","lastModifiedDate":"2023-10-06"},{"lineNumber":30,"author":{"gitId":"Kailash201"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":31,"author":{"gitId":"nicholastng010601"},"content":"    public CreateGroupCommand(Group group) {","lastModifiedDate":"2023-10-03"},{"lineNumber":32,"author":{"gitId":"nicholastng010601"},"content":"        requireNonNull(group);","lastModifiedDate":"2023-10-03"},{"lineNumber":33,"author":{"gitId":"nicholastng010601"},"content":"        toAdd \u003d group;","lastModifiedDate":"2023-10-03"},{"lineNumber":34,"author":{"gitId":"nicholastng010601"},"content":"    }","lastModifiedDate":"2023-10-03"},{"lineNumber":35,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":36,"author":{"gitId":"nicholastng010601"},"content":"    @Override","lastModifiedDate":"2023-10-03"},{"lineNumber":37,"author":{"gitId":"nicholastng010601"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-03"},{"lineNumber":38,"author":{"gitId":"nicholastng010601"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-03"},{"lineNumber":39,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":40,"author":{"gitId":"nicholastng010601"},"content":"        if (model.hasGroup(toAdd)) {","lastModifiedDate":"2023-10-03"},{"lineNumber":41,"author":{"gitId":"nicholastng010601"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_GROUP);","lastModifiedDate":"2023-10-03"},{"lineNumber":42,"author":{"gitId":"nicholastng010601"},"content":"        }","lastModifiedDate":"2023-10-03"},{"lineNumber":43,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":44,"author":{"gitId":"nicholastng010601"},"content":"        model.addGroup(toAdd);","lastModifiedDate":"2023-10-03"},{"lineNumber":45,"author":{"gitId":"nicholastng010601"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, Messages.format(toAdd)));","lastModifiedDate":"2023-10-03"},{"lineNumber":46,"author":{"gitId":"nicholastng010601"},"content":"    }","lastModifiedDate":"2023-10-03"},{"lineNumber":47,"author":{"gitId":"nicholastng010601"},"content":"}","lastModifiedDate":"2023-10-03"}],"authorContributionMap":{"Kailash201":9,"ZD292":1,"nicholastng010601":37}},{"path":"src/main/java/seedu/address/logic/commands/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"lerxuann"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GROUPTAG;","lastModifiedDate":"2023-10-19"},{"lineNumber":4,"author":{"gitId":"nicholastng010601"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Deletes a person identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2018-04-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"lerxuann"},"content":"public abstract class DeleteCommand extends Command {","lastModifiedDate":"2023-10-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"lerxuann"},"content":"            + \": Deletes the person/group with the name provided.\\n\"","lastModifiedDate":"2023-10-19"},{"lineNumber":18,"author":{"gitId":"lerxuann"},"content":"            + \"Use \u0027delete n/NAME\u0027 to delete a person and \u0027delete g/GROUPNAME\u0027 to delete a group.\\n\"","lastModifiedDate":"2023-10-19"},{"lineNumber":19,"author":{"gitId":"nicholastng010601"},"content":"            + \"Parameters: \" + PREFIX_NAME","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"coderhuang559"},"content":"            + \"NAME (full name of an existing person)\\n\"","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"lerxuann"},"content":"            + \"Parameters: \" + PREFIX_GROUPTAG","lastModifiedDate":"2023-10-19"},{"lineNumber":22,"author":{"gitId":"lerxuann"},"content":"            + \"GROUPNAME (full name of an existing group)\\n\"","lastModifiedDate":"2023-10-19"},{"lineNumber":23,"author":{"gitId":"lerxuann"},"content":"            + \"Example: \" + COMMAND_WORD + \" \" + PREFIX_NAME + \"Nicholas Lee \\n\"","lastModifiedDate":"2023-10-19"},{"lineNumber":24,"author":{"gitId":"lerxuann"},"content":"            + \"Example: \" + COMMAND_WORD + \" \" + PREFIX_GROUPTAG + \"CS2103T\";","lastModifiedDate":"2023-10-19"},{"lineNumber":25,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":26,"author":{"gitId":"lerxuann"},"content":"    public static final String MESSAGE_TWO_PARAMETERS \u003d \"Multiple prefixes! \"","lastModifiedDate":"2023-10-19"},{"lineNumber":27,"author":{"gitId":"lerxuann"},"content":"            + COMMAND_WORD + \" can only handle one person/group at a time.\\n\"","lastModifiedDate":"2023-10-19"},{"lineNumber":28,"author":{"gitId":"lerxuann"},"content":"            + \"Example: \" + COMMAND_WORD + \" \" + PREFIX_NAME + \"Nicholas Lee \\n\"","lastModifiedDate":"2023-10-19"},{"lineNumber":29,"author":{"gitId":"lerxuann"},"content":"            + \"Example: \" + COMMAND_WORD + \" \" + PREFIX_GROUPTAG + \"CS2103T\";","lastModifiedDate":"2023-10-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"Kailash201"},"content":"    public DeleteCommand() {","lastModifiedDate":"2023-10-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"lerxuann"},"content":"    public abstract CommandResult execute(Model model) throws CommandException;","lastModifiedDate":"2023-10-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"lerxuann"},"content":"    public abstract boolean equals(Object other);","lastModifiedDate":"2023-10-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":41,"author":{"gitId":"lerxuann"},"content":"    public abstract String toString();","lastModifiedDate":"2023-10-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Kailash201":1,"coderhuang559":1,"lerxuann":16,"nicholastng010601":2,"-":22}},{"path":"src/main/java/seedu/address/logic/commands/DeleteGroupCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lerxuann"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-19"},{"lineNumber":2,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":3,"author":{"gitId":"Kailash201"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-22"},{"lineNumber":4,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":5,"author":{"gitId":"lerxuann"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-10-19"},{"lineNumber":6,"author":{"gitId":"lerxuann"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-19"},{"lineNumber":7,"author":{"gitId":"lerxuann"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-19"},{"lineNumber":8,"author":{"gitId":"lerxuann"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-19"},{"lineNumber":9,"author":{"gitId":"lerxuann"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2023-10-19"},{"lineNumber":10,"author":{"gitId":"lerxuann"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-19"},{"lineNumber":11,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":12,"author":{"gitId":"Kailash201"},"content":"/**","lastModifiedDate":"2023-10-22"},{"lineNumber":13,"author":{"gitId":"Kailash201"},"content":" * Removes group from the addressbook and person.","lastModifiedDate":"2023-10-22"},{"lineNumber":14,"author":{"gitId":"Kailash201"},"content":" */","lastModifiedDate":"2023-10-22"},{"lineNumber":15,"author":{"gitId":"lerxuann"},"content":"public class DeleteGroupCommand extends DeleteCommand {","lastModifiedDate":"2023-10-19"},{"lineNumber":16,"author":{"gitId":"lerxuann"},"content":"    public static final String MESSAGE_DELETE_GROUP_SUCCESS \u003d \"Deleted Group: %1$s\";","lastModifiedDate":"2023-10-19"},{"lineNumber":17,"author":{"gitId":"lerxuann"},"content":"    private final String groupName;","lastModifiedDate":"2023-10-19"},{"lineNumber":18,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":19,"author":{"gitId":"lerxuann"},"content":"    public DeleteGroupCommand(String groupName) {","lastModifiedDate":"2023-10-19"},{"lineNumber":20,"author":{"gitId":"lerxuann"},"content":"        this.groupName \u003d groupName;","lastModifiedDate":"2023-10-19"},{"lineNumber":21,"author":{"gitId":"lerxuann"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":22,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":23,"author":{"gitId":"lerxuann"},"content":"    @Override","lastModifiedDate":"2023-10-19"},{"lineNumber":24,"author":{"gitId":"lerxuann"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-19"},{"lineNumber":25,"author":{"gitId":"lerxuann"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-19"},{"lineNumber":26,"author":{"gitId":"lerxuann"},"content":"        Group groupToDelete \u003d model.deleteGroup(this.groupName);","lastModifiedDate":"2023-10-19"},{"lineNumber":27,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":28,"author":{"gitId":"lerxuann"},"content":"        //Delete group from all People","lastModifiedDate":"2023-10-19"},{"lineNumber":29,"author":{"gitId":"lerxuann"},"content":"        ObservableList\u003cPerson\u003e groupMates \u003d groupToDelete.getListOfGroupMates();","lastModifiedDate":"2023-10-19"},{"lineNumber":30,"author":{"gitId":"lerxuann"},"content":"        groupMates.stream().forEach(p -\u003e {","lastModifiedDate":"2023-10-19"},{"lineNumber":31,"author":{"gitId":"lerxuann"},"content":"            try {","lastModifiedDate":"2023-10-19"},{"lineNumber":32,"author":{"gitId":"lerxuann"},"content":"                p.removeGroup(groupToDelete);","lastModifiedDate":"2023-10-19"},{"lineNumber":33,"author":{"gitId":"lerxuann"},"content":"            } catch (CommandException e) {","lastModifiedDate":"2023-10-19"},{"lineNumber":34,"author":{"gitId":"lerxuann"},"content":"                throw new RuntimeException();","lastModifiedDate":"2023-10-19"},{"lineNumber":35,"author":{"gitId":"lerxuann"},"content":"            }","lastModifiedDate":"2023-10-19"},{"lineNumber":36,"author":{"gitId":"lerxuann"},"content":"        });","lastModifiedDate":"2023-10-19"},{"lineNumber":37,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":38,"author":{"gitId":"nicholastng010601"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_GROUP_SUCCESS, groupToDelete.getGroupName()));","lastModifiedDate":"2023-10-22"},{"lineNumber":39,"author":{"gitId":"lerxuann"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":40,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":41,"author":{"gitId":"lerxuann"},"content":"    @Override","lastModifiedDate":"2023-10-19"},{"lineNumber":42,"author":{"gitId":"lerxuann"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-19"},{"lineNumber":43,"author":{"gitId":"lerxuann"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-19"},{"lineNumber":44,"author":{"gitId":"lerxuann"},"content":"            return true;","lastModifiedDate":"2023-10-19"},{"lineNumber":45,"author":{"gitId":"lerxuann"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":46,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":47,"author":{"gitId":"lerxuann"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-19"},{"lineNumber":48,"author":{"gitId":"lerxuann"},"content":"        if (!(other instanceof DeleteGroupCommand)) {","lastModifiedDate":"2023-10-19"},{"lineNumber":49,"author":{"gitId":"lerxuann"},"content":"            return false;","lastModifiedDate":"2023-10-19"},{"lineNumber":50,"author":{"gitId":"lerxuann"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":51,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":52,"author":{"gitId":"lerxuann"},"content":"        DeleteGroupCommand otherDeleteGroupCommand \u003d (DeleteGroupCommand) other;","lastModifiedDate":"2023-10-19"},{"lineNumber":53,"author":{"gitId":"lerxuann"},"content":"        return groupName.equals(otherDeleteGroupCommand.groupName);","lastModifiedDate":"2023-10-19"},{"lineNumber":54,"author":{"gitId":"lerxuann"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":55,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":56,"author":{"gitId":"lerxuann"},"content":"    @Override","lastModifiedDate":"2023-10-19"},{"lineNumber":57,"author":{"gitId":"lerxuann"},"content":"    public String toString() {","lastModifiedDate":"2023-10-19"},{"lineNumber":58,"author":{"gitId":"lerxuann"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-19"},{"lineNumber":59,"author":{"gitId":"lerxuann"},"content":"            .add(\"group name\", groupName)","lastModifiedDate":"2023-10-19"},{"lineNumber":60,"author":{"gitId":"lerxuann"},"content":"            .toString();","lastModifiedDate":"2023-10-19"},{"lineNumber":61,"author":{"gitId":"lerxuann"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":62,"author":{"gitId":"lerxuann"},"content":"}","lastModifiedDate":"2023-10-19"}],"authorContributionMap":{"Kailash201":7,"lerxuann":54,"nicholastng010601":1}},{"path":"src/main/java/seedu/address/logic/commands/DeleteGroupTimeCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nicholastng010601"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-25"},{"lineNumber":2,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":3,"author":{"gitId":"nicholastng010601"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-25"},{"lineNumber":4,"author":{"gitId":"nicholastng010601"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-25"},{"lineNumber":5,"author":{"gitId":"nicholastng010601"},"content":"import seedu.address.model.TimeInterval;","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"nicholastng010601"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"nicholastng010601"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"nicholastng010601"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"nicholastng010601"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"nicholastng010601"},"content":"public class DeleteGroupTimeCommand extends DeleteTimeCommand {","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"nicholastng010601"},"content":"    private final ArrayList\u003cTimeInterval\u003e timeIntervalsToDelete;","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"nicholastng010601"},"content":"    private final Group group;","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"nicholastng010601"},"content":"    public DeleteGroupTimeCommand(Group group, ArrayList\u003cTimeInterval\u003e timeIntervalsToDelete) {","lastModifiedDate":"2023-10-25"},{"lineNumber":18,"author":{"gitId":"nicholastng010601"},"content":"        requireNonNull(group);","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"nicholastng010601"},"content":"        requireNonNull(timeIntervalsToDelete);","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"nicholastng010601"},"content":"        this.group \u003d group;","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"nicholastng010601"},"content":"        this.timeIntervalsToDelete \u003d timeIntervalsToDelete;","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"nicholastng010601"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"nicholastng010601"},"content":"    @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"nicholastng010601"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"nicholastng010601"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-25"},{"lineNumber":27,"author":{"gitId":"nicholastng010601"},"content":"        if (model.hasGroup(group)) {","lastModifiedDate":"2023-10-25"},{"lineNumber":28,"author":{"gitId":"nicholastng010601"},"content":"            model.deleteTimeFromGroup(group, timeIntervalsToDelete);","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"nicholastng010601"},"content":"        } else {","lastModifiedDate":"2023-10-25"},{"lineNumber":30,"author":{"gitId":"nicholastng010601"},"content":"            throw new CommandException(\"Group does not exists\");","lastModifiedDate":"2023-10-25"},{"lineNumber":31,"author":{"gitId":"nicholastng010601"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":32,"author":{"gitId":"nicholastng010601"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_TIME_SUCCESS, group.getGroupName()));","lastModifiedDate":"2023-10-25"},{"lineNumber":33,"author":{"gitId":"nicholastng010601"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":34,"author":{"gitId":"nicholastng010601"},"content":"}","lastModifiedDate":"2023-10-25"}],"authorContributionMap":{"nicholastng010601":34}},{"path":"src/main/java/seedu/address/logic/commands/DeletePersonCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lerxuann"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-19"},{"lineNumber":2,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":3,"author":{"gitId":"Kailash201"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-22"},{"lineNumber":4,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":5,"author":{"gitId":"lerxuann"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-19"},{"lineNumber":6,"author":{"gitId":"lerxuann"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-19"},{"lineNumber":7,"author":{"gitId":"lerxuann"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-19"},{"lineNumber":8,"author":{"gitId":"lerxuann"},"content":"import seedu.address.model.group.GroupList;","lastModifiedDate":"2023-10-19"},{"lineNumber":9,"author":{"gitId":"lerxuann"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-19"},{"lineNumber":10,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":11,"author":{"gitId":"Kailash201"},"content":"/**","lastModifiedDate":"2023-10-22"},{"lineNumber":12,"author":{"gitId":"Kailash201"},"content":" * Deletes person from the addressbook and group.","lastModifiedDate":"2023-10-22"},{"lineNumber":13,"author":{"gitId":"Kailash201"},"content":" */","lastModifiedDate":"2023-10-22"},{"lineNumber":14,"author":{"gitId":"lerxuann"},"content":"public class DeletePersonCommand extends DeleteCommand {","lastModifiedDate":"2023-10-19"},{"lineNumber":15,"author":{"gitId":"lerxuann"},"content":"    public static final String MESSAGE_DELETE_PERSON_SUCCESS \u003d \"Deleted Person: %1$s\";","lastModifiedDate":"2023-10-19"},{"lineNumber":16,"author":{"gitId":"lerxuann"},"content":"    private final String personName;","lastModifiedDate":"2023-10-19"},{"lineNumber":17,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":18,"author":{"gitId":"lerxuann"},"content":"    public DeletePersonCommand(String personName) {","lastModifiedDate":"2023-10-19"},{"lineNumber":19,"author":{"gitId":"lerxuann"},"content":"        this.personName \u003d personName;","lastModifiedDate":"2023-10-19"},{"lineNumber":20,"author":{"gitId":"lerxuann"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":21,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":22,"author":{"gitId":"lerxuann"},"content":"    @Override","lastModifiedDate":"2023-10-19"},{"lineNumber":23,"author":{"gitId":"lerxuann"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-19"},{"lineNumber":24,"author":{"gitId":"lerxuann"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-19"},{"lineNumber":25,"author":{"gitId":"lerxuann"},"content":"        Person personToDelete \u003d model.deletePerson(this.personName);","lastModifiedDate":"2023-10-19"},{"lineNumber":26,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":27,"author":{"gitId":"lerxuann"},"content":"        //Delete person from all groups","lastModifiedDate":"2023-10-19"},{"lineNumber":28,"author":{"gitId":"lerxuann"},"content":"        GroupList personGroups \u003d personToDelete.getGroups();","lastModifiedDate":"2023-10-19"},{"lineNumber":29,"author":{"gitId":"lerxuann"},"content":"        personGroups.toStream().forEach(g -\u003e {","lastModifiedDate":"2023-10-19"},{"lineNumber":30,"author":{"gitId":"lerxuann"},"content":"            try {","lastModifiedDate":"2023-10-19"},{"lineNumber":31,"author":{"gitId":"lerxuann"},"content":"                g.removePerson(personToDelete);","lastModifiedDate":"2023-10-19"},{"lineNumber":32,"author":{"gitId":"lerxuann"},"content":"                g.printGrpMates(); //for debugging purpose, prints the remaining user in each grp after del person","lastModifiedDate":"2023-10-19"},{"lineNumber":33,"author":{"gitId":"lerxuann"},"content":"            } catch (CommandException e) {","lastModifiedDate":"2023-10-19"},{"lineNumber":34,"author":{"gitId":"lerxuann"},"content":"                throw new RuntimeException();","lastModifiedDate":"2023-10-19"},{"lineNumber":35,"author":{"gitId":"lerxuann"},"content":"            }","lastModifiedDate":"2023-10-19"},{"lineNumber":36,"author":{"gitId":"lerxuann"},"content":"        });","lastModifiedDate":"2023-10-19"},{"lineNumber":37,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":38,"author":{"gitId":"lerxuann"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_PERSON_SUCCESS, personToDelete.getName().fullName));","lastModifiedDate":"2023-10-19"},{"lineNumber":39,"author":{"gitId":"lerxuann"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":40,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":41,"author":{"gitId":"lerxuann"},"content":"    @Override","lastModifiedDate":"2023-10-19"},{"lineNumber":42,"author":{"gitId":"lerxuann"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-19"},{"lineNumber":43,"author":{"gitId":"lerxuann"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-19"},{"lineNumber":44,"author":{"gitId":"lerxuann"},"content":"            return true;","lastModifiedDate":"2023-10-19"},{"lineNumber":45,"author":{"gitId":"lerxuann"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":46,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":47,"author":{"gitId":"lerxuann"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-19"},{"lineNumber":48,"author":{"gitId":"lerxuann"},"content":"        if (!(other instanceof DeletePersonCommand)) {","lastModifiedDate":"2023-10-19"},{"lineNumber":49,"author":{"gitId":"lerxuann"},"content":"            return false;","lastModifiedDate":"2023-10-19"},{"lineNumber":50,"author":{"gitId":"lerxuann"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":51,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":52,"author":{"gitId":"lerxuann"},"content":"        DeletePersonCommand otherDeletePersonCommand \u003d (DeletePersonCommand) other;","lastModifiedDate":"2023-10-19"},{"lineNumber":53,"author":{"gitId":"lerxuann"},"content":"        return personName.equals(otherDeletePersonCommand.personName);","lastModifiedDate":"2023-10-19"},{"lineNumber":54,"author":{"gitId":"lerxuann"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":55,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":56,"author":{"gitId":"lerxuann"},"content":"    @Override","lastModifiedDate":"2023-10-19"},{"lineNumber":57,"author":{"gitId":"lerxuann"},"content":"    public String toString() {","lastModifiedDate":"2023-10-19"},{"lineNumber":58,"author":{"gitId":"lerxuann"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-19"},{"lineNumber":59,"author":{"gitId":"lerxuann"},"content":"            .add(\"name\", personName)","lastModifiedDate":"2023-10-19"},{"lineNumber":60,"author":{"gitId":"lerxuann"},"content":"            .toString();","lastModifiedDate":"2023-10-19"},{"lineNumber":61,"author":{"gitId":"lerxuann"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":62,"author":{"gitId":"lerxuann"},"content":"}","lastModifiedDate":"2023-10-19"}],"authorContributionMap":{"Kailash201":7,"lerxuann":55}},{"path":"src/main/java/seedu/address/logic/commands/DeletePersonTimeCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nicholastng010601"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-25"},{"lineNumber":2,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":3,"author":{"gitId":"nicholastng010601"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-25"},{"lineNumber":4,"author":{"gitId":"nicholastng010601"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-25"},{"lineNumber":5,"author":{"gitId":"nicholastng010601"},"content":"import seedu.address.model.TimeInterval;","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"nicholastng010601"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"nicholastng010601"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"nicholastng010601"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"nicholastng010601"},"content":"public class DeletePersonTimeCommand extends DeleteTimeCommand {","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"nicholastng010601"},"content":"    private final ArrayList\u003cTimeInterval\u003e timeIntervalsToDelete;","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"nicholastng010601"},"content":"    private final Name personName;","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"nicholastng010601"},"content":"    public DeletePersonTimeCommand(Name personName, ArrayList\u003cTimeInterval\u003e timeIntervalsToDelete) {","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"nicholastng010601"},"content":"        requireNonNull(personName);","lastModifiedDate":"2023-10-25"},{"lineNumber":18,"author":{"gitId":"nicholastng010601"},"content":"        requireNonNull(timeIntervalsToDelete);","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"nicholastng010601"},"content":"        this.personName \u003d personName;","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"nicholastng010601"},"content":"        this.timeIntervalsToDelete \u003d timeIntervalsToDelete;","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"nicholastng010601"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"nicholastng010601"},"content":"    @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"nicholastng010601"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"nicholastng010601"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"nicholastng010601"},"content":"        if (model.hasPerson(personName)) {","lastModifiedDate":"2023-10-25"},{"lineNumber":27,"author":{"gitId":"nicholastng010601"},"content":"            model.deleteTimeFromPerson(personName, timeIntervalsToDelete);","lastModifiedDate":"2023-10-25"},{"lineNumber":28,"author":{"gitId":"nicholastng010601"},"content":"        } else {","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"nicholastng010601"},"content":"            throw new CommandException(\"Person does not exists\");","lastModifiedDate":"2023-10-25"},{"lineNumber":30,"author":{"gitId":"nicholastng010601"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":31,"author":{"gitId":"nicholastng010601"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_TIME_SUCCESS, personName.fullName));","lastModifiedDate":"2023-10-25"},{"lineNumber":32,"author":{"gitId":"nicholastng010601"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":33,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":34,"author":{"gitId":"nicholastng010601"},"content":"}","lastModifiedDate":"2023-10-25"}],"authorContributionMap":{"nicholastng010601":34}},{"path":"src/main/java/seedu/address/logic/commands/DeleteTimeCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nicholastng010601"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-24"},{"lineNumber":2,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":3,"author":{"gitId":"nicholastng010601"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-24"},{"lineNumber":4,"author":{"gitId":"nicholastng010601"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-24"},{"lineNumber":5,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":6,"author":{"gitId":"nicholastng010601"},"content":"import static seedu.address.logic.parser.CliSyntax.*;","lastModifiedDate":"2023-10-24"},{"lineNumber":7,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":8,"author":{"gitId":"nicholastng010601"},"content":"/**","lastModifiedDate":"2023-10-24"},{"lineNumber":9,"author":{"gitId":"nicholastng010601"},"content":" * Deletes time from the individual and group.","lastModifiedDate":"2023-10-24"},{"lineNumber":10,"author":{"gitId":"nicholastng010601"},"content":" */","lastModifiedDate":"2023-10-24"},{"lineNumber":11,"author":{"gitId":"nicholastng010601"},"content":"public abstract class DeleteTimeCommand extends Command {","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"nicholastng010601"},"content":"    public static final String MESSAGE_DELETE_TIME_SUCCESS \u003d \"Deleted Time from: %1$s\";","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"nicholastng010601"},"content":"    public static final String COMMAND_WORD \u003d \"deletetime\";","lastModifiedDate":"2023-10-24"},{"lineNumber":14,"author":{"gitId":"nicholastng010601"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Deletes free time from an existing person or group. \\n\"","lastModifiedDate":"2023-10-24"},{"lineNumber":15,"author":{"gitId":"nicholastng010601"},"content":"            + \"For person, parameters: \"","lastModifiedDate":"2023-10-24"},{"lineNumber":16,"author":{"gitId":"nicholastng010601"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2023-10-24"},{"lineNumber":17,"author":{"gitId":"nicholastng010601"},"content":"            + PREFIX_FREETIME + \"FREE TIME \\n\"","lastModifiedDate":"2023-10-24"},{"lineNumber":18,"author":{"gitId":"nicholastng010601"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2023-10-24"},{"lineNumber":19,"author":{"gitId":"nicholastng010601"},"content":"            + PREFIX_NAME + \"Alex Yeoh \"","lastModifiedDate":"2023-10-24"},{"lineNumber":20,"author":{"gitId":"nicholastng010601"},"content":"            + PREFIX_FREETIME + \"mon 1200 - mon 1400 ;tue 1000 - wed 1600 \\n\"","lastModifiedDate":"2023-10-24"},{"lineNumber":21,"author":{"gitId":"nicholastng010601"},"content":"            + \"For group, parameters: \"","lastModifiedDate":"2023-10-24"},{"lineNumber":22,"author":{"gitId":"nicholastng010601"},"content":"            + PREFIX_GROUPTAG + \"GROUPNAME \"","lastModifiedDate":"2023-10-24"},{"lineNumber":23,"author":{"gitId":"nicholastng010601"},"content":"            + PREFIX_FREETIME + \"FREE TIME \\n\"","lastModifiedDate":"2023-10-24"},{"lineNumber":24,"author":{"gitId":"nicholastng010601"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2023-10-24"},{"lineNumber":25,"author":{"gitId":"nicholastng010601"},"content":"            + PREFIX_GROUPTAG + \"CS2103T \"","lastModifiedDate":"2023-10-24"},{"lineNumber":26,"author":{"gitId":"nicholastng010601"},"content":"            + PREFIX_FREETIME + \"mon 1200 - mon 1400 ;tue 1000 - wed 1600\";","lastModifiedDate":"2023-10-24"},{"lineNumber":27,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":28,"author":{"gitId":"nicholastng010601"},"content":"    @Override","lastModifiedDate":"2023-10-24"},{"lineNumber":29,"author":{"gitId":"nicholastng010601"},"content":"    public abstract CommandResult execute(Model model) throws CommandException;","lastModifiedDate":"2023-10-25"},{"lineNumber":30,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":31,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":32,"author":{"gitId":"nicholastng010601"},"content":"}","lastModifiedDate":"2023-10-24"}],"authorContributionMap":{"nicholastng010601":32}},{"path":"src/main/java/seedu/address/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-12-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2023-07-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2016-12-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2016-12-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Edits the details of an existing person in the address book.","lastModifiedDate":"2016-12-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the person identified \"","lastModifiedDate":"2016-12-26"},{"lineNumber":38,"author":{"gitId":"nicholastng010601"},"content":"        + \"by the index number used in the \\ndisplayed person list. \"","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":40,"author":{"gitId":"nicholastng010601"},"content":"        + \"Parameters: INDEX \"","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited Person: %1$s\";","lastModifiedDate":"2016-12-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private final EditPersonDescriptor editPersonDescriptor;","lastModifiedDate":"2016-12-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * @param index                of the person in the filtered person list to edit","lastModifiedDate":"2017-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * @param editPersonDescriptor details to edit the person with","lastModifiedDate":"2016-12-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public EditCommand(Index index, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2017-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        this.editPersonDescriptor \u003d new EditPersonDescriptor(editPersonDescriptor);","lastModifiedDate":"2016-12-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson)));","lastModifiedDate":"2019-02-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2016-12-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2016-12-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    private static Person createEditedPerson(Person personToEdit, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2018-01-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2016-12-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        Name updatedName \u003d editPersonDescriptor.getName().orElse(personToEdit.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        Phone updatedPhone \u003d editPersonDescriptor.getPhone().orElse(personToEdit.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        Email updatedEmail \u003d editPersonDescriptor.getEmail().orElse(personToEdit.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":100,"author":{"gitId":"Kailash201"},"content":"        return new Person(updatedName, updatedPhone, updatedEmail, personToEdit.getGroups());","lastModifiedDate":"2023-10-06"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        EditCommand otherEditCommand \u003d (EditCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        return index.equals(otherEditCommand.index)","lastModifiedDate":"2023-07-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            \u0026\u0026 editPersonDescriptor.equals(otherEditCommand.editPersonDescriptor);","lastModifiedDate":"2023-07-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            .add(\"index\", index)","lastModifiedDate":"2019-02-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            .add(\"editPersonDescriptor\", editPersonDescriptor)","lastModifiedDate":"2019-02-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2016-12-26"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2016-12-26"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public static class EditPersonDescriptor {","lastModifiedDate":"2016-12-26"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        private Address address;","lastModifiedDate":"2017-06-21"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-06-21"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":138,"author":{"gitId":"Kailash201"},"content":"        public EditPersonDescriptor() {","lastModifiedDate":"2023-10-22"},{"lineNumber":139,"author":{"gitId":"Kailash201"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":142,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":143,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":144,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor(EditPersonDescriptor toCopy) {","lastModifiedDate":"2016-12-26"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            setAddress(toCopy.address);","lastModifiedDate":"2018-01-15"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2018-01-11"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":154,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":155,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, address, tags);","lastModifiedDate":"2018-08-14"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2017-06-21"},{"lineNumber":169,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26"},{"lineNumber":173,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2017-06-21"},{"lineNumber":177,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2017-06-21"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26"},{"lineNumber":181,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        public void setAddress(Address address) {","lastModifiedDate":"2017-06-21"},{"lineNumber":185,"author":{"gitId":"-"},"content":"            this.address \u003d address;","lastModifiedDate":"2017-06-21"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2016-12-26"},{"lineNumber":189,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(address);","lastModifiedDate":"2017-06-21"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":193,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2018-01-11"},{"lineNumber":194,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":195,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-06-21"},{"lineNumber":197,"author":{"gitId":"-"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2018-01-11"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":201,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2018-01-11"},{"lineNumber":202,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":203,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2018-01-11"},{"lineNumber":204,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":206,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2018-01-11"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":211,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":212,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":213,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":215,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":216,"author":{"gitId":"-"},"content":"            if (!(other instanceof EditPersonDescriptor)) {","lastModifiedDate":"2017-05-05"},{"lineNumber":217,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":218,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":220,"author":{"gitId":"-"},"content":"            EditPersonDescriptor otherEditPersonDescriptor \u003d (EditPersonDescriptor) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":221,"author":{"gitId":"-"},"content":"            return Objects.equals(name, otherEditPersonDescriptor.name)","lastModifiedDate":"2023-07-13"},{"lineNumber":222,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(phone, otherEditPersonDescriptor.phone)","lastModifiedDate":"2023-07-13"},{"lineNumber":223,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(email, otherEditPersonDescriptor.email)","lastModifiedDate":"2023-07-13"},{"lineNumber":224,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(address, otherEditPersonDescriptor.address)","lastModifiedDate":"2023-07-13"},{"lineNumber":225,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(tags, otherEditPersonDescriptor.tags);","lastModifiedDate":"2023-07-13"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"            return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"                .add(\"name\", name)","lastModifiedDate":"2019-02-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"                .add(\"phone\", phone)","lastModifiedDate":"2019-02-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"                .add(\"email\", email)","lastModifiedDate":"2019-02-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"                .add(\"address\", address)","lastModifiedDate":"2019-02-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"                .add(\"tags\", tags)","lastModifiedDate":"2019-02-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-02-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":239,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"Kailash201":3,"nicholastng010601":2,"-":234}},{"path":"src/main/java/seedu/address/logic/commands/FindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"lerxuann"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GROUPTAG;","lastModifiedDate":"2023-10-25"},{"lineNumber":4,"author":{"gitId":"lerxuann"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":6,"author":{"gitId":"lerxuann"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"lerxuann"},"content":" * Lists all the people either in a specific group or whose name contains any keywords.","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"lerxuann"},"content":"public abstract class FindCommand extends Command {","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"ZD292"},"content":"    public static final java.lang.String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2023-10-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"lerxuann"},"content":"    public static final java.lang.String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"lerxuann"},"content":"            + \": Finds all persons whose names contain any of the specified keywords (case insensitive)\\n\"","lastModifiedDate":"2023-10-25"},{"lineNumber":18,"author":{"gitId":"lerxuann"},"content":"            + \"or all persons in a specified group (case sensitive) and displays them as a list.\\n\"","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"lerxuann"},"content":"            + \"Parameters: \" + PREFIX_NAME","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"lerxuann"},"content":"            + \"KEYWORDS_IN_NAME (case insensitive)\\n\"","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"lerxuann"},"content":"            + \"Parameters: \" + PREFIX_GROUPTAG","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"lerxuann"},"content":"            + \"GROUPNAME (full name of an existing group, case sensitive)\\n\"","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"lerxuann"},"content":"            + \"Example: \" + COMMAND_WORD + \" \" + PREFIX_NAME + \"alice alex john \\n\"","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"lerxuann"},"content":"            + \"Example: \" + COMMAND_WORD + \" \" + PREFIX_GROUPTAG + \"CS2103T\";","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"lerxuann"},"content":"    public static final String MESSAGE_TWO_PARAMETERS \u003d \"Multiple prefixes! \"","lastModifiedDate":"2023-10-25"},{"lineNumber":27,"author":{"gitId":"lerxuann"},"content":"            + COMMAND_WORD + \" can only handle one person/group at a time.\\n\"","lastModifiedDate":"2023-10-25"},{"lineNumber":28,"author":{"gitId":"lerxuann"},"content":"            + \"Example: \" + COMMAND_WORD + \" \" + PREFIX_NAME + \"nicholas\\n\"","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"lerxuann"},"content":"            + \"Example: \" + COMMAND_WORD + \" \" + PREFIX_GROUPTAG + \"CS2103T\";","lastModifiedDate":"2023-10-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":31,"author":{"gitId":"lerxuann"},"content":"    public static final String MESSAGE_EMPTY_NAME \u003d \"Person does not exist\";","lastModifiedDate":"2023-10-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":34,"author":{"gitId":"lerxuann"},"content":"    public abstract CommandResult execute(Model model) throws CommandException;","lastModifiedDate":"2023-10-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"lerxuann"},"content":"    public abstract boolean equals(Object other);","lastModifiedDate":"2023-10-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":40,"author":{"gitId":"lerxuann"},"content":"    public abstract String toString();","lastModifiedDate":"2023-10-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"ZD292":1,"lerxuann":22,"-":18}},{"path":"src/main/java/seedu/address/logic/commands/FindFreeTimeCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ZD292"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-25"},{"lineNumber":2,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":3,"author":{"gitId":"ZD292"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-25"},{"lineNumber":4,"author":{"gitId":"ZD292"},"content":"import static seedu.address.logic.parser.CliSyntax.*;","lastModifiedDate":"2023-10-25"},{"lineNumber":5,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"ZD292"},"content":"import javafx.util.Pair;","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"ZD292"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"ZD292"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"ZD292"},"content":"import seedu.address.model.Duration;","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"ZD292"},"content":"import seedu.address.model.FreeTime;","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"ZD292"},"content":"import seedu.address.model.TimeIntervalList;","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"ZD292"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"ZD292"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"ZD292"},"content":"import seedu.address.model.group.exceptions.GroupNotFoundException;","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"ZD292"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"ZD292"},"content":"/**","lastModifiedDate":"2023-10-25"},{"lineNumber":18,"author":{"gitId":"ZD292"},"content":" * Adds a person to a group.","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"ZD292"},"content":" */","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"ZD292"},"content":"public class FindFreeTimeCommand extends Command {","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"ZD292"},"content":"\tpublic static final String COMMAND_WORD \u003d \"findfreetime\";","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"ZD292"},"content":"\tpublic static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds a free time slot given a group and duration \\n\" +","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"ZD292"},"content":"\t\t\t\"Parameters: \" + PREFIX_GROUPTAG + \"GROUPNAME \" + PREFIX_DURATION + \"DURATION\";","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":27,"author":{"gitId":"ZD292"},"content":"\tpublic static final String MESSAGE_DURATION_USAGE \u003d \"Enter Duration in minutes\";","lastModifiedDate":"2023-10-25"},{"lineNumber":28,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":30,"author":{"gitId":"ZD292"},"content":"\tpublic static final String MESSAGE_NOT_ALL_FREE \u003d \"%s has not input their free time yet\\n\";","lastModifiedDate":"2023-10-25"},{"lineNumber":31,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":32,"author":{"gitId":"ZD292"},"content":"\tpublic static final String MESSAGE_SUCCESS \u003d \"These are the available timeslots \\n\";","lastModifiedDate":"2023-10-25"},{"lineNumber":33,"author":{"gitId":"ZD292"},"content":"\tpublic static final String MESSAGE_INTERVAL_DISPLAY \u003d \"%d. %s\\n\";","lastModifiedDate":"2023-10-25"},{"lineNumber":34,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":35,"author":{"gitId":"ZD292"},"content":"\tprivate final String groupName;","lastModifiedDate":"2023-10-25"},{"lineNumber":36,"author":{"gitId":"ZD292"},"content":"\tprivate final Duration duration;","lastModifiedDate":"2023-10-25"},{"lineNumber":37,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":38,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":39,"author":{"gitId":"ZD292"},"content":"\t/**","lastModifiedDate":"2023-10-25"},{"lineNumber":40,"author":{"gitId":"ZD292"},"content":"\t * Creates an AddCommand to add the specified {@code Person}","lastModifiedDate":"2023-10-25"},{"lineNumber":41,"author":{"gitId":"ZD292"},"content":"\t */","lastModifiedDate":"2023-10-25"},{"lineNumber":42,"author":{"gitId":"ZD292"},"content":"\tpublic FindFreeTimeCommand(String groupName, Duration duration) {","lastModifiedDate":"2023-10-25"},{"lineNumber":43,"author":{"gitId":"ZD292"},"content":"\t\trequireNonNull(groupName);","lastModifiedDate":"2023-10-25"},{"lineNumber":44,"author":{"gitId":"ZD292"},"content":"\t\trequireNonNull(duration);","lastModifiedDate":"2023-10-25"},{"lineNumber":45,"author":{"gitId":"ZD292"},"content":"\t\tthis.groupName \u003d groupName;","lastModifiedDate":"2023-10-25"},{"lineNumber":46,"author":{"gitId":"ZD292"},"content":"\t\tthis.duration \u003d duration;","lastModifiedDate":"2023-10-25"},{"lineNumber":47,"author":{"gitId":"ZD292"},"content":"\t}","lastModifiedDate":"2023-10-25"},{"lineNumber":48,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":49,"author":{"gitId":"ZD292"},"content":"\t@Override","lastModifiedDate":"2023-10-25"},{"lineNumber":50,"author":{"gitId":"ZD292"},"content":"\tpublic CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-25"},{"lineNumber":51,"author":{"gitId":"ZD292"},"content":"\t\t// 3 steps","lastModifiedDate":"2023-10-25"},{"lineNumber":52,"author":{"gitId":"ZD292"},"content":"\t\t// find group, if group exists check everybody input time, use find free time algo","lastModifiedDate":"2023-10-25"},{"lineNumber":53,"author":{"gitId":"ZD292"},"content":"\t\trequireNonNull(model);","lastModifiedDate":"2023-10-25"},{"lineNumber":54,"author":{"gitId":"ZD292"},"content":"\t\tGroup g;","lastModifiedDate":"2023-10-25"},{"lineNumber":55,"author":{"gitId":"ZD292"},"content":"\t\t// br stores message","lastModifiedDate":"2023-10-25"},{"lineNumber":56,"author":{"gitId":"ZD292"},"content":"\t\tStringBuilder br \u003d new StringBuilder();","lastModifiedDate":"2023-10-25"},{"lineNumber":57,"author":{"gitId":"ZD292"},"content":"\t\tint intervalCounter \u003d 1;","lastModifiedDate":"2023-10-25"},{"lineNumber":58,"author":{"gitId":"ZD292"},"content":"\t\ttry {","lastModifiedDate":"2023-10-25"},{"lineNumber":59,"author":{"gitId":"ZD292"},"content":"\t\t\tg \u003d model.findGroup(groupName);","lastModifiedDate":"2023-10-25"},{"lineNumber":60,"author":{"gitId":"ZD292"},"content":"\t\t} catch (GroupNotFoundException e) {","lastModifiedDate":"2023-10-25"},{"lineNumber":61,"author":{"gitId":"ZD292"},"content":"\t\t\tthrow new CommandException(e.getMessage());","lastModifiedDate":"2023-10-25"},{"lineNumber":62,"author":{"gitId":"ZD292"},"content":"\t\t}","lastModifiedDate":"2023-10-25"},{"lineNumber":63,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":64,"author":{"gitId":"ZD292"},"content":"\t\t// check everybody input time, modify br should somebody not key in their free time","lastModifiedDate":"2023-10-25"},{"lineNumber":65,"author":{"gitId":"ZD292"},"content":"\t\tg.areAllFree(br, MESSAGE_NOT_ALL_FREE);","lastModifiedDate":"2023-10-25"},{"lineNumber":66,"author":{"gitId":"ZD292"},"content":"\t\tif (br.length() !\u003d 0) {","lastModifiedDate":"2023-10-25"},{"lineNumber":67,"author":{"gitId":"ZD292"},"content":"\t\t\tthrow new CommandException(br.toString());","lastModifiedDate":"2023-10-25"},{"lineNumber":68,"author":{"gitId":"ZD292"},"content":"\t\t}","lastModifiedDate":"2023-10-25"},{"lineNumber":69,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":70,"author":{"gitId":"ZD292"},"content":"\t\t// use algorithm to findFreeTime()","lastModifiedDate":"2023-10-25"},{"lineNumber":71,"author":{"gitId":"ZD292"},"content":"\t\tTimeIntervalList freeTime \u003d g.findFreeTime(duration);","lastModifiedDate":"2023-10-25"},{"lineNumber":72,"author":{"gitId":"ZD292"},"content":"\t\tfreeTime.getMessage(br, MESSAGE_INTERVAL_DISPLAY);","lastModifiedDate":"2023-10-25"},{"lineNumber":73,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":74,"author":{"gitId":"ZD292"},"content":"\t\treturn new CommandResult(MESSAGE_SUCCESS + br.toString());","lastModifiedDate":"2023-10-25"},{"lineNumber":75,"author":{"gitId":"ZD292"},"content":"\t}","lastModifiedDate":"2023-10-25"},{"lineNumber":76,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":77,"author":{"gitId":"ZD292"},"content":"\t@Override","lastModifiedDate":"2023-10-25"},{"lineNumber":78,"author":{"gitId":"ZD292"},"content":"\tpublic boolean equals(Object other) {","lastModifiedDate":"2023-10-25"},{"lineNumber":79,"author":{"gitId":"ZD292"},"content":"\t\tif (other \u003d\u003d this) {","lastModifiedDate":"2023-10-25"},{"lineNumber":80,"author":{"gitId":"ZD292"},"content":"\t\t\treturn true;","lastModifiedDate":"2023-10-25"},{"lineNumber":81,"author":{"gitId":"ZD292"},"content":"\t\t}","lastModifiedDate":"2023-10-25"},{"lineNumber":82,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":83,"author":{"gitId":"ZD292"},"content":"\t\t// instanceof handles nulls","lastModifiedDate":"2023-10-25"},{"lineNumber":84,"author":{"gitId":"ZD292"},"content":"\t\tif (!(other instanceof GroupPersonCommand)) {","lastModifiedDate":"2023-10-25"},{"lineNumber":85,"author":{"gitId":"ZD292"},"content":"\t\t\treturn false;","lastModifiedDate":"2023-10-25"},{"lineNumber":86,"author":{"gitId":"ZD292"},"content":"\t\t}","lastModifiedDate":"2023-10-25"},{"lineNumber":87,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":88,"author":{"gitId":"ZD292"},"content":"\t\tGroupPersonCommand otherGroupPersonCommand \u003d (GroupPersonCommand) other;","lastModifiedDate":"2023-10-25"},{"lineNumber":89,"author":{"gitId":"ZD292"},"content":"\t\t// to check","lastModifiedDate":"2023-10-25"},{"lineNumber":90,"author":{"gitId":"ZD292"},"content":"\t\treturn this.equals(otherGroupPersonCommand);","lastModifiedDate":"2023-10-25"},{"lineNumber":91,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":92,"author":{"gitId":"ZD292"},"content":"\t}","lastModifiedDate":"2023-10-25"},{"lineNumber":93,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":94,"author":{"gitId":"ZD292"},"content":"\t// to fix","lastModifiedDate":"2023-10-25"},{"lineNumber":95,"author":{"gitId":"ZD292"},"content":"\t@Override","lastModifiedDate":"2023-10-25"},{"lineNumber":96,"author":{"gitId":"ZD292"},"content":"\tpublic java.lang.String toString() {","lastModifiedDate":"2023-10-25"},{"lineNumber":97,"author":{"gitId":"ZD292"},"content":"\t\treturn new ToStringBuilder(this)","lastModifiedDate":"2023-10-25"},{"lineNumber":98,"author":{"gitId":"ZD292"},"content":"\t\t\t\t.add(\"toAddToGroup\", \"\")","lastModifiedDate":"2023-10-25"},{"lineNumber":99,"author":{"gitId":"ZD292"},"content":"\t\t\t\t.toString();","lastModifiedDate":"2023-10-25"},{"lineNumber":100,"author":{"gitId":"ZD292"},"content":"\t}","lastModifiedDate":"2023-10-25"},{"lineNumber":101,"author":{"gitId":"ZD292"},"content":"}","lastModifiedDate":"2023-10-25"},{"lineNumber":102,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-10-25"}],"authorContributionMap":{"ZD292":102}},{"path":"src/main/java/seedu/address/logic/commands/FindGroupCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lerxuann"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-25"},{"lineNumber":2,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":3,"author":{"gitId":"lerxuann"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-25"},{"lineNumber":4,"author":{"gitId":"lerxuann"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-25"},{"lineNumber":5,"author":{"gitId":"lerxuann"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"lerxuann"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"lerxuann"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"lerxuann"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"lerxuann"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"lerxuann"},"content":"/**","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"lerxuann"},"content":" * Finds and lists all persons in address book who is inside the specified Group.","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"lerxuann"},"content":" * Displays group remarks of the specified group.","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"lerxuann"},"content":" * Keyword matching is case sensitive.","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"lerxuann"},"content":" */","lastModifiedDate":"2023-10-25"},{"lineNumber":18,"author":{"gitId":"lerxuann"},"content":"public class FindGroupCommand extends FindCommand {","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"lerxuann"},"content":"    public static final String MESSAGE_GROUP_FOUND \u003d \"All persons from Group %1$s listed!\\n\"","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"lerxuann"},"content":"            + \"Group remarks for %1$s: \\n\"","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"lerxuann"},"content":"            + \"%2$s\";","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"lerxuann"},"content":"    private final String groupName;","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"lerxuann"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"lerxuann"},"content":"     * @param groupName of the group to find the groupmates and remark of","lastModifiedDate":"2023-10-25"},{"lineNumber":27,"author":{"gitId":"lerxuann"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":28,"author":{"gitId":"lerxuann"},"content":"    public FindGroupCommand(String groupName) {","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"lerxuann"},"content":"        this.groupName \u003d groupName;","lastModifiedDate":"2023-10-25"},{"lineNumber":30,"author":{"gitId":"lerxuann"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":31,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":32,"author":{"gitId":"lerxuann"},"content":"    @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":33,"author":{"gitId":"lerxuann"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-25"},{"lineNumber":34,"author":{"gitId":"lerxuann"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-25"},{"lineNumber":35,"author":{"gitId":"lerxuann"},"content":"        Group groupToFind \u003d model.findGroup(this.groupName);","lastModifiedDate":"2023-10-25"},{"lineNumber":36,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":37,"author":{"gitId":"lerxuann"},"content":"        //List all people in group","lastModifiedDate":"2023-10-25"},{"lineNumber":38,"author":{"gitId":"lerxuann"},"content":"        Predicate\u003cPerson\u003e inGroupPred \u003d (p) -\u003e p.containsGroup(groupToFind);","lastModifiedDate":"2023-10-25"},{"lineNumber":39,"author":{"gitId":"lerxuann"},"content":"        model.updateFilteredPersonList(inGroupPred);","lastModifiedDate":"2023-10-25"},{"lineNumber":40,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":41,"author":{"gitId":"lerxuann"},"content":"        //Display group remark","lastModifiedDate":"2023-10-25"},{"lineNumber":42,"author":{"gitId":"lerxuann"},"content":"        return new CommandResult(","lastModifiedDate":"2023-10-25"},{"lineNumber":43,"author":{"gitId":"lerxuann"},"content":"                java.lang.String.format(MESSAGE_GROUP_FOUND,","lastModifiedDate":"2023-10-25"},{"lineNumber":44,"author":{"gitId":"lerxuann"},"content":"                        groupToFind.getGroupName(), groupToFind.getGroupRemark()));","lastModifiedDate":"2023-10-25"},{"lineNumber":45,"author":{"gitId":"lerxuann"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":46,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":47,"author":{"gitId":"lerxuann"},"content":"    @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":48,"author":{"gitId":"lerxuann"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-25"},{"lineNumber":49,"author":{"gitId":"lerxuann"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-25"},{"lineNumber":50,"author":{"gitId":"lerxuann"},"content":"            return true;","lastModifiedDate":"2023-10-25"},{"lineNumber":51,"author":{"gitId":"lerxuann"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":52,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":53,"author":{"gitId":"lerxuann"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-25"},{"lineNumber":54,"author":{"gitId":"lerxuann"},"content":"        if (!(other instanceof FindGroupCommand)) {","lastModifiedDate":"2023-10-25"},{"lineNumber":55,"author":{"gitId":"lerxuann"},"content":"            return false;","lastModifiedDate":"2023-10-25"},{"lineNumber":56,"author":{"gitId":"lerxuann"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":57,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":58,"author":{"gitId":"lerxuann"},"content":"        FindGroupCommand otherFindGroupCommand \u003d (FindGroupCommand) other;","lastModifiedDate":"2023-10-25"},{"lineNumber":59,"author":{"gitId":"lerxuann"},"content":"        return groupName.equals(otherFindGroupCommand.groupName);","lastModifiedDate":"2023-10-25"},{"lineNumber":60,"author":{"gitId":"lerxuann"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":61,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":62,"author":{"gitId":"lerxuann"},"content":"    @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":63,"author":{"gitId":"lerxuann"},"content":"    public java.lang.String toString() {","lastModifiedDate":"2023-10-25"},{"lineNumber":64,"author":{"gitId":"lerxuann"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-25"},{"lineNumber":65,"author":{"gitId":"lerxuann"},"content":"                .add(\"group name\", groupName)","lastModifiedDate":"2023-10-25"},{"lineNumber":66,"author":{"gitId":"lerxuann"},"content":"                .toString();","lastModifiedDate":"2023-10-25"},{"lineNumber":67,"author":{"gitId":"lerxuann"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":68,"author":{"gitId":"lerxuann"},"content":"}","lastModifiedDate":"2023-10-25"}],"authorContributionMap":{"lerxuann":68}},{"path":"src/main/java/seedu/address/logic/commands/FindPersonCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lerxuann"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-25"},{"lineNumber":2,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":3,"author":{"gitId":"lerxuann"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-25"},{"lineNumber":4,"author":{"gitId":"lerxuann"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-25"},{"lineNumber":5,"author":{"gitId":"lerxuann"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"lerxuann"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"lerxuann"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"lerxuann"},"content":"/**","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"lerxuann"},"content":" * Finds and lists all persons in address book whose name contains any of the argument keywords.","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"lerxuann"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"lerxuann"},"content":" */","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"lerxuann"},"content":"public class FindPersonCommand extends FindCommand {","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"lerxuann"},"content":"    private final NameContainsKeywordsPredicate predicate;","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":18,"author":{"gitId":"lerxuann"},"content":"    public FindPersonCommand(NameContainsKeywordsPredicate predicate) {","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"lerxuann"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"lerxuann"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"lerxuann"},"content":"    @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"lerxuann"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"lerxuann"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"lerxuann"},"content":"        model.updateFilteredPersonList(predicate);","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"lerxuann"},"content":"        return new CommandResult(","lastModifiedDate":"2023-10-25"},{"lineNumber":27,"author":{"gitId":"lerxuann"},"content":"                java.lang.String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, model.getFilteredPersonList().size()));","lastModifiedDate":"2023-10-25"},{"lineNumber":28,"author":{"gitId":"lerxuann"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":30,"author":{"gitId":"lerxuann"},"content":"    @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":31,"author":{"gitId":"lerxuann"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-25"},{"lineNumber":32,"author":{"gitId":"lerxuann"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-25"},{"lineNumber":33,"author":{"gitId":"lerxuann"},"content":"            return true;","lastModifiedDate":"2023-10-25"},{"lineNumber":34,"author":{"gitId":"lerxuann"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":35,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":36,"author":{"gitId":"lerxuann"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-25"},{"lineNumber":37,"author":{"gitId":"lerxuann"},"content":"        if (!(other instanceof FindPersonCommand)) {","lastModifiedDate":"2023-10-25"},{"lineNumber":38,"author":{"gitId":"lerxuann"},"content":"            return false;","lastModifiedDate":"2023-10-25"},{"lineNumber":39,"author":{"gitId":"lerxuann"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":40,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":41,"author":{"gitId":"lerxuann"},"content":"        FindPersonCommand otherFindPersonCommand \u003d (FindPersonCommand) other;","lastModifiedDate":"2023-10-25"},{"lineNumber":42,"author":{"gitId":"lerxuann"},"content":"        return predicate.equals(otherFindPersonCommand.predicate);","lastModifiedDate":"2023-10-25"},{"lineNumber":43,"author":{"gitId":"lerxuann"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":44,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":45,"author":{"gitId":"lerxuann"},"content":"    @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":46,"author":{"gitId":"lerxuann"},"content":"    public java.lang.String toString() {","lastModifiedDate":"2023-10-25"},{"lineNumber":47,"author":{"gitId":"lerxuann"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-25"},{"lineNumber":48,"author":{"gitId":"lerxuann"},"content":"                .add(\"predicate\", predicate)","lastModifiedDate":"2023-10-25"},{"lineNumber":49,"author":{"gitId":"lerxuann"},"content":"                .toString();","lastModifiedDate":"2023-10-25"},{"lineNumber":50,"author":{"gitId":"lerxuann"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":51,"author":{"gitId":"lerxuann"},"content":"}","lastModifiedDate":"2023-10-25"}],"authorContributionMap":{"lerxuann":51}},{"path":"src/main/java/seedu/address/logic/commands/GroupPersonCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ZD292"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-10"},{"lineNumber":2,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":3,"author":{"gitId":"ZD292"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-10"},{"lineNumber":4,"author":{"gitId":"ZD292"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GROUPTAG;","lastModifiedDate":"2023-10-10"},{"lineNumber":5,"author":{"gitId":"ZD292"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-10"},{"lineNumber":6,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":7,"author":{"gitId":"ZD292"},"content":"import javafx.util.Pair;","lastModifiedDate":"2023-10-10"},{"lineNumber":8,"author":{"gitId":"ZD292"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-10"},{"lineNumber":9,"author":{"gitId":"ZD292"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-10"},{"lineNumber":10,"author":{"gitId":"ZD292"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2023-10-10"},{"lineNumber":11,"author":{"gitId":"ZD292"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-10"},{"lineNumber":12,"author":{"gitId":"ZD292"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-10"},{"lineNumber":13,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":14,"author":{"gitId":"ZD292"},"content":"/**","lastModifiedDate":"2023-10-10"},{"lineNumber":15,"author":{"gitId":"coderhuang559"},"content":" * Adds a person to a group.","lastModifiedDate":"2023-10-11"},{"lineNumber":16,"author":{"gitId":"ZD292"},"content":" */","lastModifiedDate":"2023-10-10"},{"lineNumber":17,"author":{"gitId":"ZD292"},"content":"public class GroupPersonCommand extends Command {","lastModifiedDate":"2023-10-10"},{"lineNumber":18,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":19,"author":{"gitId":"ZD292"},"content":"    public static final String COMMAND_WORD \u003d \"group\";","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":21,"author":{"gitId":"ZD292"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a person to a group in \" +","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"Kailash201"},"content":"        \"the address book.\\n\" + \"Parameters: \" + PREFIX_NAME + \"NAME \" + PREFIX_GROUPTAG + \"GROUP \";","lastModifiedDate":"2023-10-22"},{"lineNumber":23,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":24,"author":{"gitId":"ZD292"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"%1$s is now a part of %2$s\";","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"ZD292"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON_IN_GROUP \u003d","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"Kailash201"},"content":"        \"Error, invalid input entered, unable to put the person into group\";","lastModifiedDate":"2023-10-22"},{"lineNumber":27,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":28,"author":{"gitId":"ZD292"},"content":"    private final String personName;","lastModifiedDate":"2023-10-10"},{"lineNumber":29,"author":{"gitId":"ZD292"},"content":"    private final String groupName;","lastModifiedDate":"2023-10-10"},{"lineNumber":30,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":31,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":32,"author":{"gitId":"ZD292"},"content":"    /**","lastModifiedDate":"2023-10-10"},{"lineNumber":33,"author":{"gitId":"ZD292"},"content":"     * Creates an AddCommand to add the specified {@code Person}","lastModifiedDate":"2023-10-10"},{"lineNumber":34,"author":{"gitId":"ZD292"},"content":"     */","lastModifiedDate":"2023-10-10"},{"lineNumber":35,"author":{"gitId":"ZD292"},"content":"    public GroupPersonCommand(String personName, String groupName) {","lastModifiedDate":"2023-10-10"},{"lineNumber":36,"author":{"gitId":"ZD292"},"content":"        requireNonNull(personName);","lastModifiedDate":"2023-10-10"},{"lineNumber":37,"author":{"gitId":"ZD292"},"content":"        requireNonNull(groupName);","lastModifiedDate":"2023-10-10"},{"lineNumber":38,"author":{"gitId":"ZD292"},"content":"        this.personName \u003d personName;","lastModifiedDate":"2023-10-10"},{"lineNumber":39,"author":{"gitId":"ZD292"},"content":"        this.groupName \u003d groupName;","lastModifiedDate":"2023-10-10"},{"lineNumber":40,"author":{"gitId":"ZD292"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":41,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":42,"author":{"gitId":"ZD292"},"content":"    @Override","lastModifiedDate":"2023-10-10"},{"lineNumber":43,"author":{"gitId":"ZD292"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-10"},{"lineNumber":44,"author":{"gitId":"ZD292"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-10"},{"lineNumber":45,"author":{"gitId":"ZD292"},"content":"        Pair\u003cPerson, Group\u003e output \u003d model.groupPerson(this.personName, this.groupName);","lastModifiedDate":"2023-10-10"},{"lineNumber":46,"author":{"gitId":"ZD292"},"content":"        Person person \u003d output.getKey();","lastModifiedDate":"2023-10-10"},{"lineNumber":47,"author":{"gitId":"ZD292"},"content":"        Group group \u003d output.getValue();","lastModifiedDate":"2023-10-10"},{"lineNumber":48,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":49,"author":{"gitId":"ZD292"},"content":"        // person already in the group","lastModifiedDate":"2023-10-10"},{"lineNumber":50,"author":{"gitId":"coderhuang559"},"content":"        System.out.println(person.toString());","lastModifiedDate":"2023-10-11"},{"lineNumber":51,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":52,"author":{"gitId":"ZD292"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, person.getName().fullName, group.getGroupName()));","lastModifiedDate":"2023-10-25"},{"lineNumber":53,"author":{"gitId":"ZD292"},"content":"\t}","lastModifiedDate":"2023-10-10"},{"lineNumber":54,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":55,"author":{"gitId":"ZD292"},"content":"    @Override","lastModifiedDate":"2023-10-10"},{"lineNumber":56,"author":{"gitId":"ZD292"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-10"},{"lineNumber":57,"author":{"gitId":"ZD292"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-10"},{"lineNumber":58,"author":{"gitId":"ZD292"},"content":"            return true;","lastModifiedDate":"2023-10-10"},{"lineNumber":59,"author":{"gitId":"ZD292"},"content":"        }","lastModifiedDate":"2023-10-10"},{"lineNumber":60,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":61,"author":{"gitId":"ZD292"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-10"},{"lineNumber":62,"author":{"gitId":"ZD292"},"content":"        if (!(other instanceof GroupPersonCommand)) {","lastModifiedDate":"2023-10-10"},{"lineNumber":63,"author":{"gitId":"ZD292"},"content":"            return false;","lastModifiedDate":"2023-10-10"},{"lineNumber":64,"author":{"gitId":"ZD292"},"content":"        }","lastModifiedDate":"2023-10-10"},{"lineNumber":65,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":66,"author":{"gitId":"coderhuang559"},"content":"        GroupPersonCommand otherGroupPersonCommand \u003d (GroupPersonCommand) other;","lastModifiedDate":"2023-10-11"},{"lineNumber":67,"author":{"gitId":"ZD292"},"content":"        // to check","lastModifiedDate":"2023-10-10"},{"lineNumber":68,"author":{"gitId":"coderhuang559"},"content":"        return this.equals(otherGroupPersonCommand);","lastModifiedDate":"2023-10-11"},{"lineNumber":69,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":70,"author":{"gitId":"ZD292"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":71,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":72,"author":{"gitId":"ZD292"},"content":"    // to fix","lastModifiedDate":"2023-10-10"},{"lineNumber":73,"author":{"gitId":"ZD292"},"content":"    @Override","lastModifiedDate":"2023-10-10"},{"lineNumber":74,"author":{"gitId":"ZD292"},"content":"    public java.lang.String toString() {","lastModifiedDate":"2023-10-10"},{"lineNumber":75,"author":{"gitId":"ZD292"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-10"},{"lineNumber":76,"author":{"gitId":"ZD292"},"content":"            .add(\"toAddToGroup\", \"\")","lastModifiedDate":"2023-10-10"},{"lineNumber":77,"author":{"gitId":"ZD292"},"content":"            .toString();","lastModifiedDate":"2023-10-10"},{"lineNumber":78,"author":{"gitId":"ZD292"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":79,"author":{"gitId":"ZD292"},"content":"}","lastModifiedDate":"2023-10-10"},{"lineNumber":80,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-10-10"}],"authorContributionMap":{"Kailash201":2,"coderhuang559":4,"ZD292":74}},{"path":"src/main/java/seedu/address/logic/commands/GroupRemarkCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"coderhuang559"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"coderhuang559"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":3,"author":{"gitId":"coderhuang559"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-20"},{"lineNumber":4,"author":{"gitId":"coderhuang559"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-10-20"},{"lineNumber":5,"author":{"gitId":"coderhuang559"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GROUPREMARK;","lastModifiedDate":"2023-10-20"},{"lineNumber":6,"author":{"gitId":"coderhuang559"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GROUPTAG;","lastModifiedDate":"2023-10-20"},{"lineNumber":7,"author":{"gitId":"coderhuang559"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":8,"author":{"gitId":"coderhuang559"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-20"},{"lineNumber":9,"author":{"gitId":"coderhuang559"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-20"},{"lineNumber":10,"author":{"gitId":"coderhuang559"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2023-10-20"},{"lineNumber":11,"author":{"gitId":"coderhuang559"},"content":"import seedu.address.model.group.GroupRemark;","lastModifiedDate":"2023-10-20"},{"lineNumber":12,"author":{"gitId":"coderhuang559"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":13,"author":{"gitId":"coderhuang559"},"content":"/**","lastModifiedDate":"2023-10-20"},{"lineNumber":14,"author":{"gitId":"coderhuang559"},"content":" * Changes the remark of an existing person in the address book.","lastModifiedDate":"2023-10-20"},{"lineNumber":15,"author":{"gitId":"coderhuang559"},"content":" */","lastModifiedDate":"2023-10-20"},{"lineNumber":16,"author":{"gitId":"coderhuang559"},"content":"public class GroupRemarkCommand extends Command {","lastModifiedDate":"2023-10-20"},{"lineNumber":17,"author":{"gitId":"coderhuang559"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":18,"author":{"gitId":"coderhuang559"},"content":"    public static final String COMMAND_WORD \u003d \"remark\";","lastModifiedDate":"2023-10-20"},{"lineNumber":19,"author":{"gitId":"coderhuang559"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":20,"author":{"gitId":"coderhuang559"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the remark of the group identified \"","lastModifiedDate":"2023-10-20"},{"lineNumber":21,"author":{"gitId":"coderhuang559"},"content":"            + \"by the name of the group. \"","lastModifiedDate":"2023-10-20"},{"lineNumber":22,"author":{"gitId":"coderhuang559"},"content":"            + \"Existing remark will be overwritten by the input.\\n\"","lastModifiedDate":"2023-10-20"},{"lineNumber":23,"author":{"gitId":"coderhuang559"},"content":"            + \"Parameters: \"","lastModifiedDate":"2023-10-20"},{"lineNumber":24,"author":{"gitId":"coderhuang559"},"content":"            + PREFIX_GROUPTAG + \"GROUPNAME \"","lastModifiedDate":"2023-10-26"},{"lineNumber":25,"author":{"gitId":"coderhuang559"},"content":"            + PREFIX_GROUPREMARK + \"REMARK\\n\"","lastModifiedDate":"2023-10-20"},{"lineNumber":26,"author":{"gitId":"coderhuang559"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2023-10-20"},{"lineNumber":27,"author":{"gitId":"coderhuang559"},"content":"            + PREFIX_GROUPTAG + \"CS2103T \"","lastModifiedDate":"2023-10-26"},{"lineNumber":28,"author":{"gitId":"coderhuang559"},"content":"            + PREFIX_GROUPREMARK + \"Finals on 30 Nov\";","lastModifiedDate":"2023-10-20"},{"lineNumber":29,"author":{"gitId":"coderhuang559"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":30,"author":{"gitId":"coderhuang559"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Added remark to group %1$s: %2$s\";","lastModifiedDate":"2023-10-20"},{"lineNumber":31,"author":{"gitId":"coderhuang559"},"content":"    private final String groupName;","lastModifiedDate":"2023-10-20"},{"lineNumber":32,"author":{"gitId":"coderhuang559"},"content":"    private final GroupRemark groupRemark;","lastModifiedDate":"2023-10-20"},{"lineNumber":33,"author":{"gitId":"coderhuang559"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":34,"author":{"gitId":"coderhuang559"},"content":"    /**","lastModifiedDate":"2023-10-20"},{"lineNumber":35,"author":{"gitId":"coderhuang559"},"content":"     * @param groupName of the group to edit the remark","lastModifiedDate":"2023-10-20"},{"lineNumber":36,"author":{"gitId":"coderhuang559"},"content":"     * @param groupRemark of the group to be updated to","lastModifiedDate":"2023-10-20"},{"lineNumber":37,"author":{"gitId":"coderhuang559"},"content":"     */","lastModifiedDate":"2023-10-20"},{"lineNumber":38,"author":{"gitId":"coderhuang559"},"content":"    public GroupRemarkCommand(String groupName, GroupRemark groupRemark) {","lastModifiedDate":"2023-10-20"},{"lineNumber":39,"author":{"gitId":"coderhuang559"},"content":"        requireAllNonNull(groupName, groupRemark);","lastModifiedDate":"2023-10-20"},{"lineNumber":40,"author":{"gitId":"coderhuang559"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":41,"author":{"gitId":"coderhuang559"},"content":"        this.groupName \u003d groupName;","lastModifiedDate":"2023-10-20"},{"lineNumber":42,"author":{"gitId":"coderhuang559"},"content":"        this.groupRemark \u003d groupRemark;","lastModifiedDate":"2023-10-20"},{"lineNumber":43,"author":{"gitId":"coderhuang559"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":44,"author":{"gitId":"coderhuang559"},"content":"    @Override","lastModifiedDate":"2023-10-20"},{"lineNumber":45,"author":{"gitId":"coderhuang559"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-20"},{"lineNumber":46,"author":{"gitId":"coderhuang559"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-20"},{"lineNumber":47,"author":{"gitId":"coderhuang559"},"content":"        Group editedGroup \u003d model.addGroupRemark(this.groupName, this.groupRemark);","lastModifiedDate":"2023-10-20"},{"lineNumber":48,"author":{"gitId":"coderhuang559"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, editedGroup.getGroupName(), editedGroup.getGroupRemark()));","lastModifiedDate":"2023-10-20"},{"lineNumber":49,"author":{"gitId":"coderhuang559"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":50,"author":{"gitId":"coderhuang559"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":51,"author":{"gitId":"coderhuang559"},"content":"    @Override","lastModifiedDate":"2023-10-20"},{"lineNumber":52,"author":{"gitId":"coderhuang559"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-20"},{"lineNumber":53,"author":{"gitId":"coderhuang559"},"content":"        // short circuit if same object","lastModifiedDate":"2023-10-20"},{"lineNumber":54,"author":{"gitId":"coderhuang559"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-20"},{"lineNumber":55,"author":{"gitId":"coderhuang559"},"content":"            return true;","lastModifiedDate":"2023-10-20"},{"lineNumber":56,"author":{"gitId":"coderhuang559"},"content":"        }","lastModifiedDate":"2023-10-20"},{"lineNumber":57,"author":{"gitId":"coderhuang559"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":58,"author":{"gitId":"coderhuang559"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-20"},{"lineNumber":59,"author":{"gitId":"coderhuang559"},"content":"        if (!(other instanceof GroupRemarkCommand)) {","lastModifiedDate":"2023-10-20"},{"lineNumber":60,"author":{"gitId":"coderhuang559"},"content":"            return false;","lastModifiedDate":"2023-10-20"},{"lineNumber":61,"author":{"gitId":"coderhuang559"},"content":"        }","lastModifiedDate":"2023-10-20"},{"lineNumber":62,"author":{"gitId":"coderhuang559"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":63,"author":{"gitId":"coderhuang559"},"content":"        // state check","lastModifiedDate":"2023-10-20"},{"lineNumber":64,"author":{"gitId":"coderhuang559"},"content":"        GroupRemarkCommand e \u003d (GroupRemarkCommand) other;","lastModifiedDate":"2023-10-20"},{"lineNumber":65,"author":{"gitId":"coderhuang559"},"content":"        return groupRemark.equals(e.groupRemark)","lastModifiedDate":"2023-10-20"},{"lineNumber":66,"author":{"gitId":"coderhuang559"},"content":"                \u0026\u0026 groupRemark.equals(e.groupName);","lastModifiedDate":"2023-10-20"},{"lineNumber":67,"author":{"gitId":"coderhuang559"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":68,"author":{"gitId":"coderhuang559"},"content":"}","lastModifiedDate":"2023-10-20"}],"authorContributionMap":{"coderhuang559":68}},{"path":"src/main/java/seedu/address/logic/commands/ListTimeCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"coderhuang559"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-24"},{"lineNumber":2,"author":{"gitId":"coderhuang559"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":3,"author":{"gitId":"coderhuang559"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GROUPTAG;","lastModifiedDate":"2023-10-24"},{"lineNumber":4,"author":{"gitId":"coderhuang559"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-24"},{"lineNumber":5,"author":{"gitId":"coderhuang559"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":6,"author":{"gitId":"coderhuang559"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-24"},{"lineNumber":7,"author":{"gitId":"coderhuang559"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"coderhuang559"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-24"},{"lineNumber":9,"author":{"gitId":"coderhuang559"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":10,"author":{"gitId":"coderhuang559"},"content":"/**","lastModifiedDate":"2023-10-24"},{"lineNumber":11,"author":{"gitId":"coderhuang559"},"content":" * Deletes a person identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2023-10-24"},{"lineNumber":12,"author":{"gitId":"coderhuang559"},"content":" */","lastModifiedDate":"2023-10-24"},{"lineNumber":13,"author":{"gitId":"coderhuang559"},"content":"public abstract class ListTimeCommand extends Command {","lastModifiedDate":"2023-10-24"},{"lineNumber":14,"author":{"gitId":"coderhuang559"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":15,"author":{"gitId":"coderhuang559"},"content":"    public static final String COMMAND_WORD \u003d \"listtime\";","lastModifiedDate":"2023-10-24"},{"lineNumber":16,"author":{"gitId":"coderhuang559"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":17,"author":{"gitId":"coderhuang559"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-10-24"},{"lineNumber":18,"author":{"gitId":"coderhuang559"},"content":"            + \": Lists the times of the person/group with the name provided.\\n\"","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"coderhuang559"},"content":"            + \"Use \u0027listtime n/NAME\u0027 to list time of a person and \u0027listtime g/GROUPNAME\u0027 to list time of a group.\\n\"","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"coderhuang559"},"content":"            + \"Parameters: \" + PREFIX_NAME","lastModifiedDate":"2023-10-24"},{"lineNumber":21,"author":{"gitId":"coderhuang559"},"content":"            + \"NAME (full name of an existing person)\\n\"","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"coderhuang559"},"content":"            + \"Parameters: \" + PREFIX_GROUPTAG","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"coderhuang559"},"content":"            + \"GROUPNAME (full name of an existing group)\\n\"","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"coderhuang559"},"content":"            + \"Example: \" + COMMAND_WORD + \" \" + PREFIX_NAME + \"Nicholas Lee \\n\"","lastModifiedDate":"2023-10-24"},{"lineNumber":25,"author":{"gitId":"coderhuang559"},"content":"            + \"Example: \" + COMMAND_WORD + \" \" + PREFIX_GROUPTAG + \"CS2103T\";","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"coderhuang559"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":27,"author":{"gitId":"coderhuang559"},"content":"    public ListTimeCommand() {","lastModifiedDate":"2023-10-24"},{"lineNumber":28,"author":{"gitId":"coderhuang559"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":29,"author":{"gitId":"coderhuang559"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":30,"author":{"gitId":"coderhuang559"},"content":"    @Override","lastModifiedDate":"2023-10-24"},{"lineNumber":31,"author":{"gitId":"coderhuang559"},"content":"    public abstract CommandResult execute(Model model) throws CommandException;","lastModifiedDate":"2023-10-24"},{"lineNumber":32,"author":{"gitId":"coderhuang559"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":33,"author":{"gitId":"coderhuang559"},"content":"    @Override","lastModifiedDate":"2023-10-24"},{"lineNumber":34,"author":{"gitId":"coderhuang559"},"content":"    public abstract boolean equals(Object other);","lastModifiedDate":"2023-10-24"},{"lineNumber":35,"author":{"gitId":"coderhuang559"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":36,"author":{"gitId":"coderhuang559"},"content":"    @Override","lastModifiedDate":"2023-10-24"},{"lineNumber":37,"author":{"gitId":"coderhuang559"},"content":"    public abstract String toString();","lastModifiedDate":"2023-10-24"},{"lineNumber":38,"author":{"gitId":"coderhuang559"},"content":"}","lastModifiedDate":"2023-10-24"}],"authorContributionMap":{"coderhuang559":38}},{"path":"src/main/java/seedu/address/logic/commands/ListTimeGroupCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"coderhuang559"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-24"},{"lineNumber":2,"author":{"gitId":"coderhuang559"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":3,"author":{"gitId":"coderhuang559"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-24"},{"lineNumber":4,"author":{"gitId":"coderhuang559"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-24"},{"lineNumber":5,"author":{"gitId":"nicholastng010601"},"content":"import seedu.address.model.TimeIntervalList;","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"coderhuang559"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-24"},{"lineNumber":7,"author":{"gitId":"coderhuang559"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"coderhuang559"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":9,"author":{"gitId":"coderhuang559"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-24"},{"lineNumber":10,"author":{"gitId":"coderhuang559"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":11,"author":{"gitId":"coderhuang559"},"content":"public class ListTimeGroupCommand extends ListTimeCommand{","lastModifiedDate":"2023-10-24"},{"lineNumber":12,"author":{"gitId":"coderhuang559"},"content":"    public static final String MESSAGE_LISTTIME_GROUP_SUCCESS \u003d \"Listed times of Group: %1$s\";","lastModifiedDate":"2023-10-24"},{"lineNumber":13,"author":{"gitId":"coderhuang559"},"content":"    public static final String MESSAGE_NO_GROUP_WITH_NAME_FOUND \u003d \"No group with such name found.\\n\"","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"coderhuang559"},"content":"            + \"Please provide the group\u0027s full name as in the existing contactlist.\";","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"coderhuang559"},"content":"    private final Group group;","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"coderhuang559"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":17,"author":{"gitId":"coderhuang559"},"content":"    public ListTimeGroupCommand(Group group) {","lastModifiedDate":"2023-10-25"},{"lineNumber":18,"author":{"gitId":"coderhuang559"},"content":"        this.group \u003d group;","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"coderhuang559"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":20,"author":{"gitId":"coderhuang559"},"content":"    @Override","lastModifiedDate":"2023-10-24"},{"lineNumber":21,"author":{"gitId":"coderhuang559"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-24"},{"lineNumber":22,"author":{"gitId":"coderhuang559"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-24"},{"lineNumber":23,"author":{"gitId":"coderhuang559"},"content":"        if (!model.hasGroup(group)) {","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"coderhuang559"},"content":"            throw new CommandException(MESSAGE_NO_GROUP_WITH_NAME_FOUND);","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"coderhuang559"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"nicholastng010601"},"content":"        TimeIntervalList timeIntervalList \u003d model.getTimeFromGroup(group);","lastModifiedDate":"2023-10-25"},{"lineNumber":27,"author":{"gitId":"nicholastng010601"},"content":"        return new CommandResult(String.format(MESSAGE_LISTTIME_GROUP_SUCCESS, group.getGroupName()) + timeIntervalList);","lastModifiedDate":"2023-10-25"},{"lineNumber":28,"author":{"gitId":"coderhuang559"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":29,"author":{"gitId":"coderhuang559"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":30,"author":{"gitId":"coderhuang559"},"content":"    @Override","lastModifiedDate":"2023-10-24"},{"lineNumber":31,"author":{"gitId":"coderhuang559"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-24"},{"lineNumber":32,"author":{"gitId":"coderhuang559"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-24"},{"lineNumber":33,"author":{"gitId":"coderhuang559"},"content":"            return true;","lastModifiedDate":"2023-10-24"},{"lineNumber":34,"author":{"gitId":"coderhuang559"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":35,"author":{"gitId":"coderhuang559"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":36,"author":{"gitId":"coderhuang559"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-24"},{"lineNumber":37,"author":{"gitId":"coderhuang559"},"content":"        if (!(other instanceof ListTimeGroupCommand)) {","lastModifiedDate":"2023-10-24"},{"lineNumber":38,"author":{"gitId":"coderhuang559"},"content":"            return false;","lastModifiedDate":"2023-10-24"},{"lineNumber":39,"author":{"gitId":"coderhuang559"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":40,"author":{"gitId":"coderhuang559"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":41,"author":{"gitId":"coderhuang559"},"content":"        ListTimeGroupCommand otherListTimeGroupCommand \u003d (ListTimeGroupCommand) other;","lastModifiedDate":"2023-10-24"},{"lineNumber":42,"author":{"gitId":"coderhuang559"},"content":"        return group.equals(otherListTimeGroupCommand.group);","lastModifiedDate":"2023-10-25"},{"lineNumber":43,"author":{"gitId":"coderhuang559"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":44,"author":{"gitId":"coderhuang559"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":45,"author":{"gitId":"coderhuang559"},"content":"    @Override","lastModifiedDate":"2023-10-24"},{"lineNumber":46,"author":{"gitId":"coderhuang559"},"content":"    public String toString() {","lastModifiedDate":"2023-10-24"},{"lineNumber":47,"author":{"gitId":"coderhuang559"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-24"},{"lineNumber":48,"author":{"gitId":"coderhuang559"},"content":"                .add(\"group name\", group)","lastModifiedDate":"2023-10-25"},{"lineNumber":49,"author":{"gitId":"coderhuang559"},"content":"                .toString();","lastModifiedDate":"2023-10-24"},{"lineNumber":50,"author":{"gitId":"coderhuang559"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":51,"author":{"gitId":"coderhuang559"},"content":"}","lastModifiedDate":"2023-10-24"}],"authorContributionMap":{"coderhuang559":48,"nicholastng010601":3}},{"path":"src/main/java/seedu/address/logic/commands/ListTimePersonCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"coderhuang559"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-24"},{"lineNumber":2,"author":{"gitId":"coderhuang559"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":3,"author":{"gitId":"coderhuang559"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-24"},{"lineNumber":4,"author":{"gitId":"coderhuang559"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-24"},{"lineNumber":5,"author":{"gitId":"nicholastng010601"},"content":"import seedu.address.model.TimeIntervalList;","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"coderhuang559"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-24"},{"lineNumber":7,"author":{"gitId":"coderhuang559"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"coderhuang559"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":9,"author":{"gitId":"coderhuang559"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-24"},{"lineNumber":10,"author":{"gitId":"coderhuang559"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":11,"author":{"gitId":"coderhuang559"},"content":"public class ListTimePersonCommand extends ListTimeCommand{","lastModifiedDate":"2023-10-24"},{"lineNumber":12,"author":{"gitId":"coderhuang559"},"content":"    public static final String MESSAGE_LISTTIME_PERSON_SUCCESS \u003d \"Listed times of Person: %1$s\";","lastModifiedDate":"2023-10-24"},{"lineNumber":13,"author":{"gitId":"coderhuang559"},"content":"    public static final String MESSAGE_NO_PERSON_WITH_NAME_FOUND \u003d \"No person with such name found.\\n\"","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"coderhuang559"},"content":"            + \"Please provide the person\u0027s full name as in the existing contactlist.\";","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"coderhuang559"},"content":"    private final Name personName;","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"coderhuang559"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":17,"author":{"gitId":"coderhuang559"},"content":"    public ListTimePersonCommand(Name personName) {","lastModifiedDate":"2023-10-25"},{"lineNumber":18,"author":{"gitId":"coderhuang559"},"content":"        this.personName \u003d personName;","lastModifiedDate":"2023-10-24"},{"lineNumber":19,"author":{"gitId":"coderhuang559"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":20,"author":{"gitId":"coderhuang559"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":21,"author":{"gitId":"coderhuang559"},"content":"    @Override","lastModifiedDate":"2023-10-24"},{"lineNumber":22,"author":{"gitId":"coderhuang559"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-24"},{"lineNumber":23,"author":{"gitId":"coderhuang559"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-24"},{"lineNumber":24,"author":{"gitId":"coderhuang559"},"content":"        if (!model.hasPerson(personName)) {","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"coderhuang559"},"content":"            throw new CommandException(MESSAGE_NO_PERSON_WITH_NAME_FOUND);","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"coderhuang559"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":27,"author":{"gitId":"nicholastng010601"},"content":"        TimeIntervalList freetime \u003d model.getTimeFromPerson(personName);","lastModifiedDate":"2023-10-25"},{"lineNumber":28,"author":{"gitId":"coderhuang559"},"content":"        return new CommandResult(String.format(MESSAGE_LISTTIME_PERSON_SUCCESS, personName.fullName) + freetime);","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"coderhuang559"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":30,"author":{"gitId":"coderhuang559"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":31,"author":{"gitId":"coderhuang559"},"content":"    @Override","lastModifiedDate":"2023-10-24"},{"lineNumber":32,"author":{"gitId":"coderhuang559"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-24"},{"lineNumber":33,"author":{"gitId":"coderhuang559"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-24"},{"lineNumber":34,"author":{"gitId":"coderhuang559"},"content":"            return true;","lastModifiedDate":"2023-10-24"},{"lineNumber":35,"author":{"gitId":"coderhuang559"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":36,"author":{"gitId":"coderhuang559"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":37,"author":{"gitId":"coderhuang559"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-24"},{"lineNumber":38,"author":{"gitId":"coderhuang559"},"content":"        if (!(other instanceof ListTimePersonCommand)) {","lastModifiedDate":"2023-10-24"},{"lineNumber":39,"author":{"gitId":"coderhuang559"},"content":"            return false;","lastModifiedDate":"2023-10-24"},{"lineNumber":40,"author":{"gitId":"coderhuang559"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":41,"author":{"gitId":"coderhuang559"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":42,"author":{"gitId":"coderhuang559"},"content":"        ListTimePersonCommand otherListTimePersonCommand \u003d (ListTimePersonCommand) other;","lastModifiedDate":"2023-10-24"},{"lineNumber":43,"author":{"gitId":"coderhuang559"},"content":"        return personName.equals(otherListTimePersonCommand.personName);","lastModifiedDate":"2023-10-24"},{"lineNumber":44,"author":{"gitId":"coderhuang559"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":45,"author":{"gitId":"coderhuang559"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":46,"author":{"gitId":"coderhuang559"},"content":"    @Override","lastModifiedDate":"2023-10-24"},{"lineNumber":47,"author":{"gitId":"coderhuang559"},"content":"    public String toString() {","lastModifiedDate":"2023-10-24"},{"lineNumber":48,"author":{"gitId":"coderhuang559"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-24"},{"lineNumber":49,"author":{"gitId":"coderhuang559"},"content":"                .add(\"person name\", personName)","lastModifiedDate":"2023-10-24"},{"lineNumber":50,"author":{"gitId":"coderhuang559"},"content":"                .toString();","lastModifiedDate":"2023-10-24"},{"lineNumber":51,"author":{"gitId":"coderhuang559"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":52,"author":{"gitId":"coderhuang559"},"content":"}","lastModifiedDate":"2023-10-24"}],"authorContributionMap":{"coderhuang559":50,"nicholastng010601":2}},{"path":"src/main/java/seedu/address/logic/commands/UngroupPersonCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"coderhuang559"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"coderhuang559"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":3,"author":{"gitId":"coderhuang559"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-06"},{"lineNumber":4,"author":{"gitId":"coderhuang559"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GROUPTAG;","lastModifiedDate":"2023-10-06"},{"lineNumber":5,"author":{"gitId":"coderhuang559"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-06"},{"lineNumber":6,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":7,"author":{"gitId":"coderhuang559"},"content":"import javafx.util.Pair;","lastModifiedDate":"2023-10-11"},{"lineNumber":8,"author":{"gitId":"coderhuang559"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-11"},{"lineNumber":9,"author":{"gitId":"coderhuang559"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-11"},{"lineNumber":10,"author":{"gitId":"coderhuang559"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-11"},{"lineNumber":11,"author":{"gitId":"Kailash201"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2023-10-22"},{"lineNumber":12,"author":{"gitId":"coderhuang559"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-11"},{"lineNumber":13,"author":{"gitId":"coderhuang559"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":14,"author":{"gitId":"coderhuang559"},"content":"/**","lastModifiedDate":"2023-10-11"},{"lineNumber":15,"author":{"gitId":"coderhuang559"},"content":" * Removes a person from a group.","lastModifiedDate":"2023-10-11"},{"lineNumber":16,"author":{"gitId":"coderhuang559"},"content":" */","lastModifiedDate":"2023-10-11"},{"lineNumber":17,"author":{"gitId":"coderhuang559"},"content":"public class UngroupPersonCommand extends Command {","lastModifiedDate":"2023-10-06"},{"lineNumber":18,"author":{"gitId":"coderhuang559"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":19,"author":{"gitId":"coderhuang559"},"content":"    public static final String COMMAND_WORD \u003d \"ungroup\";","lastModifiedDate":"2023-10-06"},{"lineNumber":20,"author":{"gitId":"coderhuang559"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":21,"author":{"gitId":"nicholastng010601"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Removes a person from a group in the address book.\\n\"","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"coderhuang559"},"content":"        + \"Parameters: \"","lastModifiedDate":"2023-10-06"},{"lineNumber":23,"author":{"gitId":"coderhuang559"},"content":"        + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2023-10-11"},{"lineNumber":24,"author":{"gitId":"coderhuang559"},"content":"        + PREFIX_GROUPTAG + \"GROUP \";","lastModifiedDate":"2023-10-11"},{"lineNumber":25,"author":{"gitId":"coderhuang559"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":26,"author":{"gitId":"coderhuang559"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"%1$s is no longer a part of %2$s\";","lastModifiedDate":"2023-10-11"},{"lineNumber":27,"author":{"gitId":"coderhuang559"},"content":"    private final String personName;","lastModifiedDate":"2023-10-11"},{"lineNumber":28,"author":{"gitId":"coderhuang559"},"content":"    private final String groupName;","lastModifiedDate":"2023-10-11"},{"lineNumber":29,"author":{"gitId":"coderhuang559"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":30,"author":{"gitId":"coderhuang559"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":31,"author":{"gitId":"coderhuang559"},"content":"    /**","lastModifiedDate":"2023-10-11"},{"lineNumber":32,"author":{"gitId":"coderhuang559"},"content":"     * Creates an UngroupPersonCommand to add the specified {@code Person}","lastModifiedDate":"2023-10-11"},{"lineNumber":33,"author":{"gitId":"coderhuang559"},"content":"     * to the specified {@code Group}","lastModifiedDate":"2023-10-11"},{"lineNumber":34,"author":{"gitId":"coderhuang559"},"content":"     */","lastModifiedDate":"2023-10-11"},{"lineNumber":35,"author":{"gitId":"coderhuang559"},"content":"    public UngroupPersonCommand(String personName, String groupName) {","lastModifiedDate":"2023-10-11"},{"lineNumber":36,"author":{"gitId":"coderhuang559"},"content":"        requireNonNull(personName);","lastModifiedDate":"2023-10-11"},{"lineNumber":37,"author":{"gitId":"coderhuang559"},"content":"        requireNonNull(groupName);","lastModifiedDate":"2023-10-11"},{"lineNumber":38,"author":{"gitId":"coderhuang559"},"content":"        this.personName \u003d personName;","lastModifiedDate":"2023-10-11"},{"lineNumber":39,"author":{"gitId":"coderhuang559"},"content":"        this.groupName \u003d groupName;","lastModifiedDate":"2023-10-11"},{"lineNumber":40,"author":{"gitId":"coderhuang559"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":41,"author":{"gitId":"coderhuang559"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":42,"author":{"gitId":"coderhuang559"},"content":"    @Override","lastModifiedDate":"2023-10-06"},{"lineNumber":43,"author":{"gitId":"coderhuang559"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-06"},{"lineNumber":44,"author":{"gitId":"coderhuang559"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-06"},{"lineNumber":45,"author":{"gitId":"coderhuang559"},"content":"        Pair\u003cPerson, Group\u003e output \u003d model.ungroupPerson(this.personName, this.groupName);","lastModifiedDate":"2023-10-11"},{"lineNumber":46,"author":{"gitId":"coderhuang559"},"content":"        Person person \u003d output.getKey();","lastModifiedDate":"2023-10-11"},{"lineNumber":47,"author":{"gitId":"coderhuang559"},"content":"        Group group \u003d output.getValue();","lastModifiedDate":"2023-10-11"},{"lineNumber":48,"author":{"gitId":"coderhuang559"},"content":"        System.out.println(person.toString());","lastModifiedDate":"2023-10-11"},{"lineNumber":49,"author":{"gitId":"coderhuang559"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":50,"author":{"gitId":"coderhuang559"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, person.getName().fullName, group.getGroupName()));","lastModifiedDate":"2023-10-20"},{"lineNumber":51,"author":{"gitId":"coderhuang559"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":52,"author":{"gitId":"coderhuang559"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":53,"author":{"gitId":"coderhuang559"},"content":"    @Override","lastModifiedDate":"2023-10-11"},{"lineNumber":54,"author":{"gitId":"coderhuang559"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-11"},{"lineNumber":55,"author":{"gitId":"coderhuang559"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-11"},{"lineNumber":56,"author":{"gitId":"coderhuang559"},"content":"            return true;","lastModifiedDate":"2023-10-11"},{"lineNumber":57,"author":{"gitId":"coderhuang559"},"content":"        }","lastModifiedDate":"2023-10-11"},{"lineNumber":58,"author":{"gitId":"coderhuang559"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":59,"author":{"gitId":"coderhuang559"},"content":"        if (!(other instanceof GroupPersonCommand)) {","lastModifiedDate":"2023-10-11"},{"lineNumber":60,"author":{"gitId":"coderhuang559"},"content":"            return false;","lastModifiedDate":"2023-10-11"},{"lineNumber":61,"author":{"gitId":"coderhuang559"},"content":"        }","lastModifiedDate":"2023-10-07"},{"lineNumber":62,"author":{"gitId":"coderhuang559"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":63,"author":{"gitId":"coderhuang559"},"content":"        UngroupPersonCommand otherUngroupPersonCommand \u003d (UngroupPersonCommand) other;","lastModifiedDate":"2023-10-11"},{"lineNumber":64,"author":{"gitId":"coderhuang559"},"content":"        return this.equals(otherUngroupPersonCommand);","lastModifiedDate":"2023-10-11"},{"lineNumber":65,"author":{"gitId":"coderhuang559"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":66,"author":{"gitId":"coderhuang559"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":67,"author":{"gitId":"coderhuang559"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":68,"author":{"gitId":"coderhuang559"},"content":"    // to fix","lastModifiedDate":"2023-10-11"},{"lineNumber":69,"author":{"gitId":"coderhuang559"},"content":"    @Override","lastModifiedDate":"2023-10-11"},{"lineNumber":70,"author":{"gitId":"coderhuang559"},"content":"    public String toString() {","lastModifiedDate":"2023-10-11"},{"lineNumber":71,"author":{"gitId":"coderhuang559"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-11"},{"lineNumber":72,"author":{"gitId":"coderhuang559"},"content":"            .add(\"toRemoveFromGroup\", \"\")","lastModifiedDate":"2023-10-11"},{"lineNumber":73,"author":{"gitId":"coderhuang559"},"content":"            .toString();","lastModifiedDate":"2023-10-11"},{"lineNumber":74,"author":{"gitId":"coderhuang559"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":75,"author":{"gitId":"coderhuang559"},"content":"}","lastModifiedDate":"2023-10-06"}],"authorContributionMap":{"Kailash201":2,"coderhuang559":72,"nicholastng010601":1}},{"path":"src/main/java/seedu/address/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-02-05"},{"lineNumber":5,"author":{"gitId":"Kailash201"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GROUPTAG;","lastModifiedDate":"2023-10-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-02-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-02-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"nicholastng010601"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2023-10-24"},{"lineNumber":14,"author":{"gitId":"ZD292"},"content":"import seedu.address.model.group.GroupList;","lastModifiedDate":"2023-10-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-03-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-03-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-03-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-03-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":31,"author":{"gitId":"nicholastng010601"},"content":"        GroupList groupList \u003d new GroupList();","lastModifiedDate":"2023-10-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":33,"author":{"gitId":"Kailash201"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_GROUPTAG);","lastModifiedDate":"2023-10-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":35,"author":{"gitId":"Kailash201"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL)","lastModifiedDate":"2023-10-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":40,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":41,"author":{"gitId":"Kailash201"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_GROUPTAG);","lastModifiedDate":"2023-10-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":46,"author":{"gitId":"Kailash201"},"content":"        // edit here of add more than 1 group","lastModifiedDate":"2023-10-06"},{"lineNumber":47,"author":{"gitId":"Kailash201"},"content":"        if (arePrefixesPresent(argMultimap, PREFIX_GROUPTAG)) {","lastModifiedDate":"2023-10-06"},{"lineNumber":48,"author":{"gitId":"nicholastng010601"},"content":"            Group group \u003d ParserUtil.parseGroup(argMultimap.getValue(PREFIX_GROUPTAG).get());","lastModifiedDate":"2023-10-24"},{"lineNumber":49,"author":{"gitId":"nicholastng010601"},"content":"            groupList.add(group);","lastModifiedDate":"2023-10-24"},{"lineNumber":50,"author":{"gitId":"Kailash201"},"content":"        }","lastModifiedDate":"2023-10-06"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":52,"author":{"gitId":"Kailash201"},"content":"        Person person \u003d new Person(name, phone, email, groupList);","lastModifiedDate":"2023-10-06"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return new AddCommand(person);","lastModifiedDate":"2017-03-17"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"Kailash201":9,"ZD292":1,"nicholastng010601":4,"-":51}},{"path":"src/main/java/seedu/address/logic/parser/AddGroupFreeTimeCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"coderhuang559"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-25"},{"lineNumber":2,"author":{"gitId":"coderhuang559"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":3,"author":{"gitId":"coderhuang559"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-25"},{"lineNumber":4,"author":{"gitId":"coderhuang559"},"content":"import static seedu.address.logic.parser.CliSyntax.*;","lastModifiedDate":"2023-10-25"},{"lineNumber":5,"author":{"gitId":"coderhuang559"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"coderhuang559"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"coderhuang559"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"coderhuang559"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"coderhuang559"},"content":"import seedu.address.logic.commands.*;","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"coderhuang559"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"coderhuang559"},"content":"import seedu.address.model.TimeInterval;","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"coderhuang559"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"coderhuang559"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"coderhuang559"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"coderhuang559"},"content":"/**","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"coderhuang559"},"content":" * Parses input arguments and creates a new AddGroupFreeTimeCommand object","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"coderhuang559"},"content":" */","lastModifiedDate":"2023-10-25"},{"lineNumber":18,"author":{"gitId":"coderhuang559"},"content":"public class AddGroupFreeTimeCommandParser implements Parser\u003cAddGroupFreeTimeCommand\u003e {","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"coderhuang559"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"coderhuang559"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"coderhuang559"},"content":"     * Parses the given {@code String} of arguments in the context of the AddGroupFreeTimeCommand","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"coderhuang559"},"content":"     * and returns a AddGroupFreeTimeCommand object for execution.","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"coderhuang559"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"coderhuang559"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"coderhuang559"},"content":"    public AddGroupFreeTimeCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"coderhuang559"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-10-25"},{"lineNumber":27,"author":{"gitId":"coderhuang559"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_GROUPTAG, PREFIX_FREETIME, PREFIX_ENDINTERVAL);","lastModifiedDate":"2023-10-25"},{"lineNumber":28,"author":{"gitId":"coderhuang559"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"coderhuang559"},"content":"        //find a way to separate error msg when \";\" is missing","lastModifiedDate":"2023-10-25"},{"lineNumber":30,"author":{"gitId":"coderhuang559"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_GROUPTAG, PREFIX_FREETIME)","lastModifiedDate":"2023-10-25"},{"lineNumber":31,"author":{"gitId":"coderhuang559"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-10-25"},{"lineNumber":32,"author":{"gitId":"coderhuang559"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddGroupFreeTimeCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-25"},{"lineNumber":33,"author":{"gitId":"coderhuang559"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":34,"author":{"gitId":"coderhuang559"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":35,"author":{"gitId":"coderhuang559"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_GROUPTAG);","lastModifiedDate":"2023-10-25"},{"lineNumber":36,"author":{"gitId":"coderhuang559"},"content":"        Group group \u003d ParserUtil.parseSingleGroup(argMultimap.getValue(PREFIX_GROUPTAG).get());","lastModifiedDate":"2023-10-25"},{"lineNumber":37,"author":{"gitId":"coderhuang559"},"content":"        TimeInterval firstInterval \u003d ParserUtil.parseEachInterval(argMultimap.getValue(PREFIX_FREETIME).get());","lastModifiedDate":"2023-10-25"},{"lineNumber":38,"author":{"gitId":"coderhuang559"},"content":"        ArrayList\u003cTimeInterval\u003e timeInterval \u003d ParserUtil.parseInterval(argMultimap.getAllValues(PREFIX_ENDINTERVAL));","lastModifiedDate":"2023-10-25"},{"lineNumber":39,"author":{"gitId":"coderhuang559"},"content":"        timeInterval.add(0, firstInterval);","lastModifiedDate":"2023-10-25"},{"lineNumber":40,"author":{"gitId":"coderhuang559"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":41,"author":{"gitId":"nicholastng010601"},"content":"        if (TimeInterval.isTimeIntervalOverlap(timeInterval)) {","lastModifiedDate":"2023-10-25"},{"lineNumber":42,"author":{"gitId":"coderhuang559"},"content":"            throw new ParseException(TimeInterval.MESSAGE_CONSTRAINTS_OVERLAP);","lastModifiedDate":"2023-10-25"},{"lineNumber":43,"author":{"gitId":"coderhuang559"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":44,"author":{"gitId":"coderhuang559"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":45,"author":{"gitId":"coderhuang559"},"content":"        return new AddGroupFreeTimeCommand(group, timeInterval);","lastModifiedDate":"2023-10-25"},{"lineNumber":46,"author":{"gitId":"coderhuang559"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":47,"author":{"gitId":"coderhuang559"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":48,"author":{"gitId":"coderhuang559"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-10-25"},{"lineNumber":49,"author":{"gitId":"coderhuang559"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-10-25"},{"lineNumber":50,"author":{"gitId":"coderhuang559"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":51,"author":{"gitId":"coderhuang559"},"content":"}","lastModifiedDate":"2023-10-25"}],"authorContributionMap":{"coderhuang559":50,"nicholastng010601":1}},{"path":"src/main/java/seedu/address/logic/parser/AddTimeCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Kailash201"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-21"},{"lineNumber":2,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":3,"author":{"gitId":"Kailash201"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-21"},{"lineNumber":4,"author":{"gitId":"Kailash201"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ENDINTERVAL;","lastModifiedDate":"2023-10-21"},{"lineNumber":5,"author":{"gitId":"Kailash201"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_FREETIME;","lastModifiedDate":"2023-10-21"},{"lineNumber":6,"author":{"gitId":"Kailash201"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-21"},{"lineNumber":7,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":8,"author":{"gitId":"Kailash201"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-21"},{"lineNumber":9,"author":{"gitId":"Kailash201"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-10-21"},{"lineNumber":10,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":11,"author":{"gitId":"Kailash201"},"content":"import seedu.address.logic.commands.AddTimeCommand;","lastModifiedDate":"2023-10-21"},{"lineNumber":12,"author":{"gitId":"Kailash201"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-21"},{"lineNumber":13,"author":{"gitId":"Kailash201"},"content":"import seedu.address.model.TimeInterval;","lastModifiedDate":"2023-10-21"},{"lineNumber":14,"author":{"gitId":"Kailash201"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-10-21"},{"lineNumber":15,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":16,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":17,"author":{"gitId":"Kailash201"},"content":"public class AddTimeCommandParser implements Parser\u003cAddTimeCommand\u003e {","lastModifiedDate":"2023-10-21"},{"lineNumber":18,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":19,"author":{"gitId":"Kailash201"},"content":"    @Override","lastModifiedDate":"2023-10-21"},{"lineNumber":20,"author":{"gitId":"Kailash201"},"content":"    public AddTimeCommand parse(String userInput) throws ParseException {","lastModifiedDate":"2023-10-21"},{"lineNumber":21,"author":{"gitId":"Kailash201"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-10-21"},{"lineNumber":22,"author":{"gitId":"Kailash201"},"content":"                ArgumentTokenizer.tokenize(userInput, PREFIX_NAME, PREFIX_FREETIME, PREFIX_ENDINTERVAL);","lastModifiedDate":"2023-10-21"},{"lineNumber":23,"author":{"gitId":"Kailash201"},"content":"        //find a way to separate error msg when \";\" is missing","lastModifiedDate":"2023-10-22"},{"lineNumber":24,"author":{"gitId":"Kailash201"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_FREETIME)","lastModifiedDate":"2023-10-22"},{"lineNumber":25,"author":{"gitId":"Kailash201"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-10-21"},{"lineNumber":26,"author":{"gitId":"Kailash201"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddTimeCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-21"},{"lineNumber":27,"author":{"gitId":"Kailash201"},"content":"        }","lastModifiedDate":"2023-10-21"},{"lineNumber":28,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":29,"author":{"gitId":"Kailash201"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME);","lastModifiedDate":"2023-10-21"},{"lineNumber":30,"author":{"gitId":"Kailash201"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2023-10-21"},{"lineNumber":31,"author":{"gitId":"Kailash201"},"content":"        TimeInterval firstInterval \u003d ParserUtil.parseEachInterval(argMultimap.getValue(PREFIX_FREETIME).get());","lastModifiedDate":"2023-10-21"},{"lineNumber":32,"author":{"gitId":"Kailash201"},"content":"        ArrayList\u003cTimeInterval\u003e timeInterval \u003d ParserUtil.parseInterval(argMultimap.getAllValues(PREFIX_ENDINTERVAL));","lastModifiedDate":"2023-10-21"},{"lineNumber":33,"author":{"gitId":"Kailash201"},"content":"        timeInterval.add(0, firstInterval);","lastModifiedDate":"2023-10-21"},{"lineNumber":34,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":35,"author":{"gitId":"nicholastng010601"},"content":"        if (TimeInterval.isTimeIntervalOverlap(timeInterval)) {","lastModifiedDate":"2023-10-25"},{"lineNumber":36,"author":{"gitId":"Kailash201"},"content":"            throw new ParseException(TimeInterval.MESSAGE_CONSTRAINTS_OVERLAP);","lastModifiedDate":"2023-10-21"},{"lineNumber":37,"author":{"gitId":"Kailash201"},"content":"        }","lastModifiedDate":"2023-10-21"},{"lineNumber":38,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":39,"author":{"gitId":"Kailash201"},"content":"        return new AddTimeCommand(name, timeInterval);","lastModifiedDate":"2023-10-21"},{"lineNumber":40,"author":{"gitId":"Kailash201"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":41,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":42,"author":{"gitId":"Kailash201"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-10-21"},{"lineNumber":43,"author":{"gitId":"Kailash201"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-10-21"},{"lineNumber":44,"author":{"gitId":"Kailash201"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":45,"author":{"gitId":"Kailash201"},"content":"}","lastModifiedDate":"2023-10-21"}],"authorContributionMap":{"Kailash201":44,"nicholastng010601":1}},{"path":"src/main/java/seedu/address/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-07-29"},{"lineNumber":11,"author":{"gitId":"ZD292"},"content":"import seedu.address.logic.commands.*;","lastModifiedDate":"2023-10-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(AddressBookParser.class);","lastModifiedDate":"2023-07-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // Note to developers: Change the log level in config.json to enable lower level (i.e., FINE, FINER and lower)","lastModifiedDate":"2023-07-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // log messages such as the one below.","lastModifiedDate":"2023-07-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // Lower level log messages are used sparingly to minimize noise in the code.","lastModifiedDate":"2023-07-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        logger.fine(\"Command word: \" + commandWord + \"; Arguments: \" + arguments);","lastModifiedDate":"2023-07-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":51,"author":{"gitId":"Kailash201"},"content":"        case AddTimeCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-21"},{"lineNumber":52,"author":{"gitId":"Kailash201"},"content":"            return new AddTimeCommandParser().parse(arguments);","lastModifiedDate":"2023-10-21"},{"lineNumber":53,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":54,"author":{"gitId":"nicholastng010601"},"content":"        case DeleteTimeCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-24"},{"lineNumber":55,"author":{"gitId":"nicholastng010601"},"content":"            return new DeleteTimeCommandParser().parse(arguments);","lastModifiedDate":"2023-10-24"},{"lineNumber":56,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":57,"author":{"gitId":"nicholastng010601"},"content":"        case CreateGroupCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-03"},{"lineNumber":58,"author":{"gitId":"nicholastng010601"},"content":"            return new CreateGroupParser().parse(arguments);","lastModifiedDate":"2023-10-03"},{"lineNumber":59,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":60,"author":{"gitId":"ZD292"},"content":"        case GroupPersonCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-10"},{"lineNumber":61,"author":{"gitId":"ZD292"},"content":"             return new GroupPersonParser().parse(arguments);","lastModifiedDate":"2023-10-10"},{"lineNumber":62,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":63,"author":{"gitId":"coderhuang559"},"content":"        case UngroupPersonCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-11"},{"lineNumber":64,"author":{"gitId":"coderhuang559"},"content":"            return new UngroupPersonCommandParser().parse(arguments);","lastModifiedDate":"2023-10-11"},{"lineNumber":65,"author":{"gitId":"coderhuang559"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"coderhuang559"},"content":"        case GroupRemarkCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-20"},{"lineNumber":73,"author":{"gitId":"coderhuang559"},"content":"            return new GroupRemarkCommandParser().parse(arguments);","lastModifiedDate":"2023-10-20"},{"lineNumber":74,"author":{"gitId":"coderhuang559"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":75,"author":{"gitId":"coderhuang559"},"content":"        case ListTimeCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-24"},{"lineNumber":76,"author":{"gitId":"coderhuang559"},"content":"            return new ListTimeCommandParser().parse(arguments);","lastModifiedDate":"2023-10-24"},{"lineNumber":77,"author":{"gitId":"coderhuang559"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":84,"author":{"gitId":"coderhuang559"},"content":"        case AddGroupFreeTimeCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-25"},{"lineNumber":85,"author":{"gitId":"coderhuang559"},"content":"            return new AddGroupFreeTimeCommandParser().parse(arguments);","lastModifiedDate":"2023-10-25"},{"lineNumber":86,"author":{"gitId":"coderhuang559"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":90,"author":{"gitId":"ZD292"},"content":"        case FindFreeTimeCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-25"},{"lineNumber":91,"author":{"gitId":"ZD292"},"content":"            return new FindFreeTimeParser().parse(arguments);","lastModifiedDate":"2023-10-25"},{"lineNumber":92,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            logger.finer(\"This user input caused a ParseException: \" + userInput);","lastModifiedDate":"2023-07-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Kailash201":2,"coderhuang559":12,"ZD292":7,"nicholastng010601":7,"-":77}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"Kailash201"},"content":"    public static final Prefix PREFIX_GROUPTAG \u003d new Prefix(\"g/\");","lastModifiedDate":"2023-10-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"a/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":15,"author":{"gitId":"Kailash201"},"content":"    public static final Prefix PREFIX_FREETIME \u003d new Prefix(\"t/\");","lastModifiedDate":"2023-10-21"},{"lineNumber":16,"author":{"gitId":"Kailash201"},"content":"    public static final Prefix PREFIX_ENDINTERVAL \u003d new Prefix(\";\");","lastModifiedDate":"2023-10-21"},{"lineNumber":17,"author":{"gitId":"Kailash201"},"content":"    public static final Prefix PREFIX_TOFRO \u003d new Prefix(\"-\");","lastModifiedDate":"2023-10-21"},{"lineNumber":18,"author":{"gitId":"coderhuang559"},"content":"    public static final Prefix PREFIX_GROUPREMARK \u003d new Prefix(\"r/\");","lastModifiedDate":"2023-10-20"},{"lineNumber":19,"author":{"gitId":"ZD292"},"content":"    public static final Prefix PREFIX_DURATION \u003d new Prefix(\"d/\");","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"Kailash201":4,"coderhuang559":1,"ZD292":2,"-":15}},{"path":"src/main/java/seedu/address/logic/parser/CreateGroupParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nicholastng010601"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-03"},{"lineNumber":2,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":3,"author":{"gitId":"Kailash201"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-06"},{"lineNumber":4,"author":{"gitId":"Kailash201"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GROUPTAG;","lastModifiedDate":"2023-10-06"},{"lineNumber":5,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":6,"author":{"gitId":"nicholastng010601"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-10-03"},{"lineNumber":7,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":8,"author":{"gitId":"Kailash201"},"content":"import seedu.address.logic.commands.CreateGroupCommand;","lastModifiedDate":"2023-10-06"},{"lineNumber":9,"author":{"gitId":"Kailash201"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-06"},{"lineNumber":10,"author":{"gitId":"ZD292"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2023-10-10"},{"lineNumber":11,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":12,"author":{"gitId":"Kailash201"},"content":"/**","lastModifiedDate":"2023-10-06"},{"lineNumber":13,"author":{"gitId":"Kailash201"},"content":" * Parses input arguments and creates a new newCommand object","lastModifiedDate":"2023-10-06"},{"lineNumber":14,"author":{"gitId":"Kailash201"},"content":" */","lastModifiedDate":"2023-10-06"},{"lineNumber":15,"author":{"gitId":"nicholastng010601"},"content":"public class CreateGroupParser implements Parser\u003cCreateGroupCommand\u003e {","lastModifiedDate":"2023-10-03"},{"lineNumber":16,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":17,"author":{"gitId":"nicholastng010601"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":18,"author":{"gitId":"nicholastng010601"},"content":"     * Parses the given {@code String} of arguments in the context of the CreateGroupCommand","lastModifiedDate":"2023-10-03"},{"lineNumber":19,"author":{"gitId":"nicholastng010601"},"content":"     * and returns a CreateGroupCommand object for execution.","lastModifiedDate":"2023-10-03"},{"lineNumber":20,"author":{"gitId":"nicholastng010601"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-03"},{"lineNumber":21,"author":{"gitId":"nicholastng010601"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":22,"author":{"gitId":"nicholastng010601"},"content":"    // uses name prefix for now","lastModifiedDate":"2023-10-03"},{"lineNumber":23,"author":{"gitId":"nicholastng010601"},"content":"    @Override","lastModifiedDate":"2023-10-03"},{"lineNumber":24,"author":{"gitId":"nicholastng010601"},"content":"    public CreateGroupCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-03"},{"lineNumber":25,"author":{"gitId":"nicholastng010601"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-10-03"},{"lineNumber":26,"author":{"gitId":"nicholastng010601"},"content":"                // create a group name prefix? or use name","lastModifiedDate":"2023-10-03"},{"lineNumber":27,"author":{"gitId":"nicholastng010601"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_GROUPTAG);","lastModifiedDate":"2023-10-03"},{"lineNumber":28,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":29,"author":{"gitId":"nicholastng010601"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_GROUPTAG)","lastModifiedDate":"2023-10-03"},{"lineNumber":30,"author":{"gitId":"nicholastng010601"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-10-03"},{"lineNumber":31,"author":{"gitId":"nicholastng010601"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, CreateGroupCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-03"},{"lineNumber":32,"author":{"gitId":"nicholastng010601"},"content":"        }","lastModifiedDate":"2023-10-03"},{"lineNumber":33,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":34,"author":{"gitId":"nicholastng010601"},"content":"        String groupName \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_GROUPTAG).get()).toString();","lastModifiedDate":"2023-10-03"},{"lineNumber":35,"author":{"gitId":"nicholastng010601"},"content":"        Group group \u003d new Group(groupName);","lastModifiedDate":"2023-10-03"},{"lineNumber":36,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":37,"author":{"gitId":"nicholastng010601"},"content":"        return new CreateGroupCommand(group);","lastModifiedDate":"2023-10-03"},{"lineNumber":38,"author":{"gitId":"nicholastng010601"},"content":"    }","lastModifiedDate":"2023-10-03"},{"lineNumber":39,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":40,"author":{"gitId":"nicholastng010601"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":41,"author":{"gitId":"nicholastng010601"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2023-10-03"},{"lineNumber":42,"author":{"gitId":"nicholastng010601"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2023-10-03"},{"lineNumber":43,"author":{"gitId":"nicholastng010601"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":44,"author":{"gitId":"nicholastng010601"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-10-03"},{"lineNumber":45,"author":{"gitId":"nicholastng010601"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-10-03"},{"lineNumber":46,"author":{"gitId":"nicholastng010601"},"content":"    }","lastModifiedDate":"2023-10-03"},{"lineNumber":47,"author":{"gitId":"nicholastng010601"},"content":"}","lastModifiedDate":"2023-10-03"}],"authorContributionMap":{"Kailash201":7,"ZD292":1,"nicholastng010601":39}},{"path":"src/main/java/seedu/address/logic/parser/DeleteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"lerxuann"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GROUPTAG;","lastModifiedDate":"2023-10-19"},{"lineNumber":5,"author":{"gitId":"nicholastng010601"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"lerxuann"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-10-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"lerxuann"},"content":"import seedu.address.logic.commands.DeleteGroupCommand;","lastModifiedDate":"2023-10-19"},{"lineNumber":11,"author":{"gitId":"lerxuann"},"content":"import seedu.address.logic.commands.DeletePersonCommand;","lastModifiedDate":"2023-10-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new DeleteCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class DeleteCommandParser implements Parser\u003cDeleteCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public DeleteCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"nicholastng010601"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"nicholastng010601"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"lerxuann"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-19"},{"lineNumber":29,"author":{"gitId":"nicholastng010601"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"nicholastng010601"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"lerxuann"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_GROUPTAG);","lastModifiedDate":"2023-10-19"},{"lineNumber":33,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"nicholastng010601"},"content":"        try {","lastModifiedDate":"2023-10-25"},{"lineNumber":35,"author":{"gitId":"nicholastng010601"},"content":"            argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_GROUPTAG);","lastModifiedDate":"2023-10-25"},{"lineNumber":36,"author":{"gitId":"nicholastng010601"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2023-10-25"},{"lineNumber":37,"author":{"gitId":"nicholastng010601"},"content":"            throw new ParseException(String.format(DeleteCommand.MESSAGE_TWO_PARAMETERS, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-25"},{"lineNumber":38,"author":{"gitId":"nicholastng010601"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"nicholastng010601"},"content":"        // check if both n/ or g/ are present","lastModifiedDate":"2023-10-25"},{"lineNumber":41,"author":{"gitId":"nicholastng010601"},"content":"        if ((arePrefixesPresent(argMultimap, PREFIX_NAME) \u0026\u0026 arePrefixesPresent(argMultimap, PREFIX_GROUPTAG))","lastModifiedDate":"2023-10-25"},{"lineNumber":42,"author":{"gitId":"nicholastng010601"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-10-25"},{"lineNumber":43,"author":{"gitId":"nicholastng010601"},"content":"            throw new ParseException(String.format(DeleteCommand.MESSAGE_TWO_PARAMETERS, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-25"},{"lineNumber":44,"author":{"gitId":"nicholastng010601"},"content":"        } else if (arePrefixesPresent(argMultimap, PREFIX_NAME)) {","lastModifiedDate":"2023-10-25"},{"lineNumber":45,"author":{"gitId":"lerxuann"},"content":"            String personName \u003d argMultimap.getValue(PREFIX_NAME).get();","lastModifiedDate":"2023-10-19"},{"lineNumber":46,"author":{"gitId":"lerxuann"},"content":"            return new DeletePersonCommand(personName);","lastModifiedDate":"2023-10-19"},{"lineNumber":47,"author":{"gitId":"nicholastng010601"},"content":"        } else if (arePrefixesPresent(argMultimap, PREFIX_GROUPTAG)) {","lastModifiedDate":"2023-10-25"},{"lineNumber":48,"author":{"gitId":"lerxuann"},"content":"            String groupName \u003d argMultimap.getValue(PREFIX_GROUPTAG).get();","lastModifiedDate":"2023-10-19"},{"lineNumber":49,"author":{"gitId":"lerxuann"},"content":"            return new DeleteGroupCommand(groupName);","lastModifiedDate":"2023-10-19"},{"lineNumber":50,"author":{"gitId":"nicholastng010601"},"content":"        } else {","lastModifiedDate":"2023-10-25"},{"lineNumber":51,"author":{"gitId":"nicholastng010601"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":55,"author":{"gitId":"nicholastng010601"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-10-13"},{"lineNumber":56,"author":{"gitId":"nicholastng010601"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-10-13"},{"lineNumber":57,"author":{"gitId":"nicholastng010601"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"lerxuann":10,"nicholastng010601":24,"-":24}},{"path":"src/main/java/seedu/address/logic/parser/DeleteTimeCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nicholastng010601"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-24"},{"lineNumber":2,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":3,"author":{"gitId":"nicholastng010601"},"content":"import seedu.address.logic.commands.*;","lastModifiedDate":"2023-10-24"},{"lineNumber":4,"author":{"gitId":"nicholastng010601"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-24"},{"lineNumber":5,"author":{"gitId":"nicholastng010601"},"content":"import seedu.address.model.TimeInterval;","lastModifiedDate":"2023-10-24"},{"lineNumber":6,"author":{"gitId":"nicholastng010601"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2023-10-24"},{"lineNumber":7,"author":{"gitId":"nicholastng010601"},"content":"import seedu.address.model.group.GroupList;","lastModifiedDate":"2023-10-24"},{"lineNumber":8,"author":{"gitId":"nicholastng010601"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-10-24"},{"lineNumber":9,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":10,"author":{"gitId":"nicholastng010601"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-24"},{"lineNumber":11,"author":{"gitId":"nicholastng010601"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-10-24"},{"lineNumber":12,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":13,"author":{"gitId":"nicholastng010601"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-24"},{"lineNumber":14,"author":{"gitId":"nicholastng010601"},"content":"import static seedu.address.logic.parser.CliSyntax.*;","lastModifiedDate":"2023-10-24"},{"lineNumber":15,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":16,"author":{"gitId":"nicholastng010601"},"content":"public class DeleteTimeCommandParser implements Parser\u003cDeleteTimeCommand\u003e{","lastModifiedDate":"2023-10-24"},{"lineNumber":17,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":18,"author":{"gitId":"nicholastng010601"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":19,"author":{"gitId":"nicholastng010601"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2023-10-24"},{"lineNumber":20,"author":{"gitId":"nicholastng010601"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2023-10-24"},{"lineNumber":21,"author":{"gitId":"nicholastng010601"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-24"},{"lineNumber":22,"author":{"gitId":"nicholastng010601"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":23,"author":{"gitId":"nicholastng010601"},"content":"    public DeleteTimeCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-24"},{"lineNumber":24,"author":{"gitId":"nicholastng010601"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-10-24"},{"lineNumber":25,"author":{"gitId":"nicholastng010601"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_GROUPTAG, PREFIX_FREETIME, PREFIX_ENDINTERVAL);","lastModifiedDate":"2023-10-24"},{"lineNumber":26,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":27,"author":{"gitId":"nicholastng010601"},"content":"        //find a way to separate error msg when \";\" is missing","lastModifiedDate":"2023-10-24"},{"lineNumber":28,"author":{"gitId":"nicholastng010601"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_FREETIME)","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"nicholastng010601"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-10-24"},{"lineNumber":30,"author":{"gitId":"nicholastng010601"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteTimeCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-24"},{"lineNumber":31,"author":{"gitId":"nicholastng010601"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":32,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":33,"author":{"gitId":"nicholastng010601"},"content":"        try {","lastModifiedDate":"2023-10-25"},{"lineNumber":34,"author":{"gitId":"nicholastng010601"},"content":"            argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_GROUPTAG);","lastModifiedDate":"2023-10-25"},{"lineNumber":35,"author":{"gitId":"nicholastng010601"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2023-10-25"},{"lineNumber":36,"author":{"gitId":"nicholastng010601"},"content":"            throw new ParseException(String.format(DeleteCommand.MESSAGE_TWO_PARAMETERS, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-25"},{"lineNumber":37,"author":{"gitId":"nicholastng010601"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":38,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":39,"author":{"gitId":"nicholastng010601"},"content":"        TimeInterval firstInterval \u003d ParserUtil.parseEachInterval(argMultimap.getValue(PREFIX_FREETIME).get());","lastModifiedDate":"2023-10-24"},{"lineNumber":40,"author":{"gitId":"nicholastng010601"},"content":"        ArrayList\u003cTimeInterval\u003e timeInterval \u003d ParserUtil.parseInterval(argMultimap.getAllValues(PREFIX_ENDINTERVAL));","lastModifiedDate":"2023-10-24"},{"lineNumber":41,"author":{"gitId":"nicholastng010601"},"content":"        timeInterval.add(0, firstInterval);","lastModifiedDate":"2023-10-24"},{"lineNumber":42,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":43,"author":{"gitId":"nicholastng010601"},"content":"        if ((arePrefixesPresent(argMultimap, PREFIX_NAME) \u0026\u0026 arePrefixesPresent(argMultimap, PREFIX_GROUPTAG))","lastModifiedDate":"2023-10-25"},{"lineNumber":44,"author":{"gitId":"nicholastng010601"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-10-25"},{"lineNumber":45,"author":{"gitId":"nicholastng010601"},"content":"            throw new ParseException(String.format(DeleteCommand.MESSAGE_TWO_PARAMETERS, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-25"},{"lineNumber":46,"author":{"gitId":"nicholastng010601"},"content":"        } else if (arePrefixesPresent(argMultimap, PREFIX_NAME)) {","lastModifiedDate":"2023-10-25"},{"lineNumber":47,"author":{"gitId":"nicholastng010601"},"content":"            Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2023-10-25"},{"lineNumber":48,"author":{"gitId":"nicholastng010601"},"content":"            return new DeletePersonTimeCommand(name, timeInterval);","lastModifiedDate":"2023-10-25"},{"lineNumber":49,"author":{"gitId":"nicholastng010601"},"content":"        } else if (arePrefixesPresent(argMultimap, PREFIX_GROUPTAG)) {","lastModifiedDate":"2023-10-25"},{"lineNumber":50,"author":{"gitId":"nicholastng010601"},"content":"            Group group \u003d ParserUtil.parseGroup(argMultimap.getValue(PREFIX_GROUPTAG).get());","lastModifiedDate":"2023-10-25"},{"lineNumber":51,"author":{"gitId":"nicholastng010601"},"content":"            return new DeleteGroupTimeCommand(group, timeInterval);","lastModifiedDate":"2023-10-25"},{"lineNumber":52,"author":{"gitId":"nicholastng010601"},"content":"        } else {","lastModifiedDate":"2023-10-25"},{"lineNumber":53,"author":{"gitId":"nicholastng010601"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-25"},{"lineNumber":54,"author":{"gitId":"nicholastng010601"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":55,"author":{"gitId":"nicholastng010601"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":56,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":57,"author":{"gitId":"nicholastng010601"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-10-24"},{"lineNumber":58,"author":{"gitId":"nicholastng010601"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-10-24"},{"lineNumber":59,"author":{"gitId":"nicholastng010601"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":60,"author":{"gitId":"nicholastng010601"},"content":"}","lastModifiedDate":"2023-10-24"}],"authorContributionMap":{"nicholastng010601":60}},{"path":"src/main/java/seedu/address/logic/parser/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-01-26"},{"lineNumber":9,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class EditCommandParser implements Parser\u003cEditCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public EditCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":35,"author":{"gitId":"Kailash201"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS);","lastModifiedDate":"2023-10-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2017-06-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS);","lastModifiedDate":"2023-07-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-01-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_ADDRESS).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setAddress(ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":61,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (!editPersonDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-03-11"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return new EditCommand(index, editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2017-03-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2017-01-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2017-03-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2017-01-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2017-01-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2017-01-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2017-01-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"Kailash201":3,"-":82}},{"path":"src/main/java/seedu/address/logic/parser/FindCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"lerxuann"},"content":"import static seedu.address.logic.commands.FindCommand.MESSAGE_EMPTY_NAME;","lastModifiedDate":"2023-10-25"},{"lineNumber":5,"author":{"gitId":"lerxuann"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GROUPTAG;","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"lerxuann"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-01-26"},{"lineNumber":9,"author":{"gitId":"lerxuann"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"lerxuann"},"content":"import seedu.address.logic.commands.FindPersonCommand;","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"lerxuann"},"content":"import seedu.address.logic.commands.FindGroupCommand;","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class FindCommandParser implements Parser\u003cFindCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the FindCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * and returns a FindCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public FindCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":28,"author":{"gitId":"lerxuann"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"lerxuann"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_GROUPTAG);","lastModifiedDate":"2023-10-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"lerxuann"},"content":"        // check if either n/ or g/ are present","lastModifiedDate":"2023-10-25"},{"lineNumber":32,"author":{"gitId":"lerxuann"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME)","lastModifiedDate":"2023-10-25"},{"lineNumber":33,"author":{"gitId":"lerxuann"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-10-25"},{"lineNumber":34,"author":{"gitId":"lerxuann"},"content":"            if (!arePrefixesPresent(argMultimap, PREFIX_GROUPTAG)) {","lastModifiedDate":"2023-10-25"},{"lineNumber":35,"author":{"gitId":"lerxuann"},"content":"                throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-10-25"},{"lineNumber":36,"author":{"gitId":"lerxuann"},"content":"                        FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-25"},{"lineNumber":37,"author":{"gitId":"lerxuann"},"content":"            }","lastModifiedDate":"2023-10-25"},{"lineNumber":38,"author":{"gitId":"lerxuann"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":39,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":40,"author":{"gitId":"lerxuann"},"content":"        // if n/ is present","lastModifiedDate":"2023-10-25"},{"lineNumber":41,"author":{"gitId":"lerxuann"},"content":"        if (arePrefixesPresent(argMultimap, PREFIX_NAME)) {","lastModifiedDate":"2023-10-25"},{"lineNumber":42,"author":{"gitId":"lerxuann"},"content":"            String personName \u003d argMultimap.getValue(PREFIX_NAME).get();","lastModifiedDate":"2023-10-25"},{"lineNumber":43,"author":{"gitId":"lerxuann"},"content":"            // check if g/ is present","lastModifiedDate":"2023-10-25"},{"lineNumber":44,"author":{"gitId":"lerxuann"},"content":"            if (arePrefixesPresent(argMultimap, PREFIX_GROUPTAG)) { // g/ present","lastModifiedDate":"2023-10-25"},{"lineNumber":45,"author":{"gitId":"lerxuann"},"content":"                throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-10-25"},{"lineNumber":46,"author":{"gitId":"lerxuann"},"content":"                        FindCommand.MESSAGE_TWO_PARAMETERS));","lastModifiedDate":"2023-10-25"},{"lineNumber":47,"author":{"gitId":"lerxuann"},"content":"            } else if (personName.trim().isEmpty()) {","lastModifiedDate":"2023-10-25"},{"lineNumber":48,"author":{"gitId":"lerxuann"},"content":"                throw new ParseException(String.format(MESSAGE_EMPTY_NAME));","lastModifiedDate":"2023-10-25"},{"lineNumber":49,"author":{"gitId":"lerxuann"},"content":"            } else {","lastModifiedDate":"2023-10-25"},{"lineNumber":50,"author":{"gitId":"lerxuann"},"content":"                String[] nameKeywords \u003d personName.split(\"\\\\s+\");","lastModifiedDate":"2023-10-25"},{"lineNumber":51,"author":{"gitId":"lerxuann"},"content":"                return new FindPersonCommand(new NameContainsKeywordsPredicate(Arrays.asList(nameKeywords)));","lastModifiedDate":"2023-10-25"},{"lineNumber":52,"author":{"gitId":"lerxuann"},"content":"            }","lastModifiedDate":"2023-10-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":55,"author":{"gitId":"lerxuann"},"content":"        // n/ not present, g/ should be present","lastModifiedDate":"2023-10-25"},{"lineNumber":56,"author":{"gitId":"lerxuann"},"content":"        String groupName \u003d argMultimap.getValue(PREFIX_GROUPTAG).get();","lastModifiedDate":"2023-10-25"},{"lineNumber":57,"author":{"gitId":"lerxuann"},"content":"        return new FindGroupCommand(groupName);","lastModifiedDate":"2023-10-25"},{"lineNumber":58,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":59,"author":{"gitId":"lerxuann"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":61,"author":{"gitId":"lerxuann"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-10-25"},{"lineNumber":62,"author":{"gitId":"lerxuann"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-10-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"lerxuann":37,"-":28}},{"path":"src/main/java/seedu/address/logic/parser/FindFreeTimeParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ZD292"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-25"},{"lineNumber":2,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":3,"author":{"gitId":"ZD292"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-25"},{"lineNumber":4,"author":{"gitId":"ZD292"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GROUPTAG;","lastModifiedDate":"2023-10-25"},{"lineNumber":5,"author":{"gitId":"ZD292"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DURATION;","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"ZD292"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"ZD292"},"content":"import seedu.address.logic.commands.FindFreeTimeCommand;","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"ZD292"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"ZD292"},"content":"import seedu.address.model.Duration;","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"ZD292"},"content":"/**","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"ZD292"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"ZD292"},"content":" */","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"ZD292"},"content":"public class FindFreeTimeParser implements Parser\u003cFindFreeTimeCommand\u003e {","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":18,"author":{"gitId":"ZD292"},"content":"\t/**","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"ZD292"},"content":"\t * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"ZD292"},"content":"\t * and returns an AddCommand object for execution.","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"ZD292"},"content":"\t *","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"ZD292"},"content":"\t * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"ZD292"},"content":"\t */","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"ZD292"},"content":"\tpublic FindFreeTimeCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"ZD292"},"content":"\t\tString trimmedArgs \u003d args.trim();","lastModifiedDate":"2023-10-25"},{"lineNumber":27,"author":{"gitId":"ZD292"},"content":"\t\tif (trimmedArgs.isEmpty()) {","lastModifiedDate":"2023-10-25"},{"lineNumber":28,"author":{"gitId":"ZD292"},"content":"\t\t\tthrow new ParseException(","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"ZD292"},"content":"\t\t\t\t\tString.format(MESSAGE_INVALID_COMMAND_FORMAT, FindFreeTimeCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-25"},{"lineNumber":30,"author":{"gitId":"ZD292"},"content":"\t\t}","lastModifiedDate":"2023-10-25"},{"lineNumber":31,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":32,"author":{"gitId":"ZD292"},"content":"//\t\treturn new FindCommand(new NameContainsKeywordsPredicate(Arrays.asList(nameKeywords)));","lastModifiedDate":"2023-10-25"},{"lineNumber":33,"author":{"gitId":"ZD292"},"content":"\t\tArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-10-25"},{"lineNumber":34,"author":{"gitId":"ZD292"},"content":"\t\t\t\tArgumentTokenizer.tokenize(args, PREFIX_DURATION, PREFIX_GROUPTAG);","lastModifiedDate":"2023-10-25"},{"lineNumber":35,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":36,"author":{"gitId":"ZD292"},"content":"\t\tif (!arePrefixesPresent(argMultimap, PREFIX_DURATION, PREFIX_GROUPTAG) || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-10-25"},{"lineNumber":37,"author":{"gitId":"ZD292"},"content":"\t\t\tthrow new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindFreeTimeCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-25"},{"lineNumber":38,"author":{"gitId":"ZD292"},"content":"\t\t}","lastModifiedDate":"2023-10-25"},{"lineNumber":39,"author":{"gitId":"ZD292"},"content":"\t\tString groupName \u003d argMultimap.getValue(PREFIX_GROUPTAG).get();","lastModifiedDate":"2023-10-25"},{"lineNumber":40,"author":{"gitId":"ZD292"},"content":"\t\tString durationName \u003d argMultimap.getValue(PREFIX_DURATION).get();","lastModifiedDate":"2023-10-25"},{"lineNumber":41,"author":{"gitId":"ZD292"},"content":"\t\tint duration \u003d 0;","lastModifiedDate":"2023-10-25"},{"lineNumber":42,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":43,"author":{"gitId":"ZD292"},"content":"\t\ttry {","lastModifiedDate":"2023-10-25"},{"lineNumber":44,"author":{"gitId":"ZD292"},"content":"\t\t\tduration \u003d Integer.parseInt(durationName);","lastModifiedDate":"2023-10-25"},{"lineNumber":45,"author":{"gitId":"ZD292"},"content":"\t\t\tif (duration \u003d\u003d 0) {","lastModifiedDate":"2023-10-25"},{"lineNumber":46,"author":{"gitId":"ZD292"},"content":"\t\t\t\tthrow new IllegalArgumentException(\"You can\u0027t have a meeting without specifying a duration\");","lastModifiedDate":"2023-10-25"},{"lineNumber":47,"author":{"gitId":"ZD292"},"content":"\t\t\t}","lastModifiedDate":"2023-10-25"},{"lineNumber":48,"author":{"gitId":"ZD292"},"content":"\t\t\tif (duration \u003c 0) {","lastModifiedDate":"2023-10-25"},{"lineNumber":49,"author":{"gitId":"ZD292"},"content":"\t\t\t\tthrow new IllegalArgumentException(\"Duration specified is less than 0\");","lastModifiedDate":"2023-10-25"},{"lineNumber":50,"author":{"gitId":"ZD292"},"content":"\t\t\t}","lastModifiedDate":"2023-10-25"},{"lineNumber":51,"author":{"gitId":"ZD292"},"content":"\t\t\t// there are 10079 mins from mon 0000 to sun 1159","lastModifiedDate":"2023-10-25"},{"lineNumber":52,"author":{"gitId":"ZD292"},"content":"\t\t\tif (duration \u003e 10079) {","lastModifiedDate":"2023-10-25"},{"lineNumber":53,"author":{"gitId":"ZD292"},"content":"\t\t\t\tthrow new IllegalArgumentException(String.format(\"The value you entered, %d is beyond the time you have in a week\", duration));","lastModifiedDate":"2023-10-25"},{"lineNumber":54,"author":{"gitId":"ZD292"},"content":"\t\t\t}","lastModifiedDate":"2023-10-25"},{"lineNumber":55,"author":{"gitId":"ZD292"},"content":"\t\t} catch (NumberFormatException e) {","lastModifiedDate":"2023-10-25"},{"lineNumber":56,"author":{"gitId":"ZD292"},"content":"\t\t\tthrow new ParseException(","lastModifiedDate":"2023-10-25"},{"lineNumber":57,"author":{"gitId":"ZD292"},"content":"\t\t\t\t\tString.format(MESSAGE_INVALID_COMMAND_FORMAT, FindFreeTimeCommand.MESSAGE_DURATION_USAGE));","lastModifiedDate":"2023-10-25"},{"lineNumber":58,"author":{"gitId":"ZD292"},"content":"\t\t} catch (IllegalArgumentException i) {","lastModifiedDate":"2023-10-25"},{"lineNumber":59,"author":{"gitId":"ZD292"},"content":"\t\t\tthrow new ParseException(","lastModifiedDate":"2023-10-25"},{"lineNumber":60,"author":{"gitId":"ZD292"},"content":"\t\t\t\t\tString.format(MESSAGE_INVALID_COMMAND_FORMAT, i.getMessage()));","lastModifiedDate":"2023-10-25"},{"lineNumber":61,"author":{"gitId":"ZD292"},"content":"\t\t}","lastModifiedDate":"2023-10-25"},{"lineNumber":62,"author":{"gitId":"ZD292"},"content":"\t\t// 0 is duration placeholder, should not enter this line if duration is 0","lastModifiedDate":"2023-10-25"},{"lineNumber":63,"author":{"gitId":"ZD292"},"content":"\t\treturn new FindFreeTimeCommand(groupName, new Duration(duration));","lastModifiedDate":"2023-10-25"},{"lineNumber":64,"author":{"gitId":"ZD292"},"content":"\t}","lastModifiedDate":"2023-10-25"},{"lineNumber":65,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":66,"author":{"gitId":"ZD292"},"content":"\t/**","lastModifiedDate":"2023-10-25"},{"lineNumber":67,"author":{"gitId":"ZD292"},"content":"\t * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2023-10-25"},{"lineNumber":68,"author":{"gitId":"ZD292"},"content":"\t * {@code ArgumentMultimap}.","lastModifiedDate":"2023-10-25"},{"lineNumber":69,"author":{"gitId":"ZD292"},"content":"\t */","lastModifiedDate":"2023-10-25"},{"lineNumber":70,"author":{"gitId":"ZD292"},"content":"\tprivate static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-10-25"},{"lineNumber":71,"author":{"gitId":"ZD292"},"content":"\t\treturn Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-10-25"},{"lineNumber":72,"author":{"gitId":"ZD292"},"content":"\t}","lastModifiedDate":"2023-10-25"},{"lineNumber":73,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":74,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":75,"author":{"gitId":"ZD292"},"content":"}","lastModifiedDate":"2023-10-25"}],"authorContributionMap":{"ZD292":75}},{"path":"src/main/java/seedu/address/logic/parser/GroupPersonParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ZD292"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-08"},{"lineNumber":2,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":3,"author":{"gitId":"ZD292"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-08"},{"lineNumber":4,"author":{"gitId":"ZD292"},"content":"import static seedu.address.logic.parser.CliSyntax.*;","lastModifiedDate":"2023-10-08"},{"lineNumber":5,"author":{"gitId":"ZD292"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GROUPTAG;","lastModifiedDate":"2023-10-08"},{"lineNumber":6,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":7,"author":{"gitId":"ZD292"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-10-08"},{"lineNumber":8,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":9,"author":{"gitId":"ZD292"},"content":"import seedu.address.logic.commands.GroupPersonCommand;","lastModifiedDate":"2023-10-10"},{"lineNumber":10,"author":{"gitId":"ZD292"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-08"},{"lineNumber":11,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":12,"author":{"gitId":"ZD292"},"content":"/**","lastModifiedDate":"2023-10-08"},{"lineNumber":13,"author":{"gitId":"ZD292"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2023-10-08"},{"lineNumber":14,"author":{"gitId":"ZD292"},"content":" */","lastModifiedDate":"2023-10-08"},{"lineNumber":15,"author":{"gitId":"ZD292"},"content":"public class GroupPersonParser implements Parser\u003cGroupPersonCommand\u003e {","lastModifiedDate":"2023-10-10"},{"lineNumber":16,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":17,"author":{"gitId":"ZD292"},"content":"    /**","lastModifiedDate":"2023-10-08"},{"lineNumber":18,"author":{"gitId":"ZD292"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2023-10-08"},{"lineNumber":19,"author":{"gitId":"ZD292"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2023-10-08"},{"lineNumber":20,"author":{"gitId":"Kailash201"},"content":"     *","lastModifiedDate":"2023-10-22"},{"lineNumber":21,"author":{"gitId":"ZD292"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-08"},{"lineNumber":22,"author":{"gitId":"ZD292"},"content":"     */","lastModifiedDate":"2023-10-08"},{"lineNumber":23,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":24,"author":{"gitId":"ZD292"},"content":"    public GroupPersonCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-10"},{"lineNumber":25,"author":{"gitId":"ZD292"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2023-10-10"},{"lineNumber":26,"author":{"gitId":"ZD292"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2023-10-10"},{"lineNumber":27,"author":{"gitId":"ZD292"},"content":"            throw new ParseException(","lastModifiedDate":"2023-10-10"},{"lineNumber":28,"author":{"gitId":"ZD292"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, GroupPersonCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-10"},{"lineNumber":29,"author":{"gitId":"ZD292"},"content":"        }","lastModifiedDate":"2023-10-10"},{"lineNumber":30,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":31,"author":{"gitId":"ZD292"},"content":"//\t\treturn new FindCommand(new NameContainsKeywordsPredicate(Arrays.asList(nameKeywords)));","lastModifiedDate":"2023-10-10"},{"lineNumber":32,"author":{"gitId":"ZD292"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-10-08"},{"lineNumber":33,"author":{"gitId":"ZD292"},"content":"            ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_GROUPTAG);","lastModifiedDate":"2023-10-08"},{"lineNumber":34,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":35,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":36,"author":{"gitId":"ZD292"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_GROUPTAG)","lastModifiedDate":"2023-10-08"},{"lineNumber":37,"author":{"gitId":"ZD292"},"content":"            || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-10-08"},{"lineNumber":38,"author":{"gitId":"ZD292"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, GroupPersonCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-10"},{"lineNumber":39,"author":{"gitId":"ZD292"},"content":"        }","lastModifiedDate":"2023-10-08"},{"lineNumber":40,"author":{"gitId":"ZD292"},"content":"//\t\targMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_GROUPTAG);","lastModifiedDate":"2023-10-10"},{"lineNumber":41,"author":{"gitId":"ZD292"},"content":"//\t\tName name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2023-10-10"},{"lineNumber":42,"author":{"gitId":"ZD292"},"content":"        String personName \u003d argMultimap.getValue(PREFIX_NAME).get();","lastModifiedDate":"2023-10-10"},{"lineNumber":43,"author":{"gitId":"ZD292"},"content":"        String groupName \u003d argMultimap.getValue(PREFIX_GROUPTAG).get();","lastModifiedDate":"2023-10-10"},{"lineNumber":44,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":45,"author":{"gitId":"ZD292"},"content":"        return new GroupPersonCommand(","lastModifiedDate":"2023-10-10"},{"lineNumber":46,"author":{"gitId":"ZD292"},"content":"            personName, groupName);","lastModifiedDate":"2023-10-10"},{"lineNumber":47,"author":{"gitId":"ZD292"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":48,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":49,"author":{"gitId":"ZD292"},"content":"    /**","lastModifiedDate":"2023-10-08"},{"lineNumber":50,"author":{"gitId":"ZD292"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2023-10-08"},{"lineNumber":51,"author":{"gitId":"ZD292"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2023-10-08"},{"lineNumber":52,"author":{"gitId":"ZD292"},"content":"     */","lastModifiedDate":"2023-10-08"},{"lineNumber":53,"author":{"gitId":"ZD292"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-10-08"},{"lineNumber":54,"author":{"gitId":"ZD292"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-10-08"},{"lineNumber":55,"author":{"gitId":"ZD292"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":56,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":57,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":58,"author":{"gitId":"ZD292"},"content":"}","lastModifiedDate":"2023-10-08"}],"authorContributionMap":{"Kailash201":1,"ZD292":57}},{"path":"src/main/java/seedu/address/logic/parser/GroupRemarkCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"coderhuang559"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"coderhuang559"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":3,"author":{"gitId":"coderhuang559"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-20"},{"lineNumber":4,"author":{"gitId":"coderhuang559"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-20"},{"lineNumber":5,"author":{"gitId":"coderhuang559"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GROUPREMARK;","lastModifiedDate":"2023-10-20"},{"lineNumber":6,"author":{"gitId":"coderhuang559"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GROUPTAG;","lastModifiedDate":"2023-10-20"},{"lineNumber":7,"author":{"gitId":"coderhuang559"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":8,"author":{"gitId":"coderhuang559"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-10-20"},{"lineNumber":9,"author":{"gitId":"coderhuang559"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-20"},{"lineNumber":10,"author":{"gitId":"coderhuang559"},"content":"import seedu.address.logic.commands.CreateGroupCommand;","lastModifiedDate":"2023-10-20"},{"lineNumber":11,"author":{"gitId":"coderhuang559"},"content":"import seedu.address.logic.commands.GroupPersonCommand;","lastModifiedDate":"2023-10-20"},{"lineNumber":12,"author":{"gitId":"coderhuang559"},"content":"import seedu.address.logic.commands.GroupRemarkCommand;","lastModifiedDate":"2023-10-20"},{"lineNumber":13,"author":{"gitId":"coderhuang559"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-20"},{"lineNumber":14,"author":{"gitId":"coderhuang559"},"content":"import seedu.address.model.group.GroupRemark;","lastModifiedDate":"2023-10-20"},{"lineNumber":15,"author":{"gitId":"coderhuang559"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":16,"author":{"gitId":"coderhuang559"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-10-20"},{"lineNumber":17,"author":{"gitId":"coderhuang559"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":18,"author":{"gitId":"coderhuang559"},"content":"/**","lastModifiedDate":"2023-10-20"},{"lineNumber":19,"author":{"gitId":"coderhuang559"},"content":" * Parses input arguments and creates a new {@code RemarkCommand} object","lastModifiedDate":"2023-10-20"},{"lineNumber":20,"author":{"gitId":"coderhuang559"},"content":" */","lastModifiedDate":"2023-10-20"},{"lineNumber":21,"author":{"gitId":"coderhuang559"},"content":"public class GroupRemarkCommandParser implements Parser\u003cGroupRemarkCommand\u003e {","lastModifiedDate":"2023-10-20"},{"lineNumber":22,"author":{"gitId":"coderhuang559"},"content":"    /**","lastModifiedDate":"2023-10-20"},{"lineNumber":23,"author":{"gitId":"coderhuang559"},"content":"     * Parses the given {@code String} of arguments in the context of the {@code RemarkCommand}","lastModifiedDate":"2023-10-20"},{"lineNumber":24,"author":{"gitId":"coderhuang559"},"content":"     * and returns a {@code RemarkCommand} object for execution.","lastModifiedDate":"2023-10-20"},{"lineNumber":25,"author":{"gitId":"coderhuang559"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-20"},{"lineNumber":26,"author":{"gitId":"coderhuang559"},"content":"     */","lastModifiedDate":"2023-10-20"},{"lineNumber":27,"author":{"gitId":"coderhuang559"},"content":"    public GroupRemarkCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-20"},{"lineNumber":28,"author":{"gitId":"coderhuang559"},"content":"        requireNonNull(args);","lastModifiedDate":"2023-10-20"},{"lineNumber":29,"author":{"gitId":"coderhuang559"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_GROUPTAG, PREFIX_GROUPREMARK);","lastModifiedDate":"2023-10-20"},{"lineNumber":30,"author":{"gitId":"coderhuang559"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":31,"author":{"gitId":"coderhuang559"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_GROUPTAG, PREFIX_GROUPREMARK)","lastModifiedDate":"2023-10-20"},{"lineNumber":32,"author":{"gitId":"coderhuang559"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-10-20"},{"lineNumber":33,"author":{"gitId":"coderhuang559"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, GroupRemarkCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-20"},{"lineNumber":34,"author":{"gitId":"coderhuang559"},"content":"        }","lastModifiedDate":"2023-10-20"},{"lineNumber":35,"author":{"gitId":"coderhuang559"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":36,"author":{"gitId":"coderhuang559"},"content":"        String groupName \u003d argMultimap.getValue(PREFIX_GROUPTAG).get();","lastModifiedDate":"2023-10-20"},{"lineNumber":37,"author":{"gitId":"coderhuang559"},"content":"        String groupRemark \u003d argMultimap.getValue(PREFIX_GROUPREMARK).orElse(\"\");","lastModifiedDate":"2023-10-20"},{"lineNumber":38,"author":{"gitId":"coderhuang559"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":39,"author":{"gitId":"coderhuang559"},"content":"        return new GroupRemarkCommand(groupName, new GroupRemark(groupRemark));","lastModifiedDate":"2023-10-20"},{"lineNumber":40,"author":{"gitId":"coderhuang559"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":41,"author":{"gitId":"coderhuang559"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":42,"author":{"gitId":"coderhuang559"},"content":"    /**","lastModifiedDate":"2023-10-20"},{"lineNumber":43,"author":{"gitId":"coderhuang559"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2023-10-20"},{"lineNumber":44,"author":{"gitId":"coderhuang559"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2023-10-20"},{"lineNumber":45,"author":{"gitId":"coderhuang559"},"content":"     */","lastModifiedDate":"2023-10-20"},{"lineNumber":46,"author":{"gitId":"coderhuang559"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-10-20"},{"lineNumber":47,"author":{"gitId":"coderhuang559"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-10-20"},{"lineNumber":48,"author":{"gitId":"coderhuang559"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":49,"author":{"gitId":"coderhuang559"},"content":"}","lastModifiedDate":"2023-10-20"}],"authorContributionMap":{"coderhuang559":49}},{"path":"src/main/java/seedu/address/logic/parser/ListTimeCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"coderhuang559"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-24"},{"lineNumber":2,"author":{"gitId":"coderhuang559"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":3,"author":{"gitId":"coderhuang559"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-24"},{"lineNumber":4,"author":{"gitId":"coderhuang559"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GROUPTAG;","lastModifiedDate":"2023-10-24"},{"lineNumber":5,"author":{"gitId":"coderhuang559"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-24"},{"lineNumber":6,"author":{"gitId":"coderhuang559"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":7,"author":{"gitId":"coderhuang559"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-10-24"},{"lineNumber":8,"author":{"gitId":"coderhuang559"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":9,"author":{"gitId":"coderhuang559"},"content":"import seedu.address.logic.commands.*;","lastModifiedDate":"2023-10-24"},{"lineNumber":10,"author":{"gitId":"coderhuang559"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-24"},{"lineNumber":11,"author":{"gitId":"coderhuang559"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"coderhuang559"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"coderhuang559"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":14,"author":{"gitId":"coderhuang559"},"content":"/**","lastModifiedDate":"2023-10-24"},{"lineNumber":15,"author":{"gitId":"coderhuang559"},"content":" * Parses input arguments and creates a new ListTimeCommand object","lastModifiedDate":"2023-10-24"},{"lineNumber":16,"author":{"gitId":"coderhuang559"},"content":" */","lastModifiedDate":"2023-10-24"},{"lineNumber":17,"author":{"gitId":"coderhuang559"},"content":"public class ListTimeCommandParser implements Parser\u003cListTimeCommand\u003e {","lastModifiedDate":"2023-10-24"},{"lineNumber":18,"author":{"gitId":"coderhuang559"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":19,"author":{"gitId":"coderhuang559"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":20,"author":{"gitId":"coderhuang559"},"content":"     * Parses the given {@code String} of arguments in the context of the ListTimeCommand","lastModifiedDate":"2023-10-24"},{"lineNumber":21,"author":{"gitId":"coderhuang559"},"content":"     * and returns a ListTimeCommand object for execution.","lastModifiedDate":"2023-10-24"},{"lineNumber":22,"author":{"gitId":"coderhuang559"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-24"},{"lineNumber":23,"author":{"gitId":"coderhuang559"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":24,"author":{"gitId":"coderhuang559"},"content":"    public ListTimeCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-24"},{"lineNumber":25,"author":{"gitId":"coderhuang559"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2023-10-24"},{"lineNumber":26,"author":{"gitId":"coderhuang559"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2023-10-24"},{"lineNumber":27,"author":{"gitId":"coderhuang559"},"content":"            throw new ParseException(","lastModifiedDate":"2023-10-24"},{"lineNumber":28,"author":{"gitId":"coderhuang559"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, ListTimeCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-24"},{"lineNumber":29,"author":{"gitId":"coderhuang559"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":30,"author":{"gitId":"coderhuang559"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":31,"author":{"gitId":"coderhuang559"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-10-24"},{"lineNumber":32,"author":{"gitId":"coderhuang559"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_GROUPTAG);","lastModifiedDate":"2023-10-24"},{"lineNumber":33,"author":{"gitId":"coderhuang559"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":34,"author":{"gitId":"coderhuang559"},"content":"        if (args.length() \u003c 2) {","lastModifiedDate":"2023-10-24"},{"lineNumber":35,"author":{"gitId":"coderhuang559"},"content":"            throw new ParseException(","lastModifiedDate":"2023-10-24"},{"lineNumber":36,"author":{"gitId":"coderhuang559"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, ListTimeCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-24"},{"lineNumber":37,"author":{"gitId":"coderhuang559"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":38,"author":{"gitId":"coderhuang559"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":39,"author":{"gitId":"coderhuang559"},"content":"        // check if either n/ or g/ are present","lastModifiedDate":"2023-10-24"},{"lineNumber":40,"author":{"gitId":"coderhuang559"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME)","lastModifiedDate":"2023-10-24"},{"lineNumber":41,"author":{"gitId":"coderhuang559"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-10-24"},{"lineNumber":42,"author":{"gitId":"coderhuang559"},"content":"            if (!arePrefixesPresent(argMultimap, PREFIX_GROUPTAG)) {","lastModifiedDate":"2023-10-24"},{"lineNumber":43,"author":{"gitId":"coderhuang559"},"content":"                throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, ListTimeCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-24"},{"lineNumber":44,"author":{"gitId":"coderhuang559"},"content":"            }","lastModifiedDate":"2023-10-24"},{"lineNumber":45,"author":{"gitId":"coderhuang559"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":46,"author":{"gitId":"coderhuang559"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":47,"author":{"gitId":"coderhuang559"},"content":"        // if n/ is present","lastModifiedDate":"2023-10-24"},{"lineNumber":48,"author":{"gitId":"coderhuang559"},"content":"        if (arePrefixesPresent(argMultimap, PREFIX_NAME)) {","lastModifiedDate":"2023-10-24"},{"lineNumber":49,"author":{"gitId":"coderhuang559"},"content":"            // check if g/ is present","lastModifiedDate":"2023-10-24"},{"lineNumber":50,"author":{"gitId":"coderhuang559"},"content":"            if (arePrefixesPresent(argMultimap, PREFIX_GROUPTAG)) { // g/ present","lastModifiedDate":"2023-10-24"},{"lineNumber":51,"author":{"gitId":"coderhuang559"},"content":"                throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, ListTimeCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-24"},{"lineNumber":52,"author":{"gitId":"coderhuang559"},"content":"            } else {","lastModifiedDate":"2023-10-24"},{"lineNumber":53,"author":{"gitId":"coderhuang559"},"content":"                String personName \u003d argMultimap.getValue(PREFIX_NAME).get();","lastModifiedDate":"2023-10-24"},{"lineNumber":54,"author":{"gitId":"coderhuang559"},"content":"                Name name \u003d ParserUtil.parseName(personName);","lastModifiedDate":"2023-10-25"},{"lineNumber":55,"author":{"gitId":"coderhuang559"},"content":"                return new ListTimePersonCommand(name);","lastModifiedDate":"2023-10-25"},{"lineNumber":56,"author":{"gitId":"coderhuang559"},"content":"            }","lastModifiedDate":"2023-10-24"},{"lineNumber":57,"author":{"gitId":"coderhuang559"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":58,"author":{"gitId":"coderhuang559"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":59,"author":{"gitId":"coderhuang559"},"content":"        // n/ not present, g/ should be present","lastModifiedDate":"2023-10-24"},{"lineNumber":60,"author":{"gitId":"coderhuang559"},"content":"        String groupName \u003d argMultimap.getValue(PREFIX_GROUPTAG).get();","lastModifiedDate":"2023-10-24"},{"lineNumber":61,"author":{"gitId":"coderhuang559"},"content":"        Group group \u003d ParserUtil.parseSingleGroup(groupName);","lastModifiedDate":"2023-10-25"},{"lineNumber":62,"author":{"gitId":"coderhuang559"},"content":"        return new ListTimeGroupCommand(group);","lastModifiedDate":"2023-10-25"},{"lineNumber":63,"author":{"gitId":"coderhuang559"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":64,"author":{"gitId":"coderhuang559"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":65,"author":{"gitId":"coderhuang559"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-10-24"},{"lineNumber":66,"author":{"gitId":"coderhuang559"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-10-24"},{"lineNumber":67,"author":{"gitId":"coderhuang559"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":68,"author":{"gitId":"coderhuang559"},"content":"}","lastModifiedDate":"2023-10-24"}],"authorContributionMap":{"coderhuang559":68}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"Kailash201"},"content":"import java.time.DayOfWeek;","lastModifiedDate":"2023-10-21"},{"lineNumber":6,"author":{"gitId":"Kailash201"},"content":"import java.time.LocalTime;","lastModifiedDate":"2023-10-21"},{"lineNumber":7,"author":{"gitId":"Kailash201"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":15,"author":{"gitId":"Kailash201"},"content":"import seedu.address.model.TimeInterval;","lastModifiedDate":"2023-10-21"},{"lineNumber":16,"author":{"gitId":"ZD292"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2023-10-10"},{"lineNumber":17,"author":{"gitId":"ZD292"},"content":"import seedu.address.model.group.GroupList;","lastModifiedDate":"2023-10-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-02-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-02-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-02-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-02-11"},{"lineNumber":22,"author":{"gitId":"Kailash201"},"content":"import seedu.address.model.Time;","lastModifiedDate":"2023-10-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-10-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":105,"author":{"gitId":"Kailash201"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":106,"author":{"gitId":"nicholastng010601"},"content":"     * Parses a {@code String groupName} into an {@code Group}.","lastModifiedDate":"2023-10-24"},{"lineNumber":107,"author":{"gitId":"Kailash201"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-10-06"},{"lineNumber":108,"author":{"gitId":"Kailash201"},"content":"     *","lastModifiedDate":"2023-10-06"},{"lineNumber":109,"author":{"gitId":"Kailash201"},"content":"     * @throws ParseException if the given {@code groupName} is invalid.","lastModifiedDate":"2023-10-06"},{"lineNumber":110,"author":{"gitId":"Kailash201"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":111,"author":{"gitId":"nicholastng010601"},"content":"    public static Group parseGroup(String groupName) throws ParseException {","lastModifiedDate":"2023-10-24"},{"lineNumber":112,"author":{"gitId":"Kailash201"},"content":"        requireNonNull(groupName);","lastModifiedDate":"2023-10-06"},{"lineNumber":113,"author":{"gitId":"Kailash201"},"content":"        String trimmedGroupName \u003d groupName.trim();","lastModifiedDate":"2023-10-06"},{"lineNumber":114,"author":{"gitId":"coderhuang559"},"content":"        if (!Group.isValidGroup(trimmedGroupName)) {","lastModifiedDate":"2023-10-07"},{"lineNumber":115,"author":{"gitId":"coderhuang559"},"content":"            throw new ParseException(Group.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-07"},{"lineNumber":116,"author":{"gitId":"coderhuang559"},"content":"        }","lastModifiedDate":"2023-10-07"},{"lineNumber":117,"author":{"gitId":"nicholastng010601"},"content":"        Group group \u003d new Group(trimmedGroupName);","lastModifiedDate":"2023-10-24"},{"lineNumber":118,"author":{"gitId":"nicholastng010601"},"content":"        return group;","lastModifiedDate":"2023-10-24"},{"lineNumber":119,"author":{"gitId":"Kailash201"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":120,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":147,"author":{"gitId":"coderhuang559"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":148,"author":{"gitId":"coderhuang559"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":149,"author":{"gitId":"coderhuang559"},"content":"     * Parses a {@code String groupName} into a {@code Group}.","lastModifiedDate":"2023-10-07"},{"lineNumber":150,"author":{"gitId":"coderhuang559"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-10-06"},{"lineNumber":151,"author":{"gitId":"coderhuang559"},"content":"     *","lastModifiedDate":"2023-10-06"},{"lineNumber":152,"author":{"gitId":"coderhuang559"},"content":"     * @throws ParseException if the given {@code groupName} is invalid.","lastModifiedDate":"2023-10-07"},{"lineNumber":153,"author":{"gitId":"coderhuang559"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":154,"author":{"gitId":"coderhuang559"},"content":"    public static Group parseSingleGroup(String groupName) throws ParseException {","lastModifiedDate":"2023-10-07"},{"lineNumber":155,"author":{"gitId":"coderhuang559"},"content":"        requireNonNull(groupName);","lastModifiedDate":"2023-10-07"},{"lineNumber":156,"author":{"gitId":"coderhuang559"},"content":"        String trimmedGroup \u003d groupName.trim();","lastModifiedDate":"2023-10-07"},{"lineNumber":157,"author":{"gitId":"coderhuang559"},"content":"        if (!Group.isValidGroup(trimmedGroup)) {","lastModifiedDate":"2023-10-07"},{"lineNumber":158,"author":{"gitId":"coderhuang559"},"content":"            throw new ParseException(Group.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-07"},{"lineNumber":159,"author":{"gitId":"coderhuang559"},"content":"        }","lastModifiedDate":"2023-10-07"},{"lineNumber":160,"author":{"gitId":"coderhuang559"},"content":"        return new Group(trimmedGroup);","lastModifiedDate":"2023-10-06"},{"lineNumber":161,"author":{"gitId":"coderhuang559"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":162,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":163,"author":{"gitId":"Kailash201"},"content":"    /**","lastModifiedDate":"2023-10-22"},{"lineNumber":164,"author":{"gitId":"Kailash201"},"content":"     * Parses a {@code String timeString} into a {@code Time}.","lastModifiedDate":"2023-10-22"},{"lineNumber":165,"author":{"gitId":"Kailash201"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-10-22"},{"lineNumber":166,"author":{"gitId":"Kailash201"},"content":"     *","lastModifiedDate":"2023-10-22"},{"lineNumber":167,"author":{"gitId":"Kailash201"},"content":"     * @throws ParseException if the given {@code timeString} is invalid.","lastModifiedDate":"2023-10-22"},{"lineNumber":168,"author":{"gitId":"Kailash201"},"content":"     */","lastModifiedDate":"2023-10-22"},{"lineNumber":169,"author":{"gitId":"Kailash201"},"content":"    public static Time parseTime(String timeString) throws ParseException {","lastModifiedDate":"2023-10-21"},{"lineNumber":170,"author":{"gitId":"Kailash201"},"content":"        requireNonNull(timeString);","lastModifiedDate":"2023-10-21"},{"lineNumber":171,"author":{"gitId":"Kailash201"},"content":"        String trimmedTimeString \u003d timeString.trim();","lastModifiedDate":"2023-10-21"},{"lineNumber":172,"author":{"gitId":"Kailash201"},"content":"        if (!Time.isValidTime(trimmedTimeString)) {","lastModifiedDate":"2023-10-21"},{"lineNumber":173,"author":{"gitId":"Kailash201"},"content":"            throw new ParseException(Time.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-21"},{"lineNumber":174,"author":{"gitId":"Kailash201"},"content":"        }","lastModifiedDate":"2023-10-21"},{"lineNumber":175,"author":{"gitId":"Kailash201"},"content":"        String dayString \u003d trimmedTimeString.substring(0, timeString.indexOf(\" \"));","lastModifiedDate":"2023-10-21"},{"lineNumber":176,"author":{"gitId":"Kailash201"},"content":"        String time \u003d trimmedTimeString.substring(timeString.indexOf(\" \") + 1);","lastModifiedDate":"2023-10-21"},{"lineNumber":177,"author":{"gitId":"Kailash201"},"content":"        DayOfWeek day \u003d Time.decodeDay(dayString);","lastModifiedDate":"2023-10-21"},{"lineNumber":178,"author":{"gitId":"Kailash201"},"content":"        LocalTime hour \u003d LocalTime.parse(time.substring(0, 2) + \":\" + time.substring(2, 4));","lastModifiedDate":"2023-10-21"},{"lineNumber":179,"author":{"gitId":"Kailash201"},"content":"        return new Time(day, hour);","lastModifiedDate":"2023-10-21"},{"lineNumber":180,"author":{"gitId":"Kailash201"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":181,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":182,"author":{"gitId":"Kailash201"},"content":"    /**","lastModifiedDate":"2023-10-22"},{"lineNumber":183,"author":{"gitId":"Kailash201"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code ArrayList\u003cTimeInterval\u003e}.","lastModifiedDate":"2023-10-22"},{"lineNumber":184,"author":{"gitId":"Kailash201"},"content":"     */","lastModifiedDate":"2023-10-22"},{"lineNumber":185,"author":{"gitId":"Kailash201"},"content":"    public static ArrayList\u003cTimeInterval\u003e parseInterval(Collection\u003cString\u003e timeIntervals) throws ParseException {","lastModifiedDate":"2023-10-21"},{"lineNumber":186,"author":{"gitId":"Kailash201"},"content":"        requireNonNull(timeIntervals);","lastModifiedDate":"2023-10-21"},{"lineNumber":187,"author":{"gitId":"Kailash201"},"content":"        ArrayList\u003cTimeInterval\u003e timeIntervalsAl \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-21"},{"lineNumber":188,"author":{"gitId":"Kailash201"},"content":"        for (String intString: timeIntervals) {","lastModifiedDate":"2023-10-21"},{"lineNumber":189,"author":{"gitId":"Kailash201"},"content":"            timeIntervalsAl.add(parseEachInterval(intString));","lastModifiedDate":"2023-10-21"},{"lineNumber":190,"author":{"gitId":"Kailash201"},"content":"        }","lastModifiedDate":"2023-10-21"},{"lineNumber":191,"author":{"gitId":"Kailash201"},"content":"        return timeIntervalsAl;","lastModifiedDate":"2023-10-21"},{"lineNumber":192,"author":{"gitId":"Kailash201"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":193,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":194,"author":{"gitId":"Kailash201"},"content":"    /**","lastModifiedDate":"2023-10-22"},{"lineNumber":195,"author":{"gitId":"Kailash201"},"content":"     * Parses a {@code String interval} into a {@code TimeInterval}.","lastModifiedDate":"2023-10-22"},{"lineNumber":196,"author":{"gitId":"Kailash201"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-10-22"},{"lineNumber":197,"author":{"gitId":"Kailash201"},"content":"     *","lastModifiedDate":"2023-10-22"},{"lineNumber":198,"author":{"gitId":"Kailash201"},"content":"     * @throws ParseException if the given {@code interval} is invalid.","lastModifiedDate":"2023-10-22"},{"lineNumber":199,"author":{"gitId":"Kailash201"},"content":"     */","lastModifiedDate":"2023-10-22"},{"lineNumber":200,"author":{"gitId":"Kailash201"},"content":"    public static TimeInterval parseEachInterval(String interval) throws ParseException {","lastModifiedDate":"2023-10-21"},{"lineNumber":201,"author":{"gitId":"Kailash201"},"content":"        requireNonNull(interval);","lastModifiedDate":"2023-10-21"},{"lineNumber":202,"author":{"gitId":"Kailash201"},"content":"        String trimmedInterval \u003d interval.trim();","lastModifiedDate":"2023-10-21"},{"lineNumber":203,"author":{"gitId":"Kailash201"},"content":"        if (!TimeInterval.isValidTimeIntervalSyntax(trimmedInterval)) {","lastModifiedDate":"2023-10-21"},{"lineNumber":204,"author":{"gitId":"Kailash201"},"content":"            throw new ParseException(TimeInterval.MESSAGE_CONSTRAINTS_SYNTAX);","lastModifiedDate":"2023-10-21"},{"lineNumber":205,"author":{"gitId":"Kailash201"},"content":"        }","lastModifiedDate":"2023-10-21"},{"lineNumber":206,"author":{"gitId":"Kailash201"},"content":"        String start \u003d interval.substring(0, interval.indexOf(\"-\")).trim();","lastModifiedDate":"2023-10-21"},{"lineNumber":207,"author":{"gitId":"Kailash201"},"content":"        Time startTime \u003d parseTime(start);","lastModifiedDate":"2023-10-21"},{"lineNumber":208,"author":{"gitId":"Kailash201"},"content":"        String end \u003d interval.substring(interval.indexOf(\u0027-\u0027) + 1).trim();","lastModifiedDate":"2023-10-21"},{"lineNumber":209,"author":{"gitId":"Kailash201"},"content":"        Time endTime \u003d parseTime(end);","lastModifiedDate":"2023-10-21"},{"lineNumber":210,"author":{"gitId":"Kailash201"},"content":"        if (!TimeInterval.isValidTimeIntervalLogic(startTime, endTime)) {","lastModifiedDate":"2023-10-21"},{"lineNumber":211,"author":{"gitId":"Kailash201"},"content":"            throw new ParseException(TimeInterval.MESSAGE_CONSTRAINTS_LOGIC);","lastModifiedDate":"2023-10-21"},{"lineNumber":212,"author":{"gitId":"Kailash201"},"content":"        }","lastModifiedDate":"2023-10-21"},{"lineNumber":213,"author":{"gitId":"Kailash201"},"content":"        return new TimeInterval(startTime, endTime);","lastModifiedDate":"2023-10-21"},{"lineNumber":214,"author":{"gitId":"Kailash201"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":215,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"Kailash201":67,"coderhuang559":18,"ZD292":2,"nicholastng010601":4,"-":124}},{"path":"src/main/java/seedu/address/logic/parser/UngroupPersonCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"coderhuang559"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"coderhuang559"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":3,"author":{"gitId":"coderhuang559"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-06"},{"lineNumber":4,"author":{"gitId":"coderhuang559"},"content":"import static seedu.address.logic.parser.CliSyntax.*;","lastModifiedDate":"2023-10-06"},{"lineNumber":5,"author":{"gitId":"coderhuang559"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GROUPTAG;","lastModifiedDate":"2023-10-11"},{"lineNumber":6,"author":{"gitId":"coderhuang559"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":7,"author":{"gitId":"coderhuang559"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-10-11"},{"lineNumber":8,"author":{"gitId":"coderhuang559"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":9,"author":{"gitId":"coderhuang559"},"content":"import seedu.address.logic.commands.UngroupPersonCommand;","lastModifiedDate":"2023-10-06"},{"lineNumber":10,"author":{"gitId":"coderhuang559"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-06"},{"lineNumber":11,"author":{"gitId":"coderhuang559"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":12,"author":{"gitId":"coderhuang559"},"content":"/**","lastModifiedDate":"2023-10-06"},{"lineNumber":13,"author":{"gitId":"coderhuang559"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2023-10-11"},{"lineNumber":14,"author":{"gitId":"coderhuang559"},"content":" */","lastModifiedDate":"2023-10-06"},{"lineNumber":15,"author":{"gitId":"coderhuang559"},"content":"public class UngroupPersonCommandParser implements Parser\u003cUngroupPersonCommand\u003e {","lastModifiedDate":"2023-10-06"},{"lineNumber":16,"author":{"gitId":"coderhuang559"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":17,"author":{"gitId":"coderhuang559"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":18,"author":{"gitId":"coderhuang559"},"content":"     * Parses the given {@code String} of arguments in the context of the UngroupPersonCommand","lastModifiedDate":"2023-10-06"},{"lineNumber":19,"author":{"gitId":"coderhuang559"},"content":"     * and returns an UngroupPersonCommand object for execution.","lastModifiedDate":"2023-10-11"},{"lineNumber":20,"author":{"gitId":"coderhuang559"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-06"},{"lineNumber":21,"author":{"gitId":"coderhuang559"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":22,"author":{"gitId":"coderhuang559"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":23,"author":{"gitId":"coderhuang559"},"content":"    public UngroupPersonCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-06"},{"lineNumber":24,"author":{"gitId":"coderhuang559"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2023-10-11"},{"lineNumber":25,"author":{"gitId":"coderhuang559"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2023-10-11"},{"lineNumber":26,"author":{"gitId":"coderhuang559"},"content":"            throw new ParseException(","lastModifiedDate":"2023-10-11"},{"lineNumber":27,"author":{"gitId":"coderhuang559"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, UngroupPersonCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-11"},{"lineNumber":28,"author":{"gitId":"coderhuang559"},"content":"        }","lastModifiedDate":"2023-10-11"},{"lineNumber":29,"author":{"gitId":"coderhuang559"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":30,"author":{"gitId":"coderhuang559"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-10-06"},{"lineNumber":31,"author":{"gitId":"coderhuang559"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_GROUPTAG);","lastModifiedDate":"2023-10-06"},{"lineNumber":32,"author":{"gitId":"coderhuang559"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":33,"author":{"gitId":"coderhuang559"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_GROUPTAG)","lastModifiedDate":"2023-10-06"},{"lineNumber":34,"author":{"gitId":"coderhuang559"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-10-06"},{"lineNumber":35,"author":{"gitId":"coderhuang559"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, UngroupPersonCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-06"},{"lineNumber":36,"author":{"gitId":"coderhuang559"},"content":"        }","lastModifiedDate":"2023-10-06"},{"lineNumber":37,"author":{"gitId":"coderhuang559"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":38,"author":{"gitId":"coderhuang559"},"content":"        String personName \u003d argMultimap.getValue(PREFIX_NAME).get();","lastModifiedDate":"2023-10-11"},{"lineNumber":39,"author":{"gitId":"coderhuang559"},"content":"        String groupName \u003d argMultimap.getValue(PREFIX_GROUPTAG).get();","lastModifiedDate":"2023-10-11"},{"lineNumber":40,"author":{"gitId":"coderhuang559"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":41,"author":{"gitId":"coderhuang559"},"content":"        return new UngroupPersonCommand(personName, groupName);","lastModifiedDate":"2023-10-11"},{"lineNumber":42,"author":{"gitId":"coderhuang559"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":43,"author":{"gitId":"coderhuang559"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":44,"author":{"gitId":"coderhuang559"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":45,"author":{"gitId":"coderhuang559"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2023-10-06"},{"lineNumber":46,"author":{"gitId":"coderhuang559"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2023-10-06"},{"lineNumber":47,"author":{"gitId":"coderhuang559"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":48,"author":{"gitId":"coderhuang559"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-10-06"},{"lineNumber":49,"author":{"gitId":"coderhuang559"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-10-06"},{"lineNumber":50,"author":{"gitId":"coderhuang559"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":51,"author":{"gitId":"coderhuang559"},"content":"}","lastModifiedDate":"2023-10-06"}],"authorContributionMap":{"coderhuang559":51}},{"path":"src/main/java/seedu/address/model/AddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"ZD292"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-10"},{"lineNumber":10,"author":{"gitId":"ZD292"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2023-10-10"},{"lineNumber":11,"author":{"gitId":"ZD292"},"content":"import seedu.address.model.group.GroupList;","lastModifiedDate":"2023-10-10"},{"lineNumber":12,"author":{"gitId":"ZD292"},"content":"import seedu.address.model.group.exceptions.GroupNotFoundException;","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"Kailash201"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-10-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.UniquePersonList;","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Duplicates are not allowed (by .isSamePerson comparison)","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class AddressBook implements ReadOnlyAddressBook {","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final UniquePersonList persons;","lastModifiedDate":"2016-08-26"},{"lineNumber":24,"author":{"gitId":"nicholastng010601"},"content":"    private final GroupList groups;","lastModifiedDate":"2023-10-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        persons \u003d new UniquePersonList();","lastModifiedDate":"2016-08-26"},{"lineNumber":35,"author":{"gitId":"nicholastng010601"},"content":"        groups \u003d new GroupList();","lastModifiedDate":"2023-10-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"nicholastng010601"},"content":"    public AddressBook() {","lastModifiedDate":"2023-10-16"},{"lineNumber":39,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":40,"author":{"gitId":"nicholastng010601"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Creates an AddressBook using the Persons in the {@code toBeCopied}","lastModifiedDate":"2018-03-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public AddressBook(ReadOnlyAddressBook toBeCopied) {","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Replaces the contents of the person list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        this.persons.setPersons(persons);","lastModifiedDate":"2016-10-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"nicholastng010601"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":61,"author":{"gitId":"nicholastng010601"},"content":"     * Replaces the contents of the group list with {@code groups}.","lastModifiedDate":"2023-10-17"},{"lineNumber":62,"author":{"gitId":"nicholastng010601"},"content":"     * {@code groups} must not contain duplicate groups.","lastModifiedDate":"2023-10-17"},{"lineNumber":63,"author":{"gitId":"nicholastng010601"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":64,"author":{"gitId":"nicholastng010601"},"content":"    public void setGroups(List\u003cGroup\u003e groups) {","lastModifiedDate":"2023-10-17"},{"lineNumber":65,"author":{"gitId":"nicholastng010601"},"content":"        this.groups.setGroups(groups);","lastModifiedDate":"2023-10-17"},{"lineNumber":66,"author":{"gitId":"nicholastng010601"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":67,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code AddressBook} with {@code newData}.","lastModifiedDate":"2017-08-16"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyAddressBook newData) {","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":73,"author":{"gitId":"nicholastng010601"},"content":"        setGroups(newData.getGroupList());","lastModifiedDate":"2023-10-17"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        setPersons(newData.getPersonList());","lastModifiedDate":"2018-03-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    //// person-level operations","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"nicholastng010601"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":80,"author":{"gitId":"nicholastng010601"},"content":"     * Returns the list of fields of {@code person} that exists in the address book.","lastModifiedDate":"2023-10-13"},{"lineNumber":81,"author":{"gitId":"nicholastng010601"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":82,"author":{"gitId":"nicholastng010601"},"content":"    public boolean[] usedFields(Person person) {","lastModifiedDate":"2023-10-13"},{"lineNumber":83,"author":{"gitId":"nicholastng010601"},"content":"        requireNonNull(person);","lastModifiedDate":"2023-10-13"},{"lineNumber":84,"author":{"gitId":"nicholastng010601"},"content":"        return persons.usedFields(person);","lastModifiedDate":"2023-10-13"},{"lineNumber":85,"author":{"gitId":"nicholastng010601"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":86,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return persons.contains(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":95,"author":{"gitId":"Kailash201"},"content":"    /**","lastModifiedDate":"2023-10-22"},{"lineNumber":96,"author":{"gitId":"Kailash201"},"content":"     * Returns true if a person with the same name exists in the addressbook.","lastModifiedDate":"2023-10-22"},{"lineNumber":97,"author":{"gitId":"Kailash201"},"content":"     * @param personName Name of the person.","lastModifiedDate":"2023-10-22"},{"lineNumber":98,"author":{"gitId":"Kailash201"},"content":"     * @return Returns true if a person with the same name exists in the addressbook.","lastModifiedDate":"2023-10-22"},{"lineNumber":99,"author":{"gitId":"Kailash201"},"content":"     */","lastModifiedDate":"2023-10-22"},{"lineNumber":100,"author":{"gitId":"Kailash201"},"content":"    public boolean hasPerson(Name personName) {","lastModifiedDate":"2023-10-21"},{"lineNumber":101,"author":{"gitId":"Kailash201"},"content":"        requireNonNull(personName);","lastModifiedDate":"2023-10-21"},{"lineNumber":102,"author":{"gitId":"Kailash201"},"content":"        for (Person person : persons) {","lastModifiedDate":"2023-10-21"},{"lineNumber":103,"author":{"gitId":"Kailash201"},"content":"            if (person.getName().equals(personName)) {","lastModifiedDate":"2023-10-21"},{"lineNumber":104,"author":{"gitId":"Kailash201"},"content":"                return true;","lastModifiedDate":"2023-10-21"},{"lineNumber":105,"author":{"gitId":"Kailash201"},"content":"            }","lastModifiedDate":"2023-10-21"},{"lineNumber":106,"author":{"gitId":"Kailash201"},"content":"        }","lastModifiedDate":"2023-10-21"},{"lineNumber":107,"author":{"gitId":"Kailash201"},"content":"        return false;","lastModifiedDate":"2023-10-21"},{"lineNumber":108,"author":{"gitId":"Kailash201"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":109,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * Adds a person to the address book.","lastModifiedDate":"2016-09-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * The person must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public void addPerson(Person p) {","lastModifiedDate":"2018-08-07"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        persons.add(p);","lastModifiedDate":"2018-03-29"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2018-01-10"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        requireNonNull(editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        persons.setPerson(target, editedPerson);","lastModifiedDate":"2018-03-29"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2017-08-16"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public void removePerson(Person key) {","lastModifiedDate":"2018-08-07"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        persons.remove(key);","lastModifiedDate":"2018-02-28"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"nicholastng010601"},"content":"    //// group-level operations","lastModifiedDate":"2023-10-03"},{"lineNumber":138,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":139,"author":{"gitId":"ZD292"},"content":"    public void addPersonToGroup(Person person, Group group) {","lastModifiedDate":"2023-10-10"},{"lineNumber":140,"author":{"gitId":"ZD292"},"content":"        requireNonNull(person);","lastModifiedDate":"2023-10-10"},{"lineNumber":141,"author":{"gitId":"ZD292"},"content":"        requireNonNull(group);","lastModifiedDate":"2023-10-10"},{"lineNumber":142,"author":{"gitId":"ZD292"},"content":"        GroupList groups \u003d person.getGroups();","lastModifiedDate":"2023-10-10"},{"lineNumber":143,"author":{"gitId":"ZD292"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":144,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":145,"author":{"gitId":"nicholastng010601"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":146,"author":{"gitId":"nicholastng010601"},"content":"     * Returns true if a group with the same identity as {@code group} exists in the address book.","lastModifiedDate":"2023-10-03"},{"lineNumber":147,"author":{"gitId":"nicholastng010601"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":148,"author":{"gitId":"nicholastng010601"},"content":"    public boolean hasGroup(Group group) {","lastModifiedDate":"2023-10-03"},{"lineNumber":149,"author":{"gitId":"nicholastng010601"},"content":"        requireNonNull(group);","lastModifiedDate":"2023-10-03"},{"lineNumber":150,"author":{"gitId":"nicholastng010601"},"content":"        return groups.contains(group);","lastModifiedDate":"2023-10-03"},{"lineNumber":151,"author":{"gitId":"nicholastng010601"},"content":"    }","lastModifiedDate":"2023-10-03"},{"lineNumber":152,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":153,"author":{"gitId":"nicholastng010601"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":154,"author":{"gitId":"nicholastng010601"},"content":"     * Adds a group to the address book.","lastModifiedDate":"2023-10-03"},{"lineNumber":155,"author":{"gitId":"nicholastng010601"},"content":"     * The group must not already exist in the address book.","lastModifiedDate":"2023-10-03"},{"lineNumber":156,"author":{"gitId":"nicholastng010601"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":157,"author":{"gitId":"nicholastng010601"},"content":"    public void addGroup(Group g) {","lastModifiedDate":"2023-10-03"},{"lineNumber":158,"author":{"gitId":"nicholastng010601"},"content":"        groups.add(g);","lastModifiedDate":"2023-10-03"},{"lineNumber":159,"author":{"gitId":"nicholastng010601"},"content":"    }","lastModifiedDate":"2023-10-03"},{"lineNumber":160,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":161,"author":{"gitId":"nicholastng010601"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":162,"author":{"gitId":"nicholastng010601"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2023-10-03"},{"lineNumber":163,"author":{"gitId":"nicholastng010601"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2023-10-03"},{"lineNumber":164,"author":{"gitId":"nicholastng010601"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":165,"author":{"gitId":"coderhuang559"},"content":"    public void removeGroup(Group g) {","lastModifiedDate":"2023-10-11"},{"lineNumber":166,"author":{"gitId":"coderhuang559"},"content":"        groups.remove(g);","lastModifiedDate":"2023-10-11"},{"lineNumber":167,"author":{"gitId":"nicholastng010601"},"content":"    }","lastModifiedDate":"2023-10-03"},{"lineNumber":168,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"            .add(\"persons\", persons)","lastModifiedDate":"2019-02-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"            .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"ZD292"},"content":"    public Person getPerson(String personName) throws CommandException {","lastModifiedDate":"2023-10-10"},{"lineNumber":179,"author":{"gitId":"ZD292"},"content":"        // person list get that person object with same name","lastModifiedDate":"2023-10-10"},{"lineNumber":180,"author":{"gitId":"ZD292"},"content":"        return persons.getPerson(personName);","lastModifiedDate":"2023-10-10"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":183,"author":{"gitId":"ZD292"},"content":"    public Group getGroup(String groupName) throws CommandException {","lastModifiedDate":"2023-10-10"},{"lineNumber":184,"author":{"gitId":"ZD292"},"content":"        // group list get that group object with same name","lastModifiedDate":"2023-10-10"},{"lineNumber":185,"author":{"gitId":"ZD292"},"content":"        return groups.getGroup(groupName);","lastModifiedDate":"2023-10-10"},{"lineNumber":186,"author":{"gitId":"ZD292"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":187,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":188,"author":{"gitId":"nicholastng010601"},"content":"    public Group getGroup(Group group) throws CommandException {","lastModifiedDate":"2023-10-25"},{"lineNumber":189,"author":{"gitId":"nicholastng010601"},"content":"        // group list get that group object with same name","lastModifiedDate":"2023-10-25"},{"lineNumber":190,"author":{"gitId":"nicholastng010601"},"content":"        return groups.getGroup(group.getGroupName());","lastModifiedDate":"2023-10-25"},{"lineNumber":191,"author":{"gitId":"nicholastng010601"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":192,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":193,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList();","lastModifiedDate":"2018-04-05"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":199,"author":{"gitId":"ZD292"},"content":"    @Override","lastModifiedDate":"2023-10-10"},{"lineNumber":200,"author":{"gitId":"ZD292"},"content":"    public ObservableList\u003cGroup\u003e getGroupList() {","lastModifiedDate":"2023-10-10"},{"lineNumber":201,"author":{"gitId":"ZD292"},"content":"        return groups.asUnmodifiableObservableList();","lastModifiedDate":"2023-10-10"},{"lineNumber":202,"author":{"gitId":"ZD292"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":203,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":207,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        if (!(other instanceof AddressBook)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":212,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        AddressBook otherAddressBook \u003d (AddressBook) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        return persons.equals(otherAddressBook.persons);","lastModifiedDate":"2023-07-13"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        return persons.hashCode();","lastModifiedDate":"2018-03-29"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":223,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Kailash201":17,"coderhuang559":2,"ZD292":23,"nicholastng010601":51,"-":130}},{"path":"src/main/java/seedu/address/model/Duration.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ZD292"},"content":"package seedu.address.model;","lastModifiedDate":"2023-10-25"},{"lineNumber":2,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":3,"author":{"gitId":"ZD292"},"content":"public class Duration {","lastModifiedDate":"2023-10-25"},{"lineNumber":4,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":5,"author":{"gitId":"ZD292"},"content":"\tprivate int duration;","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"ZD292"},"content":"\tpublic Duration(int duration) {","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"ZD292"},"content":"\t\tthis.duration \u003d duration;","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"ZD292"},"content":"\t}","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"ZD292"},"content":"\tpublic int getDurationInMin() {","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"ZD292"},"content":"\t\treturn this.duration;","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"ZD292"},"content":"\t}","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"ZD292"},"content":"}","lastModifiedDate":"2023-10-25"}],"authorContributionMap":{"ZD292":14}},{"path":"src/main/java/seedu/address/model/FreeTime.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Kailash201"},"content":"package seedu.address.model;","lastModifiedDate":"2023-10-21"},{"lineNumber":2,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":3,"author":{"gitId":"Kailash201"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-21"},{"lineNumber":4,"author":{"gitId":"Kailash201"},"content":"import java.util.Iterator;","lastModifiedDate":"2023-10-21"},{"lineNumber":5,"author":{"gitId":"nicholastng010601"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-10-23"},{"lineNumber":6,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":7,"author":{"gitId":"Kailash201"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-10-21"},{"lineNumber":8,"author":{"gitId":"Kailash201"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-10-21"},{"lineNumber":9,"author":{"gitId":"nicholastng010601"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2023-10-23"},{"lineNumber":10,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":11,"author":{"gitId":"Kailash201"},"content":"public class FreeTime implements Iterable\u003cTimeInterval\u003e {","lastModifiedDate":"2023-10-21"},{"lineNumber":12,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":13,"author":{"gitId":"Kailash201"},"content":"    private final ObservableList\u003cTimeInterval\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-10-21"},{"lineNumber":14,"author":{"gitId":"Kailash201"},"content":"    private final ObservableList\u003cTimeInterval\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2023-10-22"},{"lineNumber":15,"author":{"gitId":"Kailash201"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2023-10-22"},{"lineNumber":16,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":17,"author":{"gitId":"Kailash201"},"content":"    public void addTime(TimeInterval timeInterval) {","lastModifiedDate":"2023-10-21"},{"lineNumber":18,"author":{"gitId":"Kailash201"},"content":"        internalList.add(timeInterval);","lastModifiedDate":"2023-10-21"},{"lineNumber":19,"author":{"gitId":"Kailash201"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":20,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":21,"author":{"gitId":"nicholastng010601"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":22,"author":{"gitId":"nicholastng010601"},"content":"     * Converts the internal list to streams.","lastModifiedDate":"2023-10-23"},{"lineNumber":23,"author":{"gitId":"nicholastng010601"},"content":"     *","lastModifiedDate":"2023-10-23"},{"lineNumber":24,"author":{"gitId":"nicholastng010601"},"content":"     * @return Internal list into streams.","lastModifiedDate":"2023-10-23"},{"lineNumber":25,"author":{"gitId":"nicholastng010601"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":26,"author":{"gitId":"nicholastng010601"},"content":"    public Stream\u003cTimeInterval\u003e toStream() {","lastModifiedDate":"2023-10-23"},{"lineNumber":27,"author":{"gitId":"nicholastng010601"},"content":"        return internalList.stream();","lastModifiedDate":"2023-10-23"},{"lineNumber":28,"author":{"gitId":"nicholastng010601"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":29,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":30,"author":{"gitId":"Kailash201"},"content":"    public void addTime(ArrayList\u003cTimeInterval\u003e timeIntervals) {","lastModifiedDate":"2023-10-21"},{"lineNumber":31,"author":{"gitId":"Kailash201"},"content":"        internalList.addAll(timeIntervals);","lastModifiedDate":"2023-10-21"},{"lineNumber":32,"author":{"gitId":"Kailash201"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":33,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":34,"author":{"gitId":"ZD292"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":35,"author":{"gitId":"ZD292"},"content":"     * Check whether no time is stored","lastModifiedDate":"2023-10-25"},{"lineNumber":36,"author":{"gitId":"ZD292"},"content":"     * @return boolean representing whether no time is stored","lastModifiedDate":"2023-10-25"},{"lineNumber":37,"author":{"gitId":"ZD292"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":38,"author":{"gitId":"ZD292"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2023-10-25"},{"lineNumber":39,"author":{"gitId":"ZD292"},"content":"        return internalList.isEmpty();","lastModifiedDate":"2023-10-25"},{"lineNumber":40,"author":{"gitId":"ZD292"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":41,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":42,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":43,"author":{"gitId":"ZD292"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":44,"author":{"gitId":"ZD292"},"content":"     * Generate String representing list of intervals","lastModifiedDate":"2023-10-25"},{"lineNumber":45,"author":{"gitId":"ZD292"},"content":"     * @param br StringBuilder to store  message","lastModifiedDate":"2023-10-25"},{"lineNumber":46,"author":{"gitId":"ZD292"},"content":"     * @param format specify Message format","lastModifiedDate":"2023-10-25"},{"lineNumber":47,"author":{"gitId":"ZD292"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":48,"author":{"gitId":"ZD292"},"content":"    public void getMessage(StringBuilder br, String format) {","lastModifiedDate":"2023-10-25"},{"lineNumber":49,"author":{"gitId":"ZD292"},"content":"        int intervalCount \u003d 1;","lastModifiedDate":"2023-10-25"},{"lineNumber":50,"author":{"gitId":"ZD292"},"content":"        for (TimeInterval t: this.internalList) {","lastModifiedDate":"2023-10-25"},{"lineNumber":51,"author":{"gitId":"ZD292"},"content":"            br.append(br.append(String.format(format, intervalCount, t.toString())));","lastModifiedDate":"2023-10-25"},{"lineNumber":52,"author":{"gitId":"ZD292"},"content":"            intervalCount++;","lastModifiedDate":"2023-10-25"},{"lineNumber":53,"author":{"gitId":"ZD292"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":54,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":55,"author":{"gitId":"ZD292"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":56,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":57,"author":{"gitId":"ZD292"},"content":"    public FreeTime findOverlap(FreeTime otherTime, Duration duration) {","lastModifiedDate":"2023-10-25"},{"lineNumber":58,"author":{"gitId":"ZD292"},"content":"        // 4 steps, sort by start time, min start min end 2 pointers, get overlap, interval \u003e\u003d duration check","lastModifiedDate":"2023-10-25"},{"lineNumber":59,"author":{"gitId":"ZD292"},"content":"        this.internalList.sort(TimeInterval::compareStart);","lastModifiedDate":"2023-10-25"},{"lineNumber":60,"author":{"gitId":"ZD292"},"content":"        otherTime.internalList.sort(TimeInterval::compareEnd);","lastModifiedDate":"2023-10-25"},{"lineNumber":61,"author":{"gitId":"ZD292"},"content":"        FreeTime newFreeTime \u003d new FreeTime();","lastModifiedDate":"2023-10-25"},{"lineNumber":62,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":63,"author":{"gitId":"ZD292"},"content":"        int p1 \u003d 0;","lastModifiedDate":"2023-10-25"},{"lineNumber":64,"author":{"gitId":"ZD292"},"content":"        int p2 \u003d 0;","lastModifiedDate":"2023-10-25"},{"lineNumber":65,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":66,"author":{"gitId":"ZD292"},"content":"        while (p1 \u003c this.internalList.size() \u0026\u0026 p2 \u003c otherTime.internalList.size()) {","lastModifiedDate":"2023-10-25"},{"lineNumber":67,"author":{"gitId":"ZD292"},"content":"            TimeInterval firstListInterval \u003d this.internalList.get(p1);","lastModifiedDate":"2023-10-25"},{"lineNumber":68,"author":{"gitId":"ZD292"},"content":"            TimeInterval secondListInterval \u003d this.internalList.get(p2);","lastModifiedDate":"2023-10-25"},{"lineNumber":69,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":70,"author":{"gitId":"ZD292"},"content":"            boolean overLap \u003d firstListInterval.isTimeIntervalOverlapWithTimeInterval(secondListInterval);","lastModifiedDate":"2023-10-25"},{"lineNumber":71,"author":{"gitId":"ZD292"},"content":"            // given 2 intervals, return the one with smaller end to increment pointer","lastModifiedDate":"2023-10-25"},{"lineNumber":72,"author":{"gitId":"ZD292"},"content":"            TimeInterval intervalWithMaxStart \u003d TimeInterval.getMaxStart(firstListInterval, secondListInterval);","lastModifiedDate":"2023-10-25"},{"lineNumber":73,"author":{"gitId":"ZD292"},"content":"            TimeInterval intervalWithMinEnd \u003d TimeInterval.getMinEnd(firstListInterval, secondListInterval);","lastModifiedDate":"2023-10-25"},{"lineNumber":74,"author":{"gitId":"ZD292"},"content":"            // store the intersect, 2 steps, get intersect, see if can fit duration","lastModifiedDate":"2023-10-25"},{"lineNumber":75,"author":{"gitId":"ZD292"},"content":"            if (overLap) {","lastModifiedDate":"2023-10-25"},{"lineNumber":76,"author":{"gitId":"ZD292"},"content":"                TimeInterval intersect \u003d intervalWithMaxStart.getIntersect(intervalWithMinEnd);","lastModifiedDate":"2023-10-25"},{"lineNumber":77,"author":{"gitId":"ZD292"},"content":"                if (intersect.allows(duration)) {","lastModifiedDate":"2023-10-25"},{"lineNumber":78,"author":{"gitId":"ZD292"},"content":"                    newFreeTime.addTime(intersect);","lastModifiedDate":"2023-10-25"},{"lineNumber":79,"author":{"gitId":"ZD292"},"content":"                }","lastModifiedDate":"2023-10-25"},{"lineNumber":80,"author":{"gitId":"ZD292"},"content":"            }","lastModifiedDate":"2023-10-25"},{"lineNumber":81,"author":{"gitId":"ZD292"},"content":"            // increment pointers","lastModifiedDate":"2023-10-25"},{"lineNumber":82,"author":{"gitId":"ZD292"},"content":"            if (intervalWithMinEnd.equalStartAndEnd(firstListInterval)) {","lastModifiedDate":"2023-10-25"},{"lineNumber":83,"author":{"gitId":"ZD292"},"content":"                p1++;","lastModifiedDate":"2023-10-25"},{"lineNumber":84,"author":{"gitId":"ZD292"},"content":"            } else {","lastModifiedDate":"2023-10-25"},{"lineNumber":85,"author":{"gitId":"ZD292"},"content":"                p2++;","lastModifiedDate":"2023-10-25"},{"lineNumber":86,"author":{"gitId":"ZD292"},"content":"            }","lastModifiedDate":"2023-10-25"},{"lineNumber":87,"author":{"gitId":"ZD292"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":88,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":89,"author":{"gitId":"ZD292"},"content":"        return newFreeTime;","lastModifiedDate":"2023-10-25"},{"lineNumber":90,"author":{"gitId":"ZD292"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":91,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":92,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":93,"author":{"gitId":"Kailash201"},"content":"    @Override","lastModifiedDate":"2023-10-21"},{"lineNumber":94,"author":{"gitId":"Kailash201"},"content":"    public Iterator\u003cTimeInterval\u003e iterator() {","lastModifiedDate":"2023-10-21"},{"lineNumber":95,"author":{"gitId":"Kailash201"},"content":"        return this.internalList.iterator();","lastModifiedDate":"2023-10-21"},{"lineNumber":96,"author":{"gitId":"Kailash201"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":97,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":98,"author":{"gitId":"Kailash201"},"content":"}","lastModifiedDate":"2023-10-21"}],"authorContributionMap":{"Kailash201":27,"ZD292":60,"nicholastng010601":11}},{"path":"src/main/java/seedu/address/model/GroupNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ZD292"},"content":"package seedu.address.model;","lastModifiedDate":"2023-10-10"},{"lineNumber":2,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":3,"author":{"gitId":"ZD292"},"content":"/**","lastModifiedDate":"2023-10-10"},{"lineNumber":4,"author":{"gitId":"ZD292"},"content":" * Signals that the operation is unable to find the specified group.","lastModifiedDate":"2023-10-10"},{"lineNumber":5,"author":{"gitId":"ZD292"},"content":" */","lastModifiedDate":"2023-10-10"},{"lineNumber":6,"author":{"gitId":"ZD292"},"content":"public class GroupNotFoundException extends RuntimeException {","lastModifiedDate":"2023-10-10"},{"lineNumber":7,"author":{"gitId":"ZD292"},"content":"}","lastModifiedDate":"2023-10-10"}],"authorContributionMap":{"ZD292":7}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"Kailash201"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":8,"author":{"gitId":"ZD292"},"content":"import javafx.util.Pair;","lastModifiedDate":"2023-10-10"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"ZD292"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-10"},{"lineNumber":11,"author":{"gitId":"ZD292"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2023-10-10"},{"lineNumber":12,"author":{"gitId":"coderhuang559"},"content":"import seedu.address.model.group.GroupRemark;","lastModifiedDate":"2023-10-20"},{"lineNumber":13,"author":{"gitId":"Kailash201"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-10-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"Kailash201"},"content":"    /**","lastModifiedDate":"2023-10-22"},{"lineNumber":21,"author":{"gitId":"Kailash201"},"content":"     * {@code Predicate} that always evaluate to true","lastModifiedDate":"2023-10-22"},{"lineNumber":22,"author":{"gitId":"Kailash201"},"content":"     */","lastModifiedDate":"2023-10-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","lastModifiedDate":"2018-01-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    void setAddressBook(ReadOnlyAddressBook addressBook);","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":60,"author":{"gitId":"Kailash201"},"content":"    /**","lastModifiedDate":"2023-10-22"},{"lineNumber":61,"author":{"gitId":"Kailash201"},"content":"     * Returns the AddressBook","lastModifiedDate":"2023-10-22"},{"lineNumber":62,"author":{"gitId":"Kailash201"},"content":"     */","lastModifiedDate":"2023-10-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":65,"author":{"gitId":"nicholastng010601"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":66,"author":{"gitId":"nicholastng010601"},"content":"     * Returns the list of fields of {@code person} that exists in the address book.","lastModifiedDate":"2023-10-13"},{"lineNumber":67,"author":{"gitId":"nicholastng010601"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":68,"author":{"gitId":"nicholastng010601"},"content":"    boolean[] usedFields(Person person);","lastModifiedDate":"2023-10-13"},{"lineNumber":69,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    boolean hasPerson(Person person);","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":75,"author":{"gitId":"Kailash201"},"content":"    boolean hasPerson(Name personName);","lastModifiedDate":"2023-10-21"},{"lineNumber":76,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Deletes the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * The person must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":81,"author":{"gitId":"lerxuann"},"content":"    Person deletePerson(String personName) throws CommandException;","lastModifiedDate":"2023-10-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * Adds the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * {@code person} must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    void addPerson(Person person);","lastModifiedDate":"2018-08-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    void setPerson(Person target, Person editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":96,"author":{"gitId":"Kailash201"},"content":"    /**","lastModifiedDate":"2023-10-22"},{"lineNumber":97,"author":{"gitId":"Kailash201"},"content":"     * Returns an unmodifiable view of the filtered person list","lastModifiedDate":"2023-10-22"},{"lineNumber":98,"author":{"gitId":"Kailash201"},"content":"     */","lastModifiedDate":"2023-10-22"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":101,"author":{"gitId":"Kailash201"},"content":"    /**","lastModifiedDate":"2023-10-22"},{"lineNumber":102,"author":{"gitId":"Kailash201"},"content":"     * Returns an unmodifiable view of the filtered group list","lastModifiedDate":"2023-10-22"},{"lineNumber":103,"author":{"gitId":"Kailash201"},"content":"     */","lastModifiedDate":"2023-10-22"},{"lineNumber":104,"author":{"gitId":"ZD292"},"content":"    ObservableList\u003cGroup\u003e getFilteredGroupList();","lastModifiedDate":"2023-10-10"},{"lineNumber":105,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * Updates the filter of the filtered person list to filter by the given {@code predicate}.","lastModifiedDate":"2017-08-05"},{"lineNumber":108,"author":{"gitId":"Kailash201"},"content":"     *","lastModifiedDate":"2023-10-22"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2018-01-10"},{"lineNumber":112,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":113,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":114,"author":{"gitId":"nicholastng010601"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":115,"author":{"gitId":"nicholastng010601"},"content":"     * Returns true if a group with the same identity as {@code group} exists in the address book.","lastModifiedDate":"2023-10-03"},{"lineNumber":116,"author":{"gitId":"nicholastng010601"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":117,"author":{"gitId":"nicholastng010601"},"content":"    public boolean hasGroup(Group group);","lastModifiedDate":"2023-10-03"},{"lineNumber":118,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":119,"author":{"gitId":"lerxuann"},"content":"    public Group findGroup(String groupName) throws CommandException;","lastModifiedDate":"2023-10-25"},{"lineNumber":120,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":121,"author":{"gitId":"nicholastng010601"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":122,"author":{"gitId":"nicholastng010601"},"content":"     * Adds a group to the address book.","lastModifiedDate":"2023-10-03"},{"lineNumber":123,"author":{"gitId":"nicholastng010601"},"content":"     * The group must not already exist in the address book.","lastModifiedDate":"2023-10-03"},{"lineNumber":124,"author":{"gitId":"nicholastng010601"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":125,"author":{"gitId":"nicholastng010601"},"content":"    public void addGroup(Group g);","lastModifiedDate":"2023-10-03"},{"lineNumber":126,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":127,"author":{"gitId":"nicholastng010601"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":128,"author":{"gitId":"nicholastng010601"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2023-10-03"},{"lineNumber":129,"author":{"gitId":"nicholastng010601"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2023-10-03"},{"lineNumber":130,"author":{"gitId":"nicholastng010601"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":131,"author":{"gitId":"lerxuann"},"content":"    public Group deleteGroup(String groupName) throws CommandException;","lastModifiedDate":"2023-10-19"},{"lineNumber":132,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":133,"author":{"gitId":"ZD292"},"content":"    /**","lastModifiedDate":"2023-10-10"},{"lineNumber":134,"author":{"gitId":"ZD292"},"content":"     * Assign person to group and return corresponding person and group object in a pair","lastModifiedDate":"2023-10-10"},{"lineNumber":135,"author":{"gitId":"Kailash201"},"content":"     *","lastModifiedDate":"2023-10-22"},{"lineNumber":136,"author":{"gitId":"ZD292"},"content":"     * @param personName String representing person name","lastModifiedDate":"2023-10-10"},{"lineNumber":137,"author":{"gitId":"ZD292"},"content":"     * @param groupName  String representing group name","lastModifiedDate":"2023-10-10"},{"lineNumber":138,"author":{"gitId":"ZD292"},"content":"     * @return Pair representing Person and Group object of interest","lastModifiedDate":"2023-10-10"},{"lineNumber":139,"author":{"gitId":"ZD292"},"content":"     */","lastModifiedDate":"2023-10-10"},{"lineNumber":140,"author":{"gitId":"ZD292"},"content":"    public Pair\u003cPerson, Group\u003e groupPerson(String personName, String groupName) throws CommandException;","lastModifiedDate":"2023-10-10"},{"lineNumber":141,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":142,"author":{"gitId":"coderhuang559"},"content":"    /**","lastModifiedDate":"2023-10-11"},{"lineNumber":143,"author":{"gitId":"coderhuang559"},"content":"     * Unassign group and return corresponding person and group object in a pair","lastModifiedDate":"2023-10-11"},{"lineNumber":144,"author":{"gitId":"Kailash201"},"content":"     *","lastModifiedDate":"2023-10-22"},{"lineNumber":145,"author":{"gitId":"coderhuang559"},"content":"     * @param personName String representing person name","lastModifiedDate":"2023-10-11"},{"lineNumber":146,"author":{"gitId":"coderhuang559"},"content":"     * @param groupName  String representing group name","lastModifiedDate":"2023-10-11"},{"lineNumber":147,"author":{"gitId":"coderhuang559"},"content":"     * @return Pair representing Person and Group object of interest","lastModifiedDate":"2023-10-11"},{"lineNumber":148,"author":{"gitId":"coderhuang559"},"content":"     */","lastModifiedDate":"2023-10-11"},{"lineNumber":149,"author":{"gitId":"coderhuang559"},"content":"    Pair\u003cPerson, Group\u003e ungroupPerson(String personName, String groupName) throws CommandException;","lastModifiedDate":"2023-10-11"},{"lineNumber":150,"author":{"gitId":"coderhuang559"},"content":"    Group addGroupRemark(String groupName, GroupRemark groupRemark) throws CommandException;","lastModifiedDate":"2023-10-20"},{"lineNumber":151,"author":{"gitId":"nicholastng010601"},"content":"    void addTimeToPerson(Name toAddPerson, ArrayList\u003cTimeInterval\u003e toAddTime) throws CommandException;","lastModifiedDate":"2023-10-25"},{"lineNumber":152,"author":{"gitId":"nicholastng010601"},"content":"    TimeIntervalList getTimeFromPerson(Name personName) throws CommandException;","lastModifiedDate":"2023-10-25"},{"lineNumber":153,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":154,"author":{"gitId":"nicholastng010601"},"content":"    void addTimeToGroup(Group toAdd, ArrayList\u003cTimeInterval\u003e toAddTime) throws CommandException;","lastModifiedDate":"2023-10-25"},{"lineNumber":155,"author":{"gitId":"nicholastng010601"},"content":"    void deleteTimeFromPerson(Name personName, ArrayList\u003cTimeInterval\u003e toDeleteTime) throws CommandException;","lastModifiedDate":"2023-10-25"},{"lineNumber":156,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":157,"author":{"gitId":"nicholastng010601"},"content":"    void deleteTimeFromGroup(Group group, ArrayList\u003cTimeInterval\u003e toDeleteTime) throws CommandException;","lastModifiedDate":"2023-10-25"},{"lineNumber":158,"author":{"gitId":"nicholastng010601"},"content":"    TimeIntervalList getTimeFromGroup(Group group) throws CommandException;","lastModifiedDate":"2023-10-25"},{"lineNumber":159,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":160,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"Kailash201":19,"coderhuang559":9,"ZD292":16,"nicholastng010601":29,"lerxuann":4,"-":83}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"Kailash201"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":13,"author":{"gitId":"ZD292"},"content":"import javafx.util.Pair;","lastModifiedDate":"2023-10-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":16,"author":{"gitId":"ZD292"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-10"},{"lineNumber":17,"author":{"gitId":"ZD292"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2023-10-10"},{"lineNumber":18,"author":{"gitId":"coderhuang559"},"content":"import seedu.address.model.group.GroupRemark;","lastModifiedDate":"2023-10-20"},{"lineNumber":19,"author":{"gitId":"ZD292"},"content":"import seedu.address.model.group.exceptions.GroupNotFoundException;","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"Kailash201"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-10-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final FilteredList\u003cPerson\u003e filteredPersons;","lastModifiedDate":"2018-01-10"},{"lineNumber":32,"author":{"gitId":"ZD292"},"content":"    private final FilteredList\u003cGroup\u003e filteredGroups;","lastModifiedDate":"2023-10-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2016-12-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        requireAllNonNull(addressBook, userPrefs);","lastModifiedDate":"2017-05-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2016-12-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        filteredPersons \u003d new FilteredList\u003c\u003e(this.addressBook.getPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":44,"author":{"gitId":"ZD292"},"content":"        filteredGroups \u003d new FilteredList\u003c\u003e(this.addressBook.getGroupList());","lastModifiedDate":"2023-10-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        this(new AddressBook(), new UserPrefs());","lastModifiedDate":"2016-09-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        this.addressBook.resetData(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2016-09-21"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        return addressBook.hasPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-10-21"},{"lineNumber":105,"author":{"gitId":"Kailash201"},"content":"    public boolean hasPerson(Name personName) {","lastModifiedDate":"2023-10-21"},{"lineNumber":106,"author":{"gitId":"Kailash201"},"content":"        requireNonNull(personName);","lastModifiedDate":"2023-10-21"},{"lineNumber":107,"author":{"gitId":"Kailash201"},"content":"        return addressBook.hasPerson(personName);","lastModifiedDate":"2023-10-21"},{"lineNumber":108,"author":{"gitId":"Kailash201"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":109,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":110,"author":{"gitId":"nicholastng010601"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":111,"author":{"gitId":"nicholastng010601"},"content":"    public boolean[] usedFields(Person person) {","lastModifiedDate":"2023-10-13"},{"lineNumber":112,"author":{"gitId":"nicholastng010601"},"content":"        requireNonNull(person);","lastModifiedDate":"2023-10-13"},{"lineNumber":113,"author":{"gitId":"nicholastng010601"},"content":"        return addressBook.usedFields(person);","lastModifiedDate":"2023-10-13"},{"lineNumber":114,"author":{"gitId":"nicholastng010601"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":115,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":117,"author":{"gitId":"lerxuann"},"content":"    public Person deletePerson(String personName) throws CommandException {","lastModifiedDate":"2023-10-19"},{"lineNumber":118,"author":{"gitId":"lerxuann"},"content":"        Person person \u003d addressBook.getPerson(personName);","lastModifiedDate":"2023-10-19"},{"lineNumber":119,"author":{"gitId":"lerxuann"},"content":"        addressBook.removePerson(person);","lastModifiedDate":"2023-10-19"},{"lineNumber":120,"author":{"gitId":"lerxuann"},"content":"        return person;","lastModifiedDate":"2023-10-19"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        addressBook.addPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2017-06-07"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        addressBook.setPerson(target, editedPerson);","lastModifiedDate":"2019-01-25"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":136,"author":{"gitId":"nicholastng010601"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":137,"author":{"gitId":"nicholastng010601"},"content":"     * Returns true if a group with the same identity as {@code group} exists in the address book.","lastModifiedDate":"2023-10-03"},{"lineNumber":138,"author":{"gitId":"nicholastng010601"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":139,"author":{"gitId":"nicholastng010601"},"content":"    public boolean hasGroup(Group group) {","lastModifiedDate":"2023-10-03"},{"lineNumber":140,"author":{"gitId":"nicholastng010601"},"content":"        requireNonNull(group);","lastModifiedDate":"2023-10-03"},{"lineNumber":141,"author":{"gitId":"nicholastng010601"},"content":"        return addressBook.hasGroup(group);","lastModifiedDate":"2023-10-03"},{"lineNumber":142,"author":{"gitId":"nicholastng010601"},"content":"    }","lastModifiedDate":"2023-10-03"},{"lineNumber":143,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":144,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":145,"author":{"gitId":"nicholastng010601"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":146,"author":{"gitId":"nicholastng010601"},"content":"     * Adds a group to the address book.","lastModifiedDate":"2023-10-03"},{"lineNumber":147,"author":{"gitId":"nicholastng010601"},"content":"     * The group must not already exist in the address book.","lastModifiedDate":"2023-10-03"},{"lineNumber":148,"author":{"gitId":"nicholastng010601"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":149,"author":{"gitId":"nicholastng010601"},"content":"    public void addGroup(Group group) {","lastModifiedDate":"2023-10-03"},{"lineNumber":150,"author":{"gitId":"nicholastng010601"},"content":"        addressBook.addGroup(group);","lastModifiedDate":"2023-10-03"},{"lineNumber":151,"author":{"gitId":"nicholastng010601"},"content":"    }","lastModifiedDate":"2023-10-03"},{"lineNumber":152,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":153,"author":{"gitId":"nicholastng010601"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":154,"author":{"gitId":"nicholastng010601"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2023-10-03"},{"lineNumber":155,"author":{"gitId":"nicholastng010601"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2023-10-03"},{"lineNumber":156,"author":{"gitId":"nicholastng010601"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":157,"author":{"gitId":"lerxuann"},"content":"    public Group deleteGroup(String groupName) throws CommandException {","lastModifiedDate":"2023-10-19"},{"lineNumber":158,"author":{"gitId":"lerxuann"},"content":"        Group group \u003d addressBook.getGroup(groupName);","lastModifiedDate":"2023-10-19"},{"lineNumber":159,"author":{"gitId":"nicholastng010601"},"content":"        addressBook.removeGroup(group);","lastModifiedDate":"2023-10-03"},{"lineNumber":160,"author":{"gitId":"nicholastng010601"},"content":"        forceUpdateList();","lastModifiedDate":"2023-10-25"},{"lineNumber":161,"author":{"gitId":"lerxuann"},"content":"        return group;","lastModifiedDate":"2023-10-19"},{"lineNumber":162,"author":{"gitId":"nicholastng010601"},"content":"    }","lastModifiedDate":"2023-10-03"},{"lineNumber":163,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":164,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-10-12"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":168,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2018-01-10"},{"lineNumber":169,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":170,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        return filteredPersons;","lastModifiedDate":"2018-12-09"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":176,"author":{"gitId":"ZD292"},"content":"    /**","lastModifiedDate":"2023-10-10"},{"lineNumber":177,"author":{"gitId":"ZD292"},"content":"     * Returns an unmodifiable view of the list of {@code Group} backed by the internal list of","lastModifiedDate":"2023-10-10"},{"lineNumber":178,"author":{"gitId":"ZD292"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2023-10-10"},{"lineNumber":179,"author":{"gitId":"ZD292"},"content":"     */","lastModifiedDate":"2023-10-10"},{"lineNumber":180,"author":{"gitId":"ZD292"},"content":"    @Override","lastModifiedDate":"2023-10-10"},{"lineNumber":181,"author":{"gitId":"ZD292"},"content":"    public ObservableList\u003cGroup\u003e getFilteredGroupList() {","lastModifiedDate":"2023-10-10"},{"lineNumber":182,"author":{"gitId":"ZD292"},"content":"        return filteredGroups;","lastModifiedDate":"2023-10-10"},{"lineNumber":183,"author":{"gitId":"Kailash201"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":184,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":185,"author":{"gitId":"lerxuann"},"content":"    public Group findGroup(String groupName) throws CommandException {","lastModifiedDate":"2023-10-25"},{"lineNumber":186,"author":{"gitId":"lerxuann"},"content":"        return addressBook.getGroup(groupName);","lastModifiedDate":"2023-10-25"},{"lineNumber":187,"author":{"gitId":"lerxuann"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":188,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":189,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        filteredPersons.setPredicate(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":196,"author":{"gitId":"nicholastng010601"},"content":"    public void updateFilteredGroupList(Predicate\u003cGroup\u003e predicate) {","lastModifiedDate":"2023-10-16"},{"lineNumber":197,"author":{"gitId":"nicholastng010601"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2023-10-16"},{"lineNumber":198,"author":{"gitId":"nicholastng010601"},"content":"        filteredGroups.setPredicate(predicate);","lastModifiedDate":"2023-10-16"},{"lineNumber":199,"author":{"gitId":"nicholastng010601"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":200,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":201,"author":{"gitId":"ZD292"},"content":"    @Override","lastModifiedDate":"2023-10-10"},{"lineNumber":202,"author":{"gitId":"ZD292"},"content":"    public Pair\u003cPerson, Group\u003e groupPerson(String personName, String groupName) throws CommandException {","lastModifiedDate":"2023-10-10"},{"lineNumber":203,"author":{"gitId":"ZD292"},"content":"        // both throw exception if not exists exact match","lastModifiedDate":"2023-10-10"},{"lineNumber":204,"author":{"gitId":"ZD292"},"content":"        Person person \u003d addressBook.getPerson(personName);","lastModifiedDate":"2023-10-10"},{"lineNumber":205,"author":{"gitId":"ZD292"},"content":"        Group group \u003d addressBook.getGroup(groupName);","lastModifiedDate":"2023-10-10"},{"lineNumber":206,"author":{"gitId":"ZD292"},"content":"        this.assignGroup(person, group);","lastModifiedDate":"2023-10-10"},{"lineNumber":207,"author":{"gitId":"Kailash201"},"content":"        forceUpdateList();","lastModifiedDate":"2023-10-12"},{"lineNumber":208,"author":{"gitId":"ZD292"},"content":"        Pair\u003cPerson, Group\u003e output \u003d new Pair\u003c\u003e(person, group);","lastModifiedDate":"2023-10-10"},{"lineNumber":209,"author":{"gitId":"ZD292"},"content":"        return output;","lastModifiedDate":"2023-10-10"},{"lineNumber":210,"author":{"gitId":"ZD292"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":211,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":212,"author":{"gitId":"ZD292"},"content":"    /**","lastModifiedDate":"2023-10-10"},{"lineNumber":213,"author":{"gitId":"ZD292"},"content":"     * Assign person to group","lastModifiedDate":"2023-10-10"},{"lineNumber":214,"author":{"gitId":"Kailash201"},"content":"     *","lastModifiedDate":"2023-10-22"},{"lineNumber":215,"author":{"gitId":"ZD292"},"content":"     * @param person person to be grouped","lastModifiedDate":"2023-10-10"},{"lineNumber":216,"author":{"gitId":"ZD292"},"content":"     * @param group  group in consideration","lastModifiedDate":"2023-10-10"},{"lineNumber":217,"author":{"gitId":"ZD292"},"content":"     * @throws CommandException if person has already been assigned to group","lastModifiedDate":"2023-10-10"},{"lineNumber":218,"author":{"gitId":"ZD292"},"content":"     */","lastModifiedDate":"2023-10-10"},{"lineNumber":219,"author":{"gitId":"ZD292"},"content":"    private void assignGroup(Person person, Group group) throws CommandException {","lastModifiedDate":"2023-10-10"},{"lineNumber":220,"author":{"gitId":"ZD292"},"content":"        group.addPerson(person);","lastModifiedDate":"2023-10-10"},{"lineNumber":221,"author":{"gitId":"ZD292"},"content":"        person.addGroup(group);","lastModifiedDate":"2023-10-10"},{"lineNumber":222,"author":{"gitId":"ZD292"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":223,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":224,"author":{"gitId":"coderhuang559"},"content":"    @Override","lastModifiedDate":"2023-10-11"},{"lineNumber":225,"author":{"gitId":"coderhuang559"},"content":"    public Pair\u003cPerson, Group\u003e ungroupPerson(String personName, String groupName) throws CommandException {","lastModifiedDate":"2023-10-11"},{"lineNumber":226,"author":{"gitId":"coderhuang559"},"content":"        Person person \u003d addressBook.getPerson(personName);","lastModifiedDate":"2023-10-11"},{"lineNumber":227,"author":{"gitId":"coderhuang559"},"content":"        Group group \u003d addressBook.getGroup(groupName);","lastModifiedDate":"2023-10-11"},{"lineNumber":228,"author":{"gitId":"nicholastng010601"},"content":"        person.removeGroup(group);","lastModifiedDate":"2023-10-26"},{"lineNumber":229,"author":{"gitId":"nicholastng010601"},"content":"        group.removePerson(person);","lastModifiedDate":"2023-10-26"},{"lineNumber":230,"author":{"gitId":"coderhuang559"},"content":"        this.unassignGroup(person, group);","lastModifiedDate":"2023-10-11"},{"lineNumber":231,"author":{"gitId":"Kailash201"},"content":"        forceUpdateList();","lastModifiedDate":"2023-10-12"},{"lineNumber":232,"author":{"gitId":"coderhuang559"},"content":"        Pair\u003cPerson, Group\u003e output \u003d new Pair\u003c\u003e(person, group);","lastModifiedDate":"2023-10-11"},{"lineNumber":233,"author":{"gitId":"coderhuang559"},"content":"        return output;","lastModifiedDate":"2023-10-11"},{"lineNumber":234,"author":{"gitId":"coderhuang559"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":235,"author":{"gitId":"coderhuang559"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":236,"author":{"gitId":"Kailash201"},"content":"    @Override","lastModifiedDate":"2023-10-21"},{"lineNumber":237,"author":{"gitId":"nicholastng010601"},"content":"    public void addTimeToPerson(Name toAddPerson, ArrayList\u003cTimeInterval\u003e toAddTime) throws CommandException {","lastModifiedDate":"2023-10-25"},{"lineNumber":238,"author":{"gitId":"Kailash201"},"content":"        requireNonNull(toAddPerson);","lastModifiedDate":"2023-10-21"},{"lineNumber":239,"author":{"gitId":"Kailash201"},"content":"        Person person \u003d addressBook.getPerson(toAddPerson.fullName);","lastModifiedDate":"2023-10-21"},{"lineNumber":240,"author":{"gitId":"nicholastng010601"},"content":"        try {","lastModifiedDate":"2023-10-25"},{"lineNumber":241,"author":{"gitId":"nicholastng010601"},"content":"            person.addFreeTime(toAddTime);","lastModifiedDate":"2023-10-25"},{"lineNumber":242,"author":{"gitId":"nicholastng010601"},"content":"        } catch (CommandException e) {","lastModifiedDate":"2023-10-25"},{"lineNumber":243,"author":{"gitId":"nicholastng010601"},"content":"            forceUpdateList();","lastModifiedDate":"2023-10-25"},{"lineNumber":244,"author":{"gitId":"nicholastng010601"},"content":"            throw new CommandException(e.getMessage());","lastModifiedDate":"2023-10-25"},{"lineNumber":245,"author":{"gitId":"nicholastng010601"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":246,"author":{"gitId":"Kailash201"},"content":"        forceUpdateList();","lastModifiedDate":"2023-10-21"},{"lineNumber":247,"author":{"gitId":"Kailash201"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":248,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":249,"author":{"gitId":"nicholastng010601"},"content":"    @Override","lastModifiedDate":"2023-10-24"},{"lineNumber":250,"author":{"gitId":"nicholastng010601"},"content":"    public void deleteTimeFromPerson(Name personName,","lastModifiedDate":"2023-10-25"},{"lineNumber":251,"author":{"gitId":"nicholastng010601"},"content":"                                           ArrayList\u003cTimeInterval\u003e toDeleteTime) throws CommandException {","lastModifiedDate":"2023-10-25"},{"lineNumber":252,"author":{"gitId":"nicholastng010601"},"content":"        requireNonNull(personName);","lastModifiedDate":"2023-10-24"},{"lineNumber":253,"author":{"gitId":"nicholastng010601"},"content":"        Person person \u003d addressBook.getPerson(personName.fullName);","lastModifiedDate":"2023-10-24"},{"lineNumber":254,"author":{"gitId":"nicholastng010601"},"content":"        try {","lastModifiedDate":"2023-10-25"},{"lineNumber":255,"author":{"gitId":"nicholastng010601"},"content":"            person.deleteFreeTime(toDeleteTime);","lastModifiedDate":"2023-10-25"},{"lineNumber":256,"author":{"gitId":"nicholastng010601"},"content":"        } catch (CommandException e) {","lastModifiedDate":"2023-10-25"},{"lineNumber":257,"author":{"gitId":"nicholastng010601"},"content":"            forceUpdateList();","lastModifiedDate":"2023-10-25"},{"lineNumber":258,"author":{"gitId":"nicholastng010601"},"content":"            throw new CommandException(e.getMessage());","lastModifiedDate":"2023-10-25"},{"lineNumber":259,"author":{"gitId":"nicholastng010601"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":260,"author":{"gitId":"nicholastng010601"},"content":"        forceUpdateList();","lastModifiedDate":"2023-10-25"},{"lineNumber":261,"author":{"gitId":"nicholastng010601"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":262,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":263,"author":{"gitId":"nicholastng010601"},"content":"    @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":264,"author":{"gitId":"nicholastng010601"},"content":"    public void deleteTimeFromGroup(Group group,","lastModifiedDate":"2023-10-25"},{"lineNumber":265,"author":{"gitId":"nicholastng010601"},"content":"                                     ArrayList\u003cTimeInterval\u003e toDeleteTime) throws CommandException {","lastModifiedDate":"2023-10-25"},{"lineNumber":266,"author":{"gitId":"nicholastng010601"},"content":"        requireNonNull(group);","lastModifiedDate":"2023-10-25"},{"lineNumber":267,"author":{"gitId":"nicholastng010601"},"content":"        Group groupToDeleteTime \u003d addressBook.getGroup(group.getGroupName());","lastModifiedDate":"2023-10-25"},{"lineNumber":268,"author":{"gitId":"nicholastng010601"},"content":"        try {","lastModifiedDate":"2023-10-25"},{"lineNumber":269,"author":{"gitId":"nicholastng010601"},"content":"            groupToDeleteTime.deleteTime(toDeleteTime);","lastModifiedDate":"2023-10-25"},{"lineNumber":270,"author":{"gitId":"nicholastng010601"},"content":"        } catch (CommandException e) {","lastModifiedDate":"2023-10-25"},{"lineNumber":271,"author":{"gitId":"nicholastng010601"},"content":"            forceUpdateList();","lastModifiedDate":"2023-10-25"},{"lineNumber":272,"author":{"gitId":"nicholastng010601"},"content":"            throw new CommandException(e.getMessage());","lastModifiedDate":"2023-10-25"},{"lineNumber":273,"author":{"gitId":"nicholastng010601"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":274,"author":{"gitId":"Kailash201"},"content":"        forceUpdateList();","lastModifiedDate":"2023-10-21"},{"lineNumber":275,"author":{"gitId":"Kailash201"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":276,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":277,"author":{"gitId":"coderhuang559"},"content":"    /**","lastModifiedDate":"2023-10-11"},{"lineNumber":278,"author":{"gitId":"coderhuang559"},"content":"     * Assign person to group","lastModifiedDate":"2023-10-11"},{"lineNumber":279,"author":{"gitId":"Kailash201"},"content":"     *","lastModifiedDate":"2023-10-22"},{"lineNumber":280,"author":{"gitId":"coderhuang559"},"content":"     * @param person person to be grouped","lastModifiedDate":"2023-10-11"},{"lineNumber":281,"author":{"gitId":"coderhuang559"},"content":"     * @param group  group in consideration","lastModifiedDate":"2023-10-11"},{"lineNumber":282,"author":{"gitId":"coderhuang559"},"content":"     * @throws CommandException if person has already been assigned to group","lastModifiedDate":"2023-10-11"},{"lineNumber":283,"author":{"gitId":"coderhuang559"},"content":"     */","lastModifiedDate":"2023-10-11"},{"lineNumber":284,"author":{"gitId":"coderhuang559"},"content":"    private void unassignGroup(Person person, Group group) throws CommandException {","lastModifiedDate":"2023-10-11"},{"lineNumber":285,"author":{"gitId":"coderhuang559"},"content":"        group.removePerson(person);","lastModifiedDate":"2023-10-11"},{"lineNumber":286,"author":{"gitId":"Kailash201"},"content":"        person.removeGroup(group);","lastModifiedDate":"2023-10-12"},{"lineNumber":287,"author":{"gitId":"coderhuang559"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":288,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":289,"author":{"gitId":"coderhuang559"},"content":"    public Group addGroupRemark(String groupName, GroupRemark groupRemark) throws CommandException {","lastModifiedDate":"2023-10-20"},{"lineNumber":290,"author":{"gitId":"coderhuang559"},"content":"        Group group \u003d addressBook.getGroup(groupName);","lastModifiedDate":"2023-10-20"},{"lineNumber":291,"author":{"gitId":"coderhuang559"},"content":"        group.setGroupRemark(groupRemark);","lastModifiedDate":"2023-10-20"},{"lineNumber":292,"author":{"gitId":"coderhuang559"},"content":"        return group;","lastModifiedDate":"2023-10-20"},{"lineNumber":293,"author":{"gitId":"coderhuang559"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":294,"author":{"gitId":"coderhuang559"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":295,"author":{"gitId":"nicholastng010601"},"content":"    public TimeIntervalList getTimeFromPerson(Name personName) throws CommandException {","lastModifiedDate":"2023-10-25"},{"lineNumber":296,"author":{"gitId":"coderhuang559"},"content":"        requireNonNull(personName);","lastModifiedDate":"2023-10-25"},{"lineNumber":297,"author":{"gitId":"coderhuang559"},"content":"        Person person \u003d addressBook.getPerson(personName.toString());","lastModifiedDate":"2023-10-25"},{"lineNumber":298,"author":{"gitId":"nicholastng010601"},"content":"        return person.getTime();","lastModifiedDate":"2023-10-25"},{"lineNumber":299,"author":{"gitId":"coderhuang559"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":300,"author":{"gitId":"coderhuang559"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":301,"author":{"gitId":"nicholastng010601"},"content":"    public void addTimeToGroup(Group toAdd, ArrayList\u003cTimeInterval\u003e toAddTime) throws CommandException {","lastModifiedDate":"2023-10-25"},{"lineNumber":302,"author":{"gitId":"coderhuang559"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2023-10-25"},{"lineNumber":303,"author":{"gitId":"coderhuang559"},"content":"        Group groupToAdd \u003d addressBook.getGroup(toAdd.getGroupName());","lastModifiedDate":"2023-10-25"},{"lineNumber":304,"author":{"gitId":"nicholastng010601"},"content":"        try {","lastModifiedDate":"2023-10-25"},{"lineNumber":305,"author":{"gitId":"nicholastng010601"},"content":"            groupToAdd.addTime(toAddTime);","lastModifiedDate":"2023-10-25"},{"lineNumber":306,"author":{"gitId":"nicholastng010601"},"content":"        } catch (CommandException e) {","lastModifiedDate":"2023-10-25"},{"lineNumber":307,"author":{"gitId":"nicholastng010601"},"content":"            forceUpdateList();","lastModifiedDate":"2023-10-25"},{"lineNumber":308,"author":{"gitId":"nicholastng010601"},"content":"            throw new CommandException(e.getMessage());","lastModifiedDate":"2023-10-25"},{"lineNumber":309,"author":{"gitId":"nicholastng010601"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":310,"author":{"gitId":"coderhuang559"},"content":"        forceUpdateList();","lastModifiedDate":"2023-10-25"},{"lineNumber":311,"author":{"gitId":"coderhuang559"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":312,"author":{"gitId":"coderhuang559"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":313,"author":{"gitId":"nicholastng010601"},"content":"    public TimeIntervalList getTimeFromGroup(Group group) throws CommandException {","lastModifiedDate":"2023-10-25"},{"lineNumber":314,"author":{"gitId":"coderhuang559"},"content":"        requireNonNull(group);","lastModifiedDate":"2023-10-25"},{"lineNumber":315,"author":{"gitId":"coderhuang559"},"content":"        Group toAdd \u003d addressBook.getGroup(group.getGroupName());","lastModifiedDate":"2023-10-25"},{"lineNumber":316,"author":{"gitId":"nicholastng010601"},"content":"        return toAdd.getTime();","lastModifiedDate":"2023-10-25"},{"lineNumber":317,"author":{"gitId":"coderhuang559"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":318,"author":{"gitId":"coderhuang559"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":319,"author":{"gitId":"coderhuang559"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":320,"author":{"gitId":"coderhuang559"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":321,"author":{"gitId":"Kailash201"},"content":"    private void forceUpdateList() {","lastModifiedDate":"2023-10-12"},{"lineNumber":322,"author":{"gitId":"Kailash201"},"content":"        updateFilteredPersonList(user -\u003e false);","lastModifiedDate":"2023-10-12"},{"lineNumber":323,"author":{"gitId":"Kailash201"},"content":"        updateFilteredPersonList(user -\u003e true);","lastModifiedDate":"2023-10-12"},{"lineNumber":324,"author":{"gitId":"Kailash201"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":325,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":326,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":327,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-07-13"},{"lineNumber":328,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":329,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":330,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":331,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":332,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":333,"author":{"gitId":"-"},"content":"        if (!(other instanceof ModelManager)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":334,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":335,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":336,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":337,"author":{"gitId":"-"},"content":"        ModelManager otherModelManager \u003d (ModelManager) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":338,"author":{"gitId":"-"},"content":"        return addressBook.equals(otherModelManager.addressBook)","lastModifiedDate":"2023-07-13"},{"lineNumber":339,"author":{"gitId":"-"},"content":"            \u0026\u0026 userPrefs.equals(otherModelManager.userPrefs)","lastModifiedDate":"2023-07-13"},{"lineNumber":340,"author":{"gitId":"-"},"content":"            \u0026\u0026 filteredPersons.equals(otherModelManager.filteredPersons);","lastModifiedDate":"2023-07-13"},{"lineNumber":341,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":342,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":343,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Kailash201":27,"coderhuang559":40,"ZD292":40,"nicholastng010601":80,"lerxuann":10,"-":146}},{"path":"src/main/java/seedu/address/model/ReadOnlyAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"ZD292"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-10"},{"lineNumber":5,"author":{"gitId":"ZD292"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2023-10-10"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Unmodifiable view of an address book","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public interface ReadOnlyAddressBook {","lastModifiedDate":"2019-01-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the persons list.","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * This list will not contain any duplicate persons.","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"ZD292"},"content":"    ObservableList\u003cGroup\u003e getGroupList();","lastModifiedDate":"2023-10-10"},{"lineNumber":20,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"ZD292":4,"-":17}},{"path":"src/main/java/seedu/address/model/Time.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Kailash201"},"content":"package seedu.address.model;","lastModifiedDate":"2023-10-21"},{"lineNumber":2,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":3,"author":{"gitId":"Kailash201"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-21"},{"lineNumber":4,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":5,"author":{"gitId":"Kailash201"},"content":"import java.time.DayOfWeek;","lastModifiedDate":"2023-10-21"},{"lineNumber":6,"author":{"gitId":"Kailash201"},"content":"import java.time.LocalTime;","lastModifiedDate":"2023-10-21"},{"lineNumber":7,"author":{"gitId":"Kailash201"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-10-21"},{"lineNumber":8,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":9,"author":{"gitId":"Kailash201"},"content":"public class Time {","lastModifiedDate":"2023-10-21"},{"lineNumber":10,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":11,"author":{"gitId":"nicholastng010601"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"The format of a time should be: mon 1200,\\n\"","lastModifiedDate":"2023-10-23"},{"lineNumber":12,"author":{"gitId":"nicholastng010601"},"content":"        + \" the day is the first three \"","lastModifiedDate":"2023-10-23"},{"lineNumber":13,"author":{"gitId":"Kailash201"},"content":"        + \"letters of a day and the time is in 24 hour format\";","lastModifiedDate":"2023-10-22"},{"lineNumber":14,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":15,"author":{"gitId":"Kailash201"},"content":"    private static final String DAY_REGEX \u003d \"^(?i)(mon|tue|wed|thu|fri|sat|sun)\";","lastModifiedDate":"2023-10-21"},{"lineNumber":16,"author":{"gitId":"Kailash201"},"content":"    private static final String TIME_REGEX \u003d \"(0[0-9]|1[0-9]|2[0-3])[0-5][0-9]\";","lastModifiedDate":"2023-10-21"},{"lineNumber":17,"author":{"gitId":"Kailash201"},"content":"    public static final String VALIDATION_REGEX \u003d DAY_REGEX + \" \" + TIME_REGEX;","lastModifiedDate":"2023-10-21"},{"lineNumber":18,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":19,"author":{"gitId":"Kailash201"},"content":"    private DayOfWeek day;","lastModifiedDate":"2023-10-22"},{"lineNumber":20,"author":{"gitId":"Kailash201"},"content":"    private LocalTime hour;","lastModifiedDate":"2023-10-22"},{"lineNumber":21,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":22,"author":{"gitId":"Kailash201"},"content":"    /**","lastModifiedDate":"2023-10-22"},{"lineNumber":23,"author":{"gitId":"Kailash201"},"content":"     * Time constructor.","lastModifiedDate":"2023-10-22"},{"lineNumber":24,"author":{"gitId":"Kailash201"},"content":"     * @param day The day of the week.","lastModifiedDate":"2023-10-22"},{"lineNumber":25,"author":{"gitId":"Kailash201"},"content":"     * @param hour The time of the day.","lastModifiedDate":"2023-10-22"},{"lineNumber":26,"author":{"gitId":"Kailash201"},"content":"     */","lastModifiedDate":"2023-10-22"},{"lineNumber":27,"author":{"gitId":"Kailash201"},"content":"    public Time(DayOfWeek day, LocalTime hour) {","lastModifiedDate":"2023-10-21"},{"lineNumber":28,"author":{"gitId":"Kailash201"},"content":"        this.day \u003d day;","lastModifiedDate":"2023-10-21"},{"lineNumber":29,"author":{"gitId":"Kailash201"},"content":"        this.hour \u003d hour;","lastModifiedDate":"2023-10-21"},{"lineNumber":30,"author":{"gitId":"Kailash201"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":31,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":32,"author":{"gitId":"Kailash201"},"content":"    /**","lastModifiedDate":"2023-10-22"},{"lineNumber":33,"author":{"gitId":"Kailash201"},"content":"     * Checks if the time is valid.","lastModifiedDate":"2023-10-22"},{"lineNumber":34,"author":{"gitId":"Kailash201"},"content":"     * @param timeString Time in string format.","lastModifiedDate":"2023-10-22"},{"lineNumber":35,"author":{"gitId":"Kailash201"},"content":"     * @return true if the sting is valid.","lastModifiedDate":"2023-10-22"},{"lineNumber":36,"author":{"gitId":"Kailash201"},"content":"     */","lastModifiedDate":"2023-10-22"},{"lineNumber":37,"author":{"gitId":"Kailash201"},"content":"    public static boolean isValidTime(String timeString) {","lastModifiedDate":"2023-10-21"},{"lineNumber":38,"author":{"gitId":"Kailash201"},"content":"        return timeString.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-10-21"},{"lineNumber":39,"author":{"gitId":"Kailash201"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":40,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":41,"author":{"gitId":"ZD292"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":42,"author":{"gitId":"ZD292"},"content":"     * Convert either start or end time of timeInterval into an int","lastModifiedDate":"2023-10-25"},{"lineNumber":43,"author":{"gitId":"ZD292"},"content":"     * Use dayOfWeek enum from 1-7 representing Mon-Sun","lastModifiedDate":"2023-10-25"},{"lineNumber":44,"author":{"gitId":"ZD292"},"content":"      * @return Int representing duration of interval in minute","lastModifiedDate":"2023-10-25"},{"lineNumber":45,"author":{"gitId":"ZD292"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":46,"author":{"gitId":"ZD292"},"content":"    public int getDurationInMin() {","lastModifiedDate":"2023-10-25"},{"lineNumber":47,"author":{"gitId":"ZD292"},"content":"        int durationInMin \u003d this.day.getValue() * 24 * 60 + this.hour.getHour() * 60 + this.hour.getMinute();","lastModifiedDate":"2023-10-25"},{"lineNumber":48,"author":{"gitId":"ZD292"},"content":"        return durationInMin;","lastModifiedDate":"2023-10-25"},{"lineNumber":49,"author":{"gitId":"ZD292"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":50,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":51,"author":{"gitId":"Kailash201"},"content":"    /**","lastModifiedDate":"2023-10-22"},{"lineNumber":52,"author":{"gitId":"Kailash201"},"content":"     * Compares this with another time object.","lastModifiedDate":"2023-10-22"},{"lineNumber":53,"author":{"gitId":"Kailash201"},"content":"     * @param otherTime The other time object.","lastModifiedDate":"2023-10-22"},{"lineNumber":54,"author":{"gitId":"Kailash201"},"content":"     * @return Returns an int to indicate if it less than/more than/equal.","lastModifiedDate":"2023-10-22"},{"lineNumber":55,"author":{"gitId":"Kailash201"},"content":"     */","lastModifiedDate":"2023-10-22"},{"lineNumber":56,"author":{"gitId":"Kailash201"},"content":"    public int compareTo(Time otherTime) {","lastModifiedDate":"2023-10-21"},{"lineNumber":57,"author":{"gitId":"Kailash201"},"content":"        requireNonNull(otherTime);","lastModifiedDate":"2023-10-21"},{"lineNumber":58,"author":{"gitId":"Kailash201"},"content":"        return this.day.compareTo(otherTime.day) \u003d\u003d 0 ? this.hour.compareTo(otherTime.hour)","lastModifiedDate":"2023-10-21"},{"lineNumber":59,"author":{"gitId":"Kailash201"},"content":"            : this.day.compareTo(otherTime.day);","lastModifiedDate":"2023-10-21"},{"lineNumber":60,"author":{"gitId":"Kailash201"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":61,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":62,"author":{"gitId":"Kailash201"},"content":"    @Override","lastModifiedDate":"2023-10-21"},{"lineNumber":63,"author":{"gitId":"Kailash201"},"content":"    public String toString() {","lastModifiedDate":"2023-10-21"},{"lineNumber":64,"author":{"gitId":"Kailash201"},"content":"        return day.toString().substring(0, 3) + \" \" + hour.format(DateTimeFormatter.ofPattern(\"HHmm\"));","lastModifiedDate":"2023-10-21"},{"lineNumber":65,"author":{"gitId":"Kailash201"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":66,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":67,"author":{"gitId":"nicholastng010601"},"content":"    @Override","lastModifiedDate":"2023-10-24"},{"lineNumber":68,"author":{"gitId":"nicholastng010601"},"content":"    public boolean equals(Object object) {","lastModifiedDate":"2023-10-24"},{"lineNumber":69,"author":{"gitId":"nicholastng010601"},"content":"        if (!(object instanceof Time)) {","lastModifiedDate":"2023-10-24"},{"lineNumber":70,"author":{"gitId":"nicholastng010601"},"content":"            return false;","lastModifiedDate":"2023-10-24"},{"lineNumber":71,"author":{"gitId":"nicholastng010601"},"content":"        } else if (object \u003d\u003d this) {","lastModifiedDate":"2023-10-24"},{"lineNumber":72,"author":{"gitId":"nicholastng010601"},"content":"            return true;","lastModifiedDate":"2023-10-24"},{"lineNumber":73,"author":{"gitId":"nicholastng010601"},"content":"        } else {","lastModifiedDate":"2023-10-24"},{"lineNumber":74,"author":{"gitId":"nicholastng010601"},"content":"            Time otherTime \u003d (Time) object;","lastModifiedDate":"2023-10-24"},{"lineNumber":75,"author":{"gitId":"nicholastng010601"},"content":"            return this.day.equals(otherTime.day) \u0026\u0026 this.hour.equals(otherTime.hour);","lastModifiedDate":"2023-10-24"},{"lineNumber":76,"author":{"gitId":"nicholastng010601"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":77,"author":{"gitId":"nicholastng010601"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":78,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":79,"author":{"gitId":"Kailash201"},"content":"    public static DayOfWeek decodeDay(String day) {","lastModifiedDate":"2023-10-21"},{"lineNumber":80,"author":{"gitId":"Kailash201"},"content":"        day \u003d day.toLowerCase();","lastModifiedDate":"2023-10-25"},{"lineNumber":81,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":82,"author":{"gitId":"Kailash201"},"content":"        if (DayOfWeek.MONDAY.toString().toLowerCase().contains(day)) {","lastModifiedDate":"2023-10-21"},{"lineNumber":83,"author":{"gitId":"Kailash201"},"content":"            return DayOfWeek.MONDAY;","lastModifiedDate":"2023-10-21"},{"lineNumber":84,"author":{"gitId":"Kailash201"},"content":"        } else if (DayOfWeek.TUESDAY.toString().toLowerCase().contains(day)) {","lastModifiedDate":"2023-10-21"},{"lineNumber":85,"author":{"gitId":"Kailash201"},"content":"            return DayOfWeek.TUESDAY;","lastModifiedDate":"2023-10-21"},{"lineNumber":86,"author":{"gitId":"Kailash201"},"content":"        } else if (DayOfWeek.WEDNESDAY.toString().toLowerCase().contains(day)) {","lastModifiedDate":"2023-10-21"},{"lineNumber":87,"author":{"gitId":"Kailash201"},"content":"            return DayOfWeek.WEDNESDAY;","lastModifiedDate":"2023-10-21"},{"lineNumber":88,"author":{"gitId":"Kailash201"},"content":"        } else if (DayOfWeek.THURSDAY.toString().toLowerCase().contains(day)) {","lastModifiedDate":"2023-10-21"},{"lineNumber":89,"author":{"gitId":"Kailash201"},"content":"            return DayOfWeek.THURSDAY;","lastModifiedDate":"2023-10-21"},{"lineNumber":90,"author":{"gitId":"Kailash201"},"content":"        } else if (DayOfWeek.FRIDAY.toString().toLowerCase().contains(day)) {","lastModifiedDate":"2023-10-21"},{"lineNumber":91,"author":{"gitId":"Kailash201"},"content":"            return DayOfWeek.FRIDAY;","lastModifiedDate":"2023-10-21"},{"lineNumber":92,"author":{"gitId":"Kailash201"},"content":"        } else if (DayOfWeek.SATURDAY.toString().toLowerCase().contains(day)) {","lastModifiedDate":"2023-10-21"},{"lineNumber":93,"author":{"gitId":"Kailash201"},"content":"            return DayOfWeek.SATURDAY;","lastModifiedDate":"2023-10-21"},{"lineNumber":94,"author":{"gitId":"Kailash201"},"content":"        } else {","lastModifiedDate":"2023-10-22"},{"lineNumber":95,"author":{"gitId":"Kailash201"},"content":"            return DayOfWeek.SUNDAY;","lastModifiedDate":"2023-10-21"},{"lineNumber":96,"author":{"gitId":"Kailash201"},"content":"        }","lastModifiedDate":"2023-10-21"},{"lineNumber":97,"author":{"gitId":"Kailash201"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":98,"author":{"gitId":"Kailash201"},"content":"}","lastModifiedDate":"2023-10-22"}],"authorContributionMap":{"Kailash201":74,"ZD292":10,"nicholastng010601":14}},{"path":"src/main/java/seedu/address/model/TimeInterval.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Kailash201"},"content":"package seedu.address.model;","lastModifiedDate":"2023-10-21"},{"lineNumber":2,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":3,"author":{"gitId":"Kailash201"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-21"},{"lineNumber":4,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":5,"author":{"gitId":"Kailash201"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-21"},{"lineNumber":6,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":7,"author":{"gitId":"Kailash201"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2023-10-21"},{"lineNumber":8,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":9,"author":{"gitId":"nicholastng010601"},"content":"import javax.xml.stream.FactoryConfigurationError;","lastModifiedDate":"2023-10-24"},{"lineNumber":10,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":11,"author":{"gitId":"Kailash201"},"content":"public class TimeInterval {","lastModifiedDate":"2023-10-21"},{"lineNumber":12,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":13,"author":{"gitId":"Kailash201"},"content":"    public static final String MESSAGE_CONSTRAINTS_SYNTAX \u003d \"The format of an interval should be: mon 1200 - tue 1400\";","lastModifiedDate":"2023-10-21"},{"lineNumber":14,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":15,"author":{"gitId":"Kailash201"},"content":"    public static final String MESSAGE_CONSTRAINTS_LOGIC \u003d \"Your end time cannot be before your start time \";","lastModifiedDate":"2023-10-21"},{"lineNumber":16,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":17,"author":{"gitId":"nicholastng010601"},"content":"    public static final String MESSAGE_CONSTRAINTS_OVERLAP \u003d \"No overlap is allowed in your interval. \\n \"","lastModifiedDate":"2023-10-25"},{"lineNumber":18,"author":{"gitId":"nicholastng010601"},"content":"            + \"Eg. mon 1200 - mon 1600 ;mon 1400 - mon 1800 is not allowed. Write it as mon 1200 - mon 1800\";","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":20,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":21,"author":{"gitId":"Kailash201"},"content":"    public static final String VALIDATION_REGEX \u003d \".* .* - .* .*\";","lastModifiedDate":"2023-10-21"},{"lineNumber":22,"author":{"gitId":"Kailash201"},"content":"    private final Time start;","lastModifiedDate":"2023-10-21"},{"lineNumber":23,"author":{"gitId":"Kailash201"},"content":"    private final Time end;","lastModifiedDate":"2023-10-21"},{"lineNumber":24,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":25,"author":{"gitId":"Kailash201"},"content":"    /**","lastModifiedDate":"2023-10-22"},{"lineNumber":26,"author":{"gitId":"Kailash201"},"content":"     * TimeInterval constructor.","lastModifiedDate":"2023-10-22"},{"lineNumber":27,"author":{"gitId":"Kailash201"},"content":"     * @param start The start time of the interval.","lastModifiedDate":"2023-10-22"},{"lineNumber":28,"author":{"gitId":"Kailash201"},"content":"     * @param end The end time of the interval.","lastModifiedDate":"2023-10-22"},{"lineNumber":29,"author":{"gitId":"Kailash201"},"content":"     */","lastModifiedDate":"2023-10-22"},{"lineNumber":30,"author":{"gitId":"Kailash201"},"content":"    public TimeInterval(Time start, Time end) {","lastModifiedDate":"2023-10-21"},{"lineNumber":31,"author":{"gitId":"Kailash201"},"content":"        this.start \u003d start;","lastModifiedDate":"2023-10-21"},{"lineNumber":32,"author":{"gitId":"Kailash201"},"content":"        this.end \u003d end;","lastModifiedDate":"2023-10-21"},{"lineNumber":33,"author":{"gitId":"Kailash201"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":34,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":35,"author":{"gitId":"Kailash201"},"content":"    /**","lastModifiedDate":"2023-10-22"},{"lineNumber":36,"author":{"gitId":"Kailash201"},"content":"     * Returns true if the timeInterval overlaps with one another.","lastModifiedDate":"2023-10-22"},{"lineNumber":37,"author":{"gitId":"Kailash201"},"content":"     * @param intervals ArrayList of TimeIntervals.","lastModifiedDate":"2023-10-22"},{"lineNumber":38,"author":{"gitId":"Kailash201"},"content":"     * @return Returns true if the timeInterval overlaps with one another.","lastModifiedDate":"2023-10-22"},{"lineNumber":39,"author":{"gitId":"Kailash201"},"content":"     */","lastModifiedDate":"2023-10-22"},{"lineNumber":40,"author":{"gitId":"Kailash201"},"content":"    public static boolean isTimeIntervalOverlap(ArrayList\u003cTimeInterval\u003e intervals) {","lastModifiedDate":"2023-10-21"},{"lineNumber":41,"author":{"gitId":"nicholastng010601"},"content":"        for (int i \u003d 0; i \u003c intervals.size(); i++) {","lastModifiedDate":"2023-10-25"},{"lineNumber":42,"author":{"gitId":"nicholastng010601"},"content":"            for (int j \u003d i + 1; j \u003c intervals.size(); j++) {","lastModifiedDate":"2023-10-25"},{"lineNumber":43,"author":{"gitId":"nicholastng010601"},"content":"                int startComparison \u003d intervals.get(i).compareStart(intervals.get(j));","lastModifiedDate":"2023-10-25"},{"lineNumber":44,"author":{"gitId":"nicholastng010601"},"content":"                int endComparison \u003d intervals.get(i).compareEnd(intervals.get(j));","lastModifiedDate":"2023-10-25"},{"lineNumber":45,"author":{"gitId":"nicholastng010601"},"content":"                boolean noClash \u003d ((startComparison \u003c 0 \u0026\u0026 endComparison \u003c 0)|| (startComparison \u003e 0 \u0026\u0026 endComparison \u003e 0));","lastModifiedDate":"2023-10-25"},{"lineNumber":46,"author":{"gitId":"nicholastng010601"},"content":"                if ((startComparison \u003d\u003d 0 \u0026\u0026 endComparison \u003d\u003d 0) || !noClash) {","lastModifiedDate":"2023-10-25"},{"lineNumber":47,"author":{"gitId":"nicholastng010601"},"content":"                    return true;","lastModifiedDate":"2023-10-25"},{"lineNumber":48,"author":{"gitId":"Kailash201"},"content":"                }","lastModifiedDate":"2023-10-21"},{"lineNumber":49,"author":{"gitId":"Kailash201"},"content":"            }","lastModifiedDate":"2023-10-21"},{"lineNumber":50,"author":{"gitId":"nicholastng010601"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":51,"author":{"gitId":"nicholastng010601"},"content":"        return false;","lastModifiedDate":"2023-10-25"},{"lineNumber":52,"author":{"gitId":"Kailash201"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":53,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":54,"author":{"gitId":"ZD292"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":55,"author":{"gitId":"ZD292"},"content":"     * Check whether an interval overlaps another interval in any way","lastModifiedDate":"2023-10-25"},{"lineNumber":56,"author":{"gitId":"ZD292"},"content":"     * Interval overlapping at start and end points not considered as overlap does not form interval","lastModifiedDate":"2023-10-25"},{"lineNumber":57,"author":{"gitId":"ZD292"},"content":"     * @param t","lastModifiedDate":"2023-10-25"},{"lineNumber":58,"author":{"gitId":"ZD292"},"content":"     * @return","lastModifiedDate":"2023-10-25"},{"lineNumber":59,"author":{"gitId":"ZD292"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":60,"author":{"gitId":"ZD292"},"content":"    public boolean isTimeIntervalOverlapWithTimeInterval(TimeInterval t) {","lastModifiedDate":"2023-10-25"},{"lineNumber":61,"author":{"gitId":"ZD292"},"content":"        // interval1.start \u003c interval2.end (if interval1.start \u003d interval2.end, is not overlapping)","lastModifiedDate":"2023-10-25"},{"lineNumber":62,"author":{"gitId":"ZD292"},"content":"        // and interval1.end \u003e interval2.start","lastModifiedDate":"2023-10-25"},{"lineNumber":63,"author":{"gitId":"ZD292"},"content":"        // ||","lastModifiedDate":"2023-10-25"},{"lineNumber":64,"author":{"gitId":"ZD292"},"content":"        // interval1.end \u003e interval2.start (interval1.start \u003d interval2.end means not overlapping)","lastModifiedDate":"2023-10-25"},{"lineNumber":65,"author":{"gitId":"ZD292"},"content":"        // and interval1.start \u003c interval2.end","lastModifiedDate":"2023-10-25"},{"lineNumber":66,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":67,"author":{"gitId":"ZD292"},"content":"        boolean firstCase \u003d this.start.compareTo(t.end) \u003c 0 \u0026\u0026 this.end.compareTo(t.start) \u003e 0;","lastModifiedDate":"2023-10-25"},{"lineNumber":68,"author":{"gitId":"ZD292"},"content":"        boolean secondCase \u003d this.start.compareTo(t.end) \u003e 0 \u0026\u0026 this.start.compareTo(t.end) \u003c 0;","lastModifiedDate":"2023-10-25"},{"lineNumber":69,"author":{"gitId":"ZD292"},"content":"        boolean overLap \u003d firstCase || secondCase;","lastModifiedDate":"2023-10-25"},{"lineNumber":70,"author":{"gitId":"ZD292"},"content":"        return overLap;","lastModifiedDate":"2023-10-25"},{"lineNumber":71,"author":{"gitId":"ZD292"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":72,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":73,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":74,"author":{"gitId":"ZD292"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":75,"author":{"gitId":"ZD292"},"content":"     * Check if Intervals are equal in terms of time representation and not exact object comparison","lastModifiedDate":"2023-10-25"},{"lineNumber":76,"author":{"gitId":"ZD292"},"content":"     * @param otherInterval that we are comparing to","lastModifiedDate":"2023-10-25"},{"lineNumber":77,"author":{"gitId":"ZD292"},"content":"     * @return boolean whether otherInterval is equal in terms of time representation","lastModifiedDate":"2023-10-25"},{"lineNumber":78,"author":{"gitId":"ZD292"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":79,"author":{"gitId":"ZD292"},"content":"    public boolean equalStartAndEnd(TimeInterval otherInterval) {","lastModifiedDate":"2023-10-25"},{"lineNumber":80,"author":{"gitId":"ZD292"},"content":"        return this.start.compareTo(otherInterval.start) \u003d\u003d 0 \u0026\u0026 this.end.compareTo(otherInterval.end) \u003d\u003d 0;","lastModifiedDate":"2023-10-25"},{"lineNumber":81,"author":{"gitId":"ZD292"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":82,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":83,"author":{"gitId":"ZD292"},"content":"    public static TimeInterval getMaxStart(TimeInterval first, TimeInterval second) {","lastModifiedDate":"2023-10-25"},{"lineNumber":84,"author":{"gitId":"ZD292"},"content":"        // if both have the same MaxStart then by default return first","lastModifiedDate":"2023-10-25"},{"lineNumber":85,"author":{"gitId":"ZD292"},"content":"        return first.getStart().compareTo(second.getStart()) \u003e\u003d 0 ? first : second;","lastModifiedDate":"2023-10-25"},{"lineNumber":86,"author":{"gitId":"ZD292"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":87,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":88,"author":{"gitId":"ZD292"},"content":"    public static TimeInterval getMinEnd(TimeInterval first, TimeInterval second) {","lastModifiedDate":"2023-10-25"},{"lineNumber":89,"author":{"gitId":"ZD292"},"content":"        // if both have the same MinEnd then by default return first","lastModifiedDate":"2023-10-25"},{"lineNumber":90,"author":{"gitId":"ZD292"},"content":"        return first.getEnd().compareTo(second.getEnd()) \u003c\u003d 0 ? first : second;","lastModifiedDate":"2023-10-25"},{"lineNumber":91,"author":{"gitId":"ZD292"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":92,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":93,"author":{"gitId":"ZD292"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":94,"author":{"gitId":"ZD292"},"content":"     * Create new time interval with MaxStart and MinEnd","lastModifiedDate":"2023-10-25"},{"lineNumber":95,"author":{"gitId":"ZD292"},"content":"     * @param otherInterval","lastModifiedDate":"2023-10-25"},{"lineNumber":96,"author":{"gitId":"ZD292"},"content":"     * @return","lastModifiedDate":"2023-10-25"},{"lineNumber":97,"author":{"gitId":"ZD292"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":98,"author":{"gitId":"ZD292"},"content":"    public TimeInterval getIntersect(TimeInterval otherInterval) {","lastModifiedDate":"2023-10-25"},{"lineNumber":99,"author":{"gitId":"ZD292"},"content":"        return new TimeInterval(this.getStart(), otherInterval.getEnd());","lastModifiedDate":"2023-10-25"},{"lineNumber":100,"author":{"gitId":"ZD292"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":101,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":102,"author":{"gitId":"ZD292"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":103,"author":{"gitId":"ZD292"},"content":"     * Check if time interval can accomodate for a given duration","lastModifiedDate":"2023-10-25"},{"lineNumber":104,"author":{"gitId":"ZD292"},"content":"     * Whether duration can fit in interval","lastModifiedDate":"2023-10-25"},{"lineNumber":105,"author":{"gitId":"ZD292"},"content":"     * @param duration of meeting in consideration","lastModifiedDate":"2023-10-25"},{"lineNumber":106,"author":{"gitId":"ZD292"},"content":"     * @return boolean whether meeting is permissible","lastModifiedDate":"2023-10-25"},{"lineNumber":107,"author":{"gitId":"ZD292"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":108,"author":{"gitId":"ZD292"},"content":"    public boolean allows(Duration duration) {","lastModifiedDate":"2023-10-25"},{"lineNumber":109,"author":{"gitId":"ZD292"},"content":"        int durationInMin \u003d duration.getDurationInMin();","lastModifiedDate":"2023-10-25"},{"lineNumber":110,"author":{"gitId":"ZD292"},"content":"        // assume start \u003c end always hold, property of timeInterval","lastModifiedDate":"2023-10-25"},{"lineNumber":111,"author":{"gitId":"ZD292"},"content":"        int durationStart \u003d this.start.getDurationInMin();","lastModifiedDate":"2023-10-25"},{"lineNumber":112,"author":{"gitId":"ZD292"},"content":"        int durationEnd \u003d this.end.getDurationInMin();","lastModifiedDate":"2023-10-25"},{"lineNumber":113,"author":{"gitId":"ZD292"},"content":"        boolean allows \u003d durationEnd - durationStart \u003e\u003d durationInMin;","lastModifiedDate":"2023-10-25"},{"lineNumber":114,"author":{"gitId":"ZD292"},"content":"        return allows;","lastModifiedDate":"2023-10-25"},{"lineNumber":115,"author":{"gitId":"ZD292"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":116,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":117,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":118,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":119,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":120,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":121,"author":{"gitId":"Kailash201"},"content":"    /**","lastModifiedDate":"2023-10-22"},{"lineNumber":122,"author":{"gitId":"Kailash201"},"content":"     * Returns true if the interval string is in right format.","lastModifiedDate":"2023-10-22"},{"lineNumber":123,"author":{"gitId":"Kailash201"},"content":"     * @param timeInterval The timeInterval to be checked.","lastModifiedDate":"2023-10-22"},{"lineNumber":124,"author":{"gitId":"Kailash201"},"content":"     * @return Returns true if the interval string is in right format.","lastModifiedDate":"2023-10-22"},{"lineNumber":125,"author":{"gitId":"Kailash201"},"content":"     */","lastModifiedDate":"2023-10-22"},{"lineNumber":126,"author":{"gitId":"Kailash201"},"content":"    public static boolean isValidTimeIntervalSyntax(String timeInterval) {","lastModifiedDate":"2023-10-21"},{"lineNumber":127,"author":{"gitId":"Kailash201"},"content":"        return timeInterval.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-10-21"},{"lineNumber":128,"author":{"gitId":"Kailash201"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":129,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":130,"author":{"gitId":"Kailash201"},"content":"    /**","lastModifiedDate":"2023-10-22"},{"lineNumber":131,"author":{"gitId":"Kailash201"},"content":"     * Returns true if start time is less than end time.","lastModifiedDate":"2023-10-22"},{"lineNumber":132,"author":{"gitId":"Kailash201"},"content":"     * @param start Start time.","lastModifiedDate":"2023-10-22"},{"lineNumber":133,"author":{"gitId":"Kailash201"},"content":"     * @param end End time.","lastModifiedDate":"2023-10-22"},{"lineNumber":134,"author":{"gitId":"Kailash201"},"content":"     * @return Returns true if start time is less than end time.","lastModifiedDate":"2023-10-22"},{"lineNumber":135,"author":{"gitId":"Kailash201"},"content":"     */","lastModifiedDate":"2023-10-22"},{"lineNumber":136,"author":{"gitId":"Kailash201"},"content":"    public static boolean isValidTimeIntervalLogic(Time start, Time end) {","lastModifiedDate":"2023-10-21"},{"lineNumber":137,"author":{"gitId":"Kailash201"},"content":"        return start.compareTo(end) \u003c\u003d -1;","lastModifiedDate":"2023-10-21"},{"lineNumber":138,"author":{"gitId":"Kailash201"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":139,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":140,"author":{"gitId":"nicholastng010601"},"content":"    public boolean isClash(TimeInterval otherTime) {","lastModifiedDate":"2023-10-26"},{"lineNumber":141,"author":{"gitId":"nicholastng010601"},"content":"        boolean isBefore \u003d this.start.compareTo(otherTime.start) \u003c 0 \u0026\u0026 this.end.compareTo(otherTime.end) \u003c 0 \u0026\u0026 this.end.compareTo(otherTime.start) \u003c\u003d 0;","lastModifiedDate":"2023-10-26"},{"lineNumber":142,"author":{"gitId":"nicholastng010601"},"content":"        boolean isAfter \u003d this.start.compareTo(otherTime.start) \u003e 0 \u0026\u0026 this.end.compareTo(otherTime.end) \u003e 0 \u0026\u0026 this.start.compareTo(otherTime.end) \u003e\u003d 0;","lastModifiedDate":"2023-10-26"},{"lineNumber":143,"author":{"gitId":"nicholastng010601"},"content":"        return !(isBefore || isAfter);","lastModifiedDate":"2023-10-26"},{"lineNumber":144,"author":{"gitId":"nicholastng010601"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":145,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":146,"author":{"gitId":"nicholastng010601"},"content":"    public int compareStart(TimeInterval otherTime) {","lastModifiedDate":"2023-10-25"},{"lineNumber":147,"author":{"gitId":"nicholastng010601"},"content":"        return this.start.compareTo(otherTime.start);","lastModifiedDate":"2023-10-25"},{"lineNumber":148,"author":{"gitId":"nicholastng010601"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":149,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":150,"author":{"gitId":"nicholastng010601"},"content":"    public int compareEnd(TimeInterval otherTime) {","lastModifiedDate":"2023-10-25"},{"lineNumber":151,"author":{"gitId":"nicholastng010601"},"content":"        return this.end.compareTo(otherTime.end);","lastModifiedDate":"2023-10-25"},{"lineNumber":152,"author":{"gitId":"nicholastng010601"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":153,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":154,"author":{"gitId":"nicholastng010601"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":155,"author":{"gitId":"nicholastng010601"},"content":"     * Gets the start time of the interval","lastModifiedDate":"2023-10-23"},{"lineNumber":156,"author":{"gitId":"nicholastng010601"},"content":"     * @return Start time","lastModifiedDate":"2023-10-23"},{"lineNumber":157,"author":{"gitId":"nicholastng010601"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":158,"author":{"gitId":"nicholastng010601"},"content":"    public Time getStart() {","lastModifiedDate":"2023-10-23"},{"lineNumber":159,"author":{"gitId":"nicholastng010601"},"content":"        return this.start;","lastModifiedDate":"2023-10-23"},{"lineNumber":160,"author":{"gitId":"nicholastng010601"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":161,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":162,"author":{"gitId":"nicholastng010601"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":163,"author":{"gitId":"nicholastng010601"},"content":"     * Gets the end time of the interval","lastModifiedDate":"2023-10-23"},{"lineNumber":164,"author":{"gitId":"nicholastng010601"},"content":"     * @return end time","lastModifiedDate":"2023-10-23"},{"lineNumber":165,"author":{"gitId":"nicholastng010601"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":166,"author":{"gitId":"nicholastng010601"},"content":"    public Time getEnd() {","lastModifiedDate":"2023-10-23"},{"lineNumber":167,"author":{"gitId":"nicholastng010601"},"content":"        return this.end;","lastModifiedDate":"2023-10-23"},{"lineNumber":168,"author":{"gitId":"nicholastng010601"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":169,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":170,"author":{"gitId":"Kailash201"},"content":"    @Override","lastModifiedDate":"2023-10-21"},{"lineNumber":171,"author":{"gitId":"Kailash201"},"content":"    public String toString() {","lastModifiedDate":"2023-10-21"},{"lineNumber":172,"author":{"gitId":"Kailash201"},"content":"        return start.toString() + \" - \" + end.toString() + \" \";","lastModifiedDate":"2023-10-21"},{"lineNumber":173,"author":{"gitId":"Kailash201"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":174,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":175,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":176,"author":{"gitId":"nicholastng010601"},"content":"    @Override","lastModifiedDate":"2023-10-24"},{"lineNumber":177,"author":{"gitId":"nicholastng010601"},"content":"    public boolean equals(Object object) {","lastModifiedDate":"2023-10-24"},{"lineNumber":178,"author":{"gitId":"nicholastng010601"},"content":"        if (!(object instanceof TimeInterval)) {","lastModifiedDate":"2023-10-24"},{"lineNumber":179,"author":{"gitId":"nicholastng010601"},"content":"            return false;","lastModifiedDate":"2023-10-24"},{"lineNumber":180,"author":{"gitId":"nicholastng010601"},"content":"        } else if (object \u003d\u003d this) {","lastModifiedDate":"2023-10-24"},{"lineNumber":181,"author":{"gitId":"nicholastng010601"},"content":"            return true;","lastModifiedDate":"2023-10-24"},{"lineNumber":182,"author":{"gitId":"nicholastng010601"},"content":"        } else {","lastModifiedDate":"2023-10-24"},{"lineNumber":183,"author":{"gitId":"nicholastng010601"},"content":"            TimeInterval otherTime \u003d (TimeInterval) object;","lastModifiedDate":"2023-10-24"},{"lineNumber":184,"author":{"gitId":"nicholastng010601"},"content":"            return this.start.equals(otherTime.start) \u0026\u0026 this.end.equals(otherTime.end);","lastModifiedDate":"2023-10-24"},{"lineNumber":185,"author":{"gitId":"nicholastng010601"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":186,"author":{"gitId":"nicholastng010601"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":187,"author":{"gitId":"Kailash201"},"content":"}","lastModifiedDate":"2023-10-21"}],"authorContributionMap":{"Kailash201":65,"ZD292":67,"nicholastng010601":55}},{"path":"src/main/java/seedu/address/model/TimeIntervalList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Kailash201"},"content":"package seedu.address.model;","lastModifiedDate":"2023-10-21"},{"lineNumber":2,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":3,"author":{"gitId":"Kailash201"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-21"},{"lineNumber":4,"author":{"gitId":"Kailash201"},"content":"import java.util.Iterator;","lastModifiedDate":"2023-10-21"},{"lineNumber":5,"author":{"gitId":"nicholastng010601"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-10-23"},{"lineNumber":6,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":7,"author":{"gitId":"Kailash201"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-10-21"},{"lineNumber":8,"author":{"gitId":"Kailash201"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-10-21"},{"lineNumber":9,"author":{"gitId":"coderhuang559"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"nicholastng010601"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-24"},{"lineNumber":11,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":12,"author":{"gitId":"nicholastng010601"},"content":"public class TimeIntervalList implements Iterable\u003cTimeInterval\u003e {","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":14,"author":{"gitId":"Kailash201"},"content":"    private final ObservableList\u003cTimeInterval\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-10-21"},{"lineNumber":15,"author":{"gitId":"Kailash201"},"content":"    private final ObservableList\u003cTimeInterval\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2023-10-22"},{"lineNumber":16,"author":{"gitId":"Kailash201"},"content":"        FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2023-10-22"},{"lineNumber":17,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":18,"author":{"gitId":"Kailash201"},"content":"    public void addTime(TimeInterval timeInterval) {","lastModifiedDate":"2023-10-21"},{"lineNumber":19,"author":{"gitId":"Kailash201"},"content":"        internalList.add(timeInterval);","lastModifiedDate":"2023-10-21"},{"lineNumber":20,"author":{"gitId":"Kailash201"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":21,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":22,"author":{"gitId":"nicholastng010601"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":23,"author":{"gitId":"nicholastng010601"},"content":"     * Converts the internal list to streams.","lastModifiedDate":"2023-10-23"},{"lineNumber":24,"author":{"gitId":"nicholastng010601"},"content":"     *","lastModifiedDate":"2023-10-23"},{"lineNumber":25,"author":{"gitId":"nicholastng010601"},"content":"     * @return Internal list into streams.","lastModifiedDate":"2023-10-23"},{"lineNumber":26,"author":{"gitId":"nicholastng010601"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":27,"author":{"gitId":"nicholastng010601"},"content":"    public Stream\u003cTimeInterval\u003e toStream() {","lastModifiedDate":"2023-10-23"},{"lineNumber":28,"author":{"gitId":"nicholastng010601"},"content":"        return internalList.stream();","lastModifiedDate":"2023-10-23"},{"lineNumber":29,"author":{"gitId":"nicholastng010601"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":30,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":31,"author":{"gitId":"nicholastng010601"},"content":"    public void addTime(ArrayList\u003cTimeInterval\u003e timeIntervals) throws CommandException{","lastModifiedDate":"2023-10-25"},{"lineNumber":32,"author":{"gitId":"nicholastng010601"},"content":"        boolean timeAdded \u003d false;","lastModifiedDate":"2023-10-26"},{"lineNumber":33,"author":{"gitId":"nicholastng010601"},"content":"        StringBuilder errorCompilation \u003d new StringBuilder();","lastModifiedDate":"2023-10-25"},{"lineNumber":34,"author":{"gitId":"nicholastng010601"},"content":"        errorCompilation.append(\"There is a clash in these timings:\\n\");","lastModifiedDate":"2023-10-25"},{"lineNumber":35,"author":{"gitId":"nicholastng010601"},"content":"        for (TimeInterval interval : timeIntervals) {","lastModifiedDate":"2023-10-25"},{"lineNumber":36,"author":{"gitId":"nicholastng010601"},"content":"            if (isTimeIntervalOverlap(interval)) {","lastModifiedDate":"2023-10-25"},{"lineNumber":37,"author":{"gitId":"nicholastng010601"},"content":"                errorCompilation.append(interval + \"\\n\");","lastModifiedDate":"2023-10-25"},{"lineNumber":38,"author":{"gitId":"nicholastng010601"},"content":"            } else {","lastModifiedDate":"2023-10-25"},{"lineNumber":39,"author":{"gitId":"nicholastng010601"},"content":"                internalList.add(interval);","lastModifiedDate":"2023-10-25"},{"lineNumber":40,"author":{"gitId":"nicholastng010601"},"content":"                timeAdded \u003d true;","lastModifiedDate":"2023-10-26"},{"lineNumber":41,"author":{"gitId":"nicholastng010601"},"content":"            }","lastModifiedDate":"2023-10-25"},{"lineNumber":42,"author":{"gitId":"nicholastng010601"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":43,"author":{"gitId":"nicholastng010601"},"content":"        if (timeAdded) {","lastModifiedDate":"2023-10-26"},{"lineNumber":44,"author":{"gitId":"nicholastng010601"},"content":"            errorCompilation.append(\"The other times have been added\\n\");","lastModifiedDate":"2023-10-25"},{"lineNumber":45,"author":{"gitId":"nicholastng010601"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":46,"author":{"gitId":"nicholastng010601"},"content":"        if ((timeAdded \u0026\u0026 errorCompilation.length() \u003e 67) || (!timeAdded \u0026\u0026 errorCompilation.length() \u003e 35)) {","lastModifiedDate":"2023-10-26"},{"lineNumber":47,"author":{"gitId":"nicholastng010601"},"content":"            throw new CommandException(errorCompilation.toString());","lastModifiedDate":"2023-10-25"},{"lineNumber":48,"author":{"gitId":"nicholastng010601"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":49,"author":{"gitId":"Kailash201"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":50,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":51,"author":{"gitId":"nicholastng010601"},"content":"    public void addAll(TimeIntervalList timeIntervalList) {","lastModifiedDate":"2023-10-25"},{"lineNumber":52,"author":{"gitId":"nicholastng010601"},"content":"        for (TimeInterval timeInterval : timeIntervalList) {","lastModifiedDate":"2023-10-25"},{"lineNumber":53,"author":{"gitId":"nicholastng010601"},"content":"            this.internalList.add(timeInterval);","lastModifiedDate":"2023-10-25"},{"lineNumber":54,"author":{"gitId":"nicholastng010601"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":55,"author":{"gitId":"nicholastng010601"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":56,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":57,"author":{"gitId":"nicholastng010601"},"content":"    public void deleteTime(ArrayList\u003cTimeInterval\u003e timeIntervals) throws CommandException {","lastModifiedDate":"2023-10-24"},{"lineNumber":58,"author":{"gitId":"nicholastng010601"},"content":"        boolean timeDeleted \u003d false;","lastModifiedDate":"2023-10-26"},{"lineNumber":59,"author":{"gitId":"nicholastng010601"},"content":"        StringBuilder errorCompilation \u003d new StringBuilder();","lastModifiedDate":"2023-10-25"},{"lineNumber":60,"author":{"gitId":"nicholastng010601"},"content":"        errorCompilation.append(\"These times are not in the list:\\n\");","lastModifiedDate":"2023-10-25"},{"lineNumber":61,"author":{"gitId":"nicholastng010601"},"content":"        for (TimeInterval time : timeIntervals) {","lastModifiedDate":"2023-10-24"},{"lineNumber":62,"author":{"gitId":"nicholastng010601"},"content":"            if (!internalList.contains(time)) {","lastModifiedDate":"2023-10-25"},{"lineNumber":63,"author":{"gitId":"nicholastng010601"},"content":"                errorCompilation.append(time + \"\\n\");","lastModifiedDate":"2023-10-25"},{"lineNumber":64,"author":{"gitId":"nicholastng010601"},"content":"            } else {","lastModifiedDate":"2023-10-24"},{"lineNumber":65,"author":{"gitId":"nicholastng010601"},"content":"                internalList.remove(time);","lastModifiedDate":"2023-10-25"},{"lineNumber":66,"author":{"gitId":"nicholastng010601"},"content":"                timeDeleted \u003d true;","lastModifiedDate":"2023-10-26"},{"lineNumber":67,"author":{"gitId":"nicholastng010601"},"content":"            }","lastModifiedDate":"2023-10-24"},{"lineNumber":68,"author":{"gitId":"nicholastng010601"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":69,"author":{"gitId":"nicholastng010601"},"content":"        System.out.println(errorCompilation.length());","lastModifiedDate":"2023-10-26"},{"lineNumber":70,"author":{"gitId":"nicholastng010601"},"content":"        if (timeDeleted) {","lastModifiedDate":"2023-10-26"},{"lineNumber":71,"author":{"gitId":"nicholastng010601"},"content":"            errorCompilation.append(\"The other times have been deleted\\n\");","lastModifiedDate":"2023-10-25"},{"lineNumber":72,"author":{"gitId":"nicholastng010601"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":73,"author":{"gitId":"nicholastng010601"},"content":"        System.out.println(errorCompilation.length());","lastModifiedDate":"2023-10-26"},{"lineNumber":74,"author":{"gitId":"nicholastng010601"},"content":"        if ((timeDeleted \u0026\u0026 errorCompilation.length() \u003e 87) || (!timeDeleted \u0026\u0026 errorCompilation.length() \u003e 53)) {","lastModifiedDate":"2023-10-26"},{"lineNumber":75,"author":{"gitId":"nicholastng010601"},"content":"            throw new CommandException(errorCompilation.toString());","lastModifiedDate":"2023-10-25"},{"lineNumber":76,"author":{"gitId":"nicholastng010601"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":77,"author":{"gitId":"nicholastng010601"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":78,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":79,"author":{"gitId":"nicholastng010601"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":80,"author":{"gitId":"nicholastng010601"},"content":"     * Checks whether timeInterval contains the time","lastModifiedDate":"2023-10-24"},{"lineNumber":81,"author":{"gitId":"nicholastng010601"},"content":"     * @param timeInterval The time Interval to check","lastModifiedDate":"2023-10-24"},{"lineNumber":82,"author":{"gitId":"nicholastng010601"},"content":"     * @return Whether time interval is in list","lastModifiedDate":"2023-10-24"},{"lineNumber":83,"author":{"gitId":"nicholastng010601"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":84,"author":{"gitId":"nicholastng010601"},"content":"    public boolean hasTime(TimeInterval timeInterval) {","lastModifiedDate":"2023-10-24"},{"lineNumber":85,"author":{"gitId":"nicholastng010601"},"content":"        return internalList.contains(timeInterval);","lastModifiedDate":"2023-10-24"},{"lineNumber":86,"author":{"gitId":"nicholastng010601"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":87,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":88,"author":{"gitId":"nicholastng010601"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":89,"author":{"gitId":"nicholastng010601"},"content":"     * Removes free time from list","lastModifiedDate":"2023-10-24"},{"lineNumber":90,"author":{"gitId":"nicholastng010601"},"content":"     * @param timeInterval The time interval to remove","lastModifiedDate":"2023-10-24"},{"lineNumber":91,"author":{"gitId":"nicholastng010601"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":92,"author":{"gitId":"nicholastng010601"},"content":"    public void removeTime(TimeInterval timeInterval) {","lastModifiedDate":"2023-10-24"},{"lineNumber":93,"author":{"gitId":"nicholastng010601"},"content":"        internalList.remove(timeInterval);","lastModifiedDate":"2023-10-24"},{"lineNumber":94,"author":{"gitId":"nicholastng010601"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":95,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":96,"author":{"gitId":"nicholastng010601"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":97,"author":{"gitId":"nicholastng010601"},"content":"     * Checks if time interval overlaps with internal list","lastModifiedDate":"2023-10-25"},{"lineNumber":98,"author":{"gitId":"nicholastng010601"},"content":"     * @param interval The time iunterval to check","lastModifiedDate":"2023-10-25"},{"lineNumber":99,"author":{"gitId":"nicholastng010601"},"content":"     * @return Whether time interval overlaps with internal list","lastModifiedDate":"2023-10-25"},{"lineNumber":100,"author":{"gitId":"nicholastng010601"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":101,"author":{"gitId":"nicholastng010601"},"content":"    public boolean isTimeIntervalOverlap(TimeInterval interval) {","lastModifiedDate":"2023-10-25"},{"lineNumber":102,"author":{"gitId":"nicholastng010601"},"content":"        for (TimeInterval time : internalList) {","lastModifiedDate":"2023-10-25"},{"lineNumber":103,"author":{"gitId":"nicholastng010601"},"content":"            if (interval.isClash(time)) {","lastModifiedDate":"2023-10-26"},{"lineNumber":104,"author":{"gitId":"nicholastng010601"},"content":"                return true;","lastModifiedDate":"2023-10-25"},{"lineNumber":105,"author":{"gitId":"nicholastng010601"},"content":"            }","lastModifiedDate":"2023-10-25"},{"lineNumber":106,"author":{"gitId":"nicholastng010601"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":107,"author":{"gitId":"nicholastng010601"},"content":"        return false;","lastModifiedDate":"2023-10-25"},{"lineNumber":108,"author":{"gitId":"nicholastng010601"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":109,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":110,"author":{"gitId":"ZD292"},"content":"/////////////////////","lastModifiedDate":"2023-10-25"},{"lineNumber":111,"author":{"gitId":"ZD292"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":112,"author":{"gitId":"ZD292"},"content":"     * Check whether no time is stored","lastModifiedDate":"2023-10-25"},{"lineNumber":113,"author":{"gitId":"ZD292"},"content":"     * @return boolean representing whether no time is stored","lastModifiedDate":"2023-10-25"},{"lineNumber":114,"author":{"gitId":"ZD292"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":115,"author":{"gitId":"ZD292"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2023-10-25"},{"lineNumber":116,"author":{"gitId":"ZD292"},"content":"        return internalList.isEmpty();","lastModifiedDate":"2023-10-25"},{"lineNumber":117,"author":{"gitId":"ZD292"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":118,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":119,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":120,"author":{"gitId":"ZD292"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":121,"author":{"gitId":"ZD292"},"content":"     * Generate String representing list of intervals","lastModifiedDate":"2023-10-25"},{"lineNumber":122,"author":{"gitId":"ZD292"},"content":"     * @param br StringBuilder to store  message","lastModifiedDate":"2023-10-25"},{"lineNumber":123,"author":{"gitId":"ZD292"},"content":"     * @param format specify Message format","lastModifiedDate":"2023-10-25"},{"lineNumber":124,"author":{"gitId":"ZD292"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":125,"author":{"gitId":"ZD292"},"content":"    public void getMessage(StringBuilder br, String format) {","lastModifiedDate":"2023-10-25"},{"lineNumber":126,"author":{"gitId":"ZD292"},"content":"        int intervalCount \u003d 1;","lastModifiedDate":"2023-10-25"},{"lineNumber":127,"author":{"gitId":"ZD292"},"content":"        for (TimeInterval t: this.internalList) {","lastModifiedDate":"2023-10-25"},{"lineNumber":128,"author":{"gitId":"ZD292"},"content":"            br.append(String.format(format, intervalCount, t.toString()));","lastModifiedDate":"2023-10-25"},{"lineNumber":129,"author":{"gitId":"ZD292"},"content":"            intervalCount++;","lastModifiedDate":"2023-10-25"},{"lineNumber":130,"author":{"gitId":"ZD292"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":131,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":132,"author":{"gitId":"ZD292"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":133,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":134,"author":{"gitId":"ZD292"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":135,"author":{"gitId":"ZD292"},"content":"     * Filter a TimeIntervalList to contain only intervals that fit the duration","lastModifiedDate":"2023-10-25"},{"lineNumber":136,"author":{"gitId":"ZD292"},"content":"     * @param duration represent time in minutes","lastModifiedDate":"2023-10-25"},{"lineNumber":137,"author":{"gitId":"ZD292"},"content":"     * @return TimeIntervalList with duration greater than duration specified","lastModifiedDate":"2023-10-25"},{"lineNumber":138,"author":{"gitId":"ZD292"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":139,"author":{"gitId":"ZD292"},"content":"    public TimeIntervalList fitDuration(Duration duration) {","lastModifiedDate":"2023-10-25"},{"lineNumber":140,"author":{"gitId":"ZD292"},"content":"        TimeIntervalList personTime \u003d new TimeIntervalList();","lastModifiedDate":"2023-10-25"},{"lineNumber":141,"author":{"gitId":"ZD292"},"content":"        for (TimeInterval interval: internalList) {","lastModifiedDate":"2023-10-25"},{"lineNumber":142,"author":{"gitId":"ZD292"},"content":"            if (interval.allows(duration)) {","lastModifiedDate":"2023-10-25"},{"lineNumber":143,"author":{"gitId":"ZD292"},"content":"                personTime.addTime(interval);","lastModifiedDate":"2023-10-25"},{"lineNumber":144,"author":{"gitId":"ZD292"},"content":"            }","lastModifiedDate":"2023-10-25"},{"lineNumber":145,"author":{"gitId":"ZD292"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":146,"author":{"gitId":"ZD292"},"content":"        return personTime;","lastModifiedDate":"2023-10-25"},{"lineNumber":147,"author":{"gitId":"ZD292"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":148,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":149,"author":{"gitId":"ZD292"},"content":"    public TimeIntervalList findOverlap(TimeIntervalList otherTime, Duration duration) {","lastModifiedDate":"2023-10-25"},{"lineNumber":150,"author":{"gitId":"ZD292"},"content":"        // 4 steps, sort by start time, min start min end 2 pointers, get overlap, interval \u003e\u003d duration check","lastModifiedDate":"2023-10-25"},{"lineNumber":151,"author":{"gitId":"ZD292"},"content":"        this.internalList.sort(TimeInterval::compareStart);","lastModifiedDate":"2023-10-25"},{"lineNumber":152,"author":{"gitId":"ZD292"},"content":"        otherTime.internalList.sort(TimeInterval::compareStart);","lastModifiedDate":"2023-10-25"},{"lineNumber":153,"author":{"gitId":"ZD292"},"content":"        TimeIntervalList newFreeTime \u003d new TimeIntervalList();","lastModifiedDate":"2023-10-25"},{"lineNumber":154,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":155,"author":{"gitId":"ZD292"},"content":"        int p1 \u003d 0;","lastModifiedDate":"2023-10-25"},{"lineNumber":156,"author":{"gitId":"ZD292"},"content":"        int p2 \u003d 0;","lastModifiedDate":"2023-10-25"},{"lineNumber":157,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":158,"author":{"gitId":"ZD292"},"content":"        while (p1 \u003c this.internalList.size() \u0026\u0026 p2 \u003c otherTime.internalList.size()) {","lastModifiedDate":"2023-10-25"},{"lineNumber":159,"author":{"gitId":"ZD292"},"content":"            TimeInterval firstListInterval \u003d this.internalList.get(p1);","lastModifiedDate":"2023-10-25"},{"lineNumber":160,"author":{"gitId":"ZD292"},"content":"            TimeInterval secondListInterval \u003d otherTime.internalList.get(p2);","lastModifiedDate":"2023-10-25"},{"lineNumber":161,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":162,"author":{"gitId":"ZD292"},"content":"            boolean overLap \u003d firstListInterval.isTimeIntervalOverlapWithTimeInterval(secondListInterval);","lastModifiedDate":"2023-10-25"},{"lineNumber":163,"author":{"gitId":"ZD292"},"content":"            // given 2 intervals, return the one with smaller end to increment pointer","lastModifiedDate":"2023-10-25"},{"lineNumber":164,"author":{"gitId":"ZD292"},"content":"            TimeInterval intervalWithMaxStart \u003d TimeInterval.getMaxStart(firstListInterval, secondListInterval);","lastModifiedDate":"2023-10-25"},{"lineNumber":165,"author":{"gitId":"ZD292"},"content":"            TimeInterval intervalWithMinEnd \u003d TimeInterval.getMinEnd(firstListInterval, secondListInterval);","lastModifiedDate":"2023-10-25"},{"lineNumber":166,"author":{"gitId":"ZD292"},"content":"            // store the intersect, 2 steps, get intersect, see if can fit duration","lastModifiedDate":"2023-10-25"},{"lineNumber":167,"author":{"gitId":"ZD292"},"content":"            if (overLap) {","lastModifiedDate":"2023-10-25"},{"lineNumber":168,"author":{"gitId":"ZD292"},"content":"                TimeInterval intersect \u003d intervalWithMaxStart.getIntersect(intervalWithMinEnd);","lastModifiedDate":"2023-10-25"},{"lineNumber":169,"author":{"gitId":"ZD292"},"content":"                if (intersect.allows(duration)) {","lastModifiedDate":"2023-10-25"},{"lineNumber":170,"author":{"gitId":"ZD292"},"content":"                    newFreeTime.addTime(intersect);","lastModifiedDate":"2023-10-25"},{"lineNumber":171,"author":{"gitId":"ZD292"},"content":"                }","lastModifiedDate":"2023-10-25"},{"lineNumber":172,"author":{"gitId":"ZD292"},"content":"            }","lastModifiedDate":"2023-10-25"},{"lineNumber":173,"author":{"gitId":"ZD292"},"content":"            // increment pointers","lastModifiedDate":"2023-10-25"},{"lineNumber":174,"author":{"gitId":"ZD292"},"content":"            if (intervalWithMinEnd.equalStartAndEnd(firstListInterval)) {","lastModifiedDate":"2023-10-25"},{"lineNumber":175,"author":{"gitId":"ZD292"},"content":"                p1++;","lastModifiedDate":"2023-10-25"},{"lineNumber":176,"author":{"gitId":"ZD292"},"content":"            } else {","lastModifiedDate":"2023-10-25"},{"lineNumber":177,"author":{"gitId":"ZD292"},"content":"                p2++;","lastModifiedDate":"2023-10-25"},{"lineNumber":178,"author":{"gitId":"ZD292"},"content":"            }","lastModifiedDate":"2023-10-25"},{"lineNumber":179,"author":{"gitId":"ZD292"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":180,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":181,"author":{"gitId":"ZD292"},"content":"        return newFreeTime;","lastModifiedDate":"2023-10-25"},{"lineNumber":182,"author":{"gitId":"ZD292"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":183,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":184,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":185,"author":{"gitId":"Kailash201"},"content":"    @Override","lastModifiedDate":"2023-10-21"},{"lineNumber":186,"author":{"gitId":"Kailash201"},"content":"    public Iterator\u003cTimeInterval\u003e iterator() {","lastModifiedDate":"2023-10-21"},{"lineNumber":187,"author":{"gitId":"Kailash201"},"content":"        return this.internalList.iterator();","lastModifiedDate":"2023-10-21"},{"lineNumber":188,"author":{"gitId":"Kailash201"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":189,"author":{"gitId":"coderhuang559"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":190,"author":{"gitId":"coderhuang559"},"content":"    @Override","lastModifiedDate":"2023-10-24"},{"lineNumber":191,"author":{"gitId":"coderhuang559"},"content":"    public String toString() {","lastModifiedDate":"2023-10-24"},{"lineNumber":192,"author":{"gitId":"coderhuang559"},"content":"        String toString \u003d \"\";","lastModifiedDate":"2023-10-24"},{"lineNumber":193,"author":{"gitId":"coderhuang559"},"content":"        for (TimeInterval timeInterval : internalList) {","lastModifiedDate":"2023-10-24"},{"lineNumber":194,"author":{"gitId":"coderhuang559"},"content":"            toString +\u003d \"\\n\" + timeInterval;","lastModifiedDate":"2023-10-24"},{"lineNumber":195,"author":{"gitId":"coderhuang559"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":196,"author":{"gitId":"coderhuang559"},"content":"        return toString;","lastModifiedDate":"2023-10-24"},{"lineNumber":197,"author":{"gitId":"coderhuang559"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":198,"author":{"gitId":"Kailash201"},"content":"}","lastModifiedDate":"2023-10-21"}],"authorContributionMap":{"Kailash201":24,"coderhuang559":10,"ZD292":75,"nicholastng010601":89}},{"path":"src/main/java/seedu/address/model/UserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents User\u0027s preferences.","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class UserPrefs implements ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path addressBookFilePath \u003d Paths.get(\"data\", \"addressbook.json\");","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with default values.","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"Kailash201"},"content":"    public UserPrefs() {","lastModifiedDate":"2023-10-22"},{"lineNumber":23,"author":{"gitId":"Kailash201"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with the prefs in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public UserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code UserPrefs} with {@code newUserPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyUserPrefs newUserPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        requireNonNull(newUserPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        setGuiSettings(newUserPrefs.getGuiSettings());","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        setAddressBookFilePath(newUserPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return guiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        this.guiSettings \u003d guiSettings;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return addressBookFilePath;","lastModifiedDate":"2017-02-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        this.addressBookFilePath \u003d addressBookFilePath;","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        if (!(other instanceof UserPrefs)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        UserPrefs otherUserPrefs \u003d (UserPrefs) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return guiSettings.equals(otherUserPrefs.guiSettings)","lastModifiedDate":"2023-07-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            \u0026\u0026 addressBookFilePath.equals(otherUserPrefs.addressBookFilePath);","lastModifiedDate":"2023-07-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return Objects.hash(guiSettings, addressBookFilePath);","lastModifiedDate":"2018-08-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-02-25"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        sb.append(\"Gui Settings : \" + guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        sb.append(\"\\nLocal data file location : \" + addressBookFilePath);","lastModifiedDate":"2017-02-25"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-02-25"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Kailash201":2,"-":87}},{"path":"src/main/java/seedu/address/model/group/Group.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ZD292"},"content":"package seedu.address.model.group;","lastModifiedDate":"2023-10-10"},{"lineNumber":2,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":3,"author":{"gitId":"nicholastng010601"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-03"},{"lineNumber":4,"author":{"gitId":"coderhuang559"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":5,"author":{"gitId":"coderhuang559"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"Kailash201"},"content":"import java.util.List;","lastModifiedDate":"2023-10-22"},{"lineNumber":7,"author":{"gitId":"nicholastng010601"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-10-03"},{"lineNumber":8,"author":{"gitId":"nicholastng010601"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-10-03"},{"lineNumber":9,"author":{"gitId":"nicholastng010601"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-03"},{"lineNumber":10,"author":{"gitId":"ZD292"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-10"},{"lineNumber":11,"author":{"gitId":"ZD292"},"content":"import seedu.address.model.Duration;","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"coderhuang559"},"content":"import seedu.address.model.FreeTime;","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"nicholastng010601"},"content":"import seedu.address.model.TimeIntervalList;","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"coderhuang559"},"content":"import seedu.address.model.TimeInterval;","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"nicholastng010601"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-03"},{"lineNumber":16,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":17,"author":{"gitId":"coderhuang559"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-10-20"},{"lineNumber":18,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":19,"author":{"gitId":"Kailash201"},"content":"/**","lastModifiedDate":"2023-10-06"},{"lineNumber":20,"author":{"gitId":"Kailash201"},"content":" * Class representing a group","lastModifiedDate":"2023-10-06"},{"lineNumber":21,"author":{"gitId":"Kailash201"},"content":" */","lastModifiedDate":"2023-10-06"},{"lineNumber":22,"author":{"gitId":"nicholastng010601"},"content":"public class Group {","lastModifiedDate":"2023-10-03"},{"lineNumber":23,"author":{"gitId":"Kailash201"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Group names should be alphanumeric and must not be black\";","lastModifiedDate":"2023-10-22"},{"lineNumber":24,"author":{"gitId":"Kailash201"},"content":"    private final ObservableList\u003cPerson\u003e listOfGroupMates \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-10-06"},{"lineNumber":25,"author":{"gitId":"Kailash201"},"content":"    private final String groupName;","lastModifiedDate":"2023-10-06"},{"lineNumber":26,"author":{"gitId":"coderhuang559"},"content":"    private GroupRemark groupRemark;","lastModifiedDate":"2023-10-20"},{"lineNumber":27,"author":{"gitId":"nicholastng010601"},"content":"    private final TimeIntervalList timeIntervalList \u003d new TimeIntervalList();","lastModifiedDate":"2023-10-25"},{"lineNumber":28,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":29,"author":{"gitId":"nicholastng010601"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":30,"author":{"gitId":"nicholastng010601"},"content":"     * Name field must be present and not null.","lastModifiedDate":"2023-10-03"},{"lineNumber":31,"author":{"gitId":"nicholastng010601"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":32,"author":{"gitId":"nicholastng010601"},"content":"    public Group(String groupName) {","lastModifiedDate":"2023-10-03"},{"lineNumber":33,"author":{"gitId":"nicholastng010601"},"content":"        requireNonNull(groupName);","lastModifiedDate":"2023-10-03"},{"lineNumber":34,"author":{"gitId":"nicholastng010601"},"content":"        this.groupName \u003d groupName;","lastModifiedDate":"2023-10-03"},{"lineNumber":35,"author":{"gitId":"nicholastng010601"},"content":"        this.groupRemark \u003d new GroupRemark(\"\");","lastModifiedDate":"2023-10-22"},{"lineNumber":36,"author":{"gitId":"nicholastng010601"},"content":"    }","lastModifiedDate":"2023-10-03"},{"lineNumber":37,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":38,"author":{"gitId":"nicholastng010601"},"content":"    public Group(String groupName, GroupRemark groupRemark) {","lastModifiedDate":"2023-10-25"},{"lineNumber":39,"author":{"gitId":"nicholastng010601"},"content":"        requireNonNull(groupName);","lastModifiedDate":"2023-10-25"},{"lineNumber":40,"author":{"gitId":"nicholastng010601"},"content":"        this.groupName \u003d groupName;","lastModifiedDate":"2023-10-25"},{"lineNumber":41,"author":{"gitId":"nicholastng010601"},"content":"        this.groupRemark \u003d groupRemark;","lastModifiedDate":"2023-10-25"},{"lineNumber":42,"author":{"gitId":"nicholastng010601"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":43,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":44,"author":{"gitId":"nicholastng010601"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":45,"author":{"gitId":"nicholastng010601"},"content":"     * Name field must be present and not null.","lastModifiedDate":"2023-10-16"},{"lineNumber":46,"author":{"gitId":"nicholastng010601"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":47,"author":{"gitId":"nicholastng010601"},"content":"    public Group(String groupName, GroupRemark groupRemark, TimeIntervalList timeIntervalList) {","lastModifiedDate":"2023-10-25"},{"lineNumber":48,"author":{"gitId":"nicholastng010601"},"content":"        requireNonNull(groupName);","lastModifiedDate":"2023-10-22"},{"lineNumber":49,"author":{"gitId":"nicholastng010601"},"content":"        this.groupName \u003d groupName;","lastModifiedDate":"2023-10-22"},{"lineNumber":50,"author":{"gitId":"nicholastng010601"},"content":"        this.groupRemark \u003d groupRemark;","lastModifiedDate":"2023-10-22"},{"lineNumber":51,"author":{"gitId":"nicholastng010601"},"content":"        this.timeIntervalList.addAll(timeIntervalList);","lastModifiedDate":"2023-10-25"},{"lineNumber":52,"author":{"gitId":"nicholastng010601"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":53,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":54,"author":{"gitId":"nicholastng010601"},"content":"    /**","lastModifiedDate":"2023-10-22"},{"lineNumber":55,"author":{"gitId":"nicholastng010601"},"content":"     * Name field must be present and not null.","lastModifiedDate":"2023-10-22"},{"lineNumber":56,"author":{"gitId":"nicholastng010601"},"content":"     */","lastModifiedDate":"2023-10-22"},{"lineNumber":57,"author":{"gitId":"nicholastng010601"},"content":"    public Group(String groupName, GroupRemark groupRemark, List\u003cPerson\u003e listOfGroupMates) {","lastModifiedDate":"2023-10-22"},{"lineNumber":58,"author":{"gitId":"nicholastng010601"},"content":"        requireNonNull(groupName);","lastModifiedDate":"2023-10-16"},{"lineNumber":59,"author":{"gitId":"nicholastng010601"},"content":"        requireNonNull(listOfGroupMates);","lastModifiedDate":"2023-10-16"},{"lineNumber":60,"author":{"gitId":"nicholastng010601"},"content":"        this.groupName \u003d groupName;","lastModifiedDate":"2023-10-16"},{"lineNumber":61,"author":{"gitId":"nicholastng010601"},"content":"        this.groupRemark \u003d groupRemark;","lastModifiedDate":"2023-10-22"},{"lineNumber":62,"author":{"gitId":"nicholastng010601"},"content":"        this.listOfGroupMates.addAll(listOfGroupMates);","lastModifiedDate":"2023-10-16"},{"lineNumber":63,"author":{"gitId":"nicholastng010601"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":64,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":65,"author":{"gitId":"nicholastng010601"},"content":"    public String getGroupName() {","lastModifiedDate":"2023-10-03"},{"lineNumber":66,"author":{"gitId":"nicholastng010601"},"content":"        return groupName;","lastModifiedDate":"2023-10-03"},{"lineNumber":67,"author":{"gitId":"nicholastng010601"},"content":"    }","lastModifiedDate":"2023-10-03"},{"lineNumber":68,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":69,"author":{"gitId":"ZD292"},"content":"    public ObservableList\u003cPerson\u003e getGroupMates() {","lastModifiedDate":"2023-10-25"},{"lineNumber":70,"author":{"gitId":"nicholastng010601"},"content":"        return listOfGroupMates;","lastModifiedDate":"2023-10-16"},{"lineNumber":71,"author":{"gitId":"nicholastng010601"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":72,"author":{"gitId":"ZD292"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":73,"author":{"gitId":"ZD292"},"content":"     * Converts the internal list to streams.","lastModifiedDate":"2023-10-25"},{"lineNumber":74,"author":{"gitId":"ZD292"},"content":"     *","lastModifiedDate":"2023-10-25"},{"lineNumber":75,"author":{"gitId":"ZD292"},"content":"     * @return Internal list into streams.","lastModifiedDate":"2023-10-25"},{"lineNumber":76,"author":{"gitId":"ZD292"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":77,"author":{"gitId":"ZD292"},"content":"    public Stream\u003cPerson\u003e toStream() {","lastModifiedDate":"2023-10-25"},{"lineNumber":78,"author":{"gitId":"ZD292"},"content":"        return this.listOfGroupMates.stream();","lastModifiedDate":"2023-10-25"},{"lineNumber":79,"author":{"gitId":"ZD292"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":80,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":81,"author":{"gitId":"nicholastng010601"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":82,"author":{"gitId":"nicholastng010601"},"content":"     * Returns true if both groups have the same name.","lastModifiedDate":"2023-10-03"},{"lineNumber":83,"author":{"gitId":"nicholastng010601"},"content":"     * This defines a weaker notion of equality between two groups.","lastModifiedDate":"2023-10-03"},{"lineNumber":84,"author":{"gitId":"nicholastng010601"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":85,"author":{"gitId":"nicholastng010601"},"content":"    public boolean isSameGroup(Group otherGroup) {","lastModifiedDate":"2023-10-03"},{"lineNumber":86,"author":{"gitId":"ZD292"},"content":"        return this.equals(otherGroup);","lastModifiedDate":"2023-10-25"},{"lineNumber":87,"author":{"gitId":"ZD292"},"content":"//        if (otherGroup \u003d\u003d this) {","lastModifiedDate":"2023-10-25"},{"lineNumber":88,"author":{"gitId":"ZD292"},"content":"//            return true;","lastModifiedDate":"2023-10-25"},{"lineNumber":89,"author":{"gitId":"ZD292"},"content":"//        }","lastModifiedDate":"2023-10-25"},{"lineNumber":90,"author":{"gitId":"ZD292"},"content":"//","lastModifiedDate":"2023-10-25"},{"lineNumber":91,"author":{"gitId":"ZD292"},"content":"//        return otherGroup !\u003d null","lastModifiedDate":"2023-10-25"},{"lineNumber":92,"author":{"gitId":"ZD292"},"content":"//            \u0026\u0026 this.equals(otherGroup);","lastModifiedDate":"2023-10-25"},{"lineNumber":93,"author":{"gitId":"nicholastng010601"},"content":"    }","lastModifiedDate":"2023-10-03"},{"lineNumber":94,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":95,"author":{"gitId":"ZD292"},"content":"    /**","lastModifiedDate":"2023-10-10"},{"lineNumber":96,"author":{"gitId":"ZD292"},"content":"     * Check if same group according to name since groupName is unique","lastModifiedDate":"2023-10-10"},{"lineNumber":97,"author":{"gitId":"Kailash201"},"content":"     *","lastModifiedDate":"2023-10-22"},{"lineNumber":98,"author":{"gitId":"ZD292"},"content":"     * @param groupName of interest","lastModifiedDate":"2023-10-10"},{"lineNumber":99,"author":{"gitId":"ZD292"},"content":"     * @return whether group is the same group","lastModifiedDate":"2023-10-10"},{"lineNumber":100,"author":{"gitId":"ZD292"},"content":"     */","lastModifiedDate":"2023-10-10"},{"lineNumber":101,"author":{"gitId":"ZD292"},"content":"    public boolean nameEquals(String groupName) {","lastModifiedDate":"2023-10-10"},{"lineNumber":102,"author":{"gitId":"ZD292"},"content":"        return this.groupName.equals(groupName);","lastModifiedDate":"2023-10-10"},{"lineNumber":103,"author":{"gitId":"ZD292"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":104,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":105,"author":{"gitId":"Kailash201"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":106,"author":{"gitId":"Kailash201"},"content":"     * Returns if the name of the group is valid.","lastModifiedDate":"2023-10-06"},{"lineNumber":107,"author":{"gitId":"Kailash201"},"content":"     *","lastModifiedDate":"2023-10-22"},{"lineNumber":108,"author":{"gitId":"Kailash201"},"content":"     * @param name The name of the group","lastModifiedDate":"2023-10-06"},{"lineNumber":109,"author":{"gitId":"Kailash201"},"content":"     * @return The validity of the group name.","lastModifiedDate":"2023-10-06"},{"lineNumber":110,"author":{"gitId":"Kailash201"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":111,"author":{"gitId":"Kailash201"},"content":"    //For now no constraints","lastModifiedDate":"2023-10-06"},{"lineNumber":112,"author":{"gitId":"Kailash201"},"content":"    public static boolean isValidGroup(String name) {","lastModifiedDate":"2023-10-06"},{"lineNumber":113,"author":{"gitId":"Kailash201"},"content":"        requireNonNull(name);","lastModifiedDate":"2023-10-22"},{"lineNumber":114,"author":{"gitId":"Kailash201"},"content":"        return !name.isBlank();","lastModifiedDate":"2023-10-22"},{"lineNumber":115,"author":{"gitId":"Kailash201"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":116,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":117,"author":{"gitId":"nicholastng010601"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":118,"author":{"gitId":"nicholastng010601"},"content":"     * Removes the person from the group.","lastModifiedDate":"2023-10-03"},{"lineNumber":119,"author":{"gitId":"nicholastng010601"},"content":"     * The person must exist in the group.","lastModifiedDate":"2023-10-03"},{"lineNumber":120,"author":{"gitId":"nicholastng010601"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":121,"author":{"gitId":"coderhuang559"},"content":"    public void removePerson(Person toRemove) throws CommandException {","lastModifiedDate":"2023-10-11"},{"lineNumber":122,"author":{"gitId":"nicholastng010601"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2023-10-03"},{"lineNumber":123,"author":{"gitId":"ZD292"},"content":"        if (!this.listOfGroupMates.contains(toRemove)) {","lastModifiedDate":"2023-10-25"},{"lineNumber":124,"author":{"gitId":"Kailash201"},"content":"            throw new CommandException(","lastModifiedDate":"2023-10-22"},{"lineNumber":125,"author":{"gitId":"Kailash201"},"content":"                String.format(\"%s is not in this group: %s\", toRemove.getName().fullName, this.groupName));","lastModifiedDate":"2023-10-22"},{"lineNumber":126,"author":{"gitId":"nicholastng010601"},"content":"        }","lastModifiedDate":"2023-10-03"},{"lineNumber":127,"author":{"gitId":"coderhuang559"},"content":"        listOfGroupMates.remove(toRemove);","lastModifiedDate":"2023-10-11"},{"lineNumber":128,"author":{"gitId":"nicholastng010601"},"content":"    }","lastModifiedDate":"2023-10-03"},{"lineNumber":129,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":130,"author":{"gitId":"nicholastng010601"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":131,"author":{"gitId":"nicholastng010601"},"content":"     * Returns true if the list contains an equivalent person as the given argument.","lastModifiedDate":"2023-10-03"},{"lineNumber":132,"author":{"gitId":"nicholastng010601"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":133,"author":{"gitId":"nicholastng010601"},"content":"    public boolean contains(Person toCheck) {","lastModifiedDate":"2023-10-03"},{"lineNumber":134,"author":{"gitId":"nicholastng010601"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2023-10-03"},{"lineNumber":135,"author":{"gitId":"nicholastng010601"},"content":"        return listOfGroupMates.stream().anyMatch(toCheck::isSamePerson);","lastModifiedDate":"2023-10-03"},{"lineNumber":136,"author":{"gitId":"nicholastng010601"},"content":"    }","lastModifiedDate":"2023-10-03"},{"lineNumber":137,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":138,"author":{"gitId":"nicholastng010601"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":139,"author":{"gitId":"nicholastng010601"},"content":"     * Adds a person to the list.","lastModifiedDate":"2023-10-03"},{"lineNumber":140,"author":{"gitId":"nicholastng010601"},"content":"     * The person must not already exist in the list.","lastModifiedDate":"2023-10-03"},{"lineNumber":141,"author":{"gitId":"nicholastng010601"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":142,"author":{"gitId":"ZD292"},"content":"    public void addPerson(Person personToAdd) throws CommandException {","lastModifiedDate":"2023-10-10"},{"lineNumber":143,"author":{"gitId":"ZD292"},"content":"        requireNonNull(personToAdd);","lastModifiedDate":"2023-10-10"},{"lineNumber":144,"author":{"gitId":"coderhuang559"},"content":"        if (this.contains(personToAdd)) {","lastModifiedDate":"2023-10-11"},{"lineNumber":145,"author":{"gitId":"Kailash201"},"content":"            throw new CommandException(","lastModifiedDate":"2023-10-22"},{"lineNumber":146,"author":{"gitId":"Kailash201"},"content":"                String.format(\"%s is already in this group: %s\", personToAdd.getName().fullName, this.groupName));","lastModifiedDate":"2023-10-22"},{"lineNumber":147,"author":{"gitId":"nicholastng010601"},"content":"        }","lastModifiedDate":"2023-10-03"},{"lineNumber":148,"author":{"gitId":"ZD292"},"content":"        listOfGroupMates.add(personToAdd);","lastModifiedDate":"2023-10-10"},{"lineNumber":149,"author":{"gitId":"nicholastng010601"},"content":"    }","lastModifiedDate":"2023-10-03"},{"lineNumber":150,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":151,"author":{"gitId":"nicholastng010601"},"content":"    @Override","lastModifiedDate":"2023-10-03"},{"lineNumber":152,"author":{"gitId":"nicholastng010601"},"content":"    public String toString() {","lastModifiedDate":"2023-10-03"},{"lineNumber":153,"author":{"gitId":"nicholastng010601"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-03"},{"lineNumber":154,"author":{"gitId":"nicholastng010601"},"content":"            .add(\"Group name\", groupName)","lastModifiedDate":"2023-10-03"},{"lineNumber":155,"author":{"gitId":"nicholastng010601"},"content":"            .toString();","lastModifiedDate":"2023-10-03"},{"lineNumber":156,"author":{"gitId":"nicholastng010601"},"content":"    }","lastModifiedDate":"2023-10-03"},{"lineNumber":157,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":158,"author":{"gitId":"Kailash201"},"content":"    public void printGrpMates() {","lastModifiedDate":"2023-10-12"},{"lineNumber":159,"author":{"gitId":"Kailash201"},"content":"        this.listOfGroupMates.forEach(x -\u003e System.out.println(x.getName()));","lastModifiedDate":"2023-10-12"},{"lineNumber":160,"author":{"gitId":"Kailash201"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":161,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":162,"author":{"gitId":"lerxuann"},"content":"    public ObservableList\u003cPerson\u003e getListOfGroupMates() {","lastModifiedDate":"2023-10-19"},{"lineNumber":163,"author":{"gitId":"lerxuann"},"content":"        return this.listOfGroupMates;","lastModifiedDate":"2023-10-19"},{"lineNumber":164,"author":{"gitId":"lerxuann"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":165,"author":{"gitId":"lerxuann"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":166,"author":{"gitId":"Kailash201"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":167,"author":{"gitId":"Kailash201"},"content":"    public boolean equals(Object group) {","lastModifiedDate":"2023-10-12"},{"lineNumber":168,"author":{"gitId":"Kailash201"},"content":"        if (group \u003d\u003d this) {","lastModifiedDate":"2023-10-12"},{"lineNumber":169,"author":{"gitId":"Kailash201"},"content":"            return true;","lastModifiedDate":"2023-10-12"},{"lineNumber":170,"author":{"gitId":"Kailash201"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":171,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":172,"author":{"gitId":"Kailash201"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-12"},{"lineNumber":173,"author":{"gitId":"Kailash201"},"content":"        if (!(group instanceof Group)) {","lastModifiedDate":"2023-10-12"},{"lineNumber":174,"author":{"gitId":"Kailash201"},"content":"            return false;","lastModifiedDate":"2023-10-12"},{"lineNumber":175,"author":{"gitId":"Kailash201"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":176,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":177,"author":{"gitId":"Kailash201"},"content":"        Group otherGroup \u003d (Group) group;","lastModifiedDate":"2023-10-12"},{"lineNumber":178,"author":{"gitId":"Kailash201"},"content":"        return this.groupName.equals(otherGroup.getGroupName());","lastModifiedDate":"2023-10-12"},{"lineNumber":179,"author":{"gitId":"Kailash201"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":180,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":181,"author":{"gitId":"ZD292"},"content":"//    public Stream\u003cPerson\u003e grpMatesStream() {","lastModifiedDate":"2023-10-25"},{"lineNumber":182,"author":{"gitId":"ZD292"},"content":"//        return listOfGroupMates.stream();","lastModifiedDate":"2023-10-25"},{"lineNumber":183,"author":{"gitId":"ZD292"},"content":"//    }","lastModifiedDate":"2023-10-25"},{"lineNumber":184,"author":{"gitId":"ZD292"},"content":"//","lastModifiedDate":"2023-10-25"},{"lineNumber":185,"author":{"gitId":"coderhuang559"},"content":"    public GroupRemark getGroupRemark() {","lastModifiedDate":"2023-10-20"},{"lineNumber":186,"author":{"gitId":"coderhuang559"},"content":"        return this.groupRemark;","lastModifiedDate":"2023-10-20"},{"lineNumber":187,"author":{"gitId":"coderhuang559"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":188,"author":{"gitId":"coderhuang559"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":189,"author":{"gitId":"coderhuang559"},"content":"    public void setGroupRemark(GroupRemark groupRemark) {","lastModifiedDate":"2023-10-20"},{"lineNumber":190,"author":{"gitId":"coderhuang559"},"content":"        this.groupRemark \u003d groupRemark;","lastModifiedDate":"2023-10-20"},{"lineNumber":191,"author":{"gitId":"ZD292"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":192,"author":{"gitId":"coderhuang559"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":193,"author":{"gitId":"ZD292"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":194,"author":{"gitId":"ZD292"},"content":"     * Modify StringBuilder to display message should any groupMate not input their free time","lastModifiedDate":"2023-10-25"},{"lineNumber":195,"author":{"gitId":"ZD292"},"content":"     * @param br StringBuilder","lastModifiedDate":"2023-10-25"},{"lineNumber":196,"author":{"gitId":"ZD292"},"content":"     * @param format Format specifier","lastModifiedDate":"2023-10-25"},{"lineNumber":197,"author":{"gitId":"ZD292"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":198,"author":{"gitId":"ZD292"},"content":"    public void areAllFree(StringBuilder br, String format) {","lastModifiedDate":"2023-10-25"},{"lineNumber":199,"author":{"gitId":"ZD292"},"content":"        for (Person p: this.listOfGroupMates) {","lastModifiedDate":"2023-10-25"},{"lineNumber":200,"author":{"gitId":"ZD292"},"content":"            if (p.isNotFree()) {","lastModifiedDate":"2023-10-25"},{"lineNumber":201,"author":{"gitId":"ZD292"},"content":"                br.append(String.format(format, p.getName().fullName));","lastModifiedDate":"2023-10-25"},{"lineNumber":202,"author":{"gitId":"ZD292"},"content":"            }","lastModifiedDate":"2023-10-25"},{"lineNumber":203,"author":{"gitId":"ZD292"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":204,"author":{"gitId":"ZD292"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":205,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":206,"author":{"gitId":"ZD292"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":207,"author":{"gitId":"ZD292"},"content":"     * Compare each person in group to get overlap","lastModifiedDate":"2023-10-25"},{"lineNumber":208,"author":{"gitId":"ZD292"},"content":"     * Accumulate the result","lastModifiedDate":"2023-10-25"},{"lineNumber":209,"author":{"gitId":"ZD292"},"content":"     * @param duration represent duration in minutes","lastModifiedDate":"2023-10-25"},{"lineNumber":210,"author":{"gitId":"ZD292"},"content":"     * @return TimeInterval that can fit duration specified","lastModifiedDate":"2023-10-25"},{"lineNumber":211,"author":{"gitId":"ZD292"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":212,"author":{"gitId":"ZD292"},"content":"    public TimeIntervalList findFreeTime(Duration duration) throws CommandException {","lastModifiedDate":"2023-10-25"},{"lineNumber":213,"author":{"gitId":"ZD292"},"content":"        // compare person to person get overlap","lastModifiedDate":"2023-10-25"},{"lineNumber":214,"author":{"gitId":"ZD292"},"content":"        // will use one getter for freeTime","lastModifiedDate":"2023-10-25"},{"lineNumber":215,"author":{"gitId":"ZD292"},"content":"        TimeIntervalList freeTime \u003d new TimeIntervalList();","lastModifiedDate":"2023-10-25"},{"lineNumber":216,"author":{"gitId":"ZD292"},"content":"        // nobody in group","lastModifiedDate":"2023-10-25"},{"lineNumber":217,"author":{"gitId":"ZD292"},"content":"        if (listOfGroupMates.isEmpty()) {","lastModifiedDate":"2023-10-25"},{"lineNumber":218,"author":{"gitId":"ZD292"},"content":"            throw new CommandException(\"Group is empty\");","lastModifiedDate":"2023-10-25"},{"lineNumber":219,"author":{"gitId":"ZD292"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":220,"author":{"gitId":"ZD292"},"content":"        // only 1 person in group","lastModifiedDate":"2023-10-25"},{"lineNumber":221,"author":{"gitId":"ZD292"},"content":"        if (listOfGroupMates.size() \u003d\u003d 1) {","lastModifiedDate":"2023-10-25"},{"lineNumber":222,"author":{"gitId":"ZD292"},"content":"            Person person \u003d listOfGroupMates.get(0);","lastModifiedDate":"2023-10-25"},{"lineNumber":223,"author":{"gitId":"ZD292"},"content":"            TimeIntervalList personFreeTime \u003d person.getTime();","lastModifiedDate":"2023-10-25"},{"lineNumber":224,"author":{"gitId":"ZD292"},"content":"            // check whether fits duration or not","lastModifiedDate":"2023-10-25"},{"lineNumber":225,"author":{"gitId":"ZD292"},"content":"            personFreeTime \u003d personFreeTime.fitDuration(duration);","lastModifiedDate":"2023-10-25"},{"lineNumber":226,"author":{"gitId":"ZD292"},"content":"            return personFreeTime;","lastModifiedDate":"2023-10-25"},{"lineNumber":227,"author":{"gitId":"coderhuang559"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":228,"author":{"gitId":"coderhuang559"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":229,"author":{"gitId":"ZD292"},"content":"        for (int i \u003d 0; i \u003c listOfGroupMates.size(); i++) {","lastModifiedDate":"2023-10-25"},{"lineNumber":230,"author":{"gitId":"ZD292"},"content":"           if (i + 1 \u003d\u003d listOfGroupMates.size()) {","lastModifiedDate":"2023-10-25"},{"lineNumber":231,"author":{"gitId":"ZD292"},"content":"               break;","lastModifiedDate":"2023-10-25"},{"lineNumber":232,"author":{"gitId":"coderhuang559"},"content":"           }","lastModifiedDate":"2023-10-25"},{"lineNumber":233,"author":{"gitId":"ZD292"},"content":"           Person firstPerson \u003d listOfGroupMates.get(i);","lastModifiedDate":"2023-10-25"},{"lineNumber":234,"author":{"gitId":"ZD292"},"content":"           Person secondPerson \u003d listOfGroupMates.get(i + 1);","lastModifiedDate":"2023-10-25"},{"lineNumber":235,"author":{"gitId":"ZD292"},"content":"           TimeIntervalList first \u003d firstPerson.getTime();","lastModifiedDate":"2023-10-25"},{"lineNumber":236,"author":{"gitId":"ZD292"},"content":"           TimeIntervalList second \u003d secondPerson.getTime();","lastModifiedDate":"2023-10-25"},{"lineNumber":237,"author":{"gitId":"ZD292"},"content":"           // uninitialised freeTime e.g. first and second person in group","lastModifiedDate":"2023-10-25"},{"lineNumber":238,"author":{"gitId":"ZD292"},"content":"           if (freeTime.isEmpty()) {","lastModifiedDate":"2023-10-25"},{"lineNumber":239,"author":{"gitId":"ZD292"},"content":"               freeTime \u003d first.findOverlap(second, duration);","lastModifiedDate":"2023-10-25"},{"lineNumber":240,"author":{"gitId":"ZD292"},"content":"           } else {","lastModifiedDate":"2023-10-25"},{"lineNumber":241,"author":{"gitId":"ZD292"},"content":"               freeTime \u003d freeTime.findOverlap(second, duration);","lastModifiedDate":"2023-10-25"},{"lineNumber":242,"author":{"gitId":"ZD292"},"content":"           }","lastModifiedDate":"2023-10-25"},{"lineNumber":243,"author":{"gitId":"ZD292"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":244,"author":{"gitId":"ZD292"},"content":"        return freeTime;","lastModifiedDate":"2023-10-25"},{"lineNumber":245,"author":{"gitId":"ZD292"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":246,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":247,"author":{"gitId":"nicholastng010601"},"content":"    public void addTime(ArrayList\u003cTimeInterval\u003e toAddTime) throws CommandException {","lastModifiedDate":"2023-10-25"},{"lineNumber":248,"author":{"gitId":"nicholastng010601"},"content":"        this.timeIntervalList.addTime(toAddTime);","lastModifiedDate":"2023-10-25"},{"lineNumber":249,"author":{"gitId":"coderhuang559"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":250,"author":{"gitId":"coderhuang559"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":251,"author":{"gitId":"nicholastng010601"},"content":"    public TimeIntervalList getTime() {","lastModifiedDate":"2023-10-25"},{"lineNumber":252,"author":{"gitId":"nicholastng010601"},"content":"        return this.timeIntervalList;","lastModifiedDate":"2023-10-25"},{"lineNumber":253,"author":{"gitId":"coderhuang559"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":254,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":255,"author":{"gitId":"nicholastng010601"},"content":"    public void deleteTime(ArrayList\u003cTimeInterval\u003e toDeleteTime) throws CommandException { this.timeIntervalList.deleteTime(toDeleteTime);}","lastModifiedDate":"2023-10-25"},{"lineNumber":256,"author":{"gitId":"nicholastng010601"},"content":"}","lastModifiedDate":"2023-10-03"}],"authorContributionMap":{"Kailash201":43,"coderhuang559":22,"ZD292":88,"nicholastng010601":99,"lerxuann":4}},{"path":"src/main/java/seedu/address/model/group/GroupList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ZD292"},"content":"package seedu.address.model.group;","lastModifiedDate":"2023-10-10"},{"lineNumber":2,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":3,"author":{"gitId":"nicholastng010601"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-03"},{"lineNumber":4,"author":{"gitId":"Kailash201"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":6,"author":{"gitId":"ZD292"},"content":"import java.util.Iterator;","lastModifiedDate":"2023-10-10"},{"lineNumber":7,"author":{"gitId":"Kailash201"},"content":"import java.util.List;","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"Kailash201"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-10-06"},{"lineNumber":9,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":10,"author":{"gitId":"nicholastng010601"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-10-03"},{"lineNumber":11,"author":{"gitId":"Kailash201"},"content":"import javafx.collections.ListChangeListener;","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"nicholastng010601"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-10-03"},{"lineNumber":13,"author":{"gitId":"nicholastng010601"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"nicholastng010601"},"content":"import seedu.address.logic.commands.GroupPersonCommand;","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"nicholastng010601"},"content":"import seedu.address.logic.commands.UngroupPersonCommand;","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"ZD292"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-10"},{"lineNumber":17,"author":{"gitId":"coderhuang559"},"content":"import seedu.address.model.group.exceptions.DuplicateGroupException;","lastModifiedDate":"2023-10-11"},{"lineNumber":18,"author":{"gitId":"ZD292"},"content":"import seedu.address.model.group.exceptions.GroupNotFoundException;","lastModifiedDate":"2023-10-10"},{"lineNumber":19,"author":{"gitId":"nicholastng010601"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-16"},{"lineNumber":20,"author":{"gitId":"nicholastng010601"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":22,"author":{"gitId":"Kailash201"},"content":"/**","lastModifiedDate":"2023-10-06"},{"lineNumber":23,"author":{"gitId":"Kailash201"},"content":" * A list containing groups","lastModifiedDate":"2023-10-06"},{"lineNumber":24,"author":{"gitId":"Kailash201"},"content":" */","lastModifiedDate":"2023-10-06"},{"lineNumber":25,"author":{"gitId":"ZD292"},"content":"public class GroupList implements Iterable\u003cGroup\u003e {","lastModifiedDate":"2023-10-10"},{"lineNumber":26,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":27,"author":{"gitId":"Kailash201"},"content":"    private final ObservableList\u003cGroup\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"ZD292"},"content":"    private final ObservableList\u003cGroup\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2023-10-10"},{"lineNumber":29,"author":{"gitId":"ZD292"},"content":"        FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2023-10-10"},{"lineNumber":30,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":31,"author":{"gitId":"nicholastng010601"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":32,"author":{"gitId":"nicholastng010601"},"content":"     * Returns true if the list contains an equivalent group as the given argument.","lastModifiedDate":"2023-10-03"},{"lineNumber":33,"author":{"gitId":"nicholastng010601"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":34,"author":{"gitId":"nicholastng010601"},"content":"    public boolean contains(Group toCheck) {","lastModifiedDate":"2023-10-03"},{"lineNumber":35,"author":{"gitId":"nicholastng010601"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2023-10-03"},{"lineNumber":36,"author":{"gitId":"nicholastng010601"},"content":"        return internalList.stream().anyMatch(toCheck::isSameGroup);","lastModifiedDate":"2023-10-03"},{"lineNumber":37,"author":{"gitId":"nicholastng010601"},"content":"    }","lastModifiedDate":"2023-10-03"},{"lineNumber":38,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":39,"author":{"gitId":"nicholastng010601"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":40,"author":{"gitId":"nicholastng010601"},"content":"     * Adds a group to the list.","lastModifiedDate":"2023-10-03"},{"lineNumber":41,"author":{"gitId":"nicholastng010601"},"content":"     * The group must not already exist in the list.","lastModifiedDate":"2023-10-03"},{"lineNumber":42,"author":{"gitId":"nicholastng010601"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":43,"author":{"gitId":"nicholastng010601"},"content":"    public void add(Group toAdd) {","lastModifiedDate":"2023-10-03"},{"lineNumber":44,"author":{"gitId":"nicholastng010601"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2023-10-03"},{"lineNumber":45,"author":{"gitId":"coderhuang559"},"content":"        if (this.contains(toAdd)) {","lastModifiedDate":"2023-10-11"},{"lineNumber":46,"author":{"gitId":"coderhuang559"},"content":"            throw new DuplicateGroupException();","lastModifiedDate":"2023-10-11"},{"lineNumber":47,"author":{"gitId":"nicholastng010601"},"content":"        }","lastModifiedDate":"2023-10-03"},{"lineNumber":48,"author":{"gitId":"nicholastng010601"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2023-10-03"},{"lineNumber":49,"author":{"gitId":"nicholastng010601"},"content":"    }","lastModifiedDate":"2023-10-03"},{"lineNumber":50,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":51,"author":{"gitId":"nicholastng010601"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":52,"author":{"gitId":"nicholastng010601"},"content":"     * Replaces the contents of this list with {@code persons}.","lastModifiedDate":"2023-10-17"},{"lineNumber":53,"author":{"gitId":"nicholastng010601"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2023-10-17"},{"lineNumber":54,"author":{"gitId":"nicholastng010601"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":55,"author":{"gitId":"nicholastng010601"},"content":"    public void setGroups(List\u003cGroup\u003e groups) {","lastModifiedDate":"2023-10-17"},{"lineNumber":56,"author":{"gitId":"nicholastng010601"},"content":"        requireAllNonNull(groups);","lastModifiedDate":"2023-10-17"},{"lineNumber":57,"author":{"gitId":"nicholastng010601"},"content":"        if (!groupsAreUnique(groups)) {","lastModifiedDate":"2023-10-17"},{"lineNumber":58,"author":{"gitId":"nicholastng010601"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2023-10-17"},{"lineNumber":59,"author":{"gitId":"nicholastng010601"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":60,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":61,"author":{"gitId":"nicholastng010601"},"content":"        internalList.setAll(groups);","lastModifiedDate":"2023-10-17"},{"lineNumber":62,"author":{"gitId":"nicholastng010601"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":63,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":64,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":65,"author":{"gitId":"Kailash201"},"content":"    private boolean groupsAreUnique(List\u003cGroup\u003e groups) {","lastModifiedDate":"2023-10-12"},{"lineNumber":66,"author":{"gitId":"Kailash201"},"content":"        for (int i \u003d 0; i \u003c groups.size() - 1; i++) {","lastModifiedDate":"2023-10-12"},{"lineNumber":67,"author":{"gitId":"Kailash201"},"content":"            for (int j \u003d i + 1; j \u003c groups.size(); j++) {","lastModifiedDate":"2023-10-12"},{"lineNumber":68,"author":{"gitId":"Kailash201"},"content":"                if (groups.get(i).isSameGroup(groups.get(j))) {","lastModifiedDate":"2023-10-12"},{"lineNumber":69,"author":{"gitId":"Kailash201"},"content":"                    return false;","lastModifiedDate":"2023-10-12"},{"lineNumber":70,"author":{"gitId":"Kailash201"},"content":"                }","lastModifiedDate":"2023-10-12"},{"lineNumber":71,"author":{"gitId":"Kailash201"},"content":"            }","lastModifiedDate":"2023-10-12"},{"lineNumber":72,"author":{"gitId":"Kailash201"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":73,"author":{"gitId":"Kailash201"},"content":"        return true;","lastModifiedDate":"2023-10-12"},{"lineNumber":74,"author":{"gitId":"Kailash201"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":75,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":76,"author":{"gitId":"nicholastng010601"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":77,"author":{"gitId":"coderhuang559"},"content":"     * Removes the equivalent group from the list.","lastModifiedDate":"2023-10-11"},{"lineNumber":78,"author":{"gitId":"coderhuang559"},"content":"     * The group must exist in the list.","lastModifiedDate":"2023-10-11"},{"lineNumber":79,"author":{"gitId":"nicholastng010601"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":80,"author":{"gitId":"nicholastng010601"},"content":"    public void remove(Group toRemove) {","lastModifiedDate":"2023-10-03"},{"lineNumber":81,"author":{"gitId":"nicholastng010601"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2023-10-03"},{"lineNumber":82,"author":{"gitId":"ZD292"},"content":"        boolean isRemoved \u003d internalList.remove(toRemove);","lastModifiedDate":"2023-10-25"},{"lineNumber":83,"author":{"gitId":"ZD292"},"content":"        if (!isRemoved) {","lastModifiedDate":"2023-10-25"},{"lineNumber":84,"author":{"gitId":"Kailash201"},"content":"            throw new GroupNotFoundException();","lastModifiedDate":"2023-10-12"},{"lineNumber":85,"author":{"gitId":"Kailash201"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":86,"author":{"gitId":"nicholastng010601"},"content":"    }","lastModifiedDate":"2023-10-03"},{"lineNumber":87,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":88,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":89,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":90,"author":{"gitId":"Kailash201"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":91,"author":{"gitId":"Kailash201"},"content":"     * Converts the internal list to streams.","lastModifiedDate":"2023-10-06"},{"lineNumber":92,"author":{"gitId":"Kailash201"},"content":"     *","lastModifiedDate":"2023-10-22"},{"lineNumber":93,"author":{"gitId":"Kailash201"},"content":"     * @return Internal list into streams.","lastModifiedDate":"2023-10-06"},{"lineNumber":94,"author":{"gitId":"Kailash201"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":95,"author":{"gitId":"Kailash201"},"content":"    public Stream\u003cGroup\u003e toStream() {","lastModifiedDate":"2023-10-06"},{"lineNumber":96,"author":{"gitId":"Kailash201"},"content":"        return internalList.stream();","lastModifiedDate":"2023-10-06"},{"lineNumber":97,"author":{"gitId":"Kailash201"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":98,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":99,"author":{"gitId":"ZD292"},"content":"    @Override","lastModifiedDate":"2023-10-10"},{"lineNumber":100,"author":{"gitId":"ZD292"},"content":"    public Iterator\u003cGroup\u003e iterator() {","lastModifiedDate":"2023-10-10"},{"lineNumber":101,"author":{"gitId":"ZD292"},"content":"        return internalList.iterator();","lastModifiedDate":"2023-10-10"},{"lineNumber":102,"author":{"gitId":"ZD292"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":103,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":104,"author":{"gitId":"ZD292"},"content":"    public ObservableList\u003cGroup\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2023-10-10"},{"lineNumber":105,"author":{"gitId":"ZD292"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2023-10-10"},{"lineNumber":106,"author":{"gitId":"ZD292"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":107,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":108,"author":{"gitId":"nicholastng010601"},"content":"    @Override","lastModifiedDate":"2023-10-03"},{"lineNumber":109,"author":{"gitId":"nicholastng010601"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-03"},{"lineNumber":110,"author":{"gitId":"nicholastng010601"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-03"},{"lineNumber":111,"author":{"gitId":"nicholastng010601"},"content":"            return true;","lastModifiedDate":"2023-10-03"},{"lineNumber":112,"author":{"gitId":"nicholastng010601"},"content":"        }","lastModifiedDate":"2023-10-03"},{"lineNumber":113,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":114,"author":{"gitId":"nicholastng010601"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-03"},{"lineNumber":115,"author":{"gitId":"nicholastng010601"},"content":"        if (!(other instanceof GroupList)) {","lastModifiedDate":"2023-10-03"},{"lineNumber":116,"author":{"gitId":"nicholastng010601"},"content":"            return false;","lastModifiedDate":"2023-10-03"},{"lineNumber":117,"author":{"gitId":"nicholastng010601"},"content":"        }","lastModifiedDate":"2023-10-03"},{"lineNumber":118,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":119,"author":{"gitId":"nicholastng010601"},"content":"        GroupList otherGroupList \u003d (GroupList) other;","lastModifiedDate":"2023-10-03"},{"lineNumber":120,"author":{"gitId":"nicholastng010601"},"content":"        return internalList.equals(otherGroupList.internalList);","lastModifiedDate":"2023-10-03"},{"lineNumber":121,"author":{"gitId":"nicholastng010601"},"content":"    }","lastModifiedDate":"2023-10-03"},{"lineNumber":122,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":123,"author":{"gitId":"ZD292"},"content":"    public Group getGroup(String groupName) throws CommandException {","lastModifiedDate":"2023-10-10"},{"lineNumber":124,"author":{"gitId":"ZD292"},"content":"        for (Group group : this.internalList) {","lastModifiedDate":"2023-10-10"},{"lineNumber":125,"author":{"gitId":"ZD292"},"content":"            if (group.nameEquals(groupName)) {","lastModifiedDate":"2023-10-10"},{"lineNumber":126,"author":{"gitId":"ZD292"},"content":"                return group;","lastModifiedDate":"2023-10-10"},{"lineNumber":127,"author":{"gitId":"ZD292"},"content":"            }","lastModifiedDate":"2023-10-10"},{"lineNumber":128,"author":{"gitId":"ZD292"},"content":"        }","lastModifiedDate":"2023-10-10"},{"lineNumber":129,"author":{"gitId":"nicholastng010601"},"content":"        throw new CommandException(Messages.MESSAGE_NO_GROUP_WITH_NAME_FOUND);","lastModifiedDate":"2023-10-25"},{"lineNumber":130,"author":{"gitId":"ZD292"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":131,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":132,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":133,"author":{"gitId":"nicholastng010601"},"content":"    @Override","lastModifiedDate":"2023-10-03"},{"lineNumber":134,"author":{"gitId":"nicholastng010601"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-03"},{"lineNumber":135,"author":{"gitId":"nicholastng010601"},"content":"        return internalList.hashCode();","lastModifiedDate":"2023-10-03"},{"lineNumber":136,"author":{"gitId":"nicholastng010601"},"content":"    }","lastModifiedDate":"2023-10-03"},{"lineNumber":137,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":138,"author":{"gitId":"nicholastng010601"},"content":"    @Override","lastModifiedDate":"2023-10-03"},{"lineNumber":139,"author":{"gitId":"nicholastng010601"},"content":"    public String toString() {","lastModifiedDate":"2023-10-03"},{"lineNumber":140,"author":{"gitId":"nicholastng010601"},"content":"        return internalList.toString();","lastModifiedDate":"2023-10-03"},{"lineNumber":141,"author":{"gitId":"nicholastng010601"},"content":"    }","lastModifiedDate":"2023-10-03"},{"lineNumber":142,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":143,"author":{"gitId":"nicholastng010601"},"content":"}","lastModifiedDate":"2023-10-03"}],"authorContributionMap":{"Kailash201":33,"coderhuang559":5,"ZD292":27,"nicholastng010601":78}},{"path":"src/main/java/seedu/address/model/group/GroupRemark.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"coderhuang559"},"content":"package seedu.address.model.group;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"coderhuang559"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":3,"author":{"gitId":"coderhuang559"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-20"},{"lineNumber":4,"author":{"gitId":"coderhuang559"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":5,"author":{"gitId":"coderhuang559"},"content":"/**","lastModifiedDate":"2023-10-20"},{"lineNumber":6,"author":{"gitId":"coderhuang559"},"content":" * Represents a Group\u0027s remark in the address book.","lastModifiedDate":"2023-10-20"},{"lineNumber":7,"author":{"gitId":"coderhuang559"},"content":" * Guarantees: immutable; is always valid","lastModifiedDate":"2023-10-20"},{"lineNumber":8,"author":{"gitId":"coderhuang559"},"content":" */","lastModifiedDate":"2023-10-20"},{"lineNumber":9,"author":{"gitId":"coderhuang559"},"content":"public class GroupRemark {","lastModifiedDate":"2023-10-20"},{"lineNumber":10,"author":{"gitId":"coderhuang559"},"content":"    public final String value;","lastModifiedDate":"2023-10-20"},{"lineNumber":11,"author":{"gitId":"coderhuang559"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":12,"author":{"gitId":"coderhuang559"},"content":"    public GroupRemark(String groupRemark) {","lastModifiedDate":"2023-10-20"},{"lineNumber":13,"author":{"gitId":"coderhuang559"},"content":"        requireNonNull(groupRemark);","lastModifiedDate":"2023-10-20"},{"lineNumber":14,"author":{"gitId":"coderhuang559"},"content":"        value \u003d groupRemark;","lastModifiedDate":"2023-10-20"},{"lineNumber":15,"author":{"gitId":"coderhuang559"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":16,"author":{"gitId":"coderhuang559"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":17,"author":{"gitId":"coderhuang559"},"content":"    @Override","lastModifiedDate":"2023-10-20"},{"lineNumber":18,"author":{"gitId":"coderhuang559"},"content":"    public String toString() {","lastModifiedDate":"2023-10-20"},{"lineNumber":19,"author":{"gitId":"coderhuang559"},"content":"        return value;","lastModifiedDate":"2023-10-20"},{"lineNumber":20,"author":{"gitId":"coderhuang559"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":21,"author":{"gitId":"coderhuang559"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":22,"author":{"gitId":"coderhuang559"},"content":"    @Override","lastModifiedDate":"2023-10-20"},{"lineNumber":23,"author":{"gitId":"coderhuang559"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-20"},{"lineNumber":24,"author":{"gitId":"coderhuang559"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-10-20"},{"lineNumber":25,"author":{"gitId":"coderhuang559"},"content":"                || (other instanceof GroupRemark // instanceof handles nulls","lastModifiedDate":"2023-10-20"},{"lineNumber":26,"author":{"gitId":"coderhuang559"},"content":"                \u0026\u0026 value.equals(((GroupRemark) other).value)); // state check","lastModifiedDate":"2023-10-20"},{"lineNumber":27,"author":{"gitId":"coderhuang559"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":28,"author":{"gitId":"coderhuang559"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":29,"author":{"gitId":"coderhuang559"},"content":"    @Override","lastModifiedDate":"2023-10-20"},{"lineNumber":30,"author":{"gitId":"coderhuang559"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-20"},{"lineNumber":31,"author":{"gitId":"coderhuang559"},"content":"        return value.hashCode();","lastModifiedDate":"2023-10-20"},{"lineNumber":32,"author":{"gitId":"coderhuang559"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":33,"author":{"gitId":"coderhuang559"},"content":"}","lastModifiedDate":"2023-10-20"}],"authorContributionMap":{"coderhuang559":33}},{"path":"src/main/java/seedu/address/model/group/exceptions/DuplicateGroupException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ZD292"},"content":"package seedu.address.model.group.exceptions;","lastModifiedDate":"2023-10-10"},{"lineNumber":2,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":3,"author":{"gitId":"ZD292"},"content":"/**","lastModifiedDate":"2023-10-10"},{"lineNumber":4,"author":{"gitId":"ZD292"},"content":" * Signals that the operation will result in duplicate Persons (Persons are considered duplicates if they have the same","lastModifiedDate":"2023-10-10"},{"lineNumber":5,"author":{"gitId":"ZD292"},"content":" * identity).","lastModifiedDate":"2023-10-10"},{"lineNumber":6,"author":{"gitId":"ZD292"},"content":" */","lastModifiedDate":"2023-10-10"},{"lineNumber":7,"author":{"gitId":"ZD292"},"content":"public class DuplicateGroupException extends RuntimeException {","lastModifiedDate":"2023-10-10"},{"lineNumber":8,"author":{"gitId":"ZD292"},"content":"    public DuplicateGroupException() {","lastModifiedDate":"2023-10-10"},{"lineNumber":9,"author":{"gitId":"ZD292"},"content":"        super(\"Operation would result in person being assigned to duplicate groups\");","lastModifiedDate":"2023-10-10"},{"lineNumber":10,"author":{"gitId":"ZD292"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":11,"author":{"gitId":"ZD292"},"content":"}","lastModifiedDate":"2023-10-10"}],"authorContributionMap":{"ZD292":11}},{"path":"src/main/java/seedu/address/model/group/exceptions/GroupNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ZD292"},"content":"package seedu.address.model.group.exceptions;","lastModifiedDate":"2023-10-10"},{"lineNumber":2,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":3,"author":{"gitId":"ZD292"},"content":"/**","lastModifiedDate":"2023-10-10"},{"lineNumber":4,"author":{"gitId":"ZD292"},"content":" * Exception thrown when Group specified can not be found","lastModifiedDate":"2023-10-10"},{"lineNumber":5,"author":{"gitId":"ZD292"},"content":" */","lastModifiedDate":"2023-10-10"},{"lineNumber":6,"author":{"gitId":"ZD292"},"content":"public class GroupNotFoundException extends RuntimeException {","lastModifiedDate":"2023-10-10"},{"lineNumber":7,"author":{"gitId":"ZD292"},"content":"    public GroupNotFoundException() {","lastModifiedDate":"2023-10-10"},{"lineNumber":8,"author":{"gitId":"ZD292"},"content":"        super(\"Group not found\");","lastModifiedDate":"2023-10-10"},{"lineNumber":9,"author":{"gitId":"ZD292"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":10,"author":{"gitId":"ZD292"},"content":"}","lastModifiedDate":"2023-10-10"}],"authorContributionMap":{"ZD292":10}},{"path":"src/main/java/seedu/address/model/person/Name.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s name in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Name {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        \"Names should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2018-04-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public final String fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param name A valid name.","lastModifiedDate":"2017-05-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Name(String name) {","lastModifiedDate":"2017-05-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        fullName \u003d name;","lastModifiedDate":"2018-08-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2018-04-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"ZD292"},"content":"    public boolean nameEquals(String personName) {","lastModifiedDate":"2023-10-10"},{"lineNumber":42,"author":{"gitId":"ZD292"},"content":"        return (this.fullName).equals(personName);","lastModifiedDate":"2023-10-10"},{"lineNumber":43,"author":{"gitId":"ZD292"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":44,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"ZD292"},"content":"    public java.lang.String toString() {","lastModifiedDate":"2023-10-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        if (!(other instanceof Name)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        Name otherName \u003d (Name) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":63,"author":{"gitId":"nicholastng010601"},"content":"        return fullName.equalsIgnoreCase(otherName.fullName);","lastModifiedDate":"2023-10-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return fullName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"ZD292":5,"nicholastng010601":1,"-":65}},{"path":"src/main/java/seedu/address/model/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"ZD292"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"Kailash201"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":10,"author":{"gitId":"ZD292"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-10"},{"lineNumber":11,"author":{"gitId":"nicholastng010601"},"content":"import seedu.address.model.TimeIntervalList;","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"Kailash201"},"content":"import seedu.address.model.TimeInterval;","lastModifiedDate":"2023-10-21"},{"lineNumber":13,"author":{"gitId":"ZD292"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2023-10-10"},{"lineNumber":14,"author":{"gitId":"ZD292"},"content":"import seedu.address.model.group.GroupList;","lastModifiedDate":"2023-10-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Represents a Person in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class Person {","lastModifiedDate":"2018-01-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":29,"author":{"gitId":"coderhuang559"},"content":"    private GroupList personGroups;","lastModifiedDate":"2023-10-07"},{"lineNumber":30,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":31,"author":{"gitId":"nicholastng010601"},"content":"    private final TimeIntervalList timeIntervalList;","lastModifiedDate":"2023-10-25"},{"lineNumber":32,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"Kailash201"},"content":"    public Person(Name name, Phone phone, Email email, GroupList personGroups) {","lastModifiedDate":"2023-10-06"},{"lineNumber":38,"author":{"gitId":"Kailash201"},"content":"        requireAllNonNull(name, phone, email, personGroups);","lastModifiedDate":"2023-10-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":42,"author":{"gitId":"Kailash201"},"content":"        this.personGroups \u003d personGroups;","lastModifiedDate":"2023-10-06"},{"lineNumber":43,"author":{"gitId":"nicholastng010601"},"content":"        this.timeIntervalList \u003d new TimeIntervalList();","lastModifiedDate":"2023-10-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"nicholastng010601"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":47,"author":{"gitId":"nicholastng010601"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2023-10-23"},{"lineNumber":48,"author":{"gitId":"nicholastng010601"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":49,"author":{"gitId":"nicholastng010601"},"content":"    public Person(Name name, Phone phone, Email email, GroupList personGroups, TimeIntervalList timeIntervalList) {","lastModifiedDate":"2023-10-25"},{"lineNumber":50,"author":{"gitId":"nicholastng010601"},"content":"        requireAllNonNull(name, phone, email, personGroups);","lastModifiedDate":"2023-10-23"},{"lineNumber":51,"author":{"gitId":"nicholastng010601"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-10-23"},{"lineNumber":52,"author":{"gitId":"nicholastng010601"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2023-10-23"},{"lineNumber":53,"author":{"gitId":"nicholastng010601"},"content":"        this.email \u003d email;","lastModifiedDate":"2023-10-23"},{"lineNumber":54,"author":{"gitId":"nicholastng010601"},"content":"        this.personGroups \u003d personGroups;","lastModifiedDate":"2023-10-23"},{"lineNumber":55,"author":{"gitId":"nicholastng010601"},"content":"        this.timeIntervalList \u003d timeIntervalList;","lastModifiedDate":"2023-10-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"Kailash201"},"content":"    public GroupList getGroups() {","lastModifiedDate":"2023-10-06"},{"lineNumber":71,"author":{"gitId":"Kailash201"},"content":"        return personGroups;","lastModifiedDate":"2023-10-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-10"},{"lineNumber":75,"author":{"gitId":"ZD292"},"content":"     * Adds group to persons existing groupList","lastModifiedDate":"2023-10-10"},{"lineNumber":76,"author":{"gitId":"Kailash201"},"content":"     *","lastModifiedDate":"2023-10-22"},{"lineNumber":77,"author":{"gitId":"ZD292"},"content":"     * @param group to be added to person groupList","lastModifiedDate":"2023-10-10"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-10"},{"lineNumber":79,"author":{"gitId":"ZD292"},"content":"    public void addGroup(Group group) throws CommandException {","lastModifiedDate":"2023-10-10"},{"lineNumber":80,"author":{"gitId":"ZD292"},"content":"        requireNonNull(group);","lastModifiedDate":"2023-10-10"},{"lineNumber":81,"author":{"gitId":"ZD292"},"content":"        if (this.personGroups.contains(group)) {","lastModifiedDate":"2023-10-10"},{"lineNumber":82,"author":{"gitId":"Kailash201"},"content":"            throw new CommandException(","lastModifiedDate":"2023-10-22"},{"lineNumber":83,"author":{"gitId":"Kailash201"},"content":"                String.format(\"%s is already in this group: %s\", this.name.fullName, group.getGroupName()));","lastModifiedDate":"2023-10-22"},{"lineNumber":84,"author":{"gitId":"ZD292"},"content":"        }","lastModifiedDate":"2023-10-10"},{"lineNumber":85,"author":{"gitId":"ZD292"},"content":"        this.personGroups.add(group);","lastModifiedDate":"2023-10-10"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-11"},{"lineNumber":89,"author":{"gitId":"coderhuang559"},"content":"     * Removes group from persons existing groupList","lastModifiedDate":"2023-10-11"},{"lineNumber":90,"author":{"gitId":"Kailash201"},"content":"     *","lastModifiedDate":"2023-10-22"},{"lineNumber":91,"author":{"gitId":"coderhuang559"},"content":"     * @param group to be removed from person groupList","lastModifiedDate":"2023-10-11"},{"lineNumber":92,"author":{"gitId":"coderhuang559"},"content":"     */","lastModifiedDate":"2023-10-11"},{"lineNumber":93,"author":{"gitId":"coderhuang559"},"content":"    public void removeGroup(Group group) throws CommandException {","lastModifiedDate":"2023-10-11"},{"lineNumber":94,"author":{"gitId":"coderhuang559"},"content":"        requireNonNull(group);","lastModifiedDate":"2023-10-11"},{"lineNumber":95,"author":{"gitId":"coderhuang559"},"content":"        if (!this.personGroups.contains(group)) {","lastModifiedDate":"2023-10-11"},{"lineNumber":96,"author":{"gitId":"Kailash201"},"content":"            throw new CommandException(","lastModifiedDate":"2023-10-22"},{"lineNumber":97,"author":{"gitId":"Kailash201"},"content":"                String.format(\"%s is not in this group: %s\", this.name.fullName, group.getGroupName()));","lastModifiedDate":"2023-10-22"},{"lineNumber":98,"author":{"gitId":"coderhuang559"},"content":"        }","lastModifiedDate":"2023-10-11"},{"lineNumber":99,"author":{"gitId":"coderhuang559"},"content":"        this.personGroups.remove(group);","lastModifiedDate":"2023-10-11"},{"lineNumber":100,"author":{"gitId":"coderhuang559"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":101,"author":{"gitId":"coderhuang559"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":102,"author":{"gitId":"ZD292"},"content":"    /**","lastModifiedDate":"2023-10-10"},{"lineNumber":103,"author":{"gitId":"ZD292"},"content":"     * Check whether person is part of group","lastModifiedDate":"2023-10-10"},{"lineNumber":104,"author":{"gitId":"Kailash201"},"content":"     *","lastModifiedDate":"2023-10-22"},{"lineNumber":105,"author":{"gitId":"ZD292"},"content":"     * @param group group to check","lastModifiedDate":"2023-10-10"},{"lineNumber":106,"author":{"gitId":"ZD292"},"content":"     * @return boolean depending on whether person is in group","lastModifiedDate":"2023-10-10"},{"lineNumber":107,"author":{"gitId":"ZD292"},"content":"     */","lastModifiedDate":"2023-10-10"},{"lineNumber":108,"author":{"gitId":"ZD292"},"content":"    public boolean containsGroup(Group group) {","lastModifiedDate":"2023-10-10"},{"lineNumber":109,"author":{"gitId":"ZD292"},"content":"        return personGroups.contains(group);","lastModifiedDate":"2023-10-10"},{"lineNumber":110,"author":{"gitId":"ZD292"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":111,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":112,"author":{"gitId":"nicholastng010601"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":113,"author":{"gitId":"nicholastng010601"},"content":"     * Returns true if both persons have an identical field.","lastModifiedDate":"2023-10-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2023-10-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public boolean isSamePerson(Person otherPerson) {","lastModifiedDate":"2023-10-13"},{"lineNumber":117,"author":{"gitId":"nicholastng010601"},"content":"        return isSameName(otherPerson) \u0026\u0026 isSamePhone(otherPerson)","lastModifiedDate":"2023-10-13"},{"lineNumber":118,"author":{"gitId":"nicholastng010601"},"content":"            \u0026\u0026 isSameEmail(otherPerson);","lastModifiedDate":"2023-10-13"},{"lineNumber":119,"author":{"gitId":"nicholastng010601"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":120,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same name.","lastModifiedDate":"2020-12-18"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":125,"author":{"gitId":"nicholastng010601"},"content":"    public boolean isSameName(Person otherPerson) {","lastModifiedDate":"2023-10-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        if (otherPerson \u003d\u003d this) {","lastModifiedDate":"2018-04-19"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        return otherPerson !\u003d null","lastModifiedDate":"2018-04-19"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            \u0026\u0026 otherPerson.getName().equals(getName());","lastModifiedDate":"2020-12-18"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":134,"author":{"gitId":"nicholastng010601"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":135,"author":{"gitId":"nicholastng010601"},"content":"     * Returns true if both persons have the same number.","lastModifiedDate":"2023-10-13"},{"lineNumber":136,"author":{"gitId":"nicholastng010601"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2023-10-13"},{"lineNumber":137,"author":{"gitId":"nicholastng010601"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":138,"author":{"gitId":"nicholastng010601"},"content":"    public boolean isSamePhone(Person otherPerson) {","lastModifiedDate":"2023-10-13"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        if (otherPerson \u003d\u003d this) {","lastModifiedDate":"2023-10-13"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-10-13"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        return otherPerson !\u003d null","lastModifiedDate":"2023-10-13"},{"lineNumber":144,"author":{"gitId":"nicholastng010601"},"content":"            \u0026\u0026 otherPerson.getPhone().equals(getPhone());","lastModifiedDate":"2023-10-13"},{"lineNumber":145,"author":{"gitId":"nicholastng010601"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":146,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":147,"author":{"gitId":"nicholastng010601"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":148,"author":{"gitId":"nicholastng010601"},"content":"     * Returns true if both persons have the same email.","lastModifiedDate":"2023-10-13"},{"lineNumber":149,"author":{"gitId":"nicholastng010601"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2023-10-13"},{"lineNumber":150,"author":{"gitId":"nicholastng010601"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":151,"author":{"gitId":"nicholastng010601"},"content":"    public boolean isSameEmail(Person otherPerson) {","lastModifiedDate":"2023-10-13"},{"lineNumber":152,"author":{"gitId":"nicholastng010601"},"content":"        if (otherPerson \u003d\u003d this) {","lastModifiedDate":"2023-10-13"},{"lineNumber":153,"author":{"gitId":"nicholastng010601"},"content":"            return true;","lastModifiedDate":"2023-10-13"},{"lineNumber":154,"author":{"gitId":"nicholastng010601"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":155,"author":{"gitId":"nicholastng010601"},"content":"        return otherPerson !\u003d null","lastModifiedDate":"2023-10-13"},{"lineNumber":156,"author":{"gitId":"nicholastng010601"},"content":"            \u0026\u0026 otherPerson.getEmail().equals(getEmail());","lastModifiedDate":"2023-10-13"},{"lineNumber":157,"author":{"gitId":"nicholastng010601"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":158,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":159,"author":{"gitId":"ZD292"},"content":"    public boolean nameEquals(String personName) {","lastModifiedDate":"2023-10-10"},{"lineNumber":160,"author":{"gitId":"ZD292"},"content":"        return name.nameEquals(personName);","lastModifiedDate":"2023-10-10"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":164,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2018-04-19"},{"lineNumber":165,"author":{"gitId":"-"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":166,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":170,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        if (!(other instanceof Person)) {","lastModifiedDate":"2018-01-10"},{"lineNumber":175,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        Person otherPerson \u003d (Person) other;","lastModifiedDate":"2018-01-10"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        return name.equals(otherPerson.name)","lastModifiedDate":"2023-07-13"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            \u0026\u0026 phone.equals(otherPerson.phone)","lastModifiedDate":"2023-07-13"},{"lineNumber":181,"author":{"gitId":"-"},"content":"            \u0026\u0026 email.equals(otherPerson.email)","lastModifiedDate":"2023-07-13"},{"lineNumber":182,"author":{"gitId":"Kailash201"},"content":"            \u0026\u0026 personGroups.equals(otherPerson.personGroups);","lastModifiedDate":"2023-10-06"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":188,"author":{"gitId":"Kailash201"},"content":"        return Objects.hash(name, phone, email, personGroups);","lastModifiedDate":"2023-10-06"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"            .add(\"name\", name)","lastModifiedDate":"2019-02-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"            .add(\"phone\", phone)","lastModifiedDate":"2019-02-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"            .add(\"email\", email)","lastModifiedDate":"2019-02-23"},{"lineNumber":197,"author":{"gitId":"Kailash201"},"content":"            .add(\"groups\", personGroups)","lastModifiedDate":"2023-10-06"},{"lineNumber":198,"author":{"gitId":"-"},"content":"            .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":201,"author":{"gitId":"nicholastng010601"},"content":"    public TimeIntervalList getTime() {","lastModifiedDate":"2023-10-25"},{"lineNumber":202,"author":{"gitId":"nicholastng010601"},"content":"        return this.timeIntervalList;","lastModifiedDate":"2023-10-25"},{"lineNumber":203,"author":{"gitId":"Kailash201"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":204,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":205,"author":{"gitId":"Kailash201"},"content":"    public void addFreeTime(TimeInterval toAddFreeTime) {","lastModifiedDate":"2023-10-21"},{"lineNumber":206,"author":{"gitId":"nicholastng010601"},"content":"        this.timeIntervalList.addTime(toAddFreeTime);","lastModifiedDate":"2023-10-25"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":209,"author":{"gitId":"nicholastng010601"},"content":"    public void addFreeTime(ArrayList\u003cTimeInterval\u003e toAddFreeTime) throws CommandException {","lastModifiedDate":"2023-10-25"},{"lineNumber":210,"author":{"gitId":"nicholastng010601"},"content":"        this.timeIntervalList.addTime(toAddFreeTime);","lastModifiedDate":"2023-10-25"},{"lineNumber":211,"author":{"gitId":"nicholastng010601"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":212,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":213,"author":{"gitId":"nicholastng010601"},"content":"    public void deleteFreeTime(ArrayList\u003cTimeInterval\u003e toAddFreeTime) throws CommandException {","lastModifiedDate":"2023-10-24"},{"lineNumber":214,"author":{"gitId":"nicholastng010601"},"content":"        this.timeIntervalList.deleteTime(toAddFreeTime);","lastModifiedDate":"2023-10-25"},{"lineNumber":215,"author":{"gitId":"Kailash201"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":216,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":217,"author":{"gitId":"ZD292"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":218,"author":{"gitId":"ZD292"},"content":"     * Check whether Person has input their free time","lastModifiedDate":"2023-10-25"},{"lineNumber":219,"author":{"gitId":"ZD292"},"content":"     * @return boolean, whether person is not free","lastModifiedDate":"2023-10-25"},{"lineNumber":220,"author":{"gitId":"ZD292"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":221,"author":{"gitId":"ZD292"},"content":"    public boolean isNotFree() {","lastModifiedDate":"2023-10-25"},{"lineNumber":222,"author":{"gitId":"ZD292"},"content":"        return this.timeIntervalList.isEmpty();","lastModifiedDate":"2023-10-25"},{"lineNumber":223,"author":{"gitId":"ZD292"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Kailash201":24,"coderhuang559":11,"ZD292":31,"nicholastng010601":48,"-":110}},{"path":"src/main/java/seedu/address/model/person/UniquePersonList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Iterator;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"nicholastng010601"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"coderhuang559"},"content":"import seedu.address.logic.commands.UngroupPersonCommand;","lastModifiedDate":"2023-10-19"},{"lineNumber":13,"author":{"gitId":"ZD292"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2017-06-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2017-06-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * A list of persons that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"nicholastng010601"},"content":" * A person is considered unique by comparing using {@code Person#isNumberTaken(Person), Person#isNameTaken(Person)","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"nicholastng010601"},"content":" * and Person#isEmailTaken(Person)}. As such, adding and updating of persons uses the three tests for equality","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"nicholastng010601"},"content":" * so as to ensure that the person being added or updated is unique in terms of fields in the UniquePersonList.","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"nicholastng010601"},"content":" * However, the removal of a person uses Person#equals(Object) so","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * as to ensure that the person with exactly the same fields will be removed.","lastModifiedDate":"2018-04-19"},{"lineNumber":24,"author":{"gitId":"Kailash201"},"content":" * \u003cp\u003e","lastModifiedDate":"2023-10-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2016-09-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * @see Person#isSamePerson(Person)","lastModifiedDate":"2018-04-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class UniquePersonList implements Iterable\u003cPerson\u003e {","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2016-10-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Returns true if the list contains an equivalent person as the given argument.","lastModifiedDate":"2016-09-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public boolean contains(Person toCheck) {","lastModifiedDate":"2018-01-10"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2017-05-15"},{"lineNumber":40,"author":{"gitId":"nicholastng010601"},"content":"        return internalList.stream().anyMatch(toCheck::isSameName)","lastModifiedDate":"2023-10-13"},{"lineNumber":41,"author":{"gitId":"nicholastng010601"},"content":"            || internalList.stream().anyMatch(toCheck::isSameEmail)","lastModifiedDate":"2023-10-13"},{"lineNumber":42,"author":{"gitId":"nicholastng010601"},"content":"            || internalList.stream().anyMatch(toCheck::isSamePhone);","lastModifiedDate":"2023-10-13"},{"lineNumber":43,"author":{"gitId":"nicholastng010601"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":44,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":45,"author":{"gitId":"nicholastng010601"},"content":"    public boolean[] usedFields(Person toCheck) {","lastModifiedDate":"2023-10-13"},{"lineNumber":46,"author":{"gitId":"nicholastng010601"},"content":"        boolean[] fields \u003d new boolean[4];","lastModifiedDate":"2023-10-13"},{"lineNumber":47,"author":{"gitId":"nicholastng010601"},"content":"        fields[1] \u003d internalList.stream().anyMatch(toCheck::isSameName);","lastModifiedDate":"2023-10-13"},{"lineNumber":48,"author":{"gitId":"nicholastng010601"},"content":"        fields[2] \u003d internalList.stream().anyMatch(toCheck::isSamePhone);","lastModifiedDate":"2023-10-13"},{"lineNumber":49,"author":{"gitId":"nicholastng010601"},"content":"        fields[3] \u003d internalList.stream().anyMatch(toCheck::isSameEmail);","lastModifiedDate":"2023-10-13"},{"lineNumber":50,"author":{"gitId":"nicholastng010601"},"content":"        fields[0] \u003d fields[1] \u0026\u0026 fields[2] \u0026\u0026 fields[3];","lastModifiedDate":"2023-10-13"},{"lineNumber":51,"author":{"gitId":"nicholastng010601"},"content":"        return fields;","lastModifiedDate":"2023-10-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Adds a person to the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * The person must not already exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void add(Person toAdd) {","lastModifiedDate":"2018-08-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2017-05-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2018-01-10"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Replaces the person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2017-06-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2017-06-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2017-06-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-07"},{"lineNumber":79,"author":{"gitId":"nicholastng010601"},"content":"        if (!target.isSamePerson(editedPerson)","lastModifiedDate":"2023-10-13"},{"lineNumber":80,"author":{"gitId":"nicholastng010601"},"content":"            \u0026\u0026 contains(editedPerson)) {","lastModifiedDate":"2023-10-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-12-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        internalList.set(index, editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Removes the equivalent person from the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * The person must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void remove(Person toRemove) {","lastModifiedDate":"2018-08-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2017-05-15"},{"lineNumber":93,"author":{"gitId":"ZD292"},"content":"        boolean isRemoved \u003d internalList.remove(toRemove);","lastModifiedDate":"2023-10-25"},{"lineNumber":94,"author":{"gitId":"ZD292"},"content":"        if (!isRemoved) {","lastModifiedDate":"2023-10-25"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2016-08-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void setPersons(UniquePersonList replacement) {","lastModifiedDate":"2016-10-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2018-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2018-08-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * Replaces the contents of this list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        requireAllNonNull(persons);","lastModifiedDate":"2018-01-10"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        if (!personsAreUnique(persons)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2018-01-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        internalList.setAll(persons);","lastModifiedDate":"2018-08-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-09-01"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2017-09-01"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-09-01"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2018-04-05"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2018-12-09"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public Iterator\u003cPerson\u003e iterator() {","lastModifiedDate":"2016-08-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        return internalList.iterator();","lastModifiedDate":"2016-08-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        if (!(other instanceof UniquePersonList)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":137,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        UniquePersonList otherUniquePersonList \u003d (UniquePersonList) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        return internalList.equals(otherUniquePersonList.internalList);","lastModifiedDate":"2023-07-13"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        return internalList.hashCode();","lastModifiedDate":"2016-09-21"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-24"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        return internalList.toString();","lastModifiedDate":"2019-02-24"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-24"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-24"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     * Returns true if {@code persons} contains only unique persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    private boolean personsAreUnique(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-04-19"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c persons.size() - 1; i++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            for (int j \u003d i + 1; j \u003c persons.size(); j++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":160,"author":{"gitId":"-"},"content":"                if (persons.get(i).isSamePerson(persons.get(j))) {","lastModifiedDate":"2018-04-19"},{"lineNumber":161,"author":{"gitId":"-"},"content":"                    return false;","lastModifiedDate":"2018-04-19"},{"lineNumber":162,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2018-04-19"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-04-19"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":167,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":168,"author":{"gitId":"ZD292"},"content":"    public Person getPerson(String personName) throws CommandException {","lastModifiedDate":"2023-10-10"},{"lineNumber":169,"author":{"gitId":"ZD292"},"content":"        for (Person person : this.internalList) {","lastModifiedDate":"2023-10-10"},{"lineNumber":170,"author":{"gitId":"ZD292"},"content":"            if (person.nameEquals(personName)) {","lastModifiedDate":"2023-10-10"},{"lineNumber":171,"author":{"gitId":"ZD292"},"content":"                return person;","lastModifiedDate":"2023-10-10"},{"lineNumber":172,"author":{"gitId":"ZD292"},"content":"            }","lastModifiedDate":"2023-10-10"},{"lineNumber":173,"author":{"gitId":"ZD292"},"content":"        }","lastModifiedDate":"2023-10-10"},{"lineNumber":174,"author":{"gitId":"nicholastng010601"},"content":"        throw new CommandException(Messages.MESSAGE_NO_PERSON_WITH_NAME_FOUND);","lastModifiedDate":"2023-10-25"},{"lineNumber":175,"author":{"gitId":"ZD292"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":176,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Kailash201":1,"coderhuang559":1,"ZD292":11,"nicholastng010601":20,"-":143}},{"path":"src/main/java/seedu/address/model/person/exceptions/PersonInGroupException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ZD292"},"content":"package seedu.address.model.person.exceptions;","lastModifiedDate":"2023-10-10"},{"lineNumber":2,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":3,"author":{"gitId":"ZD292"},"content":"public class PersonInGroupException extends RuntimeException {","lastModifiedDate":"2023-10-10"},{"lineNumber":4,"author":{"gitId":"ZD292"},"content":"    public PersonInGroupException() {","lastModifiedDate":"2023-10-10"},{"lineNumber":5,"author":{"gitId":"ZD292"},"content":"        super(\"Person is already assigned to group\");","lastModifiedDate":"2023-10-10"},{"lineNumber":6,"author":{"gitId":"ZD292"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":7,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":8,"author":{"gitId":"ZD292"},"content":"}","lastModifiedDate":"2023-10-10"}],"authorContributionMap":{"ZD292":8}},{"path":"src/main/java/seedu/address/model/person/exceptions/PersonNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person.exceptions;","lastModifiedDate":"2017-06-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Signals that the operation is unable to find the specified person.","lastModifiedDate":"2017-06-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":6,"author":{"gitId":"Kailash201"},"content":"public class PersonNotFoundException extends RuntimeException {","lastModifiedDate":"2023-10-22"},{"lineNumber":7,"author":{"gitId":"Kailash201"},"content":"}","lastModifiedDate":"2023-10-22"}],"authorContributionMap":{"Kailash201":2,"-":5}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":6,"author":{"gitId":"ZD292"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2023-10-10"},{"lineNumber":7,"author":{"gitId":"ZD292"},"content":"import seedu.address.model.group.GroupList;","lastModifiedDate":"2023-10-10"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-20"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static Person[] getSamplePersons() {","lastModifiedDate":"2016-12-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        return new Person[] {","lastModifiedDate":"2016-12-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Alex Yeoh\"), new Phone(\"87438807\"), new Email(\"alexyeoh@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"Kailash201"},"content":"                getGroupList()),","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Bernice Yu\"), new Phone(\"99272758\"), new Email(\"berniceyu@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"Kailash201"},"content":"                getGroupList()),","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Charlotte Oliveiro\"), new Phone(\"93210283\"), new Email(\"charlotte@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"Kailash201"},"content":"                getGroupList()),","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            new Person(new Name(\"David Li\"), new Phone(\"91031282\"), new Email(\"lidavid@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":27,"author":{"gitId":"Kailash201"},"content":"                getGroupList()),","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Irfan Ibrahim\"), new Phone(\"92492021\"), new Email(\"irfan@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":29,"author":{"gitId":"Kailash201"},"content":"                getGroupList()),","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Roy Balakrishnan\"), new Phone(\"92624417\"), new Email(\"royb@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":31,"author":{"gitId":"Kailash201"},"content":"                getGroupList()),","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static ReadOnlyAddressBook getSampleAddressBook() {","lastModifiedDate":"2016-12-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        AddressBook sampleAb \u003d new AddressBook();","lastModifiedDate":"2017-04-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        for (Person samplePerson : getSamplePersons()) {","lastModifiedDate":"2016-12-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            sampleAb.addPerson(samplePerson);","lastModifiedDate":"2017-04-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":44,"author":{"gitId":"Kailash201"},"content":"     * Returns a GroupList containing the list of strings given.","lastModifiedDate":"2023-10-06"},{"lineNumber":45,"author":{"gitId":"Kailash201"},"content":"     *","lastModifiedDate":"2023-10-22"},{"lineNumber":46,"author":{"gitId":"Kailash201"},"content":"     * @param groupNames List of groupNames.","lastModifiedDate":"2023-10-06"},{"lineNumber":47,"author":{"gitId":"Kailash201"},"content":"     * @return GroupList containing the list of strings given.","lastModifiedDate":"2023-10-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":49,"author":{"gitId":"Kailash201"},"content":"    public static GroupList getGroupList(String... groupNames) {","lastModifiedDate":"2023-10-06"},{"lineNumber":50,"author":{"gitId":"Kailash201"},"content":"        GroupList gL \u003d new GroupList();","lastModifiedDate":"2023-10-06"},{"lineNumber":51,"author":{"gitId":"Kailash201"},"content":"        Arrays.stream(groupNames).forEach(group -\u003e gL.add(new Group(group)));","lastModifiedDate":"2023-10-06"},{"lineNumber":52,"author":{"gitId":"Kailash201"},"content":"        return gL;","lastModifiedDate":"2023-10-06"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"Kailash201":14,"ZD292":2,"-":39}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedGroup.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"nicholastng010601"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-10-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"nicholastng010601"},"content":"import seedu.address.model.TimeIntervalList;","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"ZD292"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2023-10-10"},{"lineNumber":9,"author":{"gitId":"coderhuang559"},"content":"import seedu.address.model.group.GroupRemark;","lastModifiedDate":"2023-10-20"},{"lineNumber":10,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"nicholastng010601"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"nicholastng010601"},"content":"import java.util.List;","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"nicholastng010601"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"Kailash201"},"content":" * Jackson-friendly version of {@link Group}.","lastModifiedDate":"2023-10-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"Kailash201"},"content":"class JsonAdaptedGroup {","lastModifiedDate":"2023-10-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"Kailash201"},"content":"    private final String groupName;","lastModifiedDate":"2023-10-06"},{"lineNumber":21,"author":{"gitId":"nicholastng010601"},"content":"    private final String groupRemark;","lastModifiedDate":"2023-10-22"},{"lineNumber":22,"author":{"gitId":"nicholastng010601"},"content":"    private final List\u003cJsonAdaptedTime\u003e meetingTimeList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"ZD292"},"content":"//    private final List\u003cJsonAdaptedPerson\u003e listOfGroupMates \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"Kailash201"},"content":"     * Constructs a {@code JsonAdaptedGroup} with the given {@code groupName}.","lastModifiedDate":"2023-10-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"nicholastng010601"},"content":"    public JsonAdaptedGroup(@JsonProperty(\"name\") String groupName, @JsonProperty(\"groupRemark\") String groupRemark,","lastModifiedDate":"2023-10-25"},{"lineNumber":30,"author":{"gitId":"ZD292"},"content":"                            //@JsonProperty(\"listOfGroupMates\") List\u003cJsonAdaptedPerson\u003e listOfGroupMates,","lastModifiedDate":"2023-10-25"},{"lineNumber":31,"author":{"gitId":"nicholastng010601"},"content":"                            @JsonProperty(\"meetingTimeList\") List\u003cJsonAdaptedTime\u003e meetingTimeList) {","lastModifiedDate":"2023-10-25"},{"lineNumber":32,"author":{"gitId":"Kailash201"},"content":"        this.groupName \u003d groupName;","lastModifiedDate":"2023-10-06"},{"lineNumber":33,"author":{"gitId":"nicholastng010601"},"content":"        this.groupRemark \u003d groupRemark;","lastModifiedDate":"2023-10-22"},{"lineNumber":34,"author":{"gitId":"ZD292"},"content":"//        if (listOfGroupMates !\u003d null) {","lastModifiedDate":"2023-10-25"},{"lineNumber":35,"author":{"gitId":"ZD292"},"content":"//            this.listOfGroupMates.addAll(listOfGroupMates);","lastModifiedDate":"2023-10-25"},{"lineNumber":36,"author":{"gitId":"ZD292"},"content":"//        }","lastModifiedDate":"2023-10-25"},{"lineNumber":37,"author":{"gitId":"nicholastng010601"},"content":"        if (meetingTimeList !\u003d null) {","lastModifiedDate":"2023-10-25"},{"lineNumber":38,"author":{"gitId":"nicholastng010601"},"content":"            this.meetingTimeList.addAll(meetingTimeList);","lastModifiedDate":"2023-10-25"},{"lineNumber":39,"author":{"gitId":"nicholastng010601"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Converts a given {@code Tag} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"Kailash201"},"content":"    public JsonAdaptedGroup(Group source) {","lastModifiedDate":"2023-10-06"},{"lineNumber":46,"author":{"gitId":"Kailash201"},"content":"        groupName \u003d source.getGroupName();","lastModifiedDate":"2023-10-06"},{"lineNumber":47,"author":{"gitId":"nicholastng010601"},"content":"        groupRemark \u003d source.getGroupRemark().value;","lastModifiedDate":"2023-10-22"},{"lineNumber":48,"author":{"gitId":"ZD292"},"content":"//        if (listOfGroupMates!\u003d null) {","lastModifiedDate":"2023-10-25"},{"lineNumber":49,"author":{"gitId":"ZD292"},"content":"//            listOfGroupMates.addAll(source.toStream()","lastModifiedDate":"2023-10-25"},{"lineNumber":50,"author":{"gitId":"ZD292"},"content":"//                    .map(JsonAdaptedPerson::new)","lastModifiedDate":"2023-10-25"},{"lineNumber":51,"author":{"gitId":"ZD292"},"content":"//                    .collect(Collectors.toList()));","lastModifiedDate":"2023-10-25"},{"lineNumber":52,"author":{"gitId":"ZD292"},"content":"//        }","lastModifiedDate":"2023-10-25"},{"lineNumber":53,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":54,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":55,"author":{"gitId":"nicholastng010601"},"content":"        if (meetingTimeList !\u003d null) {","lastModifiedDate":"2023-10-25"},{"lineNumber":56,"author":{"gitId":"nicholastng010601"},"content":"            meetingTimeList.addAll(source.getTime().toStream()","lastModifiedDate":"2023-10-25"},{"lineNumber":57,"author":{"gitId":"nicholastng010601"},"content":"                    .map(JsonAdaptedTime::new)","lastModifiedDate":"2023-10-25"},{"lineNumber":58,"author":{"gitId":"nicholastng010601"},"content":"                    .collect(Collectors.toList()));","lastModifiedDate":"2023-10-25"},{"lineNumber":59,"author":{"gitId":"nicholastng010601"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted tag object into the model\u0027s {@code Tag} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted tag.","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"Kailash201"},"content":"    public Group toModelType() throws IllegalValueException {","lastModifiedDate":"2023-10-06"},{"lineNumber":68,"author":{"gitId":"Kailash201"},"content":"        if (!Group.isValidGroup(groupName)) {","lastModifiedDate":"2023-10-06"},{"lineNumber":69,"author":{"gitId":"Kailash201"},"content":"            throw new IllegalValueException(\"illegal value\");","lastModifiedDate":"2023-10-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"nicholastng010601"},"content":"        TimeIntervalList modelTimeIntervalListList \u003d new TimeIntervalList();","lastModifiedDate":"2023-10-25"},{"lineNumber":72,"author":{"gitId":"nicholastng010601"},"content":"        for (JsonAdaptedTime freeTime : meetingTimeList) {","lastModifiedDate":"2023-10-25"},{"lineNumber":73,"author":{"gitId":"nicholastng010601"},"content":"            modelTimeIntervalListList.addTime(freeTime.toModelType());","lastModifiedDate":"2023-10-25"},{"lineNumber":74,"author":{"gitId":"nicholastng010601"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":75,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":76,"author":{"gitId":"nicholastng010601"},"content":"        return new Group(groupName, new GroupRemark(groupRemark), modelTimeIntervalListList);","lastModifiedDate":"2023-10-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"Kailash201":10,"coderhuang559":1,"ZD292":13,"nicholastng010601":26,"-":29}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedPerson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"nicholastng010601"},"content":"import seedu.address.model.TimeIntervalList;","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"ZD292"},"content":"import seedu.address.model.group.GroupList;","lastModifiedDate":"2023-10-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Person}.","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"class JsonAdaptedPerson {","lastModifiedDate":"2018-12-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Person\u0027s %s field is missing!\";","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"Kailash201"},"content":"    private final List\u003cJsonAdaptedGroup\u003e groupList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-06"},{"lineNumber":29,"author":{"gitId":"nicholastng010601"},"content":"    private final List\u003cJsonAdaptedTime\u003e freeTimeList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"Kailash201"},"content":"            @JsonProperty(\"email\") String email,","lastModifiedDate":"2023-10-06"},{"lineNumber":37,"author":{"gitId":"nicholastng010601"},"content":"            @JsonProperty(\"groupList\") List\u003cJsonAdaptedGroup\u003e groupList,","lastModifiedDate":"2023-10-23"},{"lineNumber":38,"author":{"gitId":"nicholastng010601"},"content":"            @JsonProperty(\"freeTimeList\") List\u003cJsonAdaptedTime\u003e freeTimeList","lastModifiedDate":"2023-10-23"},{"lineNumber":39,"author":{"gitId":"nicholastng010601"},"content":"    ) {","lastModifiedDate":"2023-10-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"Kailash201"},"content":"        if (groupList !\u003d null) {","lastModifiedDate":"2023-10-06"},{"lineNumber":44,"author":{"gitId":"Kailash201"},"content":"            this.groupList.addAll(groupList);","lastModifiedDate":"2023-10-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"nicholastng010601"},"content":"        if (freeTimeList !\u003d null) {","lastModifiedDate":"2023-10-23"},{"lineNumber":47,"author":{"gitId":"nicholastng010601"},"content":"            this.freeTimeList.addAll(freeTimeList);","lastModifiedDate":"2023-10-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Converts a given {@code Person} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(Person source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"nicholastng010601"},"content":"        groupList.addAll(source.getGroups().toStream()","lastModifiedDate":"2023-10-22"},{"lineNumber":59,"author":{"gitId":"Kailash201"},"content":"                .map(JsonAdaptedGroup::new)","lastModifiedDate":"2023-10-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"nicholastng010601"},"content":"        freeTimeList.addAll(source.getTime().toStream()","lastModifiedDate":"2023-10-25"},{"lineNumber":62,"author":{"gitId":"nicholastng010601"},"content":"                .map(JsonAdaptedTime::new)","lastModifiedDate":"2023-10-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2023-10-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Person} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public Person toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"nicholastng010601"},"content":"        GroupList modelGroupList \u003d new GroupList();","lastModifiedDate":"2023-10-23"},{"lineNumber":97,"author":{"gitId":"nicholastng010601"},"content":"        for (JsonAdaptedGroup group : groupList) {","lastModifiedDate":"2023-10-16"},{"lineNumber":98,"author":{"gitId":"nicholastng010601"},"content":"            modelGroupList.add(group.toModelType());","lastModifiedDate":"2023-10-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":100,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":101,"author":{"gitId":"nicholastng010601"},"content":"        TimeIntervalList modelTimeIntervalListList \u003d new TimeIntervalList();","lastModifiedDate":"2023-10-25"},{"lineNumber":102,"author":{"gitId":"nicholastng010601"},"content":"        for (JsonAdaptedTime freeTime : freeTimeList) {","lastModifiedDate":"2023-10-23"},{"lineNumber":103,"author":{"gitId":"nicholastng010601"},"content":"            modelTimeIntervalListList.addTime(freeTime.toModelType());","lastModifiedDate":"2023-10-25"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":106,"author":{"gitId":"nicholastng010601"},"content":"        return new Person(modelName, modelPhone, modelEmail, modelGroupList, modelTimeIntervalListList);","lastModifiedDate":"2023-10-25"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"Kailash201":5,"ZD292":1,"nicholastng010601":18,"-":85}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedTime.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nicholastng010601"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-10-23"},{"lineNumber":2,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":3,"author":{"gitId":"nicholastng010601"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-10-23"},{"lineNumber":4,"author":{"gitId":"nicholastng010601"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-10-23"},{"lineNumber":5,"author":{"gitId":"nicholastng010601"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-10-23"},{"lineNumber":6,"author":{"gitId":"nicholastng010601"},"content":"import seedu.address.model.Time;","lastModifiedDate":"2023-10-23"},{"lineNumber":7,"author":{"gitId":"nicholastng010601"},"content":"import seedu.address.model.TimeInterval;","lastModifiedDate":"2023-10-23"},{"lineNumber":8,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":9,"author":{"gitId":"nicholastng010601"},"content":"import java.time.DayOfWeek;","lastModifiedDate":"2023-10-23"},{"lineNumber":10,"author":{"gitId":"nicholastng010601"},"content":"import java.time.LocalTime;","lastModifiedDate":"2023-10-23"},{"lineNumber":11,"author":{"gitId":"nicholastng010601"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-10-23"},{"lineNumber":12,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":13,"author":{"gitId":"nicholastng010601"},"content":"public class JsonAdaptedTime {","lastModifiedDate":"2023-10-23"},{"lineNumber":14,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":15,"author":{"gitId":"nicholastng010601"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Interval\u0027s %s time field is missing!\";","lastModifiedDate":"2023-10-23"},{"lineNumber":16,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":17,"author":{"gitId":"nicholastng010601"},"content":"    private final String start;","lastModifiedDate":"2023-10-23"},{"lineNumber":18,"author":{"gitId":"nicholastng010601"},"content":"    private final String end;","lastModifiedDate":"2023-10-23"},{"lineNumber":19,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":20,"author":{"gitId":"nicholastng010601"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":21,"author":{"gitId":"nicholastng010601"},"content":"     * Constructs a {@code JsonAdaptedTime} with the given person details.","lastModifiedDate":"2023-10-23"},{"lineNumber":22,"author":{"gitId":"nicholastng010601"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":23,"author":{"gitId":"nicholastng010601"},"content":"    @JsonCreator","lastModifiedDate":"2023-10-23"},{"lineNumber":24,"author":{"gitId":"nicholastng010601"},"content":"    public JsonAdaptedTime(@JsonProperty(\"start\") String start, @JsonProperty(\"end\") String end) {","lastModifiedDate":"2023-10-23"},{"lineNumber":25,"author":{"gitId":"nicholastng010601"},"content":"        this.start \u003d start;","lastModifiedDate":"2023-10-23"},{"lineNumber":26,"author":{"gitId":"nicholastng010601"},"content":"        this.end \u003d end;","lastModifiedDate":"2023-10-23"},{"lineNumber":27,"author":{"gitId":"nicholastng010601"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":28,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":29,"author":{"gitId":"nicholastng010601"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":30,"author":{"gitId":"nicholastng010601"},"content":"     * Converts a given {@code Person} into this class for Jackson use.","lastModifiedDate":"2023-10-23"},{"lineNumber":31,"author":{"gitId":"nicholastng010601"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":32,"author":{"gitId":"nicholastng010601"},"content":"    public JsonAdaptedTime(TimeInterval source) {","lastModifiedDate":"2023-10-23"},{"lineNumber":33,"author":{"gitId":"nicholastng010601"},"content":"        this.start \u003d source.getStart().toString();","lastModifiedDate":"2023-10-23"},{"lineNumber":34,"author":{"gitId":"nicholastng010601"},"content":"        this.end \u003d source.getEnd().toString();","lastModifiedDate":"2023-10-23"},{"lineNumber":35,"author":{"gitId":"nicholastng010601"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":36,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":37,"author":{"gitId":"nicholastng010601"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":38,"author":{"gitId":"nicholastng010601"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Person} object.","lastModifiedDate":"2023-10-23"},{"lineNumber":39,"author":{"gitId":"nicholastng010601"},"content":"     *","lastModifiedDate":"2023-10-23"},{"lineNumber":40,"author":{"gitId":"nicholastng010601"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2023-10-23"},{"lineNumber":41,"author":{"gitId":"nicholastng010601"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":42,"author":{"gitId":"nicholastng010601"},"content":"    public TimeInterval toModelType() throws IllegalValueException {","lastModifiedDate":"2023-10-23"},{"lineNumber":43,"author":{"gitId":"nicholastng010601"},"content":"        if (start \u003d\u003d null) {","lastModifiedDate":"2023-10-23"},{"lineNumber":44,"author":{"gitId":"nicholastng010601"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, \"start\"));","lastModifiedDate":"2023-10-23"},{"lineNumber":45,"author":{"gitId":"nicholastng010601"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":46,"author":{"gitId":"nicholastng010601"},"content":"        if (end \u003d\u003d null) {","lastModifiedDate":"2023-10-23"},{"lineNumber":47,"author":{"gitId":"nicholastng010601"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, \"end\"));","lastModifiedDate":"2023-10-23"},{"lineNumber":48,"author":{"gitId":"nicholastng010601"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":49,"author":{"gitId":"nicholastng010601"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"HHmm\");","lastModifiedDate":"2023-10-23"},{"lineNumber":50,"author":{"gitId":"nicholastng010601"},"content":"        String[] startArray \u003d start.split(\" \");","lastModifiedDate":"2023-10-23"},{"lineNumber":51,"author":{"gitId":"nicholastng010601"},"content":"        String[] endArray \u003d end.split(\" \");","lastModifiedDate":"2023-10-23"},{"lineNumber":52,"author":{"gitId":"nicholastng010601"},"content":"        DayOfWeek startDay \u003d Time.decodeDay(startArray[0]);","lastModifiedDate":"2023-10-23"},{"lineNumber":53,"author":{"gitId":"nicholastng010601"},"content":"        DayOfWeek endDay \u003d Time.decodeDay(endArray[0]);","lastModifiedDate":"2023-10-23"},{"lineNumber":54,"author":{"gitId":"nicholastng010601"},"content":"        LocalTime startTime \u003d LocalTime.parse(startArray[1], formatter);","lastModifiedDate":"2023-10-23"},{"lineNumber":55,"author":{"gitId":"nicholastng010601"},"content":"        LocalTime endTime \u003d LocalTime.parse(endArray[1], formatter);","lastModifiedDate":"2023-10-23"},{"lineNumber":56,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":57,"author":{"gitId":"nicholastng010601"},"content":"        return new TimeInterval(new Time(startDay,startTime), new Time(endDay,endTime));","lastModifiedDate":"2023-10-23"},{"lineNumber":58,"author":{"gitId":"nicholastng010601"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":59,"author":{"gitId":"nicholastng010601"},"content":"}","lastModifiedDate":"2023-10-23"}],"authorContributionMap":{"nicholastng010601":59}},{"path":"src/main/java/seedu/address/storage/JsonSerializableAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"nicholastng010601"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * An Immutable AddressBook that is serializable to JSON format.","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"@JsonRootName(value \u003d \"addressbook\")","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"class JsonSerializableAddressBook {","lastModifiedDate":"2018-12-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"Persons list contains duplicate person(s).\";","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"nicholastng010601"},"content":"    public static final String MESSAGE_DUPLICATE_GROUP \u003d \"Group list contains duplicate group(s).\";","lastModifiedDate":"2023-10-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedPerson\u003e persons \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"nicholastng010601"},"content":"    private final List\u003cJsonAdaptedGroup\u003e groups \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonSerializableAddressBook} with the given persons.","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"nicholastng010601"},"content":"    public JsonSerializableAddressBook(@JsonProperty(\"persons\") List\u003cJsonAdaptedPerson\u003e persons, @JsonProperty(\"groups\") List\u003cJsonAdaptedGroup\u003e groups) {","lastModifiedDate":"2023-10-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.persons.addAll(persons);","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"nicholastng010601"},"content":"        this.groups.addAll(groups);","lastModifiedDate":"2023-10-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableAddressBook}.","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        persons.addAll(source.getPersonList().stream().map(JsonAdaptedPerson::new).collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"nicholastng010601"},"content":"        groups.addAll(source.getGroupList().stream().map(JsonAdaptedGroup::new).collect(Collectors.toList()));","lastModifiedDate":"2023-10-19"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Converts this address book into the model\u0027s {@code AddressBook} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public AddressBook toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"nicholastng010601"},"content":"        for (JsonAdaptedGroup jsonAdaptedGroup : groups) {","lastModifiedDate":"2023-10-19"},{"lineNumber":56,"author":{"gitId":"nicholastng010601"},"content":"            addressBook.addGroup(jsonAdaptedGroup.toModelType());","lastModifiedDate":"2023-10-19"},{"lineNumber":57,"author":{"gitId":"nicholastng010601"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        for (JsonAdaptedPerson jsonAdaptedPerson : persons) {","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            Person person \u003d jsonAdaptedPerson.toModelType();","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            if (addressBook.hasPerson(person)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            addressBook.addPerson(person);","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":65,"author":{"gitId":"nicholastng010601"},"content":"            person.getGroups().toStream().forEach(group -\u003e {","lastModifiedDate":"2023-10-16"},{"lineNumber":66,"author":{"gitId":"nicholastng010601"},"content":"                try {","lastModifiedDate":"2023-10-16"},{"lineNumber":67,"author":{"gitId":"nicholastng010601"},"content":"                    if (addressBook.hasGroup(group)) {","lastModifiedDate":"2023-10-16"},{"lineNumber":68,"author":{"gitId":"nicholastng010601"},"content":"                        addressBook.getGroup(group).addPerson(person);","lastModifiedDate":"2023-10-25"},{"lineNumber":69,"author":{"gitId":"nicholastng010601"},"content":"                    } else {","lastModifiedDate":"2023-10-16"},{"lineNumber":70,"author":{"gitId":"nicholastng010601"},"content":"                        addressBook.addGroup(group);","lastModifiedDate":"2023-10-16"},{"lineNumber":71,"author":{"gitId":"nicholastng010601"},"content":"                        group.addPerson(person);","lastModifiedDate":"2023-10-16"},{"lineNumber":72,"author":{"gitId":"nicholastng010601"},"content":"                    }","lastModifiedDate":"2023-10-16"},{"lineNumber":73,"author":{"gitId":"nicholastng010601"},"content":"                } catch (CommandException e) {","lastModifiedDate":"2023-10-16"},{"lineNumber":74,"author":{"gitId":"nicholastng010601"},"content":"                    throw new RuntimeException(e);","lastModifiedDate":"2023-10-16"},{"lineNumber":75,"author":{"gitId":"nicholastng010601"},"content":"                }","lastModifiedDate":"2023-10-16"},{"lineNumber":76,"author":{"gitId":"nicholastng010601"},"content":"            });","lastModifiedDate":"2023-10-16"},{"lineNumber":77,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"nicholastng010601":23,"-":59}},{"path":"src/main/java/seedu/address/ui/Calendar.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Kailash201"},"content":"package seedu.address.ui;","lastModifiedDate":"2023-10-23"},{"lineNumber":2,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":3,"author":{"gitId":"Kailash201"},"content":"import java.net.URL;","lastModifiedDate":"2023-10-23"},{"lineNumber":4,"author":{"gitId":"Kailash201"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-23"},{"lineNumber":5,"author":{"gitId":"Kailash201"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-10-23"},{"lineNumber":6,"author":{"gitId":"Kailash201"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-10-23"},{"lineNumber":7,"author":{"gitId":"Kailash201"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-10-23"},{"lineNumber":8,"author":{"gitId":"Kailash201"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2023-10-23"},{"lineNumber":9,"author":{"gitId":"Kailash201"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2023-10-23"},{"lineNumber":10,"author":{"gitId":"Kailash201"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-10-23"},{"lineNumber":11,"author":{"gitId":"Kailash201"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-23"},{"lineNumber":12,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":13,"author":{"gitId":"Kailash201"},"content":"public class Calendar extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-10-23"},{"lineNumber":14,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":15,"author":{"gitId":"Kailash201"},"content":"    private static final String FXML \u003d \"CalendarList.fxml\";","lastModifiedDate":"2023-10-23"},{"lineNumber":16,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":17,"author":{"gitId":"Kailash201"},"content":"    public static class Day {","lastModifiedDate":"2023-10-23"},{"lineNumber":18,"author":{"gitId":"Kailash201"},"content":"        static ObservableList\u003cString\u003e days \u003d FXCollections.observableArrayList(","lastModifiedDate":"2023-10-23"},{"lineNumber":19,"author":{"gitId":"Kailash201"},"content":"            \"MON\", \"TUE\", \"WED\", \"THU\", \"FRI\", \"SAT\", \"SUN\");","lastModifiedDate":"2023-10-23"},{"lineNumber":20,"author":{"gitId":"Kailash201"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":21,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":22,"author":{"gitId":"Kailash201"},"content":"    @FXML","lastModifiedDate":"2023-10-23"},{"lineNumber":23,"author":{"gitId":"Kailash201"},"content":"    private ListView\u003cString\u003e dayListView;","lastModifiedDate":"2023-10-23"},{"lineNumber":24,"author":{"gitId":"Kailash201"},"content":"    public Calendar() {","lastModifiedDate":"2023-10-23"},{"lineNumber":25,"author":{"gitId":"Kailash201"},"content":"        super(FXML);","lastModifiedDate":"2023-10-23"},{"lineNumber":26,"author":{"gitId":"Kailash201"},"content":"        dayListView.setItems(Day.days);","lastModifiedDate":"2023-10-23"},{"lineNumber":27,"author":{"gitId":"Kailash201"},"content":"        dayListView.setCellFactory(listView -\u003e new DayListViewCell());","lastModifiedDate":"2023-10-23"},{"lineNumber":28,"author":{"gitId":"Kailash201"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":29,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":30,"author":{"gitId":"Kailash201"},"content":"    class DayListViewCell extends ListCell\u003cString\u003e {","lastModifiedDate":"2023-10-23"},{"lineNumber":31,"author":{"gitId":"Kailash201"},"content":"        @Override","lastModifiedDate":"2023-10-23"},{"lineNumber":32,"author":{"gitId":"Kailash201"},"content":"        protected void updateItem(String day, boolean empty) {","lastModifiedDate":"2023-10-23"},{"lineNumber":33,"author":{"gitId":"Kailash201"},"content":"            super.updateItem(day, empty);","lastModifiedDate":"2023-10-23"},{"lineNumber":34,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":35,"author":{"gitId":"Kailash201"},"content":"            if (empty || day \u003d\u003d null) {","lastModifiedDate":"2023-10-23"},{"lineNumber":36,"author":{"gitId":"Kailash201"},"content":"                setGraphic(null);","lastModifiedDate":"2023-10-23"},{"lineNumber":37,"author":{"gitId":"Kailash201"},"content":"                setText(null);","lastModifiedDate":"2023-10-23"},{"lineNumber":38,"author":{"gitId":"Kailash201"},"content":"            } else {","lastModifiedDate":"2023-10-23"},{"lineNumber":39,"author":{"gitId":"Kailash201"},"content":"                setGraphic(new DayCard(day).getRoot());","lastModifiedDate":"2023-10-23"},{"lineNumber":40,"author":{"gitId":"Kailash201"},"content":"            }","lastModifiedDate":"2023-10-23"},{"lineNumber":41,"author":{"gitId":"Kailash201"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":42,"author":{"gitId":"Kailash201"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":43,"author":{"gitId":"Kailash201"},"content":"}","lastModifiedDate":"2023-10-23"}],"authorContributionMap":{"Kailash201":43}},{"path":"src/main/java/seedu/address/ui/DayCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Kailash201"},"content":"package seedu.address.ui;","lastModifiedDate":"2023-10-23"},{"lineNumber":2,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":3,"author":{"gitId":"Kailash201"},"content":"import java.awt.Font;","lastModifiedDate":"2023-10-23"},{"lineNumber":4,"author":{"gitId":"Kailash201"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-10-23"},{"lineNumber":5,"author":{"gitId":"Kailash201"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-10-23"},{"lineNumber":6,"author":{"gitId":"Kailash201"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-10-23"},{"lineNumber":7,"author":{"gitId":"Kailash201"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-10-23"},{"lineNumber":8,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":9,"author":{"gitId":"Kailash201"},"content":"public class DayCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-10-23"},{"lineNumber":10,"author":{"gitId":"Kailash201"},"content":"    private static final String FXML \u003d \"DayCard.fxml\";","lastModifiedDate":"2023-10-23"},{"lineNumber":11,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":12,"author":{"gitId":"Kailash201"},"content":"    public final String dayName;","lastModifiedDate":"2023-10-23"},{"lineNumber":13,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":14,"author":{"gitId":"Kailash201"},"content":"    @FXML","lastModifiedDate":"2023-10-23"},{"lineNumber":15,"author":{"gitId":"Kailash201"},"content":"    private HBox dayCard;","lastModifiedDate":"2023-10-23"},{"lineNumber":16,"author":{"gitId":"Kailash201"},"content":"    @FXML","lastModifiedDate":"2023-10-23"},{"lineNumber":17,"author":{"gitId":"Kailash201"},"content":"    private Label day;","lastModifiedDate":"2023-10-23"},{"lineNumber":18,"author":{"gitId":"Kailash201"},"content":"    @FXML","lastModifiedDate":"2023-10-23"},{"lineNumber":19,"author":{"gitId":"Kailash201"},"content":"    private Label task;","lastModifiedDate":"2023-10-23"},{"lineNumber":20,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":21,"author":{"gitId":"Kailash201"},"content":"    public DayCard(String dayName) {","lastModifiedDate":"2023-10-23"},{"lineNumber":22,"author":{"gitId":"Kailash201"},"content":"        super(FXML);","lastModifiedDate":"2023-10-23"},{"lineNumber":23,"author":{"gitId":"Kailash201"},"content":"        this.dayName \u003d dayName;","lastModifiedDate":"2023-10-23"},{"lineNumber":24,"author":{"gitId":"Kailash201"},"content":"        day.setText(dayName);","lastModifiedDate":"2023-10-23"},{"lineNumber":25,"author":{"gitId":"Kailash201"},"content":"        task.setText(\"To be implemented\");","lastModifiedDate":"2023-10-23"},{"lineNumber":26,"author":{"gitId":"Kailash201"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":27,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":28,"author":{"gitId":"Kailash201"},"content":"}","lastModifiedDate":"2023-10-23"}],"authorContributionMap":{"Kailash201":28}},{"path":"src/main/java/seedu/address/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"coderhuang559"},"content":"    public static final String USERGUIDE_URL \u003d \"https://raw.githubusercontent.com/AY2324S1-CS2103T-T10-3/tp/master/docs/UserGuide.md\";","lastModifiedDate":"2023-10-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String HELP_MESSAGE \u003d \"Refer to the user guide: \" + USERGUIDE_URL;","lastModifiedDate":"2019-08-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     *     \u003cul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     *             if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     *             if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *             if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *             if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     *     \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2019-08-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2019-08-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2019-08-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        url.putString(USERGUIDE_URL);","lastModifiedDate":"2019-08-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2019-08-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"coderhuang559":1,"-":101}},{"path":"src/main/java/seedu/address/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2016-09-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-06-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private PersonListPanel personListPanel;","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":37,"author":{"gitId":"Kailash201"},"content":"    private Calendar calendar;","lastModifiedDate":"2023-10-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private StackPane personListPanelPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"Kailash201"},"content":"    @FXML","lastModifiedDate":"2023-10-23"},{"lineNumber":52,"author":{"gitId":"Kailash201"},"content":"    private StackPane dayListPanelPlaceholder;","lastModifiedDate":"2023-10-23"},{"lineNumber":53,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        personListPanel \u003d new PersonListPanel(logic.getFilteredPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        personListPanelPlaceholder.getChildren().add(personListPanel.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":120,"author":{"gitId":"Kailash201"},"content":"        calendar \u003d new Calendar(); // need pass stuff here in the future","lastModifiedDate":"2023-10-23"},{"lineNumber":121,"author":{"gitId":"Kailash201"},"content":"        dayListPanelPlaceholder.getChildren().add(calendar.getRoot());","lastModifiedDate":"2023-10-23"},{"lineNumber":122,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getAddressBookFilePath());","lastModifiedDate":"2019-01-25"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":162,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":163,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    public PersonListPanel getPersonListPanel() {","lastModifiedDate":"2016-08-25"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        return personListPanel;","lastModifiedDate":"2018-08-14"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":178,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":179,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":180,"author":{"gitId":"-"},"content":"     * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":181,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":184,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":185,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":186,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":188,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":189,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":190,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":193,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":194,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":196,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":198,"author":{"gitId":"-"},"content":"            logger.info(\"An error occurred while executing command: \" + commandText);","lastModifiedDate":"2023-06-13"},{"lineNumber":199,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":200,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":203,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"Kailash201":7,"-":196}},{"path":"src/main/java/seedu/address/ui/PersonCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"ZD292"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2023-10-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * An UI component that displays information of a {@code Person}.","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class PersonCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListCard.fxml\";","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public final Person person;","lastModifiedDate":"2018-01-10"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private Label address;","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private Label email;","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"Kailash201"},"content":"    private FlowPane groups;","lastModifiedDate":"2023-10-06"},{"lineNumber":44,"author":{"gitId":"Kailash201"},"content":"    @FXML","lastModifiedDate":"2023-10-21"},{"lineNumber":45,"author":{"gitId":"Kailash201"},"content":"    private FlowPane free_time;","lastModifiedDate":"2023-10-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2020-05-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2018-01-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        this.person \u003d person;","lastModifiedDate":"2017-07-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        name.setText(person.getName().fullName);","lastModifiedDate":"2017-12-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        phone.setText(person.getPhone().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        email.setText(person.getEmail().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":57,"author":{"gitId":"Kailash201"},"content":"        person.getGroups()","lastModifiedDate":"2023-10-06"},{"lineNumber":58,"author":{"gitId":"Kailash201"},"content":"                .toStream()","lastModifiedDate":"2023-10-06"},{"lineNumber":59,"author":{"gitId":"Kailash201"},"content":"                .sorted(Comparator.comparing(Group::getGroupName))","lastModifiedDate":"2023-10-06"},{"lineNumber":60,"author":{"gitId":"Kailash201"},"content":"                .forEach(group -\u003e groups.getChildren().add(new Label(group.getGroupName())));","lastModifiedDate":"2023-10-06"},{"lineNumber":61,"author":{"gitId":"nicholastng010601"},"content":"        person.getTime().iterator().forEachRemaining(interval -\u003e free_time.getChildren().add(new Label(interval.toString())));","lastModifiedDate":"2023-10-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"Kailash201":7,"ZD292":1,"nicholastng010601":1,"-":54}},{"path":"src/main/resources/view/CalendarList.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Kailash201"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-10-23"},{"lineNumber":2,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":3,"author":{"gitId":"Kailash201"},"content":"\u003c?import java.lang.*?\u003e","lastModifiedDate":"2023-10-23"},{"lineNumber":4,"author":{"gitId":"Kailash201"},"content":"\u003c?import java.util.*?\u003e","lastModifiedDate":"2023-10-23"},{"lineNumber":5,"author":{"gitId":"Kailash201"},"content":"\u003c?import javafx.scene.*?\u003e","lastModifiedDate":"2023-10-23"},{"lineNumber":6,"author":{"gitId":"Kailash201"},"content":"\u003c?import javafx.scene.control.*?\u003e","lastModifiedDate":"2023-10-23"},{"lineNumber":7,"author":{"gitId":"Kailash201"},"content":"\u003c?import javafx.scene.layout.*?\u003e","lastModifiedDate":"2023-10-23"},{"lineNumber":8,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":9,"author":{"gitId":"Kailash201"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" \u003e","lastModifiedDate":"2023-10-23"},{"lineNumber":10,"author":{"gitId":"Kailash201"},"content":"    \u003cStackPane minHeight\u003d\"40\" style\u003d\"-fx-background-color: #D2B48C;-fx-alignment: center-left; -fx-padding: 15 0 15 30\"\u003e","lastModifiedDate":"2023-10-23"},{"lineNumber":11,"author":{"gitId":"Kailash201"},"content":"        \u003cLabel fx:id\u003d\"ra\" text\u003d\"Schedule\" /\u003e","lastModifiedDate":"2023-10-23"},{"lineNumber":12,"author":{"gitId":"Kailash201"},"content":"    \u003c/StackPane\u003e","lastModifiedDate":"2023-10-23"},{"lineNumber":13,"author":{"gitId":"Kailash201"},"content":"    \u003cListView fx:id\u003d\"dayListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-10-23"},{"lineNumber":14,"author":{"gitId":"Kailash201"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2023-10-23"}],"authorContributionMap":{"Kailash201":14}},{"path":"src/main/resources/view/CommandBox.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"Kailash201"},"content":"\u003cStackPane  xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":7,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":8,"author":{"gitId":"Kailash201"},"content":"  \u003cTextField fx:id\u003d\"commandTextField\" onAction\u003d\"#handleCommandEntered\" promptText\u003d\"Enter command here...\" maxWidth\u003d\"600.0\"/\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"}],"authorContributionMap":{"Kailash201":3,"-":7}},{"path":"src/main/resources/view/DarkTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":".label {","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    -fx-text-fill: #555555;","lastModifiedDate":"2016-08-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":".label-bright {","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":".label-header {","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":".text-field {","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":26,"author":{"gitId":"Kailash201"},"content":"    -fx-prompt-text-fill: black;","lastModifiedDate":"2023-10-16"},{"lineNumber":27,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":".tab-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":".table-view {","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    -fx-base: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    -fx-control-inner-background: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    -fx-padding: 5;","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    -fx-size: 35;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"nicholastng010601"},"content":"    -fx-border-color: derive(-fx-base, 80%);","lastModifiedDate":"2023-10-17"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":".table-view .column-header .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"nicholastng010601"},"content":"// to separate the contact boxes","lastModifiedDate":"2023-10-17"},{"lineNumber":62,"author":{"gitId":"-"},"content":".list-cell {","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":".list-cell:filled:even {","lastModifiedDate":"2017-03-02"},{"lineNumber":69,"author":{"gitId":"nicholastng010601"},"content":"    -fx-background-color: rgba(255, 255, 255, 0.4);","lastModifiedDate":"2023-10-17"},{"lineNumber":70,"author":{"gitId":"nicholastng010601"},"content":"    -fx-effect: dropshadow(gaussian, #ffd4d4, 50, 0, 0, 0);","lastModifiedDate":"2023-10-17"},{"lineNumber":71,"author":{"gitId":"nicholastng010601"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2023-10-17"},{"lineNumber":72,"author":{"gitId":"nicholastng010601"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2023-10-17"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":76,"author":{"gitId":"-"},"content":".list-cell:filled:odd {","lastModifiedDate":"2017-03-02"},{"lineNumber":77,"author":{"gitId":"nicholastng010601"},"content":"    -fx-background-color: rgba(255, 255, 255, 0.4);","lastModifiedDate":"2023-10-17"},{"lineNumber":78,"author":{"gitId":"nicholastng010601"},"content":"    -fx-effect: dropshadow(gaussian, #ffd4d4, 50, 0, 0, 0);","lastModifiedDate":"2023-10-17"},{"lineNumber":79,"author":{"gitId":"nicholastng010601"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2023-10-17"},{"lineNumber":80,"author":{"gitId":"nicholastng010601"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2023-10-17"},{"lineNumber":81,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":".cell_big_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2016-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":".cell_small_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2022-01-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2017-03-02"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":".pane-with-border {","lastModifiedDate":"2017-05-15"},{"lineNumber":97,"author":{"gitId":"Kailash201"},"content":"     -fx-background-color: #56494c;","lastModifiedDate":"2023-10-19"},{"lineNumber":98,"author":{"gitId":"Kailash201"},"content":"     -fx-border-color: #56494c;","lastModifiedDate":"2023-10-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-09"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":".status-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"Kailash201"},"content":"    -fx-background-color: derive(#56494c, 5%);","lastModifiedDate":"2023-10-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":".result-display {","lastModifiedDate":"2016-09-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-10-19"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":".result-display .label {","lastModifiedDate":"2016-09-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    -fx-text-fill: black !important;","lastModifiedDate":"2016-09-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":".status-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":117,"author":{"gitId":"Kailash201"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2023-10-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2018-12-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2018-12-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":".status-bar-with-border {","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":".status-bar-with-border .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":".grid-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":139,"author":{"gitId":"nicholastng010601"},"content":"    -fx-background-color: #818080;","lastModifiedDate":"2023-10-17"},{"lineNumber":140,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":".context-menu {","lastModifiedDate":"2016-08-08"},{"lineNumber":143,"author":{"gitId":"Kailash201"},"content":"    -fx-background-color: #818080;","lastModifiedDate":"2023-10-19"},{"lineNumber":144,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":".context-menu .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":150,"author":{"gitId":"nicholastng010601"},"content":"// top bar","lastModifiedDate":"2023-10-17"},{"lineNumber":151,"author":{"gitId":"-"},"content":".menu-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":152,"author":{"gitId":"Kailash201"},"content":"    -fx-background-color: derive(#56494c, 5%);","lastModifiedDate":"2023-10-19"},{"lineNumber":153,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":".menu-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":158,"author":{"gitId":"Kailash201"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2023-10-16"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":".menu .left-container {","lastModifiedDate":"2016-08-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    -fx-background-color: black;","lastModifiedDate":"2016-08-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2016-08-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":" * Metro style Push Button","lastModifiedDate":"2016-08-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2016-08-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2016-08-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":".button {","lastModifiedDate":"2016-08-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\", Helvetica, Arial, sans-serif;","lastModifiedDate":"2022-01-13"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2016-08-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":".button:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    -fx-background-color: #3a3a3a;","lastModifiedDate":"2016-08-08"},{"lineNumber":185,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2016-08-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":"  -fx-background-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":189,"author":{"gitId":"-"},"content":"  -fx-text-fill: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":190,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":".button:focused {","lastModifiedDate":"2016-08-08"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    -fx-border-color: white, white;","lastModifiedDate":"2016-08-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2016-08-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2016-08-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2016-08-08"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":206,"author":{"gitId":"-"},"content":".button:default {","lastModifiedDate":"2016-08-08"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2016-08-08"},{"lineNumber":209,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":".button:default:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2016-08-08"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":".dialog-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":217,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":219,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2016-08-08"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":221,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":223,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2016-08-08"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2016-08-08"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2016-08-08"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":227,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":229,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2016-08-08"},{"lineNumber":230,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":231,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":233,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2016-08-08"},{"lineNumber":234,"author":{"gitId":"-"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2016-08-08"},{"lineNumber":235,"author":{"gitId":"-"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2016-08-08"},{"lineNumber":236,"author":{"gitId":"-"},"content":"    -fx-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":240,"author":{"gitId":"-"},"content":".scroll-bar {","lastModifiedDate":"2017-03-02"},{"lineNumber":241,"author":{"gitId":"nicholastng010601"},"content":"    -fx-background-color: derive(#c2c2c2, 80%);","lastModifiedDate":"2023-10-17"},{"lineNumber":242,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":244,"author":{"gitId":"-"},"content":".scroll-bar .thumb {","lastModifiedDate":"2016-08-15"},{"lineNumber":245,"author":{"gitId":"nicholastng010601"},"content":"    -fx-background-color: derive(#d4a9a9, 0%);","lastModifiedDate":"2023-10-17"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2016-08-15"},{"lineNumber":247,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":249,"author":{"gitId":"-"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2016-08-15"},{"lineNumber":250,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-15"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-15"},{"lineNumber":252,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":254,"author":{"gitId":"-"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2016-08-15"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2016-08-15"},{"lineNumber":256,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":258,"author":{"gitId":"-"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2016-08-15"},{"lineNumber":260,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":262,"author":{"gitId":"-"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2016-08-18"},{"lineNumber":264,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":266,"author":{"gitId":"-"},"content":"#cardPane {","lastModifiedDate":"2016-08-08"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":269,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":271,"author":{"gitId":"-"},"content":"#commandTypeLabel {","lastModifiedDate":"2016-08-08"},{"lineNumber":272,"author":{"gitId":"-"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2016-08-08"},{"lineNumber":273,"author":{"gitId":"-"},"content":"    -fx-text-fill: #F70D1A;","lastModifiedDate":"2016-08-08"},{"lineNumber":274,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":276,"author":{"gitId":"nicholastng010601"},"content":"//input box","lastModifiedDate":"2023-10-17"},{"lineNumber":277,"author":{"gitId":"-"},"content":"#commandTextField {","lastModifiedDate":"2017-03-02"},{"lineNumber":278,"author":{"gitId":"Kailash201"},"content":"    -fx-background-color: #FFFFFF;","lastModifiedDate":"2023-10-16"},{"lineNumber":279,"author":{"gitId":"Kailash201"},"content":"    -fx-border-color: #FFFFFF;","lastModifiedDate":"2023-10-16"},{"lineNumber":280,"author":{"gitId":"Kailash201"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2023-10-16"},{"lineNumber":281,"author":{"gitId":"Kailash201"},"content":"    -fx-background-radius: 50px;","lastModifiedDate":"2023-10-16"},{"lineNumber":282,"author":{"gitId":"Kailash201"},"content":"    -fx-border-radius: 50px;","lastModifiedDate":"2023-10-16"},{"lineNumber":283,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":284,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":285,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":287,"author":{"gitId":"-"},"content":"#filterField, #personListPanel, #personWebpage {","lastModifiedDate":"2016-08-15"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2016-08-15"},{"lineNumber":289,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":291,"author":{"gitId":"Kailash201"},"content":"#personListView {","lastModifiedDate":"2023-10-16"},{"lineNumber":292,"author":{"gitId":"Kailash201"},"content":"    -fx-padding: 0 30 30 30;","lastModifiedDate":"2023-10-16"},{"lineNumber":293,"author":{"gitId":"Kailash201"},"content":"    -fx-background-color: #D2B48C","lastModifiedDate":"2023-10-16"},{"lineNumber":294,"author":{"gitId":"Kailash201"},"content":"}","lastModifiedDate":"2023-10-16"},{"lineNumber":295,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":296,"author":{"gitId":"Kailash201"},"content":"#dayListView {","lastModifiedDate":"2023-10-23"},{"lineNumber":297,"author":{"gitId":"Kailash201"},"content":"    -fx-padding: 0 10 10 10;","lastModifiedDate":"2023-10-23"},{"lineNumber":298,"author":{"gitId":"Kailash201"},"content":"    -fx-background-color: #D2B48C","lastModifiedDate":"2023-10-23"},{"lineNumber":299,"author":{"gitId":"Kailash201"},"content":"}","lastModifiedDate":"2023-10-23"},{"lineNumber":300,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":301,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":302,"author":{"gitId":"-"},"content":"#resultDisplay .content{","lastModifiedDate":"2017-03-02"},{"lineNumber":303,"author":{"gitId":"Kailash201"},"content":"    -fx-background-color: #9B6572;","lastModifiedDate":"2023-10-19"},{"lineNumber":304,"author":{"gitId":"nicholastng010601"},"content":"    border-color: #B88491;","lastModifiedDate":"2023-10-25"},{"lineNumber":305,"author":{"gitId":"Kailash201"},"content":"    border-radius: 0;","lastModifiedDate":"2023-10-19"},{"lineNumber":306,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":307,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":308,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":309,"author":{"gitId":"Kailash201"},"content":"#groups {","lastModifiedDate":"2023-10-06"},{"lineNumber":310,"author":{"gitId":"-"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2016-12-18"},{"lineNumber":311,"author":{"gitId":"-"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":312,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":313,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":314,"author":{"gitId":"Kailash201"},"content":"#day {","lastModifiedDate":"2023-10-23"},{"lineNumber":315,"author":{"gitId":"Kailash201"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2023-10-23"},{"lineNumber":316,"author":{"gitId":"Kailash201"},"content":"    -fx-font-size: 18;","lastModifiedDate":"2023-10-23"},{"lineNumber":317,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":318,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-23"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":320,"author":{"gitId":"Kailash201"},"content":"#groups .label {","lastModifiedDate":"2023-10-06"},{"lineNumber":321,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-12-18"},{"lineNumber":322,"author":{"gitId":"nicholastng010601"},"content":"    -fx-background-color: #E18888;","lastModifiedDate":"2023-10-17"},{"lineNumber":323,"author":{"gitId":"-"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":324,"author":{"gitId":"-"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":325,"author":{"gitId":"-"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":326,"author":{"gitId":"-"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2016-12-18"},{"lineNumber":327,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":328,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":329,"author":{"gitId":"Kailash201"},"content":"#free_time {","lastModifiedDate":"2023-10-21"},{"lineNumber":330,"author":{"gitId":"-"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2023-10-21"},{"lineNumber":331,"author":{"gitId":"-"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2023-10-21"},{"lineNumber":332,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-21"},{"lineNumber":333,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":334,"author":{"gitId":"Kailash201"},"content":"#free_time .label {","lastModifiedDate":"2023-10-21"},{"lineNumber":335,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-10-21"},{"lineNumber":336,"author":{"gitId":"Kailash201"},"content":"    -fx-background-color: #B488E1;","lastModifiedDate":"2023-10-21"},{"lineNumber":337,"author":{"gitId":"-"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2023-10-21"},{"lineNumber":338,"author":{"gitId":"-"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2023-10-21"},{"lineNumber":339,"author":{"gitId":"-"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2023-10-21"},{"lineNumber":340,"author":{"gitId":"-"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2023-10-21"},{"lineNumber":341,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-21"},{"lineNumber":342,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":343,"author":{"gitId":"Kailash201"},"content":"#ra {","lastModifiedDate":"2023-10-16"},{"lineNumber":344,"author":{"gitId":"Kailash201"},"content":"   -fx-text-fill: White;","lastModifiedDate":"2023-10-16"},{"lineNumber":345,"author":{"gitId":"Kailash201"},"content":"   -fx-font-size: 20;","lastModifiedDate":"2023-10-16"},{"lineNumber":346,"author":{"gitId":"Kailash201"},"content":"}","lastModifiedDate":"2023-10-16"}],"authorContributionMap":{"Kailash201":43,"nicholastng010601":17,"-":286}},{"path":"src/main/resources/view/DayCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Kailash201"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-10-23"},{"lineNumber":2,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":3,"author":{"gitId":"Kailash201"},"content":"\u003c?import java.lang.*?\u003e","lastModifiedDate":"2023-10-23"},{"lineNumber":4,"author":{"gitId":"Kailash201"},"content":"\u003c?import java.util.*?\u003e","lastModifiedDate":"2023-10-23"},{"lineNumber":5,"author":{"gitId":"Kailash201"},"content":"\u003c?import javafx.scene.*?\u003e","lastModifiedDate":"2023-10-23"},{"lineNumber":6,"author":{"gitId":"Kailash201"},"content":"\u003c?import javafx.scene.control.*?\u003e","lastModifiedDate":"2023-10-23"},{"lineNumber":7,"author":{"gitId":"Kailash201"},"content":"\u003c?import javafx.scene.layout.*?\u003e","lastModifiedDate":"2023-10-23"},{"lineNumber":8,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":9,"author":{"gitId":"Kailash201"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-10-23"},{"lineNumber":10,"author":{"gitId":"Kailash201"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-10-23"},{"lineNumber":11,"author":{"gitId":"Kailash201"},"content":"    \u003cHBox fx:id\u003d\"dayCard\" minHeight\u003d\"100\" prefHeight\u003d\"100\" \u003e","lastModifiedDate":"2023-10-23"},{"lineNumber":12,"author":{"gitId":"Kailash201"},"content":"        \u003cpadding\u003e","lastModifiedDate":"2023-10-23"},{"lineNumber":13,"author":{"gitId":"Kailash201"},"content":"            \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"0\" left\u003d\"15\" /\u003e","lastModifiedDate":"2023-10-23"},{"lineNumber":14,"author":{"gitId":"Kailash201"},"content":"        \u003c/padding\u003e","lastModifiedDate":"2023-10-23"},{"lineNumber":15,"author":{"gitId":"Kailash201"},"content":"        \u003cLabel fx:id\u003d\"day\" text\u003d\"$day\" prefWidth\u003d\"60\" style\u003d\"-fx-padding: 25 0 0 0;\" /\u003e","lastModifiedDate":"2023-10-23"},{"lineNumber":16,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":17,"author":{"gitId":"Kailash201"},"content":"        \u003cVBox\u003e","lastModifiedDate":"2023-10-23"},{"lineNumber":18,"author":{"gitId":"Kailash201"},"content":"            \u003cHBox VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-10-23"},{"lineNumber":19,"author":{"gitId":"Kailash201"},"content":"                \u003cLabel fx:id\u003d\"dot\" text\u003d\"-  \"/\u003e","lastModifiedDate":"2023-10-23"},{"lineNumber":20,"author":{"gitId":"Kailash201"},"content":"                \u003cLabel fx:id\u003d\"task\" text\u003d\"$task\"/\u003e","lastModifiedDate":"2023-10-23"},{"lineNumber":21,"author":{"gitId":"Kailash201"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2023-10-23"},{"lineNumber":22,"author":{"gitId":"Kailash201"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2023-10-23"},{"lineNumber":23,"author":{"gitId":"Kailash201"},"content":"    \u003c/HBox\u003e","lastModifiedDate":"2023-10-23"},{"lineNumber":24,"author":{"gitId":"Kailash201"},"content":"    \u003cHBox prefHeight\u003d\"15\"  style\u003d\"-fx-background-color: #D2B48C; \"/\u003e","lastModifiedDate":"2023-10-23"},{"lineNumber":25,"author":{"gitId":"Kailash201"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2023-10-23"}],"authorContributionMap":{"Kailash201":25}},{"path":"src/main/resources/view/Extensions.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":".error {","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d06651 !important; /* The error class should always override the default text-fill style */","lastModifiedDate":"2017-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".list-cell:empty {","lastModifiedDate":"2017-02-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    /* Empty cells will not have alternating colours */","lastModifiedDate":"2017-02-23"},{"lineNumber":8,"author":{"gitId":"nicholastng010601"},"content":"    -fx-background: #D2B48C;","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":".tag-selector {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    -fx-border-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-border-radius: 3;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-background-radius: 3;","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":".tooltip-text {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"nicholastng010601":1,"-":19}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.SplitPane?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"Kailash201"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-10-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"\u003cfx:root type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2023-07-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"         title\u003d\"Address App\" minWidth\u003d\"450\" minHeight\u003d\"600\" onCloseRequest\u003d\"#handleExit\"\u003e","lastModifiedDate":"2018-12-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \u003cImage url\u003d\"@/images/address_book_32.png\" /\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"          \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\" \u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":29,"author":{"gitId":"nicholastng010601"},"content":"            \u003cMenu mnemonicParsing\u003d\"false\" fx:id\u003d\"button\" text\u003d\"File\" styleClass\u003d\"custom-menu-item\"\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"nicholastng010601"},"content":"              \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" styleClass\u003d\"custom-menu-item\"/\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"nicholastng010601"},"content":"            \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\" styleClass\u003d\"custom-menu-item\"\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"nicholastng010601"},"content":"              \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\"","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"nicholastng010601"},"content":"                        text\u003d\"Help\" styleClass\u003d\"custom-menu-item\" /\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"          \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"          \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"              \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":42,"author":{"gitId":"-"},"content":"          \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"          \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"resultDisplayPlaceholder\" styleClass\u003d\"pane-with-border\"","lastModifiedDate":"2017-05-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                     minHeight\u003d\"100\" prefHeight\u003d\"100\" maxHeight\u003d\"100\"\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"              \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":49,"author":{"gitId":"-"},"content":"          \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":51,"author":{"gitId":"Kailash201"},"content":"          \u003cHBox \u003e","lastModifiedDate":"2023-10-23"},{"lineNumber":52,"author":{"gitId":"Kailash201"},"content":"            \u003cVBox fx:id\u003d\"personList\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"500\" prefWidth\u003d\"500\"","lastModifiedDate":"2023-10-23"},{"lineNumber":53,"author":{"gitId":"Kailash201"},"content":"                  VBox.vgrow\u003d\"ALWAYS\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-10-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"              \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":55,"author":{"gitId":"Kailash201"},"content":"                \u003cInsets top\u003d\"10\" right\u003d\"15\" bottom\u003d\"10\" left\u003d\"30\" /\u003e","lastModifiedDate":"2023-10-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"              \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"              \u003cStackPane fx:id\u003d\"personListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2017-06-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            \u003c/VBox\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":60,"author":{"gitId":"Kailash201"},"content":"            \u003cVBox fx:id\u003d\"dayList\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"ALWAYS\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-10-23"},{"lineNumber":61,"author":{"gitId":"Kailash201"},"content":"              \u003cpadding\u003e","lastModifiedDate":"2023-10-23"},{"lineNumber":62,"author":{"gitId":"Kailash201"},"content":"                \u003cInsets top\u003d\"10\" right\u003d\"30\" bottom\u003d\"10\" left\u003d\"0\" /\u003e","lastModifiedDate":"2023-10-23"},{"lineNumber":63,"author":{"gitId":"Kailash201"},"content":"              \u003c/padding\u003e","lastModifiedDate":"2023-10-23"},{"lineNumber":64,"author":{"gitId":"Kailash201"},"content":"              \u003cStackPane fx:id\u003d\"dayListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2023-10-23"},{"lineNumber":65,"author":{"gitId":"Kailash201"},"content":"            \u003c/VBox\u003e","lastModifiedDate":"2023-10-23"},{"lineNumber":66,"author":{"gitId":"Kailash201"},"content":"          \u003c/HBox\u003e","lastModifiedDate":"2023-10-23"},{"lineNumber":67,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"          \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"Kailash201":13,"nicholastng010601":5,"-":55}},{"path":"src/main/resources/view/PersonListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-07-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"Kailash201"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" maxHeight\u003d\"150\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":18,"author":{"gitId":"Kailash201"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"Kailash201"},"content":"          \u003cInsets top\u003d\"10\" right\u003d\"5\" bottom\u003d\"10\" left\u003d\"15\" /\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"          \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"              \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"              \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"          \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":31,"author":{"gitId":"Kailash201"},"content":"        \u003cFlowPane fx:id\u003d\"groups\" /\u003e","lastModifiedDate":"2023-10-06"},{"lineNumber":32,"author":{"gitId":"Kailash201"},"content":"        \u003cFlowPane fx:id\u003d\"free_time\" /\u003e","lastModifiedDate":"2023-10-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"Kailash201"},"content":"      \u003cHBox prefHeight\u003d\"15\"  style\u003d\"-fx-background-color: #D2B48C; \"\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Kailash201":6,"-":34}},{"path":"src/main/resources/view/PersonListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"Kailash201"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":6,"author":{"gitId":"Kailash201"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" \u003e","lastModifiedDate":"2023-07-27"},{"lineNumber":9,"author":{"gitId":"Kailash201"},"content":"    \u003cStackPane minHeight\u003d\"40\" style\u003d\"-fx-background-color: #D2B48C;-fx-alignment: center-left; -fx-padding: 15 0 15 30\"\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":10,"author":{"gitId":"Kailash201"},"content":"        \u003cLabel fx:id\u003d\"ra\" text\u003d\"Recently Added\" /\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":11,"author":{"gitId":"Kailash201"},"content":"    \u003c/StackPane\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    \u003cListView fx:id\u003d\"personListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Kailash201":5,"-":8}},{"path":"src/main/resources/view/ResultDisplay.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.TextArea?\u003e","lastModifiedDate":"2016-10-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"Kailash201"},"content":"\u003cStackPane fx:id\u003d\"placeHolder\" styleClass\u003d\"pane-with-borer\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":7,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":8,"author":{"gitId":"Kailash201"},"content":"  \u003cTextArea fx:id\u003d\"resultDisplay\" editable\u003d\"false\"  styleClass\u003d\"result-display\" maxWidth\u003d\"600.0\"/\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":9,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":11,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-10-16"}],"authorContributionMap":{"Kailash201":5,"-":6}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2023-07-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.nio.file.AccessDeniedException;","lastModifiedDate":"2023-06-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2017-01-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2016-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy IO exception\");","lastModifiedDate":"2023-06-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_AD_EXCEPTION \u003d new AccessDeniedException(\"dummy access denied exception\");","lastModifiedDate":"2023-06-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        String deleteCommand \u003d \"delete 9\";","lastModifiedDate":"2017-06-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2017-06-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2017-06-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2017-06-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertCommandFailureForExceptionFromStorage(DUMMY_IO_EXCEPTION, String.format(","lastModifiedDate":"2023-06-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                LogicManager.FILE_OPS_ERROR_FORMAT, DUMMY_IO_EXCEPTION.getMessage()));","lastModifiedDate":"2023-06-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-06-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-06-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsAdException_throwsCommandException() {","lastModifiedDate":"2023-06-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertCommandFailureForExceptionFromStorage(DUMMY_AD_EXCEPTION, String.format(","lastModifiedDate":"2023-06-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"                LogicManager.FILE_OPS_PERMISSION_ERROR_FORMAT, DUMMY_AD_EXCEPTION.getMessage()));","lastModifiedDate":"2023-06-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-05-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     * Tests the Logic component\u0027s handling of an {@code IOException} thrown by the Storage component.","lastModifiedDate":"2023-06-13"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-06-13"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     * @param e the exception to be thrown by the Storage component","lastModifiedDate":"2023-06-13"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * @param expectedMessage the message expected inside exception thrown by the Logic component","lastModifiedDate":"2023-06-13"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    private void assertCommandFailureForExceptionFromStorage(IOException e, String expectedMessage) {","lastModifiedDate":"2023-06-13"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        Path prefPath \u003d temporaryFolder.resolve(\"ExceptionUserPrefs.json\");","lastModifiedDate":"2023-06-13"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        // Inject LogicManager with an AddressBookStorage that throws the IOException e when saving","lastModifiedDate":"2023-06-13"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(prefPath) {","lastModifiedDate":"2023-06-13"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath)","lastModifiedDate":"2023-06-13"},{"lineNumber":155,"author":{"gitId":"-"},"content":"                    throws IOException {","lastModifiedDate":"2023-06-13"},{"lineNumber":156,"author":{"gitId":"-"},"content":"                throw e;","lastModifiedDate":"2023-06-13"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2023-06-13"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2023-06-13"},{"lineNumber":161,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ExceptionUserPrefs.json\"));","lastModifiedDate":"2023-06-13"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2023-06-13"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2023-06-13"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        // Triggers the saveAddressBook method by executing an add command","lastModifiedDate":"2023-06-13"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        String addCommand \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY","lastModifiedDate":"2023-06-13"},{"lineNumber":168,"author":{"gitId":"Kailash201"},"content":"                + EMAIL_DESC_AMY;","lastModifiedDate":"2023-10-22"},{"lineNumber":169,"author":{"gitId":"Kailash201"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).build();","lastModifiedDate":"2023-10-19"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2023-06-13"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(expectedPerson);","lastModifiedDate":"2023-06-13"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2023-06-13"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":174,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"Kailash201":2,"-":172}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"Kailash201"},"content":"import javafx.util.Pair;","lastModifiedDate":"2023-10-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-05-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":23,"author":{"gitId":"Kailash201"},"content":"import seedu.address.model.TimeInterval;","lastModifiedDate":"2023-10-22"},{"lineNumber":24,"author":{"gitId":"ZD292"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2023-10-10"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-05-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"Kailash201"},"content":"import seedu.address.model.group.GroupRemark;","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"Kailash201"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-10-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2017-05-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2017-05-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new AddCommand(validPerson).execute(modelStub);","lastModifiedDate":"2019-01-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, Messages.format(validPerson)),","lastModifiedDate":"2019-02-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                commandResult.getFeedbackToUser());","lastModifiedDate":"2019-02-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(validPerson), modelStub.personsAdded);","lastModifiedDate":"2017-05-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(validPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_PERSON, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2019-05-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        Person bob \u003d new PersonBuilder().withName(\"Bob\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(ALICE);","lastModifiedDate":"2019-02-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        String expected \u003d AddCommand.class.getCanonicalName() + \"{toAdd\u003d\" + ALICE + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertEquals(expected, addCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2018-11-27"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-12"},{"lineNumber":138,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":141,"author":{"gitId":"Kailash201"},"content":"        @Override","lastModifiedDate":"2023-10-22"},{"lineNumber":142,"author":{"gitId":"Kailash201"},"content":"        public boolean[] usedFields(Person person) {","lastModifiedDate":"2023-10-22"},{"lineNumber":143,"author":{"gitId":"Kailash201"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-22"},{"lineNumber":144,"author":{"gitId":"Kailash201"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":145,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":152,"author":{"gitId":"Kailash201"},"content":"        public boolean hasPerson(Name personName) {","lastModifiedDate":"2023-10-22"},{"lineNumber":153,"author":{"gitId":"Kailash201"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-22"},{"lineNumber":154,"author":{"gitId":"Kailash201"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":155,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":156,"author":{"gitId":"Kailash201"},"content":"        @Override","lastModifiedDate":"2023-10-22"},{"lineNumber":157,"author":{"gitId":"Kailash201"},"content":"        public Person deletePerson(String personName) throws CommandException {","lastModifiedDate":"2023-10-22"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":171,"author":{"gitId":"Kailash201"},"content":"        @Override","lastModifiedDate":"2023-10-22"},{"lineNumber":172,"author":{"gitId":"Kailash201"},"content":"        public ObservableList\u003cGroup\u003e getFilteredGroupList() {","lastModifiedDate":"2023-10-22"},{"lineNumber":173,"author":{"gitId":"Kailash201"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-22"},{"lineNumber":174,"author":{"gitId":"Kailash201"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":175,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":180,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":181,"author":{"gitId":"Kailash201"},"content":"        @Override","lastModifiedDate":"2023-10-06"},{"lineNumber":182,"author":{"gitId":"Kailash201"},"content":"        public void addGroup(Group g) {","lastModifiedDate":"2023-10-22"},{"lineNumber":183,"author":{"gitId":"Kailash201"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-22"},{"lineNumber":184,"author":{"gitId":"Kailash201"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":185,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":186,"author":{"gitId":"Kailash201"},"content":"        @Override","lastModifiedDate":"2023-10-22"},{"lineNumber":187,"author":{"gitId":"Kailash201"},"content":"        public Group deleteGroup(String groupName) throws CommandException {","lastModifiedDate":"2023-10-22"},{"lineNumber":188,"author":{"gitId":"Kailash201"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-22"},{"lineNumber":189,"author":{"gitId":"Kailash201"},"content":"        }","lastModifiedDate":"2023-10-06"},{"lineNumber":190,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":191,"author":{"gitId":"Kailash201"},"content":"        @Override","lastModifiedDate":"2023-10-06"},{"lineNumber":192,"author":{"gitId":"Kailash201"},"content":"        public Pair\u003cPerson, Group\u003e groupPerson(String personName, String groupName) throws CommandException {","lastModifiedDate":"2023-10-22"},{"lineNumber":193,"author":{"gitId":"Kailash201"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-22"},{"lineNumber":194,"author":{"gitId":"Kailash201"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":195,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":196,"author":{"gitId":"Kailash201"},"content":"        @Override","lastModifiedDate":"2023-10-22"},{"lineNumber":197,"author":{"gitId":"Kailash201"},"content":"        public Pair\u003cPerson, Group\u003e ungroupPerson(String personName, String groupName) throws CommandException {","lastModifiedDate":"2023-10-22"},{"lineNumber":198,"author":{"gitId":"Kailash201"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-22"},{"lineNumber":199,"author":{"gitId":"Kailash201"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":200,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":201,"author":{"gitId":"Kailash201"},"content":"        @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":202,"author":{"gitId":"Kailash201"},"content":"        public Group addGroupRemark(String groupName, GroupRemark groupRemark) throws CommandException {","lastModifiedDate":"2023-10-25"},{"lineNumber":203,"author":{"gitId":"Kailash201"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-25"},{"lineNumber":204,"author":{"gitId":"Kailash201"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":205,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":206,"author":{"gitId":"Kailash201"},"content":"        @Override","lastModifiedDate":"2023-10-22"},{"lineNumber":207,"author":{"gitId":"Kailash201"},"content":"        public void addFreeTimeToPerson(Name toAddPerson, ArrayList\u003cTimeInterval\u003e toAddFreeTime) throws CommandException {","lastModifiedDate":"2023-10-22"},{"lineNumber":208,"author":{"gitId":"Kailash201"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-22"},{"lineNumber":209,"author":{"gitId":"Kailash201"},"content":"        }","lastModifiedDate":"2023-10-06"},{"lineNumber":210,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":211,"author":{"gitId":"Kailash201"},"content":"        @Override","lastModifiedDate":"2023-10-06"},{"lineNumber":212,"author":{"gitId":"Kailash201"},"content":"        public boolean hasGroup(Group group) {","lastModifiedDate":"2023-10-06"},{"lineNumber":213,"author":{"gitId":"Kailash201"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-22"},{"lineNumber":214,"author":{"gitId":"Kailash201"},"content":"        }","lastModifiedDate":"2023-10-06"},{"lineNumber":215,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":216,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":220,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2018-08-07"},{"lineNumber":221,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2018-08-07"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        private final Person person;","lastModifiedDate":"2018-08-07"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        ModelStubWithPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":226,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":227,"author":{"gitId":"-"},"content":"            this.person \u003d person;","lastModifiedDate":"2018-08-07"},{"lineNumber":228,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":230,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":231,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":232,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":233,"author":{"gitId":"-"},"content":"            return this.person.isSamePerson(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":235,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":236,"author":{"gitId":"Kailash201"},"content":"        @Override","lastModifiedDate":"2023-10-22"},{"lineNumber":237,"author":{"gitId":"Kailash201"},"content":"        public boolean[] usedFields(Person toAdd) {","lastModifiedDate":"2023-10-22"},{"lineNumber":238,"author":{"gitId":"Kailash201"},"content":"            return new boolean[]{true, true, true};","lastModifiedDate":"2023-10-22"},{"lineNumber":239,"author":{"gitId":"Kailash201"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":242,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":243,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2017-05-12"},{"lineNumber":244,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2017-05-12"},{"lineNumber":246,"author":{"gitId":"-"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2017-05-12"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":248,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":249,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":250,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":251,"author":{"gitId":"-"},"content":"            return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":252,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":254,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":255,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-08"},{"lineNumber":256,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":257,"author":{"gitId":"-"},"content":"            personsAdded.add(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":258,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":260,"author":{"gitId":"Kailash201"},"content":"        @Override","lastModifiedDate":"2023-10-22"},{"lineNumber":261,"author":{"gitId":"Kailash201"},"content":"        public boolean[] usedFields(Person toAdd) {","lastModifiedDate":"2023-10-22"},{"lineNumber":262,"author":{"gitId":"Kailash201"},"content":"            return new boolean[]{false, false, false, false};","lastModifiedDate":"2023-10-22"},{"lineNumber":263,"author":{"gitId":"Kailash201"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":264,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":265,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":266,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-04"},{"lineNumber":267,"author":{"gitId":"-"},"content":"            return new AddressBook();","lastModifiedDate":"2017-05-04"},{"lineNumber":268,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":271,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"Kailash201":67,"ZD292":1,"-":203}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"Kailash201"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GROUPTAG;","lastModifiedDate":"2023-10-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2018-01-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-10-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-07-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2023-10-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2023-10-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2023-10-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2023-10-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2023-10-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2023-10-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_AMY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2023-10-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_BOB \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2023-10-19"},{"lineNumber":37,"author":{"gitId":"Kailash201"},"content":"    public static final String VALID_GROUP_AMY \u003d \"CS2103T, CS2100\";","lastModifiedDate":"2023-10-22"},{"lineNumber":38,"author":{"gitId":"Kailash201"},"content":"    public static final String VALID_GROUP_BOB \u003d \"ST2334\";","lastModifiedDate":"2023-10-22"},{"lineNumber":39,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2023-10-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2023-10-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2023-10-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2023-10-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2023-10-19"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2023-10-19"},{"lineNumber":47,"author":{"gitId":"Kailash201"},"content":"    public static final String GROUP_DESC_AMY \u003d \" \" + PREFIX_GROUPTAG + VALID_GROUP_AMY;","lastModifiedDate":"2023-10-22"},{"lineNumber":48,"author":{"gitId":"Kailash201"},"content":"    public static final String GROUP_DESC_BOB \u003d \" \" + PREFIX_GROUPTAG + VALID_GROUP_BOB;","lastModifiedDate":"2023-10-22"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2023-10-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2023-10-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2023-10-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final String INVALID_ADDRESS_DESC \u003d \" \" + PREFIX_ADDRESS; // empty string not allowed for addresses","lastModifiedDate":"2023-10-19"},{"lineNumber":54,"author":{"gitId":"Kailash201"},"content":"    public static final String INVALID_GROUP_DESC \u003d \" \" + PREFIX_GROUPTAG; // empty string not allowed for group","lastModifiedDate":"2023-10-22"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2023-10-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2023-10-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        DESC_AMY \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":64,"author":{"gitId":"Kailash201"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2023-10-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        DESC_BOB \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":66,"author":{"gitId":"Kailash201"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2023-10-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":89,"author":{"gitId":"ZD292"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, java.lang.String expectedMessage,","lastModifiedDate":"2023-10-10"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * - the address book, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2019-01-25"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2023-10-22"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPersonList());","lastModifiedDate":"2018-01-10"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredPersonList());","lastModifiedDate":"2017-06-05"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2018-01-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public static void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2018-01-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPersonList().size());","lastModifiedDate":"2018-01-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        Person person \u003d model.getFilteredPersonList().get(targetIndex.getZeroBased());","lastModifiedDate":"2018-01-31"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        final String[] splitName \u003d person.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2023-10-19"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2023-10-19"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertEquals(1, model.getFilteredPersonList().size());","lastModifiedDate":"2018-02-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":125,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"Kailash201":9,"ZD292":1,"-":115}},{"path":"src/test/java/seedu/address/logic/commands/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2018-01-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"Kailash201"},"content":"    //need to be edited","lastModifiedDate":"2023-10-22"},{"lineNumber":29,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":30,"author":{"gitId":"Kailash201"},"content":"    /*","lastModifiedDate":"2023-10-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS,","lastModifiedDate":"2019-02-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                Messages.format(personToDelete));","lastModifiedDate":"2019-02-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-06-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS,","lastModifiedDate":"2019-02-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                Messages.format(personToDelete));","lastModifiedDate":"2019-02-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        showNoPerson(expectedModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-06-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-06-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-06-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        DeleteCommand deleteFirstCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        DeleteCommand deleteSecondCommand \u003d new DeleteCommand(INDEX_SECOND_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        DeleteCommand deleteFirstCommandCopy \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2019-02-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(targetIndex);","lastModifiedDate":"2019-02-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        String expected \u003d DeleteCommand.class.getCanonicalName() + \"{targetIndex\u003d\" + targetIndex + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertEquals(expected, deleteCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":114,"author":{"gitId":"Kailash201"},"content":"    */","lastModifiedDate":"2023-10-22"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2017-06-05"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    private void showNoPerson(Model model) {","lastModifiedDate":"2017-06-05"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(p -\u003e false);","lastModifiedDate":"2017-06-12"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertTrue(model.getFilteredPersonList().isEmpty());","lastModifiedDate":"2018-02-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":123,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":124,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"Kailash201":5,"-":119}},{"path":"src/test/java/seedu/address/logic/commands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-04"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-05-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2020-12-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class EditCommandTest {","lastModifiedDate":"2017-05-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(editedPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson));","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Person lastPerson \u003d model.getFilteredPersonList().get(indexLastPerson.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        PersonBuilder personInList \u003d new PersonBuilder(lastPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":57,"author":{"gitId":"Kailash201"},"content":"        Person editedPerson \u003d personInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2023-10-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":60,"author":{"gitId":"Kailash201"},"content":"                .withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2023-10-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(indexLastPerson, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson));","lastModifiedDate":"2019-02-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(lastPerson, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, new EditPersonDescriptor());","lastModifiedDate":"2018-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson));","lastModifiedDate":"2019-02-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        Person personInFilteredList \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder(personInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson));","lastModifiedDate":"2019-02-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(firstPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_SECOND_PERSON, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        // edit person in filtered list into a duplicate in address book","lastModifiedDate":"2017-05-18"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder(personInList).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-05-18"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-22"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2017-05-18"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * but smaller than size of address book","lastModifiedDate":"2017-05-18"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-18"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-05-18"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex,","lastModifiedDate":"2018-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        final EditCommand standardCommand \u003d new EditCommand(INDEX_FIRST_PERSON, DESC_AMY);","lastModifiedDate":"2018-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        EditPersonDescriptor copyDescriptor \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        EditCommand commandWithSameValues \u003d new EditCommand(INDEX_FIRST_PERSON, copyDescriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2017-05-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_SECOND_PERSON, DESC_AMY)));","lastModifiedDate":"2017-05-25"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_FIRST_PERSON, DESC_BOB)));","lastModifiedDate":"2017-05-25"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        Index index \u003d Index.fromOneBased(1);","lastModifiedDate":"2019-02-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2019-02-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(index, editPersonDescriptor);","lastModifiedDate":"2019-02-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        String expected \u003d EditCommand.class.getCanonicalName() + \"{index\u003d\" + index + \", editPersonDescriptor\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"                + editPersonDescriptor + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        assertEquals(expected, editCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"Kailash201":2,"-":180}},{"path":"src/test/java/seedu/address/logic/commands/EditPersonDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorTest {","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptorWithSameValues \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(DESC_AMY));","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(null));","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(5));","lastModifiedDate":"2017-05-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(DESC_BOB));","lastModifiedDate":"2017-05-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":55,"author":{"gitId":"Kailash201"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).build();","lastModifiedDate":"2023-10-22"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2019-02-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        String expected \u003d EditPersonDescriptor.class.getCanonicalName() + \"{name\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                + editPersonDescriptor.getName().orElse(null) + \", phone\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                + editPersonDescriptor.getPhone().orElse(null) + \", email\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                + editPersonDescriptor.getEmail().orElse(null) + \", address\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                + editPersonDescriptor.getAddress().orElse(null) + \", tags\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                + editPersonDescriptor.getTags().orElse(null) + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertEquals(expected, editPersonDescriptor.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"Kailash201":1,"-":69}},{"path":"src/test/java/seedu/address/logic/commands/GroupPersonCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ZD292"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-25"},{"lineNumber":2,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":3,"author":{"gitId":"ZD292"},"content":"public class GroupPersonCommandTest {","lastModifiedDate":"2023-10-25"},{"lineNumber":4,"author":{"gitId":"ZD292"},"content":"}","lastModifiedDate":"2023-10-25"}],"authorContributionMap":{"ZD292":4}},{"path":"src/test/java/seedu/address/logic/commands/UngroupPersonCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"coderhuang559"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-19"},{"lineNumber":2,"author":{"gitId":"coderhuang559"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":3,"author":{"gitId":"coderhuang559"},"content":"import javafx.util.Pair;","lastModifiedDate":"2023-10-19"},{"lineNumber":4,"author":{"gitId":"coderhuang559"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-19"},{"lineNumber":5,"author":{"gitId":"coderhuang559"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-19"},{"lineNumber":6,"author":{"gitId":"coderhuang559"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-19"},{"lineNumber":7,"author":{"gitId":"coderhuang559"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-19"},{"lineNumber":8,"author":{"gitId":"coderhuang559"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-10-19"},{"lineNumber":9,"author":{"gitId":"coderhuang559"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-10-19"},{"lineNumber":10,"author":{"gitId":"coderhuang559"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2023-10-19"},{"lineNumber":11,"author":{"gitId":"coderhuang559"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-19"},{"lineNumber":12,"author":{"gitId":"coderhuang559"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":13,"author":{"gitId":"coderhuang559"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2023-10-19"},{"lineNumber":14,"author":{"gitId":"coderhuang559"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-19"},{"lineNumber":15,"author":{"gitId":"coderhuang559"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-10-19"},{"lineNumber":16,"author":{"gitId":"coderhuang559"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-19"},{"lineNumber":17,"author":{"gitId":"coderhuang559"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-10-19"},{"lineNumber":18,"author":{"gitId":"coderhuang559"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2023-10-19"},{"lineNumber":19,"author":{"gitId":"coderhuang559"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2023-10-19"},{"lineNumber":20,"author":{"gitId":"coderhuang559"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":21,"author":{"gitId":"coderhuang559"},"content":"public class UngroupPersonCommandTest {","lastModifiedDate":"2023-10-19"},{"lineNumber":22,"author":{"gitId":"coderhuang559"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-19"},{"lineNumber":23,"author":{"gitId":"coderhuang559"},"content":"    private String PERSONNAME_EXAMPLE \u003d \"Alex Yeoh\";","lastModifiedDate":"2023-10-19"},{"lineNumber":24,"author":{"gitId":"coderhuang559"},"content":"    private String PERSONNAME_BERNICE_EXAMPLE \u003d \"Bernice Yu\";","lastModifiedDate":"2023-10-19"},{"lineNumber":25,"author":{"gitId":"coderhuang559"},"content":"    private String GROUPNAME_EXAMPLE \u003d \"CS2103T\";","lastModifiedDate":"2023-10-19"},{"lineNumber":26,"author":{"gitId":"coderhuang559"},"content":"    private String GROUPNAME_ST2334_EXAMPLE \u003d \"ST2334\";","lastModifiedDate":"2023-10-19"},{"lineNumber":27,"author":{"gitId":"coderhuang559"},"content":"    private String PERSONNAME_INCOMPLETE_EXAMPLE \u003d \"Alex\";","lastModifiedDate":"2023-10-19"},{"lineNumber":28,"author":{"gitId":"coderhuang559"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":29,"author":{"gitId":"coderhuang559"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":30,"author":{"gitId":"coderhuang559"},"content":"    public void validName_validGroup_success() throws CommandException {","lastModifiedDate":"2023-10-19"},{"lineNumber":31,"author":{"gitId":"coderhuang559"},"content":"        Pair\u003cPerson, Group\u003e pairToUngroup \u003d model.ungroupPerson(PERSONNAME_EXAMPLE, GROUPNAME_EXAMPLE);","lastModifiedDate":"2023-10-19"},{"lineNumber":32,"author":{"gitId":"coderhuang559"},"content":"        Person personToUngroup \u003d pairToUngroup.getKey();","lastModifiedDate":"2023-10-19"},{"lineNumber":33,"author":{"gitId":"coderhuang559"},"content":"        Group groupToUngroup \u003d pairToUngroup.getValue();","lastModifiedDate":"2023-10-19"},{"lineNumber":34,"author":{"gitId":"coderhuang559"},"content":"        String expectedMessage \u003d String.format(UngroupPersonCommand.MESSAGE_SUCCESS,","lastModifiedDate":"2023-10-19"},{"lineNumber":35,"author":{"gitId":"coderhuang559"},"content":"                personToUngroup.getName().fullName);","lastModifiedDate":"2023-10-19"},{"lineNumber":36,"author":{"gitId":"coderhuang559"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-19"},{"lineNumber":37,"author":{"gitId":"coderhuang559"},"content":"        expectedModel.ungroupPerson(personToUngroup.getName().fullName, groupToUngroup.getGroupName());","lastModifiedDate":"2023-10-19"},{"lineNumber":38,"author":{"gitId":"coderhuang559"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":39,"author":{"gitId":"coderhuang559"},"content":"        UngroupPersonCommand ungroupPersonCommand \u003d new UngroupPersonCommand(PERSONNAME_EXAMPLE, GROUPNAME_EXAMPLE);","lastModifiedDate":"2023-10-19"},{"lineNumber":40,"author":{"gitId":"coderhuang559"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":41,"author":{"gitId":"coderhuang559"},"content":"        assertCommandSuccess(ungroupPersonCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-19"},{"lineNumber":42,"author":{"gitId":"coderhuang559"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":43,"author":{"gitId":"coderhuang559"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":44,"author":{"gitId":"coderhuang559"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":45,"author":{"gitId":"coderhuang559"},"content":"    public void invalidName_throwsCommandException() throws CommandException {","lastModifiedDate":"2023-10-19"},{"lineNumber":46,"author":{"gitId":"coderhuang559"},"content":"//        Pair\u003cPerson, Group\u003e pairToUngroup \u003d model.ungroupPerson(PERSONNAME_INCOMPLETE_EXAMPLE, GROUPNAME_EXAMPLE);","lastModifiedDate":"2023-10-19"},{"lineNumber":47,"author":{"gitId":"coderhuang559"},"content":"//        Person personToUngroup \u003d pairToUngroup.getKey();","lastModifiedDate":"2023-10-19"},{"lineNumber":48,"author":{"gitId":"coderhuang559"},"content":"//        Group groupToUngroup \u003d pairToUngroup.getValue();","lastModifiedDate":"2023-10-19"},{"lineNumber":49,"author":{"gitId":"coderhuang559"},"content":"        UngroupPersonCommand ungroupPersonCommand \u003d new UngroupPersonCommand(PERSONNAME_INCOMPLETE_EXAMPLE, GROUPNAME_EXAMPLE);","lastModifiedDate":"2023-10-19"},{"lineNumber":50,"author":{"gitId":"coderhuang559"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":51,"author":{"gitId":"coderhuang559"},"content":"        assertCommandFailure(ungroupPersonCommand, model, UngroupPersonCommand.MESSAGE_NO_PERSON_WITH_NAME_FOUND);","lastModifiedDate":"2023-10-19"},{"lineNumber":52,"author":{"gitId":"coderhuang559"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":53,"author":{"gitId":"coderhuang559"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":54,"author":{"gitId":"coderhuang559"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":55,"author":{"gitId":"coderhuang559"},"content":"    public void equals() {","lastModifiedDate":"2023-10-19"},{"lineNumber":56,"author":{"gitId":"coderhuang559"},"content":"        UngroupPersonCommand ungroupPersonFirstCommand \u003d new UngroupPersonCommand(PERSONNAME_EXAMPLE, GROUPNAME_EXAMPLE);","lastModifiedDate":"2023-10-19"},{"lineNumber":57,"author":{"gitId":"coderhuang559"},"content":"        UngroupPersonCommand ungroupPersonSecondCommand \u003d new UngroupPersonCommand(PERSONNAME_BERNICE_EXAMPLE, GROUPNAME_EXAMPLE);","lastModifiedDate":"2023-10-19"},{"lineNumber":58,"author":{"gitId":"coderhuang559"},"content":"        UngroupPersonCommand ungroupPersonThirdCommand \u003d new UngroupPersonCommand(PERSONNAME_EXAMPLE, GROUPNAME_ST2334_EXAMPLE);","lastModifiedDate":"2023-10-19"},{"lineNumber":59,"author":{"gitId":"coderhuang559"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":60,"author":{"gitId":"coderhuang559"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":61,"author":{"gitId":"coderhuang559"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-19"},{"lineNumber":62,"author":{"gitId":"coderhuang559"},"content":"        assertTrue(ungroupPersonFirstCommand.equals(ungroupPersonFirstCommand));","lastModifiedDate":"2023-10-19"},{"lineNumber":63,"author":{"gitId":"coderhuang559"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":64,"author":{"gitId":"coderhuang559"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-19"},{"lineNumber":65,"author":{"gitId":"coderhuang559"},"content":"        UngroupPersonCommand ungroupPersonFirstCommandCopy \u003d new UngroupPersonCommand(PERSONNAME_EXAMPLE, GROUPNAME_EXAMPLE);","lastModifiedDate":"2023-10-19"},{"lineNumber":66,"author":{"gitId":"coderhuang559"},"content":"        assertTrue(ungroupPersonFirstCommand.equals(ungroupPersonFirstCommandCopy));","lastModifiedDate":"2023-10-19"},{"lineNumber":67,"author":{"gitId":"coderhuang559"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":68,"author":{"gitId":"coderhuang559"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-19"},{"lineNumber":69,"author":{"gitId":"coderhuang559"},"content":"        assertFalse(ungroupPersonFirstCommand.equals(1));","lastModifiedDate":"2023-10-19"},{"lineNumber":70,"author":{"gitId":"coderhuang559"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":71,"author":{"gitId":"coderhuang559"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-19"},{"lineNumber":72,"author":{"gitId":"coderhuang559"},"content":"        assertFalse(ungroupPersonFirstCommand.equals(null));","lastModifiedDate":"2023-10-19"},{"lineNumber":73,"author":{"gitId":"coderhuang559"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":74,"author":{"gitId":"coderhuang559"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2023-10-19"},{"lineNumber":75,"author":{"gitId":"coderhuang559"},"content":"        assertFalse(ungroupPersonFirstCommand.equals(ungroupPersonSecondCommand));","lastModifiedDate":"2023-10-19"},{"lineNumber":76,"author":{"gitId":"coderhuang559"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":77,"author":{"gitId":"coderhuang559"},"content":"        // different group -\u003e returns false","lastModifiedDate":"2023-10-19"},{"lineNumber":78,"author":{"gitId":"coderhuang559"},"content":"        assertFalse(ungroupPersonFirstCommand.equals(ungroupPersonThirdCommand));","lastModifiedDate":"2023-10-19"},{"lineNumber":79,"author":{"gitId":"coderhuang559"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":80,"author":{"gitId":"coderhuang559"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":81,"author":{"gitId":"coderhuang559"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":82,"author":{"gitId":"coderhuang559"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-19"},{"lineNumber":83,"author":{"gitId":"coderhuang559"},"content":"        UngroupPersonCommand ungroupPersonCommand \u003d new UngroupPersonCommand(PERSONNAME_EXAMPLE, GROUPNAME_EXAMPLE);","lastModifiedDate":"2023-10-19"},{"lineNumber":84,"author":{"gitId":"coderhuang559"},"content":"        String expected \u003d UngroupPersonCommand.class.getCanonicalName() +","lastModifiedDate":"2023-10-19"},{"lineNumber":85,"author":{"gitId":"coderhuang559"},"content":"                \"{personName\u003d\" + PERSONNAME_EXAMPLE + \", \" +","lastModifiedDate":"2023-10-19"},{"lineNumber":86,"author":{"gitId":"coderhuang559"},"content":"                \"groupName\u003d\" + GROUPNAME_EXAMPLE + \"}\";","lastModifiedDate":"2023-10-19"},{"lineNumber":87,"author":{"gitId":"coderhuang559"},"content":"        assertEquals(expected, ungroupPersonCommand.toString());","lastModifiedDate":"2023-10-19"},{"lineNumber":88,"author":{"gitId":"coderhuang559"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":89,"author":{"gitId":"coderhuang559"},"content":"}","lastModifiedDate":"2023-10-19"}],"authorContributionMap":{"coderhuang559":89}},{"path":"src/test/java/seedu/address/logic/parser/AddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"Kailash201"},"content":"import static seedu.address.logic.commands.CommandTestUtil.GROUP_DESC_AMY;","lastModifiedDate":"2023-10-22"},{"lineNumber":7,"author":{"gitId":"Kailash201"},"content":"import static seedu.address.logic.commands.CommandTestUtil.GROUP_DESC_BOB;","lastModifiedDate":"2023-10-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"Kailash201"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_GROUP_DESC;","lastModifiedDate":"2023-10-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2017-12-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2017-12-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":21,"author":{"gitId":"Kailash201"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_GROUP_AMY;","lastModifiedDate":"2023-10-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-07-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-07-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-07-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-07-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-07-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-07-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-15"},{"lineNumber":37,"author":{"gitId":"Kailash201"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2023-10-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-06-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-06-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-06-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-06-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"public class AddCommandParserTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private AddCommandParser parser \u003d new AddCommandParser();","lastModifiedDate":"2017-06-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":51,"author":{"gitId":"Kailash201"},"content":"        Person expectedPerson \u003d new PersonBuilder(BOB).build();","lastModifiedDate":"2023-10-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":54,"author":{"gitId":"Kailash201"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB +","lastModifiedDate":"2023-10-22"},{"lineNumber":55,"author":{"gitId":"Kailash201"},"content":"                 GROUP_DESC_BOB, new AddCommand(expectedPerson));","lastModifiedDate":"2023-10-22"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":59,"author":{"gitId":"Kailash201"},"content":"        Person expectedPersonMultipleTags \u003d new PersonBuilder(BOB)","lastModifiedDate":"2023-10-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-07-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser,","lastModifiedDate":"2023-07-14"},{"lineNumber":62,"author":{"gitId":"Kailash201"},"content":"                NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + GROUP_DESC_BOB,","lastModifiedDate":"2023-10-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                new AddCommand(expectedPersonMultipleTags));","lastModifiedDate":"2023-07-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-07-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void parse_repeatedNonTagValue_failure() {","lastModifiedDate":"2023-07-14"},{"lineNumber":68,"author":{"gitId":"Kailash201"},"content":"        String validExpectedPersonString \u003d NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB;","lastModifiedDate":"2023-10-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // multiple names","lastModifiedDate":"2023-07-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2023-07-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // multiple phones","lastModifiedDate":"2023-07-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, PHONE_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // multiple emails","lastModifiedDate":"2023-07-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, EMAIL_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_EMAIL));","lastModifiedDate":"2023-07-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        // multiple fields repeated","lastModifiedDate":"2023-07-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2023-07-14"},{"lineNumber":85,"author":{"gitId":"Kailash201"},"content":"                validExpectedPersonString + PHONE_DESC_AMY + EMAIL_DESC_AMY + NAME_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-10-22"},{"lineNumber":86,"author":{"gitId":"Kailash201"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME, PREFIX_EMAIL, PREFIX_PHONE));","lastModifiedDate":"2023-10-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        // invalid value followed by valid value","lastModifiedDate":"2023-07-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2023-07-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2023-07-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2023-07-14"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_EMAIL_DESC + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_EMAIL));","lastModifiedDate":"2023-07-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2023-07-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_PHONE_DESC + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // valid value followed by invalid value","lastModifiedDate":"2023-07-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2023-07-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_NAME_DESC,","lastModifiedDate":"2023-07-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2023-07-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2023-07-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_EMAIL_DESC,","lastModifiedDate":"2023-07-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_EMAIL));","lastModifiedDate":"2023-07-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2023-07-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_PHONE_DESC,","lastModifiedDate":"2023-07-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // zero tags","lastModifiedDate":"2017-06-15"},{"lineNumber":122,"author":{"gitId":"Kailash201"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).build();","lastModifiedDate":"2023-10-22"},{"lineNumber":123,"author":{"gitId":"Kailash201"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY + GROUP_DESC_AMY,","lastModifiedDate":"2023-10-22"},{"lineNumber":124,"author":{"gitId":"-"},"content":"                new AddCommand(expectedPerson));","lastModifiedDate":"2017-12-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-06-15"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":132,"author":{"gitId":"Kailash201"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + GROUP_DESC_BOB,","lastModifiedDate":"2023-10-22"},{"lineNumber":133,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        // missing phone prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":136,"author":{"gitId":"Kailash201"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + VALID_PHONE_BOB + EMAIL_DESC_BOB + GROUP_DESC_BOB,","lastModifiedDate":"2023-10-22"},{"lineNumber":137,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        // missing email prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":140,"author":{"gitId":"Kailash201"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + VALID_EMAIL_BOB + GROUP_DESC_BOB,","lastModifiedDate":"2023-10-22"},{"lineNumber":141,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + VALID_PHONE_BOB + VALID_EMAIL_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":151,"author":{"gitId":"Kailash201"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + GROUP_DESC_BOB,","lastModifiedDate":"2023-10-22"},{"lineNumber":152,"author":{"gitId":"Kailash201"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-22"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2017-06-15"},{"lineNumber":155,"author":{"gitId":"Kailash201"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + INVALID_PHONE_DESC + EMAIL_DESC_BOB + GROUP_DESC_BOB,","lastModifiedDate":"2023-10-22"},{"lineNumber":156,"author":{"gitId":"Kailash201"},"content":"                Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-22"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2017-06-15"},{"lineNumber":159,"author":{"gitId":"Kailash201"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + INVALID_EMAIL_DESC + GROUP_DESC_BOB,","lastModifiedDate":"2023-10-22"},{"lineNumber":160,"author":{"gitId":"Kailash201"},"content":"                Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-22"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2017-06-15"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":164,"author":{"gitId":"Kailash201"},"content":"        // invalid group","lastModifiedDate":"2023-10-22"},{"lineNumber":165,"author":{"gitId":"Kailash201"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_GROUP_DESC,","lastModifiedDate":"2023-10-22"},{"lineNumber":166,"author":{"gitId":"Kailash201"},"content":"                Group.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-22"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":169,"author":{"gitId":"Kailash201"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_GROUP_DESC,","lastModifiedDate":"2023-10-22"},{"lineNumber":170,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":173,"author":{"gitId":"Kailash201"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB,","lastModifiedDate":"2023-10-22"},{"lineNumber":174,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-12-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":176,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"Kailash201":29,"-":147}},{"path":"src/test/java/seedu/address/logic/parser/AddressBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-06-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-06-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonUtil;","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"public class AddressBookParserTest {","lastModifiedDate":"2017-07-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final AddressBookParser parser \u003d new AddressBookParser();","lastModifiedDate":"2017-07-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(PersonUtil.getAddCommand(person));","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertEquals(new AddCommand(person), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"Kailash201"},"content":"    //Need to be deleted","lastModifiedDate":"2023-10-22"},{"lineNumber":50,"author":{"gitId":"Kailash201"},"content":"//    @Test","lastModifiedDate":"2023-10-22"},{"lineNumber":51,"author":{"gitId":"Kailash201"},"content":"//    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2023-10-22"},{"lineNumber":52,"author":{"gitId":"Kailash201"},"content":"//        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2023-10-22"},{"lineNumber":53,"author":{"gitId":"Kailash201"},"content":"//                DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2023-10-22"},{"lineNumber":54,"author":{"gitId":"Kailash201"},"content":"//       assertEquals(new DeleteCommand(INDEX_FIRST_PERSON), command);","lastModifiedDate":"2023-10-22"},{"lineNumber":55,"author":{"gitId":"Kailash201"},"content":"//    }","lastModifiedDate":"2023-10-22"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(person).build();","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                + INDEX_FIRST_PERSON.getOneBased() + \" \" + PersonUtil.getEditPersonDescriptorDetails(descriptor));","lastModifiedDate":"2018-03-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertEquals(new EditCommand(INDEX_FIRST_PERSON, descriptor), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":74,"author":{"gitId":"ZD292"},"content":"        List\u003cjava.lang.String\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2023-10-10"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                FindCommand.COMMAND_WORD + \" \" + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2017-06-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertEquals(new FindCommand(new NameContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2017-06-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":94,"author":{"gitId":"ZD292"},"content":"        assertThrows(ParseException.class, java.lang.String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2023-10-10"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"Kailash201":7,"ZD292":2,"-":93}},{"path":"src/test/java/seedu/address/logic/parser/DeleteCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-06-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2017-06-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * outside of the DeleteCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2017-06-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * same path through the DeleteCommand, and therefore we test only one of them.","lastModifiedDate":"2017-06-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2017-06-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2017-06-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class DeleteCommandParserTest {","lastModifiedDate":"2017-06-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private DeleteCommandParser parser \u003d new DeleteCommandParser();","lastModifiedDate":"2017-06-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":23,"author":{"gitId":"Kailash201"},"content":"    //need to be deleted","lastModifiedDate":"2023-10-22"},{"lineNumber":24,"author":{"gitId":"Kailash201"},"content":"//    @Test","lastModifiedDate":"2023-10-22"},{"lineNumber":25,"author":{"gitId":"Kailash201"},"content":"//    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2023-10-22"},{"lineNumber":26,"author":{"gitId":"Kailash201"},"content":"//        assertParseSuccess(parser, \"1\", new DeleteCommand(INDEX_FIRST_PERSON));","lastModifiedDate":"2023-10-22"},{"lineNumber":27,"author":{"gitId":"Kailash201"},"content":"//    }","lastModifiedDate":"2023-10-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-07-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"Kailash201":5,"-":28}},{"path":"src/test/java/seedu/address/logic/parser/EditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-07-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-07-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-07-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-05-04"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-05-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-05-04"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-05-04"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"public class EditCommandParserTest {","lastModifiedDate":"2017-05-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":42,"author":{"gitId":"Kailash201"},"content":"    private static final String TAG_EMPTY \u003d \" \";","lastModifiedDate":"2023-10-22"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-05-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private EditCommandParser parser \u003d new EditCommandParser();","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\", EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-07-06"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2017-06-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2017-05-04"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2017-06-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2018-09-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2018-09-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2018-09-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_ADDRESS_DESC, Address.MESSAGE_CONSTRAINTS); // invalid address","lastModifiedDate":"2018-09-22"},{"lineNumber":82,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // invalid phone followed by valid email","lastModifiedDate":"2017-05-04"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC + EMAIL_DESC_AMY, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code Person} being edited,","lastModifiedDate":"2017-05-04"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        // parsing it together with a valid tag results in error","lastModifiedDate":"2017-05-04"},{"lineNumber":89,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2017-05-04"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC + INVALID_EMAIL_DESC + VALID_ADDRESS_AMY + VALID_PHONE_AMY,","lastModifiedDate":"2017-07-06"},{"lineNumber":93,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":99,"author":{"gitId":"Kailash201"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB","lastModifiedDate":"2023-10-22"},{"lineNumber":100,"author":{"gitId":"Kailash201"},"content":"                + EMAIL_DESC_AMY  + NAME_DESC_AMY;","lastModifiedDate":"2023-10-22"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":103,"author":{"gitId":"Kailash201"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY).build();","lastModifiedDate":"2023-10-22"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":115,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        // name","lastModifiedDate":"2017-05-04"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        // phone","lastModifiedDate":"2017-05-04"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        // email","lastModifiedDate":"2017-05-04"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        // address","lastModifiedDate":"2017-05-04"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        // tags","lastModifiedDate":"2017-05-04"},{"lineNumber":145,"author":{"gitId":"Kailash201"},"content":"//        userInput \u003d targetIndex.getOneBased() + TAG_DESC_FRIEND;","lastModifiedDate":"2023-10-22"},{"lineNumber":146,"author":{"gitId":"Kailash201"},"content":"//        descriptor \u003d new EditPersonDescriptorBuilder().withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2023-10-22"},{"lineNumber":147,"author":{"gitId":"Kailash201"},"content":"//        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2023-10-22"},{"lineNumber":148,"author":{"gitId":"Kailash201"},"content":"//        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-10-22"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_failure() {","lastModifiedDate":"2023-07-14"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        // More extensive testing of duplicate parameter detections is done in","lastModifiedDate":"2023-07-14"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        // AddCommandParserTest#parse_repeatedNonTagValue_failure()","lastModifiedDate":"2023-07-14"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        // valid followed by invalid","lastModifiedDate":"2023-07-14"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2023-07-14"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput, Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        // invalid followed by valid","lastModifiedDate":"2023-07-14"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + INVALID_PHONE_DESC;","lastModifiedDate":"2023-07-14"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput, Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        // mulltiple valid fields repeated","lastModifiedDate":"2023-07-14"},{"lineNumber":168,"author":{"gitId":"Kailash201"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2023-10-22"},{"lineNumber":169,"author":{"gitId":"Kailash201"},"content":"                + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2023-10-22"},{"lineNumber":170,"author":{"gitId":"Kailash201"},"content":"                + PHONE_DESC_BOB + EMAIL_DESC_BOB;","lastModifiedDate":"2023-10-22"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput,","lastModifiedDate":"2023-07-14"},{"lineNumber":173,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS));","lastModifiedDate":"2023-07-14"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        // multiple invalid values","lastModifiedDate":"2023-07-14"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + INVALID_ADDRESS_DESC + INVALID_EMAIL_DESC","lastModifiedDate":"2023-07-14"},{"lineNumber":177,"author":{"gitId":"-"},"content":"                + INVALID_PHONE_DESC + INVALID_ADDRESS_DESC + INVALID_EMAIL_DESC;","lastModifiedDate":"2023-07-14"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput,","lastModifiedDate":"2023-07-14"},{"lineNumber":180,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS));","lastModifiedDate":"2023-07-14"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    public void parse_resetTags_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + TAG_EMPTY;","lastModifiedDate":"2017-05-25"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withTags().build();","lastModifiedDate":"2017-05-04"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"Kailash201":13,"-":180}},{"path":"src/test/java/seedu/address/logic/parser/FindCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-10-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class FindCommandParserTest {","lastModifiedDate":"2017-06-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private FindCommandParser parser \u003d new FindCommandParser();","lastModifiedDate":"2017-06-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"ZD292"},"content":"        assertParseFailure(parser, \"     \", java.lang.String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsFindCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2017-06-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        FindCommand expectedFindCommand \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                new FindCommand(new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\")));","lastModifiedDate":"2023-10-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \"Alice Bob\", expectedFindCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \" \\n Alice \\n \\t Bob  \\t\", expectedFindCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-27"}],"authorContributionMap":{"ZD292":1,"-":33}},{"path":"src/test/java/seedu/address/logic/parser/UngroupPersonCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"coderhuang559"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-19"},{"lineNumber":2,"author":{"gitId":"coderhuang559"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":3,"author":{"gitId":"coderhuang559"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-19"},{"lineNumber":4,"author":{"gitId":"coderhuang559"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2023-10-19"},{"lineNumber":5,"author":{"gitId":"coderhuang559"},"content":"import seedu.address.logic.commands.UngroupPersonCommand;","lastModifiedDate":"2023-10-19"},{"lineNumber":6,"author":{"gitId":"coderhuang559"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-19"},{"lineNumber":7,"author":{"gitId":"coderhuang559"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":8,"author":{"gitId":"coderhuang559"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-19"},{"lineNumber":9,"author":{"gitId":"coderhuang559"},"content":"import static seedu.address.logic.commands.CommandTestUtil.*;","lastModifiedDate":"2023-10-19"},{"lineNumber":10,"author":{"gitId":"coderhuang559"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GROUPTAG;","lastModifiedDate":"2023-10-19"},{"lineNumber":11,"author":{"gitId":"coderhuang559"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-19"},{"lineNumber":12,"author":{"gitId":"coderhuang559"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-10-19"},{"lineNumber":13,"author":{"gitId":"coderhuang559"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-10-19"},{"lineNumber":14,"author":{"gitId":"coderhuang559"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":15,"author":{"gitId":"coderhuang559"},"content":"public class UngroupPersonCommandParserTest {","lastModifiedDate":"2023-10-19"},{"lineNumber":16,"author":{"gitId":"coderhuang559"},"content":"    private String PERSON_NAME_BOB \u003d \"Bob Lee\";","lastModifiedDate":"2023-10-19"},{"lineNumber":17,"author":{"gitId":"coderhuang559"},"content":"    private String GROUP_NAME_CS2100 \u003d \"CS2100\";","lastModifiedDate":"2023-10-19"},{"lineNumber":18,"author":{"gitId":"coderhuang559"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":19,"author":{"gitId":"coderhuang559"},"content":"    private String PERSON_NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + PERSON_NAME_BOB;","lastModifiedDate":"2023-10-19"},{"lineNumber":20,"author":{"gitId":"coderhuang559"},"content":"    private String GROUP_NAME_DESC_CS2100 \u003d \" \" + PREFIX_GROUPTAG + GROUP_NAME_CS2100;","lastModifiedDate":"2023-10-19"},{"lineNumber":21,"author":{"gitId":"coderhuang559"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":22,"author":{"gitId":"coderhuang559"},"content":"    private UngroupPersonCommandParser parser \u003d new UngroupPersonCommandParser();","lastModifiedDate":"2023-10-19"},{"lineNumber":23,"author":{"gitId":"coderhuang559"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":24,"author":{"gitId":"coderhuang559"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2023-10-19"},{"lineNumber":25,"author":{"gitId":"coderhuang559"},"content":"        assertParseSuccess(parser,PERSON_NAME_DESC_BOB + GROUP_NAME_DESC_CS2100,","lastModifiedDate":"2023-10-19"},{"lineNumber":26,"author":{"gitId":"coderhuang559"},"content":"                new UngroupPersonCommand(PERSON_NAME_BOB, GROUP_NAME_CS2100));","lastModifiedDate":"2023-10-19"},{"lineNumber":27,"author":{"gitId":"coderhuang559"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":28,"author":{"gitId":"coderhuang559"},"content":"        // empty preamble","lastModifiedDate":"2023-10-19"},{"lineNumber":29,"author":{"gitId":"coderhuang559"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + PERSON_NAME_DESC_BOB + GROUP_NAME_DESC_CS2100,","lastModifiedDate":"2023-10-19"},{"lineNumber":30,"author":{"gitId":"coderhuang559"},"content":"                new UngroupPersonCommand(PERSON_NAME_BOB, GROUP_NAME_CS2100));","lastModifiedDate":"2023-10-19"},{"lineNumber":31,"author":{"gitId":"coderhuang559"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":32,"author":{"gitId":"coderhuang559"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":33,"author":{"gitId":"coderhuang559"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":34,"author":{"gitId":"coderhuang559"},"content":"    public void parse_personNameMissing_failure() {","lastModifiedDate":"2023-10-19"},{"lineNumber":35,"author":{"gitId":"coderhuang559"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, UngroupPersonCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-10-19"},{"lineNumber":36,"author":{"gitId":"coderhuang559"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":37,"author":{"gitId":"coderhuang559"},"content":"        // missing person name prefix","lastModifiedDate":"2023-10-19"},{"lineNumber":38,"author":{"gitId":"coderhuang559"},"content":"        assertParseFailure(parser, PERSON_NAME_BOB + GROUP_NAME_DESC_CS2100, expectedMessage);","lastModifiedDate":"2023-10-19"},{"lineNumber":39,"author":{"gitId":"coderhuang559"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":40,"author":{"gitId":"coderhuang559"},"content":"        // missing group name prefix","lastModifiedDate":"2023-10-19"},{"lineNumber":41,"author":{"gitId":"coderhuang559"},"content":"        assertParseFailure(parser, PERSON_NAME_DESC_BOB + GROUP_NAME_CS2100, expectedMessage);","lastModifiedDate":"2023-10-19"},{"lineNumber":42,"author":{"gitId":"coderhuang559"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":43,"author":{"gitId":"coderhuang559"},"content":"        // missing both prefixes","lastModifiedDate":"2023-10-19"},{"lineNumber":44,"author":{"gitId":"coderhuang559"},"content":"        assertParseFailure(parser, PERSON_NAME_BOB + GROUP_NAME_CS2100, expectedMessage);","lastModifiedDate":"2023-10-19"},{"lineNumber":45,"author":{"gitId":"coderhuang559"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":46,"author":{"gitId":"coderhuang559"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":47,"author":{"gitId":"coderhuang559"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":48,"author":{"gitId":"coderhuang559"},"content":"    public void parse_nonEmptyPreamble_failure() {","lastModifiedDate":"2023-10-19"},{"lineNumber":49,"author":{"gitId":"coderhuang559"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, UngroupPersonCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-10-19"},{"lineNumber":50,"author":{"gitId":"coderhuang559"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":51,"author":{"gitId":"coderhuang559"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + PERSON_NAME_DESC_BOB + GROUP_NAME_DESC_CS2100,","lastModifiedDate":"2023-10-19"},{"lineNumber":52,"author":{"gitId":"coderhuang559"},"content":"                expectedMessage);","lastModifiedDate":"2023-10-19"},{"lineNumber":53,"author":{"gitId":"coderhuang559"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":54,"author":{"gitId":"coderhuang559"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":55,"author":{"gitId":"coderhuang559"},"content":"}","lastModifiedDate":"2023-10-19"}],"authorContributionMap":{"coderhuang559":55}},{"path":"src/test/java/seedu/address/model/AddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-12-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":20,"author":{"gitId":"Kailash201"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2023-10-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2018-08-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-04-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class AddressBookTest {","lastModifiedDate":"2016-12-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), addressBook.getPersonList());","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.resetData(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void resetData_withValidReadOnlyAddressBook_replacesData() {","lastModifiedDate":"2016-12-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        AddressBook newData \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        addressBook.resetData(newData);","lastModifiedDate":"2016-12-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(newData, addressBook);","lastModifiedDate":"2016-12-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void resetData_withDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // Two persons with the same identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":49,"author":{"gitId":"Kailash201"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2023-10-22"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-04-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e newPersons \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        AddressBookStub newData \u003d new AddressBookStub(newPersons);","lastModifiedDate":"2018-03-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e addressBook.resetData(newData));","lastModifiedDate":"2019-03-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":59,"author":{"gitId":"Kailash201"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.hasPerson((Person) null));","lastModifiedDate":"2023-10-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertFalse(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void hasPerson_personWithSameIdentityFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"Kailash201"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2023-10-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(editedAlice));","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void getPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e addressBook.getPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        String expected \u003d AddressBook.class.getCanonicalName() + \"{persons\u003d\" + addressBook.getPersonList() + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertEquals(expected, addressBook.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * A stub ReadOnlyAddressBook whose persons list can violate interface constraints.","lastModifiedDate":"2018-03-29"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    private static class AddressBookStub implements ReadOnlyAddressBook {","lastModifiedDate":"2016-12-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        private final ObservableList\u003cPerson\u003e persons \u003d FXCollections.observableArrayList();","lastModifiedDate":"2018-01-10"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        AddressBookStub(Collection\u003cPerson\u003e persons) {","lastModifiedDate":"2018-03-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            this.persons.setAll(persons);","lastModifiedDate":"2016-12-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            return persons;","lastModifiedDate":"2016-12-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":106,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":107,"author":{"gitId":"Kailash201"},"content":"        //need to be edited","lastModifiedDate":"2023-10-22"},{"lineNumber":108,"author":{"gitId":"Kailash201"},"content":"        @Override","lastModifiedDate":"2023-10-22"},{"lineNumber":109,"author":{"gitId":"Kailash201"},"content":"        public ObservableList\u003cGroup\u003e getGroupList() {","lastModifiedDate":"2023-10-22"},{"lineNumber":110,"author":{"gitId":"Kailash201"},"content":"            return getGroupList();","lastModifiedDate":"2023-10-22"},{"lineNumber":111,"author":{"gitId":"Kailash201"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"Kailash201":10,"-":104}},{"path":"src/test/java/seedu/address/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2017-05-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-10-22"},{"lineNumber":19,"author":{"gitId":"Kailash201"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.testutil.AddressBookBuilder;","lastModifiedDate":"2017-05-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(new AddressBook(), new AddressBook(modelManager.getAddressBook()));","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2018-12-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setAddressBookFilePath(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_validPath_setsAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        modelManager.setAddressBookFilePath(path);","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertEquals(path, modelManager.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"Kailash201"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasPerson((Person) null));","lastModifiedDate":"2023-10-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        modelManager.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBookBuilder().withPerson(ALICE).withPerson(BENSON).build();","lastModifiedDate":"2017-07-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        AddressBook differentAddressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        modelManager \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2018-08-06"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2017-05-31"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        // different addressBook -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentAddressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":121,"author":{"gitId":"ZD292"},"content":"        java.lang.String[] keywords \u003d ALICE.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2023-10-10"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2023-10-22"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        differentUserPrefs.setAddressBookFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2018-08-09"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, differentUserPrefs)));","lastModifiedDate":"2018-11-27"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":133,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"Kailash201":2,"ZD292":1,"-":130}},{"path":"src/test/java/seedu/address/model/person/PersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2018-03-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":8,"author":{"gitId":"Kailash201"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_GROUP_BOB;","lastModifiedDate":"2023-10-22"},{"lineNumber":9,"author":{"gitId":"Kailash201"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2023-10-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-04-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-03-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class PersonTest {","lastModifiedDate":"2018-03-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":21,"author":{"gitId":"Kailash201"},"content":"//    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":22,"author":{"gitId":"Kailash201"},"content":"//    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-10-19"},{"lineNumber":23,"author":{"gitId":"Kailash201"},"content":"//        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2023-10-19"},{"lineNumber":24,"author":{"gitId":"Kailash201"},"content":"//        assertThrows(UnsupportedOperationException.class, () -\u003e person.getTags().remove(0));","lastModifiedDate":"2023-10-19"},{"lineNumber":25,"author":{"gitId":"Kailash201"},"content":"//    }","lastModifiedDate":"2023-10-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void isSamePerson() {","lastModifiedDate":"2018-04-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":35,"author":{"gitId":"Kailash201"},"content":"        //Need to be edited, isSamePerson now checks name phone and email","lastModifiedDate":"2023-10-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2020-12-18"},{"lineNumber":37,"author":{"gitId":"Kailash201"},"content":"//        Person editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2023-10-22"},{"lineNumber":38,"author":{"gitId":"Kailash201"},"content":"//        assertTrue(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2023-10-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":41,"author":{"gitId":"Kailash201"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2023-10-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":45,"author":{"gitId":"Kailash201"},"content":"        Person editedBob \u003d new PersonBuilder(BOB).withName(VALID_NAME_AMY.toLowerCase()).build();","lastModifiedDate":"2023-10-22"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2020-12-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_BOB + \" \";","lastModifiedDate":"2020-12-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        editedBob \u003d new PersonBuilder(BOB).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2020-12-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-04-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        Person aliceCopy \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2018-04-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"Kailash201"},"content":"        // different groups -\u003e returns false","lastModifiedDate":"2023-10-22"},{"lineNumber":85,"author":{"gitId":"Kailash201"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withGroupList(VALID_GROUP_BOB).build();","lastModifiedDate":"2023-10-22"},{"lineNumber":86,"author":{"gitId":"Kailash201"},"content":"        System.out.println(ALICE);","lastModifiedDate":"2023-10-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        String expected \u003d Person.class.getCanonicalName() + \"{name\u003d\" + ALICE.getName() + \", phone\u003d\" + ALICE.getPhone()","lastModifiedDate":"2019-02-23"},{"lineNumber":93,"author":{"gitId":"Kailash201"},"content":"                + \", email\u003d\" + ALICE.getEmail() + \"}\";","lastModifiedDate":"2023-10-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertEquals(expected, ALICE.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"Kailash201":16,"-":80}},{"path":"src/test/java/seedu/address/model/person/UniquePersonListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2018-08-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2018-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2018-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class UniquePersonListTest {","lastModifiedDate":"2017-09-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final UniquePersonList uniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void contains_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.contains(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void contains_personNotInList_returnsFalse() {","lastModifiedDate":"2018-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void contains_personInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void contains_personWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":44,"author":{"gitId":"Kailash201"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2023-10-22"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(editedAlice));","lastModifiedDate":"2018-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void add_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.add(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void add_duplicatePerson_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.add(ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void setPerson_nullTargetPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(null, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void setPerson_nullEditedPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(ALICE, null));","lastModifiedDate":"2019-03-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void setPerson_targetPersonNotInList_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.setPerson(ALICE, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonIsSamePerson_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasSameIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":86,"author":{"gitId":"Kailash201"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2023-10-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasDifferentIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasNonUniqueIdentity_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        uniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPerson(ALICE, BOB));","lastModifiedDate":"2019-03-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void remove_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.remove(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public void remove_personDoesNotExist_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.remove(ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public void remove_existingPerson_removesPerson() {","lastModifiedDate":"2018-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        uniquePersonList.remove(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public void setPersons_nullUniquePersonList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((UniquePersonList) null));","lastModifiedDate":"2019-03-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    public void setPersons_uniquePersonList_replacesOwnListWithProvidedUniquePersonList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(expectedUniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    public void setPersons_nullList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((List\u003cPerson\u003e) null));","lastModifiedDate":"2019-03-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    public void setPersons_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e personList \u003d Collections.singletonList(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(personList);","lastModifiedDate":"2018-08-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    public void setPersons_listWithDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e listWithDuplicatePersons \u003d Arrays.asList(ALICE, ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPersons(listWithDuplicatePersons));","lastModifiedDate":"2019-03-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2018-04-05"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"            -\u003e uniquePersonList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-24"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-24"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-24"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        assertEquals(uniquePersonList.asUnmodifiableObservableList().toString(), uniquePersonList.toString());","lastModifiedDate":"2019-02-24"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-24"},{"lineNumber":173,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"Kailash201":2,"-":171}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedPersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.storage.JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class JsonAdaptedPersonTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":25,"author":{"gitId":"Kailash201"},"content":"    private static final String INVALID_GROUP \u003d \" \";","lastModifiedDate":"2023-10-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":31,"author":{"gitId":"Kailash201"},"content":"    private static final List\u003cJsonAdaptedGroup\u003e VALID_Groups \u003d BENSON.getGroups().toStream()","lastModifiedDate":"2023-10-22"},{"lineNumber":32,"author":{"gitId":"Kailash201"},"content":"            .map(JsonAdaptedGroup::new)","lastModifiedDate":"2023-10-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(BENSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertEquals(BENSON, person.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"Kailash201"},"content":"                new JsonAdaptedPerson(INVALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_Groups);","lastModifiedDate":"2023-10-22"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"Kailash201"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(null, VALID_PHONE, VALID_EMAIL, VALID_Groups);","lastModifiedDate":"2023-10-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"Kailash201"},"content":"                new JsonAdaptedPerson(VALID_NAME, INVALID_PHONE, VALID_EMAIL, VALID_Groups);","lastModifiedDate":"2023-10-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"Kailash201"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, null, VALID_EMAIL, VALID_Groups);","lastModifiedDate":"2023-10-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"Kailash201"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, INVALID_EMAIL,VALID_Groups);","lastModifiedDate":"2023-10-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"Kailash201"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, null, VALID_Groups);","lastModifiedDate":"2023-10-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"Kailash201"},"content":"    public void toModelType_invalidGroups_throwsIllegalValueException() {","lastModifiedDate":"2023-10-22"},{"lineNumber":90,"author":{"gitId":"Kailash201"},"content":"        List\u003cJsonAdaptedGroup\u003e invalidGroups \u003d new ArrayList\u003c\u003e(VALID_Groups);","lastModifiedDate":"2023-10-22"},{"lineNumber":91,"author":{"gitId":"Kailash201"},"content":"        invalidGroups.add(new JsonAdaptedGroup(INVALID_GROUP));","lastModifiedDate":"2023-10-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"Kailash201"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, invalidGroups);","lastModifiedDate":"2023-10-22"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"Kailash201":15,"-":82}},{"path":"src/test/java/seedu/address/testutil/PersonBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"Kailash201"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-12-20"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-04-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":7,"author":{"gitId":"Kailash201"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2023-10-19"},{"lineNumber":8,"author":{"gitId":"Kailash201"},"content":"import seedu.address.model.group.GroupList;","lastModifiedDate":"2023-10-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-01-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-01-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-04-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-01-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-04-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2017-04-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2017-04-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class PersonBuilder {","lastModifiedDate":"2016-09-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2020-12-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_ADDRESS \u003d \"123, Jurong West Ave 6, #08-111\";","lastModifiedDate":"2017-04-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Address address;","lastModifiedDate":"2017-12-20"},{"lineNumber":31,"author":{"gitId":"Kailash201"},"content":"    private GroupList grpList;","lastModifiedDate":"2023-10-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonBuilder} with the default details.","lastModifiedDate":"2020-05-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public PersonBuilder() {","lastModifiedDate":"2017-08-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2017-12-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2017-12-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        address \u003d new Address(DEFAULT_ADDRESS);","lastModifiedDate":"2017-12-20"},{"lineNumber":41,"author":{"gitId":"Kailash201"},"content":"        grpList \u003d new GroupList();","lastModifiedDate":"2023-10-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Initializes the PersonBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2016-12-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public PersonBuilder(Person personToCopy) {","lastModifiedDate":"2018-01-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        name \u003d personToCopy.getName();","lastModifiedDate":"2017-12-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        phone \u003d personToCopy.getPhone();","lastModifiedDate":"2017-12-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        email \u003d personToCopy.getEmail();","lastModifiedDate":"2017-12-20"},{"lineNumber":51,"author":{"gitId":"Kailash201"},"content":"        //address \u003d personToCopy.getAddress();","lastModifiedDate":"2023-10-19"},{"lineNumber":52,"author":{"gitId":"Kailash201"},"content":"        //tags \u003d new HashSet\u003c\u003e(personToCopy.getTags());","lastModifiedDate":"2023-10-19"},{"lineNumber":53,"author":{"gitId":"Kailash201"},"content":"        grpList \u003d personToCopy.getGroups();","lastModifiedDate":"2023-10-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public PersonBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":67,"author":{"gitId":"Kailash201"},"content":"//    public PersonBuilder withTags(String ... tags) {","lastModifiedDate":"2023-10-19"},{"lineNumber":68,"author":{"gitId":"Kailash201"},"content":"//        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2023-10-19"},{"lineNumber":69,"author":{"gitId":"Kailash201"},"content":"//        return this;","lastModifiedDate":"2023-10-19"},{"lineNumber":70,"author":{"gitId":"Kailash201"},"content":"//    }","lastModifiedDate":"2023-10-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public PersonBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        this.address \u003d new Address(address);","lastModifiedDate":"2017-12-20"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public PersonBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2017-12-20"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":88,"author":{"gitId":"Kailash201"},"content":"    public PersonBuilder withGroupList(String ...args) {","lastModifiedDate":"2023-10-19"},{"lineNumber":89,"author":{"gitId":"Kailash201"},"content":"        GroupList gL \u003d new GroupList();","lastModifiedDate":"2023-10-22"},{"lineNumber":90,"author":{"gitId":"Kailash201"},"content":"        Arrays.stream(args).forEach(group -\u003e gL.add(new Group(group)));","lastModifiedDate":"2023-10-22"},{"lineNumber":91,"author":{"gitId":"Kailash201"},"content":"        this.grpList \u003d gL;","lastModifiedDate":"2023-10-22"},{"lineNumber":92,"author":{"gitId":"Kailash201"},"content":"        return this;","lastModifiedDate":"2023-10-19"},{"lineNumber":93,"author":{"gitId":"Kailash201"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":94,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public PersonBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2017-12-20"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public Person build() {","lastModifiedDate":"2017-04-05"},{"lineNumber":104,"author":{"gitId":"Kailash201"},"content":"        return new Person(name, phone, email, grpList);","lastModifiedDate":"2023-10-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"Kailash201":20,"-":87}},{"path":"src/test/java/seedu/address/testutil/PersonUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"Kailash201"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GROUPTAG;","lastModifiedDate":"2023-10-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-03-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-03-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2018-03-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-03-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * A utility class for Person.","lastModifiedDate":"2017-04-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class PersonUtil {","lastModifiedDate":"2017-04-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Returns an add command string for adding the {@code person}.","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static String getAddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        return AddCommand.COMMAND_WORD + \" \" + getPersonDetails(person);","lastModifiedDate":"2017-03-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code person}\u0027s details.","lastModifiedDate":"2017-04-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static String getPersonDetails(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_NAME + person.getName().fullName + \" \");","lastModifiedDate":"2017-06-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_PHONE + person.getPhone().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_EMAIL + person.getEmail().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":36,"author":{"gitId":"Kailash201"},"content":"        //sb.append(PREFIX_ADDRESS + person.getAddress().value + \" \");","lastModifiedDate":"2023-10-19"},{"lineNumber":37,"author":{"gitId":"Kailash201"},"content":"        person.getGroups().toStream().forEach(","lastModifiedDate":"2023-10-19"},{"lineNumber":38,"author":{"gitId":"ZD292"},"content":"            s -\u003e sb.append(PREFIX_GROUPTAG + s.getGroupName() + \" \")","lastModifiedDate":"2023-10-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code EditPersonDescriptor}\u0027s details.","lastModifiedDate":"2018-03-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static String getEditPersonDescriptorDetails(EditPersonDescriptor descriptor) {","lastModifiedDate":"2018-03-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        descriptor.getAddress().ifPresent(address -\u003e sb.append(PREFIX_ADDRESS).append(address.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":52,"author":{"gitId":"Kailash201"},"content":"//        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2023-10-22"},{"lineNumber":53,"author":{"gitId":"Kailash201"},"content":"//            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2023-10-22"},{"lineNumber":54,"author":{"gitId":"Kailash201"},"content":"//            if (tags.isEmpty()) {","lastModifiedDate":"2023-10-22"},{"lineNumber":55,"author":{"gitId":"Kailash201"},"content":"//                sb.append(PREFIX_TAG);","lastModifiedDate":"2023-10-22"},{"lineNumber":56,"author":{"gitId":"Kailash201"},"content":"//            } else {","lastModifiedDate":"2023-10-22"},{"lineNumber":57,"author":{"gitId":"Kailash201"},"content":"//                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2023-10-22"},{"lineNumber":58,"author":{"gitId":"Kailash201"},"content":"//            }","lastModifiedDate":"2023-10-22"},{"lineNumber":59,"author":{"gitId":"Kailash201"},"content":"//        }","lastModifiedDate":"2023-10-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"Kailash201":11,"ZD292":1,"-":50}},{"path":"src/test/java/seedu/address/testutil/TypicalPersons.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":7,"author":{"gitId":"Kailash201"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_GROUP_AMY;","lastModifiedDate":"2023-10-22"},{"lineNumber":8,"author":{"gitId":"Kailash201"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_GROUP_BOB;","lastModifiedDate":"2023-10-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":13,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Person} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class TypicalPersons {","lastModifiedDate":"2017-04-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final Person ALICE \u003d new PersonBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2018-01-10"},{"lineNumber":28,"author":{"gitId":"Kailash201"},"content":"            .withEmail(\"alice@example.com\")","lastModifiedDate":"2023-10-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            .withPhone(\"94351253\")","lastModifiedDate":"2018-04-19"},{"lineNumber":30,"author":{"gitId":"Kailash201"},"content":"            .withGroupList(\"CS2103T\").build();","lastModifiedDate":"2023-10-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final Person BENSON \u003d new PersonBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2018-01-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            .withAddress(\"311, Clementi Ave 2, #02-25\")","lastModifiedDate":"2017-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            .withEmail(\"johnd@example.com\").withPhone(\"98765432\")","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"Kailash201"},"content":"            .withGroupList(\"CS2103T\").build();","lastModifiedDate":"2023-10-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final Person CARL \u003d new PersonBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\")","lastModifiedDate":"2018-01-10"},{"lineNumber":36,"author":{"gitId":"Kailash201"},"content":"            .withEmail(\"heinz@example.com\").withGroupList(\"CS2103T\").build();","lastModifiedDate":"2023-10-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final Person DANIEL \u003d new PersonBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2018-01-10"},{"lineNumber":38,"author":{"gitId":"Kailash201"},"content":"            .withEmail(\"cornelia@example.com\").withGroupList(\"CS2103T\").build();","lastModifiedDate":"2023-10-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final Person ELLE \u003d new PersonBuilder().withName(\"Elle Meyer\").withPhone(\"9482224\")","lastModifiedDate":"2018-01-10"},{"lineNumber":40,"author":{"gitId":"Kailash201"},"content":"            .withEmail(\"werner@example.com\").withGroupList(\"CS2103T\").build();","lastModifiedDate":"2023-10-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final Person FIONA \u003d new PersonBuilder().withName(\"Fiona Kunz\").withPhone(\"9482427\")","lastModifiedDate":"2018-01-10"},{"lineNumber":42,"author":{"gitId":"Kailash201"},"content":"            .withEmail(\"lydia@example.com\").withGroupList(\"CS2103T\").build();","lastModifiedDate":"2023-10-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final Person GEORGE \u003d new PersonBuilder().withName(\"George Best\").withPhone(\"9482442\")","lastModifiedDate":"2018-01-10"},{"lineNumber":44,"author":{"gitId":"Kailash201"},"content":"            .withEmail(\"anna@example.com\").withGroupList(\"CS2103T\").build();","lastModifiedDate":"2023-10-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final Person HOON \u003d new PersonBuilder().withName(\"Hoon Meier\").withPhone(\"8482424\")","lastModifiedDate":"2018-01-10"},{"lineNumber":48,"author":{"gitId":"Kailash201"},"content":"            .withEmail(\"stefan@example.com\").withGroupList(\"CS2103T\").build();","lastModifiedDate":"2023-10-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final Person IDA \u003d new PersonBuilder().withName(\"Ida Mueller\").withPhone(\"8482131\")","lastModifiedDate":"2018-01-10"},{"lineNumber":50,"author":{"gitId":"Kailash201"},"content":"            .withEmail(\"hans@example.com\").withGroupList(\"CS2103T\").build();","lastModifiedDate":"2023-10-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    // Manually added - Person\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2017-08-22"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final Person AMY \u003d new PersonBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2018-01-10"},{"lineNumber":54,"author":{"gitId":"Kailash201"},"content":"            .withEmail(VALID_EMAIL_AMY).withGroupList(VALID_GROUP_AMY).build();","lastModifiedDate":"2023-10-22"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final Person BOB \u003d new PersonBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2018-01-10"},{"lineNumber":56,"author":{"gitId":"Kailash201"},"content":"            .withEmail(VALID_EMAIL_BOB).withGroupList(VALID_GROUP_BOB).build();","lastModifiedDate":"2023-10-22"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    private TypicalPersons() {} // prevents instantiation","lastModifiedDate":"2017-07-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Returns an {@code AddressBook} with all the typical persons.","lastModifiedDate":"2017-08-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2017-08-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2017-08-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        for (Person person : getTypicalPersons()) {","lastModifiedDate":"2018-01-10"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            ab.addPerson(person);","lastModifiedDate":"2017-08-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public static List\u003cPerson\u003e getTypicalPersons() {","lastModifiedDate":"2018-01-10"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2017-08-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":76,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"Kailash201":15,"-":61}}]

[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"evanyan13"},"content":"[![CI Status](https://github.com/AY2324S1-CS2103T-W12-3/tp/actions/workflows/gradle.yml/badge.svg)](https://github.com/AY2324S1-CS2103T-W12-3/tp/actions) [![codecov](https://codecov.io/gh/AY2324S1-CS2103T-W12-3/tp/graph/badge.svg?token\u003dI80C9CAPB9)](https://codecov.io/gh/AY2324S1-CS2103T-W12-3/tp)","lastModifiedDate":"2023-09-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"evanyan13"},"content":"* This is **a job application assistant application for NUS fresh graduates who are looking for jobs**","lastModifiedDate":"2023-09-27"},{"lineNumber":6,"author":{"gitId":"evanyan13"},"content":"* We offer fresh graduates an efficient Contact Book app for job hunting. It simplifies contact management, provides reminders and enhances organisation, helping users stay competitive in the job market.","lastModifiedDate":"2023-09-27"},{"lineNumber":7,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":8,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":9,"author":{"gitId":"evanyan13"},"content":"* The project simulates an ongoing software project for a desktop application (called _JobFindr_) used for managing job applications.","lastModifiedDate":"2023-09-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"  * It is **written in OOP fashion**. It provides a **reasonably well-written** code base **bigger** (around 6 KLoC) than what students usually write in beginner-level SE modules, without being overwhelmingly big.","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  * It comes with a **reasonable level of user and developer documentation**.","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"evanyan13"},"content":"* For the detailed documentation of this project, see the **[JobFindr Product Website](https://ay2324s1-cs2103t-w12-3.github.io/tp/)**.","lastModifiedDate":"2023-09-27"},{"lineNumber":13,"author":{"gitId":"evanyan13"},"content":"* This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2023-09-27"}],"authorContributionMap":{"evanyan13":8,"-":5}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"evanyan13"},"content":"mainClassName \u003d \u0027seedu.application.Main\u0027","lastModifiedDate":"2023-10-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-04-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        html.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        xml.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-07-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    archiveFileName \u003d \u0027addressbook.jar\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"peiran18"},"content":"run {","lastModifiedDate":"2023-10-23"},{"lineNumber":73,"author":{"gitId":"peiran18"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2023-10-23"},{"lineNumber":74,"author":{"gitId":"peiran18"},"content":"}","lastModifiedDate":"2023-10-23"},{"lineNumber":75,"author":{"gitId":"peiran18"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"evanyan13":1,"peiran18":4,"-":71}},{"path":"config/checkstyle/checkstyle.xml","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"\u003c!DOCTYPE module PUBLIC","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \"-//Checkstyle//DTD Checkstyle Configuration 1.3//EN\"","lastModifiedDate":"2019-03-06"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \"https://checkstyle.org/dtds/configuration_1_3.dtd\"\u003e","lastModifiedDate":"2019-03-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c!--","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    This configuration file enforces rules for the coding standard at","lastModifiedDate":"2022-05-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    https://se-education.org/guides/conventions/java/intermediate.html","lastModifiedDate":"2022-05-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"--\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003cmodule name\u003d\"Checker\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  \u003cmodule name\u003d\"FileTabCharacter\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that there are no tab characters in the file. --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  \u003cmodule name\u003d\"NewlineAtEndOfFile\"\u003e","lastModifiedDate":"2016-12-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \u003c!-- Accept LF, CR or CRLF to accomodate devs who prefer different line endings --\u003e","lastModifiedDate":"2016-12-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    \u003cproperty name\u003d\"lineSeparator\" value\u003d\"lf_cr_crlf\"/\u003e","lastModifiedDate":"2016-12-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  \u003c/module\u003e","lastModifiedDate":"2016-12-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  \u003cmodule name\u003d\"RegexpSingleline\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that FIXME is not used in comments.  TODO is preferred. --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    \u003cproperty name\u003d\"format\" value\u003d\"((//.*)|(\\*.*))FIXME\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    \u003cproperty name\u003d\"message\" value\u003d\u0027TODO is preferred to FIXME.\"\u0027 /\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  \u003c/module\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"  \u003cmodule name\u003d\"SuppressionFilter\"\u003e","lastModifiedDate":"2017-08-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    \u003cproperty name\u003d\"file\" value\u003d\"${config_loc}/suppressions.xml\"/\u003e","lastModifiedDate":"2019-02-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  \u003c/module\u003e","lastModifiedDate":"2017-08-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  \u003cmodule name\u003d\"LineLength\"\u003e","lastModifiedDate":"2020-05-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    \u003c!-- Checks if a line is too long. --\u003e","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    \u003cproperty name\u003d\"max\" value\u003d\"120\"/\u003e","lastModifiedDate":"2020-05-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"  \u003c/module\u003e","lastModifiedDate":"2020-05-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"  \u003c!-- All Java AST specific tests live under TreeWalker module. --\u003e","lastModifiedDate":"2017-08-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"  \u003cmodule name\u003d\"TreeWalker\"\u003e","lastModifiedDate":"2017-08-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    \u003c!-- Required to allow exceptions in code style --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"SuppressionCommentFilter\"\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"offCommentFormat\" value\u003d\"CHECKSTYLE.OFF\\: ([\\w\\|]+)\"/\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"onCommentFormat\" value\u003d\"CHECKSTYLE.ON\\: ([\\w\\|]+)\"/\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"checkFormat\" value\u003d\"$1\"/\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    \u003c!--","lastModifiedDate":"2016-10-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    IMPORT CHECKS","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    --\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    \u003c!-- Checks the ordering of import statements follow the rules that the default Eclipse formatter uses.","lastModifiedDate":"2017-01-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    The order rule \"STATIC###STANDARD_JAVA_PACKAGE###SPECIAL_IMPORTS###THIRD_PARTY_PACKAGE\" consists of:","lastModifiedDate":"2017-01-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"      1. STATIC: static imports","lastModifiedDate":"2017-01-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"      2. STANDARD_JAVA_PACKAGE: standard java/javax imports","lastModifiedDate":"2017-01-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"      3. SPECIAL_IMPORTS: defined as org imports","lastModifiedDate":"2017-01-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"      4. THIRD_PARTY_PACKAGE: defined as com imports","lastModifiedDate":"2017-01-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    --\u003e","lastModifiedDate":"2017-01-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"CustomImportOrder\"\u003e","lastModifiedDate":"2017-01-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        \u003cproperty name\u003d\"customImportOrderRules\"","lastModifiedDate":"2017-01-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            value\u003d\"STATIC###STANDARD_JAVA_PACKAGE###SPECIAL_IMPORTS###THIRD_PARTY_PACKAGE\"/\u003e","lastModifiedDate":"2017-01-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        \u003cproperty name\u003d\"specialImportsRegExp\" value\u003d\"^org\\.\"/\u003e","lastModifiedDate":"2017-01-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        \u003cproperty name\u003d\"thirdPartyPackageRegExp\" value\u003d\"^com\\.\"/\u003e","lastModifiedDate":"2017-01-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        \u003cproperty name\u003d\"sortImportsInGroupAlphabetically\" value\u003d\"true\"/\u003e","lastModifiedDate":"2017-01-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2017-01-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    \u003c!-- Checks for redundant import statements.","lastModifiedDate":"2017-01-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    An import statement is redundant if:","lastModifiedDate":"2017-01-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"      * It is a duplicate of another import. This is, when a class is imported more than once.","lastModifiedDate":"2017-01-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"      * The class non-statically imported is from the java.lang package, e.g. importing java.lang.String.","lastModifiedDate":"2017-01-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"      * The class non-statically imported is from the same package as the current package.","lastModifiedDate":"2017-01-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    --\u003e","lastModifiedDate":"2017-01-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"RedundantImport\"/\u003e","lastModifiedDate":"2017-01-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    \u003c!-- Checks for unused import statements.","lastModifiedDate":"2017-01-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    An import statement is unused if:","lastModifiedDate":"2017-01-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"      It\u0027s not referenced in the file.","lastModifiedDate":"2017-01-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    --\u003e","lastModifiedDate":"2017-01-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"UnusedImports\"/\u003e","lastModifiedDate":"2017-01-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"evanyan13"},"content":"\u003c!--    \u003cmodule name\u003d\"AvoidStarImport\"/\u003e--\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    \u003c!--","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    NAMING CHECKS","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    --\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    \u003c!-- Validate abbreviations (consecutive capital letters) length in identifier name --\u003e","lastModifiedDate":"2017-04-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"AbbreviationAsWordInName\"\u003e","lastModifiedDate":"2017-04-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"ignoreFinal\" value\u003d\"false\"/\u003e","lastModifiedDate":"2017-04-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowedAbbreviationLength\" value\u003d\"1\"/\u003e","lastModifiedDate":"2017-04-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2017-04-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"PackageName\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"      \u003c!-- Validates identifiers for package names against the supplied expression. --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":94,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"format\" value\u003d\"^[a-z]+(\\.[a-z][a-z0-9]{1,})*$\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"TypeName\"\u003e","lastModifiedDate":"2017-01-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"      \u003c!-- Validates static, final fields against the expression \"^[A-Z][a-zA-Z0-9]*$\". --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":100,"author":{"gitId":"-"},"content":"      \u003cmetadata name\u003d\"altname\" value\u003d\"TypeName\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"ConstantName\"\u003e","lastModifiedDate":"2017-01-29"},{"lineNumber":105,"author":{"gitId":"-"},"content":"      \u003c!-- Validates non-private, static, final fields against the expression \"^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$\". --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":106,"author":{"gitId":"-"},"content":"      \u003cmetadata name\u003d\"altname\" value\u003d\"ConstantName\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"applyToPrivate\" value\u003d\"false\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"      \u003cmessage key\u003d\"name.invalidPattern\"","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"               value\u003d\"Variable \u0027\u0027{0}\u0027\u0027 should be in ALL_CAPS (if it is a constant) or be private (otherwise).\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"StaticVariableName\"\u003e","lastModifiedDate":"2017-01-29"},{"lineNumber":114,"author":{"gitId":"-"},"content":"      \u003c!-- Validates static, non-final fields against the supplied expression. --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":115,"author":{"gitId":"-"},"content":"      \u003cmetadata name\u003d\"altname\" value\u003d\"StaticVariableName\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"format\" value\u003d\"^[a-z][a-zA-Z0-9]*_?$\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"MemberName\"\u003e","lastModifiedDate":"2017-01-29"},{"lineNumber":121,"author":{"gitId":"-"},"content":"      \u003c!-- Validates non-static members against the supplied expression. --\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"      \u003cmetadata name\u003d\"altname\" value\u003d\"MemberName\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"format\" value\u003d\"^[a-z][a-zA-Z0-9]*$\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"MethodName\"\u003e","lastModifiedDate":"2017-01-29"},{"lineNumber":128,"author":{"gitId":"-"},"content":"      \u003c!-- Validates identifiers for method names against the supplied expression. --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":129,"author":{"gitId":"-"},"content":"      \u003cmetadata name\u003d\"altname\" value\u003d\"MethodName\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"format\" value\u003d\"^[a-z][a-zA-Z0-9]*(_[a-z][a-zA-Z0-9]+){0,2}$\"/\u003e","lastModifiedDate":"2017-04-03"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"ParameterName\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"      \u003c!-- Validates identifiers for method parameters against the expression \"^[a-z][a-zA-Z0-9]*$\". --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":135,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"LocalFinalVariableName\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"      \u003c!-- Validates identifiers for local final variables against the expression \"^[a-z][a-zA-Z0-9]*$\". --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":140,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"LocalVariableName\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"      \u003c!-- Validates identifiers for local variables against the expression \"^[a-z][a-zA-Z0-9]*$\". --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":145,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    \u003c!--","lastModifiedDate":"2016-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    LENGTH and CODING CHECKS","lastModifiedDate":"2016-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    --\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that array type declarations follow Java Style","lastModifiedDate":"2017-04-01"},{"lineNumber":154,"author":{"gitId":"-"},"content":"      Java style: public static void main(String[] args) // Allowed","lastModifiedDate":"2017-04-01"},{"lineNumber":155,"author":{"gitId":"-"},"content":"      C style:    public static void main(String args[]) // Not allowed","lastModifiedDate":"2017-04-01"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    --\u003e","lastModifiedDate":"2017-04-01"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"ArrayTypeStyle\"/\u003e","lastModifiedDate":"2017-04-01"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    \u003c!-- Checks if a catch block is empty and does not contain any comments. --\u003e","lastModifiedDate":"2017-04-03"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"EmptyCatchBlock\"/\u003e","lastModifiedDate":"2017-04-03"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-03"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"LeftCurly\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"      \u003c!-- Checks for placement of the left curly brace (\u0027{\u0027). --\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"RightCurly\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"      \u003c!-- Checks right curlies on CATCH, ELSE, and TRY blocks are on","lastModifiedDate":"2016-08-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"      the same line. e.g., the following example is fine:","lastModifiedDate":"2016-08-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"      \u003cpre\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        if {","lastModifiedDate":"2016-08-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"          ...","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        } else","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"      \u003c/pre\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"      --\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"      \u003c!-- This next example is not fine:","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"      \u003cpre\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        if {","lastModifiedDate":"2016-08-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"          ...","lastModifiedDate":"2016-08-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        else","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"      \u003c/pre\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":"      --\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":184,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    \u003c!-- Checks for braces around loop blocks --\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"NeedBraces\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":189,"author":{"gitId":"-"},"content":"      \u003c!--","lastModifiedDate":"2016-08-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":"      if (true) return 1; // Not allowed","lastModifiedDate":"2017-04-05"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":"      if (true) { return 1; } // Not allowed","lastModifiedDate":"2016-10-12"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":"      else if {","lastModifiedDate":"2016-08-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        return 1; // else if should always be multi line","lastModifiedDate":"2016-08-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":"      }","lastModifiedDate":"2016-08-08"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":"      if (true)","lastModifiedDate":"2016-08-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        return 1; // Not allowed","lastModifiedDate":"2016-08-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":"      --\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowEmptyLoopBody\" value\u003d\"true\"/\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that each variable declaration is in its own statement and on its own line. --\u003e","lastModifiedDate":"2017-09-21"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"MultipleVariableDeclarations\"/\u003e","lastModifiedDate":"2017-09-21"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"OneStatementPerLine\"/\u003e","lastModifiedDate":"2017-09-17"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-17"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that long constants are defined with an upper ell.--\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"UpperEll\" /\u003e","lastModifiedDate":"2018-01-25"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"FallThrough\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":213,"author":{"gitId":"-"},"content":"      \u003c!-- Warn about falling through to the next case statement.  Similar to","lastModifiedDate":"2016-08-08"},{"lineNumber":214,"author":{"gitId":"-"},"content":"      javac -Xlint:fallthrough, but the check is suppressed if a single-line comment","lastModifiedDate":"2016-08-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":"      on the last non-blank line preceding the fallen-into case contains \u0027fall through\u0027 (or","lastModifiedDate":"2016-08-08"},{"lineNumber":216,"author":{"gitId":"-"},"content":"      some other variants which we don\u0027t publicized to promote consistency).","lastModifiedDate":"2016-08-08"},{"lineNumber":217,"author":{"gitId":"-"},"content":"      --\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":218,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"reliefPattern\"","lastModifiedDate":"2016-08-08"},{"lineNumber":219,"author":{"gitId":"-"},"content":"       value\u003d\"fall through|Fall through|fallthru|Fallthru|falls through|Falls through|fallthrough|Fallthrough|No break|NO break|no break|continue on\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"MissingSwitchDefault\"/\u003e","lastModifiedDate":"2017-04-07"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that Class variables should never be declared public. --\u003e","lastModifiedDate":"2017-04-13"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"VisibilityModifier\"\u003e","lastModifiedDate":"2017-04-13"},{"lineNumber":226,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"protectedAllowed\" value\u003d\"true\"/\u003e","lastModifiedDate":"2017-04-13"},{"lineNumber":227,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowPublicFinalFields\" value\u003d\"true\"/\u003e","lastModifiedDate":"2017-04-13"},{"lineNumber":228,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"ignoreAnnotationCanonicalNames\" value\u003d\"RegisterExtension, TempDir\"/\u003e","lastModifiedDate":"2019-02-24"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2017-04-13"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-13"},{"lineNumber":231,"author":{"gitId":"-"},"content":"    \u003c!--","lastModifiedDate":"2016-08-08"},{"lineNumber":232,"author":{"gitId":"-"},"content":"    ORDER CHECKS","lastModifiedDate":"2017-01-16"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    --\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":235,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that the order of at-clauses follows the tagOrder default property value order.","lastModifiedDate":"2017-04-07"},{"lineNumber":236,"author":{"gitId":"-"},"content":"         @author, @version, @param, @return, @throws, @exception, @see, @since, @serial, @serialField, @serialData, @deprecated","lastModifiedDate":"2017-04-07"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    --\u003e","lastModifiedDate":"2017-04-07"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"AtclauseOrder\"/\u003e","lastModifiedDate":"2017-04-07"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-07"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    \u003c!-- Checks if the Class and Interface declarations is organized in this order","lastModifiedDate":"2017-04-01"},{"lineNumber":241,"author":{"gitId":"-"},"content":"      1. Class (static) variables. Order: public, protected, package level (no access modifier), private.","lastModifiedDate":"2017-04-01"},{"lineNumber":242,"author":{"gitId":"-"},"content":"      2. Instance variables. Order: public, protected, package level (no access modifier), private.","lastModifiedDate":"2017-04-01"},{"lineNumber":243,"author":{"gitId":"-"},"content":"      3. Constructors","lastModifiedDate":"2017-04-01"},{"lineNumber":244,"author":{"gitId":"-"},"content":"      4. Methods","lastModifiedDate":"2017-04-01"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    --\u003e","lastModifiedDate":"2017-04-01"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    \u003cmodule name \u003d\"DeclarationOrder\"/\u003e","lastModifiedDate":"2017-04-01"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":248,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that default is after all cases in a switch statement --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":249,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"DefaultComesLast\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"ModifierOrder\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":252,"author":{"gitId":"-"},"content":"      \u003c!-- Warn if modifier order is inconsistent with JLS3 8.1.1, 8.3.1, and","lastModifiedDate":"2016-08-08"},{"lineNumber":253,"author":{"gitId":"-"},"content":"           8.4.3.  The prescribed order is:","lastModifiedDate":"2016-08-08"},{"lineNumber":254,"author":{"gitId":"-"},"content":"           public, protected, private, abstract, static, final, transient, volatile,","lastModifiedDate":"2016-08-08"},{"lineNumber":255,"author":{"gitId":"-"},"content":"           synchronized, native, strictfp","lastModifiedDate":"2016-08-08"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        --\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":257,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"OverloadMethodsDeclarationOrder\"/\u003e","lastModifiedDate":"2017-01-16"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":261,"author":{"gitId":"-"},"content":"    \u003c!--","lastModifiedDate":"2016-08-08"},{"lineNumber":262,"author":{"gitId":"-"},"content":"    WHITESPACE CHECKS","lastModifiedDate":"2016-08-08"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    --\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":265,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that comments are indented relative to their position in the code --\u003e","lastModifiedDate":"2017-04-03"},{"lineNumber":266,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"CommentsIndentation\"/\u003e","lastModifiedDate":"2017-04-03"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-03"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"WhitespaceAround\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":269,"author":{"gitId":"-"},"content":"      \u003c!-- Checks that various tokens are surrounded by whitespace.","lastModifiedDate":"2016-08-08"},{"lineNumber":270,"author":{"gitId":"-"},"content":"           This includes most binary operators and keywords followed","lastModifiedDate":"2016-08-08"},{"lineNumber":271,"author":{"gitId":"-"},"content":"           by regular or curly braces.","lastModifiedDate":"2016-08-08"},{"lineNumber":272,"author":{"gitId":"-"},"content":"      --\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":273,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"tokens\" value\u003d\"ASSIGN, BAND, BAND_ASSIGN, BOR,","lastModifiedDate":"2016-08-08"},{"lineNumber":274,"author":{"gitId":"-"},"content":"        BOR_ASSIGN, BSR, BSR_ASSIGN, BXOR, BXOR_ASSIGN, COLON, DIV, DIV_ASSIGN,","lastModifiedDate":"2016-08-08"},{"lineNumber":275,"author":{"gitId":"-"},"content":"        EQUAL, GE, GT, LAND, LCURLY, LE, LITERAL_CATCH, LITERAL_DO, LITERAL_ELSE,","lastModifiedDate":"2016-12-10"},{"lineNumber":276,"author":{"gitId":"-"},"content":"        LITERAL_FINALLY, LITERAL_FOR, LITERAL_IF, LITERAL_RETURN,","lastModifiedDate":"2016-08-08"},{"lineNumber":277,"author":{"gitId":"-"},"content":"        LITERAL_SYNCHRONIZED, LITERAL_TRY, LITERAL_WHILE, LOR, LT, MINUS,","lastModifiedDate":"2016-08-08"},{"lineNumber":278,"author":{"gitId":"-"},"content":"        MINUS_ASSIGN, MOD, MOD_ASSIGN, NOT_EQUAL, PLUS, PLUS_ASSIGN, QUESTION,","lastModifiedDate":"2016-08-08"},{"lineNumber":279,"author":{"gitId":"-"},"content":"        RCURLY, SL, SLIST, SL_ASSIGN, SR_ASSIGN, STAR, STAR_ASSIGN\"/\u003e","lastModifiedDate":"2016-12-10"},{"lineNumber":280,"author":{"gitId":"-"},"content":"      \u003c!-- Allow empty constructors e.g. MyClass() {} --\u003e","lastModifiedDate":"2016-12-10"},{"lineNumber":281,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowEmptyConstructors\" value\u003d\"true\" /\u003e","lastModifiedDate":"2016-12-10"},{"lineNumber":282,"author":{"gitId":"-"},"content":"      \u003c!-- Allow empty methods e.g. void func() {} --\u003e","lastModifiedDate":"2016-12-10"},{"lineNumber":283,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowEmptyMethods\" value\u003d\"true\" /\u003e","lastModifiedDate":"2016-12-10"},{"lineNumber":284,"author":{"gitId":"-"},"content":"      \u003c!-- Allow empty types e.g. class Foo {}, enum Foo {} --\u003e","lastModifiedDate":"2016-12-10"},{"lineNumber":285,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowEmptyTypes\" value\u003d\"true\" /\u003e","lastModifiedDate":"2016-12-10"},{"lineNumber":286,"author":{"gitId":"-"},"content":"      \u003c!-- Allow empty loops e.g. for (int i \u003d 1; i \u003e 1; i++) {} --\u003e","lastModifiedDate":"2016-12-10"},{"lineNumber":287,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowEmptyLoops\" value\u003d\"true\" /\u003e","lastModifiedDate":"2016-12-10"},{"lineNumber":288,"author":{"gitId":"-"},"content":"      \u003c!-- Allow empty lambdas e.g. () -\u003e {} --\u003e","lastModifiedDate":"2016-12-10"},{"lineNumber":289,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowEmptyLambdas\" value\u003d\"true\" /\u003e","lastModifiedDate":"2016-12-10"},{"lineNumber":290,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"WhitespaceAfter\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":293,"author":{"gitId":"-"},"content":"      \u003c!-- Checks that commas, semicolons and typecasts are followed by whitespace. --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":294,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"tokens\" value\u003d\"COMMA, SEMI, TYPECAST\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":297,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"NoWhitespaceAfter\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":298,"author":{"gitId":"-"},"content":"      \u003c!-- Checks that there is no whitespace after various unary operators. Linebreaks are allowed. --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":299,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"tokens\" value\u003d\"BNOT, DEC, DOT, INC, LNOT, UNARY_MINUS,","lastModifiedDate":"2016-08-08"},{"lineNumber":300,"author":{"gitId":"-"},"content":"        UNARY_PLUS\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":301,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowLineBreaks\" value\u003d\"true\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":302,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":303,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":304,"author":{"gitId":"-"},"content":"    \u003c!-- No trailing whitespace --\u003e","lastModifiedDate":"2016-12-08"},{"lineNumber":305,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"Regexp\"\u003e","lastModifiedDate":"2016-12-08"},{"lineNumber":306,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"format\" value\u003d\"[ \\t]+$\"/\u003e","lastModifiedDate":"2016-12-08"},{"lineNumber":307,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"illegalPattern\" value\u003d\"true\"/\u003e","lastModifiedDate":"2016-12-08"},{"lineNumber":308,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"message\" value\u003d\"Trailing whitespace\"/\u003e","lastModifiedDate":"2016-12-08"},{"lineNumber":309,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-12-08"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":311,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"OperatorWrap\"\u003e","lastModifiedDate":"2017-05-22"},{"lineNumber":312,"author":{"gitId":"-"},"content":"      \u003c!-- Checks that the non-assignment type operator is at the next line in a line wrap.","lastModifiedDate":"2017-05-22"},{"lineNumber":313,"author":{"gitId":"-"},"content":"           This includes \"?\", \":\", \"\u003d\u003d\", \"!\u003d\", \"/\", \"+\", \"-\", \"*\", \"%\", \"\u003e\u003e\", \"\u003e\u003e\u003e\",","lastModifiedDate":"2017-05-22"},{"lineNumber":314,"author":{"gitId":"-"},"content":"           \"\u003e\u003d\", \"\u003e\", \"\u003c\u003c\", \"\u003c\u003d\", \"\u003c\", \"^\", \"|\", \"||\", \"\u0026\", \"\u0026\u0026\", \"instanceof\",","lastModifiedDate":"2017-05-22"},{"lineNumber":315,"author":{"gitId":"-"},"content":"           \"\u0026\" when used in a generic upper or lower bounds constraints,","lastModifiedDate":"2017-05-22"},{"lineNumber":316,"author":{"gitId":"-"},"content":"             e.g. \u003cT extends Foo \u0026 Bar\u003e","lastModifiedDate":"2017-05-22"},{"lineNumber":317,"author":{"gitId":"-"},"content":"           \"::\" when used as a reference to a method or constructor without arguments.","lastModifiedDate":"2017-05-22"},{"lineNumber":318,"author":{"gitId":"-"},"content":"             e.g. String::compareToIgnoreCase","lastModifiedDate":"2017-05-22"},{"lineNumber":319,"author":{"gitId":"-"},"content":"      --\u003e","lastModifiedDate":"2017-05-22"},{"lineNumber":320,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"tokens\" value\u003d\"QUESTION, COLON, EQUAL, NOT_EQUAL, DIV, PLUS, MINUS, STAR, MOD, SR, BSR,","lastModifiedDate":"2017-05-22"},{"lineNumber":321,"author":{"gitId":"-"},"content":"        GE, GT, SL, LE, LT, BXOR, BOR, LOR, BAND, LAND, LITERAL_INSTANCEOF, TYPE_EXTENSION_AND, METHOD_REF\"/\u003e","lastModifiedDate":"2017-05-22"},{"lineNumber":322,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"option\" value\u003d\"nl\"/\u003e","lastModifiedDate":"2017-05-22"},{"lineNumber":323,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2017-05-22"},{"lineNumber":324,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"OperatorWrap\"\u003e","lastModifiedDate":"2017-05-22"},{"lineNumber":325,"author":{"gitId":"-"},"content":"      \u003c!-- Checks that the assignment type operator is at the previous end of line in a line wrap.","lastModifiedDate":"2017-05-22"},{"lineNumber":326,"author":{"gitId":"-"},"content":"           This includes \"\u003d\", \"/\u003d\", \"+\u003d\", \"-\u003d\", \"*\u003d\", \"%\u003d\", \"\u003e\u003e\u003d\", \"\u003e\u003e\u003e\u003d\", \"\u003c\u003c\u003d\", \"^\u003d\", \"\u0026\u003d\".","lastModifiedDate":"2017-05-22"},{"lineNumber":327,"author":{"gitId":"-"},"content":"      --\u003e","lastModifiedDate":"2017-05-22"},{"lineNumber":328,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"tokens\" value\u003d\"ASSIGN, DIV_ASSIGN, PLUS_ASSIGN, MINUS_ASSIGN, STAR_ASSIGN, MOD_ASSIGN,","lastModifiedDate":"2017-05-22"},{"lineNumber":329,"author":{"gitId":"-"},"content":"        SR_ASSIGN, BSR_ASSIGN, SL_ASSIGN, BXOR_ASSIGN, BOR_ASSIGN, BAND_ASSIGN\"/\u003e","lastModifiedDate":"2017-05-22"},{"lineNumber":330,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"option\" value\u003d\"eol\"/\u003e","lastModifiedDate":"2017-05-22"},{"lineNumber":331,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2017-05-22"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":333,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"SeparatorWrap\"\u003e","lastModifiedDate":"2017-04-14"},{"lineNumber":334,"author":{"gitId":"-"},"content":"      \u003c!-- Checks that the \".\", \"@\" is at the next line in a line wrap. --\u003e","lastModifiedDate":"2017-04-14"},{"lineNumber":335,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"tokens\" value\u003d\"DOT, AT\"/\u003e","lastModifiedDate":"2017-04-14"},{"lineNumber":336,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"option\" value\u003d\"nl\"/\u003e","lastModifiedDate":"2017-04-14"},{"lineNumber":337,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2017-04-14"},{"lineNumber":338,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"SeparatorWrap\"\u003e","lastModifiedDate":"2017-04-14"},{"lineNumber":339,"author":{"gitId":"-"},"content":"      \u003c!-- Checks that the \",\", \"]\", \"[\", \"...\", \";\", \"(\" is at the previous end of line in a line wrap. --\u003e","lastModifiedDate":"2017-04-14"},{"lineNumber":340,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"tokens\" value\u003d\"COMMA, RBRACK, ARRAY_DECLARATOR, ELLIPSIS, SEMI, LPAREN\"/\u003e","lastModifiedDate":"2017-04-14"},{"lineNumber":341,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"option\" value\u003d\"eol\"/\u003e","lastModifiedDate":"2017-04-14"},{"lineNumber":342,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2017-04-14"},{"lineNumber":343,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-14"},{"lineNumber":344,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"Indentation\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":345,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"caseIndent\" value\u003d\"0\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":346,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"throwsIndent\" value\u003d\"8\" /\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":347,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":348,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":349,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"NoWhitespaceBefore\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":350,"author":{"gitId":"-"},"content":"      \u003c!-- Checks that there is no whitespace before various unary operators. Linebreaks are allowed. --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":351,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"tokens\" value\u003d\"SEMI, DOT, POST_DEC, POST_INC\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":352,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowLineBreaks\" value\u003d\"true\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":353,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":354,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":355,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"NoWhitespaceBeforeCaseDefaultColon\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":357,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that there is no whitespace between method/constructor name and open parenthesis. --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":358,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"MethodParamPad\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":359,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":360,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"ParenPad\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":361,"author":{"gitId":"-"},"content":"      \u003c!-- Checks that there is no whitespace before close parenthesis or after open parenthesis. --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":362,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":363,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":364,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":365,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that non-whitespace characters are separated by no more than one whitespace character.","lastModifiedDate":"2018-08-15"},{"lineNumber":366,"author":{"gitId":"-"},"content":"         a \u003d 1; // Allowed","lastModifiedDate":"2018-08-15"},{"lineNumber":367,"author":{"gitId":"-"},"content":"         a  \u003d 1; // Not allowed (more than one space before \u003d)","lastModifiedDate":"2018-08-15"},{"lineNumber":368,"author":{"gitId":"-"},"content":"    --\u003e","lastModifiedDate":"2018-08-15"},{"lineNumber":369,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"SingleSpaceSeparator\"\u003e","lastModifiedDate":"2018-08-15"},{"lineNumber":370,"author":{"gitId":"-"},"content":"      \u003c!-- Validate whitespace surrounding comments as well.","lastModifiedDate":"2018-08-15"},{"lineNumber":371,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-15"},{"lineNumber":372,"author":{"gitId":"-"},"content":"           a \u003d 1; // Allowed (single space before start of comment)","lastModifiedDate":"2018-08-15"},{"lineNumber":373,"author":{"gitId":"-"},"content":"           a \u003d 1; /* Allowed (single space before start of comment) */","lastModifiedDate":"2018-08-15"},{"lineNumber":374,"author":{"gitId":"-"},"content":"           /* Allowed (single space after end of comment) */ a \u003d 1;","lastModifiedDate":"2018-08-15"},{"lineNumber":375,"author":{"gitId":"-"},"content":"           a \u003d 1;  // Not allowed (more than one space before start of comment)","lastModifiedDate":"2018-08-15"},{"lineNumber":376,"author":{"gitId":"-"},"content":"           a \u003d 1;  /* Not allowed (more than one space before start of comment) */","lastModifiedDate":"2018-08-15"},{"lineNumber":377,"author":{"gitId":"-"},"content":"           /* Not allowed (more than one space after end of comment) */  a \u003d 1;","lastModifiedDate":"2018-08-15"},{"lineNumber":378,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-15"},{"lineNumber":379,"author":{"gitId":"-"},"content":"           This doesn\u0027t validate whitespace within comments so a comment /* like  this */ is allowed.","lastModifiedDate":"2018-08-15"},{"lineNumber":380,"author":{"gitId":"-"},"content":"      --\u003e","lastModifiedDate":"2018-08-15"},{"lineNumber":381,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"validateComments\" value\u003d\"true\"/\u003e","lastModifiedDate":"2018-08-15"},{"lineNumber":382,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2018-08-15"},{"lineNumber":383,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-15"},{"lineNumber":384,"author":{"gitId":"-"},"content":"    \u003c!--","lastModifiedDate":"2017-08-20"},{"lineNumber":385,"author":{"gitId":"-"},"content":"    JAVADOC CHECKS","lastModifiedDate":"2017-08-20"},{"lineNumber":386,"author":{"gitId":"-"},"content":"    --\u003e","lastModifiedDate":"2017-08-20"},{"lineNumber":387,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-20"},{"lineNumber":388,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that all block-tags are ordered correctly. --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":389,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"AtclauseOrder\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":391,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that Javadoc block tags appear only at the beginning of the line. --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":392,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"JavadocBlockTagLocation\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":393,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":394,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that all Javadoc comments start from the second line. --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":395,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"JavadocContentLocationCheck\" /\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":397,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that each line in Javadoc has leading asterisks. --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":398,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"JavadocMissingLeadingAsterisk\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":399,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":400,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that each non-empty line in Javadoc has whitespace after leading asterisk. --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":401,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"JavadocMissingWhitespaceAfterAsterisk\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":402,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":403,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that for block tags, indentation of continuation lines is at least 4 spaces. --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":404,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"JavadocTagContinuationIndentation\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":405,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":406,"author":{"gitId":"-"},"content":"    \u003c!-- Checks the Javadoc\u0027s format for every class, enumeration and interface. --\u003e","lastModifiedDate":"2022-05-29"},{"lineNumber":407,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"JavadocType\"\u003e","lastModifiedDate":"2017-08-20"},{"lineNumber":408,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowMissingParamTags\" value\u003d\"true\"/\u003e","lastModifiedDate":"2017-08-20"},{"lineNumber":409,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2017-08-20"},{"lineNumber":410,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-20"},{"lineNumber":411,"author":{"gitId":"-"},"content":"    \u003c!-- Checks the Javadoc\u0027s format for every public method (excluding getters, setters and constructors). --\u003e","lastModifiedDate":"2022-05-29"},{"lineNumber":412,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"JavadocMethod\"\u003e","lastModifiedDate":"2017-08-20"},{"lineNumber":413,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowedAnnotations\" value\u003d\"Override, Test, BeforeAll, BeforeEach, AfterAll, AfterEach, Subscribe\"/\u003e","lastModifiedDate":"2019-02-24"},{"lineNumber":414,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"accessModifiers\" value\u003d\"public\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":415,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"validateThrows\" value\u003d\"false\"/\u003e","lastModifiedDate":"2020-05-27"},{"lineNumber":416,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowMissingParamTags\" value\u003d\"true\"/\u003e","lastModifiedDate":"2017-08-20"},{"lineNumber":417,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowMissingReturnTag\" value\u003d\"true\"/\u003e","lastModifiedDate":"2017-08-20"},{"lineNumber":418,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"tokens\" value\u003d\"METHOD_DEF, ANNOTATION_FIELD_DEF\"/\u003e","lastModifiedDate":"2017-08-20"},{"lineNumber":419,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2017-08-20"},{"lineNumber":420,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-27"},{"lineNumber":421,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"InvalidJavadocPosition\"/\u003e","lastModifiedDate":"2020-05-27"},{"lineNumber":422,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-27"},{"lineNumber":423,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that every public method (excluding getters, setters and constructors) has a header comment. --\u003e","lastModifiedDate":"2022-05-29"},{"lineNumber":424,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"MissingJavadocMethodCheck\"\u003e","lastModifiedDate":"2020-05-27"},{"lineNumber":425,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"minLineCount\" value\u003d\"1\"/\u003e","lastModifiedDate":"2020-05-27"},{"lineNumber":426,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowMissingPropertyJavadoc\" value\u003d\"true\"/\u003e","lastModifiedDate":"2017-08-20"},{"lineNumber":427,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"ignoreMethodNamesRegex\" value\u003d\"(set.*|get.*|main)\"/\u003e","lastModifiedDate":"2023-07-10"},{"lineNumber":428,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2017-08-20"},{"lineNumber":429,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-20"},{"lineNumber":430,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that every public class, enumeration and interface has a header comment. --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":431,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"MissingJavadocType\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":432,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":433,"author":{"gitId":"-"},"content":"  \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":434,"author":{"gitId":"-"},"content":"\u003c/module\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"evanyan13":1,"-":433}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"You can reach us at the email `seer[at]comp.nus.edu.sg`","lastModifiedDate":"2020-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"evanyan13"},"content":"### Chen Peiran","lastModifiedDate":"2023-09-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"migfoo02"},"content":"\u003cimg src\u003d\"images/peiran18.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-10-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"peiran18"},"content":"[[github](https://github.com/peiran18)]","lastModifiedDate":"2023-10-02"},{"lineNumber":17,"author":{"gitId":"peiran18"},"content":"[[portfolio](team/peiran18.md)","lastModifiedDate":"2023-10-02"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"evanyan13"},"content":"* Role: Documentation \u0026 Deliverables IC","lastModifiedDate":"2023-10-04"},{"lineNumber":20,"author":{"gitId":"evanyan13"},"content":"* Responsibilities:","lastModifiedDate":"2023-09-27"},{"lineNumber":21,"author":{"gitId":"evanyan13"},"content":"  * Review Documentations","lastModifiedDate":"2023-10-04"},{"lineNumber":22,"author":{"gitId":"evanyan13"},"content":"  * Tasks Allocation","lastModifiedDate":"2023-10-04"},{"lineNumber":23,"author":{"gitId":"evanyan13"},"content":"  * Milestone Tracking","lastModifiedDate":"2023-10-04"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"evanyan13"},"content":"### Chen Zhiruo","lastModifiedDate":"2023-09-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"migfoo02"},"content":"\u003cimg src\u003d\"images/czhiruo.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-10-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"czhiruo"},"content":"[[github](http://github.com/czhiruo)]","lastModifiedDate":"2023-10-01"},{"lineNumber":30,"author":{"gitId":"czhiruo"},"content":"[[portfolio](team/czhiruo.md)]","lastModifiedDate":"2023-10-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"evanyan13"},"content":"* Role: Testing IC","lastModifiedDate":"2023-10-04"},{"lineNumber":33,"author":{"gitId":"evanyan13"},"content":"* Responsibilities:","lastModifiedDate":"2023-09-27"},{"lineNumber":34,"author":{"gitId":"evanyan13"},"content":"  * Code Testing","lastModifiedDate":"2023-10-04"},{"lineNumber":35,"author":{"gitId":"evanyan13"},"content":"  * Supervises Continuous Integration","lastModifiedDate":"2023-10-04"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"evanyan13"},"content":"### Jeremy Yong Zheming","lastModifiedDate":"2023-09-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"migfoo02"},"content":"\u003cimg src\u003d\"images/jeremyyong128.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-10-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"evanyan13"},"content":"[[github](https://github.com/JeremyYong128)] [[portfolio](team/jeremyyong128.md)]","lastModifiedDate":"2023-10-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"evanyan13"},"content":"* Role: Code Implementation \u0026 Quality IC","lastModifiedDate":"2023-10-04"},{"lineNumber":44,"author":{"gitId":"evanyan13"},"content":"* Responsibilities:","lastModifiedDate":"2023-09-27"},{"lineNumber":45,"author":{"gitId":"evanyan13"},"content":"  * Logic Implementation","lastModifiedDate":"2023-10-04"},{"lineNumber":46,"author":{"gitId":"evanyan13"},"content":"  * Reviews Code Quality","lastModifiedDate":"2023-10-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"evanyan13"},"content":"### Miguel Foo Ming Yew","lastModifiedDate":"2023-09-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"migfoo02"},"content":"\u003cimg src\u003d\"images/migfoo02.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-10-06"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"migfoo02"},"content":"[[github](http://github.com/migfoo02)]","lastModifiedDate":"2023-10-02"},{"lineNumber":53,"author":{"gitId":"migfoo02"},"content":"[[portfolio](team/migfoo02.md)]","lastModifiedDate":"2023-10-02"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"evanyan13"},"content":"* Role: Frontend Development IC","lastModifiedDate":"2023-10-04"},{"lineNumber":56,"author":{"gitId":"evanyan13"},"content":"* Responsibilities:","lastModifiedDate":"2023-09-27"},{"lineNumber":57,"author":{"gitId":"evanyan13"},"content":"  * Frontend Development","lastModifiedDate":"2023-10-04"},{"lineNumber":58,"author":{"gitId":"evanyan13"},"content":"  * UI Design","lastModifiedDate":"2023-10-04"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"evanyan13"},"content":"### Yan Weidong (Evan)","lastModifiedDate":"2023-09-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"migfoo02"},"content":"\u003cimg src\u003d\"images/evanyan13.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-10-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"evanyan13"},"content":"[[github](https://github.com/evanyan13)]","lastModifiedDate":"2023-09-27"},{"lineNumber":65,"author":{"gitId":"evanyan13"},"content":"[[portfolio](team/evanyan13.md)]","lastModifiedDate":"2023-09-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"evanyan13"},"content":"* Role: Team Lead","lastModifiedDate":"2023-09-27"},{"lineNumber":68,"author":{"gitId":"evanyan13"},"content":"* Responsibilities:","lastModifiedDate":"2023-10-04"},{"lineNumber":69,"author":{"gitId":"evanyan13"},"content":"  * Overall Coordination","lastModifiedDate":"2023-10-04"},{"lineNumber":70,"author":{"gitId":"evanyan13"},"content":"  * Version \u0026 Release Management","lastModifiedDate":"2023-10-04"},{"lineNumber":71,"author":{"gitId":"evanyan13"},"content":"  * Repo Maintenance \u0026 Integration","lastModifiedDate":"2023-10-04"}],"authorContributionMap":{"czhiruo":2,"evanyan13":30,"peiran18":2,"-":30,"migfoo02":7}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":6,"author":{"gitId":"evanyan13"},"content":"# Developer Guide","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"evanyan13"},"content":"Table of Contents","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"evanyan13"},"content":"### UI Component","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"evanyan13"},"content":"**API:**","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"evanyan13"},"content":"[`Ui.java`](https://github.com/AY2324S1-CS2103T-W12-3/tp/blob/master/src/main/java/seedu/application/ui/Ui.java)","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"evanyan13"},"content":"**Description:**","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"evanyan13"},"content":"The `UI` component is responsible for managing the user interface of the application so that it can respond according to","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"evanyan13"},"content":"the user\u0027s actions or commands entered.","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"evanyan13"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"evanyan13"},"content":"are in the `src/main/resources/view folder`. For example, the layout of","lastModifiedDate":"2023-10-26"},{"lineNumber":25,"author":{"gitId":"evanyan13"},"content":"the [`MainWindow`](https://github.com/AY2324S1-CS2103T-W12-3/tp/blob/master/src/main/java/seedu/application/ui/MainWindow.java)","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"evanyan13"},"content":"is specified","lastModifiedDate":"2023-10-26"},{"lineNumber":27,"author":{"gitId":"evanyan13"},"content":"in [`MainWindow.fxml`](https://github.com/AY2324S1-CS2103T-W12-3/tp/blob/master/src/main/resources/view/MainWindow.fxml).","lastModifiedDate":"2023-10-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"evanyan13"},"content":"**Functionality:**","lastModifiedDate":"2023-10-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":31,"author":{"gitId":"evanyan13"},"content":"The UI component,","lastModifiedDate":"2023-10-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":33,"author":{"gitId":"evanyan13"},"content":"- executes user commands using the `Logic` component.","lastModifiedDate":"2023-10-26"},{"lineNumber":34,"author":{"gitId":"evanyan13"},"content":"- listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2023-10-26"},{"lineNumber":35,"author":{"gitId":"evanyan13"},"content":"- keeps a reference to the `Logic` component, because the UI relies on the Logic to execute commands.","lastModifiedDate":"2023-10-26"},{"lineNumber":36,"author":{"gitId":"evanyan13"},"content":"- depends on some classes in the `Model` component, as it displays Person object residing in the Model.","lastModifiedDate":"2023-10-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":38,"author":{"gitId":"evanyan13"},"content":"**Component Structure:**","lastModifiedDate":"2023-10-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":40,"author":{"gitId":"evanyan13"},"content":"\u003cimg src\u003d\"images/UiClassDiagram.png\" width\u003d\"900\" /\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":42,"author":{"gitId":"evanyan13"},"content":"The UI consists of a `MainWindow` that is made up of parts like `CommandBox` and `ResultDisplay`.","lastModifiedDate":"2023-10-26"},{"lineNumber":43,"author":{"gitId":"evanyan13"},"content":"These parts are always being shown in `MainWindow`, while other parts like `JobListPanel`, `JobDetailsPanel` are only","lastModifiedDate":"2023-10-26"},{"lineNumber":44,"author":{"gitId":"evanyan13"},"content":"visible","lastModifiedDate":"2023-10-26"},{"lineNumber":45,"author":{"gitId":"evanyan13"},"content":"to the user depending on the state of the application e.g. when the job list if not empty, when a job is selected.","lastModifiedDate":"2023-10-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":47,"author":{"gitId":"evanyan13"},"content":"etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities","lastModifiedDate":"2023-10-26"},{"lineNumber":48,"author":{"gitId":"evanyan13"},"content":"between classes that represent parts of the visible GUI.","lastModifiedDate":"2023-10-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":53,"author":{"gitId":"JeremyYong128"},"content":"## **Implementation**","lastModifiedDate":"2023-10-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":55,"author":{"gitId":"czhiruo"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2023-10-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":57,"author":{"gitId":"czhiruo"},"content":"### Add Command","lastModifiedDate":"2023-10-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":59,"author":{"gitId":"czhiruo"},"content":"The add command allows the user to add job applications with various attributes.","lastModifiedDate":"2023-10-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":61,"author":{"gitId":"czhiruo"},"content":"Compulsory attributes are `Company` and `Role`.","lastModifiedDate":"2023-10-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":63,"author":{"gitId":"czhiruo"},"content":"Optional attributes are `Status`, `Industry`, `Deadline` and `JobType`","lastModifiedDate":"2023-10-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":65,"author":{"gitId":"czhiruo"},"content":"#### Implementation","lastModifiedDate":"2023-10-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":67,"author":{"gitId":"czhiruo"},"content":"It is implemented by `AddCommand` and `AddCommandParser`.","lastModifiedDate":"2023-10-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":69,"author":{"gitId":"czhiruo"},"content":"`AddCommandParser` parses the users\u0027 input and checks for the presence of compulsory and optional prefixes.","lastModifiedDate":"2023-10-26"},{"lineNumber":70,"author":{"gitId":"czhiruo"},"content":"The information is then used to create a new Job Application through the `AddCommand`.","lastModifiedDate":"2023-10-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":72,"author":{"gitId":"czhiruo"},"content":"(insert UML diagram here)","lastModifiedDate":"2023-10-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":74,"author":{"gitId":"czhiruo"},"content":"The following sequence/activity diagram illustrates the process of invocation for the AddCommand:","lastModifiedDate":"2023-10-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":76,"author":{"gitId":"czhiruo"},"content":"(insert UML diagram here)","lastModifiedDate":"2023-10-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":78,"author":{"gitId":"czhiruo"},"content":"#### Design Considerations","lastModifiedDate":"2023-10-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":80,"author":{"gitId":"czhiruo"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-10-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":82,"author":{"gitId":"czhiruo"},"content":"### Edit Command","lastModifiedDate":"2023-10-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":84,"author":{"gitId":"czhiruo"},"content":"The edit command allows the user to edit any field in their job application.","lastModifiedDate":"2023-10-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":86,"author":{"gitId":"czhiruo"},"content":"#### Implementation","lastModifiedDate":"2023-10-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":88,"author":{"gitId":"czhiruo"},"content":"It is implemented by `EditCommand` and `EditCommandParser`.","lastModifiedDate":"2023-10-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":90,"author":{"gitId":"evanyan13"},"content":"`EditCommandParser` parses the users\u0027 input and checks for the valid prefixes to determine the field the user wants to","lastModifiedDate":"2023-10-30"},{"lineNumber":91,"author":{"gitId":"evanyan13"},"content":"change.","lastModifiedDate":"2023-10-30"},{"lineNumber":92,"author":{"gitId":"evanyan13"},"content":"The information is then used to create a new Job Application with the updated fields while retaining the unchanged","lastModifiedDate":"2023-10-30"},{"lineNumber":93,"author":{"gitId":"evanyan13"},"content":"fields through the `EditCommand`.","lastModifiedDate":"2023-10-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":95,"author":{"gitId":"czhiruo"},"content":"The following Class Diagram of EditCommand illustrates the interactions between EditCommand and other classes:","lastModifiedDate":"2023-10-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":97,"author":{"gitId":"czhiruo"},"content":"(insert UML diagram here)","lastModifiedDate":"2023-10-26"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":99,"author":{"gitId":"czhiruo"},"content":"The following sequence diagram illustrates the process of invocation for the EditCommand:","lastModifiedDate":"2023-10-26"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":101,"author":{"gitId":"czhiruo"},"content":"(insert UML diagram here)","lastModifiedDate":"2023-10-26"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":103,"author":{"gitId":"czhiruo"},"content":"#### Design Considerations","lastModifiedDate":"2023-10-26"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":105,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-10-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":107,"author":{"gitId":"peiran18"},"content":"### Delete Command","lastModifiedDate":"2023-10-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":109,"author":{"gitId":"peiran18"},"content":"The delete command allows the user to delete a job application using its index.","lastModifiedDate":"2023-10-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":111,"author":{"gitId":"peiran18"},"content":"#### Implementation","lastModifiedDate":"2023-10-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":113,"author":{"gitId":"peiran18"},"content":"The following sequence diagram illustrates the process of invocation for the command:","lastModifiedDate":"2023-10-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":115,"author":{"gitId":"peiran18"},"content":"(insert UML sequence diagram)","lastModifiedDate":"2023-10-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":117,"author":{"gitId":"evanyan13"},"content":"The `DeleteCommand` class implements this command. It accepts an index and deletes the job application at the specified","lastModifiedDate":"2023-10-30"},{"lineNumber":118,"author":{"gitId":"evanyan13"},"content":"index.","lastModifiedDate":"2023-10-30"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":120,"author":{"gitId":"evanyan13"},"content":"The `DeleteCommandParser` class is used to parse the arguments for the command from the user input. If the user input","lastModifiedDate":"2023-10-30"},{"lineNumber":121,"author":{"gitId":"evanyan13"},"content":"does","lastModifiedDate":"2023-10-30"},{"lineNumber":122,"author":{"gitId":"evanyan13"},"content":"not conform to the expected format e.g. the index is out of bounds, a `ParseException` is thrown. If the user input is","lastModifiedDate":"2023-10-30"},{"lineNumber":123,"author":{"gitId":"evanyan13"},"content":"valid,","lastModifiedDate":"2023-10-30"},{"lineNumber":124,"author":{"gitId":"peiran18"},"content":"then `DeleteCommandParser` returns the corresponding `DeleteCommand`.","lastModifiedDate":"2023-10-27"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":126,"author":{"gitId":"peiran18"},"content":"#### Design considerations","lastModifiedDate":"2023-10-27"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":128,"author":{"gitId":"czhiruo"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-10-26"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":130,"author":{"gitId":"JeremyYong128"},"content":"### List Command","lastModifiedDate":"2023-10-26"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":132,"author":{"gitId":"JeremyYong128"},"content":"The list command allows the user to view the list of all job applications.","lastModifiedDate":"2023-10-26"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":134,"author":{"gitId":"JeremyYong128"},"content":"#### Implementation","lastModifiedDate":"2023-10-26"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":136,"author":{"gitId":"JeremyYong128"},"content":"The following sequence diagram illustrates the process of invocation for the command:","lastModifiedDate":"2023-10-26"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":138,"author":{"gitId":"JeremyYong128"},"content":"(insert UML diagram here)","lastModifiedDate":"2023-10-26"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":140,"author":{"gitId":"JeremyYong128"},"content":"The `ListCommand` class implements this command. It sets the predicate for the `filteredList` of `Model` to","lastModifiedDate":"2023-10-26"},{"lineNumber":141,"author":{"gitId":"JeremyYong128"},"content":"`PREDICATE_SHOW_ALL_JOBS` which evaluates any `Job` to true.","lastModifiedDate":"2023-10-26"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":143,"author":{"gitId":"JeremyYong128"},"content":"#### Design Considerations","lastModifiedDate":"2023-10-26"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":145,"author":{"gitId":"JeremyYong128"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-10-26"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":147,"author":{"gitId":"JeremyYong128"},"content":"### Sort Command","lastModifiedDate":"2023-10-26"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":149,"author":{"gitId":"JeremyYong128"},"content":"The sort command allows the user to sort the current list of job applications based on a specified field.","lastModifiedDate":"2023-10-26"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":151,"author":{"gitId":"JeremyYong128"},"content":"#### Implementation","lastModifiedDate":"2023-10-26"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":153,"author":{"gitId":"JeremyYong128"},"content":"The following sequence diagram illustrates the process of invocation for the command:","lastModifiedDate":"2023-10-26"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":155,"author":{"gitId":"JeremyYong128"},"content":"(insert UML sequence diagram)","lastModifiedDate":"2023-10-26"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":157,"author":{"gitId":"JeremyYong128"},"content":"The `SortCommand` class implements this command. It accepts a `FieldComparator` which will be set as the comparator when","lastModifiedDate":"2023-10-26"},{"lineNumber":158,"author":{"gitId":"JeremyYong128"},"content":"`Model::sortJobs` is called.","lastModifiedDate":"2023-10-26"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":160,"author":{"gitId":"JeremyYong128"},"content":"The `SortCommandParser` class is used to parse the arguments for the command from the user input. If the user input does","lastModifiedDate":"2023-10-26"},{"lineNumber":161,"author":{"gitId":"JeremyYong128"},"content":"not conform to the expected format, a `ParseException` is thrown. If the user input is valid, then `SortCommandParser`","lastModifiedDate":"2023-10-26"},{"lineNumber":162,"author":{"gitId":"JeremyYong128"},"content":"generates the corresponding `FieldComparator` which will be set as the comparator when sorting the list.","lastModifiedDate":"2023-10-26"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":164,"author":{"gitId":"JeremyYong128"},"content":"The overriding `FieldComparator::compare` method compares the field indicated by the specifier. To achieve this, the","lastModifiedDate":"2023-10-26"},{"lineNumber":165,"author":{"gitId":"JeremyYong128"},"content":"relevant field method must be invoked.","lastModifiedDate":"2023-10-26"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":167,"author":{"gitId":"JeremyYong128"},"content":"* For alphabetically sorted fields (`Company`, `Role`, `Status`, `Industry`, `JobType`), `String::compareToIgnoreCase`","lastModifiedDate":"2023-10-26"},{"lineNumber":168,"author":{"gitId":"JeremyYong128"},"content":"  is used.","lastModifiedDate":"2023-10-26"},{"lineNumber":169,"author":{"gitId":"JeremyYong128"},"content":"* For chronologically sorted fields (`Deadline`), a custom `compareTo()` method is implemented.","lastModifiedDate":"2023-10-26"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":171,"author":{"gitId":"JeremyYong128"},"content":"#### Design considerations","lastModifiedDate":"2023-10-26"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":173,"author":{"gitId":"migfoo02"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-10-26"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":175,"author":{"gitId":"peiran18"},"content":"### FInd Command","lastModifiedDate":"2023-10-27"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":177,"author":{"gitId":"peiran18"},"content":"The find command allows the user to get a filtered list of job applications.","lastModifiedDate":"2023-10-27"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":179,"author":{"gitId":"migfoo02"},"content":"#### Implementation","lastModifiedDate":"2023-10-26"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":181,"author":{"gitId":"migfoo02"},"content":"The following sequence diagram illustrates the process of invocation for the command:","lastModifiedDate":"2023-10-26"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":183,"author":{"gitId":"migfoo02"},"content":"(insert UML sequence diagram)","lastModifiedDate":"2023-10-26"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":185,"author":{"gitId":"peiran18"},"content":"The `FindCommand` class implements this command.","lastModifiedDate":"2023-10-27"},{"lineNumber":186,"author":{"gitId":"evanyan13"},"content":"It accepts a `FieldContainsKeywordsPredicate` which will be set as the predicate when `Model::updateFilteredJobList` is","lastModifiedDate":"2023-10-30"},{"lineNumber":187,"author":{"gitId":"evanyan13"},"content":"called.","lastModifiedDate":"2023-10-30"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":189,"author":{"gitId":"peiran18"},"content":"The `FindCommandParser` class is used to parse the arguments for the command from the user input. If the user input does","lastModifiedDate":"2023-10-27"},{"lineNumber":190,"author":{"gitId":"peiran18"},"content":"not conform to the expected format, a `ParseException` is thrown. If the user input is valid, then `FindCommandParser`","lastModifiedDate":"2023-10-27"},{"lineNumber":191,"author":{"gitId":"evanyan13"},"content":"generates the corresponding `FindCommand` with a `FieldContainsKeywordsPredicate` which will be set as the predicate","lastModifiedDate":"2023-10-30"},{"lineNumber":192,"author":{"gitId":"evanyan13"},"content":"when filtering through the list.","lastModifiedDate":"2023-10-30"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":194,"author":{"gitId":"migfoo02"},"content":"#### Design considerations","lastModifiedDate":"2023-10-26"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":196,"author":{"gitId":"migfoo02"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-10-26"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":198,"author":{"gitId":"peiran18"},"content":"### Clear Command","lastModifiedDate":"2023-10-27"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":200,"author":{"gitId":"peiran18"},"content":"The clear command allows the user to delete all job applications.","lastModifiedDate":"2023-10-27"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":202,"author":{"gitId":"migfoo02"},"content":"#### Implementation","lastModifiedDate":"2023-10-26"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":204,"author":{"gitId":"migfoo02"},"content":"The following sequence diagram illustrates the process of invocation for the command:","lastModifiedDate":"2023-10-26"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":206,"author":{"gitId":"migfoo02"},"content":"(insert UML sequence diagram)","lastModifiedDate":"2023-10-26"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":208,"author":{"gitId":"peiran18"},"content":"The `ClearCommand` class implements this command.","lastModifiedDate":"2023-10-27"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":210,"author":{"gitId":"migfoo02"},"content":"#### Design considerations","lastModifiedDate":"2023-10-26"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":212,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-10-26"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":214,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"evanyan13"},"content":"* NUS fresh graduates who are looking for jobs","lastModifiedDate":"2023-10-04"},{"lineNumber":221,"author":{"gitId":"evanyan13"},"content":"* Has a need to manage a significant number of job applications","lastModifiedDate":"2023-10-04"},{"lineNumber":222,"author":{"gitId":"evanyan13"},"content":"* Prefers desktop apps over other types","lastModifiedDate":"2023-10-04"},{"lineNumber":223,"author":{"gitId":"evanyan13"},"content":"* Able to type fast","lastModifiedDate":"2023-10-04"},{"lineNumber":224,"author":{"gitId":"evanyan13"},"content":"* Prefers typing to mouse interactions","lastModifiedDate":"2023-10-04"},{"lineNumber":225,"author":{"gitId":"evanyan13"},"content":"* Reasonably comfortable using CLI apps","lastModifiedDate":"2023-10-04"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":227,"author":{"gitId":"evanyan13"},"content":"**Value proposition**: Manage job applications faster than a typical mouse/GUI-driven app.","lastModifiedDate":"2023-10-04"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `***`, Medium (nice to have) - `**`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"evanyan13"},"content":"| Priority | As a … | I want to …                                                                       | So that I can…                                   |","lastModifiedDate":"2023-10-04"},{"lineNumber":234,"author":{"gitId":"peiran18"},"content":"|----------|--------|-----------------------------------------------------------------------------------|--------------------------------------------------|","lastModifiedDate":"2023-10-05"},{"lineNumber":235,"author":{"gitId":"evanyan13"},"content":"| `***`    | user   | add applications I have applied to, including their names and contact information | keep track and manage my job applications        |","lastModifiedDate":"2023-10-04"},{"lineNumber":236,"author":{"gitId":"evanyan13"},"content":"| `***`    | user   | record application deadlines for each job listing                                 | stay organized on application deadlines          |","lastModifiedDate":"2023-10-04"},{"lineNumber":237,"author":{"gitId":"evanyan13"},"content":"| `***`    | user   | mark the status of each application                                               | keep track of application progress               |","lastModifiedDate":"2023-10-04"},{"lineNumber":238,"author":{"gitId":"evanyan13"},"content":"| `***`    | user   | delete job applications that are no longer relevant                               | update my list according to my current interests |","lastModifiedDate":"2023-10-04"},{"lineNumber":239,"author":{"gitId":"evanyan13"},"content":"| `***`    | user   | view all applications I have added                                                |                                                  |","lastModifiedDate":"2023-10-04"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"peiran18"},"content":"------------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-10-05"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":245,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"evanyan13"},"content":"(For all use cases below, the **System** is the `JobFindr` and the **Actor** is the `User`, unless specified otherwise)","lastModifiedDate":"2023-10-04"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":249,"author":{"gitId":"evanyan13"},"content":"**System:** JobFindr","lastModifiedDate":"2023-10-04"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":251,"author":{"gitId":"evanyan13"},"content":"**Actor:** User","lastModifiedDate":"2023-10-04"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"peiran18"},"content":"---","lastModifiedDate":"2023-10-05"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"peiran18"},"content":"**Use case: Add an application**","lastModifiedDate":"2023-10-05"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"czhiruo"},"content":"_MSS_","lastModifiedDate":"2023-10-05"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":259,"author":{"gitId":"czhiruo"},"content":"1. User requests to add an application, specifying the company name","lastModifiedDate":"2023-10-05"},{"lineNumber":260,"author":{"gitId":"czhiruo"},"content":"2. System adds the application","lastModifiedDate":"2023-10-05"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":262,"author":{"gitId":"czhiruo"},"content":"   Use case ends.","lastModifiedDate":"2023-10-05"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":264,"author":{"gitId":"czhiruo"},"content":"_Extensions_","lastModifiedDate":"2023-10-05"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":266,"author":{"gitId":"czhiruo"},"content":"* 1a. The company is not specified","lastModifiedDate":"2023-10-05"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":268,"author":{"gitId":"czhiruo"},"content":"  Use case ends.","lastModifiedDate":"2023-10-05"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"peiran18"},"content":"---","lastModifiedDate":"2023-10-05"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"peiran18"},"content":"**Use case: Delete an application**","lastModifiedDate":"2023-10-05"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":274,"author":{"gitId":"JeremyYong128"},"content":"_MSS_","lastModifiedDate":"2023-10-05"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":276,"author":{"gitId":"JeremyYong128"},"content":"1. User requests to list applications","lastModifiedDate":"2023-10-05"},{"lineNumber":277,"author":{"gitId":"JeremyYong128"},"content":"2. System shows a list of applications","lastModifiedDate":"2023-10-05"},{"lineNumber":278,"author":{"gitId":"JeremyYong128"},"content":"3. User requests to delete an application in the list, specifying an index","lastModifiedDate":"2023-10-05"},{"lineNumber":279,"author":{"gitId":"JeremyYong128"},"content":"4. System deletes the application at the index specified","lastModifiedDate":"2023-10-05"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":281,"author":{"gitId":"JeremyYong128"},"content":"   Use case ends.","lastModifiedDate":"2023-10-05"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":283,"author":{"gitId":"JeremyYong128"},"content":"_Extensions_","lastModifiedDate":"2023-10-05"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":285,"author":{"gitId":"JeremyYong128"},"content":"* 2a. The list is empty.","lastModifiedDate":"2023-10-05"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":287,"author":{"gitId":"JeremyYong128"},"content":"  Use case ends.","lastModifiedDate":"2023-10-05"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":289,"author":{"gitId":"JeremyYong128"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2023-10-05"},{"lineNumber":290,"author":{"gitId":"JeremyYong128"},"content":"    * 3a1. System shows an error message.","lastModifiedDate":"2023-10-05"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":292,"author":{"gitId":"JeremyYong128"},"content":"      Use case resumes at step 3.","lastModifiedDate":"2023-10-05"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":294,"author":{"gitId":"peiran18"},"content":"---","lastModifiedDate":"2023-10-05"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":296,"author":{"gitId":"peiran18"},"content":"**Use case: List applications**","lastModifiedDate":"2023-10-05"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":298,"author":{"gitId":"migfoo02"},"content":"_MSS_","lastModifiedDate":"2023-10-06"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":300,"author":{"gitId":"migfoo02"},"content":"1. User requests to list applications","lastModifiedDate":"2023-10-06"},{"lineNumber":301,"author":{"gitId":"migfoo02"},"content":"2. System shows a list of applications","lastModifiedDate":"2023-10-06"},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":303,"author":{"gitId":"migfoo02"},"content":"   Use case ends.","lastModifiedDate":"2023-10-06"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":305,"author":{"gitId":"peiran18"},"content":"---","lastModifiedDate":"2023-10-05"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":307,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":309,"author":{"gitId":"peiran18"},"content":"------------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-10-05"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":311,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":313,"author":{"gitId":"evanyan13"},"content":"1. Should work on any mainstream OS as long as it has Java 11 or above installed.","lastModifiedDate":"2023-10-04"},{"lineNumber":314,"author":{"gitId":"evanyan13"},"content":"2. A user with above-average typing speed for regular English text (i.e. not code, not system admin commands) should be","lastModifiedDate":"2023-10-14"},{"lineNumber":315,"author":{"gitId":"evanyan13"},"content":"   able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2023-10-14"},{"lineNumber":316,"author":{"gitId":"evanyan13"},"content":"3. The system should respond to the user’s command within two seconds.","lastModifiedDate":"2023-10-04"},{"lineNumber":317,"author":{"gitId":"evanyan13"},"content":"4. The user interface should be intuitive enough for users who are first-time users.","lastModifiedDate":"2023-10-04"},{"lineNumber":318,"author":{"gitId":"evanyan13"},"content":"5. The project is expected to adhere to a schedule that delivers a milestone set every two weeks.","lastModifiedDate":"2023-10-04"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":320,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":322,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":324,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"czhiruo":31,"evanyan13":63,"peiran18":25,"-":153,"JeremyYong128":38,"migfoo02":14}},{"path":"docs/SettingUp.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Setting up and getting started","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"## Setting up the project in your computer","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2020-06-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Follow the steps in the following guide precisely. Things will not work out if you deviate in some steps.","lastModifiedDate":"2020-06-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"First, **fork** this repo, and **clone** the fork into your computer.","lastModifiedDate":"2020-06-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"If you plan to use Intellij IDEA (highly recommended):","lastModifiedDate":"2020-06-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"1. **Configure the JDK**: Follow the guide [_[se-edu/guides] IDEA: Configuring the JDK_](https://se-education.org/guides/tutorials/intellijJdk.html) to to ensure Intellij is configured to use **JDK 11**.","lastModifiedDate":"2020-06-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"1. **Import the project as a Gradle project**: Follow the guide [_[se-edu/guides] IDEA: Importing a Gradle project_](https://se-education.org/guides/tutorials/intellijImportGradleProject.html) to import the project into IDEA.\u003cbr\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  :exclamation: Note: Importing a Gradle project is slightly different from importing a normal Java project.","lastModifiedDate":"2020-06-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"1. **Verify the setup**:","lastModifiedDate":"2020-06-07"},{"lineNumber":26,"author":{"gitId":"evanyan13"},"content":"   1. Run the `seedu.application.Main` and try a few commands.","lastModifiedDate":"2023-10-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"   1. [Run the tests](Testing.md) to ensure they all pass.","lastModifiedDate":"2020-06-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"## Before writing code","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"1. **Configure the coding style**","lastModifiedDate":"2020-06-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"   If using IDEA, follow the guide [_[se-edu/guides] IDEA: Configuring the code style_](https://se-education.org/guides/tutorials/intellijCodeStyle.html) to set up IDEA\u0027s coding style to match ours.","lastModifiedDate":"2020-09-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"   Optionally, you can follow the guide [_[se-edu/guides] Using Checkstyle_](https://se-education.org/guides/tutorials/checkstyle.html) to find how to use the CheckStyle within IDEA e.g., to report problems _as_ you write code.","lastModifiedDate":"2020-06-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"1. **Set up CI**","lastModifiedDate":"2020-06-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"   This project comes with a GitHub Actions config files (in `.github/workflows` folder). When GitHub detects those files, it will run the CI for your project automatically at each push to the `master` branch or to any PR. No set up required.","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"1. **Learn the design**","lastModifiedDate":"2020-06-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"   When you are ready to start coding, we recommend that you get some sense of the overall design by reading about [AddressBook’s architecture](DeveloperGuide.md#architecture).","lastModifiedDate":"2020-06-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"1. **Do the tutorials**","lastModifiedDate":"2020-06-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"   These tutorials will help you get acquainted with the codebase.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"   * [Tracing code](tutorials/TracingCode.md)","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"   * [Adding a new command](tutorials/AddRemark.md)","lastModifiedDate":"2020-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"   * [Removing fields](tutorials/RemovingFields.md)","lastModifiedDate":"2021-08-01"}],"authorContributionMap":{"evanyan13":1,"-":54}},{"path":"docs/Testing.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Testing guide","lastModifiedDate":"2020-06-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"## Running tests","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"There are two ways to run tests.","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"* **Method 1: Using IntelliJ JUnit test runner**","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  * To run all tests, right-click on the `src/test/java` folder and choose `Run \u0027All Tests\u0027`","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  * To run a subset of tests, you can right-click on a test package,","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    test class, or a test and choose `Run \u0027ABC\u0027`","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* **Method 2: Using Gradle**","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  * Open a console and run the command `gradlew clean test` (Mac/Linux: `./gradlew clean test`)","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-secondary\"\u003e:link: **Link**: Read [this Gradle Tutorial from the se-edu/guides](https://se-education.org/guides/tutorials/gradle.html) to learn more about using Gradle.","lastModifiedDate":"2020-06-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"## Types of tests","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"This project has three types of tests:","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"1. *Unit tests* targeting the lowest level methods/classes.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"evanyan13"},"content":"   e.g. `seedu.application.commons.StringUtilTest`","lastModifiedDate":"2023-10-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"1. *Integration tests* that are checking the integration of multiple code units (those code units are assumed to be working).\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"evanyan13"},"content":"   e.g. `seedu.application.storage.StorageManagerTest`","lastModifiedDate":"2023-10-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"1. Hybrids of unit and integration tests. These test are checking multiple code units as well as how the are connected together.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"evanyan13"},"content":"   e.g. `seedu.application.logic.LogicManagerTest`","lastModifiedDate":"2023-10-10"}],"authorContributionMap":{"evanyan13":3,"-":33}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2023-10-04"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2023-10-04"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2023-10-04"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2023-10-04"},{"lineNumber":7,"author":{"gitId":"evanyan13"},"content":"  {:toc}","lastModifiedDate":"2023-10-04"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":9,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-10-04"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"evanyan13"},"content":"JobFindr is a **Contact Book app** for NUS fresh graduates who are looking for jobs.","lastModifiedDate":"2023-10-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":13,"author":{"gitId":"evanyan13"},"content":"It simplifies _contact management_, provides _reminders_ and enhances _organisation_, helping users _stay competitive_","lastModifiedDate":"2023-10-14"},{"lineNumber":14,"author":{"gitId":"evanyan13"},"content":"in the job market.","lastModifiedDate":"2023-10-14"},{"lineNumber":15,"author":{"gitId":"evanyan13"},"content":"The project simulates an ongoing software project for a desktop application (called _JobFindr_) used for managing job","lastModifiedDate":"2023-10-14"},{"lineNumber":16,"author":{"gitId":"evanyan13"},"content":"applications.","lastModifiedDate":"2023-10-14"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"evanyan13"},"content":"2. Download the latest `jobfindr.jar` from [here](https://github.com/AY2324S1-CS2103T-W12-3/tp/releases).","lastModifiedDate":"2023-10-04"},{"lineNumber":24,"author":{"gitId":"evanyan13"},"content":"3. Copy the file to the folder you want to use as the _home folder_ for your AddressBook.","lastModifiedDate":"2023-10-03"},{"lineNumber":25,"author":{"gitId":"JeremyYong128"},"content":"4. Open a command terminal, `cd` into the folder you put the jar file in, and enter the command `java -jar jobfindr.jar`","lastModifiedDate":"2023-10-31"},{"lineNumber":26,"author":{"gitId":"JeremyYong128"},"content":"   to run the application.","lastModifiedDate":"2023-10-31"},{"lineNumber":27,"author":{"gitId":"JeremyYong128"},"content":"5. A GUI similar to the below should appear in a few seconds. Note that the app contains some sample data.\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2023-10-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"JeremyYong128"},"content":"6. Type the command in the command box and press Enter to execute it. For example, typing **`help`** and pressing Enter will","lastModifiedDate":"2023-10-31"},{"lineNumber":31,"author":{"gitId":"evanyan13"},"content":"   open the help window.\u003cbr\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"peiran18"},"content":"    * `list` : Lists all applications.","lastModifiedDate":"2023-10-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"peiran18"},"content":"    * `add c/Microsoft r/Software Engineer d/Nov 12 2022 1200 i/Technology s/Pending` :","lastModifiedDate":"2023-10-27"},{"lineNumber":37,"author":{"gitId":"peiran18"},"content":"      Adds an application for the company named `Microsoft` to the Application Book.","lastModifiedDate":"2023-10-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"peiran18"},"content":"    * `delete 3` : Deletes the 3rd application shown in the current list.","lastModifiedDate":"2023-10-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"peiran18"},"content":"    * `clear` : Deletes all applications.","lastModifiedDate":"2023-10-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    * `exit` : Exits the app.","lastModifiedDate":"2023-01-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"JeremyYong128"},"content":"7. Refer to \"[Key Information](#key-information)\" below for details of each command.","lastModifiedDate":"2023-10-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"JeremyYong128"},"content":"## Key Information","lastModifiedDate":"2023-10-31"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"JeremyYong128"},"content":"### User interface","lastModifiedDate":"2023-10-31"},{"lineNumber":54,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":55,"author":{"gitId":"JeremyYong128"},"content":"### Structure of a job application","lastModifiedDate":"2023-10-31"},{"lineNumber":56,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":57,"author":{"gitId":"JeremyYong128"},"content":"| Field    | Prefix | Remarks                                                                                                             | Optional? | Sort Order    |","lastModifiedDate":"2023-10-31"},{"lineNumber":58,"author":{"gitId":"JeremyYong128"},"content":"|----------|--------|---------------------------------------------------------------------------------------------------------------------|-----------|---------------|","lastModifiedDate":"2023-10-31"},{"lineNumber":59,"author":{"gitId":"JeremyYong128"},"content":"| Company  | `c/`   | No restrictions                                                                                                     | No        | Alphabetical  |","lastModifiedDate":"2023-10-31"},{"lineNumber":60,"author":{"gitId":"JeremyYong128"},"content":"| Role     | `r/`   | Must only contain alphanumeric characters and spaces                                                                | No        | Alphabetical  |","lastModifiedDate":"2023-10-31"},{"lineNumber":61,"author":{"gitId":"JeremyYong128"},"content":"| Status   | `s/`   | Possible values in \"[Valid statuses and job types](#valid-statuses-and-job-types)\"                                  | No        | Alphabetical  |","lastModifiedDate":"2023-10-31"},{"lineNumber":62,"author":{"gitId":"JeremyYong128"},"content":"| Industry | `i/`   | Must start with an alphanumeric character                                                                           | Yes       | Alphabetical  |","lastModifiedDate":"2023-10-31"},{"lineNumber":63,"author":{"gitId":"JeremyYong128"},"content":"| Deadline | `d/`   | Must be in the format MMM dd yyyy HHmm (e.g. Dec 31 2030 1200) and cannot be earlier than the current date and time | Yes       | Chronological |","lastModifiedDate":"2023-10-31"},{"lineNumber":64,"author":{"gitId":"JeremyYong128"},"content":"| Type     | `t/`   | Possible values in \"[Valid statuses and job types](#valid-statuses-and-job-types)\"                                  |           |               |","lastModifiedDate":"2023-10-31"},{"lineNumber":65,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":66,"author":{"gitId":"JeremyYong128"},"content":"### Valid statuses and job types","lastModifiedDate":"2023-10-31"},{"lineNumber":67,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":68,"author":{"gitId":"JeremyYong128"},"content":"The following are valid statuses:","lastModifiedDate":"2023-10-31"},{"lineNumber":69,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":70,"author":{"gitId":"JeremyYong128"},"content":"| Status            | Remark                                                                                  |","lastModifiedDate":"2023-10-31"},{"lineNumber":71,"author":{"gitId":"JeremyYong128"},"content":"|-------------------|-----------------------------------------------------------------------------------------|","lastModifiedDate":"2023-10-31"},{"lineNumber":72,"author":{"gitId":"JeremyYong128"},"content":"| `TO_BE_SUBMITTED` | An application that you plan to apply for. The default status if no status is specified |","lastModifiedDate":"2023-10-31"},{"lineNumber":73,"author":{"gitId":"JeremyYong128"},"content":"| `PENDING`         | An application that you have applied for but have yet to receive a result               |","lastModifiedDate":"2023-10-31"},{"lineNumber":74,"author":{"gitId":"JeremyYong128"},"content":"| `APPROVED`        | An application that you have received a job offer for                                   |","lastModifiedDate":"2023-10-31"},{"lineNumber":75,"author":{"gitId":"JeremyYong128"},"content":"| `REJECTED`        | An application that you have been rejected for                                          |","lastModifiedDate":"2023-10-31"},{"lineNumber":76,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":77,"author":{"gitId":"JeremyYong128"},"content":"The following are valid job types:","lastModifiedDate":"2023-10-31"},{"lineNumber":78,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":79,"author":{"gitId":"JeremyYong128"},"content":"| Job Type     | Remark              |","lastModifiedDate":"2023-10-31"},{"lineNumber":80,"author":{"gitId":"JeremyYong128"},"content":"|--------------|---------------------|","lastModifiedDate":"2023-10-31"},{"lineNumber":81,"author":{"gitId":"JeremyYong128"},"content":"| `FULL_TIME`  | A full time job     |","lastModifiedDate":"2023-10-31"},{"lineNumber":82,"author":{"gitId":"JeremyYong128"},"content":"| `PART_TIME`  | A part time job     |","lastModifiedDate":"2023-10-31"},{"lineNumber":83,"author":{"gitId":"JeremyYong128"},"content":"| `INTERNSHIP` | An internship       |","lastModifiedDate":"2023-10-31"},{"lineNumber":84,"author":{"gitId":"JeremyYong128"},"content":"| `TEMPORARY`  | A temporary job     |","lastModifiedDate":"2023-10-31"},{"lineNumber":85,"author":{"gitId":"JeremyYong128"},"content":"| `CONTRACT`   | A contract job      |","lastModifiedDate":"2023-10-31"},{"lineNumber":86,"author":{"gitId":"JeremyYong128"},"content":"| `FREELANCE`  | A freelance job     |","lastModifiedDate":"2023-10-31"},{"lineNumber":87,"author":{"gitId":"JeremyYong128"},"content":"| `VOLUNTEER`  | A volunteered job   |","lastModifiedDate":"2023-10-31"},{"lineNumber":88,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":89,"author":{"gitId":"JeremyYong128"},"content":"### Structure of an interview","lastModifiedDate":"2023-10-31"},{"lineNumber":90,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":91,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":92,"author":{"gitId":"JeremyYong128"},"content":"### Command format","lastModifiedDate":"2023-10-31"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"peiran18"},"content":"* If you are using a PDF version of this document, be careful when copying and pasting commands that span multiple lines","lastModifiedDate":"2023-10-27"},{"lineNumber":95,"author":{"gitId":"peiran18"},"content":"  as space characters surrounding line-breaks may be omitted when copied over to the application.","lastModifiedDate":"2023-10-27"},{"lineNumber":96,"author":{"gitId":"peiran18"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":97,"author":{"gitId":"peiran18"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":98,"author":{"gitId":"JeremyYong128"},"content":"* Words in upper case are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2023-10-31"},{"lineNumber":99,"author":{"gitId":"peiran18"},"content":"    * e.g. in `add c/COMPANY`, `COMPANY` is a parameter which can be used as `add c/Google`.","lastModifiedDate":"2023-10-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"peiran18"},"content":"    * e.g. `c/COMPANY [s/STATUS]` can be used as `c/Google s/Pending` or as `c/Google`.","lastModifiedDate":"2023-10-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"peiran18"},"content":"    * e.g. if the command specifies `c/COMPANY r/ROLE`, `r/ROLE c/COMPANY` is also acceptable.","lastModifiedDate":"2023-10-27"},{"lineNumber":108,"author":{"gitId":"JeremyYong128"},"content":"    * When `INDEX` is required, it has to be the first parameter.","lastModifiedDate":"2023-10-31"},{"lineNumber":109,"author":{"gitId":"peiran18"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"peiran18"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `exit` and `clear`) will be","lastModifiedDate":"2023-10-27"},{"lineNumber":112,"author":{"gitId":"evanyan13"},"content":"  ignored.\u003cbr\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":113,"author":{"gitId":"peiran18"},"content":"    * e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2023-10-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":115,"author":{"gitId":"JeremyYong128"},"content":"* The same prefix cannot be used multiple times in the same command. ","lastModifiedDate":"2023-10-31"},{"lineNumber":116,"author":{"gitId":"JeremyYong128"},"content":"  * e.g. `add r/Cleaner c/Google c/Microsoft` is an invalid input. ","lastModifiedDate":"2023-10-31"},{"lineNumber":117,"author":{"gitId":"peiran18"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":118,"author":{"gitId":"peiran18"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":119,"author":{"gitId":"evanyan13"},"content":"* `INDEX` refers to the index number of the chosen application in the displayed application list and must be a _positive","lastModifiedDate":"2023-10-30"},{"lineNumber":120,"author":{"gitId":"evanyan13"},"content":"  integer_ 1, 2, 3, …","lastModifiedDate":"2023-10-30"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"peiran18"},"content":"---","lastModifiedDate":"2023-09-30"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"peiran18"},"content":"### Adding an application : `add`","lastModifiedDate":"2023-09-30"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"JeremyYong128"},"content":"Adds a job application to the list.","lastModifiedDate":"2023-10-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"peiran18"},"content":"**Format:** `add c/COMPANY r/ROLE [d/DEADLINE] [s/STATUS] [i/INDUSTRY] [t/JOB_TYPE]`","lastModifiedDate":"2023-10-27"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"peiran18"},"content":"**Examples:**","lastModifiedDate":"2023-09-30"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":134,"author":{"gitId":"peiran18"},"content":"* `add c/Microsoft r/Software Engineer d/Nov 12 2022 1200 i/Technology s/Pending`","lastModifiedDate":"2023-10-27"},{"lineNumber":135,"author":{"gitId":"czhiruo"},"content":"  Adds a company called Microsoft, with the role Software Engineer in the technology industry,","lastModifiedDate":"2023-10-26"},{"lineNumber":136,"author":{"gitId":"peiran18"},"content":"  deadline Nov 12 2022 1200 and status as pending.","lastModifiedDate":"2023-10-20"},{"lineNumber":137,"author":{"gitId":"peiran18"},"content":"* `add c/Google r/Cleaner`","lastModifiedDate":"2023-10-20"},{"lineNumber":138,"author":{"gitId":"JeremyYong128"},"content":"  Adds a company called Google, with the role Cleaner and status `TO_BE_SUBMITTED`.","lastModifiedDate":"2023-10-31"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"evanyan13"},"content":"**UI mockup:**","lastModifiedDate":"2023-10-04"},{"lineNumber":141,"author":{"gitId":"evanyan13"},"content":"![AddCommand](images/user-guide/AddCommand.png)","lastModifiedDate":"2023-10-04"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":143,"author":{"gitId":"peiran18"},"content":"---","lastModifiedDate":"2023-09-30"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"czhiruo"},"content":"### Editing an application : `edit`","lastModifiedDate":"2023-10-26"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":147,"author":{"gitId":"czhiruo"},"content":"Edits an application in the list.","lastModifiedDate":"2023-10-26"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":149,"author":{"gitId":"peiran18"},"content":"**Format:** `edit INDEX [c/COMPANY] [r/ROLE] [d/DEADLINE] [s/STATUS] [i/INDUSTRY] [t/JOB_TYPE]`","lastModifiedDate":"2023-10-27"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":151,"author":{"gitId":"peiran18"},"content":"* Edits the application to the company at the specified `INDEX`.","lastModifiedDate":"2023-10-27"},{"lineNumber":152,"author":{"gitId":"peiran18"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2023-10-27"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":154,"author":{"gitId":"czhiruo"},"content":"**Examples:**","lastModifiedDate":"2023-10-26"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":156,"author":{"gitId":"czhiruo"},"content":"* `edit 1 r/Announcer`","lastModifiedDate":"2023-10-26"},{"lineNumber":157,"author":{"gitId":"peiran18"},"content":"  Changes the role of the 1st job application to an announcer.","lastModifiedDate":"2023-10-27"},{"lineNumber":158,"author":{"gitId":"czhiruo"},"content":"* `edit 5 s/approved t/volunteer`","lastModifiedDate":"2023-10-26"},{"lineNumber":159,"author":{"gitId":"JeremyYong128"},"content":"  Changes the status and job type of the 5th job application to `APPROVED` and volunteer respectively.","lastModifiedDate":"2023-10-31"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":161,"author":{"gitId":"czhiruo"},"content":"---","lastModifiedDate":"2023-10-26"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":163,"author":{"gitId":"peiran18"},"content":"### Deleting an application : `delete`","lastModifiedDate":"2023-09-30"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":165,"author":{"gitId":"peiran18"},"content":"Deletes the specified application from the list.","lastModifiedDate":"2023-09-30"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":167,"author":{"gitId":"peiran18"},"content":"**Format:** `delete INDEX`","lastModifiedDate":"2023-09-30"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":169,"author":{"gitId":"peiran18"},"content":"* Deletes the application to the company at the specified `INDEX`.","lastModifiedDate":"2023-09-30"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":171,"author":{"gitId":"peiran18"},"content":"**Examples:**","lastModifiedDate":"2023-09-30"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":173,"author":{"gitId":"peiran18"},"content":"* `list` followed by `delete 2`","lastModifiedDate":"2023-09-30"},{"lineNumber":174,"author":{"gitId":"peiran18"},"content":"  Deletes the 2nd application in the list.","lastModifiedDate":"2023-09-30"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":176,"author":{"gitId":"evanyan13"},"content":"**UI mockup:**","lastModifiedDate":"2023-10-04"},{"lineNumber":177,"author":{"gitId":"evanyan13"},"content":"![DeleteCommand](images/user-guide/DeleteCommand.png)","lastModifiedDate":"2023-10-04"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":179,"author":{"gitId":"peiran18"},"content":"---","lastModifiedDate":"2023-09-30"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":181,"author":{"gitId":"peiran18"},"content":"### Listing all applications : `list`","lastModifiedDate":"2023-09-30"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":183,"author":{"gitId":"peiran18"},"content":"Shows a list of all applications in the list in alphabetical order.","lastModifiedDate":"2023-10-27"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":185,"author":{"gitId":"peiran18"},"content":"**Format:** `list`","lastModifiedDate":"2023-09-30"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":187,"author":{"gitId":"peiran18"},"content":"**UI mockup:**","lastModifiedDate":"2023-09-30"},{"lineNumber":188,"author":{"gitId":"evanyan13"},"content":"![ListCommand](images/user-guide/ListCommand.png)","lastModifiedDate":"2023-10-04"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":190,"author":{"gitId":"peiran18"},"content":"---","lastModifiedDate":"2023-09-30"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":192,"author":{"gitId":"JeremyYong128"},"content":"### Finding an application : `find`","lastModifiedDate":"2023-10-14"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":194,"author":{"gitId":"JeremyYong128"},"content":"Finds all applications with the specified fields containing any of the given keywords.","lastModifiedDate":"2023-10-24"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":196,"author":{"gitId":"peiran18"},"content":"**Format:** `find [c/COMPANY] [r/ROLE] [d/DEADLINE] [s/STATUS] [i/INDUSTRY] [t/JOB_TYPE]`","lastModifiedDate":"2023-10-27"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":198,"author":{"gitId":"JeremyYong128"},"content":"* At least one optional field must be provided.","lastModifiedDate":"2023-10-24"},{"lineNumber":199,"author":{"gitId":"JeremyYong128"},"content":"* An application will be listed if at least one of the keywords match. The keywords are case-insensitive.","lastModifiedDate":"2023-10-24"},{"lineNumber":200,"author":{"gitId":"peiran18"},"content":"* Applications with partially matching keywords will not be listed.","lastModifiedDate":"2023-10-27"},{"lineNumber":201,"author":{"gitId":"peiran18"},"content":"    * e.g. searching for the keyword \"Goo\" will not list applications with \"Google\".","lastModifiedDate":"2023-10-27"},{"lineNumber":202,"author":{"gitId":"JeremyYong128"},"content":"* Searches for Deadline must be in the format `MMM DD YYYY HHMM`.","lastModifiedDate":"2023-10-24"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":204,"author":{"gitId":"JeremyYong128"},"content":"**Examples:**","lastModifiedDate":"2023-10-24"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":206,"author":{"gitId":"JeremyYong128"},"content":"* `find c/Google`","lastModifiedDate":"2023-10-24"},{"lineNumber":207,"author":{"gitId":"JeremyYong128"},"content":"  Finds all applications with the keyword \"Google\" in the company name.","lastModifiedDate":"2023-10-24"},{"lineNumber":208,"author":{"gitId":"migfoo02"},"content":"* `find r/Software Engineer`","lastModifiedDate":"2023-10-30"},{"lineNumber":209,"author":{"gitId":"migfoo02"},"content":"  Finds all applications with the keyword \"Software Engineer\" in the role.","lastModifiedDate":"2023-10-30"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":211,"author":{"gitId":"JeremyYong128"},"content":"---","lastModifiedDate":"2023-10-24"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":213,"author":{"gitId":"JeremyYong128"},"content":"### Sorting the list : `sort`","lastModifiedDate":"2023-10-24"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":215,"author":{"gitId":"JeremyYong128"},"content":"Sorts the list based on the field specifier provided.","lastModifiedDate":"2023-10-24"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":217,"author":{"gitId":"peiran18"},"content":"**Format:** `sort SPECIFIER`","lastModifiedDate":"2023-10-27"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":219,"author":{"gitId":"peiran18"},"content":"* A single valid `SPECIFIER` must be provided.","lastModifiedDate":"2023-10-27"},{"lineNumber":220,"author":{"gitId":"JeremyYong128"},"content":"* For optional fields, applications with empty fields will be listed first.","lastModifiedDate":"2023-10-24"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":222,"author":{"gitId":"JeremyYong128"},"content":"**Examples:**","lastModifiedDate":"2023-10-14"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":224,"author":{"gitId":"JeremyYong128"},"content":"* `sort -d`","lastModifiedDate":"2023-10-24"},{"lineNumber":225,"author":{"gitId":"JeremyYong128"},"content":"  Lists all applications sorted by deadline.","lastModifiedDate":"2023-10-24"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":227,"author":{"gitId":"migfoo02"},"content":"* `sort -r`","lastModifiedDate":"2023-10-30"},{"lineNumber":228,"author":{"gitId":"migfoo02"},"content":"  Lists all applications sorted by role.","lastModifiedDate":"2023-10-30"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":230,"author":{"gitId":"peiran18"},"content":"---","lastModifiedDate":"2023-10-20"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":232,"author":{"gitId":"czhiruo"},"content":"### Asking for help: `help`","lastModifiedDate":"2023-10-16"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":234,"author":{"gitId":"czhiruo"},"content":"Shows a list of commands and how they can be used.","lastModifiedDate":"2023-10-16"},{"lineNumber":235,"author":{"gitId":"czhiruo"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":236,"author":{"gitId":"czhiruo"},"content":"**Format:** `help`","lastModifiedDate":"2023-10-16"},{"lineNumber":237,"author":{"gitId":"czhiruo"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":238,"author":{"gitId":"peiran18"},"content":"---","lastModifiedDate":"2023-10-27"},{"lineNumber":239,"author":{"gitId":"peiran18"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":240,"author":{"gitId":"peiran18"},"content":"### Clearing all applications: `clear`","lastModifiedDate":"2023-10-27"},{"lineNumber":241,"author":{"gitId":"peiran18"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":242,"author":{"gitId":"peiran18"},"content":"Clears all applications from the application book.","lastModifiedDate":"2023-10-27"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":244,"author":{"gitId":"peiran18"},"content":"**Format:** `clear`","lastModifiedDate":"2023-10-27"},{"lineNumber":245,"author":{"gitId":"peiran18"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":246,"author":{"gitId":"peiran18"},"content":"---","lastModifiedDate":"2023-10-27"},{"lineNumber":247,"author":{"gitId":"peiran18"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":248,"author":{"gitId":"peiran18"},"content":"### Exiting the programme: `exit`","lastModifiedDate":"2023-10-27"},{"lineNumber":249,"author":{"gitId":"czhiruo"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":250,"author":{"gitId":"peiran18"},"content":"Exits the program.","lastModifiedDate":"2023-10-27"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":252,"author":{"gitId":"peiran18"},"content":"**Format:** `exit`","lastModifiedDate":"2023-10-27"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":254,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-09-08"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":256,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"evanyan13"},"content":"| Action     | Format                                                                                   |","lastModifiedDate":"2023-10-03"},{"lineNumber":259,"author":{"gitId":"peiran18"},"content":"|------------|------------------------------------------------------------------------------------------|","lastModifiedDate":"2023-10-30"},{"lineNumber":260,"author":{"gitId":"peiran18"},"content":"| **Add**    | `add [c/COMPANY] [r/ROLE] [d/DEADLINE] [s/STATUS] [i/INDUSTRY] [t/JOB_TYPE]`             |","lastModifiedDate":"2023-10-30"},{"lineNumber":261,"author":{"gitId":"peiran18"},"content":"| **Edit**   | `edit INDEX [c/COMPANY] [r/ROLE] [d/DEADLINE] [s/STATUS] [i/INDUSTRY] [t/JOB_TYPE]`      |","lastModifiedDate":"2023-10-27"},{"lineNumber":262,"author":{"gitId":"evanyan13"},"content":"| **Delete** | `delete INDEX`                                                                           |","lastModifiedDate":"2023-10-03"},{"lineNumber":263,"author":{"gitId":"evanyan13"},"content":"| **List**   | `list`                                                                                   |","lastModifiedDate":"2023-10-03"},{"lineNumber":264,"author":{"gitId":"peiran18"},"content":"| **Find**   | `find [KEYWORDS] [c/COMPANY] [r/ROLE] [d/DEADLINE] [s/STATUS] [i/INDUSTRY] [t/JOB_TYPE]` |","lastModifiedDate":"2023-10-27"},{"lineNumber":265,"author":{"gitId":"peiran18"},"content":"| **Sort**   | `sort FIELD_SPECIFIER`                                                                   |","lastModifiedDate":"2023-10-27"},{"lineNumber":266,"author":{"gitId":"czhiruo"},"content":"| **Help**   | `help`                                                                                   |","lastModifiedDate":"2023-10-16"},{"lineNumber":267,"author":{"gitId":"peiran18"},"content":"| **Clear**  | `clear`                                                                                  |","lastModifiedDate":"2023-10-27"},{"lineNumber":268,"author":{"gitId":"peiran18"},"content":"| **Exit**   | `exit`                                                                                   |","lastModifiedDate":"2023-10-27"}],"authorContributionMap":{"czhiruo":14,"evanyan13":20,"peiran18":67,"-":95,"JeremyYong128":68,"migfoo02":4}},{"path":"docs/diagrams/UiClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor UI_COLOR_T4","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package UI \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"evanyan13"},"content":"Interface Ui \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nUiPart\" as UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class UiManager","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class MainWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class HelpWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"evanyan13"},"content":"Class JobListPanel","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"evanyan13"},"content":"Class JobCard","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"evanyan13"},"content":"Class JobDetailsPanel","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"evanyan13"},"content":"Class InterviewCard","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"package Model \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Class HiddenModel #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"package Logic \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"Class HiddenLogic #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"UiManager .left.|\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"UiManager -down-\u003e \"1\" MainWindow","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e  \"1\" CommandBox","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" ResultDisplay","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"evanyan13"},"content":"MainWindow *-down-\u003e \"1\" JobListPanel","lastModifiedDate":"2023-10-26"},{"lineNumber":37,"author":{"gitId":"evanyan13"},"content":"MainWindow *-down-\u003e \"1\" JobDetailsPanel","lastModifiedDate":"2023-10-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"MainWindow --\u003e \"0..1\" HelpWindow","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":40,"author":{"gitId":"evanyan13"},"content":"JobListPanel -down-\u003e \"*\" JobCard","lastModifiedDate":"2023-10-26"},{"lineNumber":41,"author":{"gitId":"evanyan13"},"content":"JobDetailsPanel -down-\u003e \"*\" InterviewCard","lastModifiedDate":"2023-10-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"MainWindow -left-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"ResultDisplay --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"CommandBox --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"evanyan13"},"content":"JobListPanel --|\u003e UiPart","lastModifiedDate":"2023-10-26"},{"lineNumber":48,"author":{"gitId":"evanyan13"},"content":"JobCard --|\u003e UiPart","lastModifiedDate":"2023-10-26"},{"lineNumber":49,"author":{"gitId":"evanyan13"},"content":"InterviewCard --|\u003e UiPart","lastModifiedDate":"2023-10-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"HelpWindow --|\u003e UiPart","lastModifiedDate":"2021-07-31"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"evanyan13"},"content":"JobCard ..down.\u003e Model","lastModifiedDate":"2023-10-26"},{"lineNumber":53,"author":{"gitId":"evanyan13"},"content":"InterviewCard ..down.\u003e Model","lastModifiedDate":"2023-10-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"UiManager -right-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":55,"author":{"gitId":"evanyan13"},"content":"MainWindow -right-\u003e Logic","lastModifiedDate":"2023-10-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"evanyan13"},"content":"JobListPanel -[hidden]left- HelpWindow","lastModifiedDate":"2023-10-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"HelpWindow -[hidden]left- CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"CommandBox -[hidden]left- ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"MainWindow -[hidden]-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"evanyan13":16,"-":46}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"evanyan13"},"content":"title: JobFindr","lastModifiedDate":"2023-10-04"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"[![CI Status](https://github.com/se-edu/addressbook-level3/workflows/Java%20CI/badge.svg)](https://github.com/se-edu/addressbook-level3/actions)","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"[![codecov](https://codecov.io/gh/se-edu/addressbook-level3/branch/master/graph/badge.svg)](https://codecov.io/gh/se-edu/addressbook-level3)","lastModifiedDate":"2020-08-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"evanyan13"},"content":"**JobFindr is a desktop application for managing your contact details.** While it has a GUI, most of the user interactions happen using a CLI (Command Line Interface).","lastModifiedDate":"2023-10-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"evanyan13"},"content":"* If you are interested in using JobFindr, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2023-10-04"},{"lineNumber":14,"author":{"gitId":"evanyan13"},"content":"* If you are interested about developing JobFindr, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2023-10-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"evanyan13":4,"-":15}},{"path":"docs/team/czhiruo.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"czhiruo"},"content":"---","lastModifiedDate":"2023-10-01"},{"lineNumber":2,"author":{"gitId":"czhiruo"},"content":"layout: page","lastModifiedDate":"2023-10-01"},{"lineNumber":3,"author":{"gitId":"czhiruo"},"content":"title: Chen Zhiruo\u0027s Project Portfolio Page","lastModifiedDate":"2023-10-01"},{"lineNumber":4,"author":{"gitId":"czhiruo"},"content":"---","lastModifiedDate":"2023-10-01"},{"lineNumber":5,"author":{"gitId":"czhiruo"},"content":"### Project: Job Findr","lastModifiedDate":"2023-10-01"},{"lineNumber":6,"author":{"gitId":"czhiruo"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":7,"author":{"gitId":"czhiruo"},"content":"JobFindr - is a desktop application that offers NUS fresh graduates an efficient Contact Book app for job hunting.","lastModifiedDate":"2023-10-01"},{"lineNumber":8,"author":{"gitId":"czhiruo"},"content":"It simplifies contact management, provides reminders and enhances organisation, helping users stay competitive in the job market.","lastModifiedDate":"2023-10-01"},{"lineNumber":9,"author":{"gitId":"czhiruo"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":10,"author":{"gitId":"czhiruo"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-10-01"},{"lineNumber":11,"author":{"gitId":"czhiruo"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":12,"author":{"gitId":"czhiruo"},"content":"* **New Feature**:","lastModifiedDate":"2023-10-01"},{"lineNumber":13,"author":{"gitId":"czhiruo"},"content":"    * What it does:","lastModifiedDate":"2023-10-01"},{"lineNumber":14,"author":{"gitId":"czhiruo"},"content":"    * Justification:","lastModifiedDate":"2023-10-01"},{"lineNumber":15,"author":{"gitId":"czhiruo"},"content":"    * Highlights:","lastModifiedDate":"2023-10-01"},{"lineNumber":16,"author":{"gitId":"czhiruo"},"content":"    * Credits:","lastModifiedDate":"2023-10-01"},{"lineNumber":17,"author":{"gitId":"czhiruo"},"content":"* **New Feature**:","lastModifiedDate":"2023-10-01"},{"lineNumber":18,"author":{"gitId":"czhiruo"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2023-10-01"},{"lineNumber":19,"author":{"gitId":"czhiruo"},"content":"* **Project management**:","lastModifiedDate":"2023-10-01"},{"lineNumber":20,"author":{"gitId":"czhiruo"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-10-01"},{"lineNumber":21,"author":{"gitId":"czhiruo"},"content":"* **Documentation**:","lastModifiedDate":"2023-10-01"},{"lineNumber":22,"author":{"gitId":"czhiruo"},"content":"    * User Guide:","lastModifiedDate":"2023-10-01"},{"lineNumber":23,"author":{"gitId":"czhiruo"},"content":"    * Developer Guide:","lastModifiedDate":"2023-10-01"},{"lineNumber":24,"author":{"gitId":"czhiruo"},"content":"* **Community**:","lastModifiedDate":"2023-10-01"},{"lineNumber":25,"author":{"gitId":"czhiruo"},"content":"* **Tools**:","lastModifiedDate":"2023-10-01"}],"authorContributionMap":{"czhiruo":25}},{"path":"docs/team/evanyan13.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"evanyan13"},"content":"---","lastModifiedDate":"2023-09-27"},{"lineNumber":2,"author":{"gitId":"evanyan13"},"content":"layout: page","lastModifiedDate":"2023-09-27"},{"lineNumber":3,"author":{"gitId":"evanyan13"},"content":"title: Yan Weidong(Evan)\u0027s Project Portfolio Page","lastModifiedDate":"2023-09-27"},{"lineNumber":4,"author":{"gitId":"evanyan13"},"content":"---","lastModifiedDate":"2023-09-27"},{"lineNumber":5,"author":{"gitId":"evanyan13"},"content":"### Project: Job Findr","lastModifiedDate":"2023-09-27"},{"lineNumber":6,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":7,"author":{"gitId":"evanyan13"},"content":"JobFindr - is a desktop application that offers NUS fresh graduates an efficient Contact Book app for job hunting.","lastModifiedDate":"2023-09-27"},{"lineNumber":8,"author":{"gitId":"evanyan13"},"content":"It simplifies contact management, provides reminders and enhances organisation, helping users stay competitive in the job market.","lastModifiedDate":"2023-09-27"},{"lineNumber":9,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":10,"author":{"gitId":"evanyan13"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-09-27"},{"lineNumber":11,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":12,"author":{"gitId":"evanyan13"},"content":"* **New Feature**:","lastModifiedDate":"2023-09-27"},{"lineNumber":13,"author":{"gitId":"evanyan13"},"content":"    * What it does:","lastModifiedDate":"2023-09-27"},{"lineNumber":14,"author":{"gitId":"evanyan13"},"content":"    * Justification:","lastModifiedDate":"2023-09-27"},{"lineNumber":15,"author":{"gitId":"evanyan13"},"content":"    * Highlights:","lastModifiedDate":"2023-09-27"},{"lineNumber":16,"author":{"gitId":"evanyan13"},"content":"    * Credits:","lastModifiedDate":"2023-09-27"},{"lineNumber":17,"author":{"gitId":"evanyan13"},"content":"* **New Feature**:","lastModifiedDate":"2023-09-27"},{"lineNumber":18,"author":{"gitId":"evanyan13"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2023-09-27"},{"lineNumber":19,"author":{"gitId":"evanyan13"},"content":"* **Project management**:","lastModifiedDate":"2023-09-27"},{"lineNumber":20,"author":{"gitId":"evanyan13"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-09-27"},{"lineNumber":21,"author":{"gitId":"evanyan13"},"content":"* **Documentation**:","lastModifiedDate":"2023-09-27"},{"lineNumber":22,"author":{"gitId":"evanyan13"},"content":"    * User Guide:","lastModifiedDate":"2023-09-27"},{"lineNumber":23,"author":{"gitId":"evanyan13"},"content":"    * Developer Guide:","lastModifiedDate":"2023-09-27"},{"lineNumber":24,"author":{"gitId":"evanyan13"},"content":"* **Community**:","lastModifiedDate":"2023-09-27"},{"lineNumber":25,"author":{"gitId":"evanyan13"},"content":"* **Tools**:","lastModifiedDate":"2023-09-27"},{"lineNumber":26,"author":{"gitId":"evanyan13"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2023-09-27"}],"authorContributionMap":{"evanyan13":26}},{"path":"docs/team/jeremyyong128.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"JeremyYong128"},"content":"---","lastModifiedDate":"2023-10-01"},{"lineNumber":2,"author":{"gitId":"JeremyYong128"},"content":"layout: page","lastModifiedDate":"2023-10-01"},{"lineNumber":3,"author":{"gitId":"JeremyYong128"},"content":"title: Jeremy Yong\u0027s Project Portfolio Page","lastModifiedDate":"2023-10-01"},{"lineNumber":4,"author":{"gitId":"JeremyYong128"},"content":"---","lastModifiedDate":"2023-10-01"},{"lineNumber":5,"author":{"gitId":"JeremyYong128"},"content":"### Project: Job Findr","lastModifiedDate":"2023-10-01"},{"lineNumber":6,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":7,"author":{"gitId":"JeremyYong128"},"content":"JobFindr - is a desktop application that offers NUS fresh graduates an efficient Contact Book app for job hunting.","lastModifiedDate":"2023-10-01"},{"lineNumber":8,"author":{"gitId":"JeremyYong128"},"content":"It simplifies contact management, provides reminders and enhances organisation, helping users stay competitive in the job market.","lastModifiedDate":"2023-10-01"},{"lineNumber":9,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":10,"author":{"gitId":"JeremyYong128"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-10-01"},{"lineNumber":11,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":12,"author":{"gitId":"JeremyYong128"},"content":"* **New Feature**:","lastModifiedDate":"2023-10-01"},{"lineNumber":13,"author":{"gitId":"JeremyYong128"},"content":"    * What it does:","lastModifiedDate":"2023-10-01"},{"lineNumber":14,"author":{"gitId":"JeremyYong128"},"content":"    * Justification:","lastModifiedDate":"2023-10-01"},{"lineNumber":15,"author":{"gitId":"JeremyYong128"},"content":"    * Highlights:","lastModifiedDate":"2023-10-01"},{"lineNumber":16,"author":{"gitId":"JeremyYong128"},"content":"    * Credits:","lastModifiedDate":"2023-10-01"},{"lineNumber":17,"author":{"gitId":"JeremyYong128"},"content":"* **New Feature**:","lastModifiedDate":"2023-10-01"},{"lineNumber":18,"author":{"gitId":"JeremyYong128"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2023-10-01"},{"lineNumber":19,"author":{"gitId":"JeremyYong128"},"content":"* **Project management**:","lastModifiedDate":"2023-10-01"},{"lineNumber":20,"author":{"gitId":"JeremyYong128"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-10-01"},{"lineNumber":21,"author":{"gitId":"JeremyYong128"},"content":"* **Documentation**:","lastModifiedDate":"2023-10-01"},{"lineNumber":22,"author":{"gitId":"JeremyYong128"},"content":"    * User Guide:","lastModifiedDate":"2023-10-01"},{"lineNumber":23,"author":{"gitId":"JeremyYong128"},"content":"    * Developer Guide:","lastModifiedDate":"2023-10-01"},{"lineNumber":24,"author":{"gitId":"JeremyYong128"},"content":"* **Community**:","lastModifiedDate":"2023-10-01"},{"lineNumber":25,"author":{"gitId":"JeremyYong128"},"content":"* **Tools**:","lastModifiedDate":"2023-10-01"}],"authorContributionMap":{"JeremyYong128":25}},{"path":"docs/team/migfoo02.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"migfoo02"},"content":"---","lastModifiedDate":"2023-10-02"},{"lineNumber":2,"author":{"gitId":"migfoo02"},"content":"layout: page","lastModifiedDate":"2023-10-02"},{"lineNumber":3,"author":{"gitId":"migfoo02"},"content":"title: Miguel Foo\u0027s Project Portfolio Page","lastModifiedDate":"2023-10-02"},{"lineNumber":4,"author":{"gitId":"migfoo02"},"content":"---","lastModifiedDate":"2023-10-02"},{"lineNumber":5,"author":{"gitId":"migfoo02"},"content":"### Project: Job Findr","lastModifiedDate":"2023-10-02"},{"lineNumber":6,"author":{"gitId":"migfoo02"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":7,"author":{"gitId":"migfoo02"},"content":"JobFindr - is a desktop application that offers NUS fresh graduates an efficient Contact Book app for job hunting.","lastModifiedDate":"2023-10-02"},{"lineNumber":8,"author":{"gitId":"migfoo02"},"content":"It simplifies contact management, provides reminders and enhances organisation, helping users stay competitive in the job market.","lastModifiedDate":"2023-10-02"},{"lineNumber":9,"author":{"gitId":"migfoo02"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":10,"author":{"gitId":"migfoo02"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-10-02"},{"lineNumber":11,"author":{"gitId":"migfoo02"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":12,"author":{"gitId":"migfoo02"},"content":"* **New Feature**:","lastModifiedDate":"2023-10-02"},{"lineNumber":13,"author":{"gitId":"migfoo02"},"content":"    * What it does:","lastModifiedDate":"2023-10-02"},{"lineNumber":14,"author":{"gitId":"migfoo02"},"content":"    * Justification:","lastModifiedDate":"2023-10-02"},{"lineNumber":15,"author":{"gitId":"migfoo02"},"content":"    * Highlights:","lastModifiedDate":"2023-10-02"},{"lineNumber":16,"author":{"gitId":"migfoo02"},"content":"    * Credits:","lastModifiedDate":"2023-10-02"},{"lineNumber":17,"author":{"gitId":"migfoo02"},"content":"* **New Feature**:","lastModifiedDate":"2023-10-02"},{"lineNumber":18,"author":{"gitId":"migfoo02"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2023-10-02"},{"lineNumber":19,"author":{"gitId":"migfoo02"},"content":"* **Project management**:","lastModifiedDate":"2023-10-02"},{"lineNumber":20,"author":{"gitId":"migfoo02"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-10-02"},{"lineNumber":21,"author":{"gitId":"migfoo02"},"content":"* **Documentation**:","lastModifiedDate":"2023-10-02"},{"lineNumber":22,"author":{"gitId":"migfoo02"},"content":"    * User Guide:","lastModifiedDate":"2023-10-02"},{"lineNumber":23,"author":{"gitId":"migfoo02"},"content":"    * Developer Guide:","lastModifiedDate":"2023-10-02"},{"lineNumber":24,"author":{"gitId":"migfoo02"},"content":"* **Community**:","lastModifiedDate":"2023-10-02"},{"lineNumber":25,"author":{"gitId":"migfoo02"},"content":"* **Tools**:","lastModifiedDate":"2023-10-02"}],"authorContributionMap":{"migfoo02":25}},{"path":"docs/team/peiran18.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"peiran18"},"content":"---","lastModifiedDate":"2023-10-02"},{"lineNumber":2,"author":{"gitId":"peiran18"},"content":"layout: page","lastModifiedDate":"2023-10-02"},{"lineNumber":3,"author":{"gitId":"peiran18"},"content":"title: Peiran\u0027s Project Portfolio Page","lastModifiedDate":"2023-10-02"},{"lineNumber":4,"author":{"gitId":"peiran18"},"content":"---","lastModifiedDate":"2023-10-02"},{"lineNumber":5,"author":{"gitId":"peiran18"},"content":"### Project: Job Findr","lastModifiedDate":"2023-10-02"},{"lineNumber":6,"author":{"gitId":"peiran18"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":7,"author":{"gitId":"peiran18"},"content":"JobFindr - is a desktop application that offers NUS fresh graduates an efficient Contact Book app for job hunting.","lastModifiedDate":"2023-10-02"},{"lineNumber":8,"author":{"gitId":"peiran18"},"content":"It simplifies contact management, provides reminders and enhances organisation, helping users stay competitive in the job market.","lastModifiedDate":"2023-10-02"},{"lineNumber":9,"author":{"gitId":"peiran18"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":10,"author":{"gitId":"peiran18"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-10-02"},{"lineNumber":11,"author":{"gitId":"peiran18"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":12,"author":{"gitId":"peiran18"},"content":"* **New Feature**:","lastModifiedDate":"2023-10-02"},{"lineNumber":13,"author":{"gitId":"peiran18"},"content":"    * What it does:","lastModifiedDate":"2023-10-02"},{"lineNumber":14,"author":{"gitId":"peiran18"},"content":"    * Justification:","lastModifiedDate":"2023-10-02"},{"lineNumber":15,"author":{"gitId":"peiran18"},"content":"    * Highlights:","lastModifiedDate":"2023-10-02"},{"lineNumber":16,"author":{"gitId":"peiran18"},"content":"    * Credits:","lastModifiedDate":"2023-10-02"},{"lineNumber":17,"author":{"gitId":"peiran18"},"content":"* **New Feature**:","lastModifiedDate":"2023-10-02"},{"lineNumber":18,"author":{"gitId":"peiran18"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2324s1.github.io/tp-dashboard/?search\u003dpeiran18\u0026breakdown\u003dfalse\u0026sort\u003dgroupTitle%20dsc\u0026sortWithin\u003dtitle\u0026since\u003d2023-09-22\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos)","lastModifiedDate":"2023-10-02"},{"lineNumber":19,"author":{"gitId":"peiran18"},"content":"* **Project management**:","lastModifiedDate":"2023-10-02"},{"lineNumber":20,"author":{"gitId":"peiran18"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-10-02"},{"lineNumber":21,"author":{"gitId":"peiran18"},"content":"* **Documentation**:","lastModifiedDate":"2023-10-02"},{"lineNumber":22,"author":{"gitId":"peiran18"},"content":"    * User Guide:","lastModifiedDate":"2023-10-02"},{"lineNumber":23,"author":{"gitId":"peiran18"},"content":"    * Developer Guide:","lastModifiedDate":"2023-10-02"},{"lineNumber":24,"author":{"gitId":"peiran18"},"content":"* **Community**:","lastModifiedDate":"2023-10-02"},{"lineNumber":25,"author":{"gitId":"peiran18"},"content":"* **Tools**:","lastModifiedDate":"2023-10-02"},{"lineNumber":26,"author":{"gitId":"peiran18"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2023-10-02"}],"authorContributionMap":{"peiran18":26}},{"path":"docs/tutorials/AddRemark.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Adding a command\"","lastModifiedDate":"2020-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Let\u0027s walk you through the implementation of a new command — `remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"This command allows users of the AddressBook application to add optional remarks to people in their address book and edit it if required. The command should have the following format:","lastModifiedDate":"2020-07-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"`remark INDEX r/REMARK` (e.g., `remark 2 r/Likes baseball`)","lastModifiedDate":"2020-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"We’ll assume that you have already set up the development environment as outlined in the Developer’s Guide.","lastModifiedDate":"2020-07-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Create a new `remark` command","lastModifiedDate":"2020-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Looking in the `logic.command` package, you will notice that each existing command have their own class. All the commands inherit from the abstract class `Command` which means that they must override `execute()`. Each `Command` returns an instance of `CommandResult` upon success and `CommandResult#feedbackToUser` is printed to the `ResultDisplay`.","lastModifiedDate":"2020-07-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Let’s start by creating a new `RemarkCommand` class in the `src/main/java/seedu/address/logic/command` directory.","lastModifiedDate":"2020-07-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"For now, let’s keep `RemarkCommand` as simple as possible and print some output. We accomplish that by returning a `CommandResult` with an accompanying message.","lastModifiedDate":"2020-07-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":26,"author":{"gitId":"evanyan13"},"content":"package seedu.application.logic.commands;","lastModifiedDate":"2023-10-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":28,"author":{"gitId":"evanyan13"},"content":"import seedu.application.model.Model;","lastModifiedDate":"2023-10-10"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Changes the remark of an existing person in the address book.","lastModifiedDate":"2020-07-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"remark\";","lastModifiedDate":"2020-07-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2020-07-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return new CommandResult(\"Hello from remark\");","lastModifiedDate":"2020-07-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"### Hook `RemarkCommand` into the application","lastModifiedDate":"2020-07-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"Now that we have our `RemarkCommand` ready to be executed, we need to update `AddressBookParser#parseCommand()` to recognize the `remark` keyword. Add the new command to the `switch` block by creating a new `case` that returns a new instance of `RemarkCommand`.","lastModifiedDate":"2020-07-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"You can refer to the changes in this [diff](https://github.com/se-edu/addressbook-level3/commit/35eb7286f18a029d39cb7a29df8f172a001e4fd8#diff-399c284cb892c20b7c04a69116fcff6ccc0666c5230a1db8e4a9145def8fa4ee).","lastModifiedDate":"2022-01-02"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"### Run the application","lastModifiedDate":"2020-07-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"Run `Main#main` and try out your new `RemarkCommand`. If everything went well, you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"![Output displayed](../images/add-remark/RemarkHello.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"## Change `RemarkCommand` to throw an exception","lastModifiedDate":"2020-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"While we have successfully printed a message to `ResultDisplay`, the command does not do what it is supposed to do. Let’s change the command to throw a `CommandException` to accurately reflect that our command is still a work in progress.","lastModifiedDate":"2020-12-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"![The relationship between RemarkCommand and Command](../images/add-remark/RemarkCommandClass.png)","lastModifiedDate":"2023-09-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"Following the convention in other commands, we add relevant messages as constants and use them.","lastModifiedDate":"2020-07-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-08-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            + \": Edits the remark of the person identified \"","lastModifiedDate":"2021-08-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            + \"by the index number used in the last person listing. \"","lastModifiedDate":"2020-07-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            + \"Existing remark will be overwritten by the input.\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2020-07-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            + \"r/ [REMARK]\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2020-07-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            + \"r/ Likes to swim.\";","lastModifiedDate":"2020-07-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_IMPLEMENTED_YET \u003d","lastModifiedDate":"2021-08-01"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            \"Remark command not implemented yet\";","lastModifiedDate":"2021-08-01"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        throw new CommandException(MESSAGE_NOT_IMPLEMENTED_YET);","lastModifiedDate":"2020-07-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"## Enhancing `RemarkCommand`","lastModifiedDate":"2020-07-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` to parse input from the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"### Make the command accept parameters","lastModifiedDate":"2020-07-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"We start by modifying the constructor of `RemarkCommand` to accept an `Index` and a `String`. While we are at it, let’s change the error message to echo the values. While this is not a replacement for tests, it is an obvious way to tell if our code is functioning as intended.","lastModifiedDate":"2020-07-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":94,"author":{"gitId":"evanyan13"},"content":"import static seedu.application.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-10-10"},{"lineNumber":95,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ARGUMENTS \u003d \"Index: %1$d, Remark: %2$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private final String remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit the remark","lastModifiedDate":"2020-07-29"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * @param remark of the person to be updated to","lastModifiedDate":"2020-07-29"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public RemarkCommand(Index index, String remark) {","lastModifiedDate":"2020-07-29"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        requireAllNonNull(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2020-07-29"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        throw new CommandException(","lastModifiedDate":"2021-08-01"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_ARGUMENTS, index.getOneBased(), remark));","lastModifiedDate":"2021-08-01"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2020-07-29"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2020-07-29"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2020-07-29"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2020-07-29"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        if (!(other instanceof RemarkCommand)) {","lastModifiedDate":"2020-07-29"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2020-07-29"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        RemarkCommand e \u003d (RemarkCommand) other;","lastModifiedDate":"2020-07-29"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2020-07-29"},{"lineNumber":132,"author":{"gitId":"-"},"content":"                \u0026\u0026 remark.equals(e.remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":135,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":137,"author":{"gitId":"-"},"content":"Your code should look something like [this](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-a8e35af8f9c251525063fae36c9852922a7e7195763018eacec60f3a4d87c594) after you are done.","lastModifiedDate":"2022-01-02"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":139,"author":{"gitId":"-"},"content":"### Parse user input","lastModifiedDate":"2020-07-29"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":141,"author":{"gitId":"-"},"content":"Now let’s move on to writing a parser that will extract the index and remark from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":143,"author":{"gitId":"evanyan13"},"content":"Create a `RemarkCommandParser` class in the `seedu.application.logic.parser` package. The class must extend the `Parser` interface.","lastModifiedDate":"2023-10-10"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":145,"author":{"gitId":"-"},"content":"![The relationship between Parser and RemarkCommandParser](../images/add-remark/RemarkCommandParserClass.png)","lastModifiedDate":"2023-09-12"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":147,"author":{"gitId":"-"},"content":"Thankfully, `ArgumentTokenizer#tokenize()` makes it trivial to parse user input. Let’s take a look at the JavaDoc provided for the function to understand what it does.","lastModifiedDate":"2020-07-29"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":149,"author":{"gitId":"-"},"content":"**`ArgumentTokenizer.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":151,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":152,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":153,"author":{"gitId":"-"},"content":" * Tokenizes an arguments string and returns an {@code ArgumentMultimap}","lastModifiedDate":"2020-07-29"},{"lineNumber":154,"author":{"gitId":"-"},"content":" * object that maps prefixes to their respective argument values. Only the","lastModifiedDate":"2020-07-29"},{"lineNumber":155,"author":{"gitId":"-"},"content":" * given prefixes will be recognized in the arguments string.","lastModifiedDate":"2020-07-29"},{"lineNumber":156,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2020-07-29"},{"lineNumber":157,"author":{"gitId":"-"},"content":" * @param argsString Arguments string of the form:","lastModifiedDate":"2020-07-29"},{"lineNumber":158,"author":{"gitId":"-"},"content":" * {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2020-07-29"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2020-07-29"},{"lineNumber":160,"author":{"gitId":"-"},"content":" * @return           ArgumentMultimap object that maps prefixes to their","lastModifiedDate":"2020-07-29"},{"lineNumber":161,"author":{"gitId":"-"},"content":" * arguments","lastModifiedDate":"2020-07-29"},{"lineNumber":162,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":163,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":165,"author":{"gitId":"-"},"content":"We can tell `ArgumentTokenizer#tokenize()` to look out for our new prefix `r/` and it will return us an instance of `ArgumentMultimap`. Now let’s find out what we need to do in order to obtain the Index and String that we need. Let’s look through `ArgumentMultimap` :","lastModifiedDate":"2020-07-29"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":167,"author":{"gitId":"-"},"content":"**`ArgumentMultimap.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":169,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":170,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":171,"author":{"gitId":"-"},"content":" * Returns the last value of {@code prefix}.","lastModifiedDate":"2020-07-29"},{"lineNumber":172,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":173,"author":{"gitId":"-"},"content":"public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2020-07-29"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2020-07-29"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    return values.isEmpty() ? Optional.empty() :","lastModifiedDate":"2020-07-29"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2020-07-29"},{"lineNumber":177,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":178,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":180,"author":{"gitId":"-"},"content":"This appears to be what we need to get a String of the remark. But what about the Index? Let\u0027s take a quick peek at existing `Command` that uses an index to see how it is done.","lastModifiedDate":"2020-07-29"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":182,"author":{"gitId":"-"},"content":"**`DeleteCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":184,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":185,"author":{"gitId":"-"},"content":"Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":186,"author":{"gitId":"-"},"content":"return new DeleteCommand(index);","lastModifiedDate":"2020-07-29"},{"lineNumber":187,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":189,"author":{"gitId":"-"},"content":"There appears to be another utility class that obtains an `Index` from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":191,"author":{"gitId":"-"},"content":"Now that we have the know-how to extract the data that we need from the user’s input, we can parse the user command and create a new instance of `RemarkCommand`, as given below.","lastModifiedDate":"2020-07-29"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":193,"author":{"gitId":"-"},"content":"**`RemarkCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":195,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":196,"author":{"gitId":"-"},"content":"public RemarkCommand parse(String args) throws ParseException {","lastModifiedDate":"2020-07-29"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    requireNonNull(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2020-07-29"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        PREFIX_REMARK);","lastModifiedDate":"2020-07-29"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    try {","lastModifiedDate":"2020-07-29"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2020-07-29"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    } catch (IllegalValueException ive) {","lastModifiedDate":"2020-07-29"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2020-07-29"},{"lineNumber":206,"author":{"gitId":"-"},"content":"            RemarkCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2020-07-29"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    String remark \u003d argMultimap.getValue(PREFIX_REMARK).orElse(\"\");","lastModifiedDate":"2020-07-29"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    return new RemarkCommand(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":212,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":213,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":215,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":217,"author":{"gitId":"-"},"content":":information_source: Don’t forget to update `AddressBookParser` to use our new `RemarkCommandParser`!","lastModifiedDate":"2020-07-29"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":219,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":221,"author":{"gitId":"-"},"content":"If you are stuck, check out the sample","lastModifiedDate":"2020-07-29"},{"lineNumber":222,"author":{"gitId":"-"},"content":"[here](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-8bf239e8e9529369b577701303ddd96af93178b4ed6735f91c2d8488b20c6b4a).","lastModifiedDate":"2022-01-02"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":224,"author":{"gitId":"-"},"content":"## Add `Remark` to the model","lastModifiedDate":"2020-07-29"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":226,"author":{"gitId":"-"},"content":"Now that we have all the information that we need, let’s lay the groundwork for propagating the remarks added into the in-memory storage of person data. We achieve that by working with the `Person` model. Each field in a Person is implemented as a separate class (e.g. a `Name` object represents the person’s name). That means we should add a `Remark` class so that we can use a `Remark` object to represent a remark given to a person.","lastModifiedDate":"2020-07-29"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":228,"author":{"gitId":"-"},"content":"### Add a new `Remark` class","lastModifiedDate":"2020-07-29"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":230,"author":{"gitId":"evanyan13"},"content":"Create a new `Remark` in `seedu.application.model.person`. Since a `Remark` is a field that is similar to `Address`, we can reuse a significant bit of code.","lastModifiedDate":"2023-10-10"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":232,"author":{"gitId":"-"},"content":"A copy-paste and search-replace later, you should have something like [this](https://github.com/se-edu/addressbook-level3/commit/4516e099699baa9e2d51801bd26f016d812dedcc#diff-41bb13c581e280c686198251ad6cc337cd5e27032772f06ed9bf7f1440995ece). Note how `Remark` has no constrains and thus does not require input","lastModifiedDate":"2022-01-02"},{"lineNumber":233,"author":{"gitId":"-"},"content":"validation.","lastModifiedDate":"2020-07-29"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":235,"author":{"gitId":"-"},"content":"### Make use of `Remark`","lastModifiedDate":"2020-07-29"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":237,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` and `RemarkCommandParser` to use the new `Remark` class instead of plain `String`. These should be relatively simple changes.","lastModifiedDate":"2020-07-29"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":239,"author":{"gitId":"-"},"content":"## Add a placeholder element for remark to the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":241,"author":{"gitId":"-"},"content":"Without getting too deep into `fxml`, let’s go on a 5 minute adventure to get some placeholder text to show up for each person.","lastModifiedDate":"2020-07-29"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":243,"author":{"gitId":"evanyan13"},"content":"Simply add the following to [`seedu.application.ui.PersonCard`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-639834f1e05afe2276a86372adf0fe5f69314642c2d93cfa543d614ce5a76688).","lastModifiedDate":"2023-10-10"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":245,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2023-10-06"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":247,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":248,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-07-29"},{"lineNumber":249,"author":{"gitId":"-"},"content":"private Label remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":250,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":253,"author":{"gitId":"-"},"content":"`@FXML` is an annotation that marks a private or protected field and makes it accessible to FXML. It might sound like Greek to you right now, don’t worry — we will get back to it later.","lastModifiedDate":"2020-07-29"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":255,"author":{"gitId":"-"},"content":"Then insert the following into [`main/resources/view/PersonListCard.fxml`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-d44c4f51c24f6253c277a2bb9bc440b8064d9c15ad7cb7ceda280bca032efce9).","lastModifiedDate":"2022-01-02"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":257,"author":{"gitId":"-"},"content":"**`PersonListCard.fxml`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":259,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-07-29"},{"lineNumber":260,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"remark\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$remark\" /\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":261,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":263,"author":{"gitId":"-"},"content":"That’s it! Fire up the application again and you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":265,"author":{"gitId":"-"},"content":"![$remark shows up in each entry](../images/add-remark/$Remark.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":267,"author":{"gitId":"-"},"content":"## Modify `Person` to support a `Remark` field","lastModifiedDate":"2020-07-29"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":269,"author":{"gitId":"-"},"content":"Since `PersonCard` displays data from a `Person`, we need to update `Person` to get our `Remark` displayed!","lastModifiedDate":"2020-07-29"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":271,"author":{"gitId":"-"},"content":"### Modify `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":273,"author":{"gitId":"-"},"content":"We change the constructor of `Person` to take a `Remark`. We will also need to define new fields and accessors accordingly to store our new addition.","lastModifiedDate":"2020-07-29"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":275,"author":{"gitId":"-"},"content":"### Update other usages of `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":277,"author":{"gitId":"-"},"content":"Unfortunately, a change to `Person` will cause other commands to break, you will have to modify these commands to use the updated `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":279,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":281,"author":{"gitId":"-"},"content":":bulb: Use the `Find Usages` feature in IntelliJ IDEA on the `Person` class to find these commands.","lastModifiedDate":"2020-07-29"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":283,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":285,"author":{"gitId":"-"},"content":"Refer to [this commit](https://github.com/se-edu/addressbook-level3/commit/ce998c37e65b92d35c91d28c7822cd139c2c0a5c) and check that you have got everything in order!","lastModifiedDate":"2020-07-29"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":288,"author":{"gitId":"-"},"content":"## Updating Storage","lastModifiedDate":"2020-07-29"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":290,"author":{"gitId":"-"},"content":"AddressBook stores data by serializing `JsonAdaptedPerson` into `json` with the help of an external library — Jackson. Let’s update `JsonAdaptedPerson` to work with our new `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":292,"author":{"gitId":"-"},"content":"While the changes to code may be minimal, the test data will have to be updated as well.","lastModifiedDate":"2020-07-29"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":294,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":296,"author":{"gitId":"-"},"content":":exclamation: You must delete AddressBook’s storage file located at `/data/addressbook.json` before running it! Not doing so will cause AddressBook to default to an empty address book!","lastModifiedDate":"2020-07-29"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":298,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":300,"author":{"gitId":"-"},"content":"Check out [this commit](https://github.com/se-edu/addressbook-level3/commit/556cbd0e03ff224d7a68afba171ad2eb0ce56bbf)","lastModifiedDate":"2020-07-29"},{"lineNumber":301,"author":{"gitId":"-"},"content":"to see what the changes entail.","lastModifiedDate":"2020-07-29"},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":303,"author":{"gitId":"-"},"content":"## Finalizing the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":305,"author":{"gitId":"-"},"content":"Now that we have finalized the `Person` class and its dependencies, we can now bind the `Remark` field to the UI.","lastModifiedDate":"2020-07-29"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":307,"author":{"gitId":"-"},"content":"Just add [this one line of code!](https://github.com/se-edu/addressbook-level3/commit/5b98fee11b6b3f5749b6b943c4f3bd3aa049b692)","lastModifiedDate":"2020-07-29"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":309,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":311,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":312,"author":{"gitId":"-"},"content":"public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2020-07-29"},{"lineNumber":313,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":314,"author":{"gitId":"-"},"content":"    remark.setText(person.getRemark().value);","lastModifiedDate":"2020-07-29"},{"lineNumber":315,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":316,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":317,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":318,"author":{"gitId":"-"},"content":"![The remark label is bound properly!](../images/add-remark/RemarkBound.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":320,"author":{"gitId":"-"},"content":"## Putting everything together","lastModifiedDate":"2020-07-29"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":322,"author":{"gitId":"-"},"content":"After the previous step, we notice a peculiar regression — we went from displaying something to nothing at all. However, this is expected behavior as we are yet to update the `RemarkCommand` to make use of the code we\u0027ve been adding in the last few steps.","lastModifiedDate":"2020-07-29"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":324,"author":{"gitId":"-"},"content":"### Update `RemarkCommand` and `RemarkCommandParser`","lastModifiedDate":"2020-07-29"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":326,"author":{"gitId":"-"},"content":"In this last step, we modify `RemarkCommand#execute()` to change the `Remark` of a `Person`. Since all fields in a `Person` are immutable, we create a new instance of a `Person` with the values that we want and","lastModifiedDate":"2020-07-29"},{"lineNumber":327,"author":{"gitId":"-"},"content":"save it with `Model#setPerson()`.","lastModifiedDate":"2020-07-29"},{"lineNumber":328,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":329,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":331,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":332,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":333,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ADD_REMARK_SUCCESS \u003d \"Added remark to Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":334,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_REMARK_SUCCESS \u003d \"Removed remark from Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":335,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":337,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":338,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2020-07-29"},{"lineNumber":339,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":340,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2020-07-29"},{"lineNumber":341,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2020-07-29"},{"lineNumber":342,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":343,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":344,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2020-07-29"},{"lineNumber":345,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new Person(","lastModifiedDate":"2021-08-01"},{"lineNumber":346,"author":{"gitId":"-"},"content":"                personToEdit.getName(), personToEdit.getPhone(), personToEdit.getEmail(),","lastModifiedDate":"2021-08-01"},{"lineNumber":347,"author":{"gitId":"-"},"content":"                personToEdit.getAddress(), remark, personToEdit.getTags());","lastModifiedDate":"2020-07-29"},{"lineNumber":348,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":349,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2020-07-29"},{"lineNumber":350,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2020-07-29"},{"lineNumber":351,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":352,"author":{"gitId":"-"},"content":"        return new CommandResult(generateSuccessMessage(editedPerson));","lastModifiedDate":"2020-07-29"},{"lineNumber":353,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":354,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":355,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":356,"author":{"gitId":"-"},"content":"     * Generates a command execution success message based on whether","lastModifiedDate":"2021-08-01"},{"lineNumber":357,"author":{"gitId":"-"},"content":"     * the remark is added to or removed from","lastModifiedDate":"2021-08-01"},{"lineNumber":358,"author":{"gitId":"-"},"content":"     * {@code personToEdit}.","lastModifiedDate":"2020-07-29"},{"lineNumber":359,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":360,"author":{"gitId":"-"},"content":"    private String generateSuccessMessage(Person personToEdit) {","lastModifiedDate":"2020-07-29"},{"lineNumber":361,"author":{"gitId":"-"},"content":"        String message \u003d !remark.value.isEmpty() ? MESSAGE_ADD_REMARK_SUCCESS : MESSAGE_DELETE_REMARK_SUCCESS;","lastModifiedDate":"2020-07-29"},{"lineNumber":362,"author":{"gitId":"-"},"content":"        return String.format(message, personToEdit);","lastModifiedDate":"2020-07-29"},{"lineNumber":363,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":364,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":365,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":366,"author":{"gitId":"-"},"content":"![Congratulations!](../images/add-remark/RemarkComplete.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":368,"author":{"gitId":"-"},"content":"## Writing tests","lastModifiedDate":"2020-07-29"},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":370,"author":{"gitId":"-"},"content":"Tests are crucial to ensuring that bugs don’t slip into the codebase unnoticed. This is especially true for large code bases where a change might lead to unintended behavior.","lastModifiedDate":"2020-07-29"},{"lineNumber":371,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":372,"author":{"gitId":"-"},"content":"Let’s verify the correctness of our code by writing some tests!","lastModifiedDate":"2020-07-29"},{"lineNumber":373,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":374,"author":{"gitId":"-"},"content":"Of course you can simply add the test cases manually, like you\u0027ve been doing all along this tutorial. The result would be like the test cases in [here](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-ff58f7c10338b34f76645df49b71ecb2bafaf7611b20e7ff59ebc98475538a01). Alternatively, you can get the help of IntelliJ to generate the skeletons of the test cases, as explained in the next section.","lastModifiedDate":"2022-01-02"},{"lineNumber":375,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":376,"author":{"gitId":"-"},"content":"### Automatically generating tests","lastModifiedDate":"2020-07-29"},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":378,"author":{"gitId":"-"},"content":"The goal is to write effective and efficient tests to ensure that `RemarkCommand#execute()` behaves as expected.","lastModifiedDate":"2020-07-29"},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":380,"author":{"gitId":"-"},"content":"The convention for test names is `methodName_testScenario_expectedResult`. An example would be","lastModifiedDate":"2020-07-29"},{"lineNumber":381,"author":{"gitId":"-"},"content":"`execute_filteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":382,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":383,"author":{"gitId":"-"},"content":"Let’s create a test for `RemarkCommand#execute()` to test that adding a remark works. On `IntelliJ IDEA` you can bring up the context menu and choose to `Go To` \\\u003e `Test` or use the appropriate keyboard shortcut.","lastModifiedDate":"2020-07-29"},{"lineNumber":384,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":385,"author":{"gitId":"-"},"content":"![Using the context menu to jump to tests](../images/add-remark/ContextMenu.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":386,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":387,"author":{"gitId":"-"},"content":"Then, create a test for the `execute` method.","lastModifiedDate":"2020-07-29"},{"lineNumber":388,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":389,"author":{"gitId":"-"},"content":"![Creating a test for `execute`.](../images/add-remark/CreateTest.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":391,"author":{"gitId":"-"},"content":"Following convention, let’s change the name of the generated method to `execute_addRemarkUnfilteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":392,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":393,"author":{"gitId":"-"},"content":"Let’s use the utility functions provided in `CommandTestUtil`. The functions ensure that commands produce the expected `CommandResult` and output the correct message. In this case, `CommandTestUtil#assertCommandSuccess` is the best fit as we are testing that a `RemarkCommand` will successfully add a `Remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":394,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":395,"author":{"gitId":"-"},"content":"You should end up with a test that looks something like [this](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-ff58f7c10338b34f76645df49b71ecb2bafaf7611b20e7ff59ebc98475538a01R36-R49).","lastModifiedDate":"2022-01-02"},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":397,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-07-29"},{"lineNumber":398,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":399,"author":{"gitId":"-"},"content":"This concludes the tutorial for adding a new `Command` to AddressBook.","lastModifiedDate":"2020-07-29"}],"authorContributionMap":{"evanyan13":6,"-":393}},{"path":"docs/tutorials/RemovingFields.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Removing Fields\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e —  Antoine de Saint-Exupery","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"When working on an existing code base, you will most likely find that some features that are no longer necessary.","lastModifiedDate":"2021-08-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"This tutorial aims to give you some practice on such a code \u0027removal\u0027 activity by removing the `address` field from `Person` class.","lastModifiedDate":"2021-08-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-success\"\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"**If you have done the [Add `remark` command tutorial](AddRemark.html)  already**, you should know where the code had to be updated to add the field `remark`. From that experience, you can deduce where the code needs to be changed to _remove_ that field too. The removing of the `address` field can be done similarly.","lastModifiedDate":"2021-08-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"However, if you have no such prior knowledge, removing a field can take a quite a bit of detective work. This tutorial takes you through that process. **At least have a read even if you don\u0027t actually do the steps yourself.**","lastModifiedDate":"2021-08-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"## Safely deleting `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"IntelliJ IDEA provides a refactoring tool that can identify *most* parts of a removal easily. Let’s try to use it as much as we can.","lastModifiedDate":"2021-08-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Assisted refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"evanyan13"},"content":"The `address` field in `Person` is actually an instance of the `seedu.application.model.person.Address` class. Since removing the `Address` class will break the application, we start by identifying `Address`\u0027s usages. This allows us to see code that depends on `Address` to function properly and edit them on a case-by-case basis. Right-click the `Address` class and select `Refactor` \\\u003e `Safe Delete` through the menu.","lastModifiedDate":"2023-10-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"* :bulb: To make things simpler, you can unselect the options `Search in comments and strings` and `Search for text occurrences`","lastModifiedDate":"2021-08-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"![Usages detected](../images/remove/UnsafeDelete.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"Choose to `View Usages` and you should be presented with a list of `Safe Delete Conflicts`. These conflicts describe locations in which the `Address` class is used.","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"![List of conflicts](../images/remove/SafeDeleteConflicts.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"Remove usages of `Address` by performing `Safe Delete`s on each entry i.e., double-click on the entry (which takes you to the code in concern, right-click on that entity, and choose `Refactor` -\u003e `Safe delete` as before). You will need to exercise discretion when removing usages of `Address`. Functions like `ParserUtil#parseAddress()` can be safely removed but its usages must be removed as well. Other usages like in `EditPersonDescriptor` may require more careful inspection.","lastModifiedDate":"2021-08-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"Let’s try removing references to `Address` in `EditPersonDescriptor`.","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"1. Safe delete the field `address` in `EditPersonDescriptor`.","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"1. Select `Yes` when prompted to remove getters and setters.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"1. Select `View Usages` again.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"   ![UnsafeDeleteOnField](../images/remove/UnsafeDeleteOnField.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"1. Remove the usages of `address` and select `Do refactor` when you are done.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"   :bulb: **Tip:** Removing usages may result in errors. Exercise discretion and fix them. For example, removing the `address` field from the `Person` class will require you to modify its constructor.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"1. Repeat the steps for the remaining usages of `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"After you are done, verify that the application still works by compiling and running it again.","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"### Manual refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"Unfortunately, there are usages of `Address` that IntelliJ IDEA cannot identify. You can find them by searching for instances of the word `address` in your code (`Edit` \\\u003e `Find` \\\u003e `Find in path`).","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"Places of interest to look out for would be resources used by the application. `main/resources` contains images and `fxml` files used by the application and `test/resources` contains test data. For example, there is a `$address` in each `PersonCard` that has not been removed nor identified.","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"![$address](../images/remove/$address.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"A quick look at the `PersonCard` class and its `fxml` file quickly reveals why it slipped past the automated refactoring.","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"**`PersonCard.java`**","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"private Label address;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"**`PersonCard.fxml`**","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"After removing the `Label`, we can proceed to formally test our code. If everything went well, you should have most of your tests pass. Fix any remaining errors until the tests all pass.","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"## Tidying up","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"At this point, your application is working as intended and all your tests are passing. What’s left to do is to clean up references to `Address` in test data and documentation.","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"In `src/test/data/`, data meant for testing purposes are stored. While keeping the `address` field in the json files does not cause the tests to fail, it is not good practice to let cruft from old features accumulate.","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"**`invalidPersonAddressBook.json`:**","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"```json","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"  \"persons\": [ {","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    \"name\": \"Person with invalid name field: Ha!ns Mu@ster\",","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    \"phone\": \"9482424\",","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    \"email\": \"hans@example.com\",","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    \"address\": \"4th street\"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"You can go through each individual `json` file and manually remove the `address` field.","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"evanyan13":1,"-":111}},{"path":"docs/tutorials/TracingCode.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Tracing code\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Indeed, the ratio of time spent reading versus writing is well over 10 to 1. We are constantly reading old code as part of the effort to write new code. …​\\[Therefore,\\] making it easy to read makes it easier to write.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e —  Robert C. Martin Clean Code: A Handbook of Agile Software Craftsmanship","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"When trying to understand an unfamiliar code base, one common strategy used is to trace some representative execution path through the code base. One easy way to trace an execution path is to use a debugger to step through the code. In this tutorial, you will be using the IntelliJ IDEA’s debugger to trace the execution path of a specific user command.","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Before we start","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Before we jump into the code, it is useful to get an idea of the overall structure and the high-level behavior of the application. This is provided in the \u0027Architecture\u0027 section of the developer guide. In particular, the architecture diagram (reproduced below), tells us that the App consists of several components.","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"![ArchitectureDiagram](../images/ArchitectureDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"It also has a sequence diagram (reproduced below) that tells us how a command propagates through the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ArchitectureSequenceDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"Note how the diagram shows only the execution flows _between_ the main components. That is, it does not show details of the execution path *inside* each component. By hiding those details, the diagram aims to inform the reader about the overall execution path of a command without overwhelming the reader with too much details. In this tutorial, you aim to find those omitted details so that you get a more in-depth understanding of how the code works.","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Before we proceed, ensure that you have done the following:","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"1. Read the [*Architecture* section of the DG](../DeveloperGuide.md#architecture)","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"1. Set up the project in Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"1. Learn basic debugging features of Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"   * If you are using a different IDE, we\u0027ll leave it to you to figure out the equivalent feature to use in your IDE.","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"   * If you are not using an IDE, we\u0027ll let you figure out how to achieve the same using your coding toolchain.","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"## Setting a breakpoint","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"As you know, the first step of debugging is to put in a breakpoint where you want the debugger to pause the execution. For example, if you are trying to understand how the App starts up, you would put a breakpoint in the first statement of the `main` method.","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"In our case, we would want to begin the tracing at the very point where the App start processing user input (i.e., somewhere in the UI component), and then trace through how the execution proceeds through the UI component. However, the execution path through a GUI is often somewhat obscure due to various *event-driven mechanisms* used by GUI frameworks, which happens to be the case here too. Therefore, let us put the breakpoint where the `UI` transfers control to the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ArchitectureSequenceDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":42,"author":{"gitId":"evanyan13"},"content":"According to the sequence diagram you saw earlier (and repeated above for reference), the `UI` component yields control to the `Logic` component through a method named `execute`. Searching through the code base for an `execute()` method that belongs to the `Logic` component yields a promising candidate in `seedu.application.logic.Logic`.","lastModifiedDate":"2023-10-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":44,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/tracing/searchResultsForExecuteMethod.png\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":48,"author":{"gitId":"-"},"content":":bulb: **Intellij Tip:** The [\u0027**Search Everywhere**\u0027 feature](https://www.jetbrains.com/help/idea/searching-everywhere.html) can be used here. In particular, the \u0027**Find Symbol**\u0027 (\u0027Symbol\u0027 here refers to methods, variables, classes etc.) variant of that feature is quite useful here as we are looking for a _method_ named `execute`, not simply the text `execute`.","lastModifiedDate":"2021-07-31"},{"lineNumber":49,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":51,"author":{"gitId":"evanyan13"},"content":"A quick look at the `seedu.application.logic.Logic` (an extract given below) confirms that this indeed might be what we’re looking for.","lastModifiedDate":"2023-10-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":53,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2021-07-31"},{"lineNumber":54,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2021-07-31"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-07-31"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2021-07-31"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2021-07-31"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2021-07-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"But apparently, this is an interface, not a concrete implementation.","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"That should be fine because the [Architecture section of the Developer Guide](../DeveloperGuide.html#architecture) tells us that components interact through interfaces. Here\u0027s the relevant diagram:","lastModifiedDate":"2021-07-31"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":70,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":72,"author":{"gitId":"-"},"content":"Next, let\u0027s find out which statement(s) in the `UI` code is calling this method, thus transferring control from the `UI` to the `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":74,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":76,"author":{"gitId":"-"},"content":":bulb: **Intellij Tip:** The [\u0027**Find Usages**\u0027 feature](https://www.jetbrains.com/help/idea/find-highlight-usages.html#find-usages) can find from which parts of the code a class/method/variable is being used.","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"![`Find Usages` tool window. `Edit` \\\u003e `Find` \\\u003e `Find Usages`.](../images/tracing/FindUsages.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"Bingo\\! `MainWindow#executeCommand()` seems to be exactly what we’re looking for\\!","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"Now let’s set the breakpoint. First, double-click the item to reach the corresponding code. Once there, click on the left gutter to set a breakpoint, as shown below.","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":" ![LeftGutter](../images/tracing/LeftGutter.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"## Tracing the execution path","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"Recall from the User Guide that the `edit` command has the format: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/TAG]…​` For this tutorial we will be issuing the command `edit 1 n/Alice Yeoh`.","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":":bulb: **Tip:** Over the course of the debugging session, you will encounter every major component in the application. Try to keep track of what happens inside the component and where the execution transfers to another component.","lastModifiedDate":"2021-07-31"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"1. To start the debugging session, simply `Run` \\\u003e `Debug Main`","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"1. When the GUI appears, enter `edit 1 n/Alice Yeoh` into the command box and press `Enter`.","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. The Debugger tool window should show up and show something like this:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"   ![DebuggerStep1](../images/tracing/DebuggerStep1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"1. Use the _Show execution point_ feature to jump to the line of code that we stopped at:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"   ![ShowExecutionPoint](../images/tracing/ShowExecutionPoint.png)\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":104,"author":{"gitId":"-"},"content":"   `CommandResult commandResult \u003d logic.execute(commandText);` is the line that you end up at (i.e., the place where we put the breakpoint).","lastModifiedDate":"2021-07-31"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"1. We are interested in the `logic.execute(commandText)` portion of that line so let’s _Step in_ into that method call:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    ![StepInto](../images/tracing/StepInto.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"1. We end up in `LogicManager#execute()` (not `Logic#execute` -- but this is expected because we know the `execute()` method in the `Logic` interface is actually implemented by the `LogicManager` class). Let’s take a look at the body of the method. Given below is the same code, with additional explanatory comments.","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"   **LogicManager\\#execute().**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"   public CommandResult execute(String commandText)","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"           throws CommandException, ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        //Logging, safe to ignore","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        //Parse user input from String to a Command","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        //Executes the Command and stores the result","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            //We can deduce that the previous line of code modifies model in some way","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            // since it\u0027s being stored here.","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"1. `LogicManager#execute()` appears to delegate most of the heavy lifting to other components. Let’s take a closer look at each one.","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"1. _Step over_ the logging code since it is of no interest to us now.","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"   ![StepOver](../images/tracing/StepOver.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"1. _Step into_ the line where user input in parsed from a String to a Command, which should bring you to the `AddressBookParser#parseCommand()` method (partial code given below):","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"   public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"       final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"       final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"1. _Step over_ the statements in that method until you reach the `switch` statement. The \u0027Variables\u0027 window now shows the value of both `commandWord` and `arguments`:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    ![Variables](../images/tracing/Variables.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"1. We see that the value of `commandWord` is now `edit` but `arguments` is still not processed in any meaningful way.","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"1. Stepping through the `switch` block, we end up at a call to `EditCommandParser().parse()` as expected (because the command we typed is an edit command).","lastModifiedDate":"2021-07-31"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    case EditCommand.COMMAND_WORD:","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        return new EditCommandParser().parse(arguments);","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"1. Let’s see what `EditCommandParser#parse()` does by stepping into it. You might have to click the \u0027step into\u0027 button multiple times here because there are two method calls in that statement: `EditCommandParser()` and `parse()`.","lastModifiedDate":"2021-07-31"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Intellij Tip:** Sometimes, you might end up stepping into functions that are not of interest. Simply use the `step out` button to get out of them!","lastModifiedDate":"2021-07-31"},{"lineNumber":170,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"1. Stepping through the method shows that it calls `ArgumentTokenizer#tokenize()` and `ParserUtil#parseIndex()` to obtain the arguments and index required.","lastModifiedDate":"2021-07-31"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":174,"author":{"gitId":"-"},"content":"1. The rest of the method seems to exhaustively check for the existence of each possible parameter of the `edit` command and store any possible changes in an `EditPersonDescriptor`. Recall that we can verify the contents of `editPersonDesciptor` through the \u0027Variables\u0027 window.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":175,"author":{"gitId":"-"},"content":"   ![EditCommand](../images/tracing/EditCommand.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"1. As you just traced through some code involved in parsing a command, you can take a look at this class diagram to see where the various parsing-related classes you encountered fit into the design of the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":178,"author":{"gitId":"-"},"content":"   \u003cimg src\u003d\"../images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":180,"author":{"gitId":"-"},"content":"1. Let’s continue stepping through until we return to `LogicManager#execute()`.","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    The sequence diagram below shows the details of the execution path through the Logic component. Does the execution path you traced in the code so far match the diagram?\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    ![Tracing an `edit` command through the Logic component](../images/tracing/LogicSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"1. Now, step over until you read the statement that calls the `execute()` method of the `EditCommand` object received, and step into that `execute()` method (partial code given below):","lastModifiedDate":"2021-07-31"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"   **`EditCommand#execute()`:**","lastModifiedDate":"2021-07-31"},{"lineNumber":188,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"   public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"       Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"       Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"       if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"           throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"       }","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"       model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"       model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"       return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPerson));","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"   }","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"1. As suspected, `command#execute()` does indeed make changes to the `model` object. Specifically,","lastModifiedDate":"2021-07-31"},{"lineNumber":204,"author":{"gitId":"-"},"content":"   * it uses the `setPerson()` method (defined in the interface `Model` and implemented in `ModelManager` as per the usual pattern) to update the person data.","lastModifiedDate":"2021-07-31"},{"lineNumber":205,"author":{"gitId":"-"},"content":"   * it uses the `updateFilteredPersonList` method to ask the `Model` to populate the \u0027filtered list\u0027 with _all_ persons.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":206,"author":{"gitId":"-"},"content":"     FYI, The \u0027filtered list\u0027 is the list of persons resulting from the most recent operation that will be shown to the user immediately after. For the `edit` command, we populate it with all the persons so that the user can see the edited person along with all other persons. If this was a `find` command, we would be setting that list to contain the search results instead.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":207,"author":{"gitId":"-"},"content":"     To provide some context, given below is the class diagram of the `Model` component. See if you can figure out where the \u0027filtered list\u0027 of persons is being tracked.","lastModifiedDate":"2021-07-31"},{"lineNumber":208,"author":{"gitId":"-"},"content":"     \u003cimg src\u003d\"../images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":209,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Model` component section of the DG](../DeveloperGuide.html#model-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"1. As you step through the rest of the statements in the `EditCommand#execute()` method, you\u0027ll see that it creates a `CommandResult` object (containing information about the result of the execution) and returns it.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":212,"author":{"gitId":"-"},"content":"   Advancing the debugger by one more step should take you back to the middle of the `LogicManager#execute()` method.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"1. Given that you have already seen quite a few classes in the `Logic` component in action, see if you can identify in this partial class diagram some of the classes you\u0027ve encountered so far, and see how they fit into the class structure of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    \u003cimg src\u003d\"../images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":216,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Logic` component section of the DG](../DeveloperGuide.html#logic-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"1. Similar to before, you can step over/into statements in the `LogicManager#execute()` method to examine how the control is transferred to the `Storage` component and what happens inside that component.","lastModifiedDate":"2021-07-31"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":220,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Intellij Tip:** When trying to step into a statement such as `storage.saveAddressBook(model.getAddressBook())` which contains multiple method calls, Intellij will let you choose (by clicking) which one you want to step into.","lastModifiedDate":"2021-07-31"},{"lineNumber":221,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"1.  As you step through the code inside the `Storage` component, you will eventually arrive at the `JsonAddressBook#saveAddressBook()` method which calls the `JsonSerializableAddressBook` constructor, to create an object that can be _serialized_ (i.e., stored in storage medium) in JSON format. That constructor is given below (with added line breaks for easier readability):","lastModifiedDate":"2021-07-31"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    **`JsonSerializableAddressBook` constructor:**","lastModifiedDate":"2021-07-31"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"     * {@code JsonSerializableAddressBook}.","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        persons.addAll(","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"            source.getPersonList()","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"                  .stream()","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"                  .map(JsonAdaptedPerson::new)","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"                  .collect(Collectors.toList()));","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"1. It appears that a `JsonAdaptedPerson` is created for each `Person` and then added to the `JsonSerializableAddressBook`.","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"   This is because regular Java objects need to go through an _adaptation_ for them to be suitable to be saved in JSON format.","lastModifiedDate":"2021-07-31"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"1. While you are stepping through the classes in the `Storage` component, here is the component\u0027s class diagram to help you understand how those classes fit into the structure of the component.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":246,"author":{"gitId":"-"},"content":"   \u003cimg src\u003d\"../images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":247,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Storage` component section of the DG](../DeveloperGuide.html#storage-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"1. We can continue to step through until you reach the end of the `LogicManager#execute()` method and return to the `MainWindow#executeCommand()` method (the place where we put the original breakpoint).","lastModifiedDate":"2021-07-31"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"1. Stepping into `resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());`, we end up in:","lastModifiedDate":"2021-07-31"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    **`ResultDisplay#setFeedbackToUser()`**","lastModifiedDate":"2021-07-31"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"1. Finally, you can step through until you reach the end of`MainWindow#executeCommand()`.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":262,"author":{"gitId":"-"},"content":"   :bulb: This may be a good time to read through the [`UI` component section of the DG](../DeveloperGuide.html#ui-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"In this tutorial, we traced a valid edit command from raw user input to the result being displayed to the user. From this tutorial, you learned more about how the various components work together to produce a response to a user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"Here are some quick questions you can try to answer based on your execution path tracing. In some cases, you can do further tracing for the given commands to find exactly what happens.","lastModifiedDate":"2021-07-31"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"1.  In this tutorial, we traced the \"happy path\" (i.e., no errors). What","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"    do you think will happen if we traced the following commands","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"    instead? What exceptions do you think will be thrown (if any), where","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    will the exceptions be thrown and where will they be handled?","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"    1.  `redit 1 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    2.  `edit 0 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    3.  `edit 1 n/Alex Yeoh`","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"-"},"content":"    4.  `edit 1`","lastModifiedDate":"2020-05-23"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"-"},"content":"    5.  `edit 1 n/アリス ユー`","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":286,"author":{"gitId":"-"},"content":"    6.  `edit 1 t/one t/two t/three t/one`","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":288,"author":{"gitId":"-"},"content":"2.  What components will you have to modify to perform the following","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    enhancements to the application?","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"-"},"content":"    1.  Make command words case-insensitive","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"-"},"content":"    2.  Allow `delete` to remove more than one index at a time","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    3.  Save the address book in the CSV format instead","lastModifiedDate":"2020-05-23"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"-"},"content":"    4.  Add a new command","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    5.  Add a new field to `Person`","lastModifiedDate":"2020-05-23"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":301,"author":{"gitId":"-"},"content":"    6.  Add a new entity to the address book","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"evanyan13":2,"-":299}},{"path":"src/main/java/seedu/application/AppParameters.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"evanyan13"},"content":"package seedu.application;","lastModifiedDate":"2023-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"evanyan13"},"content":"import seedu.application.commons.core.LogsCenter;","lastModifiedDate":"2023-10-10"},{"lineNumber":11,"author":{"gitId":"evanyan13"},"content":"import seedu.application.commons.util.FileUtil;","lastModifiedDate":"2023-10-10"},{"lineNumber":12,"author":{"gitId":"evanyan13"},"content":"import seedu.application.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Represents the parsed command-line parameters given to the application.","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class AppParameters {","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(AppParameters.class);","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private Path configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public Path getConfigPath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        return configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setConfigPath(Path configPath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.configPath \u003d configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Parses the application command-line parameters.","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static AppParameters parse(Application.Parameters parameters) {","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d new AppParameters();","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        Map\u003cString, String\u003e namedParameters \u003d parameters.getNamed();","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        String configPathParameter \u003d namedParameters.get(\"config\");","lastModifiedDate":"2018-04-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (configPathParameter !\u003d null \u0026\u0026 !FileUtil.isValidPath(configPathParameter)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            logger.warning(\"Invalid config path \" + configPathParameter + \". Using default config path.\");","lastModifiedDate":"2018-04-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            configPathParameter \u003d null;","lastModifiedDate":"2018-04-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        appParameters.setConfigPath(configPathParameter !\u003d null ? Paths.get(configPathParameter) : null);","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return appParameters;","lastModifiedDate":"2018-04-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-04-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        if (!(other instanceof AppParameters)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        AppParameters otherAppParameters \u003d (AppParameters) other;","lastModifiedDate":"2018-04-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return Objects.equals(configPath, otherAppParameters.configPath);","lastModifiedDate":"2023-07-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-04-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return configPath.hashCode();","lastModifiedDate":"2018-04-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                .add(\"configPath\", configPath)","lastModifiedDate":"2019-02-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-04-21"}],"authorContributionMap":{"evanyan13":4,"-":69}},{"path":"src/main/java/seedu/application/Main.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"evanyan13"},"content":"package seedu.application;","lastModifiedDate":"2023-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-07-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2019-02-08"},{"lineNumber":6,"author":{"gitId":"evanyan13"},"content":"import seedu.application.commons.core.LogsCenter;","lastModifiedDate":"2023-10-10"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2019-02-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * The main entry point to the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"evanyan13"},"content":" * \u003cp\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * This is a workaround for the following error when MainApp is made the","lastModifiedDate":"2019-02-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * entry point of the application:","lastModifiedDate":"2019-02-08"},{"lineNumber":13,"author":{"gitId":"evanyan13"},"content":" * \u003cp\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Error: JavaFX runtime components are missing, and are required to run this application","lastModifiedDate":"2019-02-08"},{"lineNumber":15,"author":{"gitId":"evanyan13"},"content":" * \u003cp\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The reason is that MainApp extends Application. In that case, the","lastModifiedDate":"2019-02-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * LauncherHelper will check for the javafx.graphics module to be present","lastModifiedDate":"2019-02-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * as a named module. We don\u0027t use JavaFX via the module system so it can\u0027t","lastModifiedDate":"2019-02-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * find the javafx.graphics module, and so the launch is aborted.","lastModifiedDate":"2019-02-08"},{"lineNumber":20,"author":{"gitId":"evanyan13"},"content":" * \u003cp\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * By having a separate main class (Main) that doesn\u0027t extend Application","lastModifiedDate":"2019-02-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * to be the entry point of the application, we avoid this issue.","lastModifiedDate":"2019-02-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2019-02-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class Main {","lastModifiedDate":"2019-02-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static Logger logger \u003d LogsCenter.getLogger(Main.class);","lastModifiedDate":"2023-07-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-02-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // As per https://github.com/openjdk/jfx/blob/master/doc-files/release-notes-16.md","lastModifiedDate":"2023-07-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // JavaFX 16 (or later) runtime logs a warning at startup if JavaFX classes are loaded from","lastModifiedDate":"2023-07-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // the classpath instead of a module.","lastModifiedDate":"2023-07-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // Our application does not use Java modules yet. Even if it did, modules are ignored when","lastModifiedDate":"2023-07-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // packed into a FAT Jar file (as we do), which means this warning will persist even then.","lastModifiedDate":"2023-07-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // The warning however, can be safely ignored. Thus, the following log informs","lastModifiedDate":"2023-07-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // the user (if looking at the log output) that the said warning appearing in the log","lastModifiedDate":"2023-07-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // can be ignored.","lastModifiedDate":"2023-07-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        logger.warning(\"The warning about Unsupported JavaFX configuration below can be ignored.\");","lastModifiedDate":"2023-07-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        Application.launch(MainApp.class, args);","lastModifiedDate":"2019-02-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-02-08"}],"authorContributionMap":{"evanyan13":6,"-":34}},{"path":"src/main/java/seedu/application/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"evanyan13"},"content":"package seedu.application;","lastModifiedDate":"2023-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"evanyan13"},"content":"import seedu.application.commons.core.Config;","lastModifiedDate":"2023-10-10"},{"lineNumber":11,"author":{"gitId":"evanyan13"},"content":"import seedu.application.commons.core.LogsCenter;","lastModifiedDate":"2023-10-10"},{"lineNumber":12,"author":{"gitId":"evanyan13"},"content":"import seedu.application.commons.core.Version;","lastModifiedDate":"2023-10-10"},{"lineNumber":13,"author":{"gitId":"evanyan13"},"content":"import seedu.application.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-10-10"},{"lineNumber":14,"author":{"gitId":"evanyan13"},"content":"import seedu.application.commons.util.ConfigUtil;","lastModifiedDate":"2023-10-10"},{"lineNumber":15,"author":{"gitId":"evanyan13"},"content":"import seedu.application.commons.util.StringUtil;","lastModifiedDate":"2023-10-10"},{"lineNumber":16,"author":{"gitId":"evanyan13"},"content":"import seedu.application.logic.Logic;","lastModifiedDate":"2023-10-10"},{"lineNumber":17,"author":{"gitId":"evanyan13"},"content":"import seedu.application.logic.LogicManager;","lastModifiedDate":"2023-10-10"},{"lineNumber":18,"author":{"gitId":"evanyan13"},"content":"import seedu.application.model.ApplicationBook;","lastModifiedDate":"2023-10-10"},{"lineNumber":19,"author":{"gitId":"evanyan13"},"content":"import seedu.application.model.Model;","lastModifiedDate":"2023-10-10"},{"lineNumber":20,"author":{"gitId":"evanyan13"},"content":"import seedu.application.model.ModelManager;","lastModifiedDate":"2023-10-10"},{"lineNumber":21,"author":{"gitId":"evanyan13"},"content":"import seedu.application.model.ReadOnlyApplicationBook;","lastModifiedDate":"2023-10-10"},{"lineNumber":22,"author":{"gitId":"evanyan13"},"content":"import seedu.application.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-10-10"},{"lineNumber":23,"author":{"gitId":"evanyan13"},"content":"import seedu.application.model.UserPrefs;","lastModifiedDate":"2023-10-10"},{"lineNumber":24,"author":{"gitId":"evanyan13"},"content":"import seedu.application.model.util.SampleDataUtil;","lastModifiedDate":"2023-10-10"},{"lineNumber":25,"author":{"gitId":"evanyan13"},"content":"import seedu.application.storage.ApplicationBookStorage;","lastModifiedDate":"2023-10-10"},{"lineNumber":26,"author":{"gitId":"evanyan13"},"content":"import seedu.application.storage.JsonApplicationBookStorage;","lastModifiedDate":"2023-10-10"},{"lineNumber":27,"author":{"gitId":"evanyan13"},"content":"import seedu.application.storage.JsonUserPrefsStorage;","lastModifiedDate":"2023-10-10"},{"lineNumber":28,"author":{"gitId":"evanyan13"},"content":"import seedu.application.storage.Storage;","lastModifiedDate":"2023-10-10"},{"lineNumber":29,"author":{"gitId":"evanyan13"},"content":"import seedu.application.storage.StorageManager;","lastModifiedDate":"2023-10-10"},{"lineNumber":30,"author":{"gitId":"evanyan13"},"content":"import seedu.application.storage.UserPrefsStorage;","lastModifiedDate":"2023-10-10"},{"lineNumber":31,"author":{"gitId":"evanyan13"},"content":"import seedu.application.ui.Ui;","lastModifiedDate":"2023-10-10"},{"lineNumber":32,"author":{"gitId":"evanyan13"},"content":"import seedu.application.ui.UiManager;","lastModifiedDate":"2023-10-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final Version VERSION \u003d new Version(0, 2, 2, true);","lastModifiedDate":"2023-08-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"evanyan13"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing ApplicationBook ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2023-10-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2023-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":60,"author":{"gitId":"evanyan13"},"content":"        ApplicationBookStorage applicationBookStorage \u003d","lastModifiedDate":"2023-10-10"},{"lineNumber":61,"author":{"gitId":"evanyan13"},"content":"            new JsonApplicationBookStorage(userPrefs.getApplicationBookFilePath());","lastModifiedDate":"2023-10-10"},{"lineNumber":62,"author":{"gitId":"evanyan13"},"content":"        storage \u003d new StorageManager(applicationBookStorage, userPrefsStorage);","lastModifiedDate":"2023-10-10"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":72,"author":{"gitId":"evanyan13"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s application book","lastModifiedDate":"2023-10-10"},{"lineNumber":73,"author":{"gitId":"evanyan13"},"content":"     * and {@code userPrefs}. \u003cbr\u003e The data from the sample application book will be used instead","lastModifiedDate":"2023-10-10"},{"lineNumber":74,"author":{"gitId":"evanyan13"},"content":"     * if {@code storage}\u0027s application book is not found, or an empty application book will be used instead","lastModifiedDate":"2023-10-10"},{"lineNumber":75,"author":{"gitId":"evanyan13"},"content":"     * if errors occur when reading {@code storage}\u0027s application book.","lastModifiedDate":"2023-10-10"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":78,"author":{"gitId":"evanyan13"},"content":"        logger.info(\"Using data file : \" + storage.getApplicationBookFilePath());","lastModifiedDate":"2023-10-10"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":80,"author":{"gitId":"evanyan13"},"content":"        Optional\u003cReadOnlyApplicationBook\u003e applicationBookOptional;","lastModifiedDate":"2023-10-10"},{"lineNumber":81,"author":{"gitId":"evanyan13"},"content":"        ReadOnlyApplicationBook initialData;","lastModifiedDate":"2023-10-10"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":83,"author":{"gitId":"evanyan13"},"content":"            applicationBookOptional \u003d storage.readApplicationBook();","lastModifiedDate":"2023-10-10"},{"lineNumber":84,"author":{"gitId":"evanyan13"},"content":"            if (!applicationBookOptional.isPresent()) {","lastModifiedDate":"2023-10-10"},{"lineNumber":85,"author":{"gitId":"evanyan13"},"content":"                logger.info(\"Creating a new data file \" + storage.getApplicationBookFilePath()","lastModifiedDate":"2023-10-10"},{"lineNumber":86,"author":{"gitId":"evanyan13"},"content":"                    + \" populated with a sample ApplicationBook.\");","lastModifiedDate":"2023-10-10"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"evanyan13"},"content":"            initialData \u003d applicationBookOptional.orElseGet(SampleDataUtil::getSampleApplicationBook);","lastModifiedDate":"2023-10-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14"},{"lineNumber":90,"author":{"gitId":"evanyan13"},"content":"            logger.warning(\"Data file at \" + storage.getApplicationBookFilePath() + \" could not be loaded.\"","lastModifiedDate":"2023-10-10"},{"lineNumber":91,"author":{"gitId":"evanyan13"},"content":"                + \" Will be starting with an empty ApplicationBook.\");","lastModifiedDate":"2023-10-10"},{"lineNumber":92,"author":{"gitId":"evanyan13"},"content":"            initialData \u003d new ApplicationBook();","lastModifiedDate":"2023-10-10"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        return new ModelManager(initialData, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            if (!configOptional.isPresent()) {","lastModifiedDate":"2023-01-03"},{"lineNumber":123,"author":{"gitId":"-"},"content":"                logger.info(\"Creating new config file \" + configFilePathUsed);","lastModifiedDate":"2023-05-15"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-01-03"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" could not be loaded.\"","lastModifiedDate":"2023-06-15"},{"lineNumber":128,"author":{"gitId":"-"},"content":"                + \" Using default config properties.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        logger.info(\"Using preference file : \" + prefsFilePath);","lastModifiedDate":"2023-05-15"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            if (!prefsOptional.isPresent()) {","lastModifiedDate":"2023-01-03"},{"lineNumber":154,"author":{"gitId":"-"},"content":"                logger.info(\"Creating new preference file \" + prefsFilePath);","lastModifiedDate":"2023-05-15"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-01-03"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            logger.warning(\"Preference file at \" + prefsFilePath + \" could not be loaded.\"","lastModifiedDate":"2023-06-15"},{"lineNumber":159,"author":{"gitId":"-"},"content":"                + \" Using default preferences.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"evanyan13"},"content":"        logger.info(\"Starting ApplicationBook \" + MainApp.VERSION);","lastModifiedDate":"2023-10-10"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":181,"author":{"gitId":"evanyan13"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping Application Book ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2023-10-10"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":183,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":185,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":188,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"evanyan13":45,"-":143}},{"path":"src/main/java/seedu/application/commons/core/Config.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"evanyan13"},"content":"package seedu.application.commons.core;","lastModifiedDate":"2023-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2016-09-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"evanyan13"},"content":"import seedu.application.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-10"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Config values used by the app","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class Config {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final Path DEFAULT_CONFIG_FILE \u003d Paths.get(\"config.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    // Config values customizable through config file","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private Level logLevel \u003d Level.INFO;","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private Path userPrefsFilePath \u003d Paths.get(\"preferences.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Level getLogLevel() {","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return logLevel;","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setLogLevel(Level logLevel) {","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.logLevel \u003d logLevel;","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return userPrefsFilePath;","lastModifiedDate":"2016-09-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void setUserPrefsFilePath(Path userPrefsFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.userPrefsFilePath \u003d userPrefsFilePath;","lastModifiedDate":"2016-09-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        if (!(other instanceof Config)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Config otherConfig \u003d (Config) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return Objects.equals(logLevel, otherConfig.logLevel)","lastModifiedDate":"2023-07-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(userPrefsFilePath, otherConfig.userPrefsFilePath);","lastModifiedDate":"2023-07-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return Objects.hash(logLevel, userPrefsFilePath);","lastModifiedDate":"2018-12-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                .add(\"logLevel\", logLevel)","lastModifiedDate":"2019-02-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                .add(\"userPrefsFilePath\", userPrefsFilePath)","lastModifiedDate":"2019-02-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"evanyan13":2,"-":64}},{"path":"src/main/java/seedu/application/commons/core/GuiSettings.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"evanyan13"},"content":"package seedu.application.commons.core;","lastModifiedDate":"2023-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.awt.Point;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.io.Serializable;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"evanyan13"},"content":"import seedu.application.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-10"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * A Serializable class that contains the GUI settings.","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Guarantees: immutable.","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class GuiSettings implements Serializable {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private static final double DEFAULT_HEIGHT \u003d 600;","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private static final double DEFAULT_WIDTH \u003d 740;","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final double windowWidth;","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final double windowHeight;","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final Point windowCoordinates;","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the default height, width and position.","lastModifiedDate":"2020-05-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public GuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        windowWidth \u003d DEFAULT_WIDTH;","lastModifiedDate":"2018-08-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        windowHeight \u003d DEFAULT_HEIGHT;","lastModifiedDate":"2018-08-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d null; // null represent no coordinates","lastModifiedDate":"2018-08-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the specified height, width and position.","lastModifiedDate":"2020-05-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public GuiSettings(double windowWidth, double windowHeight, int xPosition, int yPosition) {","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.windowWidth \u003d windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.windowHeight \u003d windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d new Point(xPosition, yPosition);","lastModifiedDate":"2018-08-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public double getWindowWidth() {","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public double getWindowHeight() {","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public Point getWindowCoordinates() {","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return windowCoordinates !\u003d null ? new Point(windowCoordinates) : null;","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        if (!(other instanceof GuiSettings)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        GuiSettings otherGuiSettings \u003d (GuiSettings) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return windowWidth \u003d\u003d otherGuiSettings.windowWidth","lastModifiedDate":"2023-07-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                \u0026\u0026 windowHeight \u003d\u003d otherGuiSettings.windowHeight","lastModifiedDate":"2023-07-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(windowCoordinates, otherGuiSettings.windowCoordinates);","lastModifiedDate":"2023-07-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return Objects.hash(windowWidth, windowHeight, windowCoordinates);","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                .add(\"windowWidth\", windowWidth)","lastModifiedDate":"2019-02-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .add(\"windowHeight\", windowHeight)","lastModifiedDate":"2019-02-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                .add(\"windowCoordinates\", windowCoordinates)","lastModifiedDate":"2019-02-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"evanyan13":2,"-":80}},{"path":"src/main/java/seedu/application/commons/core/LogsCenter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"evanyan13"},"content":"package seedu.application.commons.core;","lastModifiedDate":"2023-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-05-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-05-20"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.ConsoleHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.FileHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.logging.SimpleFormatter;","lastModifiedDate":"2017-01-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Configures and manages loggers and handlers, including their logging level","lastModifiedDate":"2016-09-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Named {@link Logger}s can be obtained from this class\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * These loggers have been configured to output messages to the console and a {@code .log} file by default,","lastModifiedDate":"2016-09-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":" *   at the {@code INFO} level. A new {@code .log} file with a new numbering will be created after the log","lastModifiedDate":"2016-09-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":" *   file reaches 5MB big, up to a maximum of 5 files.\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class LogsCenter {","lastModifiedDate":"2016-09-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_COUNT \u003d 5;","lastModifiedDate":"2016-09-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_SIZE_IN_BYTES \u003d (int) (Math.pow(2, 20) * 5); // 5MB","lastModifiedDate":"2016-09-28"},{"lineNumber":23,"author":{"gitId":"evanyan13"},"content":"    private static final String LOG_FILE \u003d \"application.log\";","lastModifiedDate":"2023-10-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final Logger logger; // logger for this class","lastModifiedDate":"2023-07-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static Logger baseLogger; // to be used as the parent of all other loggers created by this class.","lastModifiedDate":"2023-07-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static Level currentLogLevel \u003d Level.INFO;","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    // This static block ensures essential loggers are created early","lastModifiedDate":"2023-07-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2023-07-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        setBaseLogger();","lastModifiedDate":"2023-07-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        logger \u003d LogsCenter.getLogger(LogsCenter.class);","lastModifiedDate":"2023-07-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Initializes loggers with the log level specified in the {@code config} object. Applies to all loggers created","lastModifiedDate":"2023-07-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * using {@link #getLogger(String)} and {@link #getLogger(Class)} methods except for those that are manually set.","lastModifiedDate":"2023-07-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static void init(Config config) {","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        currentLogLevel \u003d config.getLogLevel();","lastModifiedDate":"2016-09-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        logger.info(\"Log level will be set as: \" + currentLogLevel);","lastModifiedDate":"2023-07-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // set the level of the baseLogger which will be inherited by other loggers","lastModifiedDate":"2023-07-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        baseLogger.setLevel(currentLogLevel);","lastModifiedDate":"2023-07-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Creates a logger with the given name prefixed by the {@code baseLogger}\u0027s name so that the created logger","lastModifiedDate":"2023-07-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * becomes a descendant of the {@code baseLogger}. Furthermore, the returned logger will have the same log handlers","lastModifiedDate":"2023-07-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * as the {@code baseLogger}.","lastModifiedDate":"2023-07-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static Logger getLogger(String name) {","lastModifiedDate":"2016-09-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // Java organizes loggers into a hierarchy based on their names (using \u0027.\u0027 as a separator, similar to how Java","lastModifiedDate":"2023-07-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // packages form a hierarchy). Furthermore, loggers without a level inherit the level of their parent logger.","lastModifiedDate":"2023-07-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // By prefixing names of all loggers with baseLogger\u0027s name + \".\", we make the baseLogger the parent of all","lastModifiedDate":"2023-07-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // loggers. This allows us to change the level of all loggers simply by changing the baseLogger level.","lastModifiedDate":"2023-07-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        Logger logger \u003d Logger.getLogger(baseLogger.getName() + \".\" + name);","lastModifiedDate":"2023-07-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        removeHandlers(logger);","lastModifiedDate":"2016-09-28"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        logger.setUseParentHandlers(true);","lastModifiedDate":"2023-07-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return logger;","lastModifiedDate":"2023-07-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Creates a Logger for the given class name.","lastModifiedDate":"2017-01-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Logger getLogger(Class\u003cT\u003e clazz) {","lastModifiedDate":"2017-01-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        requireNonNull(clazz);","lastModifiedDate":"2023-05-20"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return getLogger(clazz.getSimpleName());","lastModifiedDate":"2017-01-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * Removes all handlers from the {@code logger}.","lastModifiedDate":"2023-07-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    private static void removeHandlers(Logger logger) {","lastModifiedDate":"2016-09-28"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        Arrays.stream(logger.getHandlers())","lastModifiedDate":"2018-01-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                .forEach(logger::removeHandler);","lastModifiedDate":"2018-01-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Creates a logger named \u0027ab3\u0027, containing a {@code ConsoleHandler} and a {@code FileHandler}.","lastModifiedDate":"2023-07-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Sets it as the {@code baseLogger}, to be used as the parent logger of all other loggers.","lastModifiedDate":"2023-07-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private static void setBaseLogger() {","lastModifiedDate":"2023-07-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        baseLogger \u003d Logger.getLogger(\"ab3\");","lastModifiedDate":"2023-07-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        baseLogger.setUseParentHandlers(false);","lastModifiedDate":"2023-07-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        removeHandlers(baseLogger);","lastModifiedDate":"2023-07-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        // Level.ALL is used as the level for the handlers because the baseLogger filters the log messages by level","lastModifiedDate":"2023-07-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // already; there is no need to control log message level of the handlers.","lastModifiedDate":"2023-07-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-19"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // add a ConsoleHandler to log to the console","lastModifiedDate":"2023-07-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        ConsoleHandler consoleHandler \u003d new ConsoleHandler();","lastModifiedDate":"2023-07-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        consoleHandler.setLevel(Level.ALL);","lastModifiedDate":"2023-07-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        baseLogger.addHandler(consoleHandler);","lastModifiedDate":"2023-07-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // add a FileHandler to log to a file","lastModifiedDate":"2023-07-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-09"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            FileHandler fileHandler \u003d new FileHandler(LOG_FILE, MAX_FILE_SIZE_IN_BYTES, MAX_FILE_COUNT, true);","lastModifiedDate":"2023-07-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            fileHandler.setFormatter(new SimpleFormatter());","lastModifiedDate":"2023-07-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            fileHandler.setLevel(Level.ALL);","lastModifiedDate":"2023-07-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            baseLogger.addHandler(fileHandler);","lastModifiedDate":"2023-07-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            logger.warning(\"Error adding file handler for logger.\");","lastModifiedDate":"2016-09-09"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"evanyan13":2,"-":104}},{"path":"src/main/java/seedu/application/commons/core/Version.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"evanyan13"},"content":"package seedu.application.commons.core;","lastModifiedDate":"2023-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Represents a version with major, minor and patch number","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Version implements Comparable\u003cVersion\u003e {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String VERSION_REGEX \u003d \"V(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)(ea)?\";","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private static final String EXCEPTION_STRING_NOT_VERSION \u003d \"String is not a valid Version. %s\";","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Pattern VERSION_PATTERN \u003d Pattern.compile(VERSION_REGEX);","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final int major;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final int minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final int patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final boolean isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Constructs a {@code Version} with the given version details.","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Version(int major, int minor, int patch, boolean isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.major \u003d major;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.minor \u003d minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.patch \u003d patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.isEarlyAccess \u003d isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public int getMajor() {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return major;","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public int getMinor() {","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public int getPatch() {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean isEarlyAccess() {","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Parses a version number string in the format V1.2.3.","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * @param versionString version number string","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * @return a Version object","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static Version fromString(String versionString) throws IllegalArgumentException {","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Matcher versionMatcher \u003d VERSION_PATTERN.matcher(versionString);","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (!versionMatcher.find()) {","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(String.format(EXCEPTION_STRING_NOT_VERSION, versionString));","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return new Version(Integer.parseInt(versionMatcher.group(1)),","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                Integer.parseInt(versionMatcher.group(2)),","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                Integer.parseInt(versionMatcher.group(3)),","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                versionMatcher.group(4) \u003d\u003d null ? false : true);","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @JsonValue","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return String.format(\"V%d.%d.%d%s\", major, minor, patch, isEarlyAccess ? \"ea\" : \"\");","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public int compareTo(Version other) {","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (major !\u003d other.major) {","lastModifiedDate":"2018-08-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            return major - other.major;","lastModifiedDate":"2018-08-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        if (minor !\u003d other.minor) {","lastModifiedDate":"2018-08-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            return minor - other.minor;","lastModifiedDate":"2018-08-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        if (patch !\u003d other.patch) {","lastModifiedDate":"2018-08-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            return patch - other.patch;","lastModifiedDate":"2018-08-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        if (isEarlyAccess \u003d\u003d other.isEarlyAccess()) {","lastModifiedDate":"2018-08-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            return 0;","lastModifiedDate":"2017-05-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        if (isEarlyAccess) {","lastModifiedDate":"2018-08-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            return -1;","lastModifiedDate":"2017-05-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return 1;","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-07-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        if (!(other instanceof Version)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Version otherVersion \u003d (Version) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        return major \u003d\u003d otherVersion.major","lastModifiedDate":"2023-07-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"                \u0026\u0026 minor \u003d\u003d otherVersion.minor","lastModifiedDate":"2023-07-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"                \u0026\u0026 patch \u003d\u003d otherVersion.patch","lastModifiedDate":"2023-07-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"                \u0026\u0026 isEarlyAccess \u003d\u003d otherVersion.isEarlyAccess;","lastModifiedDate":"2023-07-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        String hash \u003d String.format(\"%03d%03d%03d\", major, minor, patch);","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        if (!isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            hash \u003d \"1\" + hash;","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        return Integer.parseInt(hash);","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"evanyan13":1,"-":120}},{"path":"src/main/java/seedu/application/commons/core/index/Index.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"evanyan13"},"content":"package seedu.application.commons.core.index;","lastModifiedDate":"2023-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"evanyan13"},"content":"import seedu.application.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Represents a zero-based or one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2017-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * {@code Index} should be used right from the start (when parsing in a new user input), so that if the current","lastModifiedDate":"2017-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * component wants to communicate with another component, it can send an {@code Index} to avoid having to know what","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * base the other component is using for its index. However, after receiving the {@code Index}, that component can","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * convert it back to an int if the index will not be passed to a different component again.","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class Index {","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private int zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Index can only be created by calling {@link Index#fromZeroBased(int)} or","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * {@link Index#fromOneBased(int)}.","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private Index(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        if (zeroBasedIndex \u003c 0) {","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            throw new IndexOutOfBoundsException();","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.zeroBasedIndex \u003d zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public int getZeroBased() {","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        return zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public int getOneBased() {","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return zeroBasedIndex + 1;","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a zero-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static Index fromZeroBased(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return new Index(zeroBasedIndex);","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static Index fromOneBased(int oneBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return new Index(oneBasedIndex - 1);","lastModifiedDate":"2017-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        if (!(other instanceof Index)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Index otherIndex \u003d (Index) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return zeroBasedIndex \u003d\u003d otherIndex.zeroBasedIndex;","lastModifiedDate":"2023-07-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this).add(\"zeroBasedIndex\", zeroBasedIndex).toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"evanyan13":2,"-":67}},{"path":"src/main/java/seedu/application/commons/exceptions/DataLoadingException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"evanyan13"},"content":"package seedu.application.commons.exceptions;","lastModifiedDate":"2023-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-06-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents an error during loading of data from a file.","lastModifiedDate":"2023-06-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-06-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class DataLoadingException extends Exception {","lastModifiedDate":"2023-06-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    public DataLoadingException(Exception cause) {","lastModifiedDate":"2023-06-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"        super(cause);","lastModifiedDate":"2023-06-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-06-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-06-14"}],"authorContributionMap":{"evanyan13":1,"-":10}},{"path":"src/main/java/seedu/application/commons/exceptions/IllegalValueException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"evanyan13"},"content":"package seedu.application.commons.exceptions;","lastModifiedDate":"2023-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Signals that some given data does not fulfill some constraints.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class IllegalValueException extends Exception {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"     * @param message should contain relevant information on the failed constraint(s)","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public IllegalValueException(String message) {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * @param message should contain relevant information on the failed constraint(s)","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * @param cause of the main exception","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public IllegalValueException(String message, Throwable cause) {","lastModifiedDate":"2017-03-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"evanyan13":1,"-":20}},{"path":"src/main/java/seedu/application/commons/util/AppUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"evanyan13"},"content":"package seedu.application.commons.util;","lastModifiedDate":"2023-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"evanyan13"},"content":"import seedu.application.MainApp;","lastModifiedDate":"2023-10-10"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * A container for App specific utility functions","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class AppUtil {","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Gets an {@code Image} from the specified path.","lastModifiedDate":"2020-05-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        requireNonNull(imagePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Checks that {@code condition} is true. Used for validating arguments to methods.","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws IllegalArgumentException if {@code condition} is false.","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static void checkArgument(Boolean condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        if (!condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException();","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Checks that {@code condition} is true. Used for validating arguments to methods.","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @throws IllegalArgumentException with {@code errorMessage} if {@code condition} is false.","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static void checkArgument(Boolean condition, String errorMessage) {","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (!condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(errorMessage);","lastModifiedDate":"2017-05-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"evanyan13":2,"-":40}},{"path":"src/main/java/seedu/application/commons/util/CollectionUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"evanyan13"},"content":"package seedu.application.commons.util;","lastModifiedDate":"2023-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-06-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2016-12-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Utility methods related to Collections","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class CollectionUtil {","lastModifiedDate":"2016-09-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /** @see #requireAllNonNull(Collection) */","lastModifiedDate":"2017-05-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static void requireAllNonNull(Object... items) {","lastModifiedDate":"2017-05-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        requireNonNull(items);","lastModifiedDate":"2017-06-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Stream.of(items).forEach(Objects::requireNonNull);","lastModifiedDate":"2017-05-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Throws NullPointerException if {@code items} or any element of {@code items} is null.","lastModifiedDate":"2017-05-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static void requireAllNonNull(Collection\u003c?\u003e items) {","lastModifiedDate":"2017-05-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        requireNonNull(items);","lastModifiedDate":"2017-06-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        items.forEach(Objects::requireNonNull);","lastModifiedDate":"2017-05-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns true if {@code items} contain any elements that are non-null.","lastModifiedDate":"2017-06-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static boolean isAnyNonNull(Object... items) {","lastModifiedDate":"2017-06-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return items !\u003d null \u0026\u0026 Arrays.stream(items).anyMatch(Objects::nonNull);","lastModifiedDate":"2017-06-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"evanyan13":1,"-":34}},{"path":"src/main/java/seedu/application/commons/util/ConfigUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"evanyan13"},"content":"package seedu.application.commons.util;","lastModifiedDate":"2023-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"evanyan13"},"content":"import seedu.application.commons.core.Config;","lastModifiedDate":"2023-10-10"},{"lineNumber":8,"author":{"gitId":"evanyan13"},"content":"import seedu.application.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-10-10"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * A class for accessing the Config File.","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ConfigUtil {","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static Optional\u003cConfig\u003e readConfig(Path configFilePath) throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        return JsonUtil.readJsonFile(configFilePath, Config.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static void saveConfig(Config config, Path configFilePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(config, configFilePath);","lastModifiedDate":"2016-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"evanyan13":3,"-":20}},{"path":"src/main/java/seedu/application/commons/util/FileUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"evanyan13"},"content":"package seedu.application.commons.util;","lastModifiedDate":"2023-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2016-08-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.InvalidPathException;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Writes and reads files","lastModifiedDate":"2016-10-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class FileUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String CHARSET \u003d \"UTF-8\";","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static boolean isFileExists(Path file) {","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        return Files.exists(file) \u0026\u0026 Files.isRegularFile(file);","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Returns true if {@code path} can be converted into a {@code Path} via {@link Paths#get(String)},","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * otherwise returns false.","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param path A string representing the file path. Cannot be null.","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static boolean isValidPath(String path) {","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            Paths.get(path);","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        } catch (InvalidPathException ipe) {","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2017-08-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws IOException if the file or directory cannot be created.","lastModifiedDate":"2017-08-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static void createIfMissing(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (!isFileExists(file)) {","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            createFile(file);","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2018-04-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static void createFile(Path file) throws IOException {","lastModifiedDate":"2018-04-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (Files.exists(file)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2018-04-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        createParentDirsOfFile(file);","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Files.createFile(file);","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Creates parent directories of file if it has a parent directory","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static void createParentDirsOfFile(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Path parentDir \u003d file.getParent();","lastModifiedDate":"2018-04-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (parentDir !\u003d null) {","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            Files.createDirectories(parentDir);","lastModifiedDate":"2018-04-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Assumes file exists","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static String readFromFile(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return new String(Files.readAllBytes(file), CHARSET);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Writes given string to a file.","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Will create the file if it does not exist yet.","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public static void writeToFile(Path file, String content) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Files.write(file, content.getBytes(CHARSET));","lastModifiedDate":"2018-04-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"evanyan13":1,"-":82}},{"path":"src/main/java/seedu/application/commons/util/JsonUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"evanyan13"},"content":"package seedu.application.commons.util;","lastModifiedDate":"2023-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonAutoDetect;","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.PropertyAccessor;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.core.JsonProcessingException;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.DeserializationContext;","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.DeserializationFeature;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.ObjectMapper;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.SerializationFeature;","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.deser.std.FromStringDeserializer;","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.module.SimpleModule;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.ser.std.ToStringSerializer;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":23,"author":{"gitId":"evanyan13"},"content":"import seedu.application.commons.core.LogsCenter;","lastModifiedDate":"2023-10-10"},{"lineNumber":24,"author":{"gitId":"evanyan13"},"content":"import seedu.application.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-10-10"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Converts a Java object instance to JSON and vice versa","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class JsonUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonUtil.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static ObjectMapper objectMapper \u003d new ObjectMapper().findAndRegisterModules()","lastModifiedDate":"2016-10-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            .configure(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS, false)","lastModifiedDate":"2016-10-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            .configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false)","lastModifiedDate":"2016-10-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            .setVisibility(PropertyAccessor.ALL, JsonAutoDetect.Visibility.NONE)","lastModifiedDate":"2016-10-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            .setVisibility(PropertyAccessor.FIELD, JsonAutoDetect.Visibility.ANY)","lastModifiedDate":"2016-10-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            .registerModule(new SimpleModule(\"SimpleModule\")","lastModifiedDate":"2016-10-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                    .addSerializer(Level.class, new ToStringSerializer())","lastModifiedDate":"2016-10-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                    .addDeserializer(Level.class, new LevelDeserializer(Level.class)));","lastModifiedDate":"2016-10-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    static \u003cT\u003e void serializeObjectToJsonFile(Path jsonFile, T objectToSerialize) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        FileUtil.writeToFile(jsonFile, toJsonString(objectToSerialize));","lastModifiedDate":"2016-10-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    static \u003cT\u003e T deserializeObjectFromJsonFile(Path jsonFile, Class\u003cT\u003e classOfObjectToDeserialize)","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return fromJsonString(FileUtil.readFromFile(jsonFile), classOfObjectToDeserialize);","lastModifiedDate":"2016-10-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Returns the JSON object from the given file or {@code Optional.empty()} object if the file is not found.","lastModifiedDate":"2023-06-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * If any values are missing from the file, default values will be used, as long as the file is a valid JSON file.","lastModifiedDate":"2023-06-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-06-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * @param filePath cannot be null.","lastModifiedDate":"2016-10-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @param classOfObjectToDeserialize JSON file has to correspond to the structure in the class given here.","lastModifiedDate":"2023-06-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * @throws DataLoadingException if loading of the JSON file failed.","lastModifiedDate":"2023-06-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Optional\u003cT\u003e readJsonFile(","lastModifiedDate":"2016-10-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            Path filePath, Class\u003cT\u003e classOfObjectToDeserialize) throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (!Files.exists(filePath)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2016-10-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logger.info(\"JSON file \" + filePath + \" found.\");","lastModifiedDate":"2023-01-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        T jsonFile;","lastModifiedDate":"2016-10-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-10-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            jsonFile \u003d deserializeObjectFromJsonFile(filePath, classOfObjectToDeserialize);","lastModifiedDate":"2018-04-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            logger.warning(\"Error reading from jsonFile file \" + filePath + \": \" + e);","lastModifiedDate":"2018-04-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            throw new DataLoadingException(e);","lastModifiedDate":"2023-06-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return Optional.of(jsonFile);","lastModifiedDate":"2016-10-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Saves the Json object to the specified file.","lastModifiedDate":"2016-10-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Overwrites existing file if it exists, creates a new file if it doesn\u0027t.","lastModifiedDate":"2016-10-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * @param jsonFile cannot be null","lastModifiedDate":"2016-10-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @param filePath cannot be null","lastModifiedDate":"2016-10-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * @throws IOException if there was an error during writing to the file","lastModifiedDate":"2016-10-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e void saveJsonFile(T jsonFile, Path filePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        requireNonNull(jsonFile);","lastModifiedDate":"2017-05-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        serializeObjectToJsonFile(filePath, jsonFile);","lastModifiedDate":"2018-04-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * Converts a given string representation of a JSON data to instance of a class","lastModifiedDate":"2016-10-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * @param \u003cT\u003e The generic type to create an instance of","lastModifiedDate":"2016-10-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * @return The instance of T with the specified values in the JSON string","lastModifiedDate":"2016-10-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e T fromJsonString(String json, Class\u003cT\u003e instanceClass) throws IOException {","lastModifiedDate":"2016-10-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        return objectMapper.readValue(json, instanceClass);","lastModifiedDate":"2016-10-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * Converts a given instance of a class into its JSON data string representation","lastModifiedDate":"2016-10-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * @param instance The T object to be converted into the JSON string","lastModifiedDate":"2016-10-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * @param \u003cT\u003e The generic type to create an instance of","lastModifiedDate":"2016-10-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * @return JSON data representation of the given class instance, in string","lastModifiedDate":"2016-10-19"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e String toJsonString(T instance) throws JsonProcessingException {","lastModifiedDate":"2016-10-19"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        return objectMapper.writerWithDefaultPrettyPrinter().writeValueAsString(instance);","lastModifiedDate":"2016-10-19"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * Contains methods that retrieve logging level from serialized string.","lastModifiedDate":"2017-08-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    private static class LevelDeserializer extends FromStringDeserializer\u003cLevel\u003e {","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        protected LevelDeserializer(Class\u003c?\u003e vc) {","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            super(vc);","lastModifiedDate":"2016-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        protected Level _deserialize(String value, DeserializationContext ctxt) {","lastModifiedDate":"2018-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            return getLoggingLevel(value);","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"         * Gets the logging level that matches loggingLevelString","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"         * \u003cp\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"         * Returns null if there are no matches","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        private Level getLoggingLevel(String loggingLevelString) {","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            return Level.parse(loggingLevelString);","lastModifiedDate":"2016-09-09"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        public Class\u003cLevel\u003e handledType() {","lastModifiedDate":"2016-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            return Level.class;","lastModifiedDate":"2016-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"evanyan13":3,"-":141}},{"path":"src/main/java/seedu/application/commons/util/StringUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"evanyan13"},"content":"package seedu.application.commons.util;","lastModifiedDate":"2023-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"evanyan13"},"content":"import static seedu.application.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-10-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.StringWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Helper functions for handling strings.","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StringUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Returns true if the {@code sentence} contains the {@code word}.","lastModifiedDate":"2016-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     *   Ignores case, but a full word match is required.","lastModifiedDate":"2016-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     *   \u003cbr\u003eexamples:\u003cpre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"abc\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"DEF\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"AB\") \u003d\u003d false //not a full word match","lastModifiedDate":"2016-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *       \u003c/pre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param sentence cannot be null","lastModifiedDate":"2016-10-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @param word cannot be null, cannot be empty, must be a single word","lastModifiedDate":"2016-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static boolean containsWordIgnoreCase(String sentence, String word) {","lastModifiedDate":"2016-10-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        requireNonNull(sentence);","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(word);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        String preppedWord \u003d word.trim();","lastModifiedDate":"2016-10-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        checkArgument(!preppedWord.isEmpty(), \"Word parameter cannot be empty\");","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        checkArgument(preppedWord.split(\"\\\\s+\").length \u003d\u003d 1, \"Word parameter should be a single word\");","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        String preppedSentence \u003d sentence;","lastModifiedDate":"2016-10-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        String[] wordsInPreppedSentence \u003d preppedSentence.split(\"\\\\s+\");","lastModifiedDate":"2016-10-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return Arrays.stream(wordsInPreppedSentence)","lastModifiedDate":"2018-01-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                .anyMatch(preppedWord::equalsIgnoreCase);","lastModifiedDate":"2018-01-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Returns a detailed message of the t, including the stack trace.","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static String getDetails(Throwable t) {","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        requireNonNull(t);","lastModifiedDate":"2017-05-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        StringWriter sw \u003d new StringWriter();","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        t.printStackTrace(new PrintWriter(sw));","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return t.getMessage() + \"\\n\" + sw.toString();","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Returns true if {@code s} represents a non-zero unsigned integer","lastModifiedDate":"2017-06-02"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * e.g. 1, 2, 3, ..., {@code Integer.MAX_VALUE} \u003cbr\u003e","lastModifiedDate":"2017-06-02"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Will return false for any other non-null string input","lastModifiedDate":"2017-06-02"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * e.g. empty string, \"-1\", \"0\", \"+1\", and \" 2 \" (untrimmed), \"3 0\" (contains whitespace), \"1 a\" (contains letters)","lastModifiedDate":"2017-06-02"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code s} is null.","lastModifiedDate":"2017-06-02"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static boolean isNonZeroUnsignedInteger(String s) {","lastModifiedDate":"2017-06-02"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        requireNonNull(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-06-02"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            int value \u003d Integer.parseInt(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            return value \u003e 0 \u0026\u0026 !s.startsWith(\"+\"); // \"+1\" is successfully parsed by Integer#parseInt(String)","lastModifiedDate":"2017-06-02"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2017-06-02"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-06-02"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-02"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"evanyan13":2,"-":66}},{"path":"src/main/java/seedu/application/commons/util/ToStringBuilder.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"evanyan13"},"content":"package seedu.application.commons.util;","lastModifiedDate":"2023-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Builds a string representation of an object that is suitable as the return value of {@link Object#toString()}.","lastModifiedDate":"2019-02-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2019-02-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class ToStringBuilder {","lastModifiedDate":"2019-02-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    private static final String OBJECT_PREFIX \u003d \"{\";","lastModifiedDate":"2019-02-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    private static final String OBJECT_SUFFIX \u003d \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    private static final String FIELD_SEPARATOR \u003d \", \";","lastModifiedDate":"2019-02-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    private static final String FIELD_NAME_VALUE_SEPARATOR \u003d \"\u003d\";","lastModifiedDate":"2019-02-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final StringBuilder stringBuilder \u003d new StringBuilder();","lastModifiedDate":"2019-02-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private boolean hasField;","lastModifiedDate":"2019-02-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-02-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Constructs a {@code ToStringBuilder} whose formatted output will be prefixed with {@code objectName}.","lastModifiedDate":"2019-02-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-02-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public ToStringBuilder(String objectName) {","lastModifiedDate":"2019-02-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        stringBuilder.append(objectName).append(OBJECT_PREFIX);","lastModifiedDate":"2019-02-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-02-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs a {@code ToStringBuilder} whose formatted output will be prefixed with the","lastModifiedDate":"2019-02-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * canonical class name of {@code object}.","lastModifiedDate":"2019-02-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-02-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public ToStringBuilder(Object object) {","lastModifiedDate":"2019-02-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this(object.getClass().getCanonicalName());","lastModifiedDate":"2019-02-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-02-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Adds a field name/value pair to the output string.","lastModifiedDate":"2019-02-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2019-02-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @param fieldName The name of the field.","lastModifiedDate":"2019-02-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @param fieldValue The value of the field.","lastModifiedDate":"2019-02-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @return A reference to this {@code ToStringBuilder} object, allowing method calls to be chained.","lastModifiedDate":"2019-02-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-02-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public ToStringBuilder add(String fieldName, Object fieldValue) {","lastModifiedDate":"2019-02-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (hasField) {","lastModifiedDate":"2019-02-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            stringBuilder.append(FIELD_SEPARATOR);","lastModifiedDate":"2019-02-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-02-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        stringBuilder.append(fieldName).append(FIELD_NAME_VALUE_SEPARATOR).append(fieldValue);","lastModifiedDate":"2019-02-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        hasField \u003d true;","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-02-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Returns the built formatted string representation.","lastModifiedDate":"2019-02-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-02-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return stringBuilder.toString() + OBJECT_SUFFIX;","lastModifiedDate":"2019-02-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-02-23"}],"authorContributionMap":{"evanyan13":1,"-":52}},{"path":"src/main/java/seedu/application/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"evanyan13"},"content":"package seedu.application.logic;","lastModifiedDate":"2023-10-10"},{"lineNumber":2,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":3,"author":{"gitId":"evanyan13"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-10-10"},{"lineNumber":4,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":5,"author":{"gitId":"evanyan13"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-10-10"},{"lineNumber":6,"author":{"gitId":"evanyan13"},"content":"import seedu.application.commons.core.GuiSettings;","lastModifiedDate":"2023-10-10"},{"lineNumber":7,"author":{"gitId":"evanyan13"},"content":"import seedu.application.logic.commands.CommandResult;","lastModifiedDate":"2023-10-10"},{"lineNumber":8,"author":{"gitId":"evanyan13"},"content":"import seedu.application.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-10"},{"lineNumber":9,"author":{"gitId":"evanyan13"},"content":"import seedu.application.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-10"},{"lineNumber":10,"author":{"gitId":"evanyan13"},"content":"import seedu.application.model.Model;","lastModifiedDate":"2023-10-10"},{"lineNumber":11,"author":{"gitId":"evanyan13"},"content":"import seedu.application.model.ReadOnlyApplicationBook;","lastModifiedDate":"2023-10-10"},{"lineNumber":12,"author":{"gitId":"evanyan13"},"content":"import seedu.application.model.job.Job;","lastModifiedDate":"2023-10-10"},{"lineNumber":13,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":14,"author":{"gitId":"evanyan13"},"content":"/**","lastModifiedDate":"2023-10-10"},{"lineNumber":15,"author":{"gitId":"evanyan13"},"content":" * API of the Logic component","lastModifiedDate":"2023-10-10"},{"lineNumber":16,"author":{"gitId":"evanyan13"},"content":" */","lastModifiedDate":"2023-10-10"},{"lineNumber":17,"author":{"gitId":"evanyan13"},"content":"public interface Logic {","lastModifiedDate":"2023-10-10"},{"lineNumber":18,"author":{"gitId":"evanyan13"},"content":"    /**","lastModifiedDate":"2023-10-10"},{"lineNumber":19,"author":{"gitId":"evanyan13"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2023-10-10"},{"lineNumber":20,"author":{"gitId":"evanyan13"},"content":"     *","lastModifiedDate":"2023-10-10"},{"lineNumber":21,"author":{"gitId":"evanyan13"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2023-10-10"},{"lineNumber":22,"author":{"gitId":"evanyan13"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2023-10-10"},{"lineNumber":23,"author":{"gitId":"evanyan13"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2023-10-10"},{"lineNumber":24,"author":{"gitId":"evanyan13"},"content":"     * @throws ParseException   If an error occurs during parsing.","lastModifiedDate":"2023-10-10"},{"lineNumber":25,"author":{"gitId":"evanyan13"},"content":"     */","lastModifiedDate":"2023-10-10"},{"lineNumber":26,"author":{"gitId":"evanyan13"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2023-10-10"},{"lineNumber":27,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":28,"author":{"gitId":"evanyan13"},"content":"    /**","lastModifiedDate":"2023-10-10"},{"lineNumber":29,"author":{"gitId":"evanyan13"},"content":"     * Returns the ApplicationBook.","lastModifiedDate":"2023-10-10"},{"lineNumber":30,"author":{"gitId":"evanyan13"},"content":"     *","lastModifiedDate":"2023-10-10"},{"lineNumber":31,"author":{"gitId":"evanyan13"},"content":"     * @see Model#getApplicationBook()","lastModifiedDate":"2023-10-10"},{"lineNumber":32,"author":{"gitId":"evanyan13"},"content":"     */","lastModifiedDate":"2023-10-10"},{"lineNumber":33,"author":{"gitId":"evanyan13"},"content":"    ReadOnlyApplicationBook getApplicationBook();","lastModifiedDate":"2023-10-10"},{"lineNumber":34,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":35,"author":{"gitId":"evanyan13"},"content":"    /**","lastModifiedDate":"2023-10-10"},{"lineNumber":36,"author":{"gitId":"evanyan13"},"content":"     * Returns an unmodifiable view of the filtered list of jobs","lastModifiedDate":"2023-10-10"},{"lineNumber":37,"author":{"gitId":"evanyan13"},"content":"     */","lastModifiedDate":"2023-10-10"},{"lineNumber":38,"author":{"gitId":"evanyan13"},"content":"    ObservableList\u003cJob\u003e getFilteredJobList();","lastModifiedDate":"2023-10-10"},{"lineNumber":39,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":40,"author":{"gitId":"evanyan13"},"content":"    /**","lastModifiedDate":"2023-10-10"},{"lineNumber":41,"author":{"gitId":"evanyan13"},"content":"     * Returns the user prefs\u0027 application book file path.","lastModifiedDate":"2023-10-10"},{"lineNumber":42,"author":{"gitId":"evanyan13"},"content":"     */","lastModifiedDate":"2023-10-10"},{"lineNumber":43,"author":{"gitId":"evanyan13"},"content":"    Path getApplicationBookFilePath();","lastModifiedDate":"2023-10-10"},{"lineNumber":44,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":45,"author":{"gitId":"evanyan13"},"content":"    /**","lastModifiedDate":"2023-10-10"},{"lineNumber":46,"author":{"gitId":"evanyan13"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2023-10-10"},{"lineNumber":47,"author":{"gitId":"evanyan13"},"content":"     */","lastModifiedDate":"2023-10-10"},{"lineNumber":48,"author":{"gitId":"evanyan13"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2023-10-10"},{"lineNumber":49,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":50,"author":{"gitId":"evanyan13"},"content":"    /**","lastModifiedDate":"2023-10-10"},{"lineNumber":51,"author":{"gitId":"evanyan13"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2023-10-10"},{"lineNumber":52,"author":{"gitId":"evanyan13"},"content":"     */","lastModifiedDate":"2023-10-10"},{"lineNumber":53,"author":{"gitId":"evanyan13"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2023-10-10"},{"lineNumber":54,"author":{"gitId":"evanyan13"},"content":"}","lastModifiedDate":"2023-10-10"}],"authorContributionMap":{"evanyan13":54}},{"path":"src/main/java/seedu/application/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"evanyan13"},"content":"package seedu.application.logic;","lastModifiedDate":"2023-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.AccessDeniedException;","lastModifiedDate":"2023-06-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"evanyan13"},"content":"import seedu.application.commons.core.GuiSettings;","lastModifiedDate":"2023-10-10"},{"lineNumber":10,"author":{"gitId":"evanyan13"},"content":"import seedu.application.commons.core.LogsCenter;","lastModifiedDate":"2023-10-10"},{"lineNumber":11,"author":{"gitId":"evanyan13"},"content":"import seedu.application.logic.commands.Command;","lastModifiedDate":"2023-10-10"},{"lineNumber":12,"author":{"gitId":"evanyan13"},"content":"import seedu.application.logic.commands.CommandResult;","lastModifiedDate":"2023-10-10"},{"lineNumber":13,"author":{"gitId":"evanyan13"},"content":"import seedu.application.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-10"},{"lineNumber":14,"author":{"gitId":"evanyan13"},"content":"import seedu.application.logic.parser.ApplicationBookParser;","lastModifiedDate":"2023-10-10"},{"lineNumber":15,"author":{"gitId":"evanyan13"},"content":"import seedu.application.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-10"},{"lineNumber":16,"author":{"gitId":"evanyan13"},"content":"import seedu.application.model.Model;","lastModifiedDate":"2023-10-10"},{"lineNumber":17,"author":{"gitId":"evanyan13"},"content":"import seedu.application.model.ReadOnlyApplicationBook;","lastModifiedDate":"2023-10-10"},{"lineNumber":18,"author":{"gitId":"evanyan13"},"content":"import seedu.application.model.job.Job;","lastModifiedDate":"2023-10-10"},{"lineNumber":19,"author":{"gitId":"evanyan13"},"content":"import seedu.application.storage.Storage;","lastModifiedDate":"2023-10-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_FORMAT \u003d \"Could not save data due to the following error: %s\";","lastModifiedDate":"2023-06-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_PERMISSION_ERROR_FORMAT \u003d","lastModifiedDate":"2023-06-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            \"Could not save data to file %s due to insufficient permissions to write to the file or the folder.\";","lastModifiedDate":"2023-06-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"evanyan13"},"content":"    private final ApplicationBookParser applicationBookParser;","lastModifiedDate":"2023-10-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"evanyan13"},"content":"        applicationBookParser \u003d new ApplicationBookParser();","lastModifiedDate":"2023-10-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"evanyan13"},"content":"        Command command \u003d applicationBookParser.parseCommand(commandText);","lastModifiedDate":"2023-10-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"evanyan13"},"content":"            storage.saveApplicationBook(model.getApplicationBook());","lastModifiedDate":"2023-10-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        } catch (AccessDeniedException e) {","lastModifiedDate":"2023-06-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            throw new CommandException(String.format(FILE_OPS_PERMISSION_ERROR_FORMAT, e.getMessage()), e);","lastModifiedDate":"2023-06-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            throw new CommandException(String.format(FILE_OPS_ERROR_FORMAT, ioe.getMessage()), ioe);","lastModifiedDate":"2023-06-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":65,"author":{"gitId":"evanyan13"},"content":"    public ReadOnlyApplicationBook getApplicationBook() {","lastModifiedDate":"2023-10-10"},{"lineNumber":66,"author":{"gitId":"evanyan13"},"content":"        return model.getApplicationBook();","lastModifiedDate":"2023-10-10"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":70,"author":{"gitId":"JeremyYong128"},"content":"    public ObservableList\u003cJob\u003e getFilteredJobList() {","lastModifiedDate":"2023-10-04"},{"lineNumber":71,"author":{"gitId":"JeremyYong128"},"content":"        return model.getFilteredJobList();","lastModifiedDate":"2023-10-04"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"evanyan13"},"content":"    public Path getApplicationBookFilePath() {","lastModifiedDate":"2023-10-10"},{"lineNumber":76,"author":{"gitId":"evanyan13"},"content":"        return model.getApplicationBookFilePath();","lastModifiedDate":"2023-10-10"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"evanyan13":20,"-":66,"JeremyYong128":2}},{"path":"src/main/java/seedu/application/logic/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"evanyan13"},"content":"package seedu.application.logic;","lastModifiedDate":"2023-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2023-07-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-07-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-07-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":7,"author":{"gitId":"czhiruo"},"content":"import seedu.application.logic.commands.HelpCommand;","lastModifiedDate":"2023-10-16"},{"lineNumber":8,"author":{"gitId":"evanyan13"},"content":"import seedu.application.logic.parser.Prefix;","lastModifiedDate":"2023-10-10"},{"lineNumber":9,"author":{"gitId":"evanyan13"},"content":"import seedu.application.model.job.Job;","lastModifiedDate":"2023-10-10"},{"lineNumber":10,"author":{"gitId":"peiran18"},"content":"import seedu.application.model.job.interview.Interview;","lastModifiedDate":"2023-10-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"evanyan13"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown Command.\\n\" + HelpCommand.MESSAGE_USAGE;","lastModifiedDate":"2023-10-22"},{"lineNumber":18,"author":{"gitId":"JeremyYong128"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n\\n%1$s\\n\";","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"JeremyYong128"},"content":"    public static final String MESSAGE_INVALID_JOB_DISPLAYED_INDEX \u003d \"The job index provided is invalid!\";","lastModifiedDate":"2023-10-20"},{"lineNumber":20,"author":{"gitId":"JeremyYong128"},"content":"    public static final String MESSAGE_JOBS_LISTED_OVERVIEW \u003d \"%1$d jobs found!\";","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_FIELDS \u003d","lastModifiedDate":"2023-07-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \"Multiple values specified for the following single-valued field(s): \";","lastModifiedDate":"2023-07-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-07-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Returns an error message indicating the duplicate prefixes.","lastModifiedDate":"2023-07-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-07-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static String getErrorMessageForDuplicatePrefixes(Prefix... duplicatePrefixes) {","lastModifiedDate":"2023-07-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assert duplicatePrefixes.length \u003e 0;","lastModifiedDate":"2023-07-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        Set\u003cString\u003e duplicateFields \u003d","lastModifiedDate":"2023-07-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            Stream.of(duplicatePrefixes).map(Prefix::toString).collect(Collectors.toSet());","lastModifiedDate":"2023-07-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return MESSAGE_DUPLICATE_FIELDS + String.join(\" \", duplicateFields);","lastModifiedDate":"2023-07-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-02-23"},{"lineNumber":37,"author":{"gitId":"peiran18"},"content":"     * Formats the {@code job} for display to the user.","lastModifiedDate":"2023-10-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-02-23"},{"lineNumber":39,"author":{"gitId":"JeremyYong128"},"content":"    public static String format(Job job) {","lastModifiedDate":"2023-10-04"},{"lineNumber":40,"author":{"gitId":"migfoo02"},"content":"        return job.getCompany()","lastModifiedDate":"2023-10-22"},{"lineNumber":41,"author":{"gitId":"migfoo02"},"content":"                + \"; Role: \"","lastModifiedDate":"2023-10-22"},{"lineNumber":42,"author":{"gitId":"migfoo02"},"content":"                + job.getRole()","lastModifiedDate":"2023-10-22"},{"lineNumber":43,"author":{"gitId":"migfoo02"},"content":"                + \"; Deadline: \"","lastModifiedDate":"2023-10-22"},{"lineNumber":44,"author":{"gitId":"migfoo02"},"content":"                + job.getDeadline()","lastModifiedDate":"2023-10-22"},{"lineNumber":45,"author":{"gitId":"migfoo02"},"content":"                + \"; Status: \"","lastModifiedDate":"2023-10-22"},{"lineNumber":46,"author":{"gitId":"migfoo02"},"content":"                + job.getStatus()","lastModifiedDate":"2023-10-22"},{"lineNumber":47,"author":{"gitId":"migfoo02"},"content":"                + \"; Job Type: \"","lastModifiedDate":"2023-10-22"},{"lineNumber":48,"author":{"gitId":"migfoo02"},"content":"                + job.getJobType()","lastModifiedDate":"2023-10-22"},{"lineNumber":49,"author":{"gitId":"migfoo02"},"content":"                + \"; Industry: \"","lastModifiedDate":"2023-10-22"},{"lineNumber":50,"author":{"gitId":"peiran18"},"content":"                + job.getIndustry();","lastModifiedDate":"2023-10-30"},{"lineNumber":51,"author":{"gitId":"peiran18"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":52,"author":{"gitId":"peiran18"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":53,"author":{"gitId":"peiran18"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":54,"author":{"gitId":"peiran18"},"content":"     * Formats the {@code interview} for display to the user.","lastModifiedDate":"2023-10-31"},{"lineNumber":55,"author":{"gitId":"peiran18"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":56,"author":{"gitId":"peiran18"},"content":"    public static String format(Interview interview) {","lastModifiedDate":"2023-10-30"},{"lineNumber":57,"author":{"gitId":"peiran18"},"content":"        return interview.getInterviewType()","lastModifiedDate":"2023-10-30"},{"lineNumber":58,"author":{"gitId":"peiran18"},"content":"            + \" interview; Date and Time: \"","lastModifiedDate":"2023-10-30"},{"lineNumber":59,"author":{"gitId":"peiran18"},"content":"            + interview.getInterviewDateTime()","lastModifiedDate":"2023-10-30"},{"lineNumber":60,"author":{"gitId":"peiran18"},"content":"            + \"; Address: \"","lastModifiedDate":"2023-10-30"},{"lineNumber":61,"author":{"gitId":"peiran18"},"content":"            + interview.getInterviewAddress();","lastModifiedDate":"2023-10-30"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"czhiruo":1,"evanyan13":4,"peiran18":14,"-":31,"JeremyYong128":4,"migfoo02":10}},{"path":"src/main/java/seedu/application/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"evanyan13"},"content":"package seedu.application.logic.commands;","lastModifiedDate":"2023-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"peiran18"},"content":"import static seedu.application.logic.parser.CliSyntax.*;","lastModifiedDate":"2023-10-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":6,"author":{"gitId":"evanyan13"},"content":"import seedu.application.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-10"},{"lineNumber":7,"author":{"gitId":"evanyan13"},"content":"import seedu.application.logic.Messages;","lastModifiedDate":"2023-10-10"},{"lineNumber":8,"author":{"gitId":"evanyan13"},"content":"import seedu.application.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-10"},{"lineNumber":9,"author":{"gitId":"evanyan13"},"content":"import seedu.application.model.Model;","lastModifiedDate":"2023-10-10"},{"lineNumber":10,"author":{"gitId":"evanyan13"},"content":"import seedu.application.model.job.Job;","lastModifiedDate":"2023-10-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"peiran18"},"content":" * Adds a job to the application book.","lastModifiedDate":"2023-10-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"evanyan13"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a job to the application book. \"","lastModifiedDate":"2023-10-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":21,"author":{"gitId":"JeremyYong128"},"content":"        + PREFIX_COMPANY + \"COMPANY \"","lastModifiedDate":"2023-10-04"},{"lineNumber":22,"author":{"gitId":"JeremyYong128"},"content":"        + PREFIX_ROLE + \"ROLE\\n\"","lastModifiedDate":"2023-10-16"},{"lineNumber":23,"author":{"gitId":"evanyan13"},"content":"        + \"[Optional] \"","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"evanyan13"},"content":"        + PREFIX_STATUS + \"STATUS \"","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"peiran18"},"content":"        + PREFIX_DEADLINE + \"DEADLINE \"","lastModifiedDate":"2023-10-19"},{"lineNumber":26,"author":{"gitId":"migfoo02"},"content":"        + PREFIX_JOB_TYPE + \"JOB TYPE \"","lastModifiedDate":"2023-10-23"},{"lineNumber":27,"author":{"gitId":"czhiruo"},"content":"        + PREFIX_INDUSTRY + \"INDUSTRY\\n\\n\"","lastModifiedDate":"2023-10-20"},{"lineNumber":28,"author":{"gitId":"evanyan13"},"content":"        + \"Example: \\n\"","lastModifiedDate":"2023-10-18"},{"lineNumber":29,"author":{"gitId":"evanyan13"},"content":"        + COMMAND_WORD + \" \"","lastModifiedDate":"2023-10-18"},{"lineNumber":30,"author":{"gitId":"JeremyYong128"},"content":"        + PREFIX_COMPANY + \"Google \"","lastModifiedDate":"2023-10-16"},{"lineNumber":31,"author":{"gitId":"evanyan13"},"content":"        + PREFIX_ROLE + \"Software Engineer\\n\"","lastModifiedDate":"2023-10-18"},{"lineNumber":32,"author":{"gitId":"evanyan13"},"content":"        + \"OR\\n\" + COMMAND_WORD + \" \"","lastModifiedDate":"2023-10-18"},{"lineNumber":33,"author":{"gitId":"evanyan13"},"content":"        + PREFIX_COMPANY + \"Google \"","lastModifiedDate":"2023-10-18"},{"lineNumber":34,"author":{"gitId":"evanyan13"},"content":"        + PREFIX_ROLE + \"Software Engineer \"","lastModifiedDate":"2023-10-18"},{"lineNumber":35,"author":{"gitId":"migfoo02"},"content":"        + PREFIX_STATUS + \"PENDING \"","lastModifiedDate":"2023-10-20"},{"lineNumber":36,"author":{"gitId":"peiran18"},"content":"        + PREFIX_DEADLINE + \"Dec 31 2030 1200 \"","lastModifiedDate":"2023-10-19"},{"lineNumber":37,"author":{"gitId":"migfoo02"},"content":"        + PREFIX_JOB_TYPE + \"INTERNSHIP \"","lastModifiedDate":"2023-10-23"},{"lineNumber":38,"author":{"gitId":"migfoo02"},"content":"        + PREFIX_INDUSTRY + \"Technology\\n\";","lastModifiedDate":"2023-10-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"JeremyYong128"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New job added: %1$s\";","lastModifiedDate":"2023-10-04"},{"lineNumber":41,"author":{"gitId":"evanyan13"},"content":"    public static final String MESSAGE_DUPLICATE_JOB \u003d \"This job already exists in the application book\";","lastModifiedDate":"2023-10-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"JeremyYong128"},"content":"    private final Job toAdd;","lastModifiedDate":"2023-10-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"JeremyYong128"},"content":"     * Creates an AddCommand to add the specified {@code Job}","lastModifiedDate":"2023-10-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"JeremyYong128"},"content":"    public AddCommand(Job job) {","lastModifiedDate":"2023-10-04"},{"lineNumber":49,"author":{"gitId":"JeremyYong128"},"content":"        requireNonNull(job);","lastModifiedDate":"2023-10-04"},{"lineNumber":50,"author":{"gitId":"JeremyYong128"},"content":"        toAdd \u003d job;","lastModifiedDate":"2023-10-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":57,"author":{"gitId":"JeremyYong128"},"content":"        if (model.hasJob(toAdd)) {","lastModifiedDate":"2023-10-04"},{"lineNumber":58,"author":{"gitId":"JeremyYong128"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_JOB);","lastModifiedDate":"2023-10-04"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":61,"author":{"gitId":"JeremyYong128"},"content":"        model.addJob(toAdd);","lastModifiedDate":"2023-10-04"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, Messages.format(toAdd)));","lastModifiedDate":"2019-02-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        if (!(other instanceof AddCommand)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        AddCommand otherAddCommand \u003d (AddCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return toAdd.equals(otherAddCommand.toAdd);","lastModifiedDate":"2023-07-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            .add(\"toAdd\", toAdd)","lastModifiedDate":"2019-02-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"czhiruo":1,"evanyan13":16,"peiran18":4,"-":49,"JeremyYong128":12,"migfoo02":4}},{"path":"src/main/java/seedu/application/logic/commands/ClearCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"evanyan13"},"content":"package seedu.application.logic.commands;","lastModifiedDate":"2023-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"evanyan13"},"content":"import seedu.application.model.ApplicationBook;","lastModifiedDate":"2023-10-10"},{"lineNumber":6,"author":{"gitId":"evanyan13"},"content":"import seedu.application.model.Model;","lastModifiedDate":"2023-10-10"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"evanyan13"},"content":" * Clears the application book.","lastModifiedDate":"2023-10-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ClearCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"clear\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"evanyan13"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Application book has been cleared!\";","lastModifiedDate":"2023-10-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":20,"author":{"gitId":"evanyan13"},"content":"        model.setApplicationBook(new ApplicationBook());","lastModifiedDate":"2023-10-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"evanyan13":6,"-":17}},{"path":"src/main/java/seedu/application/logic/commands/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"evanyan13"},"content":"package seedu.application.logic.commands;","lastModifiedDate":"2023-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"evanyan13"},"content":"import seedu.application.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-10"},{"lineNumber":4,"author":{"gitId":"evanyan13"},"content":"import seedu.application.model.Model;","lastModifiedDate":"2023-10-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a command with hidden internal logic and the ability to be executed.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public abstract class Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result message.","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * @return feedback message of the operation result for display","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public abstract CommandResult execute(Model model) throws CommandException;","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"evanyan13":3,"-":17}},{"path":"src/main/java/seedu/application/logic/commands/CommandResult.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"evanyan13"},"content":"package seedu.application.logic.commands;","lastModifiedDate":"2023-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-12-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"evanyan13"},"content":"import seedu.application.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-10"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Represents the result of a command execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class CommandResult {","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final String feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /** Help information should be shown to the user. */","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final boolean showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /** The application should exit. */","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final boolean exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified fields.","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser, boolean showHelp, boolean exit) {","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.showHelp \u003d showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this.exit \u003d exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser},","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * and other fields set to their default value.","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this(feedbackToUser, false, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public String getFeedbackToUser() {","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public boolean isShowHelp() {","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean isExit() {","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        if (!(other instanceof CommandResult)) {","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        CommandResult otherCommandResult \u003d (CommandResult) other;","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return feedbackToUser.equals(otherCommandResult.feedbackToUser)","lastModifiedDate":"2018-12-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                \u0026\u0026 showHelp \u003d\u003d otherCommandResult.showHelp","lastModifiedDate":"2018-12-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                \u0026\u0026 exit \u003d\u003d otherCommandResult.exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return Objects.hash(feedbackToUser, showHelp, exit);","lastModifiedDate":"2018-12-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                .add(\"feedbackToUser\", feedbackToUser)","lastModifiedDate":"2019-02-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                .add(\"showHelp\", showHelp)","lastModifiedDate":"2019-02-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .add(\"exit\", exit)","lastModifiedDate":"2019-02-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"evanyan13":2,"-":80}},{"path":"src/main/java/seedu/application/logic/commands/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"evanyan13"},"content":"package seedu.application.logic.commands;","lastModifiedDate":"2023-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-09-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"evanyan13"},"content":"import seedu.application.commons.core.index.Index;","lastModifiedDate":"2023-10-10"},{"lineNumber":8,"author":{"gitId":"evanyan13"},"content":"import seedu.application.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-10"},{"lineNumber":9,"author":{"gitId":"evanyan13"},"content":"import seedu.application.logic.Messages;","lastModifiedDate":"2023-10-10"},{"lineNumber":10,"author":{"gitId":"evanyan13"},"content":"import seedu.application.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-10"},{"lineNumber":11,"author":{"gitId":"evanyan13"},"content":"import seedu.application.model.Model;","lastModifiedDate":"2023-10-10"},{"lineNumber":12,"author":{"gitId":"evanyan13"},"content":"import seedu.application.model.job.Job;","lastModifiedDate":"2023-10-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"JeremyYong128"},"content":" * Deletes a job identified using it\u0027s displayed index from the application book.","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"JeremyYong128"},"content":"            + \": Deletes the job identified by the index number used in the displayed job list.\\n\"","lastModifiedDate":"2023-10-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2016-09-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"JeremyYong128"},"content":"    public static final String MESSAGE_DELETE_JOB_SUCCESS \u003d \"Deleted Job: %1$s\";","lastModifiedDate":"2023-10-16"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Index targetIndex;","lastModifiedDate":"2017-06-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"peiran18"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"peiran18"},"content":"     * Constructs a DeleteCommand with the specified target index.","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"peiran18"},"content":"     *","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"peiran18"},"content":"     * @param targetIndex The index of the job to be deleted.","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"peiran18"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public DeleteCommand(Index targetIndex) {","lastModifiedDate":"2017-05-25"},{"lineNumber":36,"author":{"gitId":"czhiruo"},"content":"        requireNonNull(targetIndex);","lastModifiedDate":"2023-10-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2016-09-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"peiran18"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":41,"author":{"gitId":"peiran18"},"content":"     * Executes the delete command to remove an application from the application list.","lastModifiedDate":"2023-10-13"},{"lineNumber":42,"author":{"gitId":"peiran18"},"content":"     *","lastModifiedDate":"2023-10-13"},{"lineNumber":43,"author":{"gitId":"peiran18"},"content":"     * @param model The model containing the application list.","lastModifiedDate":"2023-10-13"},{"lineNumber":44,"author":{"gitId":"peiran18"},"content":"     * @return A CommandResult indicating the result of the execution.","lastModifiedDate":"2023-10-13"},{"lineNumber":45,"author":{"gitId":"peiran18"},"content":"     * @throws CommandException If the command execution encounters an error.","lastModifiedDate":"2023-10-13"},{"lineNumber":46,"author":{"gitId":"peiran18"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":50,"author":{"gitId":"JeremyYong128"},"content":"        List\u003cJob\u003e lastShownList \u003d model.getFilteredJobList();","lastModifiedDate":"2023-10-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"JeremyYong128"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_JOB_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":56,"author":{"gitId":"JeremyYong128"},"content":"        Job jobToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2023-10-04"},{"lineNumber":57,"author":{"gitId":"JeremyYong128"},"content":"        model.deleteJob(jobToDelete);","lastModifiedDate":"2023-10-04"},{"lineNumber":58,"author":{"gitId":"JeremyYong128"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_JOB_SUCCESS, Messages.format(jobToDelete)));","lastModifiedDate":"2023-10-04"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":61,"author":{"gitId":"peiran18"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":62,"author":{"gitId":"peiran18"},"content":"     * Checks if this DeleteCommand is equal to another object.","lastModifiedDate":"2023-10-13"},{"lineNumber":63,"author":{"gitId":"peiran18"},"content":"     *","lastModifiedDate":"2023-10-13"},{"lineNumber":64,"author":{"gitId":"peiran18"},"content":"     * @param other The object to compare with this DeleteCommand.","lastModifiedDate":"2023-10-13"},{"lineNumber":65,"author":{"gitId":"peiran18"},"content":"     * @return True if the objects are equal, false otherwise.","lastModifiedDate":"2023-10-13"},{"lineNumber":66,"author":{"gitId":"peiran18"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        if (!(other instanceof DeleteCommand)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        DeleteCommand otherDeleteCommand \u003d (DeleteCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return targetIndex.equals(otherDeleteCommand.targetIndex);","lastModifiedDate":"2023-07-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":82,"author":{"gitId":"peiran18"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":83,"author":{"gitId":"peiran18"},"content":"     * Generates a string representation of this DeleteCommand.","lastModifiedDate":"2023-10-13"},{"lineNumber":84,"author":{"gitId":"peiran18"},"content":"     *","lastModifiedDate":"2023-10-13"},{"lineNumber":85,"author":{"gitId":"peiran18"},"content":"     * @return A string representing the DeleteCommand.","lastModifiedDate":"2023-10-13"},{"lineNumber":86,"author":{"gitId":"peiran18"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"                .add(\"targetIndex\", targetIndex)","lastModifiedDate":"2019-02-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"czhiruo":1,"evanyan13":7,"peiran18":23,"-":54,"JeremyYong128":8}},{"path":"src/main/java/seedu/application/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"evanyan13"},"content":"package seedu.application.logic.commands;","lastModifiedDate":"2023-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"migfoo02"},"content":"import static seedu.application.logic.parser.CliSyntax.PREFIX_COMPANY;","lastModifiedDate":"2023-10-22"},{"lineNumber":5,"author":{"gitId":"migfoo02"},"content":"import static seedu.application.logic.parser.CliSyntax.PREFIX_DEADLINE;","lastModifiedDate":"2023-10-22"},{"lineNumber":6,"author":{"gitId":"migfoo02"},"content":"import static seedu.application.logic.parser.CliSyntax.PREFIX_INDUSTRY;","lastModifiedDate":"2023-10-22"},{"lineNumber":7,"author":{"gitId":"migfoo02"},"content":"import static seedu.application.logic.parser.CliSyntax.PREFIX_JOB_TYPE;","lastModifiedDate":"2023-10-23"},{"lineNumber":8,"author":{"gitId":"migfoo02"},"content":"import static seedu.application.logic.parser.CliSyntax.PREFIX_ROLE;","lastModifiedDate":"2023-10-22"},{"lineNumber":9,"author":{"gitId":"migfoo02"},"content":"import static seedu.application.logic.parser.CliSyntax.PREFIX_STATUS;","lastModifiedDate":"2023-10-22"},{"lineNumber":10,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2023-07-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":15,"author":{"gitId":"evanyan13"},"content":"import seedu.application.commons.core.index.Index;","lastModifiedDate":"2023-10-10"},{"lineNumber":16,"author":{"gitId":"evanyan13"},"content":"import seedu.application.commons.util.CollectionUtil;","lastModifiedDate":"2023-10-10"},{"lineNumber":17,"author":{"gitId":"evanyan13"},"content":"import seedu.application.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-10"},{"lineNumber":18,"author":{"gitId":"evanyan13"},"content":"import seedu.application.logic.Messages;","lastModifiedDate":"2023-10-10"},{"lineNumber":19,"author":{"gitId":"evanyan13"},"content":"import seedu.application.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-10"},{"lineNumber":20,"author":{"gitId":"evanyan13"},"content":"import seedu.application.model.Model;","lastModifiedDate":"2023-10-10"},{"lineNumber":21,"author":{"gitId":"migfoo02"},"content":"import seedu.application.model.job.Company;","lastModifiedDate":"2023-10-22"},{"lineNumber":22,"author":{"gitId":"migfoo02"},"content":"import seedu.application.model.job.Deadline;","lastModifiedDate":"2023-10-22"},{"lineNumber":23,"author":{"gitId":"migfoo02"},"content":"import seedu.application.model.job.Industry;","lastModifiedDate":"2023-10-22"},{"lineNumber":24,"author":{"gitId":"migfoo02"},"content":"import seedu.application.model.job.Job;","lastModifiedDate":"2023-10-22"},{"lineNumber":25,"author":{"gitId":"migfoo02"},"content":"import seedu.application.model.job.JobType;","lastModifiedDate":"2023-10-22"},{"lineNumber":26,"author":{"gitId":"migfoo02"},"content":"import seedu.application.model.job.Role;","lastModifiedDate":"2023-10-22"},{"lineNumber":27,"author":{"gitId":"migfoo02"},"content":"import seedu.application.model.job.Status;","lastModifiedDate":"2023-10-22"},{"lineNumber":28,"author":{"gitId":"migfoo02"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":31,"author":{"gitId":"evanyan13"},"content":" * Edits the details of an existing job in the application book.","lastModifiedDate":"2023-10-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":37,"author":{"gitId":"JeremyYong128"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the job identified \"","lastModifiedDate":"2023-10-04"},{"lineNumber":38,"author":{"gitId":"peiran18"},"content":"        + \"by the index number used in the displayed job list.\\n\"","lastModifiedDate":"2023-10-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":41,"author":{"gitId":"JeremyYong128"},"content":"        + \"[\" + PREFIX_ROLE + \"ROLE] \"","lastModifiedDate":"2023-10-04"},{"lineNumber":42,"author":{"gitId":"evanyan13"},"content":"        + \"[\" + PREFIX_COMPANY + \"COMPANY] \"","lastModifiedDate":"2023-10-18"},{"lineNumber":43,"author":{"gitId":"evanyan13"},"content":"        + \"[\" + PREFIX_DEADLINE + \"DEADLINE] \"","lastModifiedDate":"2023-10-18"},{"lineNumber":44,"author":{"gitId":"peiran18"},"content":"        + \"[\" + PREFIX_STATUS + \"STATUS] \"","lastModifiedDate":"2023-10-19"},{"lineNumber":45,"author":{"gitId":"migfoo02"},"content":"        + \"[\" + PREFIX_JOB_TYPE + \"JOB TYPE] \"","lastModifiedDate":"2023-10-23"},{"lineNumber":46,"author":{"gitId":"czhiruo"},"content":"        + \"[\" + PREFIX_INDUSTRY + \"INDUSTRY] \"","lastModifiedDate":"2023-10-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"JeremyYong128"},"content":"        + PREFIX_ROLE + \"Software Engineer \"","lastModifiedDate":"2023-10-04"},{"lineNumber":49,"author":{"gitId":"evanyan13"},"content":"        + PREFIX_COMPANY + \"Google\"","lastModifiedDate":"2023-10-18"},{"lineNumber":50,"author":{"gitId":"peiran18"},"content":"        + PREFIX_DEADLINE + \"Dec 31 2023 1200\"","lastModifiedDate":"2023-10-19"},{"lineNumber":51,"author":{"gitId":"czhiruo"},"content":"        + PREFIX_STATUS + \"Pending \"","lastModifiedDate":"2023-10-20"},{"lineNumber":52,"author":{"gitId":"migfoo02"},"content":"        + PREFIX_JOB_TYPE + \"INTERNSHIP\"","lastModifiedDate":"2023-10-23"},{"lineNumber":53,"author":{"gitId":"migfoo02"},"content":"        + PREFIX_INDUSTRY + \"Technology\";","lastModifiedDate":"2023-10-22"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":55,"author":{"gitId":"JeremyYong128"},"content":"    public static final String MESSAGE_EDIT_JOB_SUCCESS \u003d \"Edited Job: %1$s\";","lastModifiedDate":"2023-10-04"},{"lineNumber":56,"author":{"gitId":"evanyan13"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided. \\n\"","lastModifiedDate":"2023-10-18"},{"lineNumber":57,"author":{"gitId":"migfoo02"},"content":"        + PREFIX_COMPANY + \" for Company\\n\"","lastModifiedDate":"2023-10-20"},{"lineNumber":58,"author":{"gitId":"migfoo02"},"content":"        + PREFIX_ROLE + \" for Role\\n\"","lastModifiedDate":"2023-10-20"},{"lineNumber":59,"author":{"gitId":"migfoo02"},"content":"        + PREFIX_STATUS + \" for Status\\n\"","lastModifiedDate":"2023-10-20"},{"lineNumber":60,"author":{"gitId":"migfoo02"},"content":"        + PREFIX_DEADLINE + \" for Deadline\\n\"","lastModifiedDate":"2023-10-20"},{"lineNumber":61,"author":{"gitId":"migfoo02"},"content":"        + PREFIX_JOB_TYPE + \" for Job Type\\n\"","lastModifiedDate":"2023-10-23"},{"lineNumber":62,"author":{"gitId":"migfoo02"},"content":"        + PREFIX_INDUSTRY + \" for Industry\\n\";","lastModifiedDate":"2023-10-22"},{"lineNumber":63,"author":{"gitId":"evanyan13"},"content":"    public static final String MESSAGE_DUPLICATE_JOB \u003d \"This job already exists in the application book.\";","lastModifiedDate":"2023-10-10"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":66,"author":{"gitId":"JeremyYong128"},"content":"    private final EditJobDescriptor editJobDescriptor;","lastModifiedDate":"2023-10-04"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":69,"author":{"gitId":"JeremyYong128"},"content":"     * @param index             of the job in the filtered job list to edit","lastModifiedDate":"2023-10-04"},{"lineNumber":70,"author":{"gitId":"JeremyYong128"},"content":"     * @param editJobDescriptor details to edit the job with","lastModifiedDate":"2023-10-04"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":72,"author":{"gitId":"JeremyYong128"},"content":"    public EditCommand(Index index, EditJobDescriptor editJobDescriptor) {","lastModifiedDate":"2023-10-04"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":74,"author":{"gitId":"JeremyYong128"},"content":"        requireNonNull(editJobDescriptor);","lastModifiedDate":"2023-10-04"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":77,"author":{"gitId":"JeremyYong128"},"content":"        this.editJobDescriptor \u003d new EditJobDescriptor(editJobDescriptor);","lastModifiedDate":"2023-10-04"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":83,"author":{"gitId":"JeremyYong128"},"content":"        List\u003cJob\u003e lastShownList \u003d model.getFilteredJobList();","lastModifiedDate":"2023-10-04"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"JeremyYong128"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_JOB_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-04"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":89,"author":{"gitId":"JeremyYong128"},"content":"        Job jobToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2023-10-04"},{"lineNumber":90,"author":{"gitId":"JeremyYong128"},"content":"        Job editedJob \u003d createEditedJob(jobToEdit, editJobDescriptor);","lastModifiedDate":"2023-10-04"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":92,"author":{"gitId":"JeremyYong128"},"content":"        if (!jobToEdit.isSameJob(editedJob) \u0026\u0026 model.hasJob(editedJob)) {","lastModifiedDate":"2023-10-04"},{"lineNumber":93,"author":{"gitId":"JeremyYong128"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_JOB);","lastModifiedDate":"2023-10-04"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":96,"author":{"gitId":"JeremyYong128"},"content":"        model.setJob(jobToEdit, editedJob);","lastModifiedDate":"2023-10-04"},{"lineNumber":97,"author":{"gitId":"evanyan13"},"content":"        model.updateFilteredJobList(Model.PREDICATE_SHOW_ALL_JOBS);","lastModifiedDate":"2023-10-10"},{"lineNumber":98,"author":{"gitId":"JeremyYong128"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_JOB_SUCCESS, Messages.format(editedJob)));","lastModifiedDate":"2023-10-04"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":102,"author":{"gitId":"JeremyYong128"},"content":"     * Creates and returns a {@code Job} with the details of {@code jobToEdit}","lastModifiedDate":"2023-10-04"},{"lineNumber":103,"author":{"gitId":"JeremyYong128"},"content":"     * edited with {@code editJobDescriptor}.","lastModifiedDate":"2023-10-04"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":105,"author":{"gitId":"JeremyYong128"},"content":"    private static Job createEditedJob(Job jobToEdit, EditJobDescriptor editJobDescriptor) {","lastModifiedDate":"2023-10-04"},{"lineNumber":106,"author":{"gitId":"JeremyYong128"},"content":"        assert jobToEdit !\u003d null;","lastModifiedDate":"2023-10-04"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":108,"author":{"gitId":"JeremyYong128"},"content":"        Role updatedRole \u003d editJobDescriptor.getRole().orElse(jobToEdit.getRole());","lastModifiedDate":"2023-10-04"},{"lineNumber":109,"author":{"gitId":"JeremyYong128"},"content":"        Company updatedCompany \u003d editJobDescriptor.getCompany().orElse(jobToEdit.getCompany());","lastModifiedDate":"2023-10-04"},{"lineNumber":110,"author":{"gitId":"evanyan13"},"content":"        Deadline updatedDeadline \u003d editJobDescriptor.getDeadline().orElse(jobToEdit.getDeadline());","lastModifiedDate":"2023-10-18"},{"lineNumber":111,"author":{"gitId":"migfoo02"},"content":"        Status updatedStatus \u003d editJobDescriptor.getStatus().orElse(jobToEdit.getStatus());","lastModifiedDate":"2023-10-22"},{"lineNumber":112,"author":{"gitId":"migfoo02"},"content":"        JobType updatedJobType \u003d editJobDescriptor.getJobType().orElse(jobToEdit.getJobType());","lastModifiedDate":"2023-10-20"},{"lineNumber":113,"author":{"gitId":"czhiruo"},"content":"        Industry updatedIndustry \u003d editJobDescriptor.getIndustry().orElse(jobToEdit.getIndustry());","lastModifiedDate":"2023-10-20"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":115,"author":{"gitId":"migfoo02"},"content":"        return new Job(updatedRole, updatedCompany, updatedDeadline, updatedStatus, updatedJobType, updatedIndustry);","lastModifiedDate":"2023-10-22"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        EditCommand otherEditCommand \u003d (EditCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        return index.equals(otherEditCommand.index)","lastModifiedDate":"2023-07-13"},{"lineNumber":131,"author":{"gitId":"JeremyYong128"},"content":"            \u0026\u0026 editJobDescriptor.equals(otherEditCommand.editJobDescriptor);","lastModifiedDate":"2023-10-04"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"            .add(\"index\", index)","lastModifiedDate":"2019-02-23"},{"lineNumber":138,"author":{"gitId":"JeremyYong128"},"content":"            .add(\"editJobDescriptor\", editJobDescriptor)","lastModifiedDate":"2023-10-04"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":143,"author":{"gitId":"JeremyYong128"},"content":"     * Stores the details to edit the job with. Each non-empty field value will replace the","lastModifiedDate":"2023-10-04"},{"lineNumber":144,"author":{"gitId":"JeremyYong128"},"content":"     * corresponding field value of the job.","lastModifiedDate":"2023-10-04"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":146,"author":{"gitId":"JeremyYong128"},"content":"    public static class EditJobDescriptor {","lastModifiedDate":"2023-10-04"},{"lineNumber":147,"author":{"gitId":"JeremyYong128"},"content":"        private Company company;","lastModifiedDate":"2023-10-04"},{"lineNumber":148,"author":{"gitId":"migfoo02"},"content":"        private Role role;","lastModifiedDate":"2023-10-13"},{"lineNumber":149,"author":{"gitId":"evanyan13"},"content":"        private Deadline deadline;","lastModifiedDate":"2023-10-18"},{"lineNumber":150,"author":{"gitId":"peiran18"},"content":"        private Status status;","lastModifiedDate":"2023-10-19"},{"lineNumber":151,"author":{"gitId":"migfoo02"},"content":"        private JobType jobType;","lastModifiedDate":"2023-10-20"},{"lineNumber":152,"author":{"gitId":"czhiruo"},"content":"        private Industry industry;","lastModifiedDate":"2023-10-20"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":154,"author":{"gitId":"evanyan13"},"content":"        public EditJobDescriptor() {","lastModifiedDate":"2023-10-13"},{"lineNumber":155,"author":{"gitId":"evanyan13"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":158,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":159,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":160,"author":{"gitId":"JeremyYong128"},"content":"        public EditJobDescriptor(EditJobDescriptor toCopy) {","lastModifiedDate":"2023-10-04"},{"lineNumber":161,"author":{"gitId":"JeremyYong128"},"content":"            setCompany(toCopy.company);","lastModifiedDate":"2023-10-04"},{"lineNumber":162,"author":{"gitId":"migfoo02"},"content":"            setRole(toCopy.role);","lastModifiedDate":"2023-10-13"},{"lineNumber":163,"author":{"gitId":"evanyan13"},"content":"            setDeadline(toCopy.deadline);","lastModifiedDate":"2023-10-18"},{"lineNumber":164,"author":{"gitId":"peiran18"},"content":"            setStatus(toCopy.status);","lastModifiedDate":"2023-10-19"},{"lineNumber":165,"author":{"gitId":"migfoo02"},"content":"            setJobType(toCopy.jobType);","lastModifiedDate":"2023-10-20"},{"lineNumber":166,"author":{"gitId":"czhiruo"},"content":"            setIndustry(toCopy.industry);","lastModifiedDate":"2023-10-20"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":170,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":171,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":173,"author":{"gitId":"migfoo02"},"content":"            return CollectionUtil.isAnyNonNull(company, role, deadline, status, jobType, industry);","lastModifiedDate":"2023-10-22"},{"lineNumber":174,"author":{"gitId":"migfoo02"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":175,"author":{"gitId":"migfoo02"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":176,"author":{"gitId":"migfoo02"},"content":"        public void setCompany(Company company) {","lastModifiedDate":"2023-10-13"},{"lineNumber":177,"author":{"gitId":"migfoo02"},"content":"            this.company \u003d company;","lastModifiedDate":"2023-10-13"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":180,"author":{"gitId":"migfoo02"},"content":"        public Optional\u003cCompany\u003e getCompany() {","lastModifiedDate":"2023-10-13"},{"lineNumber":181,"author":{"gitId":"migfoo02"},"content":"            return Optional.ofNullable(company);","lastModifiedDate":"2023-10-13"},{"lineNumber":182,"author":{"gitId":"migfoo02"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":183,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":184,"author":{"gitId":"JeremyYong128"},"content":"        public void setRole(Role role) {","lastModifiedDate":"2023-10-04"},{"lineNumber":185,"author":{"gitId":"JeremyYong128"},"content":"            this.role \u003d role;","lastModifiedDate":"2023-10-04"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":188,"author":{"gitId":"JeremyYong128"},"content":"        public Optional\u003cRole\u003e getRole() {","lastModifiedDate":"2023-10-04"},{"lineNumber":189,"author":{"gitId":"JeremyYong128"},"content":"            return Optional.ofNullable(role);","lastModifiedDate":"2023-10-04"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":192,"author":{"gitId":"evanyan13"},"content":"        public void setDeadline(Deadline deadline) {","lastModifiedDate":"2023-10-18"},{"lineNumber":193,"author":{"gitId":"evanyan13"},"content":"            this.deadline \u003d deadline;","lastModifiedDate":"2023-10-18"},{"lineNumber":194,"author":{"gitId":"evanyan13"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":195,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":196,"author":{"gitId":"evanyan13"},"content":"        public Optional\u003cDeadline\u003e getDeadline() {","lastModifiedDate":"2023-10-18"},{"lineNumber":197,"author":{"gitId":"evanyan13"},"content":"            return Optional.ofNullable(deadline);","lastModifiedDate":"2023-10-18"},{"lineNumber":198,"author":{"gitId":"evanyan13"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":199,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":200,"author":{"gitId":"peiran18"},"content":"        public void setStatus(Status status) {","lastModifiedDate":"2023-10-19"},{"lineNumber":201,"author":{"gitId":"peiran18"},"content":"            this.status \u003d status;","lastModifiedDate":"2023-10-19"},{"lineNumber":202,"author":{"gitId":"peiran18"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":203,"author":{"gitId":"peiran18"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":204,"author":{"gitId":"peiran18"},"content":"        public Optional\u003cStatus\u003e getStatus() {","lastModifiedDate":"2023-10-19"},{"lineNumber":205,"author":{"gitId":"peiran18"},"content":"            return Optional.ofNullable(status);","lastModifiedDate":"2023-10-19"},{"lineNumber":206,"author":{"gitId":"peiran18"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":208,"author":{"gitId":"migfoo02"},"content":"        public void setJobType(JobType jobType) {","lastModifiedDate":"2023-10-20"},{"lineNumber":209,"author":{"gitId":"migfoo02"},"content":"            this.jobType \u003d jobType;","lastModifiedDate":"2023-10-20"},{"lineNumber":210,"author":{"gitId":"migfoo02"},"content":"        }","lastModifiedDate":"2023-10-20"},{"lineNumber":211,"author":{"gitId":"migfoo02"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":212,"author":{"gitId":"migfoo02"},"content":"        public Optional\u003cJobType\u003e getJobType() {","lastModifiedDate":"2023-10-20"},{"lineNumber":213,"author":{"gitId":"migfoo02"},"content":"            return Optional.ofNullable(jobType);","lastModifiedDate":"2023-10-20"},{"lineNumber":214,"author":{"gitId":"migfoo02"},"content":"        }","lastModifiedDate":"2023-10-20"},{"lineNumber":215,"author":{"gitId":"migfoo02"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":216,"author":{"gitId":"czhiruo"},"content":"        public void setIndustry(Industry industry) {","lastModifiedDate":"2023-10-20"},{"lineNumber":217,"author":{"gitId":"czhiruo"},"content":"            this.industry \u003d industry;","lastModifiedDate":"2023-10-20"},{"lineNumber":218,"author":{"gitId":"czhiruo"},"content":"        }","lastModifiedDate":"2023-10-20"},{"lineNumber":219,"author":{"gitId":"czhiruo"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":220,"author":{"gitId":"czhiruo"},"content":"        public Optional\u003cIndustry\u003e getIndustry() {","lastModifiedDate":"2023-10-20"},{"lineNumber":221,"author":{"gitId":"czhiruo"},"content":"            return Optional.ofNullable(industry);","lastModifiedDate":"2023-10-20"},{"lineNumber":222,"author":{"gitId":"czhiruo"},"content":"        }","lastModifiedDate":"2023-10-20"},{"lineNumber":223,"author":{"gitId":"czhiruo"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":226,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":227,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":228,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":230,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":231,"author":{"gitId":"JeremyYong128"},"content":"            if (!(other instanceof EditJobDescriptor)) {","lastModifiedDate":"2023-10-04"},{"lineNumber":232,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":233,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":235,"author":{"gitId":"JeremyYong128"},"content":"            EditJobDescriptor otherEditJobDescriptor \u003d (EditJobDescriptor) other;","lastModifiedDate":"2023-10-04"},{"lineNumber":236,"author":{"gitId":"migfoo02"},"content":"            return Objects.equals(company, otherEditJobDescriptor.company)","lastModifiedDate":"2023-10-13"},{"lineNumber":237,"author":{"gitId":"evanyan13"},"content":"                \u0026\u0026 Objects.equals(role, otherEditJobDescriptor.role)","lastModifiedDate":"2023-10-18"},{"lineNumber":238,"author":{"gitId":"peiran18"},"content":"                \u0026\u0026 Objects.equals(deadline, otherEditJobDescriptor.deadline)","lastModifiedDate":"2023-10-19"},{"lineNumber":239,"author":{"gitId":"czhiruo"},"content":"                \u0026\u0026 Objects.equals(status, otherEditJobDescriptor.status)","lastModifiedDate":"2023-10-20"},{"lineNumber":240,"author":{"gitId":"migfoo02"},"content":"                \u0026\u0026 Objects.equals(jobType, otherEditJobDescriptor.jobType)","lastModifiedDate":"2023-10-22"},{"lineNumber":241,"author":{"gitId":"czhiruo"},"content":"                \u0026\u0026 Objects.equals(industry, otherEditJobDescriptor.industry);","lastModifiedDate":"2023-10-20"},{"lineNumber":242,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"        public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"            return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":247,"author":{"gitId":"JeremyYong128"},"content":"                .add(\"company\", company)","lastModifiedDate":"2023-10-04"},{"lineNumber":248,"author":{"gitId":"migfoo02"},"content":"                .add(\"role\", role)","lastModifiedDate":"2023-10-13"},{"lineNumber":249,"author":{"gitId":"evanyan13"},"content":"                .add(\"deadline\", deadline)","lastModifiedDate":"2023-10-18"},{"lineNumber":250,"author":{"gitId":"peiran18"},"content":"                .add(\"status\", status)","lastModifiedDate":"2023-10-19"},{"lineNumber":251,"author":{"gitId":"migfoo02"},"content":"                .add(\"jobType\", jobType)","lastModifiedDate":"2023-10-20"},{"lineNumber":252,"author":{"gitId":"czhiruo"},"content":"                .add(\"industry\", industry)","lastModifiedDate":"2023-10-20"},{"lineNumber":253,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-02-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":256,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"czhiruo":16,"evanyan13":30,"peiran18":14,"-":106,"JeremyYong128":40,"migfoo02":50}},{"path":"src/main/java/seedu/application/logic/commands/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"evanyan13"},"content":"package seedu.application.logic.commands;","lastModifiedDate":"2023-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"evanyan13"},"content":"import seedu.application.model.Model;","lastModifiedDate":"2023-10-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Terminates the program.","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"exit\";","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"evanyan13"},"content":"    public static final String MESSAGE_EXIT_ACKNOWLEDGEMENT \u003d \"Exiting Application Book as requested ...\";","lastModifiedDate":"2023-10-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"evanyan13":3,"-":16}},{"path":"src/main/java/seedu/application/logic/commands/FindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"evanyan13"},"content":"package seedu.application.logic.commands;","lastModifiedDate":"2023-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"JeremyYong128"},"content":"import static seedu.application.logic.parser.CliSyntax.PREFIX_COMPANY;","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"JeremyYong128"},"content":"import static seedu.application.logic.parser.CliSyntax.PREFIX_DEADLINE;","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"JeremyYong128"},"content":"import static seedu.application.logic.parser.CliSyntax.PREFIX_INDUSTRY;","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"JeremyYong128"},"content":"import static seedu.application.logic.parser.CliSyntax.PREFIX_JOB_TYPE;","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"JeremyYong128"},"content":"import static seedu.application.logic.parser.CliSyntax.PREFIX_ROLE;","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"JeremyYong128"},"content":"import static seedu.application.logic.parser.CliSyntax.PREFIX_STATUS;","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":11,"author":{"gitId":"evanyan13"},"content":"import seedu.application.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-10"},{"lineNumber":12,"author":{"gitId":"evanyan13"},"content":"import seedu.application.logic.Messages;","lastModifiedDate":"2023-10-10"},{"lineNumber":13,"author":{"gitId":"evanyan13"},"content":"import seedu.application.model.Model;","lastModifiedDate":"2023-10-10"},{"lineNumber":14,"author":{"gitId":"JeremyYong128"},"content":"import seedu.application.model.job.CombinedPredicate;","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"JeremyYong128"},"content":" * Finds and lists all jobs in application book whose field contains any of the argument keywords.","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"JeremyYong128"},"content":" * Field is specified by the user.","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"JeremyYong128"},"content":" * Keyword matching is case-insensitive.","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":25,"author":{"gitId":"JeremyYong128"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all jobs that contain all of \"","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"JeremyYong128"},"content":"            + \"the specified keywords (case-insensitive) in the corresponding fields and displays them as a list with \"","lastModifiedDate":"2023-10-26"},{"lineNumber":27,"author":{"gitId":"JeremyYong128"},"content":"            + \"index numbers.\\n\\n\"","lastModifiedDate":"2023-10-26"},{"lineNumber":28,"author":{"gitId":"JeremyYong128"},"content":"            + \"Parameters: \"","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"JeremyYong128"},"content":"            + \"[\" + PREFIX_COMPANY + \"KEYWORDS] \"","lastModifiedDate":"2023-10-26"},{"lineNumber":30,"author":{"gitId":"JeremyYong128"},"content":"            + \"[\" + PREFIX_ROLE + \"KEYWORDS] \"","lastModifiedDate":"2023-10-26"},{"lineNumber":31,"author":{"gitId":"JeremyYong128"},"content":"            + \"[\" + PREFIX_STATUS + \"KEYWORDS] \"","lastModifiedDate":"2023-10-26"},{"lineNumber":32,"author":{"gitId":"JeremyYong128"},"content":"            + \"[\" + PREFIX_INDUSTRY + \"KEYWORDS] \"","lastModifiedDate":"2023-10-26"},{"lineNumber":33,"author":{"gitId":"JeremyYong128"},"content":"            + \"[\" + PREFIX_DEADLINE + \"KEYWORDS] \"","lastModifiedDate":"2023-10-26"},{"lineNumber":34,"author":{"gitId":"JeremyYong128"},"content":"            + \"[\" + PREFIX_JOB_TYPE + \"KEYWORDS]\\n\\n\"","lastModifiedDate":"2023-10-26"},{"lineNumber":35,"author":{"gitId":"JeremyYong128"},"content":"            + \"Example: \" + COMMAND_WORD + \" \" + PREFIX_COMPANY + \"Google\";","lastModifiedDate":"2023-10-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":37,"author":{"gitId":"JeremyYong128"},"content":"    public static final String MESSAGE_EMPTY_KEYWORDS \u003d \"Missing keywords\";","lastModifiedDate":"2023-10-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":39,"author":{"gitId":"JeremyYong128"},"content":"    private final CombinedPredicate predicate;","lastModifiedDate":"2023-10-26"},{"lineNumber":40,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":41,"author":{"gitId":"JeremyYong128"},"content":"    public FindCommand(CombinedPredicate predicate) {","lastModifiedDate":"2023-10-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":48,"author":{"gitId":"JeremyYong128"},"content":"        model.updateFilteredJobList(predicate);","lastModifiedDate":"2023-10-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return new CommandResult(","lastModifiedDate":"2018-04-01"},{"lineNumber":50,"author":{"gitId":"JeremyYong128"},"content":"                String.format(Messages.MESSAGE_JOBS_LISTED_OVERVIEW, model.getFilteredJobList().size()));","lastModifiedDate":"2023-10-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (!(other instanceof FindCommand)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        FindCommand otherFindCommand \u003d (FindCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return predicate.equals(otherFindCommand.predicate);","lastModifiedDate":"2023-07-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                .add(\"predicate\", predicate)","lastModifiedDate":"2019-02-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"evanyan13":4,"-":43,"JeremyYong128":27}},{"path":"src/main/java/seedu/application/logic/commands/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"evanyan13"},"content":"package seedu.application.logic.commands;","lastModifiedDate":"2023-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"evanyan13"},"content":"import seedu.application.model.Model;","lastModifiedDate":"2023-10-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Format full help instructions for every command for display.","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"help\";","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"czhiruo"},"content":"    public static final String MESSAGE_USAGE \u003d \"Type \" + COMMAND_WORD + \" to see the list of valid commands.\\n\"","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"czhiruo"},"content":"    public static final String SHOWING_HELP_MESSAGE \u003d \"Refer to help window.\";","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        return new CommandResult(SHOWING_HELP_MESSAGE, true, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"czhiruo":2,"evanyan13":2,"-":17}},{"path":"src/main/java/seedu/application/logic/commands/InterviewAddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"peiran18"},"content":"package seedu.application.logic.commands;","lastModifiedDate":"2023-10-30"},{"lineNumber":2,"author":{"gitId":"peiran18"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":3,"author":{"gitId":"peiran18"},"content":"import static seedu.application.logic.parser.CliSyntax.*;","lastModifiedDate":"2023-10-30"},{"lineNumber":4,"author":{"gitId":"peiran18"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":5,"author":{"gitId":"peiran18"},"content":"import seedu.application.commons.core.index.Index;","lastModifiedDate":"2023-10-30"},{"lineNumber":6,"author":{"gitId":"peiran18"},"content":"import seedu.application.commons.util.CollectionUtil;","lastModifiedDate":"2023-10-30"},{"lineNumber":7,"author":{"gitId":"peiran18"},"content":"import seedu.application.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-30"},{"lineNumber":8,"author":{"gitId":"peiran18"},"content":"import seedu.application.logic.Messages;","lastModifiedDate":"2023-10-30"},{"lineNumber":9,"author":{"gitId":"peiran18"},"content":"import seedu.application.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-30"},{"lineNumber":10,"author":{"gitId":"peiran18"},"content":"import seedu.application.model.Model;","lastModifiedDate":"2023-10-30"},{"lineNumber":11,"author":{"gitId":"peiran18"},"content":"import seedu.application.model.job.Job;","lastModifiedDate":"2023-10-30"},{"lineNumber":12,"author":{"gitId":"peiran18"},"content":"import seedu.application.model.job.interview.Interview;","lastModifiedDate":"2023-10-30"},{"lineNumber":13,"author":{"gitId":"peiran18"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":14,"author":{"gitId":"peiran18"},"content":"/**","lastModifiedDate":"2023-10-30"},{"lineNumber":15,"author":{"gitId":"peiran18"},"content":" * Adds an interview to a job in the application book.","lastModifiedDate":"2023-10-31"},{"lineNumber":16,"author":{"gitId":"peiran18"},"content":" */","lastModifiedDate":"2023-10-30"},{"lineNumber":17,"author":{"gitId":"peiran18"},"content":"public class InterviewAddCommand extends InterviewCommand {","lastModifiedDate":"2023-10-31"},{"lineNumber":18,"author":{"gitId":"peiran18"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":19,"author":{"gitId":"peiran18"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2023-10-31"},{"lineNumber":20,"author":{"gitId":"peiran18"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":21,"author":{"gitId":"peiran18"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds an interview to the job. \"","lastModifiedDate":"2023-10-31"},{"lineNumber":22,"author":{"gitId":"peiran18"},"content":"        + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2023-10-30"},{"lineNumber":23,"author":{"gitId":"peiran18"},"content":"        + PREFIX_INTERVIEW_TYPE + \"INTERVIEW TYPE \"","lastModifiedDate":"2023-10-30"},{"lineNumber":24,"author":{"gitId":"peiran18"},"content":"        + PREFIX_INTERVIEW_DATETIME + \"INTERVIEW DATE AND TIME \"","lastModifiedDate":"2023-10-30"},{"lineNumber":25,"author":{"gitId":"peiran18"},"content":"        + PREFIX_INTERVIEW_ADDRESS + \"INTERVIEW ADDRESS\\n\"","lastModifiedDate":"2023-10-30"},{"lineNumber":26,"author":{"gitId":"peiran18"},"content":"        + \"Example: \\n\"","lastModifiedDate":"2023-10-30"},{"lineNumber":27,"author":{"gitId":"peiran18"},"content":"        + PREFIX_INTERVIEW_TYPE + \"Technical \"","lastModifiedDate":"2023-10-30"},{"lineNumber":28,"author":{"gitId":"peiran18"},"content":"        + PREFIX_INTERVIEW_DATETIME + \"Dec 31 2030 1200 \"","lastModifiedDate":"2023-10-30"},{"lineNumber":29,"author":{"gitId":"peiran18"},"content":"        + PREFIX_INTERVIEW_ADDRESS + \"Home\\n\";","lastModifiedDate":"2023-10-30"},{"lineNumber":30,"author":{"gitId":"peiran18"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":31,"author":{"gitId":"peiran18"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New interview added: %1$s\";","lastModifiedDate":"2023-10-30"},{"lineNumber":32,"author":{"gitId":"peiran18"},"content":"    public static final String MESSAGE_DUPLICATE_JOB \u003d \"This interview already exists in the application\";","lastModifiedDate":"2023-10-30"},{"lineNumber":33,"author":{"gitId":"peiran18"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":34,"author":{"gitId":"peiran18"},"content":"    private final Index index;","lastModifiedDate":"2023-10-30"},{"lineNumber":35,"author":{"gitId":"peiran18"},"content":"    private final Interview toAdd;","lastModifiedDate":"2023-10-30"},{"lineNumber":36,"author":{"gitId":"peiran18"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":37,"author":{"gitId":"peiran18"},"content":"    /**","lastModifiedDate":"2023-10-30"},{"lineNumber":38,"author":{"gitId":"peiran18"},"content":"     * Creates an AddCommand to add the specified {@code Job}","lastModifiedDate":"2023-10-30"},{"lineNumber":39,"author":{"gitId":"peiran18"},"content":"     */","lastModifiedDate":"2023-10-30"},{"lineNumber":40,"author":{"gitId":"peiran18"},"content":"    public InterviewAddCommand(Index targetIndex, Interview interview) {","lastModifiedDate":"2023-10-30"},{"lineNumber":41,"author":{"gitId":"peiran18"},"content":"        CollectionUtil.requireAllNonNull(targetIndex, interview);","lastModifiedDate":"2023-10-30"},{"lineNumber":42,"author":{"gitId":"peiran18"},"content":"        this.index \u003d targetIndex;","lastModifiedDate":"2023-10-30"},{"lineNumber":43,"author":{"gitId":"peiran18"},"content":"        toAdd \u003d interview;","lastModifiedDate":"2023-10-30"},{"lineNumber":44,"author":{"gitId":"peiran18"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":45,"author":{"gitId":"peiran18"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":46,"author":{"gitId":"peiran18"},"content":"    @Override","lastModifiedDate":"2023-10-30"},{"lineNumber":47,"author":{"gitId":"peiran18"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-30"},{"lineNumber":48,"author":{"gitId":"peiran18"},"content":"        Job jobToAddInterview \u003d getJob(model, index);","lastModifiedDate":"2023-10-31"},{"lineNumber":49,"author":{"gitId":"peiran18"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":50,"author":{"gitId":"peiran18"},"content":"        if (jobToAddInterview.hasInterview(toAdd)) {","lastModifiedDate":"2023-10-31"},{"lineNumber":51,"author":{"gitId":"peiran18"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_JOB);","lastModifiedDate":"2023-10-31"},{"lineNumber":52,"author":{"gitId":"peiran18"},"content":"        }","lastModifiedDate":"2023-10-30"},{"lineNumber":53,"author":{"gitId":"peiran18"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":54,"author":{"gitId":"peiran18"},"content":"        jobToAddInterview.addInterview(toAdd);","lastModifiedDate":"2023-10-30"},{"lineNumber":55,"author":{"gitId":"peiran18"},"content":"        model.updateFilteredJobList(Model.PREDICATE_SHOW_ALL_JOBS);","lastModifiedDate":"2023-10-30"},{"lineNumber":56,"author":{"gitId":"peiran18"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, Messages.format(toAdd)));","lastModifiedDate":"2023-10-30"},{"lineNumber":57,"author":{"gitId":"peiran18"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":58,"author":{"gitId":"peiran18"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":59,"author":{"gitId":"peiran18"},"content":"    @Override","lastModifiedDate":"2023-10-30"},{"lineNumber":60,"author":{"gitId":"peiran18"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-30"},{"lineNumber":61,"author":{"gitId":"peiran18"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-30"},{"lineNumber":62,"author":{"gitId":"peiran18"},"content":"            return true;","lastModifiedDate":"2023-10-30"},{"lineNumber":63,"author":{"gitId":"peiran18"},"content":"        }","lastModifiedDate":"2023-10-30"},{"lineNumber":64,"author":{"gitId":"peiran18"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":65,"author":{"gitId":"peiran18"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-30"},{"lineNumber":66,"author":{"gitId":"peiran18"},"content":"        if (!(other instanceof InterviewAddCommand)) {","lastModifiedDate":"2023-10-30"},{"lineNumber":67,"author":{"gitId":"peiran18"},"content":"            return false;","lastModifiedDate":"2023-10-30"},{"lineNumber":68,"author":{"gitId":"peiran18"},"content":"        }","lastModifiedDate":"2023-10-30"},{"lineNumber":69,"author":{"gitId":"peiran18"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":70,"author":{"gitId":"peiran18"},"content":"        InterviewAddCommand otherInterviewAddCommand \u003d (InterviewAddCommand) other;","lastModifiedDate":"2023-10-30"},{"lineNumber":71,"author":{"gitId":"peiran18"},"content":"        return toAdd.equals(otherInterviewAddCommand.toAdd);","lastModifiedDate":"2023-10-30"},{"lineNumber":72,"author":{"gitId":"peiran18"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":73,"author":{"gitId":"peiran18"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":74,"author":{"gitId":"peiran18"},"content":"    @Override","lastModifiedDate":"2023-10-30"},{"lineNumber":75,"author":{"gitId":"peiran18"},"content":"    public String toString() {","lastModifiedDate":"2023-10-30"},{"lineNumber":76,"author":{"gitId":"peiran18"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-30"},{"lineNumber":77,"author":{"gitId":"peiran18"},"content":"            .add(\"toAdd\", toAdd)","lastModifiedDate":"2023-10-30"},{"lineNumber":78,"author":{"gitId":"peiran18"},"content":"            .toString();","lastModifiedDate":"2023-10-30"},{"lineNumber":79,"author":{"gitId":"peiran18"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":80,"author":{"gitId":"peiran18"},"content":"}","lastModifiedDate":"2023-10-30"}],"authorContributionMap":{"peiran18":80}},{"path":"src/main/java/seedu/application/logic/commands/InterviewCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"peiran18"},"content":"package seedu.application.logic.commands;","lastModifiedDate":"2023-10-31"},{"lineNumber":2,"author":{"gitId":"peiran18"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":3,"author":{"gitId":"peiran18"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-31"},{"lineNumber":4,"author":{"gitId":"peiran18"},"content":"import static seedu.application.logic.parser.CliSyntax.*;","lastModifiedDate":"2023-10-31"},{"lineNumber":5,"author":{"gitId":"peiran18"},"content":"import static seedu.application.logic.parser.CliSyntax.PREFIX_INTERVIEW_ADDRESS;","lastModifiedDate":"2023-10-31"},{"lineNumber":6,"author":{"gitId":"peiran18"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":7,"author":{"gitId":"peiran18"},"content":"import java.util.List;","lastModifiedDate":"2023-10-31"},{"lineNumber":8,"author":{"gitId":"peiran18"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":9,"author":{"gitId":"peiran18"},"content":"import seedu.application.commons.core.index.Index;","lastModifiedDate":"2023-10-31"},{"lineNumber":10,"author":{"gitId":"peiran18"},"content":"import seedu.application.logic.Messages;","lastModifiedDate":"2023-10-31"},{"lineNumber":11,"author":{"gitId":"peiran18"},"content":"import seedu.application.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-31"},{"lineNumber":12,"author":{"gitId":"peiran18"},"content":"import seedu.application.model.Model;","lastModifiedDate":"2023-10-31"},{"lineNumber":13,"author":{"gitId":"peiran18"},"content":"import seedu.application.model.job.Job;","lastModifiedDate":"2023-10-31"},{"lineNumber":14,"author":{"gitId":"peiran18"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":15,"author":{"gitId":"peiran18"},"content":"/**","lastModifiedDate":"2023-10-31"},{"lineNumber":16,"author":{"gitId":"peiran18"},"content":" * Represents an interview command with hidden internal logic and the ability to be executed.","lastModifiedDate":"2023-10-31"},{"lineNumber":17,"author":{"gitId":"peiran18"},"content":" */","lastModifiedDate":"2023-10-31"},{"lineNumber":18,"author":{"gitId":"peiran18"},"content":"public abstract class InterviewCommand extends Command {","lastModifiedDate":"2023-10-31"},{"lineNumber":19,"author":{"gitId":"peiran18"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":20,"author":{"gitId":"peiran18"},"content":"    public static final String COMMAND_WORD \u003d \"interview\";","lastModifiedDate":"2023-10-31"},{"lineNumber":21,"author":{"gitId":"peiran18"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":22,"author":{"gitId":"peiran18"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-10-31"},{"lineNumber":23,"author":{"gitId":"peiran18"},"content":"        + \": Adds / Deletes / Edits an interview in the application.\\n\"","lastModifiedDate":"2023-10-31"},{"lineNumber":24,"author":{"gitId":"peiran18"},"content":"        + \"Parameters: command word (add / delete / list)\\n\"","lastModifiedDate":"2023-10-31"},{"lineNumber":25,"author":{"gitId":"peiran18"},"content":"        + \"INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2023-10-31"},{"lineNumber":26,"author":{"gitId":"peiran18"},"content":"        + PREFIX_INTERVIEW_TYPE + \"INTERVIEW TYPE \"","lastModifiedDate":"2023-10-31"},{"lineNumber":27,"author":{"gitId":"peiran18"},"content":"        + PREFIX_INTERVIEW_DATETIME + \"INTERVIEW DATE AND TIME \"","lastModifiedDate":"2023-10-31"},{"lineNumber":28,"author":{"gitId":"peiran18"},"content":"        + PREFIX_INTERVIEW_ADDRESS + \"INTERVIEW ADDRESS\\n\"","lastModifiedDate":"2023-10-31"},{"lineNumber":29,"author":{"gitId":"peiran18"},"content":"        + \"Example: \\n\"","lastModifiedDate":"2023-10-31"},{"lineNumber":30,"author":{"gitId":"peiran18"},"content":"        + PREFIX_INTERVIEW_TYPE + \"Technical \"","lastModifiedDate":"2023-10-31"},{"lineNumber":31,"author":{"gitId":"peiran18"},"content":"        + PREFIX_INTERVIEW_DATETIME + \"Dec 31 2030 1200 \"","lastModifiedDate":"2023-10-31"},{"lineNumber":32,"author":{"gitId":"peiran18"},"content":"        + PREFIX_INTERVIEW_ADDRESS + \"Home\\n\";","lastModifiedDate":"2023-10-31"},{"lineNumber":33,"author":{"gitId":"peiran18"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":34,"author":{"gitId":"peiran18"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"interview can only be followed by add, delete, or edit\";","lastModifiedDate":"2023-10-31"},{"lineNumber":35,"author":{"gitId":"peiran18"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":36,"author":{"gitId":"peiran18"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":37,"author":{"gitId":"peiran18"},"content":"     * Enum representing valid sub-command words for interview-related commands.","lastModifiedDate":"2023-10-31"},{"lineNumber":38,"author":{"gitId":"peiran18"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":39,"author":{"gitId":"peiran18"},"content":"    public enum SubCommandWords {","lastModifiedDate":"2023-10-31"},{"lineNumber":40,"author":{"gitId":"peiran18"},"content":"        add, delete, edit","lastModifiedDate":"2023-10-31"},{"lineNumber":41,"author":{"gitId":"peiran18"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":42,"author":{"gitId":"peiran18"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":43,"author":{"gitId":"peiran18"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":44,"author":{"gitId":"peiran18"},"content":"     * Retrieves the job associated with a given index in the filtered job list.","lastModifiedDate":"2023-10-31"},{"lineNumber":45,"author":{"gitId":"peiran18"},"content":"     *","lastModifiedDate":"2023-10-31"},{"lineNumber":46,"author":{"gitId":"peiran18"},"content":"     * @param model The model containing the job list.","lastModifiedDate":"2023-10-31"},{"lineNumber":47,"author":{"gitId":"peiran18"},"content":"     * @param index The index of the job to retrieve.","lastModifiedDate":"2023-10-31"},{"lineNumber":48,"author":{"gitId":"peiran18"},"content":"     * @return The job associated with the given index.","lastModifiedDate":"2023-10-31"},{"lineNumber":49,"author":{"gitId":"peiran18"},"content":"     * @throws CommandException If the index is out of bounds or if the job is not found.","lastModifiedDate":"2023-10-31"},{"lineNumber":50,"author":{"gitId":"peiran18"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":51,"author":{"gitId":"peiran18"},"content":"    public Job getJob(Model model, Index index) throws CommandException {","lastModifiedDate":"2023-10-31"},{"lineNumber":52,"author":{"gitId":"peiran18"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-31"},{"lineNumber":53,"author":{"gitId":"peiran18"},"content":"        List\u003cJob\u003e lastShownList \u003d model.getFilteredJobList();","lastModifiedDate":"2023-10-31"},{"lineNumber":54,"author":{"gitId":"peiran18"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":55,"author":{"gitId":"peiran18"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-10-31"},{"lineNumber":56,"author":{"gitId":"peiran18"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_JOB_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-31"},{"lineNumber":57,"author":{"gitId":"peiran18"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":58,"author":{"gitId":"peiran18"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":59,"author":{"gitId":"peiran18"},"content":"        return lastShownList.get(index.getZeroBased());","lastModifiedDate":"2023-10-31"},{"lineNumber":60,"author":{"gitId":"peiran18"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":61,"author":{"gitId":"peiran18"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":62,"author":{"gitId":"peiran18"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":63,"author":{"gitId":"peiran18"},"content":"     * Checks if a given sub-command word is a valid sub-command for interview commands.","lastModifiedDate":"2023-10-31"},{"lineNumber":64,"author":{"gitId":"peiran18"},"content":"     *","lastModifiedDate":"2023-10-31"},{"lineNumber":65,"author":{"gitId":"peiran18"},"content":"     * @param subCommandWord The sub-command word to validate.","lastModifiedDate":"2023-10-31"},{"lineNumber":66,"author":{"gitId":"peiran18"},"content":"     * @return True if the sub-command word is valid, false otherwise.","lastModifiedDate":"2023-10-31"},{"lineNumber":67,"author":{"gitId":"peiran18"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":68,"author":{"gitId":"peiran18"},"content":"    public static boolean isValidSubCommandWord(String subCommandWord) {","lastModifiedDate":"2023-10-31"},{"lineNumber":69,"author":{"gitId":"peiran18"},"content":"        for (InterviewCommand.SubCommandWords w : InterviewCommand.SubCommandWords.values()) {","lastModifiedDate":"2023-10-31"},{"lineNumber":70,"author":{"gitId":"peiran18"},"content":"            if (subCommandWord.equalsIgnoreCase(w.toString())) {","lastModifiedDate":"2023-10-31"},{"lineNumber":71,"author":{"gitId":"peiran18"},"content":"                return true;","lastModifiedDate":"2023-10-31"},{"lineNumber":72,"author":{"gitId":"peiran18"},"content":"            }","lastModifiedDate":"2023-10-31"},{"lineNumber":73,"author":{"gitId":"peiran18"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":74,"author":{"gitId":"peiran18"},"content":"        return false;","lastModifiedDate":"2023-10-31"},{"lineNumber":75,"author":{"gitId":"peiran18"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":76,"author":{"gitId":"peiran18"},"content":"}","lastModifiedDate":"2023-10-31"}],"authorContributionMap":{"peiran18":76}},{"path":"src/main/java/seedu/application/logic/commands/InterviewDeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"czhiruo"},"content":"package seedu.application.logic.commands;","lastModifiedDate":"2023-10-31"},{"lineNumber":2,"author":{"gitId":"czhiruo"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":3,"author":{"gitId":"czhiruo"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-31"},{"lineNumber":4,"author":{"gitId":"czhiruo"},"content":"import static seedu.application.logic.parser.CliSyntax.PREFIX_INTERVIEW_DELETE;","lastModifiedDate":"2023-10-31"},{"lineNumber":5,"author":{"gitId":"czhiruo"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":6,"author":{"gitId":"czhiruo"},"content":"import java.util.List;","lastModifiedDate":"2023-10-31"},{"lineNumber":7,"author":{"gitId":"czhiruo"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":8,"author":{"gitId":"czhiruo"},"content":"import seedu.application.commons.core.index.Index;","lastModifiedDate":"2023-10-31"},{"lineNumber":9,"author":{"gitId":"czhiruo"},"content":"import seedu.application.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-31"},{"lineNumber":10,"author":{"gitId":"czhiruo"},"content":"import seedu.application.logic.Messages;","lastModifiedDate":"2023-10-31"},{"lineNumber":11,"author":{"gitId":"czhiruo"},"content":"import seedu.application.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-31"},{"lineNumber":12,"author":{"gitId":"czhiruo"},"content":"import seedu.application.model.Model;","lastModifiedDate":"2023-10-31"},{"lineNumber":13,"author":{"gitId":"czhiruo"},"content":"import seedu.application.model.job.Job;","lastModifiedDate":"2023-10-31"},{"lineNumber":14,"author":{"gitId":"czhiruo"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":15,"author":{"gitId":"czhiruo"},"content":"/**","lastModifiedDate":"2023-10-31"},{"lineNumber":16,"author":{"gitId":"czhiruo"},"content":" * Deletes an interview of a job in the application book.","lastModifiedDate":"2023-10-31"},{"lineNumber":17,"author":{"gitId":"czhiruo"},"content":" */","lastModifiedDate":"2023-10-31"},{"lineNumber":18,"author":{"gitId":"czhiruo"},"content":"public class InterviewDeleteCommand extends InterviewCommand {","lastModifiedDate":"2023-10-31"},{"lineNumber":19,"author":{"gitId":"czhiruo"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":20,"author":{"gitId":"czhiruo"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2023-10-31"},{"lineNumber":21,"author":{"gitId":"czhiruo"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":22,"author":{"gitId":"czhiruo"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Deletes an interview from the job\\n\"","lastModifiedDate":"2023-10-31"},{"lineNumber":23,"author":{"gitId":"czhiruo"},"content":"            + \"Parameters: INDEX (of interview) and\\n INDEX (of job application)\\n\"","lastModifiedDate":"2023-10-31"},{"lineNumber":24,"author":{"gitId":"czhiruo"},"content":"            + \"Example: 1 \" + PREFIX_INTERVIEW_DELETE + \"2\\n\"","lastModifiedDate":"2023-10-31"},{"lineNumber":25,"author":{"gitId":"czhiruo"},"content":"            + \"deletes 1st interview from 2nd job\";","lastModifiedDate":"2023-10-31"},{"lineNumber":26,"author":{"gitId":"czhiruo"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":27,"author":{"gitId":"czhiruo"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Interview deleted: %1$s\";","lastModifiedDate":"2023-10-31"},{"lineNumber":28,"author":{"gitId":"czhiruo"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":29,"author":{"gitId":"czhiruo"},"content":"    private final Index jobIndex;","lastModifiedDate":"2023-10-31"},{"lineNumber":30,"author":{"gitId":"czhiruo"},"content":"    private final Index interviewIndex;","lastModifiedDate":"2023-10-31"},{"lineNumber":31,"author":{"gitId":"czhiruo"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":32,"author":{"gitId":"czhiruo"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":33,"author":{"gitId":"czhiruo"},"content":"     * Creates an InterviewDeleteCommand with the specified job and interview","lastModifiedDate":"2023-10-31"},{"lineNumber":34,"author":{"gitId":"czhiruo"},"content":"     *","lastModifiedDate":"2023-10-31"},{"lineNumber":35,"author":{"gitId":"czhiruo"},"content":"     * @param jobIndex The index of the job to be deleted.","lastModifiedDate":"2023-10-31"},{"lineNumber":36,"author":{"gitId":"czhiruo"},"content":"     * @param interviewIndex The index of the interview to be deleted.","lastModifiedDate":"2023-10-31"},{"lineNumber":37,"author":{"gitId":"czhiruo"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":38,"author":{"gitId":"czhiruo"},"content":"    public InterviewDeleteCommand(Index jobIndex, Index interviewIndex) {","lastModifiedDate":"2023-10-31"},{"lineNumber":39,"author":{"gitId":"czhiruo"},"content":"        requireNonNull(jobIndex);","lastModifiedDate":"2023-10-31"},{"lineNumber":40,"author":{"gitId":"czhiruo"},"content":"        requireNonNull(interviewIndex);","lastModifiedDate":"2023-10-31"},{"lineNumber":41,"author":{"gitId":"czhiruo"},"content":"        this.jobIndex \u003d jobIndex;","lastModifiedDate":"2023-10-31"},{"lineNumber":42,"author":{"gitId":"czhiruo"},"content":"        this.interviewIndex \u003d interviewIndex;","lastModifiedDate":"2023-10-31"},{"lineNumber":43,"author":{"gitId":"czhiruo"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":44,"author":{"gitId":"czhiruo"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":45,"author":{"gitId":"czhiruo"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":46,"author":{"gitId":"czhiruo"},"content":"     * Executes the delete command to remove an interview from a job.","lastModifiedDate":"2023-10-31"},{"lineNumber":47,"author":{"gitId":"czhiruo"},"content":"     *","lastModifiedDate":"2023-10-31"},{"lineNumber":48,"author":{"gitId":"czhiruo"},"content":"     * @param model The model containing the application list.","lastModifiedDate":"2023-10-31"},{"lineNumber":49,"author":{"gitId":"czhiruo"},"content":"     * @return A CommandResult indicating the result of the execution.","lastModifiedDate":"2023-10-31"},{"lineNumber":50,"author":{"gitId":"czhiruo"},"content":"     * @throws CommandException If the command execution encounters an error.","lastModifiedDate":"2023-10-31"},{"lineNumber":51,"author":{"gitId":"czhiruo"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":52,"author":{"gitId":"czhiruo"},"content":"    @Override","lastModifiedDate":"2023-10-31"},{"lineNumber":53,"author":{"gitId":"czhiruo"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-31"},{"lineNumber":54,"author":{"gitId":"czhiruo"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-31"},{"lineNumber":55,"author":{"gitId":"czhiruo"},"content":"        List\u003cJob\u003e lastShownList \u003d model.getFilteredJobList();","lastModifiedDate":"2023-10-31"},{"lineNumber":56,"author":{"gitId":"czhiruo"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":57,"author":{"gitId":"czhiruo"},"content":"        if (jobIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-10-31"},{"lineNumber":58,"author":{"gitId":"czhiruo"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_JOB_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-31"},{"lineNumber":59,"author":{"gitId":"czhiruo"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":60,"author":{"gitId":"czhiruo"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":61,"author":{"gitId":"czhiruo"},"content":"        Job jobToDeleteInterview \u003d lastShownList.get(jobIndex.getZeroBased());","lastModifiedDate":"2023-10-31"},{"lineNumber":62,"author":{"gitId":"czhiruo"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":63,"author":{"gitId":"czhiruo"},"content":"        jobToDeleteInterview.deleteInterview(interviewIndex);","lastModifiedDate":"2023-10-31"},{"lineNumber":64,"author":{"gitId":"czhiruo"},"content":"        model.updateFilteredJobList(Model.PREDICATE_SHOW_ALL_JOBS);","lastModifiedDate":"2023-10-31"},{"lineNumber":65,"author":{"gitId":"czhiruo"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, Messages.format(jobToDeleteInterview)));","lastModifiedDate":"2023-10-31"},{"lineNumber":66,"author":{"gitId":"czhiruo"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":67,"author":{"gitId":"czhiruo"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":68,"author":{"gitId":"czhiruo"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":69,"author":{"gitId":"czhiruo"},"content":"     * Checks if this InterviewDeleteCommand is equal to another object.","lastModifiedDate":"2023-10-31"},{"lineNumber":70,"author":{"gitId":"czhiruo"},"content":"     *","lastModifiedDate":"2023-10-31"},{"lineNumber":71,"author":{"gitId":"czhiruo"},"content":"     * @param other The object to compare with this InterviewDeleteCommand.","lastModifiedDate":"2023-10-31"},{"lineNumber":72,"author":{"gitId":"czhiruo"},"content":"     * @return True if the objects are equal, false otherwise.","lastModifiedDate":"2023-10-31"},{"lineNumber":73,"author":{"gitId":"czhiruo"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":74,"author":{"gitId":"czhiruo"},"content":"    @Override","lastModifiedDate":"2023-10-31"},{"lineNumber":75,"author":{"gitId":"czhiruo"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-31"},{"lineNumber":76,"author":{"gitId":"czhiruo"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-31"},{"lineNumber":77,"author":{"gitId":"czhiruo"},"content":"            return true;","lastModifiedDate":"2023-10-31"},{"lineNumber":78,"author":{"gitId":"czhiruo"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":79,"author":{"gitId":"czhiruo"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":80,"author":{"gitId":"czhiruo"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-31"},{"lineNumber":81,"author":{"gitId":"czhiruo"},"content":"        if (!(other instanceof InterviewDeleteCommand)) {","lastModifiedDate":"2023-10-31"},{"lineNumber":82,"author":{"gitId":"czhiruo"},"content":"            return false;","lastModifiedDate":"2023-10-31"},{"lineNumber":83,"author":{"gitId":"czhiruo"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":84,"author":{"gitId":"czhiruo"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":85,"author":{"gitId":"czhiruo"},"content":"        InterviewDeleteCommand otherInterviewDeleteCommand \u003d (InterviewDeleteCommand) other;","lastModifiedDate":"2023-10-31"},{"lineNumber":86,"author":{"gitId":"czhiruo"},"content":"        return jobIndex.equals(otherInterviewDeleteCommand.jobIndex)","lastModifiedDate":"2023-10-31"},{"lineNumber":87,"author":{"gitId":"czhiruo"},"content":"                \u0026\u0026 interviewIndex.equals(otherInterviewDeleteCommand.interviewIndex);","lastModifiedDate":"2023-10-31"},{"lineNumber":88,"author":{"gitId":"czhiruo"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":89,"author":{"gitId":"czhiruo"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":90,"author":{"gitId":"czhiruo"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":91,"author":{"gitId":"czhiruo"},"content":"     * Generates a string representation of this InterviewDeleteCommand.","lastModifiedDate":"2023-10-31"},{"lineNumber":92,"author":{"gitId":"czhiruo"},"content":"     *","lastModifiedDate":"2023-10-31"},{"lineNumber":93,"author":{"gitId":"czhiruo"},"content":"     * @return A string representing the InterviewDeleteCommand.","lastModifiedDate":"2023-10-31"},{"lineNumber":94,"author":{"gitId":"czhiruo"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":95,"author":{"gitId":"czhiruo"},"content":"    @Override","lastModifiedDate":"2023-10-31"},{"lineNumber":96,"author":{"gitId":"czhiruo"},"content":"    public String toString() {","lastModifiedDate":"2023-10-31"},{"lineNumber":97,"author":{"gitId":"czhiruo"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-31"},{"lineNumber":98,"author":{"gitId":"czhiruo"},"content":"                .add(\"Job index\", jobIndex)","lastModifiedDate":"2023-10-31"},{"lineNumber":99,"author":{"gitId":"czhiruo"},"content":"                .add(\"Interview index\", interviewIndex)","lastModifiedDate":"2023-10-31"},{"lineNumber":100,"author":{"gitId":"czhiruo"},"content":"                .toString();","lastModifiedDate":"2023-10-31"},{"lineNumber":101,"author":{"gitId":"czhiruo"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":102,"author":{"gitId":"czhiruo"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":103,"author":{"gitId":"czhiruo"},"content":"}","lastModifiedDate":"2023-10-31"}],"authorContributionMap":{"czhiruo":103}},{"path":"src/main/java/seedu/application/logic/commands/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"evanyan13"},"content":"package seedu.application.logic.commands;","lastModifiedDate":"2023-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"JeremyYong128"},"content":"import static seedu.application.model.Model.PREDICATE_SHOW_ALL_JOBS;","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"evanyan13"},"content":"import seedu.application.model.Model;","lastModifiedDate":"2023-10-10"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"JeremyYong128"},"content":" * Lists all persons in the address book to the user.","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"JeremyYong128"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all %d jobs!\";","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"JeremyYong128"},"content":"        model.updateFilteredJobList(PREDICATE_SHOW_ALL_JOBS);","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"JeremyYong128"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, model.getFilteredJobList().size()));","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"peiran18"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"evanyan13":2,"peiran18":1,"-":16,"JeremyYong128":5}},{"path":"src/main/java/seedu/application/logic/commands/SortCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JeremyYong128"},"content":"package seedu.application.logic.commands;","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"JeremyYong128"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"JeremyYong128"},"content":"import static seedu.application.logic.parser.CliSyntax.PREFIX_COMPANY;","lastModifiedDate":"2023-10-27"},{"lineNumber":5,"author":{"gitId":"JeremyYong128"},"content":"import static seedu.application.logic.parser.CliSyntax.PREFIX_DEADLINE;","lastModifiedDate":"2023-10-27"},{"lineNumber":6,"author":{"gitId":"JeremyYong128"},"content":"import static seedu.application.logic.parser.CliSyntax.PREFIX_INDUSTRY;","lastModifiedDate":"2023-10-27"},{"lineNumber":7,"author":{"gitId":"JeremyYong128"},"content":"import static seedu.application.logic.parser.CliSyntax.PREFIX_JOB_TYPE;","lastModifiedDate":"2023-10-27"},{"lineNumber":8,"author":{"gitId":"JeremyYong128"},"content":"import static seedu.application.logic.parser.CliSyntax.PREFIX_ROLE;","lastModifiedDate":"2023-10-27"},{"lineNumber":9,"author":{"gitId":"JeremyYong128"},"content":"import static seedu.application.logic.parser.CliSyntax.PREFIX_STATUS;","lastModifiedDate":"2023-10-27"},{"lineNumber":10,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"JeremyYong128"},"content":"import seedu.application.model.Model;","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"JeremyYong128"},"content":"import seedu.application.model.job.FieldComparator;","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"JeremyYong128"},"content":"/**","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"JeremyYong128"},"content":" * Lists all jobs in the application book to the user.","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"JeremyYong128"},"content":" * Sort order is based on the specifier provided.","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"JeremyYong128"},"content":" */","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"JeremyYong128"},"content":"public class SortCommand extends Command {","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"JeremyYong128"},"content":"    public static final String COMMAND_WORD \u003d \"sort\";","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"JeremyYong128"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Sorted jobs\";","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"JeremyYong128"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Sorts the list of jobs based on \"","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"JeremyYong128"},"content":"            + \"the specified field and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2023-10-26"},{"lineNumber":25,"author":{"gitId":"JeremyYong128"},"content":"            + \"Parameters: FIELD\\n\\n\"","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"JeremyYong128"},"content":"            + \"Example: \" + COMMAND_WORD + \" \" + PREFIX_ROLE;","lastModifiedDate":"2023-10-31"},{"lineNumber":27,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":28,"author":{"gitId":"JeremyYong128"},"content":"    public static final String MESSAGE_INVALID_SPECIFIER \u003d \"Specifiers should only be one of the following: \"","lastModifiedDate":"2023-10-27"},{"lineNumber":29,"author":{"gitId":"JeremyYong128"},"content":"            + PREFIX_COMPANY + \" (Company), \"","lastModifiedDate":"2023-10-27"},{"lineNumber":30,"author":{"gitId":"JeremyYong128"},"content":"            + PREFIX_ROLE + \" (Role), \"","lastModifiedDate":"2023-10-27"},{"lineNumber":31,"author":{"gitId":"JeremyYong128"},"content":"            + PREFIX_STATUS + \" (Status), \"","lastModifiedDate":"2023-10-27"},{"lineNumber":32,"author":{"gitId":"JeremyYong128"},"content":"            + PREFIX_INDUSTRY + \" (Industry), \"","lastModifiedDate":"2023-10-27"},{"lineNumber":33,"author":{"gitId":"JeremyYong128"},"content":"            + PREFIX_DEADLINE + \" (Deadline), \"","lastModifiedDate":"2023-10-27"},{"lineNumber":34,"author":{"gitId":"JeremyYong128"},"content":"            + PREFIX_JOB_TYPE + \" (Job Type)\";","lastModifiedDate":"2023-10-27"},{"lineNumber":35,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":36,"author":{"gitId":"JeremyYong128"},"content":"    private final FieldComparator comparator;","lastModifiedDate":"2023-10-26"},{"lineNumber":37,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":38,"author":{"gitId":"JeremyYong128"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":39,"author":{"gitId":"JeremyYong128"},"content":"     * @param comparator The comparator used to sort jobs in the list.","lastModifiedDate":"2023-10-26"},{"lineNumber":40,"author":{"gitId":"JeremyYong128"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":41,"author":{"gitId":"JeremyYong128"},"content":"    public SortCommand(FieldComparator comparator) {","lastModifiedDate":"2023-10-26"},{"lineNumber":42,"author":{"gitId":"JeremyYong128"},"content":"        requireNonNull(comparator);","lastModifiedDate":"2023-10-26"},{"lineNumber":43,"author":{"gitId":"JeremyYong128"},"content":"        this.comparator \u003d comparator;","lastModifiedDate":"2023-10-26"},{"lineNumber":44,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":45,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":46,"author":{"gitId":"JeremyYong128"},"content":"    @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":47,"author":{"gitId":"JeremyYong128"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2023-10-26"},{"lineNumber":48,"author":{"gitId":"JeremyYong128"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-26"},{"lineNumber":49,"author":{"gitId":"JeremyYong128"},"content":"        model.sortJobs(comparator);","lastModifiedDate":"2023-10-26"},{"lineNumber":50,"author":{"gitId":"JeremyYong128"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2023-10-26"},{"lineNumber":51,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":52,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":53,"author":{"gitId":"JeremyYong128"},"content":"    @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":54,"author":{"gitId":"JeremyYong128"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-26"},{"lineNumber":55,"author":{"gitId":"JeremyYong128"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-26"},{"lineNumber":56,"author":{"gitId":"JeremyYong128"},"content":"            return true;","lastModifiedDate":"2023-10-26"},{"lineNumber":57,"author":{"gitId":"JeremyYong128"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":58,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":59,"author":{"gitId":"JeremyYong128"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-26"},{"lineNumber":60,"author":{"gitId":"JeremyYong128"},"content":"        if (!(other instanceof SortCommand)) {","lastModifiedDate":"2023-10-26"},{"lineNumber":61,"author":{"gitId":"JeremyYong128"},"content":"            return false;","lastModifiedDate":"2023-10-26"},{"lineNumber":62,"author":{"gitId":"JeremyYong128"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":63,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":64,"author":{"gitId":"JeremyYong128"},"content":"        SortCommand otherListCommand \u003d (SortCommand) other;","lastModifiedDate":"2023-10-26"},{"lineNumber":65,"author":{"gitId":"JeremyYong128"},"content":"        return comparator.equals(otherListCommand.comparator);","lastModifiedDate":"2023-10-26"},{"lineNumber":66,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":67,"author":{"gitId":"JeremyYong128"},"content":"}","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"JeremyYong128":67}},{"path":"src/main/java/seedu/application/logic/commands/exceptions/CommandException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"evanyan13"},"content":"package seedu.application.logic.commands.exceptions;","lastModifiedDate":"2023-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"evanyan13"},"content":"import seedu.application.logic.commands.Command;","lastModifiedDate":"2023-10-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Represents an error which occurs during execution of a {@link Command}.","lastModifiedDate":"2017-02-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class CommandException extends Exception {","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public CommandException(String message) {","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2017-02-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Constructs a new {@code CommandException} with the specified detail {@code message} and {@code cause}.","lastModifiedDate":"2018-08-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public CommandException(String message, Throwable cause) {","lastModifiedDate":"2018-08-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2018-08-06"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"evanyan13":2,"-":17}},{"path":"src/main/java/seedu/application/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"evanyan13"},"content":"package seedu.application.logic.parser;","lastModifiedDate":"2023-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"evanyan13"},"content":"import static seedu.application.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-10"},{"lineNumber":4,"author":{"gitId":"evanyan13"},"content":"import static seedu.application.logic.parser.CliSyntax.PREFIX_COMPANY;","lastModifiedDate":"2023-10-10"},{"lineNumber":5,"author":{"gitId":"evanyan13"},"content":"import static seedu.application.logic.parser.CliSyntax.PREFIX_DEADLINE;","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"migfoo02"},"content":"import static seedu.application.logic.parser.CliSyntax.PREFIX_INDUSTRY;","lastModifiedDate":"2023-10-22"},{"lineNumber":7,"author":{"gitId":"migfoo02"},"content":"import static seedu.application.logic.parser.CliSyntax.PREFIX_JOB_TYPE;","lastModifiedDate":"2023-10-23"},{"lineNumber":8,"author":{"gitId":"evanyan13"},"content":"import static seedu.application.logic.parser.CliSyntax.PREFIX_ROLE;","lastModifiedDate":"2023-10-10"},{"lineNumber":9,"author":{"gitId":"migfoo02"},"content":"import static seedu.application.logic.parser.CliSyntax.PREFIX_STATUS;","lastModifiedDate":"2023-10-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"evanyan13"},"content":"import seedu.application.logic.commands.AddCommand;","lastModifiedDate":"2023-10-10"},{"lineNumber":14,"author":{"gitId":"evanyan13"},"content":"import seedu.application.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-10"},{"lineNumber":15,"author":{"gitId":"evanyan13"},"content":"import seedu.application.model.job.Company;","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"evanyan13"},"content":"import seedu.application.model.job.Deadline;","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"migfoo02"},"content":"import seedu.application.model.job.Industry;","lastModifiedDate":"2023-10-22"},{"lineNumber":18,"author":{"gitId":"evanyan13"},"content":"import seedu.application.model.job.Job;","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"migfoo02"},"content":"import seedu.application.model.job.JobType;","lastModifiedDate":"2023-10-20"},{"lineNumber":20,"author":{"gitId":"evanyan13"},"content":"import seedu.application.model.job.Role;","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"evanyan13"},"content":"import seedu.application.model.job.Status;","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":31,"author":{"gitId":"evanyan13"},"content":"     *","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":36,"author":{"gitId":"migfoo02"},"content":"            ArgumentTokenizer.tokenize(args, PREFIX_ROLE, PREFIX_COMPANY,","lastModifiedDate":"2023-10-20"},{"lineNumber":37,"author":{"gitId":"migfoo02"},"content":"                    PREFIX_DEADLINE, PREFIX_STATUS, PREFIX_JOB_TYPE, PREFIX_INDUSTRY);","lastModifiedDate":"2023-10-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":39,"author":{"gitId":"JeremyYong128"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_ROLE, PREFIX_COMPANY)","lastModifiedDate":"2023-10-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":44,"author":{"gitId":"migfoo02"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_ROLE, PREFIX_COMPANY, PREFIX_DEADLINE, PREFIX_STATUS,","lastModifiedDate":"2023-10-20"},{"lineNumber":45,"author":{"gitId":"migfoo02"},"content":"                PREFIX_JOB_TYPE, PREFIX_INDUSTRY);","lastModifiedDate":"2023-10-23"},{"lineNumber":46,"author":{"gitId":"JeremyYong128"},"content":"        Role role \u003d ParserUtil.parseRole(argMultimap.getValue(PREFIX_ROLE).get());","lastModifiedDate":"2023-10-04"},{"lineNumber":47,"author":{"gitId":"JeremyYong128"},"content":"        Company company \u003d ParserUtil.parseCompany(argMultimap.getValue(PREFIX_COMPANY).get());","lastModifiedDate":"2023-10-04"},{"lineNumber":48,"author":{"gitId":"peiran18"},"content":"        Status status \u003d Status.DEFAULT_STATUS; // Status is an optional field for add command","lastModifiedDate":"2023-10-19"},{"lineNumber":49,"author":{"gitId":"evanyan13"},"content":"        Deadline deadline \u003d Deadline.EMPTY_DEADLINE; // Deadline is an optional field for add command","lastModifiedDate":"2023-10-18"},{"lineNumber":50,"author":{"gitId":"migfoo02"},"content":"        JobType jobType \u003d JobType.EMPTY_JOB_TYPE; // Job Type is an optional field for add command","lastModifiedDate":"2023-10-20"},{"lineNumber":51,"author":{"gitId":"czhiruo"},"content":"        Industry industry \u003d Industry.DEFAULT_INDUSTRY; // Industry is an optional field for add command","lastModifiedDate":"2023-10-20"},{"lineNumber":52,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":53,"author":{"gitId":"migfoo02"},"content":"        if (argMultimap.getValue(PREFIX_STATUS).isPresent()) {","lastModifiedDate":"2023-10-20"},{"lineNumber":54,"author":{"gitId":"migfoo02"},"content":"            status \u003d ParserUtil.parseStatus(argMultimap.getValue(PREFIX_STATUS).get());","lastModifiedDate":"2023-10-20"},{"lineNumber":55,"author":{"gitId":"migfoo02"},"content":"        }","lastModifiedDate":"2023-10-20"},{"lineNumber":56,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":57,"author":{"gitId":"evanyan13"},"content":"        if (argMultimap.getValue(PREFIX_DEADLINE).isPresent()) {","lastModifiedDate":"2023-10-18"},{"lineNumber":58,"author":{"gitId":"evanyan13"},"content":"            deadline \u003d ParserUtil.parseDeadline(argMultimap.getValue(PREFIX_DEADLINE).get());","lastModifiedDate":"2023-10-18"},{"lineNumber":59,"author":{"gitId":"evanyan13"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":61,"author":{"gitId":"migfoo02"},"content":"        if (argMultimap.getValue(PREFIX_JOB_TYPE).isPresent()) {","lastModifiedDate":"2023-10-23"},{"lineNumber":62,"author":{"gitId":"migfoo02"},"content":"            jobType \u003d ParserUtil.parseJobType(argMultimap.getValue(PREFIX_JOB_TYPE).get());","lastModifiedDate":"2023-10-23"},{"lineNumber":63,"author":{"gitId":"peiran18"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":64,"author":{"gitId":"peiran18"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":65,"author":{"gitId":"czhiruo"},"content":"        if (argMultimap.getValue(PREFIX_INDUSTRY).isPresent()) {","lastModifiedDate":"2023-10-20"},{"lineNumber":66,"author":{"gitId":"czhiruo"},"content":"            industry \u003d ParserUtil.parseIndustry(argMultimap.getValue(PREFIX_INDUSTRY).get());","lastModifiedDate":"2023-10-20"},{"lineNumber":67,"author":{"gitId":"czhiruo"},"content":"        }","lastModifiedDate":"2023-10-20"},{"lineNumber":68,"author":{"gitId":"czhiruo"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":69,"author":{"gitId":"migfoo02"},"content":"        Job job \u003d new Job(role, company, deadline, status, jobType, industry);","lastModifiedDate":"2023-10-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":71,"author":{"gitId":"JeremyYong128"},"content":"        return new AddCommand(job);","lastModifiedDate":"2023-10-04"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":78,"author":{"gitId":"czhiruo"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap,","lastModifiedDate":"2023-10-21"},{"lineNumber":79,"author":{"gitId":"czhiruo"},"content":"                                              Prefix... prefixes) {","lastModifiedDate":"2023-10-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"czhiruo":7,"evanyan13":19,"peiran18":3,"-":33,"JeremyYong128":4,"migfoo02":16}},{"path":"src/main/java/seedu/application/logic/parser/ApplicationBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"evanyan13"},"content":"package seedu.application.logic.parser;","lastModifiedDate":"2023-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"evanyan13"},"content":"import static seedu.application.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-10"},{"lineNumber":4,"author":{"gitId":"evanyan13"},"content":"import static seedu.application.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-10-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"evanyan13"},"content":"import seedu.application.commons.core.LogsCenter;","lastModifiedDate":"2023-10-10"},{"lineNumber":11,"author":{"gitId":"peiran18"},"content":"import seedu.application.logic.commands.*;","lastModifiedDate":"2023-10-30"},{"lineNumber":12,"author":{"gitId":"evanyan13"},"content":"import seedu.application.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"evanyan13"},"content":"public class ApplicationBookParser {","lastModifiedDate":"2023-10-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"evanyan13"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ApplicationBookParser.class);","lastModifiedDate":"2023-10-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // Note to developers: Change the log level in config.json to enable lower level (i.e., FINE, FINER and lower)","lastModifiedDate":"2023-07-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // log messages such as the one below.","lastModifiedDate":"2023-07-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // Lower level log messages are used sparingly to minimize noise in the code.","lastModifiedDate":"2023-07-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        logger.fine(\"Command word: \" + commandWord + \"; Arguments: \" + arguments);","lastModifiedDate":"2023-07-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2023-10-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":66,"author":{"gitId":"JeremyYong128"},"content":"        case SortCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-26"},{"lineNumber":67,"author":{"gitId":"JeremyYong128"},"content":"            return new SortCommandParser().parse(arguments);","lastModifiedDate":"2023-10-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":75,"author":{"gitId":"peiran18"},"content":"        case InterviewCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-31"},{"lineNumber":76,"author":{"gitId":"peiran18"},"content":"            return new InterviewCommandParser().parse(arguments);","lastModifiedDate":"2023-10-31"},{"lineNumber":77,"author":{"gitId":"peiran18"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            logger.finer(\"This user input caused a ParseException: \" + userInput);","lastModifiedDate":"2023-07-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"evanyan13":7,"peiran18":4,"-":71,"JeremyYong128":2}},{"path":"src/main/java/seedu/application/logic/parser/ArgumentMultimap.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"evanyan13"},"content":"package seedu.application.logic.parser;","lastModifiedDate":"2023-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2017-03-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-03-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2017-03-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-03-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-07-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":10,"author":{"gitId":"evanyan13"},"content":"import seedu.application.logic.Messages;","lastModifiedDate":"2023-10-10"},{"lineNumber":11,"author":{"gitId":"evanyan13"},"content":"import seedu.application.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Stores mapping of prefixes to their respective arguments.","lastModifiedDate":"2017-03-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Each key may be associated with multiple argument values.","lastModifiedDate":"2017-03-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Values for a given key are stored in a list, and the insertion ordering is maintained.","lastModifiedDate":"2017-03-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Keys are unique, but the list of argument values may contain duplicate argument values, i.e. the same argument value","lastModifiedDate":"2017-03-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * can be inserted multiple times for the same prefix.","lastModifiedDate":"2017-03-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class ArgumentMultimap {","lastModifiedDate":"2017-03-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /** Prefixes mapped to their respective arguments**/","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final Map\u003cPrefix, List\u003cString\u003e\u003e argMultimap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"JeremyYong128"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"JeremyYong128"},"content":"     * Returns the {@code argMultiMap} object.","lastModifiedDate":"2023-10-26"},{"lineNumber":27,"author":{"gitId":"JeremyYong128"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":28,"author":{"gitId":"JeremyYong128"},"content":"    public Map\u003cPrefix, List\u003cString\u003e\u003e getArgMultimap() {","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"JeremyYong128"},"content":"        return argMultimap;","lastModifiedDate":"2023-10-26"},{"lineNumber":30,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":31,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":32,"author":{"gitId":"JeremyYong128"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":33,"author":{"gitId":"JeremyYong128"},"content":"     * Returns the size of the {@code argMultiMap} object.","lastModifiedDate":"2023-10-26"},{"lineNumber":34,"author":{"gitId":"JeremyYong128"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":35,"author":{"gitId":"JeremyYong128"},"content":"    public int size() {","lastModifiedDate":"2023-10-26"},{"lineNumber":36,"author":{"gitId":"JeremyYong128"},"content":"        return argMultimap.size();","lastModifiedDate":"2023-10-26"},{"lineNumber":37,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":38,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Associates the specified argument value with {@code prefix} key in this map.","lastModifiedDate":"2017-03-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * If the map previously contained a mapping for the key, the new value is appended to the list of existing values.","lastModifiedDate":"2017-03-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * @param prefix   Prefix key with which the specified argument value is to be associated","lastModifiedDate":"2017-03-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * @param argValue Argument value to be associated with the specified prefix key","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void put(Prefix prefix, String argValue) {","lastModifiedDate":"2017-03-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        List\u003cString\u003e argValues \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        argValues.add(argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        argMultimap.put(prefix, argValues);","lastModifiedDate":"2017-03-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Returns the last value of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return values.isEmpty() ? Optional.empty() : Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2017-03-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Returns all values of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * If the prefix does not exist or has no values, this will return an empty list.","lastModifiedDate":"2017-03-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Modifying the returned list will not affect the underlying data structure of the ArgumentMultimap.","lastModifiedDate":"2017-03-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public List\u003cString\u003e getAllValues(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        if (!argMultimap.containsKey(prefix)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(argMultimap.get(prefix));","lastModifiedDate":"2017-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Returns the preamble (text before the first valid prefix). Trims any leading/trailing spaces.","lastModifiedDate":"2017-03-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public String getPreamble() {","lastModifiedDate":"2017-03-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return getValue(new Prefix(\"\")).orElse(\"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-07-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Throws a {@code ParseException} if any of the prefixes given in {@code prefixes} appeared more than","lastModifiedDate":"2023-07-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * once among the arguments.","lastModifiedDate":"2023-07-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-07-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void verifyNoDuplicatePrefixesFor(Prefix... prefixes) throws ParseException {","lastModifiedDate":"2023-07-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        Prefix[] duplicatedPrefixes \u003d Stream.of(prefixes).distinct()","lastModifiedDate":"2023-07-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"                .filter(prefix -\u003e argMultimap.containsKey(prefix) \u0026\u0026 argMultimap.get(prefix).size() \u003e 1)","lastModifiedDate":"2023-07-14"},{"lineNumber":86,"author":{"gitId":"-"},"content":"                .toArray(Prefix[]::new);","lastModifiedDate":"2023-07-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        if (duplicatedPrefixes.length \u003e 0) {","lastModifiedDate":"2023-07-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            throw new ParseException(Messages.getErrorMessageForDuplicatePrefixes(duplicatedPrefixes));","lastModifiedDate":"2023-07-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-08"}],"authorContributionMap":{"evanyan13":3,"-":75,"JeremyYong128":14}},{"path":"src/main/java/seedu/application/logic/parser/ArgumentTokenizer.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"evanyan13"},"content":"package seedu.application.logic.parser;","lastModifiedDate":"2023-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-10-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Tokenizes arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":" *     e.g. {@code some preamble text t/ 11.00 t/12.00 k/ m/ July}  where prefixes are {@code t/ k/ m/}.\u003cbr\u003e","lastModifiedDate":"2017-05-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * 1. An argument\u0027s value can be an empty string e.g. the value of {@code k/} in the above example.\u003cbr\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * 2. Leading and trailing whitespaces of an argument value will be discarded.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * 3. An argument may be repeated and all its values will be accumulated e.g. the value of {@code t/}","lastModifiedDate":"2017-05-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":" *    in the above example.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ArgumentTokenizer {","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Tokenizes an arguments string and returns an {@code ArgumentMultimap} object that maps prefixes to their","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * respective argument values. Only the given prefixes will be recognized in the arguments string.","lastModifiedDate":"2017-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @return           ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static ArgumentMultimap tokenize(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d findAllPrefixPositions(argsString, prefixes);","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return extractArguments(argsString, positions);","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Finds all zero-based prefix positions in the given arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to find in the arguments string","lastModifiedDate":"2017-03-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @return           List of zero-based prefix positions in the given arguments string","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findAllPrefixPositions(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return Arrays.stream(prefixes)","lastModifiedDate":"2018-01-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                .flatMap(prefix -\u003e findPrefixPositions(argsString, prefix).stream())","lastModifiedDate":"2018-01-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2018-01-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * {@see findAllPrefixPositions}","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findPrefixPositions(String argsString, Prefix prefix) {","lastModifiedDate":"2017-03-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2016-10-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        int prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), 0);","lastModifiedDate":"2017-05-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        while (prefixPosition !\u003d -1) {","lastModifiedDate":"2017-05-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            PrefixPosition extendedPrefix \u003d new PrefixPosition(prefix, prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            positions.add(extendedPrefix);","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return positions;","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Returns the index of the first occurrence of {@code prefix} in","lastModifiedDate":"2017-05-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * {@code argsString} starting from index {@code fromIndex}. An occurrence","lastModifiedDate":"2017-05-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * is valid if there is a whitespace before {@code prefix}. Returns -1 if no","lastModifiedDate":"2017-05-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * such occurrence can be found.","lastModifiedDate":"2017-05-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * E.g if {@code argsString} \u003d \"e/hip/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns -1 as there are no valid","lastModifiedDate":"2017-05-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * occurrences of \"p/\" with whitespace before it. However, if","lastModifiedDate":"2017-05-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * {@code argsString} \u003d \"e/hi p/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns 5.","lastModifiedDate":"2017-05-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    private static int findPrefixPosition(String argsString, String prefix, int fromIndex) {","lastModifiedDate":"2017-05-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        int prefixIndex \u003d argsString.indexOf(\" \" + prefix, fromIndex);","lastModifiedDate":"2017-05-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return prefixIndex \u003d\u003d -1 ? -1","lastModifiedDate":"2017-05-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                : prefixIndex + 1; // +1 as offset for whitespace","lastModifiedDate":"2017-05-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Extracts prefixes and their argument values, and returns an {@code ArgumentMultimap} object that maps the","lastModifiedDate":"2017-03-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * extracted prefixes to their respective arguments. Prefixes are extracted based on their zero-based positions in","lastModifiedDate":"2017-03-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * {@code argsString}.","lastModifiedDate":"2017-03-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * @param argsString      Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @param prefixPositions Zero-based positions of all prefixes in {@code argsString}","lastModifiedDate":"2017-03-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * @return                ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    private static ArgumentMultimap extractArguments(String argsString, List\u003cPrefixPosition\u003e prefixPositions) {","lastModifiedDate":"2017-03-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // Sort by start position","lastModifiedDate":"2016-10-16"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        prefixPositions.sort((prefix1, prefix2) -\u003e prefix1.getStartPosition() - prefix2.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // Insert a PrefixPosition to represent the preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        PrefixPosition preambleMarker \u003d new PrefixPosition(new Prefix(\"\"), 0);","lastModifiedDate":"2016-10-16"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        prefixPositions.add(0, preambleMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // Add a dummy PrefixPosition to represent the end of the string","lastModifiedDate":"2016-10-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        PrefixPosition endPositionMarker \u003d new PrefixPosition(new Prefix(\"\"), argsString.length());","lastModifiedDate":"2016-10-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        prefixPositions.add(endPositionMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // Map prefixes to their argument values (if any)","lastModifiedDate":"2017-03-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d new ArgumentMultimap();","lastModifiedDate":"2017-03-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c prefixPositions.size() - 1; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            // Extract and store prefixes and their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            Prefix argPrefix \u003d prefixPositions.get(i).getPrefix();","lastModifiedDate":"2017-03-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            String argValue \u003d extractArgumentValue(argsString, prefixPositions.get(i), prefixPositions.get(i + 1));","lastModifiedDate":"2016-10-16"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            argMultimap.put(argPrefix, argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return argMultimap;","lastModifiedDate":"2017-03-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Returns the trimmed value of the argument in the arguments string specified by {@code currentPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * The end position of the value is determined by {@code nextPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    private static String extractArgumentValue(String argsString,","lastModifiedDate":"2017-03-20"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                                        PrefixPosition currentPrefixPosition,","lastModifiedDate":"2016-10-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                                        PrefixPosition nextPrefixPosition) {","lastModifiedDate":"2016-10-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Prefix prefix \u003d currentPrefixPosition.getPrefix();","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        int valueStartPos \u003d currentPrefixPosition.getStartPosition() + prefix.getPrefix().length();","lastModifiedDate":"2016-10-16"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        String value \u003d argsString.substring(valueStartPos, nextPrefixPosition.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        return value.trim();","lastModifiedDate":"2016-10-16"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * Represents a prefix\u0027s position in an arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    private static class PrefixPosition {","lastModifiedDate":"2017-03-20"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        private int startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        private final Prefix prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        PrefixPosition(Prefix prefix, int startPosition) {","lastModifiedDate":"2016-10-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            this.prefix \u003d prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            this.startPosition \u003d startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        int getStartPosition() {","lastModifiedDate":"2016-10-19"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            return startPosition;","lastModifiedDate":"2018-08-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        Prefix getPrefix() {","lastModifiedDate":"2016-10-19"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            return prefix;","lastModifiedDate":"2018-08-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":148,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"evanyan13":1,"-":147}},{"path":"src/main/java/seedu/application/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"evanyan13"},"content":"package seedu.application.logic.parser;","lastModifiedDate":"2023-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"JeremyYong128"},"content":"    public static final Prefix PREFIX_COMPANY \u003d new Prefix(\"c/\");","lastModifiedDate":"2023-10-04"},{"lineNumber":10,"author":{"gitId":"evanyan13"},"content":"    public static final Prefix PREFIX_ROLE \u003d new Prefix(\"r/\");","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"peiran18"},"content":"    public static final Prefix PREFIX_STATUS \u003d new Prefix(\"s/\");","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"czhiruo"},"content":"    public static final Prefix PREFIX_INDUSTRY \u003d new Prefix(\"i/\");","lastModifiedDate":"2023-10-20"},{"lineNumber":13,"author":{"gitId":"JeremyYong128"},"content":"    public static final Prefix PREFIX_DEADLINE \u003d new Prefix(\"d/\");","lastModifiedDate":"2023-10-24"},{"lineNumber":14,"author":{"gitId":"JeremyYong128"},"content":"    public static final Prefix PREFIX_JOB_TYPE \u003d new Prefix(\"t/\");","lastModifiedDate":"2023-10-24"},{"lineNumber":15,"author":{"gitId":"peiran18"},"content":"    public static final Prefix PREFIX_INTERVIEW_TYPE \u003d new Prefix(\"it/\");","lastModifiedDate":"2023-10-30"},{"lineNumber":16,"author":{"gitId":"peiran18"},"content":"    public static final Prefix PREFIX_INTERVIEW_ADDRESS \u003d new Prefix(\"ia/\");","lastModifiedDate":"2023-10-30"},{"lineNumber":17,"author":{"gitId":"peiran18"},"content":"    public static final Prefix PREFIX_INTERVIEW_DATETIME \u003d new Prefix(\"id/\");","lastModifiedDate":"2023-10-30"},{"lineNumber":18,"author":{"gitId":"czhiruo"},"content":"    public static final Prefix PREFIX_INTERVIEW_DELETE \u003d new Prefix(\"from/\");","lastModifiedDate":"2023-10-31"},{"lineNumber":19,"author":{"gitId":"peiran18"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"czhiruo":2,"evanyan13":2,"peiran18":5,"-":8,"JeremyYong128":3}},{"path":"src/main/java/seedu/application/logic/parser/DeleteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"evanyan13"},"content":"package seedu.application.logic.parser;","lastModifiedDate":"2023-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"evanyan13"},"content":"import static seedu.application.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"evanyan13"},"content":"import seedu.application.commons.core.index.Index;","lastModifiedDate":"2023-10-10"},{"lineNumber":6,"author":{"gitId":"evanyan13"},"content":"import seedu.application.logic.commands.DeleteCommand;","lastModifiedDate":"2023-10-10"},{"lineNumber":7,"author":{"gitId":"evanyan13"},"content":"import seedu.application.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-10"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new DeleteCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class DeleteCommandParser implements Parser\u003cDeleteCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public DeleteCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2017-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            return new DeleteCommand(index);","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"evanyan13":5,"-":24}},{"path":"src/main/java/seedu/application/logic/parser/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"evanyan13"},"content":"package seedu.application.logic.parser;","lastModifiedDate":"2023-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"evanyan13"},"content":"import static seedu.application.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-10"},{"lineNumber":5,"author":{"gitId":"evanyan13"},"content":"import static seedu.application.logic.parser.CliSyntax.PREFIX_COMPANY;","lastModifiedDate":"2023-10-10"},{"lineNumber":6,"author":{"gitId":"evanyan13"},"content":"import static seedu.application.logic.parser.CliSyntax.PREFIX_DEADLINE;","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"migfoo02"},"content":"import static seedu.application.logic.parser.CliSyntax.PREFIX_INDUSTRY;","lastModifiedDate":"2023-10-22"},{"lineNumber":8,"author":{"gitId":"migfoo02"},"content":"import static seedu.application.logic.parser.CliSyntax.PREFIX_JOB_TYPE;","lastModifiedDate":"2023-10-23"},{"lineNumber":9,"author":{"gitId":"evanyan13"},"content":"import static seedu.application.logic.parser.CliSyntax.PREFIX_ROLE;","lastModifiedDate":"2023-10-10"},{"lineNumber":10,"author":{"gitId":"migfoo02"},"content":"import static seedu.application.logic.parser.CliSyntax.PREFIX_STATUS;","lastModifiedDate":"2023-10-20"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"evanyan13"},"content":"import seedu.application.commons.core.index.Index;","lastModifiedDate":"2023-10-10"},{"lineNumber":13,"author":{"gitId":"evanyan13"},"content":"import seedu.application.logic.commands.EditCommand;","lastModifiedDate":"2023-10-10"},{"lineNumber":14,"author":{"gitId":"evanyan13"},"content":"import seedu.application.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class EditCommandParser implements Parser\u003cEditCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":24,"author":{"gitId":"evanyan13"},"content":"     *","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public EditCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":30,"author":{"gitId":"migfoo02"},"content":"            ArgumentTokenizer.tokenize(args, PREFIX_ROLE, PREFIX_COMPANY, PREFIX_DEADLINE, PREFIX_STATUS,","lastModifiedDate":"2023-10-20"},{"lineNumber":31,"author":{"gitId":"migfoo02"},"content":"                    PREFIX_JOB_TYPE, PREFIX_INDUSTRY);","lastModifiedDate":"2023-10-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2017-06-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":41,"author":{"gitId":"migfoo02"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_ROLE, PREFIX_COMPANY, PREFIX_DEADLINE, PREFIX_STATUS,","lastModifiedDate":"2023-10-20"},{"lineNumber":42,"author":{"gitId":"migfoo02"},"content":"                PREFIX_JOB_TYPE, PREFIX_INDUSTRY);","lastModifiedDate":"2023-10-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":44,"author":{"gitId":"evanyan13"},"content":"        EditCommand.EditJobDescriptor editJobDescriptor \u003d new EditCommand.EditJobDescriptor();","lastModifiedDate":"2023-10-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":46,"author":{"gitId":"JeremyYong128"},"content":"        if (argMultimap.getValue(PREFIX_ROLE).isPresent()) {","lastModifiedDate":"2023-10-04"},{"lineNumber":47,"author":{"gitId":"JeremyYong128"},"content":"            editJobDescriptor.setRole(ParserUtil.parseRole(argMultimap.getValue(PREFIX_ROLE).get()));","lastModifiedDate":"2023-10-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":49,"author":{"gitId":"JeremyYong128"},"content":"        if (argMultimap.getValue(PREFIX_COMPANY).isPresent()) {","lastModifiedDate":"2023-10-04"},{"lineNumber":50,"author":{"gitId":"JeremyYong128"},"content":"            editJobDescriptor.setCompany(ParserUtil.parseCompany(argMultimap.getValue(PREFIX_COMPANY).get()));","lastModifiedDate":"2023-10-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":52,"author":{"gitId":"evanyan13"},"content":"        if (argMultimap.getValue(PREFIX_DEADLINE).isPresent()) {","lastModifiedDate":"2023-10-18"},{"lineNumber":53,"author":{"gitId":"evanyan13"},"content":"            editJobDescriptor.setDeadline(ParserUtil.parseDeadline(argMultimap.getValue(PREFIX_DEADLINE).get()));","lastModifiedDate":"2023-10-18"},{"lineNumber":54,"author":{"gitId":"evanyan13"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":55,"author":{"gitId":"peiran18"},"content":"        if (argMultimap.getValue(PREFIX_STATUS).isPresent()) {","lastModifiedDate":"2023-10-19"},{"lineNumber":56,"author":{"gitId":"peiran18"},"content":"            editJobDescriptor.setStatus(ParserUtil.parseStatus(argMultimap.getValue(PREFIX_STATUS).get()));","lastModifiedDate":"2023-10-19"},{"lineNumber":57,"author":{"gitId":"peiran18"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":58,"author":{"gitId":"migfoo02"},"content":"        if (argMultimap.getValue(PREFIX_JOB_TYPE).isPresent()) {","lastModifiedDate":"2023-10-23"},{"lineNumber":59,"author":{"gitId":"migfoo02"},"content":"            editJobDescriptor.setJobType(ParserUtil.parseJobType(argMultimap.getValue(PREFIX_JOB_TYPE).get()));","lastModifiedDate":"2023-10-23"},{"lineNumber":60,"author":{"gitId":"migfoo02"},"content":"        }","lastModifiedDate":"2023-10-20"},{"lineNumber":61,"author":{"gitId":"czhiruo"},"content":"        if (argMultimap.getValue(PREFIX_INDUSTRY).isPresent()) {","lastModifiedDate":"2023-10-20"},{"lineNumber":62,"author":{"gitId":"czhiruo"},"content":"            editJobDescriptor.setIndustry(ParserUtil.parseIndustry(argMultimap.getValue(PREFIX_INDUSTRY).get()));","lastModifiedDate":"2023-10-20"},{"lineNumber":63,"author":{"gitId":"czhiruo"},"content":"        }","lastModifiedDate":"2023-10-20"},{"lineNumber":64,"author":{"gitId":"czhiruo"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":65,"author":{"gitId":"JeremyYong128"},"content":"        if (!editJobDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2023-10-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-03-11"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":69,"author":{"gitId":"JeremyYong128"},"content":"        return new EditCommand(index, editJobDescriptor);","lastModifiedDate":"2023-10-04"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"czhiruo":4,"evanyan13":13,"peiran18":3,"-":36,"JeremyYong128":6,"migfoo02":10}},{"path":"src/main/java/seedu/application/logic/parser/FindCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"evanyan13"},"content":"package seedu.application.logic.parser;","lastModifiedDate":"2023-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"evanyan13"},"content":"import static seedu.application.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-10"},{"lineNumber":4,"author":{"gitId":"JeremyYong128"},"content":"import static seedu.application.logic.parser.CliSyntax.PREFIX_COMPANY;","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"JeremyYong128"},"content":"import static seedu.application.logic.parser.CliSyntax.PREFIX_DEADLINE;","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"JeremyYong128"},"content":"import static seedu.application.logic.parser.CliSyntax.PREFIX_INDUSTRY;","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"JeremyYong128"},"content":"import static seedu.application.logic.parser.CliSyntax.PREFIX_JOB_TYPE;","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"JeremyYong128"},"content":"import static seedu.application.logic.parser.CliSyntax.PREFIX_ROLE;","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"JeremyYong128"},"content":"import static seedu.application.logic.parser.CliSyntax.PREFIX_STATUS;","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"JeremyYong128"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"JeremyYong128"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-31"},{"lineNumber":13,"author":{"gitId":"JeremyYong128"},"content":"import java.util.List;","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"JeremyYong128"},"content":"import java.util.Map;","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"JeremyYong128"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"evanyan13"},"content":"import seedu.application.logic.commands.FindCommand;","lastModifiedDate":"2023-10-10"},{"lineNumber":18,"author":{"gitId":"evanyan13"},"content":"import seedu.application.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-10"},{"lineNumber":19,"author":{"gitId":"JeremyYong128"},"content":"import seedu.application.model.job.CombinedPredicate;","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"JeremyYong128"},"content":"import seedu.application.model.job.FieldContainsKeywordsPredicate;","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"JeremyYong128"},"content":"import seedu.application.model.job.Job;","lastModifiedDate":"2023-10-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class FindCommandParser implements Parser\u003cFindCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the FindCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * and returns a FindCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":31,"author":{"gitId":"JeremyYong128"},"content":"     * @throws ParseException if the user input does not conform to the expected format.","lastModifiedDate":"2023-10-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public FindCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":34,"author":{"gitId":"JeremyYong128"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-10-26"},{"lineNumber":35,"author":{"gitId":"JeremyYong128"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_ROLE, PREFIX_COMPANY,","lastModifiedDate":"2023-10-26"},{"lineNumber":36,"author":{"gitId":"JeremyYong128"},"content":"                        PREFIX_DEADLINE, PREFIX_STATUS, PREFIX_JOB_TYPE, PREFIX_INDUSTRY);","lastModifiedDate":"2023-10-26"},{"lineNumber":37,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":38,"author":{"gitId":"JeremyYong128"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_ROLE, PREFIX_COMPANY,","lastModifiedDate":"2023-10-26"},{"lineNumber":39,"author":{"gitId":"JeremyYong128"},"content":"                PREFIX_DEADLINE, PREFIX_STATUS, PREFIX_JOB_TYPE, PREFIX_INDUSTRY);","lastModifiedDate":"2023-10-26"},{"lineNumber":40,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":41,"author":{"gitId":"JeremyYong128"},"content":"        ArrayList\u003cPredicate\u003cJob\u003e\u003e predicateList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-31"},{"lineNumber":42,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":43,"author":{"gitId":"JeremyYong128"},"content":"        for (Map.Entry\u003cPrefix, List\u003cString\u003e\u003e entry : argMultimap.getArgMultimap().entrySet()) {","lastModifiedDate":"2023-10-26"},{"lineNumber":44,"author":{"gitId":"JeremyYong128"},"content":"            String keywords \u003d entry.getValue().get(0);","lastModifiedDate":"2023-10-26"},{"lineNumber":45,"author":{"gitId":"JeremyYong128"},"content":"            if (keywords.equals(\"\")) {","lastModifiedDate":"2023-10-26"},{"lineNumber":46,"author":{"gitId":"JeremyYong128"},"content":"                if (entry.getKey().equals(new Prefix(\"\")) \u0026\u0026 argMultimap.size() \u003e 1) {","lastModifiedDate":"2023-10-31"},{"lineNumber":47,"author":{"gitId":"JeremyYong128"},"content":"                    continue;","lastModifiedDate":"2023-10-31"},{"lineNumber":48,"author":{"gitId":"JeremyYong128"},"content":"                } else {","lastModifiedDate":"2023-10-31"},{"lineNumber":49,"author":{"gitId":"JeremyYong128"},"content":"                    throw new ParseException(","lastModifiedDate":"2023-10-14"},{"lineNumber":50,"author":{"gitId":"JeremyYong128"},"content":"                            String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_EMPTY_KEYWORDS));","lastModifiedDate":"2023-10-26"},{"lineNumber":51,"author":{"gitId":"JeremyYong128"},"content":"                }","lastModifiedDate":"2023-10-14"},{"lineNumber":52,"author":{"gitId":"JeremyYong128"},"content":"            }","lastModifiedDate":"2023-10-31"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":54,"author":{"gitId":"JeremyYong128"},"content":"            String[] splitKeywords \u003d keywords.split(\"\\\\s+\");","lastModifiedDate":"2023-10-26"},{"lineNumber":55,"author":{"gitId":"JeremyYong128"},"content":"            List\u003cString\u003e keywordList \u003d Arrays.asList(splitKeywords);","lastModifiedDate":"2023-10-31"},{"lineNumber":56,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":57,"author":{"gitId":"JeremyYong128"},"content":"            Predicate\u003cJob\u003e predicate;","lastModifiedDate":"2023-10-31"},{"lineNumber":58,"author":{"gitId":"JeremyYong128"},"content":"            System.out.println(\"\");","lastModifiedDate":"2023-10-31"},{"lineNumber":59,"author":{"gitId":"JeremyYong128"},"content":"            if (entry.getKey().equals(new Prefix(\"\"))) {","lastModifiedDate":"2023-10-31"},{"lineNumber":60,"author":{"gitId":"JeremyYong128"},"content":"                predicate \u003d FieldContainsKeywordsPredicate.getPreamblePredicate(keywordList);","lastModifiedDate":"2023-10-31"},{"lineNumber":61,"author":{"gitId":"JeremyYong128"},"content":"            } else {","lastModifiedDate":"2023-10-31"},{"lineNumber":62,"author":{"gitId":"JeremyYong128"},"content":"                predicate \u003d new FieldContainsKeywordsPredicate(entry.getKey(), keywordList);","lastModifiedDate":"2023-10-31"},{"lineNumber":63,"author":{"gitId":"JeremyYong128"},"content":"            }","lastModifiedDate":"2023-10-26"},{"lineNumber":64,"author":{"gitId":"JeremyYong128"},"content":"            predicateList.add(predicate);","lastModifiedDate":"2023-10-31"},{"lineNumber":65,"author":{"gitId":"JeremyYong128"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":66,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":67,"author":{"gitId":"JeremyYong128"},"content":"        return new FindCommand(new CombinedPredicate(predicateList));","lastModifiedDate":"2023-10-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"evanyan13":4,"-":18,"JeremyYong128":48}},{"path":"src/main/java/seedu/application/logic/parser/InterviewCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"peiran18"},"content":"package seedu.application.logic.parser;","lastModifiedDate":"2023-10-30"},{"lineNumber":2,"author":{"gitId":"peiran18"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":3,"author":{"gitId":"peiran18"},"content":"import static seedu.application.logic.Messages.*;","lastModifiedDate":"2023-10-31"},{"lineNumber":4,"author":{"gitId":"peiran18"},"content":"import static seedu.application.logic.parser.CliSyntax.*;","lastModifiedDate":"2023-10-30"},{"lineNumber":5,"author":{"gitId":"peiran18"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":6,"author":{"gitId":"czhiruo"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-10-31"},{"lineNumber":7,"author":{"gitId":"czhiruo"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2023-10-31"},{"lineNumber":8,"author":{"gitId":"czhiruo"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-10-31"},{"lineNumber":9,"author":{"gitId":"peiran18"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-10-30"},{"lineNumber":10,"author":{"gitId":"peiran18"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":11,"author":{"gitId":"czhiruo"},"content":"import seedu.application.commons.core.LogsCenter;","lastModifiedDate":"2023-10-31"},{"lineNumber":12,"author":{"gitId":"peiran18"},"content":"import seedu.application.commons.core.index.Index;","lastModifiedDate":"2023-10-30"},{"lineNumber":13,"author":{"gitId":"czhiruo"},"content":"import seedu.application.logic.commands.HelpCommand;","lastModifiedDate":"2023-10-31"},{"lineNumber":14,"author":{"gitId":"peiran18"},"content":"import seedu.application.logic.commands.InterviewAddCommand;","lastModifiedDate":"2023-10-30"},{"lineNumber":15,"author":{"gitId":"peiran18"},"content":"import seedu.application.logic.commands.InterviewCommand;","lastModifiedDate":"2023-10-31"},{"lineNumber":16,"author":{"gitId":"czhiruo"},"content":"import seedu.application.logic.commands.InterviewDeleteCommand;","lastModifiedDate":"2023-10-31"},{"lineNumber":17,"author":{"gitId":"peiran18"},"content":"import seedu.application.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-30"},{"lineNumber":18,"author":{"gitId":"peiran18"},"content":"import seedu.application.model.job.interview.Interview;","lastModifiedDate":"2023-10-30"},{"lineNumber":19,"author":{"gitId":"peiran18"},"content":"import seedu.application.model.job.interview.InterviewAddress;","lastModifiedDate":"2023-10-30"},{"lineNumber":20,"author":{"gitId":"peiran18"},"content":"import seedu.application.model.job.interview.InterviewDateTime;","lastModifiedDate":"2023-10-30"},{"lineNumber":21,"author":{"gitId":"peiran18"},"content":"import seedu.application.model.job.interview.InterviewType;","lastModifiedDate":"2023-10-30"},{"lineNumber":22,"author":{"gitId":"peiran18"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":23,"author":{"gitId":"peiran18"},"content":"/**","lastModifiedDate":"2023-10-30"},{"lineNumber":24,"author":{"gitId":"peiran18"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2023-10-30"},{"lineNumber":25,"author":{"gitId":"peiran18"},"content":" */","lastModifiedDate":"2023-10-30"},{"lineNumber":26,"author":{"gitId":"peiran18"},"content":"public class InterviewCommandParser implements Parser\u003cInterviewCommand\u003e {","lastModifiedDate":"2023-10-31"},{"lineNumber":27,"author":{"gitId":"peiran18"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":28,"author":{"gitId":"czhiruo"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":29,"author":{"gitId":"czhiruo"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2023-10-31"},{"lineNumber":30,"author":{"gitId":"czhiruo"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":31,"author":{"gitId":"czhiruo"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2023-10-31"},{"lineNumber":32,"author":{"gitId":"czhiruo"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ApplicationBookParser.class);","lastModifiedDate":"2023-10-31"},{"lineNumber":33,"author":{"gitId":"czhiruo"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":34,"author":{"gitId":"peiran18"},"content":"    /**","lastModifiedDate":"2023-10-30"},{"lineNumber":35,"author":{"gitId":"peiran18"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2023-10-30"},{"lineNumber":36,"author":{"gitId":"peiran18"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2023-10-30"},{"lineNumber":37,"author":{"gitId":"peiran18"},"content":"     *","lastModifiedDate":"2023-10-30"},{"lineNumber":38,"author":{"gitId":"peiran18"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-30"},{"lineNumber":39,"author":{"gitId":"peiran18"},"content":"     */","lastModifiedDate":"2023-10-30"},{"lineNumber":40,"author":{"gitId":"peiran18"},"content":"    public InterviewCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-31"},{"lineNumber":41,"author":{"gitId":"czhiruo"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(args.trim());","lastModifiedDate":"2023-10-31"},{"lineNumber":42,"author":{"gitId":"czhiruo"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2023-10-31"},{"lineNumber":43,"author":{"gitId":"czhiruo"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-31"},{"lineNumber":44,"author":{"gitId":"peiran18"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":45,"author":{"gitId":"peiran18"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":46,"author":{"gitId":"czhiruo"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2023-10-31"},{"lineNumber":47,"author":{"gitId":"czhiruo"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2023-10-31"},{"lineNumber":48,"author":{"gitId":"czhiruo"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":49,"author":{"gitId":"czhiruo"},"content":"        // Note to developers: Change the log level in config.json to enable lower level (i.e., FINE, FINER and lower)","lastModifiedDate":"2023-10-31"},{"lineNumber":50,"author":{"gitId":"czhiruo"},"content":"        // log messages such as the one below.","lastModifiedDate":"2023-10-31"},{"lineNumber":51,"author":{"gitId":"czhiruo"},"content":"        // Lower level log messages are used sparingly to minimize noise in the code.","lastModifiedDate":"2023-10-31"},{"lineNumber":52,"author":{"gitId":"czhiruo"},"content":"        logger.fine(\"Command word: \" + commandWord + \"; Arguments: \" + arguments);","lastModifiedDate":"2023-10-31"},{"lineNumber":53,"author":{"gitId":"czhiruo"},"content":"        switch (commandWord) {","lastModifiedDate":"2023-10-31"},{"lineNumber":54,"author":{"gitId":"peiran18"},"content":"        case InterviewAddCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-31"},{"lineNumber":55,"author":{"gitId":"czhiruo"},"content":"            return parseAdd(arguments);","lastModifiedDate":"2023-10-31"},{"lineNumber":56,"author":{"gitId":"czhiruo"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":57,"author":{"gitId":"czhiruo"},"content":"        case InterviewDeleteCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-31"},{"lineNumber":58,"author":{"gitId":"czhiruo"},"content":"            return new InterviewDeleteCommandParser().parse(arguments);","lastModifiedDate":"2023-10-31"},{"lineNumber":59,"author":{"gitId":"peiran18"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":60,"author":{"gitId":"peiran18"},"content":"        default:","lastModifiedDate":"2023-10-31"},{"lineNumber":61,"author":{"gitId":"peiran18"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2023-10-31"},{"lineNumber":62,"author":{"gitId":"peiran18"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":63,"author":{"gitId":"peiran18"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":64,"author":{"gitId":"peiran18"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":65,"author":{"gitId":"czhiruo"},"content":"    private static InterviewAddCommand parseAdd(String args) throws ParseException {","lastModifiedDate":"2023-10-31"},{"lineNumber":66,"author":{"gitId":"czhiruo"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-10-31"},{"lineNumber":67,"author":{"gitId":"czhiruo"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_INTERVIEW_TYPE,","lastModifiedDate":"2023-10-31"},{"lineNumber":68,"author":{"gitId":"czhiruo"},"content":"                        PREFIX_INTERVIEW_DATETIME, PREFIX_INTERVIEW_ADDRESS);","lastModifiedDate":"2023-10-31"},{"lineNumber":69,"author":{"gitId":"czhiruo"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":70,"author":{"gitId":"czhiruo"},"content":"        Index index;","lastModifiedDate":"2023-10-31"},{"lineNumber":71,"author":{"gitId":"czhiruo"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":72,"author":{"gitId":"peiran18"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_INTERVIEW_TYPE,","lastModifiedDate":"2023-10-31"},{"lineNumber":73,"author":{"gitId":"peiran18"},"content":"            PREFIX_INTERVIEW_DATETIME, PREFIX_INTERVIEW_ADDRESS)) {","lastModifiedDate":"2023-10-31"},{"lineNumber":74,"author":{"gitId":"peiran18"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, InterviewAddCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-31"},{"lineNumber":75,"author":{"gitId":"peiran18"},"content":"        }","lastModifiedDate":"2023-10-30"},{"lineNumber":76,"author":{"gitId":"peiran18"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":77,"author":{"gitId":"czhiruo"},"content":"        try {","lastModifiedDate":"2023-10-31"},{"lineNumber":78,"author":{"gitId":"czhiruo"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2023-10-31"},{"lineNumber":79,"author":{"gitId":"czhiruo"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-10-31"},{"lineNumber":80,"author":{"gitId":"czhiruo"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-10-31"},{"lineNumber":81,"author":{"gitId":"czhiruo"},"content":"                    InterviewAddCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-10-31"},{"lineNumber":82,"author":{"gitId":"czhiruo"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":83,"author":{"gitId":"czhiruo"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":84,"author":{"gitId":"peiran18"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_INTERVIEW_TYPE,","lastModifiedDate":"2023-10-31"},{"lineNumber":85,"author":{"gitId":"peiran18"},"content":"                PREFIX_INTERVIEW_DATETIME, PREFIX_INTERVIEW_ADDRESS);","lastModifiedDate":"2023-10-31"},{"lineNumber":86,"author":{"gitId":"peiran18"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":87,"author":{"gitId":"peiran18"},"content":"        InterviewType interviewType \u003d","lastModifiedDate":"2023-10-31"},{"lineNumber":88,"author":{"gitId":"peiran18"},"content":"                ParserUtil.parseInterviewType(argMultimap.getValue(PREFIX_INTERVIEW_TYPE).get());","lastModifiedDate":"2023-10-31"},{"lineNumber":89,"author":{"gitId":"peiran18"},"content":"        InterviewDateTime interviewDateTime \u003d","lastModifiedDate":"2023-10-31"},{"lineNumber":90,"author":{"gitId":"peiran18"},"content":"                ParserUtil.parseInterviewDateTime(argMultimap.getValue(PREFIX_INTERVIEW_DATETIME).get());","lastModifiedDate":"2023-10-31"},{"lineNumber":91,"author":{"gitId":"peiran18"},"content":"        InterviewAddress interviewAddress \u003d","lastModifiedDate":"2023-10-31"},{"lineNumber":92,"author":{"gitId":"peiran18"},"content":"                ParserUtil.parseInterviewAddress(argMultimap.getValue(PREFIX_INTERVIEW_ADDRESS).get());","lastModifiedDate":"2023-10-31"},{"lineNumber":93,"author":{"gitId":"peiran18"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":94,"author":{"gitId":"peiran18"},"content":"        Interview interview \u003d new Interview(interviewType, interviewDateTime, interviewAddress);","lastModifiedDate":"2023-10-30"},{"lineNumber":95,"author":{"gitId":"peiran18"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":96,"author":{"gitId":"peiran18"},"content":"        return new InterviewAddCommand(index, interview);","lastModifiedDate":"2023-10-30"},{"lineNumber":97,"author":{"gitId":"peiran18"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":98,"author":{"gitId":"peiran18"},"content":"    /**","lastModifiedDate":"2023-10-30"},{"lineNumber":99,"author":{"gitId":"peiran18"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2023-10-30"},{"lineNumber":100,"author":{"gitId":"peiran18"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2023-10-30"},{"lineNumber":101,"author":{"gitId":"peiran18"},"content":"     */","lastModifiedDate":"2023-10-30"},{"lineNumber":102,"author":{"gitId":"peiran18"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap,","lastModifiedDate":"2023-10-30"},{"lineNumber":103,"author":{"gitId":"peiran18"},"content":"                                              Prefix... prefixes) {","lastModifiedDate":"2023-10-30"},{"lineNumber":104,"author":{"gitId":"peiran18"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-10-30"},{"lineNumber":105,"author":{"gitId":"peiran18"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":106,"author":{"gitId":"peiran18"},"content":"}","lastModifiedDate":"2023-10-30"}],"authorContributionMap":{"czhiruo":41,"peiran18":65}},{"path":"src/main/java/seedu/application/logic/parser/InterviewDeleteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"czhiruo"},"content":"package seedu.application.logic.parser;","lastModifiedDate":"2023-10-31"},{"lineNumber":2,"author":{"gitId":"czhiruo"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":3,"author":{"gitId":"czhiruo"},"content":"import static seedu.application.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-31"},{"lineNumber":4,"author":{"gitId":"czhiruo"},"content":"import static seedu.application.logic.parser.CliSyntax.*;","lastModifiedDate":"2023-10-31"},{"lineNumber":5,"author":{"gitId":"czhiruo"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":6,"author":{"gitId":"czhiruo"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-10-31"},{"lineNumber":7,"author":{"gitId":"czhiruo"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":8,"author":{"gitId":"czhiruo"},"content":"import seedu.application.commons.core.index.Index;","lastModifiedDate":"2023-10-31"},{"lineNumber":9,"author":{"gitId":"czhiruo"},"content":"import seedu.application.logic.commands.InterviewDeleteCommand;","lastModifiedDate":"2023-10-31"},{"lineNumber":10,"author":{"gitId":"czhiruo"},"content":"import seedu.application.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-31"},{"lineNumber":11,"author":{"gitId":"czhiruo"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":12,"author":{"gitId":"czhiruo"},"content":"/**","lastModifiedDate":"2023-10-31"},{"lineNumber":13,"author":{"gitId":"czhiruo"},"content":" * Parses input arguments and creates a new InterviewDeleteCommand object","lastModifiedDate":"2023-10-31"},{"lineNumber":14,"author":{"gitId":"czhiruo"},"content":" */","lastModifiedDate":"2023-10-31"},{"lineNumber":15,"author":{"gitId":"czhiruo"},"content":"public class InterviewDeleteCommandParser implements Parser\u003cInterviewDeleteCommand\u003e {","lastModifiedDate":"2023-10-31"},{"lineNumber":16,"author":{"gitId":"czhiruo"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":17,"author":{"gitId":"czhiruo"},"content":"     * Parses the given {@code String} of arguments in the context of the InterviewDeleteCommand","lastModifiedDate":"2023-10-31"},{"lineNumber":18,"author":{"gitId":"czhiruo"},"content":"     * and returns a InterviewDeleteCommand object for execution.","lastModifiedDate":"2023-10-31"},{"lineNumber":19,"author":{"gitId":"czhiruo"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-31"},{"lineNumber":20,"author":{"gitId":"czhiruo"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":21,"author":{"gitId":"czhiruo"},"content":"    public InterviewDeleteCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-31"},{"lineNumber":22,"author":{"gitId":"czhiruo"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":23,"author":{"gitId":"czhiruo"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-10-31"},{"lineNumber":24,"author":{"gitId":"czhiruo"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_INTERVIEW_DELETE);","lastModifiedDate":"2023-10-31"},{"lineNumber":25,"author":{"gitId":"czhiruo"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":26,"author":{"gitId":"czhiruo"},"content":"        Index jobIndex;","lastModifiedDate":"2023-10-31"},{"lineNumber":27,"author":{"gitId":"czhiruo"},"content":"        Index interviewIndex;","lastModifiedDate":"2023-10-31"},{"lineNumber":28,"author":{"gitId":"czhiruo"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":29,"author":{"gitId":"czhiruo"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_INTERVIEW_DELETE)) {","lastModifiedDate":"2023-10-31"},{"lineNumber":30,"author":{"gitId":"czhiruo"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-10-31"},{"lineNumber":31,"author":{"gitId":"czhiruo"},"content":"                    InterviewDeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-31"},{"lineNumber":32,"author":{"gitId":"czhiruo"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":33,"author":{"gitId":"czhiruo"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":34,"author":{"gitId":"czhiruo"},"content":"        try {","lastModifiedDate":"2023-10-31"},{"lineNumber":35,"author":{"gitId":"czhiruo"},"content":"            interviewIndex \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2023-10-31"},{"lineNumber":36,"author":{"gitId":"czhiruo"},"content":"            jobIndex \u003d ParserUtil.parseIndex(argMultimap.getValue(PREFIX_INTERVIEW_DELETE).get());","lastModifiedDate":"2023-10-31"},{"lineNumber":37,"author":{"gitId":"czhiruo"},"content":"            return new InterviewDeleteCommand(jobIndex, interviewIndex);","lastModifiedDate":"2023-10-31"},{"lineNumber":38,"author":{"gitId":"czhiruo"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-10-31"},{"lineNumber":39,"author":{"gitId":"czhiruo"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-10-31"},{"lineNumber":40,"author":{"gitId":"czhiruo"},"content":"                    InterviewDeleteCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-10-31"},{"lineNumber":41,"author":{"gitId":"czhiruo"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":42,"author":{"gitId":"czhiruo"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":43,"author":{"gitId":"czhiruo"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":44,"author":{"gitId":"czhiruo"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":45,"author":{"gitId":"czhiruo"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2023-10-31"},{"lineNumber":46,"author":{"gitId":"czhiruo"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2023-10-31"},{"lineNumber":47,"author":{"gitId":"czhiruo"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":48,"author":{"gitId":"czhiruo"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap,","lastModifiedDate":"2023-10-31"},{"lineNumber":49,"author":{"gitId":"czhiruo"},"content":"                                              Prefix... prefixes) {","lastModifiedDate":"2023-10-31"},{"lineNumber":50,"author":{"gitId":"czhiruo"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-10-31"},{"lineNumber":51,"author":{"gitId":"czhiruo"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":52,"author":{"gitId":"czhiruo"},"content":"}","lastModifiedDate":"2023-10-31"}],"authorContributionMap":{"czhiruo":52}},{"path":"src/main/java/seedu/application/logic/parser/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"evanyan13"},"content":"package seedu.application.logic.parser;","lastModifiedDate":"2023-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":3,"author":{"gitId":"evanyan13"},"content":"import seedu.application.logic.commands.Command;","lastModifiedDate":"2023-10-10"},{"lineNumber":4,"author":{"gitId":"evanyan13"},"content":"import seedu.application.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Parser that is able to parse user input into a {@code Command} of type {@code T}.","lastModifiedDate":"2017-07-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public interface Parser\u003cT extends Command\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a command and returns it.","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * @throws ParseException if {@code userInput} does not conform the expected format","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    T parse(String userInput) throws ParseException;","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-06"}],"authorContributionMap":{"evanyan13":3,"-":13}},{"path":"src/main/java/seedu/application/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"evanyan13"},"content":"package seedu.application.logic.parser;","lastModifiedDate":"2023-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"evanyan13"},"content":"import seedu.application.commons.core.index.Index;","lastModifiedDate":"2023-10-10"},{"lineNumber":6,"author":{"gitId":"evanyan13"},"content":"import seedu.application.commons.util.StringUtil;","lastModifiedDate":"2023-10-10"},{"lineNumber":7,"author":{"gitId":"peiran18"},"content":"import seedu.application.logic.commands.InterviewCommand;","lastModifiedDate":"2023-10-31"},{"lineNumber":8,"author":{"gitId":"evanyan13"},"content":"import seedu.application.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-10"},{"lineNumber":9,"author":{"gitId":"evanyan13"},"content":"import seedu.application.model.job.Company;","lastModifiedDate":"2023-10-10"},{"lineNumber":10,"author":{"gitId":"evanyan13"},"content":"import seedu.application.model.job.Deadline;","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"migfoo02"},"content":"import seedu.application.model.job.Industry;","lastModifiedDate":"2023-10-22"},{"lineNumber":12,"author":{"gitId":"migfoo02"},"content":"import seedu.application.model.job.JobType;","lastModifiedDate":"2023-10-20"},{"lineNumber":13,"author":{"gitId":"evanyan13"},"content":"import seedu.application.model.job.Role;","lastModifiedDate":"2023-10-10"},{"lineNumber":14,"author":{"gitId":"peiran18"},"content":"import seedu.application.model.job.Status;","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"peiran18"},"content":"import seedu.application.model.job.interview.InterviewAddress;","lastModifiedDate":"2023-10-30"},{"lineNumber":16,"author":{"gitId":"peiran18"},"content":"import seedu.application.model.job.interview.InterviewDateTime;","lastModifiedDate":"2023-10-30"},{"lineNumber":17,"author":{"gitId":"peiran18"},"content":"import seedu.application.model.job.interview.InterviewType;","lastModifiedDate":"2023-10-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":29,"author":{"gitId":"evanyan13"},"content":"     *","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":41,"author":{"gitId":"JeremyYong128"},"content":"     * Parses a {@code String role} into a {@code Role}.","lastModifiedDate":"2023-10-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":44,"author":{"gitId":"JeremyYong128"},"content":"     * @throws ParseException if the given {@code role} is invalid.","lastModifiedDate":"2023-10-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":46,"author":{"gitId":"JeremyYong128"},"content":"    public static Role parseRole(String role) throws ParseException {","lastModifiedDate":"2023-10-04"},{"lineNumber":47,"author":{"gitId":"JeremyYong128"},"content":"        requireNonNull(role);","lastModifiedDate":"2023-10-04"},{"lineNumber":48,"author":{"gitId":"JeremyYong128"},"content":"        String trimmedRole \u003d role.trim();","lastModifiedDate":"2023-10-04"},{"lineNumber":49,"author":{"gitId":"JeremyYong128"},"content":"        if (!Role.isValidRole(trimmedRole)) {","lastModifiedDate":"2023-10-04"},{"lineNumber":50,"author":{"gitId":"JeremyYong128"},"content":"            throw new ParseException(Role.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":52,"author":{"gitId":"JeremyYong128"},"content":"        return new Role(trimmedRole);","lastModifiedDate":"2023-10-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":56,"author":{"gitId":"JeremyYong128"},"content":"     * Parses a {@code String Company} into a {@code Company}.","lastModifiedDate":"2023-10-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":59,"author":{"gitId":"JeremyYong128"},"content":"     * @throws ParseException if the given {@code company} is invalid.","lastModifiedDate":"2023-10-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":61,"author":{"gitId":"JeremyYong128"},"content":"    public static Company parseCompany(String company) throws ParseException {","lastModifiedDate":"2023-10-04"},{"lineNumber":62,"author":{"gitId":"JeremyYong128"},"content":"        requireNonNull(company);","lastModifiedDate":"2023-10-04"},{"lineNumber":63,"author":{"gitId":"JeremyYong128"},"content":"        String trimmedCompany \u003d company.trim();","lastModifiedDate":"2023-10-04"},{"lineNumber":64,"author":{"gitId":"JeremyYong128"},"content":"        if (!Company.isValidCompany(trimmedCompany)) {","lastModifiedDate":"2023-10-04"},{"lineNumber":65,"author":{"gitId":"JeremyYong128"},"content":"            throw new ParseException(Company.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":67,"author":{"gitId":"JeremyYong128"},"content":"        return new Company(trimmedCompany);","lastModifiedDate":"2023-10-04"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":70,"author":{"gitId":"evanyan13"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":71,"author":{"gitId":"evanyan13"},"content":"     * Parses a {@code String Company} into a {@code Company}.","lastModifiedDate":"2023-10-13"},{"lineNumber":72,"author":{"gitId":"evanyan13"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-10-13"},{"lineNumber":73,"author":{"gitId":"evanyan13"},"content":"     *","lastModifiedDate":"2023-10-13"},{"lineNumber":74,"author":{"gitId":"evanyan13"},"content":"     * @throws ParseException if the given {@code company} is invalid.","lastModifiedDate":"2023-10-13"},{"lineNumber":75,"author":{"gitId":"evanyan13"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":76,"author":{"gitId":"evanyan13"},"content":"    public static Deadline parseDeadline(String deadline) throws ParseException {","lastModifiedDate":"2023-10-13"},{"lineNumber":77,"author":{"gitId":"evanyan13"},"content":"        requireNonNull(deadline);","lastModifiedDate":"2023-10-13"},{"lineNumber":78,"author":{"gitId":"evanyan13"},"content":"        String trimmedDeadline \u003d deadline.trim();","lastModifiedDate":"2023-10-13"},{"lineNumber":79,"author":{"gitId":"evanyan13"},"content":"        if (!Deadline.isValidDeadline(trimmedDeadline)) {","lastModifiedDate":"2023-10-13"},{"lineNumber":80,"author":{"gitId":"evanyan13"},"content":"            throw new ParseException(Deadline.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-13"},{"lineNumber":81,"author":{"gitId":"evanyan13"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":82,"author":{"gitId":"evanyan13"},"content":"        return new Deadline(trimmedDeadline);","lastModifiedDate":"2023-10-13"},{"lineNumber":83,"author":{"gitId":"evanyan13"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":84,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":85,"author":{"gitId":"peiran18"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":86,"author":{"gitId":"peiran18"},"content":"     * Parses a {@code String Status} into a {@code Status}.","lastModifiedDate":"2023-10-15"},{"lineNumber":87,"author":{"gitId":"peiran18"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-10-15"},{"lineNumber":88,"author":{"gitId":"peiran18"},"content":"     *","lastModifiedDate":"2023-10-15"},{"lineNumber":89,"author":{"gitId":"peiran18"},"content":"     * @throws ParseException if the given {@code status} is invalid.","lastModifiedDate":"2023-10-15"},{"lineNumber":90,"author":{"gitId":"peiran18"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":91,"author":{"gitId":"peiran18"},"content":"    public static Status parseStatus(String status) throws ParseException {","lastModifiedDate":"2023-10-15"},{"lineNumber":92,"author":{"gitId":"peiran18"},"content":"        requireNonNull(status);","lastModifiedDate":"2023-10-15"},{"lineNumber":93,"author":{"gitId":"peiran18"},"content":"        String trimmedStatus \u003d status.trim();","lastModifiedDate":"2023-10-15"},{"lineNumber":94,"author":{"gitId":"peiran18"},"content":"        if (!Status.isValidStatus(trimmedStatus)) {","lastModifiedDate":"2023-10-15"},{"lineNumber":95,"author":{"gitId":"peiran18"},"content":"            throw new ParseException(Status.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-15"},{"lineNumber":96,"author":{"gitId":"peiran18"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":97,"author":{"gitId":"peiran18"},"content":"        return new Status(trimmedStatus);","lastModifiedDate":"2023-10-15"},{"lineNumber":98,"author":{"gitId":"peiran18"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":99,"author":{"gitId":"peiran18"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":100,"author":{"gitId":"migfoo02"},"content":"    /**","lastModifiedDate":"2023-10-20"},{"lineNumber":101,"author":{"gitId":"migfoo02"},"content":"     * Parses a {@code String JobType} into a {@code JobType}.","lastModifiedDate":"2023-10-20"},{"lineNumber":102,"author":{"gitId":"migfoo02"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-10-20"},{"lineNumber":103,"author":{"gitId":"migfoo02"},"content":"     *","lastModifiedDate":"2023-10-20"},{"lineNumber":104,"author":{"gitId":"migfoo02"},"content":"     * @throws ParseException if the given {@code jobType} is invalid.","lastModifiedDate":"2023-10-20"},{"lineNumber":105,"author":{"gitId":"migfoo02"},"content":"     */","lastModifiedDate":"2023-10-20"},{"lineNumber":106,"author":{"gitId":"migfoo02"},"content":"    public static JobType parseJobType(String jobType) throws ParseException {","lastModifiedDate":"2023-10-20"},{"lineNumber":107,"author":{"gitId":"migfoo02"},"content":"        requireNonNull(jobType);","lastModifiedDate":"2023-10-20"},{"lineNumber":108,"author":{"gitId":"migfoo02"},"content":"        String trimmedJobType \u003d jobType.trim();","lastModifiedDate":"2023-10-20"},{"lineNumber":109,"author":{"gitId":"migfoo02"},"content":"        if (!JobType.isValidJobType(trimmedJobType)) {","lastModifiedDate":"2023-10-20"},{"lineNumber":110,"author":{"gitId":"migfoo02"},"content":"            throw new ParseException(JobType.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-20"},{"lineNumber":111,"author":{"gitId":"migfoo02"},"content":"        }","lastModifiedDate":"2023-10-20"},{"lineNumber":112,"author":{"gitId":"migfoo02"},"content":"        return new JobType(trimmedJobType);","lastModifiedDate":"2023-10-20"},{"lineNumber":113,"author":{"gitId":"migfoo02"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":114,"author":{"gitId":"migfoo02"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":115,"author":{"gitId":"czhiruo"},"content":"    /**","lastModifiedDate":"2023-10-20"},{"lineNumber":116,"author":{"gitId":"czhiruo"},"content":"     * Parses a {@code String Industry} into a {@code Industry}.","lastModifiedDate":"2023-10-20"},{"lineNumber":117,"author":{"gitId":"czhiruo"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-10-20"},{"lineNumber":118,"author":{"gitId":"czhiruo"},"content":"     *","lastModifiedDate":"2023-10-20"},{"lineNumber":119,"author":{"gitId":"czhiruo"},"content":"     * @throws ParseException if the given {@code industry} is invalid.","lastModifiedDate":"2023-10-20"},{"lineNumber":120,"author":{"gitId":"czhiruo"},"content":"     */","lastModifiedDate":"2023-10-20"},{"lineNumber":121,"author":{"gitId":"czhiruo"},"content":"    public static Industry parseIndustry(String industry) throws ParseException {","lastModifiedDate":"2023-10-20"},{"lineNumber":122,"author":{"gitId":"czhiruo"},"content":"        requireNonNull(industry);","lastModifiedDate":"2023-10-20"},{"lineNumber":123,"author":{"gitId":"czhiruo"},"content":"        String trimmedIndustry \u003d industry.trim();","lastModifiedDate":"2023-10-20"},{"lineNumber":124,"author":{"gitId":"czhiruo"},"content":"        if (!Industry.isValidIndustry(trimmedIndustry)) {","lastModifiedDate":"2023-10-20"},{"lineNumber":125,"author":{"gitId":"czhiruo"},"content":"            throw new ParseException(Industry.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-20"},{"lineNumber":126,"author":{"gitId":"czhiruo"},"content":"        }","lastModifiedDate":"2023-10-20"},{"lineNumber":127,"author":{"gitId":"czhiruo"},"content":"        return new Industry(trimmedIndustry);","lastModifiedDate":"2023-10-20"},{"lineNumber":128,"author":{"gitId":"czhiruo"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":129,"author":{"gitId":"czhiruo"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":130,"author":{"gitId":"peiran18"},"content":"    /**","lastModifiedDate":"2023-10-30"},{"lineNumber":131,"author":{"gitId":"peiran18"},"content":"     * Parses a {@code String InterviewType} into a {@code InterviewType}.","lastModifiedDate":"2023-10-30"},{"lineNumber":132,"author":{"gitId":"peiran18"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-10-30"},{"lineNumber":133,"author":{"gitId":"peiran18"},"content":"     *","lastModifiedDate":"2023-10-30"},{"lineNumber":134,"author":{"gitId":"peiran18"},"content":"     * @throws ParseException if the given {@code interviewType} is invalid.","lastModifiedDate":"2023-10-30"},{"lineNumber":135,"author":{"gitId":"peiran18"},"content":"     */","lastModifiedDate":"2023-10-30"},{"lineNumber":136,"author":{"gitId":"peiran18"},"content":"    public static InterviewType parseInterviewType(String interviewType) throws ParseException {","lastModifiedDate":"2023-10-30"},{"lineNumber":137,"author":{"gitId":"peiran18"},"content":"        requireNonNull(interviewType);","lastModifiedDate":"2023-10-30"},{"lineNumber":138,"author":{"gitId":"peiran18"},"content":"        String trimmedInterviewType \u003d interviewType.trim();","lastModifiedDate":"2023-10-30"},{"lineNumber":139,"author":{"gitId":"peiran18"},"content":"        if (!InterviewType.isValidInterviewType(trimmedInterviewType)) {","lastModifiedDate":"2023-10-30"},{"lineNumber":140,"author":{"gitId":"peiran18"},"content":"            throw new ParseException(InterviewType.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-30"},{"lineNumber":141,"author":{"gitId":"peiran18"},"content":"        }","lastModifiedDate":"2023-10-30"},{"lineNumber":142,"author":{"gitId":"peiran18"},"content":"        return new InterviewType(trimmedInterviewType);","lastModifiedDate":"2023-10-30"},{"lineNumber":143,"author":{"gitId":"peiran18"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":144,"author":{"gitId":"peiran18"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":145,"author":{"gitId":"peiran18"},"content":"    /**","lastModifiedDate":"2023-10-30"},{"lineNumber":146,"author":{"gitId":"peiran18"},"content":"     * Parses a {@code String InterviewDateTime} into a {@code InterviewDateTime}.","lastModifiedDate":"2023-10-30"},{"lineNumber":147,"author":{"gitId":"peiran18"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-10-30"},{"lineNumber":148,"author":{"gitId":"peiran18"},"content":"     *","lastModifiedDate":"2023-10-30"},{"lineNumber":149,"author":{"gitId":"peiran18"},"content":"     * @throws ParseException if the given {@code interviewDateTime} is invalid.","lastModifiedDate":"2023-10-30"},{"lineNumber":150,"author":{"gitId":"peiran18"},"content":"     */","lastModifiedDate":"2023-10-30"},{"lineNumber":151,"author":{"gitId":"peiran18"},"content":"    public static InterviewDateTime parseInterviewDateTime(String interviewDateTime) throws ParseException {","lastModifiedDate":"2023-10-30"},{"lineNumber":152,"author":{"gitId":"peiran18"},"content":"        requireNonNull(interviewDateTime);","lastModifiedDate":"2023-10-30"},{"lineNumber":153,"author":{"gitId":"peiran18"},"content":"        String trimmedInterviewDateTime \u003d interviewDateTime.trim();","lastModifiedDate":"2023-10-30"},{"lineNumber":154,"author":{"gitId":"peiran18"},"content":"        if (!InterviewDateTime.isValidInterviewDateTime(trimmedInterviewDateTime)) {","lastModifiedDate":"2023-10-30"},{"lineNumber":155,"author":{"gitId":"peiran18"},"content":"            throw new ParseException(InterviewDateTime.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-30"},{"lineNumber":156,"author":{"gitId":"peiran18"},"content":"        }","lastModifiedDate":"2023-10-30"},{"lineNumber":157,"author":{"gitId":"peiran18"},"content":"        return new InterviewDateTime(trimmedInterviewDateTime);","lastModifiedDate":"2023-10-30"},{"lineNumber":158,"author":{"gitId":"peiran18"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":159,"author":{"gitId":"peiran18"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":160,"author":{"gitId":"peiran18"},"content":"    /**","lastModifiedDate":"2023-10-30"},{"lineNumber":161,"author":{"gitId":"peiran18"},"content":"     * Parses a {@code String InterviewAddress} into a {@code InterviewAddress}.","lastModifiedDate":"2023-10-31"},{"lineNumber":162,"author":{"gitId":"peiran18"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-10-30"},{"lineNumber":163,"author":{"gitId":"peiran18"},"content":"     *","lastModifiedDate":"2023-10-30"},{"lineNumber":164,"author":{"gitId":"peiran18"},"content":"     * @throws ParseException if the given {@code interviewAddress} is invalid.","lastModifiedDate":"2023-10-31"},{"lineNumber":165,"author":{"gitId":"peiran18"},"content":"     */","lastModifiedDate":"2023-10-30"},{"lineNumber":166,"author":{"gitId":"peiran18"},"content":"    public static InterviewAddress parseInterviewAddress(String interviewAddress) throws ParseException {","lastModifiedDate":"2023-10-30"},{"lineNumber":167,"author":{"gitId":"peiran18"},"content":"        requireNonNull(interviewAddress);","lastModifiedDate":"2023-10-30"},{"lineNumber":168,"author":{"gitId":"peiran18"},"content":"        String trimmedInterviewAddress \u003d interviewAddress.trim();","lastModifiedDate":"2023-10-30"},{"lineNumber":169,"author":{"gitId":"peiran18"},"content":"        if (!InterviewAddress.isValidInterviewAddress(trimmedInterviewAddress)) {","lastModifiedDate":"2023-10-30"},{"lineNumber":170,"author":{"gitId":"peiran18"},"content":"            throw new ParseException(InterviewAddress.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-30"},{"lineNumber":171,"author":{"gitId":"peiran18"},"content":"        }","lastModifiedDate":"2023-10-30"},{"lineNumber":172,"author":{"gitId":"peiran18"},"content":"        return new InterviewAddress(trimmedInterviewAddress);","lastModifiedDate":"2023-10-30"},{"lineNumber":173,"author":{"gitId":"peiran18"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":174,"author":{"gitId":"peiran18"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":175,"author":{"gitId":"peiran18"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":176,"author":{"gitId":"peiran18"},"content":"     * Parses a {@code String interviewPreamble} into an array of strings.","lastModifiedDate":"2023-10-31"},{"lineNumber":177,"author":{"gitId":"peiran18"},"content":"     * Leading and trailing whitespaces will be trimmed, and the string will be split by spaces.","lastModifiedDate":"2023-10-31"},{"lineNumber":178,"author":{"gitId":"peiran18"},"content":"     *","lastModifiedDate":"2023-10-31"},{"lineNumber":179,"author":{"gitId":"peiran18"},"content":"     * @throws ParseException if the given {@code interviewPreamble} is invalid or cannot be parsed.","lastModifiedDate":"2023-10-31"},{"lineNumber":180,"author":{"gitId":"peiran18"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":181,"author":{"gitId":"peiran18"},"content":"    public static String[] parseInterviewPreamble(String interviewPreamble) throws ParseException {","lastModifiedDate":"2023-10-31"},{"lineNumber":182,"author":{"gitId":"peiran18"},"content":"        requireNonNull(interviewPreamble);","lastModifiedDate":"2023-10-31"},{"lineNumber":183,"author":{"gitId":"peiran18"},"content":"        String[] trimmedInterviewPreamble \u003d interviewPreamble.trim().split(\" \");","lastModifiedDate":"2023-10-31"},{"lineNumber":184,"author":{"gitId":"peiran18"},"content":"        if (trimmedInterviewPreamble.length !\u003d 2) {","lastModifiedDate":"2023-10-31"},{"lineNumber":185,"author":{"gitId":"peiran18"},"content":"            throw new ParseException(InterviewCommand.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-31"},{"lineNumber":186,"author":{"gitId":"peiran18"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":187,"author":{"gitId":"peiran18"},"content":"        return trimmedInterviewPreamble;","lastModifiedDate":"2023-10-31"},{"lineNumber":188,"author":{"gitId":"peiran18"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":189,"author":{"gitId":"peiran18"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":190,"author":{"gitId":"peiran18"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":191,"author":{"gitId":"peiran18"},"content":"     * Parses a {@code String subCommandWord} into a String.","lastModifiedDate":"2023-10-31"},{"lineNumber":192,"author":{"gitId":"peiran18"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-10-31"},{"lineNumber":193,"author":{"gitId":"peiran18"},"content":"     *","lastModifiedDate":"2023-10-31"},{"lineNumber":194,"author":{"gitId":"peiran18"},"content":"     * @throws ParseException if the given {@code subCommandWord} is not a valid sub-command.","lastModifiedDate":"2023-10-31"},{"lineNumber":195,"author":{"gitId":"peiran18"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":196,"author":{"gitId":"peiran18"},"content":"    public static String parseSubCommandWord(String subCommandWord) throws ParseException {","lastModifiedDate":"2023-10-31"},{"lineNumber":197,"author":{"gitId":"peiran18"},"content":"        requireNonNull(subCommandWord);","lastModifiedDate":"2023-10-31"},{"lineNumber":198,"author":{"gitId":"peiran18"},"content":"        String trimmedSubCommandWord \u003d subCommandWord.trim();","lastModifiedDate":"2023-10-31"},{"lineNumber":199,"author":{"gitId":"peiran18"},"content":"        if (!InterviewCommand.isValidSubCommandWord(trimmedSubCommandWord)) {","lastModifiedDate":"2023-10-31"},{"lineNumber":200,"author":{"gitId":"peiran18"},"content":"            throw new ParseException(InterviewCommand.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-31"},{"lineNumber":201,"author":{"gitId":"peiran18"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":202,"author":{"gitId":"peiran18"},"content":"        return trimmedSubCommandWord;","lastModifiedDate":"2023-10-31"},{"lineNumber":203,"author":{"gitId":"peiran18"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":204,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"czhiruo":15,"evanyan13":23,"peiran18":94,"-":39,"JeremyYong128":16,"migfoo02":17}},{"path":"src/main/java/seedu/application/logic/parser/Prefix.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"evanyan13"},"content":"package seedu.application.logic.parser;","lastModifiedDate":"2023-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * A prefix that marks the beginning of an argument in an arguments string.","lastModifiedDate":"2017-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" * E.g. \u0027t/\u0027 in \u0027add James t/ friend\u0027.","lastModifiedDate":"2017-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class Prefix {","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    private final String prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public Prefix(String prefix) {","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        this.prefix \u003d prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public String getPrefix() {","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        return prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2017-05-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        return getPrefix();","lastModifiedDate":"2017-05-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        return prefix \u003d\u003d null ? 0 : prefix.hashCode();","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-03-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-07-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        if (!(other instanceof Prefix)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        Prefix otherPrefix \u003d (Prefix) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return prefix.equals(otherPrefix.prefix);","lastModifiedDate":"2023-07-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-11"}],"authorContributionMap":{"evanyan13":1,"-":41}},{"path":"src/main/java/seedu/application/logic/parser/SortCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JeremyYong128"},"content":"package seedu.application.logic.parser;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":3,"author":{"gitId":"JeremyYong128"},"content":"import static seedu.application.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-20"},{"lineNumber":4,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":5,"author":{"gitId":"JeremyYong128"},"content":"import seedu.application.logic.commands.SortCommand;","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"JeremyYong128"},"content":"import seedu.application.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-20"},{"lineNumber":7,"author":{"gitId":"JeremyYong128"},"content":"import seedu.application.model.job.FieldComparator;","lastModifiedDate":"2023-10-20"},{"lineNumber":8,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":9,"author":{"gitId":"JeremyYong128"},"content":"/**","lastModifiedDate":"2023-10-20"},{"lineNumber":10,"author":{"gitId":"JeremyYong128"},"content":" * Parses input arguments and creates a new ListCommand object","lastModifiedDate":"2023-10-20"},{"lineNumber":11,"author":{"gitId":"JeremyYong128"},"content":" */","lastModifiedDate":"2023-10-20"},{"lineNumber":12,"author":{"gitId":"JeremyYong128"},"content":"public class SortCommandParser implements Parser\u003cSortCommand\u003e {","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":14,"author":{"gitId":"JeremyYong128"},"content":"    /**","lastModifiedDate":"2023-10-20"},{"lineNumber":15,"author":{"gitId":"JeremyYong128"},"content":"     * Parses the given {@code String} of arguments in the context of the ListCommand","lastModifiedDate":"2023-10-20"},{"lineNumber":16,"author":{"gitId":"JeremyYong128"},"content":"     * and returns a ListCommand object for execution.","lastModifiedDate":"2023-10-20"},{"lineNumber":17,"author":{"gitId":"JeremyYong128"},"content":"     * @throws ParseException if the user input does not conform to the expected format.","lastModifiedDate":"2023-10-20"},{"lineNumber":18,"author":{"gitId":"JeremyYong128"},"content":"     */","lastModifiedDate":"2023-10-20"},{"lineNumber":19,"author":{"gitId":"JeremyYong128"},"content":"    public SortCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"JeremyYong128"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2023-10-20"},{"lineNumber":21,"author":{"gitId":"JeremyYong128"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2023-10-20"},{"lineNumber":22,"author":{"gitId":"JeremyYong128"},"content":"            throw new ParseException(","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"JeremyYong128"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, SortCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"JeremyYong128"},"content":"        }","lastModifiedDate":"2023-10-20"},{"lineNumber":25,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":26,"author":{"gitId":"JeremyYong128"},"content":"        String[] splitArgs \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2023-10-20"},{"lineNumber":27,"author":{"gitId":"JeremyYong128"},"content":"        if (splitArgs.length \u003e 1) {","lastModifiedDate":"2023-10-20"},{"lineNumber":28,"author":{"gitId":"JeremyYong128"},"content":"            throw new ParseException(","lastModifiedDate":"2023-10-20"},{"lineNumber":29,"author":{"gitId":"JeremyYong128"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, SortCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-26"},{"lineNumber":30,"author":{"gitId":"JeremyYong128"},"content":"        }","lastModifiedDate":"2023-10-20"},{"lineNumber":31,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":32,"author":{"gitId":"JeremyYong128"},"content":"        String specifier \u003d splitArgs[0];","lastModifiedDate":"2023-10-20"},{"lineNumber":33,"author":{"gitId":"JeremyYong128"},"content":"        if (!(FieldComparator.isValidPrefix(specifier))) {","lastModifiedDate":"2023-10-27"},{"lineNumber":34,"author":{"gitId":"JeremyYong128"},"content":"            throw new ParseException(","lastModifiedDate":"2023-10-20"},{"lineNumber":35,"author":{"gitId":"JeremyYong128"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, SortCommand.MESSAGE_INVALID_SPECIFIER));","lastModifiedDate":"2023-10-26"},{"lineNumber":36,"author":{"gitId":"JeremyYong128"},"content":"        }","lastModifiedDate":"2023-10-20"},{"lineNumber":37,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":38,"author":{"gitId":"JeremyYong128"},"content":"        return new SortCommand(new FieldComparator(new Prefix(specifier)));","lastModifiedDate":"2023-10-27"},{"lineNumber":39,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":40,"author":{"gitId":"JeremyYong128"},"content":"}","lastModifiedDate":"2023-10-20"}],"authorContributionMap":{"JeremyYong128":40}},{"path":"src/main/java/seedu/application/logic/parser/exceptions/ParseException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"evanyan13"},"content":"package seedu.application.logic.parser.exceptions;","lastModifiedDate":"2023-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":3,"author":{"gitId":"evanyan13"},"content":"import seedu.application.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-10-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Represents a parse error encountered by a parser.","lastModifiedDate":"2017-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ParseException extends IllegalValueException {","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public ParseException(String message) {","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2017-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public ParseException(String message, Throwable cause) {","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-11"}],"authorContributionMap":{"evanyan13":2,"-":15}},{"path":"src/main/java/seedu/application/model/ApplicationBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"evanyan13"},"content":"package seedu.application.model;","lastModifiedDate":"2023-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"evanyan13"},"content":"import seedu.application.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-10"},{"lineNumber":9,"author":{"gitId":"JeremyYong128"},"content":"import seedu.application.model.job.FieldComparator;","lastModifiedDate":"2023-10-20"},{"lineNumber":10,"author":{"gitId":"evanyan13"},"content":"import seedu.application.model.job.Job;","lastModifiedDate":"2023-10-10"},{"lineNumber":11,"author":{"gitId":"evanyan13"},"content":"import seedu.application.model.job.UniqueJobList;","lastModifiedDate":"2023-10-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"evanyan13"},"content":" * Wraps all data at the application-book level","lastModifiedDate":"2023-10-10"},{"lineNumber":15,"author":{"gitId":"JeremyYong128"},"content":" * Duplicates are not allowed (by .isSameJob comparison)","lastModifiedDate":"2023-10-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"evanyan13"},"content":"public class ApplicationBook implements ReadOnlyApplicationBook {","lastModifiedDate":"2023-10-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"JeremyYong128"},"content":"    private final UniqueJobList jobs;","lastModifiedDate":"2023-10-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"JeremyYong128"},"content":"        jobs \u003d new UniqueJobList();","lastModifiedDate":"2023-10-04"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"evanyan13"},"content":"    public ApplicationBook() {}","lastModifiedDate":"2023-10-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"evanyan13"},"content":"     * Creates an ApplicationBook using the Jobs in the {@code toBeCopied}","lastModifiedDate":"2023-10-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"evanyan13"},"content":"    public ApplicationBook(ReadOnlyApplicationBook toBeCopied) {","lastModifiedDate":"2023-10-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":45,"author":{"gitId":"JeremyYong128"},"content":"     * Replaces the contents of the job list with {@code jobs}.","lastModifiedDate":"2023-10-04"},{"lineNumber":46,"author":{"gitId":"JeremyYong128"},"content":"     * {@code jobs} must not contain duplicate jobs.","lastModifiedDate":"2023-10-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":48,"author":{"gitId":"JeremyYong128"},"content":"    public void setJobs(List\u003cJob\u003e jobs) {","lastModifiedDate":"2023-10-04"},{"lineNumber":49,"author":{"gitId":"JeremyYong128"},"content":"        this.jobs.setJobs(jobs);","lastModifiedDate":"2023-10-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"evanyan13"},"content":"     * Resets the existing data of this {@code ApplicationBook} with {@code newData}.","lastModifiedDate":"2023-10-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":55,"author":{"gitId":"evanyan13"},"content":"    public void resetData(ReadOnlyApplicationBook newData) {","lastModifiedDate":"2023-10-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":58,"author":{"gitId":"JeremyYong128"},"content":"        setJobs(newData.getJobList());","lastModifiedDate":"2023-10-04"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"JeremyYong128"},"content":"    //// job-level operations","lastModifiedDate":"2023-10-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"evanyan13"},"content":"     * Returns true if a job with the same identity as {@code job} exists in the application book.","lastModifiedDate":"2023-10-10"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"JeremyYong128"},"content":"    public boolean hasJob(Job job) {","lastModifiedDate":"2023-10-04"},{"lineNumber":67,"author":{"gitId":"JeremyYong128"},"content":"        requireNonNull(job);","lastModifiedDate":"2023-10-04"},{"lineNumber":68,"author":{"gitId":"JeremyYong128"},"content":"        return jobs.contains(job);","lastModifiedDate":"2023-10-04"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"evanyan13"},"content":"     * Adds a job to the application book.","lastModifiedDate":"2023-10-10"},{"lineNumber":73,"author":{"gitId":"evanyan13"},"content":"     * The job must not already exist in the application book.","lastModifiedDate":"2023-10-10"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":75,"author":{"gitId":"JeremyYong128"},"content":"    public void addJob(Job j) {","lastModifiedDate":"2023-10-04"},{"lineNumber":76,"author":{"gitId":"JeremyYong128"},"content":"        jobs.add(j);","lastModifiedDate":"2023-10-04"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":80,"author":{"gitId":"JeremyYong128"},"content":"     * Replaces the given job {@code target} in the list with {@code editedJob}.","lastModifiedDate":"2023-10-04"},{"lineNumber":81,"author":{"gitId":"evanyan13"},"content":"     * {@code target} must exist in the application book.","lastModifiedDate":"2023-10-10"},{"lineNumber":82,"author":{"gitId":"evanyan13"},"content":"     * The job identity of {@code editedJob} must not be the same as another existing job in the application book.","lastModifiedDate":"2023-10-10"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":84,"author":{"gitId":"JeremyYong128"},"content":"    public void setJob(Job target, Job editedJob) {","lastModifiedDate":"2023-10-04"},{"lineNumber":85,"author":{"gitId":"JeremyYong128"},"content":"        requireNonNull(editedJob);","lastModifiedDate":"2023-10-04"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":87,"author":{"gitId":"JeremyYong128"},"content":"        jobs.setJob(target, editedJob);","lastModifiedDate":"2023-10-04"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":91,"author":{"gitId":"evanyan13"},"content":"     * Removes {@code key} from this {@code ApplicationBook}.","lastModifiedDate":"2023-10-10"},{"lineNumber":92,"author":{"gitId":"evanyan13"},"content":"     * {@code key} must exist in the application book.","lastModifiedDate":"2023-10-10"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":94,"author":{"gitId":"JeremyYong128"},"content":"    public void removeJob(Job key) {","lastModifiedDate":"2023-10-04"},{"lineNumber":95,"author":{"gitId":"JeremyYong128"},"content":"        jobs.remove(key);","lastModifiedDate":"2023-10-04"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":98,"author":{"gitId":"JeremyYong128"},"content":"    /**","lastModifiedDate":"2023-10-20"},{"lineNumber":99,"author":{"gitId":"JeremyYong128"},"content":"     * Sorts the jobs in the application book based on the comparator provided.","lastModifiedDate":"2023-10-20"},{"lineNumber":100,"author":{"gitId":"JeremyYong128"},"content":"     * @param comparator The comparator used to compare 2 jobs.","lastModifiedDate":"2023-10-20"},{"lineNumber":101,"author":{"gitId":"JeremyYong128"},"content":"     */","lastModifiedDate":"2023-10-20"},{"lineNumber":102,"author":{"gitId":"JeremyYong128"},"content":"    public void sortJobs(FieldComparator comparator) {","lastModifiedDate":"2023-10-20"},{"lineNumber":103,"author":{"gitId":"JeremyYong128"},"content":"        jobs.sortJobs(comparator);","lastModifiedDate":"2023-10-20"},{"lineNumber":104,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":105,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":111,"author":{"gitId":"JeremyYong128"},"content":"                .add(\"jobs\", jobs)","lastModifiedDate":"2023-10-04"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"JeremyYong128"},"content":"    public ObservableList\u003cJob\u003e getJobList() {","lastModifiedDate":"2023-10-04"},{"lineNumber":117,"author":{"gitId":"JeremyYong128"},"content":"        return jobs.asUnmodifiableObservableList();","lastModifiedDate":"2023-10-04"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":127,"author":{"gitId":"evanyan13"},"content":"        if (!(other instanceof ApplicationBook)) {","lastModifiedDate":"2023-10-10"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":131,"author":{"gitId":"evanyan13"},"content":"        ApplicationBook otherApplicationBook \u003d (ApplicationBook) other;","lastModifiedDate":"2023-10-10"},{"lineNumber":132,"author":{"gitId":"evanyan13"},"content":"        return jobs.equals(otherApplicationBook.jobs);","lastModifiedDate":"2023-10-10"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":137,"author":{"gitId":"JeremyYong128"},"content":"        return jobs.hashCode();","lastModifiedDate":"2023-10-04"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":139,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":140,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"evanyan13":21,"-":84,"JeremyYong128":35}},{"path":"src/main/java/seedu/application/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"evanyan13"},"content":"package seedu.application.model;","lastModifiedDate":"2023-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"evanyan13"},"content":"import seedu.application.commons.core.GuiSettings;","lastModifiedDate":"2023-10-10"},{"lineNumber":8,"author":{"gitId":"JeremyYong128"},"content":"import seedu.application.model.job.FieldComparator;","lastModifiedDate":"2023-10-20"},{"lineNumber":9,"author":{"gitId":"evanyan13"},"content":"import seedu.application.model.job.Job;","lastModifiedDate":"2023-10-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":16,"author":{"gitId":"JeremyYong128"},"content":"    Predicate\u003cJob\u003e PREDICATE_SHOW_ALL_JOBS \u003d unused -\u003e true;","lastModifiedDate":"2023-10-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"evanyan13"},"content":"     * Returns the user prefs\u0027 application book file path.","lastModifiedDate":"2023-10-10"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"evanyan13"},"content":"    Path getApplicationBookFilePath();","lastModifiedDate":"2023-10-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"evanyan13"},"content":"     * Sets the user prefs\u0027 application book file path.","lastModifiedDate":"2023-10-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"evanyan13"},"content":"    void setApplicationBookFilePath(Path applicationBookFilePath);","lastModifiedDate":"2023-10-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"evanyan13"},"content":"     * Replaces application book data with the data in {@code applicationBook}.","lastModifiedDate":"2023-10-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"evanyan13"},"content":"    void setApplicationBook(ReadOnlyApplicationBook applicationBook);","lastModifiedDate":"2023-10-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":53,"author":{"gitId":"evanyan13"},"content":"    /** Returns the ApplicationBook */","lastModifiedDate":"2023-10-10"},{"lineNumber":54,"author":{"gitId":"evanyan13"},"content":"    ReadOnlyApplicationBook getApplicationBook();","lastModifiedDate":"2023-10-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":57,"author":{"gitId":"evanyan13"},"content":"     * Returns true if a job with the same identity as {@code job} exists in the application book.","lastModifiedDate":"2023-10-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":59,"author":{"gitId":"JeremyYong128"},"content":"    boolean hasJob(Job job);","lastModifiedDate":"2023-10-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":62,"author":{"gitId":"JeremyYong128"},"content":"     * Deletes the given job.","lastModifiedDate":"2023-10-04"},{"lineNumber":63,"author":{"gitId":"evanyan13"},"content":"     * The job must exist in the application book.","lastModifiedDate":"2023-10-10"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":65,"author":{"gitId":"JeremyYong128"},"content":"    void deleteJob(Job target);","lastModifiedDate":"2023-10-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":68,"author":{"gitId":"JeremyYong128"},"content":"     * Adds the given job.","lastModifiedDate":"2023-10-04"},{"lineNumber":69,"author":{"gitId":"evanyan13"},"content":"     * {@code job} must not already exist in the application book.","lastModifiedDate":"2023-10-10"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":71,"author":{"gitId":"JeremyYong128"},"content":"    void addJob(Job job);","lastModifiedDate":"2023-10-04"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":74,"author":{"gitId":"JeremyYong128"},"content":"     * Replaces the given job {@code target} with {@code editedJob}.","lastModifiedDate":"2023-10-04"},{"lineNumber":75,"author":{"gitId":"evanyan13"},"content":"     * {@code target} must exist in the application book.","lastModifiedDate":"2023-10-10"},{"lineNumber":76,"author":{"gitId":"evanyan13"},"content":"     * The job identity of {@code editedJob} must not be the same as another existing job in the application book.","lastModifiedDate":"2023-10-10"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":78,"author":{"gitId":"JeremyYong128"},"content":"    void setJob(Job target, Job editedJob);","lastModifiedDate":"2023-10-04"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":80,"author":{"gitId":"JeremyYong128"},"content":"    /** Returns an unmodifiable view of the filtered job list */","lastModifiedDate":"2023-10-04"},{"lineNumber":81,"author":{"gitId":"JeremyYong128"},"content":"    ObservableList\u003cJob\u003e getFilteredJobList();","lastModifiedDate":"2023-10-04"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":84,"author":{"gitId":"JeremyYong128"},"content":"     * Updates the filter of the filtered job list to filter by the given {@code predicate}.","lastModifiedDate":"2023-10-04"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":87,"author":{"gitId":"JeremyYong128"},"content":"    void updateFilteredJobList(Predicate\u003cJob\u003e predicate);","lastModifiedDate":"2023-10-04"},{"lineNumber":88,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":89,"author":{"gitId":"JeremyYong128"},"content":"    /**","lastModifiedDate":"2023-10-20"},{"lineNumber":90,"author":{"gitId":"JeremyYong128"},"content":"     * Sorts the jobs in the application book based on the comparator provided.","lastModifiedDate":"2023-10-20"},{"lineNumber":91,"author":{"gitId":"JeremyYong128"},"content":"     * @param comparator The comparator used to compare 2 jobs.","lastModifiedDate":"2023-10-20"},{"lineNumber":92,"author":{"gitId":"JeremyYong128"},"content":"     */","lastModifiedDate":"2023-10-20"},{"lineNumber":93,"author":{"gitId":"JeremyYong128"},"content":"    public void sortJobs(FieldComparator comparator);","lastModifiedDate":"2023-10-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"evanyan13":16,"-":59,"JeremyYong128":19}},{"path":"src/main/java/seedu/application/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"evanyan13"},"content":"package seedu.application.model;","lastModifiedDate":"2023-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":11,"author":{"gitId":"evanyan13"},"content":"import seedu.application.commons.core.GuiSettings;","lastModifiedDate":"2023-10-10"},{"lineNumber":12,"author":{"gitId":"evanyan13"},"content":"import seedu.application.commons.core.LogsCenter;","lastModifiedDate":"2023-10-10"},{"lineNumber":13,"author":{"gitId":"evanyan13"},"content":"import seedu.application.commons.util.CollectionUtil;","lastModifiedDate":"2023-10-10"},{"lineNumber":14,"author":{"gitId":"JeremyYong128"},"content":"import seedu.application.model.job.FieldComparator;","lastModifiedDate":"2023-10-20"},{"lineNumber":15,"author":{"gitId":"evanyan13"},"content":"import seedu.application.model.job.Job;","lastModifiedDate":"2023-10-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"evanyan13"},"content":" * Represents the in-memory model of the application book data.","lastModifiedDate":"2023-10-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"evanyan13"},"content":"    private final ApplicationBook applicationBook;","lastModifiedDate":"2023-10-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"JeremyYong128"},"content":"    private final FilteredList\u003cJob\u003e filteredJobs;","lastModifiedDate":"2023-10-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"evanyan13"},"content":"     * Initializes a ModelManager with the given applicationBook and userPrefs.","lastModifiedDate":"2023-10-10"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"evanyan13"},"content":"    public ModelManager(ReadOnlyApplicationBook applicationBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2023-10-10"},{"lineNumber":31,"author":{"gitId":"evanyan13"},"content":"        CollectionUtil.requireAllNonNull(applicationBook, userPrefs);","lastModifiedDate":"2023-10-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"evanyan13"},"content":"        logger.fine(\"Initializing with application book: \" + applicationBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2023-10-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"evanyan13"},"content":"        this.applicationBook \u003d new ApplicationBook(applicationBook);","lastModifiedDate":"2023-10-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"evanyan13"},"content":"        filteredJobs \u003d new FilteredList\u003c\u003e(this.applicationBook.getJobList());","lastModifiedDate":"2023-10-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":41,"author":{"gitId":"evanyan13"},"content":"        this(new ApplicationBook(), new UserPrefs());","lastModifiedDate":"2023-10-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"evanyan13"},"content":"    public Path getApplicationBookFilePath() {","lastModifiedDate":"2023-10-10"},{"lineNumber":70,"author":{"gitId":"evanyan13"},"content":"        return userPrefs.getApplicationBookFilePath();","lastModifiedDate":"2023-10-10"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"evanyan13"},"content":"    public void setApplicationBookFilePath(Path applicationBookFilePath) {","lastModifiedDate":"2023-10-10"},{"lineNumber":75,"author":{"gitId":"evanyan13"},"content":"        requireNonNull(applicationBookFilePath);","lastModifiedDate":"2023-10-10"},{"lineNumber":76,"author":{"gitId":"evanyan13"},"content":"        userPrefs.setApplicationBookFilePath(applicationBookFilePath);","lastModifiedDate":"2023-10-10"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"evanyan13"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d ApplicationBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-10-10"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":82,"author":{"gitId":"evanyan13"},"content":"    public void setApplicationBook(ReadOnlyApplicationBook applicationBook) {","lastModifiedDate":"2023-10-10"},{"lineNumber":83,"author":{"gitId":"evanyan13"},"content":"        this.applicationBook.resetData(applicationBook);","lastModifiedDate":"2023-10-10"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":87,"author":{"gitId":"evanyan13"},"content":"    public ReadOnlyApplicationBook getApplicationBook() {","lastModifiedDate":"2023-10-10"},{"lineNumber":88,"author":{"gitId":"evanyan13"},"content":"        return applicationBook;","lastModifiedDate":"2023-10-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":92,"author":{"gitId":"JeremyYong128"},"content":"    public boolean hasJob(Job job) {","lastModifiedDate":"2023-10-04"},{"lineNumber":93,"author":{"gitId":"JeremyYong128"},"content":"        requireNonNull(job);","lastModifiedDate":"2023-10-04"},{"lineNumber":94,"author":{"gitId":"evanyan13"},"content":"        return applicationBook.hasJob(job);","lastModifiedDate":"2023-10-10"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":98,"author":{"gitId":"JeremyYong128"},"content":"    public void deleteJob(Job target) {","lastModifiedDate":"2023-10-04"},{"lineNumber":99,"author":{"gitId":"evanyan13"},"content":"        applicationBook.removeJob(target);","lastModifiedDate":"2023-10-10"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":103,"author":{"gitId":"JeremyYong128"},"content":"    public void addJob(Job job) {","lastModifiedDate":"2023-10-04"},{"lineNumber":104,"author":{"gitId":"evanyan13"},"content":"        applicationBook.addJob(job);","lastModifiedDate":"2023-10-10"},{"lineNumber":105,"author":{"gitId":"JeremyYong128"},"content":"        updateFilteredJobList(PREDICATE_SHOW_ALL_JOBS);","lastModifiedDate":"2023-10-04"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":109,"author":{"gitId":"JeremyYong128"},"content":"    public void setJob(Job target, Job editedJob) {","lastModifiedDate":"2023-10-04"},{"lineNumber":110,"author":{"gitId":"evanyan13"},"content":"        CollectionUtil.requireAllNonNull(target, editedJob);","lastModifiedDate":"2023-10-10"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":112,"author":{"gitId":"evanyan13"},"content":"        applicationBook.setJob(target, editedJob);","lastModifiedDate":"2023-10-10"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":115,"author":{"gitId":"JeremyYong128"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Job List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-10-20"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":118,"author":{"gitId":"JeremyYong128"},"content":"     * Returns an unmodifiable view of the list of {@code Job} backed by the internal list of","lastModifiedDate":"2023-10-04"},{"lineNumber":119,"author":{"gitId":"evanyan13"},"content":"     * {@code versionedApplicationBook}","lastModifiedDate":"2023-10-10"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":122,"author":{"gitId":"JeremyYong128"},"content":"    public ObservableList\u003cJob\u003e getFilteredJobList() {","lastModifiedDate":"2023-10-04"},{"lineNumber":123,"author":{"gitId":"JeremyYong128"},"content":"        return filteredJobs;","lastModifiedDate":"2023-10-04"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":127,"author":{"gitId":"JeremyYong128"},"content":"    public void updateFilteredJobList(Predicate\u003cJob\u003e predicate) {","lastModifiedDate":"2023-10-04"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":129,"author":{"gitId":"JeremyYong128"},"content":"        filteredJobs.setPredicate(predicate);","lastModifiedDate":"2023-10-04"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":132,"author":{"gitId":"JeremyYong128"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Sorted Job List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-10-20"},{"lineNumber":133,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":134,"author":{"gitId":"JeremyYong128"},"content":"    @Override","lastModifiedDate":"2023-10-20"},{"lineNumber":135,"author":{"gitId":"JeremyYong128"},"content":"    public void sortJobs(FieldComparator comparator) {","lastModifiedDate":"2023-10-20"},{"lineNumber":136,"author":{"gitId":"JeremyYong128"},"content":"        applicationBook.sortJobs(comparator);","lastModifiedDate":"2023-10-20"},{"lineNumber":137,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":138,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-07-13"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        if (!(other instanceof ModelManager)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        ModelManager otherModelManager \u003d (ModelManager) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":151,"author":{"gitId":"evanyan13"},"content":"        return applicationBook.equals(otherModelManager.applicationBook)","lastModifiedDate":"2023-10-10"},{"lineNumber":152,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(otherModelManager.userPrefs)","lastModifiedDate":"2023-07-13"},{"lineNumber":153,"author":{"gitId":"JeremyYong128"},"content":"                \u0026\u0026 filteredJobs.equals(otherModelManager.filteredJobs);","lastModifiedDate":"2023-10-04"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":156,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"evanyan13":31,"-":103,"JeremyYong128":22}},{"path":"src/main/java/seedu/application/model/ReadOnlyApplicationBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"evanyan13"},"content":"package seedu.application.model;","lastModifiedDate":"2023-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"evanyan13"},"content":"import seedu.application.model.job.Job;","lastModifiedDate":"2023-10-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"evanyan13"},"content":" * Unmodifiable view of an application book","lastModifiedDate":"2023-10-10"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"evanyan13"},"content":"public interface ReadOnlyApplicationBook {","lastModifiedDate":"2023-10-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"JeremyYong128"},"content":"     * Returns an unmodifiable view of the jobs list.","lastModifiedDate":"2023-10-04"},{"lineNumber":13,"author":{"gitId":"JeremyYong128"},"content":"     * This list will not contain any duplicate jobs.","lastModifiedDate":"2023-10-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"JeremyYong128"},"content":"    ObservableList\u003cJob\u003e getJobList();","lastModifiedDate":"2023-10-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"evanyan13":4,"-":10,"JeremyYong128":3}},{"path":"src/main/java/seedu/application/model/ReadOnlyUserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"evanyan13"},"content":"package seedu.application.model;","lastModifiedDate":"2023-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"evanyan13"},"content":"import seedu.application.commons.core.GuiSettings;","lastModifiedDate":"2023-10-10"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"evanyan13"},"content":"    Path getApplicationBookFilePath();","lastModifiedDate":"2023-10-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"evanyan13":3,"-":13}},{"path":"src/main/java/seedu/application/model/UserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"evanyan13"},"content":"package seedu.application.model;","lastModifiedDate":"2023-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"evanyan13"},"content":"import seedu.application.commons.core.GuiSettings;","lastModifiedDate":"2023-10-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents User\u0027s preferences.","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class UserPrefs implements ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"evanyan13"},"content":"    private Path applicationBookFilePath \u003d Paths.get(\"data\" , \"applicationbook.json\");","lastModifiedDate":"2023-10-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with default values.","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public UserPrefs() {}","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with the prefs in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public UserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code UserPrefs} with {@code newUserPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyUserPrefs newUserPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireNonNull(newUserPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        setGuiSettings(newUserPrefs.getGuiSettings());","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"evanyan13"},"content":"        setApplicationBookFilePath(newUserPrefs.getApplicationBookFilePath());","lastModifiedDate":"2023-10-10"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return guiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.guiSettings \u003d guiSettings;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"evanyan13"},"content":"    public Path getApplicationBookFilePath() {","lastModifiedDate":"2023-10-10"},{"lineNumber":51,"author":{"gitId":"evanyan13"},"content":"        return applicationBookFilePath;","lastModifiedDate":"2023-10-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":54,"author":{"gitId":"evanyan13"},"content":"    public void setApplicationBookFilePath(Path applicationBookFilePath) {","lastModifiedDate":"2023-10-10"},{"lineNumber":55,"author":{"gitId":"evanyan13"},"content":"        requireNonNull(applicationBookFilePath);","lastModifiedDate":"2023-10-10"},{"lineNumber":56,"author":{"gitId":"evanyan13"},"content":"        this.applicationBookFilePath \u003d applicationBookFilePath;","lastModifiedDate":"2023-10-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        if (!(other instanceof UserPrefs)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        UserPrefs otherUserPrefs \u003d (UserPrefs) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return guiSettings.equals(otherUserPrefs.guiSettings)","lastModifiedDate":"2023-07-13"},{"lineNumber":72,"author":{"gitId":"evanyan13"},"content":"                \u0026\u0026 applicationBookFilePath.equals(otherUserPrefs.applicationBookFilePath);","lastModifiedDate":"2023-10-10"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"evanyan13"},"content":"        return Objects.hash(guiSettings, applicationBookFilePath);","lastModifiedDate":"2023-10-10"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"migfoo02"},"content":"        return \"Gui Settings : \"","lastModifiedDate":"2023-10-22"},{"lineNumber":83,"author":{"gitId":"migfoo02"},"content":"                + guiSettings","lastModifiedDate":"2023-10-22"},{"lineNumber":84,"author":{"gitId":"migfoo02"},"content":"                + \"\\nLocal data file location : \"","lastModifiedDate":"2023-10-22"},{"lineNumber":85,"author":{"gitId":"migfoo02"},"content":"                + applicationBookFilePath;","lastModifiedDate":"2023-10-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"evanyan13":11,"-":73,"migfoo02":4}},{"path":"src/main/java/seedu/application/model/job/CombinedPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JeremyYong128"},"content":"package seedu.application.model.job;","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"JeremyYong128"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"JeremyYong128"},"content":"import java.util.List;","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"JeremyYong128"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"JeremyYong128"},"content":"/**","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"JeremyYong128"},"content":" * Represents a predicate that is the logical AND of all {@code FieldContainsKeyWordsPredicate} objects supplied to it.","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"JeremyYong128"},"content":" */","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"JeremyYong128"},"content":"public class CombinedPredicate implements Predicate\u003cJob\u003e {","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"JeremyYong128"},"content":"    private List\u003cPredicate\u003cJob\u003e\u003e predicateList;","lastModifiedDate":"2023-10-31"},{"lineNumber":12,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"JeremyYong128"},"content":"    public CombinedPredicate(List\u003cPredicate\u003cJob\u003e\u003e predicateList) {","lastModifiedDate":"2023-10-31"},{"lineNumber":14,"author":{"gitId":"JeremyYong128"},"content":"        this.predicateList \u003d new ArrayList\u003c\u003e(predicateList);","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"JeremyYong128"},"content":"    @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"JeremyYong128"},"content":"    public boolean test(Job job) {","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"JeremyYong128"},"content":"        Predicate\u003cJob\u003e predicate \u003d x -\u003e true;","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"JeremyYong128"},"content":"        for (Predicate\u003cJob\u003e p : predicateList) {","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"JeremyYong128"},"content":"            predicate \u003d predicate.and(p);","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"JeremyYong128"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"JeremyYong128"},"content":"        return predicate.test(job);","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":25,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"JeremyYong128"},"content":"    @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":27,"author":{"gitId":"JeremyYong128"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-26"},{"lineNumber":28,"author":{"gitId":"JeremyYong128"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"JeremyYong128"},"content":"            return true;","lastModifiedDate":"2023-10-26"},{"lineNumber":30,"author":{"gitId":"JeremyYong128"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":31,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":32,"author":{"gitId":"JeremyYong128"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-26"},{"lineNumber":33,"author":{"gitId":"JeremyYong128"},"content":"        if (!(other instanceof CombinedPredicate)) {","lastModifiedDate":"2023-10-26"},{"lineNumber":34,"author":{"gitId":"JeremyYong128"},"content":"            return false;","lastModifiedDate":"2023-10-26"},{"lineNumber":35,"author":{"gitId":"JeremyYong128"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":36,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":37,"author":{"gitId":"JeremyYong128"},"content":"        CombinedPredicate otherCombinedPredicate \u003d (CombinedPredicate) other;","lastModifiedDate":"2023-10-26"},{"lineNumber":38,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":39,"author":{"gitId":"JeremyYong128"},"content":"        if (otherCombinedPredicate.predicateList.size() !\u003d predicateList.size()) {","lastModifiedDate":"2023-10-31"},{"lineNumber":40,"author":{"gitId":"JeremyYong128"},"content":"            return false;","lastModifiedDate":"2023-10-31"},{"lineNumber":41,"author":{"gitId":"JeremyYong128"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":42,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":43,"author":{"gitId":"JeremyYong128"},"content":"        for (Predicate\u003cJob\u003e p : predicateList) {","lastModifiedDate":"2023-10-31"},{"lineNumber":44,"author":{"gitId":"JeremyYong128"},"content":"            if (!otherCombinedPredicate.predicateList.contains(p)) {","lastModifiedDate":"2023-10-31"},{"lineNumber":45,"author":{"gitId":"JeremyYong128"},"content":"                return false;","lastModifiedDate":"2023-10-31"},{"lineNumber":46,"author":{"gitId":"JeremyYong128"},"content":"            }","lastModifiedDate":"2023-10-31"},{"lineNumber":47,"author":{"gitId":"JeremyYong128"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":48,"author":{"gitId":"JeremyYong128"},"content":"        return true;","lastModifiedDate":"2023-10-31"},{"lineNumber":49,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":50,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":51,"author":{"gitId":"JeremyYong128"},"content":"}","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"JeremyYong128":51}},{"path":"src/main/java/seedu/application/model/job/Company.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"evanyan13"},"content":"package seedu.application.model.job;","lastModifiedDate":"2023-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":5,"author":{"gitId":"evanyan13"},"content":"import seedu.application.commons.util.AppUtil;","lastModifiedDate":"2023-10-10"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"evanyan13"},"content":" * Represents a Job\u0027s company in the application book.","lastModifiedDate":"2023-10-10"},{"lineNumber":9,"author":{"gitId":"JeremyYong128"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidCompany(String)}","lastModifiedDate":"2023-10-04"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"JeremyYong128"},"content":"public class Company {","lastModifiedDate":"2023-10-04"},{"lineNumber":12,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"migfoo02"},"content":"            \"Company names should adhere to the following constraints:\\n\"","lastModifiedDate":"2023-10-16"},{"lineNumber":15,"author":{"gitId":"migfoo02"},"content":"                    + \"1. Start with an alphanumeric character\\n\"","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"migfoo02"},"content":"                    + \"2. Should not be blank\";","lastModifiedDate":"2023-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":19,"author":{"gitId":"JeremyYong128"},"content":"     * The first character of the company must not be a whitespace,","lastModifiedDate":"2023-10-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":22,"author":{"gitId":"migfoo02"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}].*\";","lastModifiedDate":"2023-10-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"JeremyYong128"},"content":"    public final String name;","lastModifiedDate":"2023-10-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"JeremyYong128"},"content":"     * Constructs a {@code Company}.","lastModifiedDate":"2023-10-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"JeremyYong128"},"content":"     * @param name A valid company name.","lastModifiedDate":"2023-10-04"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"JeremyYong128"},"content":"    public Company(String name) {","lastModifiedDate":"2023-10-04"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"evanyan13"},"content":"        AppUtil.checkArgument(isValidCompany(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-10"},{"lineNumber":34,"author":{"gitId":"JeremyYong128"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-10-04"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"migfoo02"},"content":"     * Returns true if a given string is a valid name, that is it matches the 2 constraints above.","lastModifiedDate":"2023-10-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"JeremyYong128"},"content":"    public static boolean isValidCompany(String test) {","lastModifiedDate":"2023-10-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"JeremyYong128"},"content":"        return name;","lastModifiedDate":"2023-10-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":57,"author":{"gitId":"JeremyYong128"},"content":"        if (!(other instanceof Company)) {","lastModifiedDate":"2023-10-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":61,"author":{"gitId":"JeremyYong128"},"content":"        Company otherCompany \u003d (Company) other;","lastModifiedDate":"2023-10-04"},{"lineNumber":62,"author":{"gitId":"migfoo02"},"content":"        return name.equalsIgnoreCase(otherCompany.name);","lastModifiedDate":"2023-10-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"JeremyYong128"},"content":"        return name.hashCode();","lastModifiedDate":"2023-10-04"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"evanyan13":5,"-":45,"JeremyYong128":14,"migfoo02":6}},{"path":"src/main/java/seedu/application/model/job/Deadline.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"evanyan13"},"content":"package seedu.application.model.job;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"evanyan13"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"evanyan13"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"evanyan13"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"evanyan13"},"content":"import seedu.application.commons.util.AppUtil;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"evanyan13"},"content":"/**","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"evanyan13"},"content":" * Represents a Job\u0027s deadline in the application book.","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"evanyan13"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidDeadline(String)}","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"evanyan13"},"content":" */","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"evanyan13"},"content":"public class Deadline {","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":16,"author":{"gitId":"evanyan13"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"evanyan13"},"content":"        \"Deadline should be in valid DateTime format: \"","lastModifiedDate":"2023-10-14"},{"lineNumber":18,"author":{"gitId":"migfoo02"},"content":"            + \"MMM dd yyyy HHmm\\n\"","lastModifiedDate":"2023-10-16"},{"lineNumber":19,"author":{"gitId":"evanyan13"},"content":"            + \"Eg. Dec 31 2030 1200\";","lastModifiedDate":"2023-10-14"},{"lineNumber":20,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"evanyan13"},"content":"    public static final String TO_ADD_DEADLINE \u003d \"TO_ADD_DEADLINE\";","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"evanyan13"},"content":"    public static final Deadline EMPTY_DEADLINE \u003d new Deadline(TO_ADD_DEADLINE);","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"evanyan13"},"content":"    public static final String DEFAULT_DATETIME_FORMAT \u003d \"MMM dd yyyy HHmm\";","lastModifiedDate":"2023-10-14"},{"lineNumber":24,"author":{"gitId":"evanyan13"},"content":"    public static final DateTimeFormatter DATE_TIME_FORMATTER \u003d DateTimeFormatter.ofPattern(DEFAULT_DATETIME_FORMAT);","lastModifiedDate":"2023-10-14"},{"lineNumber":25,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"evanyan13"},"content":"    public final String deadline;","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"evanyan13"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"evanyan13"},"content":"     * Constructs a {@code Deadline}.","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"evanyan13"},"content":"     *","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"evanyan13"},"content":"     * @param dateTime A valid dateTime.","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"evanyan13"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"evanyan13"},"content":"    public Deadline(String dateTime) {","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"evanyan13"},"content":"        requireNonNull(dateTime);","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"evanyan13"},"content":"        AppUtil.checkArgument(isValidDeadline(dateTime), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"evanyan13"},"content":"        if (isEmptyDeadline(dateTime)) {","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"evanyan13"},"content":"            this.deadline \u003d TO_ADD_DEADLINE;","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"evanyan13"},"content":"        } else {","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"evanyan13"},"content":"            this.deadline \u003d dateTime;","lastModifiedDate":"2023-10-13"},{"lineNumber":41,"author":{"gitId":"evanyan13"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":42,"author":{"gitId":"evanyan13"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":43,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":44,"author":{"gitId":"evanyan13"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":45,"author":{"gitId":"evanyan13"},"content":"     * Returns true if a given string is a valid deadline.","lastModifiedDate":"2023-10-13"},{"lineNumber":46,"author":{"gitId":"evanyan13"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":47,"author":{"gitId":"evanyan13"},"content":"    public static boolean isValidDeadline(String test) {","lastModifiedDate":"2023-10-13"},{"lineNumber":48,"author":{"gitId":"evanyan13"},"content":"        if (isEmptyDeadline(test)) {","lastModifiedDate":"2023-10-13"},{"lineNumber":49,"author":{"gitId":"evanyan13"},"content":"            return true;","lastModifiedDate":"2023-10-13"},{"lineNumber":50,"author":{"gitId":"evanyan13"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":51,"author":{"gitId":"evanyan13"},"content":"        try {","lastModifiedDate":"2023-10-13"},{"lineNumber":52,"author":{"gitId":"evanyan13"},"content":"            LocalDateTime dateTime \u003d LocalDateTime.parse(test, DATE_TIME_FORMATTER);","lastModifiedDate":"2023-10-14"},{"lineNumber":53,"author":{"gitId":"evanyan13"},"content":"            LocalDateTime current \u003d LocalDateTime.now();","lastModifiedDate":"2023-10-13"},{"lineNumber":54,"author":{"gitId":"evanyan13"},"content":"            return dateTime.format(DATE_TIME_FORMATTER).equals(test)","lastModifiedDate":"2023-10-14"},{"lineNumber":55,"author":{"gitId":"evanyan13"},"content":"                \u0026\u0026 dateTime.isAfter(current);","lastModifiedDate":"2023-10-13"},{"lineNumber":56,"author":{"gitId":"evanyan13"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-10-13"},{"lineNumber":57,"author":{"gitId":"evanyan13"},"content":"            return false;","lastModifiedDate":"2023-10-13"},{"lineNumber":58,"author":{"gitId":"evanyan13"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":59,"author":{"gitId":"evanyan13"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":60,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":61,"author":{"gitId":"evanyan13"},"content":"    private static boolean isEmptyDeadline(String test) {","lastModifiedDate":"2023-10-13"},{"lineNumber":62,"author":{"gitId":"migfoo02"},"content":"        return test.equals(TO_ADD_DEADLINE);","lastModifiedDate":"2023-10-16"},{"lineNumber":63,"author":{"gitId":"evanyan13"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":64,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":65,"author":{"gitId":"JeremyYong128"},"content":"    /**","lastModifiedDate":"2023-10-20"},{"lineNumber":66,"author":{"gitId":"JeremyYong128"},"content":"     * Checks if the date and time represented by this {@code Deadline} is earlier","lastModifiedDate":"2023-10-20"},{"lineNumber":67,"author":{"gitId":"JeremyYong128"},"content":"     * than the other Deadline. Empty deadlines are considered to be earlier.","lastModifiedDate":"2023-10-20"},{"lineNumber":68,"author":{"gitId":"evanyan13"},"content":"     *","lastModifiedDate":"2023-10-25"},{"lineNumber":69,"author":{"gitId":"JeremyYong128"},"content":"     * @param other The other {@code Deadline} to be compared to.","lastModifiedDate":"2023-10-20"},{"lineNumber":70,"author":{"gitId":"JeremyYong128"},"content":"     * @return -1 if this deadline is earlier, 0 if they are equal, and 1 if this deadline is later.","lastModifiedDate":"2023-10-20"},{"lineNumber":71,"author":{"gitId":"JeremyYong128"},"content":"     */","lastModifiedDate":"2023-10-20"},{"lineNumber":72,"author":{"gitId":"JeremyYong128"},"content":"    public int compareTo(Deadline other) {","lastModifiedDate":"2023-10-20"},{"lineNumber":73,"author":{"gitId":"JeremyYong128"},"content":"        if (this.deadline.equals(TO_ADD_DEADLINE)) {","lastModifiedDate":"2023-10-20"},{"lineNumber":74,"author":{"gitId":"JeremyYong128"},"content":"            return other.deadline.equals(TO_ADD_DEADLINE) ? 0 : -1;","lastModifiedDate":"2023-10-20"},{"lineNumber":75,"author":{"gitId":"JeremyYong128"},"content":"        }","lastModifiedDate":"2023-10-20"},{"lineNumber":76,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":77,"author":{"gitId":"JeremyYong128"},"content":"        if (other.deadline.equals(TO_ADD_DEADLINE)) {","lastModifiedDate":"2023-10-20"},{"lineNumber":78,"author":{"gitId":"JeremyYong128"},"content":"            return 1;","lastModifiedDate":"2023-10-20"},{"lineNumber":79,"author":{"gitId":"JeremyYong128"},"content":"        }","lastModifiedDate":"2023-10-20"},{"lineNumber":80,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":81,"author":{"gitId":"JeremyYong128"},"content":"        LocalDateTime thisDateTime \u003d LocalDateTime.parse(this.deadline, DATE_TIME_FORMATTER);","lastModifiedDate":"2023-10-20"},{"lineNumber":82,"author":{"gitId":"JeremyYong128"},"content":"        LocalDateTime otherDateTime \u003d LocalDateTime.parse(other.deadline, DATE_TIME_FORMATTER);","lastModifiedDate":"2023-10-20"},{"lineNumber":83,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":84,"author":{"gitId":"JeremyYong128"},"content":"        if (thisDateTime.equals(otherDateTime)) {","lastModifiedDate":"2023-10-20"},{"lineNumber":85,"author":{"gitId":"JeremyYong128"},"content":"            return 0;","lastModifiedDate":"2023-10-20"},{"lineNumber":86,"author":{"gitId":"JeremyYong128"},"content":"        } else if (thisDateTime.isAfter(otherDateTime)) {","lastModifiedDate":"2023-10-20"},{"lineNumber":87,"author":{"gitId":"JeremyYong128"},"content":"            return 1;","lastModifiedDate":"2023-10-20"},{"lineNumber":88,"author":{"gitId":"JeremyYong128"},"content":"        } else {","lastModifiedDate":"2023-10-20"},{"lineNumber":89,"author":{"gitId":"JeremyYong128"},"content":"            return -1;","lastModifiedDate":"2023-10-20"},{"lineNumber":90,"author":{"gitId":"JeremyYong128"},"content":"        }","lastModifiedDate":"2023-10-20"},{"lineNumber":91,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":92,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":93,"author":{"gitId":"evanyan13"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":94,"author":{"gitId":"evanyan13"},"content":"    public String toString() {","lastModifiedDate":"2023-10-13"},{"lineNumber":95,"author":{"gitId":"evanyan13"},"content":"        if (isEmptyDeadline(deadline)) {","lastModifiedDate":"2023-10-13"},{"lineNumber":96,"author":{"gitId":"evanyan13"},"content":"            return TO_ADD_DEADLINE;","lastModifiedDate":"2023-10-13"},{"lineNumber":97,"author":{"gitId":"evanyan13"},"content":"        } else {","lastModifiedDate":"2023-10-13"},{"lineNumber":98,"author":{"gitId":"evanyan13"},"content":"            LocalDateTime parsedDeadline \u003d LocalDateTime.parse(deadline, DATE_TIME_FORMATTER);","lastModifiedDate":"2023-10-14"},{"lineNumber":99,"author":{"gitId":"evanyan13"},"content":"            return parsedDeadline.format(DATE_TIME_FORMATTER);","lastModifiedDate":"2023-10-14"},{"lineNumber":100,"author":{"gitId":"evanyan13"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":101,"author":{"gitId":"evanyan13"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":102,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":103,"author":{"gitId":"evanyan13"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":104,"author":{"gitId":"evanyan13"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-13"},{"lineNumber":105,"author":{"gitId":"evanyan13"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-13"},{"lineNumber":106,"author":{"gitId":"evanyan13"},"content":"            return true;","lastModifiedDate":"2023-10-13"},{"lineNumber":107,"author":{"gitId":"evanyan13"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":108,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":109,"author":{"gitId":"evanyan13"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-13"},{"lineNumber":110,"author":{"gitId":"evanyan13"},"content":"        if (!(other instanceof Deadline)) {","lastModifiedDate":"2023-10-13"},{"lineNumber":111,"author":{"gitId":"evanyan13"},"content":"            return false;","lastModifiedDate":"2023-10-13"},{"lineNumber":112,"author":{"gitId":"evanyan13"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":113,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":114,"author":{"gitId":"evanyan13"},"content":"        Deadline otherDeadline \u003d (Deadline) other;","lastModifiedDate":"2023-10-13"},{"lineNumber":115,"author":{"gitId":"evanyan13"},"content":"        return deadline.equals(otherDeadline.deadline);","lastModifiedDate":"2023-10-13"},{"lineNumber":116,"author":{"gitId":"evanyan13"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":117,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":118,"author":{"gitId":"evanyan13"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":119,"author":{"gitId":"evanyan13"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-13"},{"lineNumber":120,"author":{"gitId":"evanyan13"},"content":"        return deadline.hashCode();","lastModifiedDate":"2023-10-13"},{"lineNumber":121,"author":{"gitId":"evanyan13"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":122,"author":{"gitId":"evanyan13"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"evanyan13":93,"JeremyYong128":27,"migfoo02":2}},{"path":"src/main/java/seedu/application/model/job/FieldComparator.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JeremyYong128"},"content":"package seedu.application.model.job;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":3,"author":{"gitId":"JeremyYong128"},"content":"import static seedu.application.logic.parser.CliSyntax.PREFIX_COMPANY;","lastModifiedDate":"2023-10-27"},{"lineNumber":4,"author":{"gitId":"JeremyYong128"},"content":"import static seedu.application.logic.parser.CliSyntax.PREFIX_DEADLINE;","lastModifiedDate":"2023-10-27"},{"lineNumber":5,"author":{"gitId":"JeremyYong128"},"content":"import static seedu.application.logic.parser.CliSyntax.PREFIX_INDUSTRY;","lastModifiedDate":"2023-10-27"},{"lineNumber":6,"author":{"gitId":"JeremyYong128"},"content":"import static seedu.application.logic.parser.CliSyntax.PREFIX_JOB_TYPE;","lastModifiedDate":"2023-10-27"},{"lineNumber":7,"author":{"gitId":"JeremyYong128"},"content":"import static seedu.application.logic.parser.CliSyntax.PREFIX_ROLE;","lastModifiedDate":"2023-10-27"},{"lineNumber":8,"author":{"gitId":"JeremyYong128"},"content":"import static seedu.application.logic.parser.CliSyntax.PREFIX_STATUS;","lastModifiedDate":"2023-10-27"},{"lineNumber":9,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":10,"author":{"gitId":"JeremyYong128"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-10-20"},{"lineNumber":11,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":12,"author":{"gitId":"JeremyYong128"},"content":"import seedu.application.logic.parser.Prefix;","lastModifiedDate":"2023-10-27"},{"lineNumber":13,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":14,"author":{"gitId":"JeremyYong128"},"content":"/**","lastModifiedDate":"2023-10-20"},{"lineNumber":15,"author":{"gitId":"JeremyYong128"},"content":" * Compares two jobs based on the field specifier provided.","lastModifiedDate":"2023-10-20"},{"lineNumber":16,"author":{"gitId":"JeremyYong128"},"content":" */","lastModifiedDate":"2023-10-20"},{"lineNumber":17,"author":{"gitId":"JeremyYong128"},"content":"public class FieldComparator implements Comparator\u003cJob\u003e {","lastModifiedDate":"2023-10-20"},{"lineNumber":18,"author":{"gitId":"JeremyYong128"},"content":"    private final Prefix prefix;","lastModifiedDate":"2023-10-27"},{"lineNumber":19,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":20,"author":{"gitId":"JeremyYong128"},"content":"    /**","lastModifiedDate":"2023-10-20"},{"lineNumber":21,"author":{"gitId":"JeremyYong128"},"content":"     * Constructs a {@code FieldComparator} using the specifier given.","lastModifiedDate":"2023-10-20"},{"lineNumber":22,"author":{"gitId":"JeremyYong128"},"content":"     * @param prefix String denoting which field to sort by.","lastModifiedDate":"2023-10-27"},{"lineNumber":23,"author":{"gitId":"JeremyYong128"},"content":"     */","lastModifiedDate":"2023-10-20"},{"lineNumber":24,"author":{"gitId":"JeremyYong128"},"content":"    public FieldComparator(Prefix prefix) {","lastModifiedDate":"2023-10-27"},{"lineNumber":25,"author":{"gitId":"JeremyYong128"},"content":"        this.prefix \u003d prefix;","lastModifiedDate":"2023-10-27"},{"lineNumber":26,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":27,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":28,"author":{"gitId":"JeremyYong128"},"content":"    /**","lastModifiedDate":"2023-10-20"},{"lineNumber":29,"author":{"gitId":"JeremyYong128"},"content":"     * Checks if a {@code String} is a valid specifier.","lastModifiedDate":"2023-10-20"},{"lineNumber":30,"author":{"gitId":"JeremyYong128"},"content":"     * @param prefix The user String input.","lastModifiedDate":"2023-10-27"},{"lineNumber":31,"author":{"gitId":"JeremyYong128"},"content":"     */","lastModifiedDate":"2023-10-20"},{"lineNumber":32,"author":{"gitId":"JeremyYong128"},"content":"    public static boolean isValidPrefix(String prefix) {","lastModifiedDate":"2023-10-27"},{"lineNumber":33,"author":{"gitId":"JeremyYong128"},"content":"        return prefix.equals(PREFIX_COMPANY.getPrefix())","lastModifiedDate":"2023-10-27"},{"lineNumber":34,"author":{"gitId":"JeremyYong128"},"content":"                || prefix.equals(PREFIX_ROLE.getPrefix())","lastModifiedDate":"2023-10-27"},{"lineNumber":35,"author":{"gitId":"JeremyYong128"},"content":"                || prefix.equals(PREFIX_STATUS.getPrefix())","lastModifiedDate":"2023-10-27"},{"lineNumber":36,"author":{"gitId":"JeremyYong128"},"content":"                || prefix.equals(PREFIX_INDUSTRY.getPrefix())","lastModifiedDate":"2023-10-27"},{"lineNumber":37,"author":{"gitId":"JeremyYong128"},"content":"                || prefix.equals(PREFIX_DEADLINE.getPrefix())","lastModifiedDate":"2023-10-27"},{"lineNumber":38,"author":{"gitId":"JeremyYong128"},"content":"                || prefix.equals(PREFIX_JOB_TYPE.getPrefix());","lastModifiedDate":"2023-10-27"},{"lineNumber":39,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":40,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":41,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":42,"author":{"gitId":"JeremyYong128"},"content":"    @Override","lastModifiedDate":"2023-10-20"},{"lineNumber":43,"author":{"gitId":"JeremyYong128"},"content":"    public int compare(Job job1, Job job2) {","lastModifiedDate":"2023-10-20"},{"lineNumber":44,"author":{"gitId":"JeremyYong128"},"content":"        if (prefix.equals(PREFIX_COMPANY)) {","lastModifiedDate":"2023-10-27"},{"lineNumber":45,"author":{"gitId":"JeremyYong128"},"content":"            return job1.getCompany().name.compareToIgnoreCase(job2.getCompany().name);","lastModifiedDate":"2023-10-20"},{"lineNumber":46,"author":{"gitId":"JeremyYong128"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":47,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":48,"author":{"gitId":"JeremyYong128"},"content":"        if (prefix.equals(PREFIX_ROLE)) {","lastModifiedDate":"2023-10-27"},{"lineNumber":49,"author":{"gitId":"JeremyYong128"},"content":"            return job1.getRole().description.compareToIgnoreCase(job2.getRole().description);","lastModifiedDate":"2023-10-20"},{"lineNumber":50,"author":{"gitId":"JeremyYong128"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":51,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":52,"author":{"gitId":"JeremyYong128"},"content":"        if (prefix.equals(PREFIX_STATUS)) {","lastModifiedDate":"2023-10-27"},{"lineNumber":53,"author":{"gitId":"peiran18"},"content":"            return job1.getStatus().status.compareToIgnoreCase(job2.getStatus().status);","lastModifiedDate":"2023-10-20"},{"lineNumber":54,"author":{"gitId":"JeremyYong128"},"content":"        }","lastModifiedDate":"2023-10-20"},{"lineNumber":55,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":56,"author":{"gitId":"JeremyYong128"},"content":"        if (prefix.equals(PREFIX_INDUSTRY)) {","lastModifiedDate":"2023-10-27"},{"lineNumber":57,"author":{"gitId":"JeremyYong128"},"content":"            return job1.getIndustry().industry.compareToIgnoreCase(job2.getIndustry().industry);","lastModifiedDate":"2023-10-27"},{"lineNumber":58,"author":{"gitId":"JeremyYong128"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":59,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":60,"author":{"gitId":"JeremyYong128"},"content":"        if (prefix.equals(PREFIX_DEADLINE)) {","lastModifiedDate":"2023-10-27"},{"lineNumber":61,"author":{"gitId":"JeremyYong128"},"content":"            return job1.getDeadline().compareTo(job2.getDeadline());","lastModifiedDate":"2023-10-27"},{"lineNumber":62,"author":{"gitId":"JeremyYong128"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":63,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":64,"author":{"gitId":"JeremyYong128"},"content":"        if (prefix.equals(PREFIX_JOB_TYPE)) {","lastModifiedDate":"2023-10-27"},{"lineNumber":65,"author":{"gitId":"JeremyYong128"},"content":"            return job1.getJobType().jobType.compareToIgnoreCase(job2.getJobType().jobType);","lastModifiedDate":"2023-10-27"},{"lineNumber":66,"author":{"gitId":"JeremyYong128"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":67,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":68,"author":{"gitId":"JeremyYong128"},"content":"        return -1;","lastModifiedDate":"2023-10-27"},{"lineNumber":69,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":70,"author":{"gitId":"peiran18"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":71,"author":{"gitId":"peiran18"},"content":"    @Override","lastModifiedDate":"2023-10-22"},{"lineNumber":72,"author":{"gitId":"peiran18"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-22"},{"lineNumber":73,"author":{"gitId":"peiran18"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-22"},{"lineNumber":74,"author":{"gitId":"peiran18"},"content":"            return true;","lastModifiedDate":"2023-10-22"},{"lineNumber":75,"author":{"gitId":"peiran18"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":76,"author":{"gitId":"peiran18"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":77,"author":{"gitId":"peiran18"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-22"},{"lineNumber":78,"author":{"gitId":"peiran18"},"content":"        if (!(other instanceof FieldComparator)) {","lastModifiedDate":"2023-10-22"},{"lineNumber":79,"author":{"gitId":"peiran18"},"content":"            return false;","lastModifiedDate":"2023-10-22"},{"lineNumber":80,"author":{"gitId":"peiran18"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":81,"author":{"gitId":"peiran18"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":82,"author":{"gitId":"JeremyYong128"},"content":"        FieldComparator otherComparator \u003d (FieldComparator) other;","lastModifiedDate":"2023-10-27"},{"lineNumber":83,"author":{"gitId":"JeremyYong128"},"content":"        return prefix.equals(otherComparator.prefix);","lastModifiedDate":"2023-10-27"},{"lineNumber":84,"author":{"gitId":"peiran18"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":85,"author":{"gitId":"JeremyYong128"},"content":"}","lastModifiedDate":"2023-10-20"}],"authorContributionMap":{"peiran18":14,"JeremyYong128":71}},{"path":"src/main/java/seedu/application/model/job/FieldContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JeremyYong128"},"content":"package seedu.application.model.job;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"JeremyYong128"},"content":"import static seedu.application.logic.parser.CliSyntax.PREFIX_COMPANY;","lastModifiedDate":"2023-10-31"},{"lineNumber":4,"author":{"gitId":"JeremyYong128"},"content":"import static seedu.application.logic.parser.CliSyntax.PREFIX_DEADLINE;","lastModifiedDate":"2023-10-31"},{"lineNumber":5,"author":{"gitId":"JeremyYong128"},"content":"import static seedu.application.logic.parser.CliSyntax.PREFIX_INDUSTRY;","lastModifiedDate":"2023-10-31"},{"lineNumber":6,"author":{"gitId":"JeremyYong128"},"content":"import static seedu.application.logic.parser.CliSyntax.PREFIX_JOB_TYPE;","lastModifiedDate":"2023-10-31"},{"lineNumber":7,"author":{"gitId":"JeremyYong128"},"content":"import static seedu.application.logic.parser.CliSyntax.PREFIX_ROLE;","lastModifiedDate":"2023-10-31"},{"lineNumber":8,"author":{"gitId":"JeremyYong128"},"content":"import static seedu.application.logic.parser.CliSyntax.PREFIX_STATUS;","lastModifiedDate":"2023-10-31"},{"lineNumber":9,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":10,"author":{"gitId":"JeremyYong128"},"content":"import java.util.Collections;","lastModifiedDate":"2023-10-31"},{"lineNumber":11,"author":{"gitId":"JeremyYong128"},"content":"import java.util.List;","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"JeremyYong128"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"JeremyYong128"},"content":"import seedu.application.commons.util.StringUtil;","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"JeremyYong128"},"content":"import seedu.application.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"JeremyYong128"},"content":"import seedu.application.logic.parser.Prefix;","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"JeremyYong128"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"JeremyYong128"},"content":" * Tests that a {@code Job}\u0027s field matches any of the keywords given.","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"JeremyYong128"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"JeremyYong128"},"content":"public class FieldContainsKeywordsPredicate implements Predicate\u003cJob\u003e {","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"JeremyYong128"},"content":"    private final Prefix prefix;","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"JeremyYong128"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"JeremyYong128"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"JeremyYong128"},"content":"     * Constructs a {@code FieldContainsKeywordsPredicate} using the prefix and keywords given.","lastModifiedDate":"2023-10-26"},{"lineNumber":27,"author":{"gitId":"JeremyYong128"},"content":"     * @param prefix Prefix denoting which field to search in.","lastModifiedDate":"2023-10-26"},{"lineNumber":28,"author":{"gitId":"JeremyYong128"},"content":"     * @param keywords List of keywords which the user is searching for.","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"JeremyYong128"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"JeremyYong128"},"content":"    public FieldContainsKeywordsPredicate(Prefix prefix, List\u003cString\u003e keywords) {","lastModifiedDate":"2023-10-26"},{"lineNumber":31,"author":{"gitId":"JeremyYong128"},"content":"        this.prefix \u003d prefix;","lastModifiedDate":"2023-10-26"},{"lineNumber":32,"author":{"gitId":"JeremyYong128"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"JeremyYong128"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":36,"author":{"gitId":"JeremyYong128"},"content":"     * Generates a {@code Predicate\u003cJob\u003e} which is used to filter the list as specified the preamble.","lastModifiedDate":"2023-10-31"},{"lineNumber":37,"author":{"gitId":"JeremyYong128"},"content":"     * @param keywords The list of keywords in the preamble.","lastModifiedDate":"2023-10-31"},{"lineNumber":38,"author":{"gitId":"JeremyYong128"},"content":"     * @return the {@code Predicate\u003cJob\u003e} to be passed into the constructor for {@code CombinedPredicate}.","lastModifiedDate":"2023-10-31"},{"lineNumber":39,"author":{"gitId":"JeremyYong128"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":40,"author":{"gitId":"JeremyYong128"},"content":"    public static Predicate\u003cJob\u003e getPreamblePredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2023-10-31"},{"lineNumber":41,"author":{"gitId":"JeremyYong128"},"content":"        Predicate\u003cJob\u003e preamblePredicate \u003d x -\u003e true;","lastModifiedDate":"2023-10-31"},{"lineNumber":42,"author":{"gitId":"JeremyYong128"},"content":"        for (String keyword : keywords) {","lastModifiedDate":"2023-10-31"},{"lineNumber":43,"author":{"gitId":"JeremyYong128"},"content":"            Predicate\u003cJob\u003e allFieldsPredicate \u003d x -\u003e false;","lastModifiedDate":"2023-10-31"},{"lineNumber":44,"author":{"gitId":"JeremyYong128"},"content":"            allFieldsPredicate \u003d allFieldsPredicate","lastModifiedDate":"2023-10-31"},{"lineNumber":45,"author":{"gitId":"JeremyYong128"},"content":"                    .or(new FieldContainsKeywordsPredicate(PREFIX_COMPANY, Collections.singletonList(keyword)))","lastModifiedDate":"2023-10-31"},{"lineNumber":46,"author":{"gitId":"JeremyYong128"},"content":"                    .or(new FieldContainsKeywordsPredicate(PREFIX_ROLE, Collections.singletonList(keyword)))","lastModifiedDate":"2023-10-31"},{"lineNumber":47,"author":{"gitId":"JeremyYong128"},"content":"                    .or(new FieldContainsKeywordsPredicate(PREFIX_STATUS, Collections.singletonList(keyword)))","lastModifiedDate":"2023-10-31"},{"lineNumber":48,"author":{"gitId":"JeremyYong128"},"content":"                    .or(new FieldContainsKeywordsPredicate(PREFIX_INDUSTRY, Collections.singletonList(keyword)))","lastModifiedDate":"2023-10-31"},{"lineNumber":49,"author":{"gitId":"JeremyYong128"},"content":"                    .or(new FieldContainsKeywordsPredicate(PREFIX_DEADLINE, Collections.singletonList(keyword)))","lastModifiedDate":"2023-10-31"},{"lineNumber":50,"author":{"gitId":"JeremyYong128"},"content":"                    .or(new FieldContainsKeywordsPredicate(PREFIX_JOB_TYPE, Collections.singletonList(keyword)));","lastModifiedDate":"2023-10-31"},{"lineNumber":51,"author":{"gitId":"JeremyYong128"},"content":"            preamblePredicate \u003d preamblePredicate.and(allFieldsPredicate);","lastModifiedDate":"2023-10-31"},{"lineNumber":52,"author":{"gitId":"JeremyYong128"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":53,"author":{"gitId":"JeremyYong128"},"content":"        return preamblePredicate;","lastModifiedDate":"2023-10-31"},{"lineNumber":54,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":55,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":56,"author":{"gitId":"JeremyYong128"},"content":"    private String getField(Job job) {","lastModifiedDate":"2023-10-12"},{"lineNumber":57,"author":{"gitId":"JeremyYong128"},"content":"        if (prefix.equals(PREFIX_COMPANY)) {","lastModifiedDate":"2023-10-31"},{"lineNumber":58,"author":{"gitId":"JeremyYong128"},"content":"            return job.getCompany().name;","lastModifiedDate":"2023-10-12"},{"lineNumber":59,"author":{"gitId":"JeremyYong128"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":60,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":61,"author":{"gitId":"JeremyYong128"},"content":"        if (prefix.equals(PREFIX_ROLE)) {","lastModifiedDate":"2023-10-31"},{"lineNumber":62,"author":{"gitId":"JeremyYong128"},"content":"            return job.getRole().description;","lastModifiedDate":"2023-10-12"},{"lineNumber":63,"author":{"gitId":"JeremyYong128"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":64,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":65,"author":{"gitId":"JeremyYong128"},"content":"        if (prefix.equals(PREFIX_STATUS)) {","lastModifiedDate":"2023-10-31"},{"lineNumber":66,"author":{"gitId":"JeremyYong128"},"content":"            return job.getStatus().status;","lastModifiedDate":"2023-10-26"},{"lineNumber":67,"author":{"gitId":"JeremyYong128"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":68,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":69,"author":{"gitId":"JeremyYong128"},"content":"        if (prefix.equals(PREFIX_INDUSTRY)) {","lastModifiedDate":"2023-10-31"},{"lineNumber":70,"author":{"gitId":"JeremyYong128"},"content":"            return job.getIndustry().industry;","lastModifiedDate":"2023-10-26"},{"lineNumber":71,"author":{"gitId":"JeremyYong128"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":72,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":73,"author":{"gitId":"JeremyYong128"},"content":"        if (prefix.equals(PREFIX_DEADLINE)) {","lastModifiedDate":"2023-10-31"},{"lineNumber":74,"author":{"gitId":"JeremyYong128"},"content":"            return job.getDeadline().deadline;","lastModifiedDate":"2023-10-26"},{"lineNumber":75,"author":{"gitId":"JeremyYong128"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":76,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":77,"author":{"gitId":"JeremyYong128"},"content":"        if (prefix.equals(PREFIX_JOB_TYPE)) {","lastModifiedDate":"2023-10-31"},{"lineNumber":78,"author":{"gitId":"JeremyYong128"},"content":"            return job.getJobType().jobType;","lastModifiedDate":"2023-10-26"},{"lineNumber":79,"author":{"gitId":"JeremyYong128"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":80,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":81,"author":{"gitId":"JeremyYong128"},"content":"        return null;","lastModifiedDate":"2023-10-26"},{"lineNumber":82,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":83,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":84,"author":{"gitId":"JeremyYong128"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":85,"author":{"gitId":"JeremyYong128"},"content":"    public boolean test(Job job) {","lastModifiedDate":"2023-10-12"},{"lineNumber":86,"author":{"gitId":"JeremyYong128"},"content":"        return keywords.stream()","lastModifiedDate":"2023-10-12"},{"lineNumber":87,"author":{"gitId":"JeremyYong128"},"content":"                .allMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(getField(job), keyword));","lastModifiedDate":"2023-10-26"},{"lineNumber":88,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":89,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":90,"author":{"gitId":"JeremyYong128"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":91,"author":{"gitId":"JeremyYong128"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-12"},{"lineNumber":92,"author":{"gitId":"JeremyYong128"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-12"},{"lineNumber":93,"author":{"gitId":"JeremyYong128"},"content":"            return true;","lastModifiedDate":"2023-10-12"},{"lineNumber":94,"author":{"gitId":"JeremyYong128"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":95,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":96,"author":{"gitId":"JeremyYong128"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-12"},{"lineNumber":97,"author":{"gitId":"JeremyYong128"},"content":"        if (!(other instanceof FieldContainsKeywordsPredicate)) {","lastModifiedDate":"2023-10-12"},{"lineNumber":98,"author":{"gitId":"JeremyYong128"},"content":"            return false;","lastModifiedDate":"2023-10-12"},{"lineNumber":99,"author":{"gitId":"JeremyYong128"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":100,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":101,"author":{"gitId":"JeremyYong128"},"content":"        FieldContainsKeywordsPredicate otherFieldContainsKeywordsPredicate \u003d (FieldContainsKeywordsPredicate) other;","lastModifiedDate":"2023-10-12"},{"lineNumber":102,"author":{"gitId":"JeremyYong128"},"content":"        return prefix.equals(otherFieldContainsKeywordsPredicate.prefix)","lastModifiedDate":"2023-10-26"},{"lineNumber":103,"author":{"gitId":"JeremyYong128"},"content":"                \u0026\u0026 keywords.equals(otherFieldContainsKeywordsPredicate.keywords);","lastModifiedDate":"2023-10-12"},{"lineNumber":104,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":105,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":106,"author":{"gitId":"JeremyYong128"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":107,"author":{"gitId":"JeremyYong128"},"content":"    public String toString() {","lastModifiedDate":"2023-10-12"},{"lineNumber":108,"author":{"gitId":"JeremyYong128"},"content":"        return new ToStringBuilder(this).add(\"keywords\", keywords).toString();","lastModifiedDate":"2023-10-12"},{"lineNumber":109,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":110,"author":{"gitId":"JeremyYong128"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"JeremyYong128":110}},{"path":"src/main/java/seedu/application/model/job/Industry.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"czhiruo"},"content":"package seedu.application.model.job;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"czhiruo"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":3,"author":{"gitId":"czhiruo"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-20"},{"lineNumber":4,"author":{"gitId":"czhiruo"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":5,"author":{"gitId":"czhiruo"},"content":"import seedu.application.commons.util.AppUtil;","lastModifiedDate":"2023-10-21"},{"lineNumber":6,"author":{"gitId":"czhiruo"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":7,"author":{"gitId":"czhiruo"},"content":"/**","lastModifiedDate":"2023-10-20"},{"lineNumber":8,"author":{"gitId":"czhiruo"},"content":" * Represents the industry of the Job in the application book.","lastModifiedDate":"2023-10-20"},{"lineNumber":9,"author":{"gitId":"czhiruo"},"content":" */","lastModifiedDate":"2023-10-20"},{"lineNumber":10,"author":{"gitId":"czhiruo"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":11,"author":{"gitId":"czhiruo"},"content":"public class Industry {","lastModifiedDate":"2023-10-20"},{"lineNumber":12,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":13,"author":{"gitId":"czhiruo"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-10-20"},{"lineNumber":14,"author":{"gitId":"czhiruo"},"content":"            \"Industry descriptions should adhere to the following constraints:\\n\"","lastModifiedDate":"2023-10-20"},{"lineNumber":15,"author":{"gitId":"JeremyYong128"},"content":"                    + \"1. Must start with an alphanumeric character\\n\";","lastModifiedDate":"2023-10-31"},{"lineNumber":16,"author":{"gitId":"czhiruo"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":17,"author":{"gitId":"czhiruo"},"content":"    public static final String TO_ADD_INDUSTRY \u003d \"TO_ADD_INDUSTRY\";","lastModifiedDate":"2023-10-20"},{"lineNumber":18,"author":{"gitId":"czhiruo"},"content":"    public static final Industry DEFAULT_INDUSTRY \u003d new Industry(TO_ADD_INDUSTRY);","lastModifiedDate":"2023-10-20"},{"lineNumber":19,"author":{"gitId":"czhiruo"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":20,"author":{"gitId":"czhiruo"},"content":"    /*","lastModifiedDate":"2023-10-20"},{"lineNumber":21,"author":{"gitId":"czhiruo"},"content":"     * The first character of the role must not be a whitespace,","lastModifiedDate":"2023-10-20"},{"lineNumber":22,"author":{"gitId":"czhiruo"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2023-10-20"},{"lineNumber":23,"author":{"gitId":"czhiruo"},"content":"     */","lastModifiedDate":"2023-10-20"},{"lineNumber":24,"author":{"gitId":"czhiruo"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}].*\";","lastModifiedDate":"2023-10-20"},{"lineNumber":25,"author":{"gitId":"czhiruo"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":26,"author":{"gitId":"czhiruo"},"content":"    public final String industry;","lastModifiedDate":"2023-10-20"},{"lineNumber":27,"author":{"gitId":"czhiruo"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":28,"author":{"gitId":"czhiruo"},"content":"    /**","lastModifiedDate":"2023-10-20"},{"lineNumber":29,"author":{"gitId":"czhiruo"},"content":"     * Constructs a {@code Status}.","lastModifiedDate":"2023-10-20"},{"lineNumber":30,"author":{"gitId":"czhiruo"},"content":"     *","lastModifiedDate":"2023-10-20"},{"lineNumber":31,"author":{"gitId":"czhiruo"},"content":"     * @param industry A valid industry.","lastModifiedDate":"2023-10-20"},{"lineNumber":32,"author":{"gitId":"czhiruo"},"content":"     */","lastModifiedDate":"2023-10-20"},{"lineNumber":33,"author":{"gitId":"czhiruo"},"content":"    public Industry(String industry) {","lastModifiedDate":"2023-10-20"},{"lineNumber":34,"author":{"gitId":"czhiruo"},"content":"        requireNonNull(industry);","lastModifiedDate":"2023-10-20"},{"lineNumber":35,"author":{"gitId":"czhiruo"},"content":"        AppUtil.checkArgument(isValidIndustry(industry), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-20"},{"lineNumber":36,"author":{"gitId":"czhiruo"},"content":"        this.industry \u003d industry.toUpperCase();","lastModifiedDate":"2023-10-20"},{"lineNumber":37,"author":{"gitId":"czhiruo"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":38,"author":{"gitId":"czhiruo"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":39,"author":{"gitId":"czhiruo"},"content":"    /**","lastModifiedDate":"2023-10-20"},{"lineNumber":40,"author":{"gitId":"czhiruo"},"content":"     * Returns true if a given string is a valid industry.","lastModifiedDate":"2023-10-20"},{"lineNumber":41,"author":{"gitId":"czhiruo"},"content":"     */","lastModifiedDate":"2023-10-20"},{"lineNumber":42,"author":{"gitId":"czhiruo"},"content":"    public static boolean isValidIndustry(String test) {","lastModifiedDate":"2023-10-20"},{"lineNumber":43,"author":{"gitId":"czhiruo"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-10-20"},{"lineNumber":44,"author":{"gitId":"czhiruo"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":45,"author":{"gitId":"czhiruo"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":46,"author":{"gitId":"czhiruo"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":47,"author":{"gitId":"czhiruo"},"content":"    @Override","lastModifiedDate":"2023-10-20"},{"lineNumber":48,"author":{"gitId":"czhiruo"},"content":"    public String toString() {","lastModifiedDate":"2023-10-20"},{"lineNumber":49,"author":{"gitId":"czhiruo"},"content":"        return industry;","lastModifiedDate":"2023-10-20"},{"lineNumber":50,"author":{"gitId":"czhiruo"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":51,"author":{"gitId":"czhiruo"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":52,"author":{"gitId":"czhiruo"},"content":"    @Override","lastModifiedDate":"2023-10-20"},{"lineNumber":53,"author":{"gitId":"czhiruo"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-20"},{"lineNumber":54,"author":{"gitId":"czhiruo"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-20"},{"lineNumber":55,"author":{"gitId":"czhiruo"},"content":"            return true;","lastModifiedDate":"2023-10-20"},{"lineNumber":56,"author":{"gitId":"czhiruo"},"content":"        }","lastModifiedDate":"2023-10-20"},{"lineNumber":57,"author":{"gitId":"czhiruo"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":58,"author":{"gitId":"czhiruo"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-20"},{"lineNumber":59,"author":{"gitId":"czhiruo"},"content":"        if (!(other instanceof Industry)) {","lastModifiedDate":"2023-10-22"},{"lineNumber":60,"author":{"gitId":"czhiruo"},"content":"            return false;","lastModifiedDate":"2023-10-20"},{"lineNumber":61,"author":{"gitId":"czhiruo"},"content":"        }","lastModifiedDate":"2023-10-20"},{"lineNumber":62,"author":{"gitId":"czhiruo"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":63,"author":{"gitId":"czhiruo"},"content":"        Industry otherIndustry \u003d (Industry) other;","lastModifiedDate":"2023-10-20"},{"lineNumber":64,"author":{"gitId":"czhiruo"},"content":"        return industry.equals(otherIndustry.industry);","lastModifiedDate":"2023-10-20"},{"lineNumber":65,"author":{"gitId":"czhiruo"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":66,"author":{"gitId":"czhiruo"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":67,"author":{"gitId":"czhiruo"},"content":"    @Override","lastModifiedDate":"2023-10-20"},{"lineNumber":68,"author":{"gitId":"czhiruo"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-20"},{"lineNumber":69,"author":{"gitId":"czhiruo"},"content":"        return industry.hashCode();","lastModifiedDate":"2023-10-20"},{"lineNumber":70,"author":{"gitId":"czhiruo"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":71,"author":{"gitId":"czhiruo"},"content":"}","lastModifiedDate":"2023-10-20"}],"authorContributionMap":{"czhiruo":69,"JeremyYong128":2}},{"path":"src/main/java/seedu/application/model/job/Job.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"evanyan13"},"content":"package seedu.application.model.job;","lastModifiedDate":"2023-10-10"},{"lineNumber":2,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":3,"author":{"gitId":"peiran18"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-30"},{"lineNumber":4,"author":{"gitId":"peiran18"},"content":"import java.util.List;","lastModifiedDate":"2023-10-30"},{"lineNumber":5,"author":{"gitId":"JeremyYong128"},"content":"import java.util.Objects;","lastModifiedDate":"2023-10-04"},{"lineNumber":6,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":7,"author":{"gitId":"czhiruo"},"content":"import seedu.application.commons.core.index.Index;","lastModifiedDate":"2023-10-31"},{"lineNumber":8,"author":{"gitId":"evanyan13"},"content":"import seedu.application.commons.util.CollectionUtil;","lastModifiedDate":"2023-10-10"},{"lineNumber":9,"author":{"gitId":"evanyan13"},"content":"import seedu.application.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-10"},{"lineNumber":10,"author":{"gitId":"peiran18"},"content":"import seedu.application.model.job.interview.Interview;","lastModifiedDate":"2023-10-30"},{"lineNumber":11,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":12,"author":{"gitId":"JeremyYong128"},"content":"/**","lastModifiedDate":"2023-10-04"},{"lineNumber":13,"author":{"gitId":"evanyan13"},"content":" * Represents a Job in the application book.","lastModifiedDate":"2023-10-10"},{"lineNumber":14,"author":{"gitId":"JeremyYong128"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2023-10-04"},{"lineNumber":15,"author":{"gitId":"JeremyYong128"},"content":" */","lastModifiedDate":"2023-10-04"},{"lineNumber":16,"author":{"gitId":"JeremyYong128"},"content":"public class Job {","lastModifiedDate":"2023-10-04"},{"lineNumber":17,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":18,"author":{"gitId":"JeremyYong128"},"content":"    // Identity fields","lastModifiedDate":"2023-10-04"},{"lineNumber":19,"author":{"gitId":"JeremyYong128"},"content":"    private final Role role;","lastModifiedDate":"2023-10-04"},{"lineNumber":20,"author":{"gitId":"JeremyYong128"},"content":"    private final Company company;","lastModifiedDate":"2023-10-04"},{"lineNumber":21,"author":{"gitId":"migfoo02"},"content":"    private final Deadline deadline;","lastModifiedDate":"2023-10-16"},{"lineNumber":22,"author":{"gitId":"peiran18"},"content":"    private final Status status;","lastModifiedDate":"2023-10-19"},{"lineNumber":23,"author":{"gitId":"migfoo02"},"content":"    private final JobType jobType;","lastModifiedDate":"2023-10-20"},{"lineNumber":24,"author":{"gitId":"czhiruo"},"content":"    private final Industry industry;","lastModifiedDate":"2023-10-20"},{"lineNumber":25,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":26,"author":{"gitId":"peiran18"},"content":"    private List\u003cInterview\u003e interviews \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-30"},{"lineNumber":27,"author":{"gitId":"peiran18"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":28,"author":{"gitId":"JeremyYong128"},"content":"    /**","lastModifiedDate":"2023-10-04"},{"lineNumber":29,"author":{"gitId":"evanyan13"},"content":"     * Not all fields are compulsory","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"JeremyYong128"},"content":"     */","lastModifiedDate":"2023-10-04"},{"lineNumber":31,"author":{"gitId":"migfoo02"},"content":"    public Job(Role role, Company company, Deadline deadline, Status status, JobType jobType,","lastModifiedDate":"2023-10-22"},{"lineNumber":32,"author":{"gitId":"migfoo02"},"content":"               Industry industry) {","lastModifiedDate":"2023-10-22"},{"lineNumber":33,"author":{"gitId":"evanyan13"},"content":"        CollectionUtil.requireAllNonNull(role, company);","lastModifiedDate":"2023-10-18"},{"lineNumber":34,"author":{"gitId":"JeremyYong128"},"content":"        this.role \u003d role;","lastModifiedDate":"2023-10-04"},{"lineNumber":35,"author":{"gitId":"JeremyYong128"},"content":"        this.company \u003d company;","lastModifiedDate":"2023-10-04"},{"lineNumber":36,"author":{"gitId":"evanyan13"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"peiran18"},"content":"        this.status \u003d status;","lastModifiedDate":"2023-10-19"},{"lineNumber":38,"author":{"gitId":"migfoo02"},"content":"        this.jobType \u003d jobType;","lastModifiedDate":"2023-10-20"},{"lineNumber":39,"author":{"gitId":"czhiruo"},"content":"        this.industry \u003d industry;","lastModifiedDate":"2023-10-20"},{"lineNumber":40,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":41,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":42,"author":{"gitId":"peiran18"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":43,"author":{"gitId":"peiran18"},"content":"     * Not all fields are compulsory","lastModifiedDate":"2023-10-31"},{"lineNumber":44,"author":{"gitId":"peiran18"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":45,"author":{"gitId":"peiran18"},"content":"    public Job(Role role, Company company, Deadline deadline, Status status, JobType jobType,","lastModifiedDate":"2023-10-31"},{"lineNumber":46,"author":{"gitId":"peiran18"},"content":"               Industry industry, List\u003cInterview\u003e interviews) {","lastModifiedDate":"2023-10-31"},{"lineNumber":47,"author":{"gitId":"peiran18"},"content":"        CollectionUtil.requireAllNonNull(role, company);","lastModifiedDate":"2023-10-31"},{"lineNumber":48,"author":{"gitId":"peiran18"},"content":"        this.role \u003d role;","lastModifiedDate":"2023-10-31"},{"lineNumber":49,"author":{"gitId":"peiran18"},"content":"        this.company \u003d company;","lastModifiedDate":"2023-10-31"},{"lineNumber":50,"author":{"gitId":"peiran18"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2023-10-31"},{"lineNumber":51,"author":{"gitId":"peiran18"},"content":"        this.status \u003d status;","lastModifiedDate":"2023-10-31"},{"lineNumber":52,"author":{"gitId":"peiran18"},"content":"        this.jobType \u003d jobType;","lastModifiedDate":"2023-10-31"},{"lineNumber":53,"author":{"gitId":"peiran18"},"content":"        this.industry \u003d industry;","lastModifiedDate":"2023-10-31"},{"lineNumber":54,"author":{"gitId":"peiran18"},"content":"        this.interviews \u003d interviews;","lastModifiedDate":"2023-10-31"},{"lineNumber":55,"author":{"gitId":"peiran18"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":56,"author":{"gitId":"peiran18"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":57,"author":{"gitId":"JeremyYong128"},"content":"    public Role getRole() {","lastModifiedDate":"2023-10-04"},{"lineNumber":58,"author":{"gitId":"JeremyYong128"},"content":"        return role;","lastModifiedDate":"2023-10-04"},{"lineNumber":59,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":60,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":61,"author":{"gitId":"JeremyYong128"},"content":"    public Company getCompany() {","lastModifiedDate":"2023-10-04"},{"lineNumber":62,"author":{"gitId":"JeremyYong128"},"content":"        return company;","lastModifiedDate":"2023-10-04"},{"lineNumber":63,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":64,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":65,"author":{"gitId":"evanyan13"},"content":"    public Deadline getDeadline() {","lastModifiedDate":"2023-10-13"},{"lineNumber":66,"author":{"gitId":"evanyan13"},"content":"        return deadline;","lastModifiedDate":"2023-10-13"},{"lineNumber":67,"author":{"gitId":"evanyan13"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":68,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":69,"author":{"gitId":"peiran18"},"content":"    public Status getStatus() {","lastModifiedDate":"2023-10-19"},{"lineNumber":70,"author":{"gitId":"peiran18"},"content":"        return status;","lastModifiedDate":"2023-10-19"},{"lineNumber":71,"author":{"gitId":"peiran18"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":72,"author":{"gitId":"peiran18"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":73,"author":{"gitId":"migfoo02"},"content":"    public JobType getJobType() {","lastModifiedDate":"2023-10-20"},{"lineNumber":74,"author":{"gitId":"migfoo02"},"content":"        return jobType;","lastModifiedDate":"2023-10-20"},{"lineNumber":75,"author":{"gitId":"migfoo02"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":76,"author":{"gitId":"migfoo02"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":77,"author":{"gitId":"czhiruo"},"content":"    public Industry getIndustry() {","lastModifiedDate":"2023-10-20"},{"lineNumber":78,"author":{"gitId":"czhiruo"},"content":"        return industry;","lastModifiedDate":"2023-10-20"},{"lineNumber":79,"author":{"gitId":"czhiruo"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":80,"author":{"gitId":"czhiruo"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":81,"author":{"gitId":"peiran18"},"content":"    public List\u003cInterview\u003e getInterviews() {","lastModifiedDate":"2023-10-30"},{"lineNumber":82,"author":{"gitId":"peiran18"},"content":"        return interviews;","lastModifiedDate":"2023-10-30"},{"lineNumber":83,"author":{"gitId":"peiran18"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":84,"author":{"gitId":"peiran18"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":85,"author":{"gitId":"peiran18"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":86,"author":{"gitId":"peiran18"},"content":"     * Adds an interview to the list of interviews for a job.","lastModifiedDate":"2023-10-31"},{"lineNumber":87,"author":{"gitId":"peiran18"},"content":"     * The interview must not already exist for the job.","lastModifiedDate":"2023-10-31"},{"lineNumber":88,"author":{"gitId":"peiran18"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":89,"author":{"gitId":"peiran18"},"content":"    public void addInterview(Interview interview) {","lastModifiedDate":"2023-10-30"},{"lineNumber":90,"author":{"gitId":"peiran18"},"content":"        interviews.add(interview);","lastModifiedDate":"2023-10-30"},{"lineNumber":91,"author":{"gitId":"peiran18"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":92,"author":{"gitId":"peiran18"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":93,"author":{"gitId":"czhiruo"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":94,"author":{"gitId":"czhiruo"},"content":"     * Deletes an interview in the list of interviews for a job.","lastModifiedDate":"2023-10-31"},{"lineNumber":95,"author":{"gitId":"czhiruo"},"content":"     * The interview must exist for the job.","lastModifiedDate":"2023-10-31"},{"lineNumber":96,"author":{"gitId":"czhiruo"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":97,"author":{"gitId":"czhiruo"},"content":"    public void deleteInterview(Index index) {","lastModifiedDate":"2023-10-31"},{"lineNumber":98,"author":{"gitId":"czhiruo"},"content":"        System.out.println(interviews);","lastModifiedDate":"2023-10-31"},{"lineNumber":99,"author":{"gitId":"czhiruo"},"content":"        interviews.remove(index.getZeroBased());","lastModifiedDate":"2023-10-31"},{"lineNumber":100,"author":{"gitId":"czhiruo"},"content":"        System.out.println(interviews);","lastModifiedDate":"2023-10-31"},{"lineNumber":101,"author":{"gitId":"czhiruo"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":102,"author":{"gitId":"czhiruo"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":103,"author":{"gitId":"peiran18"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":104,"author":{"gitId":"peiran18"},"content":"     * Returns true if an interview with the same identity as {@code interview} exists for the job.","lastModifiedDate":"2023-10-31"},{"lineNumber":105,"author":{"gitId":"peiran18"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":106,"author":{"gitId":"peiran18"},"content":"    public boolean hasInterview(Interview interview) {","lastModifiedDate":"2023-10-30"},{"lineNumber":107,"author":{"gitId":"peiran18"},"content":"        for (Interview i : interviews) {","lastModifiedDate":"2023-10-30"},{"lineNumber":108,"author":{"gitId":"peiran18"},"content":"            if (interview.equals(i)) {","lastModifiedDate":"2023-10-30"},{"lineNumber":109,"author":{"gitId":"peiran18"},"content":"                return true;","lastModifiedDate":"2023-10-30"},{"lineNumber":110,"author":{"gitId":"peiran18"},"content":"            }","lastModifiedDate":"2023-10-30"},{"lineNumber":111,"author":{"gitId":"peiran18"},"content":"        }","lastModifiedDate":"2023-10-30"},{"lineNumber":112,"author":{"gitId":"peiran18"},"content":"        return false;","lastModifiedDate":"2023-10-30"},{"lineNumber":113,"author":{"gitId":"peiran18"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":114,"author":{"gitId":"peiran18"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":115,"author":{"gitId":"JeremyYong128"},"content":"    /**","lastModifiedDate":"2023-10-04"},{"lineNumber":116,"author":{"gitId":"JeremyYong128"},"content":"     * Returns true if both jobs have the same role and company.","lastModifiedDate":"2023-10-04"},{"lineNumber":117,"author":{"gitId":"JeremyYong128"},"content":"     * This defines a weaker notion of equality between two jobs.","lastModifiedDate":"2023-10-04"},{"lineNumber":118,"author":{"gitId":"JeremyYong128"},"content":"     */","lastModifiedDate":"2023-10-04"},{"lineNumber":119,"author":{"gitId":"JeremyYong128"},"content":"    public boolean isSameJob(Job otherJob) {","lastModifiedDate":"2023-10-04"},{"lineNumber":120,"author":{"gitId":"JeremyYong128"},"content":"        if (otherJob \u003d\u003d this) {","lastModifiedDate":"2023-10-04"},{"lineNumber":121,"author":{"gitId":"JeremyYong128"},"content":"            return true;","lastModifiedDate":"2023-10-04"},{"lineNumber":122,"author":{"gitId":"JeremyYong128"},"content":"        }","lastModifiedDate":"2023-10-04"},{"lineNumber":123,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":124,"author":{"gitId":"JeremyYong128"},"content":"        return otherJob !\u003d null","lastModifiedDate":"2023-10-04"},{"lineNumber":125,"author":{"gitId":"JeremyYong128"},"content":"            \u0026\u0026 otherJob.getRole().equals(getRole())","lastModifiedDate":"2023-10-04"},{"lineNumber":126,"author":{"gitId":"peiran18"},"content":"            \u0026\u0026 otherJob.getCompany().equals(getCompany());","lastModifiedDate":"2023-10-15"},{"lineNumber":127,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":128,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":129,"author":{"gitId":"JeremyYong128"},"content":"    /**","lastModifiedDate":"2023-10-04"},{"lineNumber":130,"author":{"gitId":"JeremyYong128"},"content":"     * Returns true if both jobs have the same role, company and data fields.","lastModifiedDate":"2023-10-04"},{"lineNumber":131,"author":{"gitId":"JeremyYong128"},"content":"     * This defines a stronger notion of equality between two jobs.","lastModifiedDate":"2023-10-04"},{"lineNumber":132,"author":{"gitId":"JeremyYong128"},"content":"     */","lastModifiedDate":"2023-10-04"},{"lineNumber":133,"author":{"gitId":"JeremyYong128"},"content":"    @Override","lastModifiedDate":"2023-10-04"},{"lineNumber":134,"author":{"gitId":"JeremyYong128"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-04"},{"lineNumber":135,"author":{"gitId":"JeremyYong128"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-04"},{"lineNumber":136,"author":{"gitId":"JeremyYong128"},"content":"            return true;","lastModifiedDate":"2023-10-04"},{"lineNumber":137,"author":{"gitId":"JeremyYong128"},"content":"        }","lastModifiedDate":"2023-10-04"},{"lineNumber":138,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":139,"author":{"gitId":"JeremyYong128"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-04"},{"lineNumber":140,"author":{"gitId":"JeremyYong128"},"content":"        if (!(other instanceof Job)) {","lastModifiedDate":"2023-10-04"},{"lineNumber":141,"author":{"gitId":"JeremyYong128"},"content":"            return false;","lastModifiedDate":"2023-10-04"},{"lineNumber":142,"author":{"gitId":"JeremyYong128"},"content":"        }","lastModifiedDate":"2023-10-04"},{"lineNumber":143,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":144,"author":{"gitId":"JeremyYong128"},"content":"        Job otherJob \u003d (Job) other;","lastModifiedDate":"2023-10-04"},{"lineNumber":145,"author":{"gitId":"JeremyYong128"},"content":"        return role.equals(otherJob.role)","lastModifiedDate":"2023-10-04"},{"lineNumber":146,"author":{"gitId":"peiran18"},"content":"            \u0026\u0026 company.equals(otherJob.company)","lastModifiedDate":"2023-10-15"},{"lineNumber":147,"author":{"gitId":"peiran18"},"content":"            \u0026\u0026 deadline.equals(otherJob.deadline)","lastModifiedDate":"2023-10-19"},{"lineNumber":148,"author":{"gitId":"czhiruo"},"content":"            \u0026\u0026 status.equals(otherJob.status)","lastModifiedDate":"2023-10-20"},{"lineNumber":149,"author":{"gitId":"migfoo02"},"content":"            \u0026\u0026 jobType.equals(otherJob.jobType)","lastModifiedDate":"2023-10-22"},{"lineNumber":150,"author":{"gitId":"czhiruo"},"content":"            \u0026\u0026 industry.equals(otherJob.industry);","lastModifiedDate":"2023-10-20"},{"lineNumber":151,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":152,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":153,"author":{"gitId":"JeremyYong128"},"content":"    @Override","lastModifiedDate":"2023-10-04"},{"lineNumber":154,"author":{"gitId":"JeremyYong128"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-04"},{"lineNumber":155,"author":{"gitId":"JeremyYong128"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2023-10-04"},{"lineNumber":156,"author":{"gitId":"czhiruo"},"content":"        return Objects.hash(role, company, deadline, status, jobType, industry);","lastModifiedDate":"2023-10-28"},{"lineNumber":157,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":158,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":159,"author":{"gitId":"JeremyYong128"},"content":"    @Override","lastModifiedDate":"2023-10-04"},{"lineNumber":160,"author":{"gitId":"JeremyYong128"},"content":"    public String toString() {","lastModifiedDate":"2023-10-04"},{"lineNumber":161,"author":{"gitId":"JeremyYong128"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-04"},{"lineNumber":162,"author":{"gitId":"JeremyYong128"},"content":"            .add(\"role\", role)","lastModifiedDate":"2023-10-04"},{"lineNumber":163,"author":{"gitId":"JeremyYong128"},"content":"            .add(\"company\", company)","lastModifiedDate":"2023-10-04"},{"lineNumber":164,"author":{"gitId":"evanyan13"},"content":"            .add(\"deadline\", deadline)","lastModifiedDate":"2023-10-13"},{"lineNumber":165,"author":{"gitId":"peiran18"},"content":"            .add(\"status\", status)","lastModifiedDate":"2023-10-19"},{"lineNumber":166,"author":{"gitId":"migfoo02"},"content":"            .add(\"jobType\", jobType)","lastModifiedDate":"2023-10-20"},{"lineNumber":167,"author":{"gitId":"czhiruo"},"content":"            .add(\"industry\", industry)","lastModifiedDate":"2023-10-20"},{"lineNumber":168,"author":{"gitId":"JeremyYong128"},"content":"            .toString();","lastModifiedDate":"2023-10-04"},{"lineNumber":169,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":170,"author":{"gitId":"JeremyYong128"},"content":"}","lastModifiedDate":"2023-10-04"}],"authorContributionMap":{"czhiruo":21,"evanyan13":12,"peiran18":54,"JeremyYong128":72,"migfoo02":11}},{"path":"src/main/java/seedu/application/model/job/JobType.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"migfoo02"},"content":"package seedu.application.model.job;","lastModifiedDate":"2023-10-22"},{"lineNumber":2,"author":{"gitId":"migfoo02"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":3,"author":{"gitId":"migfoo02"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-22"},{"lineNumber":4,"author":{"gitId":"migfoo02"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":5,"author":{"gitId":"migfoo02"},"content":"import seedu.application.commons.util.AppUtil;","lastModifiedDate":"2023-10-22"},{"lineNumber":6,"author":{"gitId":"migfoo02"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":7,"author":{"gitId":"migfoo02"},"content":"/**","lastModifiedDate":"2023-10-22"},{"lineNumber":8,"author":{"gitId":"migfoo02"},"content":" * Represents a Job\u0027s jobType in the application book.","lastModifiedDate":"2023-10-22"},{"lineNumber":9,"author":{"gitId":"migfoo02"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidJobType(String)}","lastModifiedDate":"2023-10-22"},{"lineNumber":10,"author":{"gitId":"migfoo02"},"content":" */","lastModifiedDate":"2023-10-22"},{"lineNumber":11,"author":{"gitId":"migfoo02"},"content":"public class JobType {","lastModifiedDate":"2023-10-22"},{"lineNumber":12,"author":{"gitId":"migfoo02"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":13,"author":{"gitId":"migfoo02"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-10-22"},{"lineNumber":14,"author":{"gitId":"JeremyYong128"},"content":"            \"Type is case-insensitive and should only be in the form: FULL_TIME, PART_TIME, INTERNSHIP,\"","lastModifiedDate":"2023-10-31"},{"lineNumber":15,"author":{"gitId":"JeremyYong128"},"content":"                    + \" TEMPORARY, CONTRACT, FREELANCE, VOLUNTEER\";","lastModifiedDate":"2023-10-31"},{"lineNumber":16,"author":{"gitId":"migfoo02"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":17,"author":{"gitId":"migfoo02"},"content":"    public static final String TO_ADD_JOB_TYPE \u003d \"TO_ADD_JOB_TYPE\";","lastModifiedDate":"2023-10-22"},{"lineNumber":18,"author":{"gitId":"migfoo02"},"content":"    public static final JobType EMPTY_JOB_TYPE \u003d new JobType(TO_ADD_JOB_TYPE);","lastModifiedDate":"2023-10-22"},{"lineNumber":19,"author":{"gitId":"migfoo02"},"content":"    public final String jobType;","lastModifiedDate":"2023-10-22"},{"lineNumber":20,"author":{"gitId":"migfoo02"},"content":"    /**","lastModifiedDate":"2023-10-22"},{"lineNumber":21,"author":{"gitId":"migfoo02"},"content":"     * Enum for job types","lastModifiedDate":"2023-10-22"},{"lineNumber":22,"author":{"gitId":"migfoo02"},"content":"     */","lastModifiedDate":"2023-10-22"},{"lineNumber":23,"author":{"gitId":"migfoo02"},"content":"    public enum JobTypes {","lastModifiedDate":"2023-10-22"},{"lineNumber":24,"author":{"gitId":"migfoo02"},"content":"        FULL_TIME, PART_TIME, INTERNSHIP, TEMPORARY, CONTRACT, FREELANCE, VOLUNTEER","lastModifiedDate":"2023-10-22"},{"lineNumber":25,"author":{"gitId":"migfoo02"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":26,"author":{"gitId":"migfoo02"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":27,"author":{"gitId":"migfoo02"},"content":"    /**","lastModifiedDate":"2023-10-22"},{"lineNumber":28,"author":{"gitId":"migfoo02"},"content":"     * Constructs a {@code JobType}.","lastModifiedDate":"2023-10-22"},{"lineNumber":29,"author":{"gitId":"migfoo02"},"content":"     *","lastModifiedDate":"2023-10-22"},{"lineNumber":30,"author":{"gitId":"migfoo02"},"content":"     * @param jobType A valid jobType.","lastModifiedDate":"2023-10-22"},{"lineNumber":31,"author":{"gitId":"migfoo02"},"content":"     */","lastModifiedDate":"2023-10-22"},{"lineNumber":32,"author":{"gitId":"migfoo02"},"content":"    public JobType(String jobType) {","lastModifiedDate":"2023-10-22"},{"lineNumber":33,"author":{"gitId":"migfoo02"},"content":"        requireNonNull(jobType);","lastModifiedDate":"2023-10-22"},{"lineNumber":34,"author":{"gitId":"migfoo02"},"content":"        AppUtil.checkArgument(isValidJobType(jobType), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-22"},{"lineNumber":35,"author":{"gitId":"migfoo02"},"content":"        if (isEmptyJobType(jobType)) {","lastModifiedDate":"2023-10-22"},{"lineNumber":36,"author":{"gitId":"migfoo02"},"content":"            this.jobType \u003d TO_ADD_JOB_TYPE;","lastModifiedDate":"2023-10-22"},{"lineNumber":37,"author":{"gitId":"migfoo02"},"content":"        } else {","lastModifiedDate":"2023-10-22"},{"lineNumber":38,"author":{"gitId":"migfoo02"},"content":"            this.jobType \u003d jobType;","lastModifiedDate":"2023-10-22"},{"lineNumber":39,"author":{"gitId":"migfoo02"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":40,"author":{"gitId":"migfoo02"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":41,"author":{"gitId":"migfoo02"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":42,"author":{"gitId":"migfoo02"},"content":"    /**","lastModifiedDate":"2023-10-22"},{"lineNumber":43,"author":{"gitId":"migfoo02"},"content":"     * Returns true if a given string is a valid jobType.","lastModifiedDate":"2023-10-22"},{"lineNumber":44,"author":{"gitId":"migfoo02"},"content":"     */","lastModifiedDate":"2023-10-22"},{"lineNumber":45,"author":{"gitId":"migfoo02"},"content":"    public static boolean isValidJobType(String test) {","lastModifiedDate":"2023-10-22"},{"lineNumber":46,"author":{"gitId":"migfoo02"},"content":"        if (isEmptyJobType(test)) {","lastModifiedDate":"2023-10-22"},{"lineNumber":47,"author":{"gitId":"migfoo02"},"content":"            return true;","lastModifiedDate":"2023-10-22"},{"lineNumber":48,"author":{"gitId":"migfoo02"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":49,"author":{"gitId":"migfoo02"},"content":"        for (JobType.JobTypes t : JobType.JobTypes.values()) {","lastModifiedDate":"2023-10-22"},{"lineNumber":50,"author":{"gitId":"migfoo02"},"content":"            if (test.equalsIgnoreCase(t.toString())) {","lastModifiedDate":"2023-10-22"},{"lineNumber":51,"author":{"gitId":"migfoo02"},"content":"                return true;","lastModifiedDate":"2023-10-22"},{"lineNumber":52,"author":{"gitId":"migfoo02"},"content":"            }","lastModifiedDate":"2023-10-22"},{"lineNumber":53,"author":{"gitId":"migfoo02"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":54,"author":{"gitId":"migfoo02"},"content":"        return false;","lastModifiedDate":"2023-10-22"},{"lineNumber":55,"author":{"gitId":"migfoo02"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":56,"author":{"gitId":"migfoo02"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":57,"author":{"gitId":"migfoo02"},"content":"    /**","lastModifiedDate":"2023-10-22"},{"lineNumber":58,"author":{"gitId":"migfoo02"},"content":"     * Returns true if a given string is an empty jobType.","lastModifiedDate":"2023-10-22"},{"lineNumber":59,"author":{"gitId":"migfoo02"},"content":"     */","lastModifiedDate":"2023-10-22"},{"lineNumber":60,"author":{"gitId":"migfoo02"},"content":"    private static boolean isEmptyJobType(String test) {","lastModifiedDate":"2023-10-22"},{"lineNumber":61,"author":{"gitId":"migfoo02"},"content":"        return test.equals(TO_ADD_JOB_TYPE);","lastModifiedDate":"2023-10-22"},{"lineNumber":62,"author":{"gitId":"migfoo02"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":63,"author":{"gitId":"migfoo02"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":64,"author":{"gitId":"migfoo02"},"content":"    @Override","lastModifiedDate":"2023-10-22"},{"lineNumber":65,"author":{"gitId":"migfoo02"},"content":"    public String toString() {","lastModifiedDate":"2023-10-22"},{"lineNumber":66,"author":{"gitId":"migfoo02"},"content":"        if (isEmptyJobType(jobType)) {","lastModifiedDate":"2023-10-22"},{"lineNumber":67,"author":{"gitId":"migfoo02"},"content":"            return TO_ADD_JOB_TYPE;","lastModifiedDate":"2023-10-22"},{"lineNumber":68,"author":{"gitId":"migfoo02"},"content":"        } else {","lastModifiedDate":"2023-10-22"},{"lineNumber":69,"author":{"gitId":"migfoo02"},"content":"            return jobType;","lastModifiedDate":"2023-10-22"},{"lineNumber":70,"author":{"gitId":"migfoo02"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":71,"author":{"gitId":"migfoo02"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":72,"author":{"gitId":"migfoo02"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":73,"author":{"gitId":"migfoo02"},"content":"    @Override","lastModifiedDate":"2023-10-22"},{"lineNumber":74,"author":{"gitId":"migfoo02"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-22"},{"lineNumber":75,"author":{"gitId":"migfoo02"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-22"},{"lineNumber":76,"author":{"gitId":"migfoo02"},"content":"            return true;","lastModifiedDate":"2023-10-22"},{"lineNumber":77,"author":{"gitId":"migfoo02"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":78,"author":{"gitId":"migfoo02"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":79,"author":{"gitId":"migfoo02"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-22"},{"lineNumber":80,"author":{"gitId":"migfoo02"},"content":"        if (!(other instanceof JobType)) {","lastModifiedDate":"2023-10-22"},{"lineNumber":81,"author":{"gitId":"migfoo02"},"content":"            return false;","lastModifiedDate":"2023-10-22"},{"lineNumber":82,"author":{"gitId":"migfoo02"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":83,"author":{"gitId":"migfoo02"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":84,"author":{"gitId":"migfoo02"},"content":"        JobType otherJobType \u003d (JobType) other;","lastModifiedDate":"2023-10-22"},{"lineNumber":85,"author":{"gitId":"migfoo02"},"content":"        return jobType.equals(otherJobType.jobType);","lastModifiedDate":"2023-10-22"},{"lineNumber":86,"author":{"gitId":"migfoo02"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":87,"author":{"gitId":"migfoo02"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":88,"author":{"gitId":"migfoo02"},"content":"    @Override","lastModifiedDate":"2023-10-22"},{"lineNumber":89,"author":{"gitId":"migfoo02"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-22"},{"lineNumber":90,"author":{"gitId":"migfoo02"},"content":"        return jobType.hashCode();","lastModifiedDate":"2023-10-22"},{"lineNumber":91,"author":{"gitId":"migfoo02"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":92,"author":{"gitId":"migfoo02"},"content":"}","lastModifiedDate":"2023-10-22"}],"authorContributionMap":{"JeremyYong128":2,"migfoo02":90}},{"path":"src/main/java/seedu/application/model/job/Role.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"evanyan13"},"content":"package seedu.application.model.job;","lastModifiedDate":"2023-10-10"},{"lineNumber":2,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":3,"author":{"gitId":"JeremyYong128"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-04"},{"lineNumber":4,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":5,"author":{"gitId":"evanyan13"},"content":"import seedu.application.commons.util.AppUtil;","lastModifiedDate":"2023-10-10"},{"lineNumber":6,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":7,"author":{"gitId":"JeremyYong128"},"content":"/**","lastModifiedDate":"2023-10-04"},{"lineNumber":8,"author":{"gitId":"evanyan13"},"content":" * Represents a Job\u0027s role in the application book.","lastModifiedDate":"2023-10-10"},{"lineNumber":9,"author":{"gitId":"JeremyYong128"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidRole(String)}","lastModifiedDate":"2023-10-04"},{"lineNumber":10,"author":{"gitId":"JeremyYong128"},"content":" */","lastModifiedDate":"2023-10-04"},{"lineNumber":11,"author":{"gitId":"JeremyYong128"},"content":"public class Role {","lastModifiedDate":"2023-10-04"},{"lineNumber":12,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":13,"author":{"gitId":"JeremyYong128"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-10-04"},{"lineNumber":14,"author":{"gitId":"migfoo02"},"content":"            \"Role descriptions should adhere to the following constraints:\\n\"","lastModifiedDate":"2023-10-16"},{"lineNumber":15,"author":{"gitId":"migfoo02"},"content":"                    + \"1. Only contain alphanumeric characters and spaces\\n\"","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"migfoo02"},"content":"                    + \"2. Should not be blank\";","lastModifiedDate":"2023-10-16"},{"lineNumber":17,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":18,"author":{"gitId":"JeremyYong128"},"content":"    /*","lastModifiedDate":"2023-10-04"},{"lineNumber":19,"author":{"gitId":"JeremyYong128"},"content":"     * The first character of the role must not be a whitespace,","lastModifiedDate":"2023-10-04"},{"lineNumber":20,"author":{"gitId":"JeremyYong128"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2023-10-04"},{"lineNumber":21,"author":{"gitId":"JeremyYong128"},"content":"     */","lastModifiedDate":"2023-10-04"},{"lineNumber":22,"author":{"gitId":"JeremyYong128"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2023-10-04"},{"lineNumber":23,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":24,"author":{"gitId":"JeremyYong128"},"content":"    public final String description;","lastModifiedDate":"2023-10-04"},{"lineNumber":25,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":26,"author":{"gitId":"JeremyYong128"},"content":"    /**","lastModifiedDate":"2023-10-04"},{"lineNumber":27,"author":{"gitId":"JeremyYong128"},"content":"     * Constructs a {@code Role}.","lastModifiedDate":"2023-10-04"},{"lineNumber":28,"author":{"gitId":"JeremyYong128"},"content":"     *","lastModifiedDate":"2023-10-04"},{"lineNumber":29,"author":{"gitId":"JeremyYong128"},"content":"     * @param description A valid description.","lastModifiedDate":"2023-10-04"},{"lineNumber":30,"author":{"gitId":"JeremyYong128"},"content":"     */","lastModifiedDate":"2023-10-04"},{"lineNumber":31,"author":{"gitId":"JeremyYong128"},"content":"    public Role(String description) {","lastModifiedDate":"2023-10-04"},{"lineNumber":32,"author":{"gitId":"JeremyYong128"},"content":"        requireNonNull(description);","lastModifiedDate":"2023-10-04"},{"lineNumber":33,"author":{"gitId":"evanyan13"},"content":"        AppUtil.checkArgument(isValidRole(description), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-10"},{"lineNumber":34,"author":{"gitId":"JeremyYong128"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-10-04"},{"lineNumber":35,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":36,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":37,"author":{"gitId":"JeremyYong128"},"content":"    /**","lastModifiedDate":"2023-10-04"},{"lineNumber":38,"author":{"gitId":"JeremyYong128"},"content":"     * Returns true if a given string is a valid role.","lastModifiedDate":"2023-10-04"},{"lineNumber":39,"author":{"gitId":"JeremyYong128"},"content":"     */","lastModifiedDate":"2023-10-04"},{"lineNumber":40,"author":{"gitId":"JeremyYong128"},"content":"    public static boolean isValidRole(String test) {","lastModifiedDate":"2023-10-04"},{"lineNumber":41,"author":{"gitId":"JeremyYong128"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-10-04"},{"lineNumber":42,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":43,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":44,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":45,"author":{"gitId":"JeremyYong128"},"content":"    @Override","lastModifiedDate":"2023-10-04"},{"lineNumber":46,"author":{"gitId":"JeremyYong128"},"content":"    public String toString() {","lastModifiedDate":"2023-10-04"},{"lineNumber":47,"author":{"gitId":"JeremyYong128"},"content":"        return description;","lastModifiedDate":"2023-10-04"},{"lineNumber":48,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":49,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":50,"author":{"gitId":"JeremyYong128"},"content":"    @Override","lastModifiedDate":"2023-10-04"},{"lineNumber":51,"author":{"gitId":"JeremyYong128"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-04"},{"lineNumber":52,"author":{"gitId":"JeremyYong128"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-04"},{"lineNumber":53,"author":{"gitId":"JeremyYong128"},"content":"            return true;","lastModifiedDate":"2023-10-04"},{"lineNumber":54,"author":{"gitId":"JeremyYong128"},"content":"        }","lastModifiedDate":"2023-10-04"},{"lineNumber":55,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":56,"author":{"gitId":"JeremyYong128"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-04"},{"lineNumber":57,"author":{"gitId":"JeremyYong128"},"content":"        if (!(other instanceof Role)) {","lastModifiedDate":"2023-10-04"},{"lineNumber":58,"author":{"gitId":"JeremyYong128"},"content":"            return false;","lastModifiedDate":"2023-10-04"},{"lineNumber":59,"author":{"gitId":"JeremyYong128"},"content":"        }","lastModifiedDate":"2023-10-04"},{"lineNumber":60,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":61,"author":{"gitId":"JeremyYong128"},"content":"        Role otherRole \u003d (Role) other;","lastModifiedDate":"2023-10-04"},{"lineNumber":62,"author":{"gitId":"JeremyYong128"},"content":"        return description.equals(otherRole.description);","lastModifiedDate":"2023-10-04"},{"lineNumber":63,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":64,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":65,"author":{"gitId":"JeremyYong128"},"content":"    @Override","lastModifiedDate":"2023-10-04"},{"lineNumber":66,"author":{"gitId":"JeremyYong128"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-04"},{"lineNumber":67,"author":{"gitId":"JeremyYong128"},"content":"        return description.hashCode();","lastModifiedDate":"2023-10-04"},{"lineNumber":68,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":69,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":70,"author":{"gitId":"JeremyYong128"},"content":"}","lastModifiedDate":"2023-10-04"}],"authorContributionMap":{"evanyan13":5,"JeremyYong128":62,"migfoo02":3}},{"path":"src/main/java/seedu/application/model/job/Status.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"peiran18"},"content":"package seedu.application.model.job;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"peiran18"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"peiran18"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"peiran18"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"peiran18"},"content":"import seedu.application.commons.util.AppUtil;","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"peiran18"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"peiran18"},"content":"/**","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"peiran18"},"content":" * Represents a Job\u0027s status in the application book.","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"peiran18"},"content":" */","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"peiran18"},"content":"public class Status {","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"peiran18"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"peiran18"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"JeremyYong128"},"content":"            \"Status is case-insensitive and should only be in the form: TO_BE_SUBMITTED, PENDING, APPROVED, REJECTED\";","lastModifiedDate":"2023-10-31"},{"lineNumber":14,"author":{"gitId":"peiran18"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"peiran18"},"content":"    public static final String IN_PROGRESS \u003d JobStatus.TO_BE_SUBMITTED.toString();","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"peiran18"},"content":"    public static final Status DEFAULT_STATUS \u003d new Status(IN_PROGRESS);","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"peiran18"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"peiran18"},"content":"    public final String status;","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"peiran18"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"peiran18"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"peiran18"},"content":"     * The enumeration representing the status of a job application.","lastModifiedDate":"2023-10-15"},{"lineNumber":22,"author":{"gitId":"peiran18"},"content":"     * Possible values are:","lastModifiedDate":"2023-10-15"},{"lineNumber":23,"author":{"gitId":"peiran18"},"content":"     *   TO_BE_SUBMITTED: The job application is yet to be submitted.","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"peiran18"},"content":"     *   PENDING: The job application is pending review or processing.","lastModifiedDate":"2023-10-15"},{"lineNumber":25,"author":{"gitId":"peiran18"},"content":"     *   APPROVED: The job application has been approved.","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"peiran18"},"content":"     *   REJECTED: The job application has been rejected.","lastModifiedDate":"2023-10-15"},{"lineNumber":27,"author":{"gitId":"peiran18"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"peiran18"},"content":"    public enum JobStatus {","lastModifiedDate":"2023-10-15"},{"lineNumber":29,"author":{"gitId":"peiran18"},"content":"        TO_BE_SUBMITTED, PENDING, APPROVED, REJECTED","lastModifiedDate":"2023-10-15"},{"lineNumber":30,"author":{"gitId":"peiran18"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":31,"author":{"gitId":"peiran18"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":32,"author":{"gitId":"peiran18"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":33,"author":{"gitId":"peiran18"},"content":"     * Constructs a {@code Status}.","lastModifiedDate":"2023-10-15"},{"lineNumber":34,"author":{"gitId":"peiran18"},"content":"     *","lastModifiedDate":"2023-10-15"},{"lineNumber":35,"author":{"gitId":"peiran18"},"content":"     * @param status A valid status.","lastModifiedDate":"2023-10-15"},{"lineNumber":36,"author":{"gitId":"peiran18"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":37,"author":{"gitId":"peiran18"},"content":"    public Status(String status) {","lastModifiedDate":"2023-10-15"},{"lineNumber":38,"author":{"gitId":"peiran18"},"content":"        requireNonNull(status);","lastModifiedDate":"2023-10-15"},{"lineNumber":39,"author":{"gitId":"peiran18"},"content":"        AppUtil.checkArgument(isValidStatus(status), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-15"},{"lineNumber":40,"author":{"gitId":"peiran18"},"content":"        this.status \u003d status.toUpperCase();","lastModifiedDate":"2023-10-15"},{"lineNumber":41,"author":{"gitId":"peiran18"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":42,"author":{"gitId":"peiran18"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":43,"author":{"gitId":"peiran18"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":44,"author":{"gitId":"czhiruo"},"content":"     * Returns true if a given string is a valid status.","lastModifiedDate":"2023-10-20"},{"lineNumber":45,"author":{"gitId":"peiran18"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":46,"author":{"gitId":"peiran18"},"content":"    public static boolean isValidStatus(String test) {","lastModifiedDate":"2023-10-15"},{"lineNumber":47,"author":{"gitId":"peiran18"},"content":"        for (JobStatus s : JobStatus.values()) {","lastModifiedDate":"2023-10-15"},{"lineNumber":48,"author":{"gitId":"peiran18"},"content":"            if (test.equalsIgnoreCase(s.toString())) {","lastModifiedDate":"2023-10-15"},{"lineNumber":49,"author":{"gitId":"peiran18"},"content":"                return true;","lastModifiedDate":"2023-10-15"},{"lineNumber":50,"author":{"gitId":"peiran18"},"content":"            }","lastModifiedDate":"2023-10-15"},{"lineNumber":51,"author":{"gitId":"peiran18"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":52,"author":{"gitId":"peiran18"},"content":"        return false;","lastModifiedDate":"2023-10-15"},{"lineNumber":53,"author":{"gitId":"peiran18"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":54,"author":{"gitId":"peiran18"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":55,"author":{"gitId":"peiran18"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":56,"author":{"gitId":"peiran18"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":57,"author":{"gitId":"peiran18"},"content":"    public String toString() {","lastModifiedDate":"2023-10-15"},{"lineNumber":58,"author":{"gitId":"peiran18"},"content":"        return status;","lastModifiedDate":"2023-10-15"},{"lineNumber":59,"author":{"gitId":"peiran18"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":60,"author":{"gitId":"peiran18"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":61,"author":{"gitId":"peiran18"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":62,"author":{"gitId":"peiran18"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-15"},{"lineNumber":63,"author":{"gitId":"peiran18"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-15"},{"lineNumber":64,"author":{"gitId":"peiran18"},"content":"            return true;","lastModifiedDate":"2023-10-15"},{"lineNumber":65,"author":{"gitId":"peiran18"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":66,"author":{"gitId":"peiran18"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":67,"author":{"gitId":"peiran18"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-15"},{"lineNumber":68,"author":{"gitId":"peiran18"},"content":"        if (!(other instanceof Status)) {","lastModifiedDate":"2023-10-15"},{"lineNumber":69,"author":{"gitId":"peiran18"},"content":"            return false;","lastModifiedDate":"2023-10-15"},{"lineNumber":70,"author":{"gitId":"peiran18"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":71,"author":{"gitId":"peiran18"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":72,"author":{"gitId":"peiran18"},"content":"        Status otherStatus \u003d (Status) other;","lastModifiedDate":"2023-10-15"},{"lineNumber":73,"author":{"gitId":"peiran18"},"content":"        return status.equals(otherStatus.status);","lastModifiedDate":"2023-10-15"},{"lineNumber":74,"author":{"gitId":"peiran18"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":75,"author":{"gitId":"peiran18"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":76,"author":{"gitId":"peiran18"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":77,"author":{"gitId":"peiran18"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-15"},{"lineNumber":78,"author":{"gitId":"peiran18"},"content":"        return status.hashCode();","lastModifiedDate":"2023-10-15"},{"lineNumber":79,"author":{"gitId":"peiran18"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":80,"author":{"gitId":"peiran18"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":81,"author":{"gitId":"peiran18"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"czhiruo":1,"peiran18":79,"JeremyYong128":1}},{"path":"src/main/java/seedu/application/model/job/UniqueJobList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"evanyan13"},"content":"package seedu.application.model.job;","lastModifiedDate":"2023-10-10"},{"lineNumber":2,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":3,"author":{"gitId":"JeremyYong128"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-04"},{"lineNumber":4,"author":{"gitId":"evanyan13"},"content":"import static seedu.application.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-10-10"},{"lineNumber":5,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":6,"author":{"gitId":"JeremyYong128"},"content":"import java.util.Iterator;","lastModifiedDate":"2023-10-04"},{"lineNumber":7,"author":{"gitId":"JeremyYong128"},"content":"import java.util.List;","lastModifiedDate":"2023-10-04"},{"lineNumber":8,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":9,"author":{"gitId":"JeremyYong128"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-10-04"},{"lineNumber":10,"author":{"gitId":"JeremyYong128"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-10-04"},{"lineNumber":11,"author":{"gitId":"evanyan13"},"content":"import seedu.application.model.job.exceptions.DuplicateJobException;","lastModifiedDate":"2023-10-10"},{"lineNumber":12,"author":{"gitId":"evanyan13"},"content":"import seedu.application.model.job.exceptions.JobNotFoundException;","lastModifiedDate":"2023-10-10"},{"lineNumber":13,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":14,"author":{"gitId":"JeremyYong128"},"content":"/**","lastModifiedDate":"2023-10-04"},{"lineNumber":15,"author":{"gitId":"JeremyYong128"},"content":" * A list of persons that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2023-10-04"},{"lineNumber":16,"author":{"gitId":"JeremyYong128"},"content":" * A person is considered unique by comparing using {@code Person#isSamePerson(Person)}. As such, adding and updating of","lastModifiedDate":"2023-10-04"},{"lineNumber":17,"author":{"gitId":"JeremyYong128"},"content":" * persons uses Person#isSamePerson(Person) for equality so as to ensure that the person being added or updated is","lastModifiedDate":"2023-10-04"},{"lineNumber":18,"author":{"gitId":"JeremyYong128"},"content":" * unique in terms of identity in the UniquePersonList. However, the removal of a person uses Person#equals(Object) so","lastModifiedDate":"2023-10-04"},{"lineNumber":19,"author":{"gitId":"JeremyYong128"},"content":" * as to ensure that the person with exactly the same fields will be removed.","lastModifiedDate":"2023-10-04"},{"lineNumber":20,"author":{"gitId":"JeremyYong128"},"content":" *","lastModifiedDate":"2023-10-04"},{"lineNumber":21,"author":{"gitId":"JeremyYong128"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2023-10-04"},{"lineNumber":22,"author":{"gitId":"JeremyYong128"},"content":" *","lastModifiedDate":"2023-10-04"},{"lineNumber":23,"author":{"gitId":"JeremyYong128"},"content":" * @see Job#isSameJob(Job)","lastModifiedDate":"2023-10-04"},{"lineNumber":24,"author":{"gitId":"JeremyYong128"},"content":" */","lastModifiedDate":"2023-10-04"},{"lineNumber":25,"author":{"gitId":"JeremyYong128"},"content":"public class UniqueJobList implements Iterable\u003cJob\u003e {","lastModifiedDate":"2023-10-04"},{"lineNumber":26,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":27,"author":{"gitId":"JeremyYong128"},"content":"    private final ObservableList\u003cJob\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-10-04"},{"lineNumber":28,"author":{"gitId":"JeremyYong128"},"content":"    private final ObservableList\u003cJob\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2023-10-04"},{"lineNumber":29,"author":{"gitId":"JeremyYong128"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2023-10-04"},{"lineNumber":30,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":31,"author":{"gitId":"JeremyYong128"},"content":"    /**","lastModifiedDate":"2023-10-04"},{"lineNumber":32,"author":{"gitId":"JeremyYong128"},"content":"     * Returns true if the list contains an equivalent job as the given argument.","lastModifiedDate":"2023-10-04"},{"lineNumber":33,"author":{"gitId":"JeremyYong128"},"content":"     */","lastModifiedDate":"2023-10-04"},{"lineNumber":34,"author":{"gitId":"JeremyYong128"},"content":"    public boolean contains(Job toCheck) {","lastModifiedDate":"2023-10-04"},{"lineNumber":35,"author":{"gitId":"JeremyYong128"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2023-10-04"},{"lineNumber":36,"author":{"gitId":"JeremyYong128"},"content":"        return internalList.stream().anyMatch(toCheck::isSameJob);","lastModifiedDate":"2023-10-04"},{"lineNumber":37,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":38,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":39,"author":{"gitId":"JeremyYong128"},"content":"    /**","lastModifiedDate":"2023-10-04"},{"lineNumber":40,"author":{"gitId":"JeremyYong128"},"content":"     * Adds a job to the list.","lastModifiedDate":"2023-10-04"},{"lineNumber":41,"author":{"gitId":"JeremyYong128"},"content":"     * The job must not already exist in the list.","lastModifiedDate":"2023-10-04"},{"lineNumber":42,"author":{"gitId":"JeremyYong128"},"content":"     */","lastModifiedDate":"2023-10-04"},{"lineNumber":43,"author":{"gitId":"JeremyYong128"},"content":"    public void add(Job toAdd) {","lastModifiedDate":"2023-10-04"},{"lineNumber":44,"author":{"gitId":"JeremyYong128"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2023-10-04"},{"lineNumber":45,"author":{"gitId":"JeremyYong128"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2023-10-04"},{"lineNumber":46,"author":{"gitId":"JeremyYong128"},"content":"            throw new DuplicateJobException();","lastModifiedDate":"2023-10-04"},{"lineNumber":47,"author":{"gitId":"JeremyYong128"},"content":"        }","lastModifiedDate":"2023-10-04"},{"lineNumber":48,"author":{"gitId":"JeremyYong128"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2023-10-04"},{"lineNumber":49,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":50,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":51,"author":{"gitId":"JeremyYong128"},"content":"    /**","lastModifiedDate":"2023-10-04"},{"lineNumber":52,"author":{"gitId":"JeremyYong128"},"content":"     * Replaces the job {@code target} in the list with {@code editedJob}.","lastModifiedDate":"2023-10-04"},{"lineNumber":53,"author":{"gitId":"JeremyYong128"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2023-10-04"},{"lineNumber":54,"author":{"gitId":"JeremyYong128"},"content":"     * The job identity of {@code editedJob} must not be the same as another existing job in the list.","lastModifiedDate":"2023-10-04"},{"lineNumber":55,"author":{"gitId":"JeremyYong128"},"content":"     */","lastModifiedDate":"2023-10-04"},{"lineNumber":56,"author":{"gitId":"JeremyYong128"},"content":"    public void setJob(Job target, Job editedJob) {","lastModifiedDate":"2023-10-04"},{"lineNumber":57,"author":{"gitId":"JeremyYong128"},"content":"        requireAllNonNull(target, editedJob);","lastModifiedDate":"2023-10-04"},{"lineNumber":58,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":59,"author":{"gitId":"JeremyYong128"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2023-10-04"},{"lineNumber":60,"author":{"gitId":"JeremyYong128"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2023-10-04"},{"lineNumber":61,"author":{"gitId":"JeremyYong128"},"content":"            throw new JobNotFoundException();","lastModifiedDate":"2023-10-04"},{"lineNumber":62,"author":{"gitId":"JeremyYong128"},"content":"        }","lastModifiedDate":"2023-10-04"},{"lineNumber":63,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":64,"author":{"gitId":"JeremyYong128"},"content":"        if (!target.isSameJob(editedJob) \u0026\u0026 contains(editedJob)) {","lastModifiedDate":"2023-10-04"},{"lineNumber":65,"author":{"gitId":"JeremyYong128"},"content":"            throw new DuplicateJobException();","lastModifiedDate":"2023-10-04"},{"lineNumber":66,"author":{"gitId":"JeremyYong128"},"content":"        }","lastModifiedDate":"2023-10-04"},{"lineNumber":67,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":68,"author":{"gitId":"JeremyYong128"},"content":"        internalList.set(index, editedJob);","lastModifiedDate":"2023-10-04"},{"lineNumber":69,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":70,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":71,"author":{"gitId":"JeremyYong128"},"content":"    /**","lastModifiedDate":"2023-10-04"},{"lineNumber":72,"author":{"gitId":"JeremyYong128"},"content":"     * Removes the equivalent job from the list.","lastModifiedDate":"2023-10-04"},{"lineNumber":73,"author":{"gitId":"JeremyYong128"},"content":"     * The job must exist in the list.","lastModifiedDate":"2023-10-04"},{"lineNumber":74,"author":{"gitId":"JeremyYong128"},"content":"     */","lastModifiedDate":"2023-10-04"},{"lineNumber":75,"author":{"gitId":"JeremyYong128"},"content":"    public void remove(Job toRemove) {","lastModifiedDate":"2023-10-04"},{"lineNumber":76,"author":{"gitId":"JeremyYong128"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2023-10-04"},{"lineNumber":77,"author":{"gitId":"JeremyYong128"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2023-10-04"},{"lineNumber":78,"author":{"gitId":"JeremyYong128"},"content":"            throw new JobNotFoundException();","lastModifiedDate":"2023-10-04"},{"lineNumber":79,"author":{"gitId":"JeremyYong128"},"content":"        }","lastModifiedDate":"2023-10-04"},{"lineNumber":80,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":81,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":82,"author":{"gitId":"JeremyYong128"},"content":"    public void setJobs(UniqueJobList replacement) {","lastModifiedDate":"2023-10-04"},{"lineNumber":83,"author":{"gitId":"JeremyYong128"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2023-10-04"},{"lineNumber":84,"author":{"gitId":"JeremyYong128"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2023-10-04"},{"lineNumber":85,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":86,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":87,"author":{"gitId":"JeremyYong128"},"content":"    /**","lastModifiedDate":"2023-10-04"},{"lineNumber":88,"author":{"gitId":"JeremyYong128"},"content":"     * Replaces the contents of this list with {@code jobs}.","lastModifiedDate":"2023-10-04"},{"lineNumber":89,"author":{"gitId":"JeremyYong128"},"content":"     * {@code jobs} must not contain duplicate jobs.","lastModifiedDate":"2023-10-04"},{"lineNumber":90,"author":{"gitId":"JeremyYong128"},"content":"     */","lastModifiedDate":"2023-10-04"},{"lineNumber":91,"author":{"gitId":"JeremyYong128"},"content":"    public void setJobs(List\u003cJob\u003e jobs) {","lastModifiedDate":"2023-10-04"},{"lineNumber":92,"author":{"gitId":"JeremyYong128"},"content":"        requireAllNonNull(jobs);","lastModifiedDate":"2023-10-04"},{"lineNumber":93,"author":{"gitId":"JeremyYong128"},"content":"        if (!jobsAreUnique(jobs)) {","lastModifiedDate":"2023-10-04"},{"lineNumber":94,"author":{"gitId":"JeremyYong128"},"content":"            throw new DuplicateJobException();","lastModifiedDate":"2023-10-04"},{"lineNumber":95,"author":{"gitId":"JeremyYong128"},"content":"        }","lastModifiedDate":"2023-10-04"},{"lineNumber":96,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":97,"author":{"gitId":"JeremyYong128"},"content":"        internalList.setAll(jobs);","lastModifiedDate":"2023-10-04"},{"lineNumber":98,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":99,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":100,"author":{"gitId":"JeremyYong128"},"content":"    /**","lastModifiedDate":"2023-10-20"},{"lineNumber":101,"author":{"gitId":"JeremyYong128"},"content":"     * Sorts the jobs in the application book based on the comparator provided.","lastModifiedDate":"2023-10-20"},{"lineNumber":102,"author":{"gitId":"JeremyYong128"},"content":"     * @param comparator The comparator used to compare 2 jobs.","lastModifiedDate":"2023-10-20"},{"lineNumber":103,"author":{"gitId":"JeremyYong128"},"content":"     */","lastModifiedDate":"2023-10-20"},{"lineNumber":104,"author":{"gitId":"JeremyYong128"},"content":"    public void sortJobs(FieldComparator comparator) {","lastModifiedDate":"2023-10-20"},{"lineNumber":105,"author":{"gitId":"JeremyYong128"},"content":"        internalList.sort(comparator);","lastModifiedDate":"2023-10-20"},{"lineNumber":106,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":107,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":108,"author":{"gitId":"JeremyYong128"},"content":"    /**","lastModifiedDate":"2023-10-04"},{"lineNumber":109,"author":{"gitId":"JeremyYong128"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2023-10-04"},{"lineNumber":110,"author":{"gitId":"JeremyYong128"},"content":"     */","lastModifiedDate":"2023-10-04"},{"lineNumber":111,"author":{"gitId":"JeremyYong128"},"content":"    public ObservableList\u003cJob\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2023-10-04"},{"lineNumber":112,"author":{"gitId":"JeremyYong128"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2023-10-04"},{"lineNumber":113,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":114,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":115,"author":{"gitId":"JeremyYong128"},"content":"    @Override","lastModifiedDate":"2023-10-04"},{"lineNumber":116,"author":{"gitId":"JeremyYong128"},"content":"    public Iterator\u003cJob\u003e iterator() {","lastModifiedDate":"2023-10-04"},{"lineNumber":117,"author":{"gitId":"JeremyYong128"},"content":"        return internalList.iterator();","lastModifiedDate":"2023-10-04"},{"lineNumber":118,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":119,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":120,"author":{"gitId":"JeremyYong128"},"content":"    @Override","lastModifiedDate":"2023-10-04"},{"lineNumber":121,"author":{"gitId":"JeremyYong128"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-04"},{"lineNumber":122,"author":{"gitId":"JeremyYong128"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-04"},{"lineNumber":123,"author":{"gitId":"JeremyYong128"},"content":"            return true;","lastModifiedDate":"2023-10-04"},{"lineNumber":124,"author":{"gitId":"JeremyYong128"},"content":"        }","lastModifiedDate":"2023-10-04"},{"lineNumber":125,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":126,"author":{"gitId":"JeremyYong128"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-04"},{"lineNumber":127,"author":{"gitId":"JeremyYong128"},"content":"        if (!(other instanceof UniqueJobList)) {","lastModifiedDate":"2023-10-04"},{"lineNumber":128,"author":{"gitId":"JeremyYong128"},"content":"            return false;","lastModifiedDate":"2023-10-04"},{"lineNumber":129,"author":{"gitId":"JeremyYong128"},"content":"        }","lastModifiedDate":"2023-10-04"},{"lineNumber":130,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":131,"author":{"gitId":"JeremyYong128"},"content":"        UniqueJobList otherUniqueJobList \u003d (UniqueJobList) other;","lastModifiedDate":"2023-10-04"},{"lineNumber":132,"author":{"gitId":"JeremyYong128"},"content":"        return internalList.equals(otherUniqueJobList.internalList);","lastModifiedDate":"2023-10-04"},{"lineNumber":133,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":134,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":135,"author":{"gitId":"JeremyYong128"},"content":"    @Override","lastModifiedDate":"2023-10-04"},{"lineNumber":136,"author":{"gitId":"JeremyYong128"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-04"},{"lineNumber":137,"author":{"gitId":"JeremyYong128"},"content":"        return internalList.hashCode();","lastModifiedDate":"2023-10-04"},{"lineNumber":138,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":139,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":140,"author":{"gitId":"JeremyYong128"},"content":"    @Override","lastModifiedDate":"2023-10-04"},{"lineNumber":141,"author":{"gitId":"JeremyYong128"},"content":"    public String toString() {","lastModifiedDate":"2023-10-04"},{"lineNumber":142,"author":{"gitId":"JeremyYong128"},"content":"        return internalList.toString();","lastModifiedDate":"2023-10-04"},{"lineNumber":143,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":144,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":145,"author":{"gitId":"JeremyYong128"},"content":"    /**","lastModifiedDate":"2023-10-04"},{"lineNumber":146,"author":{"gitId":"JeremyYong128"},"content":"     * Returns true if {@code jobs} contains only unique jobs.","lastModifiedDate":"2023-10-04"},{"lineNumber":147,"author":{"gitId":"JeremyYong128"},"content":"     */","lastModifiedDate":"2023-10-04"},{"lineNumber":148,"author":{"gitId":"JeremyYong128"},"content":"    private boolean jobsAreUnique(List\u003cJob\u003e jobs) {","lastModifiedDate":"2023-10-04"},{"lineNumber":149,"author":{"gitId":"JeremyYong128"},"content":"        for (int i \u003d 0; i \u003c jobs.size() - 1; i++) {","lastModifiedDate":"2023-10-04"},{"lineNumber":150,"author":{"gitId":"JeremyYong128"},"content":"            for (int j \u003d i + 1; j \u003c jobs.size(); j++) {","lastModifiedDate":"2023-10-04"},{"lineNumber":151,"author":{"gitId":"JeremyYong128"},"content":"                if (jobs.get(i).isSameJob(jobs.get(j))) {","lastModifiedDate":"2023-10-04"},{"lineNumber":152,"author":{"gitId":"JeremyYong128"},"content":"                    return false;","lastModifiedDate":"2023-10-04"},{"lineNumber":153,"author":{"gitId":"JeremyYong128"},"content":"                }","lastModifiedDate":"2023-10-04"},{"lineNumber":154,"author":{"gitId":"JeremyYong128"},"content":"            }","lastModifiedDate":"2023-10-04"},{"lineNumber":155,"author":{"gitId":"JeremyYong128"},"content":"        }","lastModifiedDate":"2023-10-04"},{"lineNumber":156,"author":{"gitId":"JeremyYong128"},"content":"        return true;","lastModifiedDate":"2023-10-04"},{"lineNumber":157,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":158,"author":{"gitId":"JeremyYong128"},"content":"}","lastModifiedDate":"2023-10-04"}],"authorContributionMap":{"evanyan13":4,"JeremyYong128":154}},{"path":"src/main/java/seedu/application/model/job/exceptions/DuplicateJobException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"evanyan13"},"content":"package seedu.application.model.job.exceptions;","lastModifiedDate":"2023-10-10"},{"lineNumber":2,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":3,"author":{"gitId":"JeremyYong128"},"content":"/**","lastModifiedDate":"2023-10-04"},{"lineNumber":4,"author":{"gitId":"JeremyYong128"},"content":" * Signals that the operation will result in duplicate Jobs (Jobs are considered duplicates if they have the same","lastModifiedDate":"2023-10-04"},{"lineNumber":5,"author":{"gitId":"JeremyYong128"},"content":" * role and company).","lastModifiedDate":"2023-10-04"},{"lineNumber":6,"author":{"gitId":"JeremyYong128"},"content":" */","lastModifiedDate":"2023-10-04"},{"lineNumber":7,"author":{"gitId":"JeremyYong128"},"content":"public class DuplicateJobException extends RuntimeException {","lastModifiedDate":"2023-10-04"},{"lineNumber":8,"author":{"gitId":"JeremyYong128"},"content":"    public DuplicateJobException() {","lastModifiedDate":"2023-10-04"},{"lineNumber":9,"author":{"gitId":"JeremyYong128"},"content":"        super(\"Operation would result in duplicate jobs\");","lastModifiedDate":"2023-10-04"},{"lineNumber":10,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":11,"author":{"gitId":"JeremyYong128"},"content":"}","lastModifiedDate":"2023-10-04"}],"authorContributionMap":{"evanyan13":1,"JeremyYong128":10}},{"path":"src/main/java/seedu/application/model/job/exceptions/JobNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"evanyan13"},"content":"package seedu.application.model.job.exceptions;","lastModifiedDate":"2023-10-10"},{"lineNumber":2,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":3,"author":{"gitId":"JeremyYong128"},"content":"/**","lastModifiedDate":"2023-10-04"},{"lineNumber":4,"author":{"gitId":"JeremyYong128"},"content":" * Signals that the operation is unable to find the specified person.","lastModifiedDate":"2023-10-04"},{"lineNumber":5,"author":{"gitId":"JeremyYong128"},"content":" */","lastModifiedDate":"2023-10-04"},{"lineNumber":6,"author":{"gitId":"JeremyYong128"},"content":"public class JobNotFoundException extends RuntimeException {}","lastModifiedDate":"2023-10-04"}],"authorContributionMap":{"evanyan13":1,"JeremyYong128":5}},{"path":"src/main/java/seedu/application/model/job/interview/Interview.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"migfoo02"},"content":"package seedu.application.model.job.interview;","lastModifiedDate":"2023-10-27"},{"lineNumber":2,"author":{"gitId":"migfoo02"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":3,"author":{"gitId":"migfoo02"},"content":"import java.util.Objects;","lastModifiedDate":"2023-10-27"},{"lineNumber":4,"author":{"gitId":"migfoo02"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":5,"author":{"gitId":"migfoo02"},"content":"import seedu.application.commons.util.CollectionUtil;","lastModifiedDate":"2023-10-27"},{"lineNumber":6,"author":{"gitId":"migfoo02"},"content":"import seedu.application.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-27"},{"lineNumber":7,"author":{"gitId":"migfoo02"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":8,"author":{"gitId":"migfoo02"},"content":"/**","lastModifiedDate":"2023-10-27"},{"lineNumber":9,"author":{"gitId":"migfoo02"},"content":" * Represents an Interview in the application book.","lastModifiedDate":"2023-10-27"},{"lineNumber":10,"author":{"gitId":"migfoo02"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2023-10-27"},{"lineNumber":11,"author":{"gitId":"migfoo02"},"content":" */","lastModifiedDate":"2023-10-27"},{"lineNumber":12,"author":{"gitId":"migfoo02"},"content":"public class Interview {","lastModifiedDate":"2023-10-27"},{"lineNumber":13,"author":{"gitId":"migfoo02"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":14,"author":{"gitId":"migfoo02"},"content":"    public final InterviewType interviewType;","lastModifiedDate":"2023-10-27"},{"lineNumber":15,"author":{"gitId":"migfoo02"},"content":"    public final InterviewDateTime interviewDateTime;","lastModifiedDate":"2023-10-27"},{"lineNumber":16,"author":{"gitId":"migfoo02"},"content":"    public final InterviewAddress interviewAddress;","lastModifiedDate":"2023-10-27"},{"lineNumber":17,"author":{"gitId":"migfoo02"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":18,"author":{"gitId":"migfoo02"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":19,"author":{"gitId":"migfoo02"},"content":"     * Constructs a {@code Interview}.","lastModifiedDate":"2023-10-27"},{"lineNumber":20,"author":{"gitId":"migfoo02"},"content":"     *","lastModifiedDate":"2023-10-27"},{"lineNumber":21,"author":{"gitId":"migfoo02"},"content":"     * @param interviewType A valid interview type.","lastModifiedDate":"2023-10-27"},{"lineNumber":22,"author":{"gitId":"migfoo02"},"content":"     * @param interviewDateTime A valid interview date and time.","lastModifiedDate":"2023-10-27"},{"lineNumber":23,"author":{"gitId":"migfoo02"},"content":"     * @param interviewAddress A valid interview address.","lastModifiedDate":"2023-10-27"},{"lineNumber":24,"author":{"gitId":"migfoo02"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":25,"author":{"gitId":"migfoo02"},"content":"    public Interview(InterviewType interviewType, InterviewDateTime interviewDateTime,","lastModifiedDate":"2023-10-27"},{"lineNumber":26,"author":{"gitId":"migfoo02"},"content":"                     InterviewAddress interviewAddress) {","lastModifiedDate":"2023-10-27"},{"lineNumber":27,"author":{"gitId":"migfoo02"},"content":"        CollectionUtil.requireAllNonNull(interviewType, interviewDateTime, interviewAddress);","lastModifiedDate":"2023-10-27"},{"lineNumber":28,"author":{"gitId":"migfoo02"},"content":"        this.interviewType \u003d interviewType;","lastModifiedDate":"2023-10-27"},{"lineNumber":29,"author":{"gitId":"migfoo02"},"content":"        this.interviewDateTime \u003d interviewDateTime;","lastModifiedDate":"2023-10-27"},{"lineNumber":30,"author":{"gitId":"migfoo02"},"content":"        this.interviewAddress \u003d interviewAddress;","lastModifiedDate":"2023-10-27"},{"lineNumber":31,"author":{"gitId":"migfoo02"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":32,"author":{"gitId":"migfoo02"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":33,"author":{"gitId":"migfoo02"},"content":"    public InterviewType getInterviewType() {","lastModifiedDate":"2023-10-27"},{"lineNumber":34,"author":{"gitId":"migfoo02"},"content":"        return interviewType;","lastModifiedDate":"2023-10-27"},{"lineNumber":35,"author":{"gitId":"migfoo02"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":36,"author":{"gitId":"migfoo02"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":37,"author":{"gitId":"migfoo02"},"content":"    public InterviewDateTime getInterviewDateTime() {","lastModifiedDate":"2023-10-27"},{"lineNumber":38,"author":{"gitId":"migfoo02"},"content":"        return interviewDateTime;","lastModifiedDate":"2023-10-27"},{"lineNumber":39,"author":{"gitId":"migfoo02"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":40,"author":{"gitId":"migfoo02"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":41,"author":{"gitId":"migfoo02"},"content":"    public InterviewAddress getInterviewAddress() {","lastModifiedDate":"2023-10-27"},{"lineNumber":42,"author":{"gitId":"migfoo02"},"content":"        return interviewAddress;","lastModifiedDate":"2023-10-27"},{"lineNumber":43,"author":{"gitId":"migfoo02"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":44,"author":{"gitId":"migfoo02"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":45,"author":{"gitId":"migfoo02"},"content":"    @Override","lastModifiedDate":"2023-10-27"},{"lineNumber":46,"author":{"gitId":"migfoo02"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-27"},{"lineNumber":47,"author":{"gitId":"migfoo02"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-27"},{"lineNumber":48,"author":{"gitId":"migfoo02"},"content":"            return true;","lastModifiedDate":"2023-10-27"},{"lineNumber":49,"author":{"gitId":"migfoo02"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":50,"author":{"gitId":"migfoo02"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":51,"author":{"gitId":"migfoo02"},"content":"        if (!(other instanceof Interview)) {","lastModifiedDate":"2023-10-27"},{"lineNumber":52,"author":{"gitId":"migfoo02"},"content":"            return false;","lastModifiedDate":"2023-10-27"},{"lineNumber":53,"author":{"gitId":"migfoo02"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":54,"author":{"gitId":"migfoo02"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":55,"author":{"gitId":"peiran18"},"content":"        Interview otherInterview \u003d (Interview) other;","lastModifiedDate":"2023-10-30"},{"lineNumber":56,"author":{"gitId":"peiran18"},"content":"        return interviewType.equals(otherInterview.interviewType)","lastModifiedDate":"2023-10-30"},{"lineNumber":57,"author":{"gitId":"peiran18"},"content":"            \u0026\u0026 interviewDateTime.equals(otherInterview.interviewDateTime)","lastModifiedDate":"2023-10-30"},{"lineNumber":58,"author":{"gitId":"peiran18"},"content":"            \u0026\u0026 interviewAddress.equals(otherInterview.interviewAddress);","lastModifiedDate":"2023-10-30"},{"lineNumber":59,"author":{"gitId":"migfoo02"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":60,"author":{"gitId":"migfoo02"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":61,"author":{"gitId":"migfoo02"},"content":"    @Override","lastModifiedDate":"2023-10-27"},{"lineNumber":62,"author":{"gitId":"migfoo02"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-27"},{"lineNumber":63,"author":{"gitId":"migfoo02"},"content":"        return Objects.hash(interviewType, interviewDateTime, interviewAddress);","lastModifiedDate":"2023-10-27"},{"lineNumber":64,"author":{"gitId":"migfoo02"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":65,"author":{"gitId":"migfoo02"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":66,"author":{"gitId":"migfoo02"},"content":"    @Override","lastModifiedDate":"2023-10-27"},{"lineNumber":67,"author":{"gitId":"migfoo02"},"content":"    public String toString() {","lastModifiedDate":"2023-10-27"},{"lineNumber":68,"author":{"gitId":"migfoo02"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-27"},{"lineNumber":69,"author":{"gitId":"migfoo02"},"content":"            .add(\"interviewType\", interviewType)","lastModifiedDate":"2023-10-27"},{"lineNumber":70,"author":{"gitId":"migfoo02"},"content":"            .add(\"interviewDateTime\", interviewDateTime)","lastModifiedDate":"2023-10-27"},{"lineNumber":71,"author":{"gitId":"migfoo02"},"content":"            .add(\"interviewAddress\", interviewAddress)","lastModifiedDate":"2023-10-27"},{"lineNumber":72,"author":{"gitId":"migfoo02"},"content":"            .toString();","lastModifiedDate":"2023-10-27"},{"lineNumber":73,"author":{"gitId":"migfoo02"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":74,"author":{"gitId":"migfoo02"},"content":"}","lastModifiedDate":"2023-10-27"},{"lineNumber":75,"author":{"gitId":"migfoo02"},"content":"","lastModifiedDate":"2023-10-27"}],"authorContributionMap":{"peiran18":4,"migfoo02":71}},{"path":"src/main/java/seedu/application/model/job/interview/InterviewAddress.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"migfoo02"},"content":"package seedu.application.model.job.interview;","lastModifiedDate":"2023-10-27"},{"lineNumber":2,"author":{"gitId":"migfoo02"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":3,"author":{"gitId":"migfoo02"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-27"},{"lineNumber":4,"author":{"gitId":"migfoo02"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":5,"author":{"gitId":"migfoo02"},"content":"import seedu.application.commons.util.AppUtil;","lastModifiedDate":"2023-10-27"},{"lineNumber":6,"author":{"gitId":"migfoo02"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":7,"author":{"gitId":"migfoo02"},"content":"/**","lastModifiedDate":"2023-10-27"},{"lineNumber":8,"author":{"gitId":"migfoo02"},"content":" * Represents an Interview\u0027s address in the application book.","lastModifiedDate":"2023-10-27"},{"lineNumber":9,"author":{"gitId":"migfoo02"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidInterviewAddress(String)}","lastModifiedDate":"2023-10-27"},{"lineNumber":10,"author":{"gitId":"migfoo02"},"content":" */","lastModifiedDate":"2023-10-27"},{"lineNumber":11,"author":{"gitId":"migfoo02"},"content":"public class InterviewAddress {","lastModifiedDate":"2023-10-27"},{"lineNumber":12,"author":{"gitId":"migfoo02"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-10-27"},{"lineNumber":13,"author":{"gitId":"migfoo02"},"content":"            \"Address descriptions should adhere to the following constraints:\\n\"","lastModifiedDate":"2023-10-27"},{"lineNumber":14,"author":{"gitId":"migfoo02"},"content":"                    + \"1. The first character must not be a whitespace \\n\";","lastModifiedDate":"2023-10-27"},{"lineNumber":15,"author":{"gitId":"migfoo02"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":16,"author":{"gitId":"migfoo02"},"content":"    public static final String TO_ADD_INTERVIEW_ADDRESS \u003d \"TO_ADD_INTERVIEW_ADDRESS\";","lastModifiedDate":"2023-10-27"},{"lineNumber":17,"author":{"gitId":"migfoo02"},"content":"    public static final InterviewAddress DEFAULT_INTERVIEW_ADDRESS \u003d","lastModifiedDate":"2023-10-27"},{"lineNumber":18,"author":{"gitId":"migfoo02"},"content":"            new InterviewAddress(TO_ADD_INTERVIEW_ADDRESS);","lastModifiedDate":"2023-10-27"},{"lineNumber":19,"author":{"gitId":"migfoo02"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":20,"author":{"gitId":"migfoo02"},"content":"    /*","lastModifiedDate":"2023-10-27"},{"lineNumber":21,"author":{"gitId":"migfoo02"},"content":"     * The first character of interview address must not be a whitespace,","lastModifiedDate":"2023-10-27"},{"lineNumber":22,"author":{"gitId":"migfoo02"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2023-10-27"},{"lineNumber":23,"author":{"gitId":"migfoo02"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":24,"author":{"gitId":"migfoo02"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2023-10-27"},{"lineNumber":25,"author":{"gitId":"migfoo02"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":26,"author":{"gitId":"migfoo02"},"content":"    public final String interviewAddress;","lastModifiedDate":"2023-10-27"},{"lineNumber":27,"author":{"gitId":"migfoo02"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":28,"author":{"gitId":"migfoo02"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":29,"author":{"gitId":"migfoo02"},"content":"     * Constructs a {@code InterviewAddress}.","lastModifiedDate":"2023-10-27"},{"lineNumber":30,"author":{"gitId":"migfoo02"},"content":"     *","lastModifiedDate":"2023-10-27"},{"lineNumber":31,"author":{"gitId":"migfoo02"},"content":"     * @param interviewAddress A valid interview address.","lastModifiedDate":"2023-10-27"},{"lineNumber":32,"author":{"gitId":"migfoo02"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":33,"author":{"gitId":"migfoo02"},"content":"    public InterviewAddress(String interviewAddress) {","lastModifiedDate":"2023-10-27"},{"lineNumber":34,"author":{"gitId":"migfoo02"},"content":"        requireNonNull(interviewAddress);","lastModifiedDate":"2023-10-27"},{"lineNumber":35,"author":{"gitId":"migfoo02"},"content":"        AppUtil.checkArgument(isValidInterviewAddress(interviewAddress), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-27"},{"lineNumber":36,"author":{"gitId":"migfoo02"},"content":"        this.interviewAddress \u003d interviewAddress;","lastModifiedDate":"2023-10-27"},{"lineNumber":37,"author":{"gitId":"migfoo02"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":38,"author":{"gitId":"migfoo02"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":39,"author":{"gitId":"migfoo02"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":40,"author":{"gitId":"migfoo02"},"content":"     * Returns true if a given string is a valid interview address.","lastModifiedDate":"2023-10-27"},{"lineNumber":41,"author":{"gitId":"migfoo02"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":42,"author":{"gitId":"migfoo02"},"content":"    public static boolean isValidInterviewAddress(String test) {","lastModifiedDate":"2023-10-27"},{"lineNumber":43,"author":{"gitId":"migfoo02"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-10-27"},{"lineNumber":44,"author":{"gitId":"migfoo02"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":45,"author":{"gitId":"migfoo02"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":46,"author":{"gitId":"migfoo02"},"content":"    @Override","lastModifiedDate":"2023-10-27"},{"lineNumber":47,"author":{"gitId":"migfoo02"},"content":"    public String toString() {","lastModifiedDate":"2023-10-27"},{"lineNumber":48,"author":{"gitId":"migfoo02"},"content":"        return interviewAddress;","lastModifiedDate":"2023-10-27"},{"lineNumber":49,"author":{"gitId":"migfoo02"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":50,"author":{"gitId":"migfoo02"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":51,"author":{"gitId":"migfoo02"},"content":"    @Override","lastModifiedDate":"2023-10-27"},{"lineNumber":52,"author":{"gitId":"migfoo02"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-27"},{"lineNumber":53,"author":{"gitId":"migfoo02"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-27"},{"lineNumber":54,"author":{"gitId":"migfoo02"},"content":"            return true;","lastModifiedDate":"2023-10-27"},{"lineNumber":55,"author":{"gitId":"migfoo02"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":56,"author":{"gitId":"migfoo02"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":57,"author":{"gitId":"migfoo02"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-27"},{"lineNumber":58,"author":{"gitId":"migfoo02"},"content":"        if (!(other instanceof InterviewAddress)) {","lastModifiedDate":"2023-10-27"},{"lineNumber":59,"author":{"gitId":"migfoo02"},"content":"            return false;","lastModifiedDate":"2023-10-27"},{"lineNumber":60,"author":{"gitId":"migfoo02"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":61,"author":{"gitId":"migfoo02"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":62,"author":{"gitId":"migfoo02"},"content":"        InterviewAddress otherInterviewAddress \u003d (InterviewAddress) other;","lastModifiedDate":"2023-10-27"},{"lineNumber":63,"author":{"gitId":"migfoo02"},"content":"        return interviewAddress.equals(otherInterviewAddress.interviewAddress);","lastModifiedDate":"2023-10-27"},{"lineNumber":64,"author":{"gitId":"migfoo02"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":65,"author":{"gitId":"migfoo02"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":66,"author":{"gitId":"migfoo02"},"content":"    @Override","lastModifiedDate":"2023-10-27"},{"lineNumber":67,"author":{"gitId":"migfoo02"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-27"},{"lineNumber":68,"author":{"gitId":"migfoo02"},"content":"        return interviewAddress.hashCode();","lastModifiedDate":"2023-10-27"},{"lineNumber":69,"author":{"gitId":"migfoo02"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":70,"author":{"gitId":"migfoo02"},"content":"}","lastModifiedDate":"2023-10-27"},{"lineNumber":71,"author":{"gitId":"migfoo02"},"content":"","lastModifiedDate":"2023-10-27"}],"authorContributionMap":{"migfoo02":71}},{"path":"src/main/java/seedu/application/model/job/interview/InterviewDateTime.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"migfoo02"},"content":"package seedu.application.model.job.interview;","lastModifiedDate":"2023-10-27"},{"lineNumber":2,"author":{"gitId":"migfoo02"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":3,"author":{"gitId":"migfoo02"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-27"},{"lineNumber":4,"author":{"gitId":"migfoo02"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":5,"author":{"gitId":"migfoo02"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-27"},{"lineNumber":6,"author":{"gitId":"migfoo02"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-10-27"},{"lineNumber":7,"author":{"gitId":"migfoo02"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":8,"author":{"gitId":"migfoo02"},"content":"import seedu.application.commons.util.AppUtil;","lastModifiedDate":"2023-10-27"},{"lineNumber":9,"author":{"gitId":"migfoo02"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":10,"author":{"gitId":"migfoo02"},"content":"/**","lastModifiedDate":"2023-10-27"},{"lineNumber":11,"author":{"gitId":"migfoo02"},"content":" * Represents an Interview\u0027s date and time in the application book.","lastModifiedDate":"2023-10-27"},{"lineNumber":12,"author":{"gitId":"migfoo02"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidInterviewDateTime(String)}","lastModifiedDate":"2023-10-27"},{"lineNumber":13,"author":{"gitId":"migfoo02"},"content":" */","lastModifiedDate":"2023-10-27"},{"lineNumber":14,"author":{"gitId":"migfoo02"},"content":"public class InterviewDateTime {","lastModifiedDate":"2023-10-27"},{"lineNumber":15,"author":{"gitId":"migfoo02"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":16,"author":{"gitId":"migfoo02"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-10-27"},{"lineNumber":17,"author":{"gitId":"migfoo02"},"content":"            \"Date and Time should be in valid DateTime format: \"","lastModifiedDate":"2023-10-27"},{"lineNumber":18,"author":{"gitId":"migfoo02"},"content":"                    + \"MMM dd yyyy HHmm\\n\"","lastModifiedDate":"2023-10-27"},{"lineNumber":19,"author":{"gitId":"migfoo02"},"content":"                    + \"Eg. Dec 31 2030 1200\";","lastModifiedDate":"2023-10-27"},{"lineNumber":20,"author":{"gitId":"migfoo02"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":21,"author":{"gitId":"migfoo02"},"content":"    public static final String TO_ADD_INTERVIEW_DATE_TIME \u003d \"TO_ADD_INTERVIEW_DATE_TIME\";","lastModifiedDate":"2023-10-27"},{"lineNumber":22,"author":{"gitId":"migfoo02"},"content":"    public static final InterviewDateTime EMPTY_INTERVIEW_DATE_TIME \u003d","lastModifiedDate":"2023-10-27"},{"lineNumber":23,"author":{"gitId":"migfoo02"},"content":"            new InterviewDateTime(TO_ADD_INTERVIEW_DATE_TIME);","lastModifiedDate":"2023-10-27"},{"lineNumber":24,"author":{"gitId":"migfoo02"},"content":"    public static final String DEFAULT_DATETIME_FORMAT \u003d \"MMM dd yyyy HHmm\";","lastModifiedDate":"2023-10-27"},{"lineNumber":25,"author":{"gitId":"migfoo02"},"content":"    public static final DateTimeFormatter DATE_TIME_FORMATTER \u003d DateTimeFormatter.ofPattern(DEFAULT_DATETIME_FORMAT);","lastModifiedDate":"2023-10-27"},{"lineNumber":26,"author":{"gitId":"migfoo02"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":27,"author":{"gitId":"migfoo02"},"content":"    public final String interviewDateTime;","lastModifiedDate":"2023-10-27"},{"lineNumber":28,"author":{"gitId":"migfoo02"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":29,"author":{"gitId":"migfoo02"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":30,"author":{"gitId":"migfoo02"},"content":"     * Constructs a {@code InterviewDateTime}.","lastModifiedDate":"2023-10-27"},{"lineNumber":31,"author":{"gitId":"migfoo02"},"content":"     *","lastModifiedDate":"2023-10-27"},{"lineNumber":32,"author":{"gitId":"migfoo02"},"content":"     * @param dateTime A valid dateTime.","lastModifiedDate":"2023-10-27"},{"lineNumber":33,"author":{"gitId":"migfoo02"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":34,"author":{"gitId":"migfoo02"},"content":"    public InterviewDateTime(String dateTime) {","lastModifiedDate":"2023-10-27"},{"lineNumber":35,"author":{"gitId":"migfoo02"},"content":"        requireNonNull(dateTime);","lastModifiedDate":"2023-10-27"},{"lineNumber":36,"author":{"gitId":"migfoo02"},"content":"        AppUtil.checkArgument(isValidInterviewDateTime(dateTime), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-27"},{"lineNumber":37,"author":{"gitId":"migfoo02"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":38,"author":{"gitId":"migfoo02"},"content":"        if (isEmptyInterviewDateTime(dateTime)) {","lastModifiedDate":"2023-10-27"},{"lineNumber":39,"author":{"gitId":"migfoo02"},"content":"            this.interviewDateTime \u003d TO_ADD_INTERVIEW_DATE_TIME;","lastModifiedDate":"2023-10-27"},{"lineNumber":40,"author":{"gitId":"migfoo02"},"content":"        } else {","lastModifiedDate":"2023-10-27"},{"lineNumber":41,"author":{"gitId":"migfoo02"},"content":"            this.interviewDateTime \u003d dateTime;","lastModifiedDate":"2023-10-27"},{"lineNumber":42,"author":{"gitId":"migfoo02"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":43,"author":{"gitId":"migfoo02"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":44,"author":{"gitId":"migfoo02"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":45,"author":{"gitId":"migfoo02"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":46,"author":{"gitId":"migfoo02"},"content":"     * Returns true if a given string is a valid interview date time.","lastModifiedDate":"2023-10-27"},{"lineNumber":47,"author":{"gitId":"migfoo02"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":48,"author":{"gitId":"migfoo02"},"content":"    public static boolean isValidInterviewDateTime(String test) {","lastModifiedDate":"2023-10-27"},{"lineNumber":49,"author":{"gitId":"migfoo02"},"content":"        if (isEmptyInterviewDateTime(test)) {","lastModifiedDate":"2023-10-27"},{"lineNumber":50,"author":{"gitId":"migfoo02"},"content":"            return true;","lastModifiedDate":"2023-10-27"},{"lineNumber":51,"author":{"gitId":"migfoo02"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":52,"author":{"gitId":"migfoo02"},"content":"        try {","lastModifiedDate":"2023-10-27"},{"lineNumber":53,"author":{"gitId":"migfoo02"},"content":"            LocalDateTime dateTime \u003d LocalDateTime.parse(test, DATE_TIME_FORMATTER);","lastModifiedDate":"2023-10-27"},{"lineNumber":54,"author":{"gitId":"migfoo02"},"content":"            LocalDateTime current \u003d LocalDateTime.now();","lastModifiedDate":"2023-10-27"},{"lineNumber":55,"author":{"gitId":"migfoo02"},"content":"            return dateTime.format(DATE_TIME_FORMATTER).equals(test)","lastModifiedDate":"2023-10-27"},{"lineNumber":56,"author":{"gitId":"migfoo02"},"content":"                    \u0026\u0026 dateTime.isAfter(current);","lastModifiedDate":"2023-10-27"},{"lineNumber":57,"author":{"gitId":"migfoo02"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-10-27"},{"lineNumber":58,"author":{"gitId":"migfoo02"},"content":"            return false;","lastModifiedDate":"2023-10-27"},{"lineNumber":59,"author":{"gitId":"migfoo02"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":60,"author":{"gitId":"migfoo02"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":61,"author":{"gitId":"migfoo02"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":62,"author":{"gitId":"migfoo02"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":63,"author":{"gitId":"migfoo02"},"content":"     * Returns true if a given string is an empty interview date time.","lastModifiedDate":"2023-10-27"},{"lineNumber":64,"author":{"gitId":"migfoo02"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":65,"author":{"gitId":"migfoo02"},"content":"    private static boolean isEmptyInterviewDateTime(String test) {","lastModifiedDate":"2023-10-27"},{"lineNumber":66,"author":{"gitId":"migfoo02"},"content":"        return test.equals(TO_ADD_INTERVIEW_DATE_TIME);","lastModifiedDate":"2023-10-27"},{"lineNumber":67,"author":{"gitId":"migfoo02"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":68,"author":{"gitId":"migfoo02"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":69,"author":{"gitId":"migfoo02"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":70,"author":{"gitId":"migfoo02"},"content":"     * Checks if the date and time represented by this {@code InterviewDateTime} is earlier","lastModifiedDate":"2023-10-27"},{"lineNumber":71,"author":{"gitId":"migfoo02"},"content":"     * than the other InterviewDateTime. Empty interviewDateTimes are considered to be earlier.","lastModifiedDate":"2023-10-27"},{"lineNumber":72,"author":{"gitId":"migfoo02"},"content":"     *","lastModifiedDate":"2023-10-27"},{"lineNumber":73,"author":{"gitId":"migfoo02"},"content":"     * @param other The other {@code InterviewDateTime} to be compared to.","lastModifiedDate":"2023-10-27"},{"lineNumber":74,"author":{"gitId":"migfoo02"},"content":"     * @return -1 if this InterviewDateTime is earlier, 0 if they are equal, and 1 if it is later.","lastModifiedDate":"2023-10-27"},{"lineNumber":75,"author":{"gitId":"migfoo02"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":76,"author":{"gitId":"migfoo02"},"content":"    public int compareTo(InterviewDateTime other) {","lastModifiedDate":"2023-10-27"},{"lineNumber":77,"author":{"gitId":"migfoo02"},"content":"        if (this.interviewDateTime.equals(TO_ADD_INTERVIEW_DATE_TIME)) {","lastModifiedDate":"2023-10-27"},{"lineNumber":78,"author":{"gitId":"migfoo02"},"content":"            return other.interviewDateTime.equals(TO_ADD_INTERVIEW_DATE_TIME) ? 0 : -1;","lastModifiedDate":"2023-10-27"},{"lineNumber":79,"author":{"gitId":"migfoo02"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":80,"author":{"gitId":"migfoo02"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":81,"author":{"gitId":"migfoo02"},"content":"        if (other.interviewDateTime.equals(TO_ADD_INTERVIEW_DATE_TIME)) {","lastModifiedDate":"2023-10-27"},{"lineNumber":82,"author":{"gitId":"migfoo02"},"content":"            return 1;","lastModifiedDate":"2023-10-27"},{"lineNumber":83,"author":{"gitId":"migfoo02"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":84,"author":{"gitId":"migfoo02"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":85,"author":{"gitId":"migfoo02"},"content":"        LocalDateTime thisDateTime \u003d LocalDateTime.parse(this.interviewDateTime, DATE_TIME_FORMATTER);","lastModifiedDate":"2023-10-27"},{"lineNumber":86,"author":{"gitId":"migfoo02"},"content":"        LocalDateTime otherDateTime \u003d LocalDateTime.parse(other.interviewDateTime, DATE_TIME_FORMATTER);","lastModifiedDate":"2023-10-27"},{"lineNumber":87,"author":{"gitId":"migfoo02"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":88,"author":{"gitId":"migfoo02"},"content":"        if (thisDateTime.equals(otherDateTime)) {","lastModifiedDate":"2023-10-27"},{"lineNumber":89,"author":{"gitId":"migfoo02"},"content":"            return 0;","lastModifiedDate":"2023-10-27"},{"lineNumber":90,"author":{"gitId":"migfoo02"},"content":"        } else if (thisDateTime.isAfter(otherDateTime)) {","lastModifiedDate":"2023-10-27"},{"lineNumber":91,"author":{"gitId":"migfoo02"},"content":"            return 1;","lastModifiedDate":"2023-10-27"},{"lineNumber":92,"author":{"gitId":"migfoo02"},"content":"        } else {","lastModifiedDate":"2023-10-27"},{"lineNumber":93,"author":{"gitId":"migfoo02"},"content":"            return -1;","lastModifiedDate":"2023-10-27"},{"lineNumber":94,"author":{"gitId":"migfoo02"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":95,"author":{"gitId":"migfoo02"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":96,"author":{"gitId":"migfoo02"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":97,"author":{"gitId":"migfoo02"},"content":"    @Override","lastModifiedDate":"2023-10-27"},{"lineNumber":98,"author":{"gitId":"migfoo02"},"content":"    public String toString() {","lastModifiedDate":"2023-10-27"},{"lineNumber":99,"author":{"gitId":"migfoo02"},"content":"        if (isEmptyInterviewDateTime(interviewDateTime)) {","lastModifiedDate":"2023-10-27"},{"lineNumber":100,"author":{"gitId":"migfoo02"},"content":"            return TO_ADD_INTERVIEW_DATE_TIME;","lastModifiedDate":"2023-10-27"},{"lineNumber":101,"author":{"gitId":"migfoo02"},"content":"        } else {","lastModifiedDate":"2023-10-27"},{"lineNumber":102,"author":{"gitId":"migfoo02"},"content":"            LocalDateTime parsedInterviewDateTime \u003d LocalDateTime.parse(interviewDateTime, DATE_TIME_FORMATTER);","lastModifiedDate":"2023-10-27"},{"lineNumber":103,"author":{"gitId":"migfoo02"},"content":"            return parsedInterviewDateTime.format(DATE_TIME_FORMATTER);","lastModifiedDate":"2023-10-27"},{"lineNumber":104,"author":{"gitId":"migfoo02"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":105,"author":{"gitId":"migfoo02"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":106,"author":{"gitId":"migfoo02"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":107,"author":{"gitId":"migfoo02"},"content":"    @Override","lastModifiedDate":"2023-10-27"},{"lineNumber":108,"author":{"gitId":"migfoo02"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-27"},{"lineNumber":109,"author":{"gitId":"migfoo02"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-27"},{"lineNumber":110,"author":{"gitId":"migfoo02"},"content":"            return true;","lastModifiedDate":"2023-10-27"},{"lineNumber":111,"author":{"gitId":"migfoo02"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":112,"author":{"gitId":"migfoo02"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":113,"author":{"gitId":"migfoo02"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-27"},{"lineNumber":114,"author":{"gitId":"migfoo02"},"content":"        if (!(other instanceof InterviewDateTime)) {","lastModifiedDate":"2023-10-27"},{"lineNumber":115,"author":{"gitId":"migfoo02"},"content":"            return false;","lastModifiedDate":"2023-10-27"},{"lineNumber":116,"author":{"gitId":"migfoo02"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":117,"author":{"gitId":"migfoo02"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":118,"author":{"gitId":"migfoo02"},"content":"        InterviewDateTime otherInterviewDateTime \u003d (InterviewDateTime) other;","lastModifiedDate":"2023-10-27"},{"lineNumber":119,"author":{"gitId":"migfoo02"},"content":"        return interviewDateTime.equals(otherInterviewDateTime.interviewDateTime);","lastModifiedDate":"2023-10-27"},{"lineNumber":120,"author":{"gitId":"migfoo02"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":121,"author":{"gitId":"migfoo02"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":122,"author":{"gitId":"migfoo02"},"content":"    @Override","lastModifiedDate":"2023-10-27"},{"lineNumber":123,"author":{"gitId":"migfoo02"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-27"},{"lineNumber":124,"author":{"gitId":"migfoo02"},"content":"        return interviewDateTime.hashCode();","lastModifiedDate":"2023-10-27"},{"lineNumber":125,"author":{"gitId":"migfoo02"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":126,"author":{"gitId":"migfoo02"},"content":"}","lastModifiedDate":"2023-10-27"}],"authorContributionMap":{"migfoo02":126}},{"path":"src/main/java/seedu/application/model/job/interview/InterviewType.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"migfoo02"},"content":"package seedu.application.model.job.interview;","lastModifiedDate":"2023-10-27"},{"lineNumber":2,"author":{"gitId":"migfoo02"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":3,"author":{"gitId":"migfoo02"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-27"},{"lineNumber":4,"author":{"gitId":"migfoo02"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":5,"author":{"gitId":"migfoo02"},"content":"import seedu.application.commons.util.AppUtil;","lastModifiedDate":"2023-10-27"},{"lineNumber":6,"author":{"gitId":"migfoo02"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":7,"author":{"gitId":"migfoo02"},"content":"/**","lastModifiedDate":"2023-10-27"},{"lineNumber":8,"author":{"gitId":"migfoo02"},"content":" * Represents an Interview\u0027s type in the application book.","lastModifiedDate":"2023-10-27"},{"lineNumber":9,"author":{"gitId":"migfoo02"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidInterviewType(String)}","lastModifiedDate":"2023-10-27"},{"lineNumber":10,"author":{"gitId":"migfoo02"},"content":" */","lastModifiedDate":"2023-10-27"},{"lineNumber":11,"author":{"gitId":"migfoo02"},"content":"public class InterviewType {","lastModifiedDate":"2023-10-27"},{"lineNumber":12,"author":{"gitId":"migfoo02"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":13,"author":{"gitId":"migfoo02"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-10-27"},{"lineNumber":14,"author":{"gitId":"migfoo02"},"content":"            \"Type is not case sensitive and should only be in the form: \\n\"","lastModifiedDate":"2023-10-27"},{"lineNumber":15,"author":{"gitId":"migfoo02"},"content":"                    + \"BEHAVIOURAL, TECHNICAL, CASE, GROUP, PHONE, VIDEO, ONLINE, ONSITE, OTHER\";","lastModifiedDate":"2023-10-27"},{"lineNumber":16,"author":{"gitId":"migfoo02"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":17,"author":{"gitId":"migfoo02"},"content":"    public static final String TO_ADD_INTERVIEW_TYPE \u003d \"TO_ADD_INTERVIEW_TYPE\";","lastModifiedDate":"2023-10-27"},{"lineNumber":18,"author":{"gitId":"migfoo02"},"content":"    public static final InterviewType EMPTY_INTERVIEW_TYPE \u003d new InterviewType(TO_ADD_INTERVIEW_TYPE);","lastModifiedDate":"2023-10-27"},{"lineNumber":19,"author":{"gitId":"migfoo02"},"content":"    public final String interviewType;","lastModifiedDate":"2023-10-27"},{"lineNumber":20,"author":{"gitId":"migfoo02"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":21,"author":{"gitId":"migfoo02"},"content":"     * Enum for interview types","lastModifiedDate":"2023-10-27"},{"lineNumber":22,"author":{"gitId":"migfoo02"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":23,"author":{"gitId":"migfoo02"},"content":"    public enum InterviewTypes {","lastModifiedDate":"2023-10-27"},{"lineNumber":24,"author":{"gitId":"migfoo02"},"content":"        BEHAVIOURAL, TECHNICAL, CASE, GROUP, PHONE, VIDEO, ONLINE, ONSITE, OTHER","lastModifiedDate":"2023-10-27"},{"lineNumber":25,"author":{"gitId":"migfoo02"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":26,"author":{"gitId":"migfoo02"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":27,"author":{"gitId":"migfoo02"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":28,"author":{"gitId":"migfoo02"},"content":"     * Constructs a {@code InterviewType}.","lastModifiedDate":"2023-10-27"},{"lineNumber":29,"author":{"gitId":"migfoo02"},"content":"     *","lastModifiedDate":"2023-10-27"},{"lineNumber":30,"author":{"gitId":"migfoo02"},"content":"     * @param interviewType A valid interviewType.","lastModifiedDate":"2023-10-27"},{"lineNumber":31,"author":{"gitId":"migfoo02"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":32,"author":{"gitId":"migfoo02"},"content":"    public InterviewType(String interviewType) {","lastModifiedDate":"2023-10-27"},{"lineNumber":33,"author":{"gitId":"migfoo02"},"content":"        requireNonNull(interviewType);","lastModifiedDate":"2023-10-27"},{"lineNumber":34,"author":{"gitId":"migfoo02"},"content":"        AppUtil.checkArgument(isValidInterviewType(interviewType), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-27"},{"lineNumber":35,"author":{"gitId":"migfoo02"},"content":"        if (isEmptyInterviewType(interviewType)) {","lastModifiedDate":"2023-10-27"},{"lineNumber":36,"author":{"gitId":"migfoo02"},"content":"            this.interviewType \u003d TO_ADD_INTERVIEW_TYPE;","lastModifiedDate":"2023-10-27"},{"lineNumber":37,"author":{"gitId":"migfoo02"},"content":"        } else {","lastModifiedDate":"2023-10-27"},{"lineNumber":38,"author":{"gitId":"migfoo02"},"content":"            this.interviewType \u003d interviewType;","lastModifiedDate":"2023-10-27"},{"lineNumber":39,"author":{"gitId":"migfoo02"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":40,"author":{"gitId":"migfoo02"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":41,"author":{"gitId":"migfoo02"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":42,"author":{"gitId":"migfoo02"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":43,"author":{"gitId":"migfoo02"},"content":"     * Returns true if a given string is a valid interviewType.","lastModifiedDate":"2023-10-27"},{"lineNumber":44,"author":{"gitId":"migfoo02"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":45,"author":{"gitId":"migfoo02"},"content":"    public static boolean isValidInterviewType(String test) {","lastModifiedDate":"2023-10-27"},{"lineNumber":46,"author":{"gitId":"migfoo02"},"content":"        if (isEmptyInterviewType(test)) {","lastModifiedDate":"2023-10-27"},{"lineNumber":47,"author":{"gitId":"migfoo02"},"content":"            return true;","lastModifiedDate":"2023-10-27"},{"lineNumber":48,"author":{"gitId":"migfoo02"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":49,"author":{"gitId":"migfoo02"},"content":"        for (InterviewType.InterviewTypes t : InterviewType.InterviewTypes.values()) {","lastModifiedDate":"2023-10-27"},{"lineNumber":50,"author":{"gitId":"migfoo02"},"content":"            if (test.equalsIgnoreCase(t.toString())) {","lastModifiedDate":"2023-10-27"},{"lineNumber":51,"author":{"gitId":"migfoo02"},"content":"                return true;","lastModifiedDate":"2023-10-27"},{"lineNumber":52,"author":{"gitId":"migfoo02"},"content":"            }","lastModifiedDate":"2023-10-27"},{"lineNumber":53,"author":{"gitId":"migfoo02"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":54,"author":{"gitId":"migfoo02"},"content":"        return false;","lastModifiedDate":"2023-10-27"},{"lineNumber":55,"author":{"gitId":"migfoo02"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":56,"author":{"gitId":"migfoo02"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":57,"author":{"gitId":"migfoo02"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":58,"author":{"gitId":"migfoo02"},"content":"     * Returns true if a given string is an empty interviewType.","lastModifiedDate":"2023-10-27"},{"lineNumber":59,"author":{"gitId":"migfoo02"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":60,"author":{"gitId":"migfoo02"},"content":"    private static boolean isEmptyInterviewType(String test) {","lastModifiedDate":"2023-10-27"},{"lineNumber":61,"author":{"gitId":"migfoo02"},"content":"        return test.equals(TO_ADD_INTERVIEW_TYPE);","lastModifiedDate":"2023-10-27"},{"lineNumber":62,"author":{"gitId":"migfoo02"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":63,"author":{"gitId":"migfoo02"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":64,"author":{"gitId":"migfoo02"},"content":"    @Override","lastModifiedDate":"2023-10-27"},{"lineNumber":65,"author":{"gitId":"migfoo02"},"content":"    public String toString() {","lastModifiedDate":"2023-10-27"},{"lineNumber":66,"author":{"gitId":"migfoo02"},"content":"        if (isEmptyInterviewType(interviewType)) {","lastModifiedDate":"2023-10-27"},{"lineNumber":67,"author":{"gitId":"migfoo02"},"content":"            return TO_ADD_INTERVIEW_TYPE;","lastModifiedDate":"2023-10-27"},{"lineNumber":68,"author":{"gitId":"migfoo02"},"content":"        } else {","lastModifiedDate":"2023-10-27"},{"lineNumber":69,"author":{"gitId":"migfoo02"},"content":"            return interviewType;","lastModifiedDate":"2023-10-27"},{"lineNumber":70,"author":{"gitId":"migfoo02"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":71,"author":{"gitId":"migfoo02"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":72,"author":{"gitId":"migfoo02"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":73,"author":{"gitId":"migfoo02"},"content":"    @Override","lastModifiedDate":"2023-10-27"},{"lineNumber":74,"author":{"gitId":"migfoo02"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-27"},{"lineNumber":75,"author":{"gitId":"migfoo02"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-27"},{"lineNumber":76,"author":{"gitId":"migfoo02"},"content":"            return true;","lastModifiedDate":"2023-10-27"},{"lineNumber":77,"author":{"gitId":"migfoo02"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":78,"author":{"gitId":"migfoo02"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":79,"author":{"gitId":"migfoo02"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-27"},{"lineNumber":80,"author":{"gitId":"migfoo02"},"content":"        if (!(other instanceof InterviewType)) {","lastModifiedDate":"2023-10-27"},{"lineNumber":81,"author":{"gitId":"migfoo02"},"content":"            return false;","lastModifiedDate":"2023-10-27"},{"lineNumber":82,"author":{"gitId":"migfoo02"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":83,"author":{"gitId":"migfoo02"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":84,"author":{"gitId":"migfoo02"},"content":"        InterviewType otherInterviewType \u003d (InterviewType) other;","lastModifiedDate":"2023-10-27"},{"lineNumber":85,"author":{"gitId":"migfoo02"},"content":"        return interviewType.equals(otherInterviewType.interviewType);","lastModifiedDate":"2023-10-27"},{"lineNumber":86,"author":{"gitId":"migfoo02"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":87,"author":{"gitId":"migfoo02"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":88,"author":{"gitId":"migfoo02"},"content":"    @Override","lastModifiedDate":"2023-10-27"},{"lineNumber":89,"author":{"gitId":"migfoo02"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-27"},{"lineNumber":90,"author":{"gitId":"migfoo02"},"content":"        return interviewType.hashCode();","lastModifiedDate":"2023-10-27"},{"lineNumber":91,"author":{"gitId":"migfoo02"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":92,"author":{"gitId":"migfoo02"},"content":"}","lastModifiedDate":"2023-10-27"}],"authorContributionMap":{"migfoo02":92}},{"path":"src/main/java/seedu/application/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"evanyan13"},"content":"package seedu.application.model.util;","lastModifiedDate":"2023-10-10"},{"lineNumber":2,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":3,"author":{"gitId":"evanyan13"},"content":"import seedu.application.model.ApplicationBook;","lastModifiedDate":"2023-10-10"},{"lineNumber":4,"author":{"gitId":"evanyan13"},"content":"import seedu.application.model.ReadOnlyApplicationBook;","lastModifiedDate":"2023-10-10"},{"lineNumber":5,"author":{"gitId":"peiran18"},"content":"import seedu.application.model.job.*;","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":7,"author":{"gitId":"evanyan13"},"content":"/**","lastModifiedDate":"2023-10-10"},{"lineNumber":8,"author":{"gitId":"evanyan13"},"content":" * Contains utility methods for populating {@code ApplicationBook} with sample data.","lastModifiedDate":"2023-10-10"},{"lineNumber":9,"author":{"gitId":"evanyan13"},"content":" */","lastModifiedDate":"2023-10-10"},{"lineNumber":10,"author":{"gitId":"evanyan13"},"content":"public class SampleDataUtil {","lastModifiedDate":"2023-10-10"},{"lineNumber":11,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":13,"author":{"gitId":"evanyan13"},"content":"    public static Job[] getSampleJobs() {","lastModifiedDate":"2023-10-10"},{"lineNumber":14,"author":{"gitId":"evanyan13"},"content":"        return new Job[]{","lastModifiedDate":"2023-10-10"},{"lineNumber":15,"author":{"gitId":"peiran18"},"content":"            new Job(new Role(\"Software Engineer\"), new Company(\"Google\"),","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"migfoo02"},"content":"                    Deadline.EMPTY_DEADLINE, Status.DEFAULT_STATUS, JobType.EMPTY_JOB_TYPE, Industry.DEFAULT_INDUSTRY),","lastModifiedDate":"2023-10-22"},{"lineNumber":17,"author":{"gitId":"peiran18"},"content":"            new Job(new Role(\"Cleaner\"), new Company(\"NUS\"),","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"migfoo02"},"content":"                    Deadline.EMPTY_DEADLINE, Status.DEFAULT_STATUS, JobType.EMPTY_JOB_TYPE, Industry.DEFAULT_INDUSTRY),","lastModifiedDate":"2023-10-22"},{"lineNumber":19,"author":{"gitId":"peiran18"},"content":"            new Job(new Role(\"Chef\"), new Company(\"McDonalds\"),","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"migfoo02"},"content":"                    Deadline.EMPTY_DEADLINE, Status.DEFAULT_STATUS, JobType.EMPTY_JOB_TYPE, Industry.DEFAULT_INDUSTRY),","lastModifiedDate":"2023-10-22"},{"lineNumber":21,"author":{"gitId":"evanyan13"},"content":"        };","lastModifiedDate":"2023-10-10"},{"lineNumber":22,"author":{"gitId":"evanyan13"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":23,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":24,"author":{"gitId":"evanyan13"},"content":"    public static ReadOnlyApplicationBook getSampleApplicationBook() {","lastModifiedDate":"2023-10-10"},{"lineNumber":25,"author":{"gitId":"evanyan13"},"content":"        ApplicationBook sampleAb \u003d new ApplicationBook();","lastModifiedDate":"2023-10-10"},{"lineNumber":26,"author":{"gitId":"evanyan13"},"content":"        for (Job sampleJob : getSampleJobs()) {","lastModifiedDate":"2023-10-10"},{"lineNumber":27,"author":{"gitId":"evanyan13"},"content":"            sampleAb.addJob(sampleJob);","lastModifiedDate":"2023-10-10"},{"lineNumber":28,"author":{"gitId":"evanyan13"},"content":"        }","lastModifiedDate":"2023-10-10"},{"lineNumber":29,"author":{"gitId":"evanyan13"},"content":"        return sampleAb;","lastModifiedDate":"2023-10-10"},{"lineNumber":30,"author":{"gitId":"evanyan13"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":31,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":32,"author":{"gitId":"evanyan13"},"content":"}","lastModifiedDate":"2023-10-10"}],"authorContributionMap":{"evanyan13":25,"peiran18":4,"migfoo02":3}},{"path":"src/main/java/seedu/application/storage/ApplicationBookStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"evanyan13"},"content":"package seedu.application.storage;","lastModifiedDate":"2023-10-10"},{"lineNumber":2,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":3,"author":{"gitId":"evanyan13"},"content":"import java.io.IOException;","lastModifiedDate":"2023-10-10"},{"lineNumber":4,"author":{"gitId":"evanyan13"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-10-10"},{"lineNumber":5,"author":{"gitId":"evanyan13"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-10"},{"lineNumber":6,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":7,"author":{"gitId":"evanyan13"},"content":"import seedu.application.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-10-10"},{"lineNumber":8,"author":{"gitId":"evanyan13"},"content":"import seedu.application.model.ReadOnlyApplicationBook;","lastModifiedDate":"2023-10-10"},{"lineNumber":9,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":10,"author":{"gitId":"evanyan13"},"content":"/**","lastModifiedDate":"2023-10-10"},{"lineNumber":11,"author":{"gitId":"evanyan13"},"content":" * Represents a storage for {@link seedu.application.model.ApplicationBook}.","lastModifiedDate":"2023-10-10"},{"lineNumber":12,"author":{"gitId":"evanyan13"},"content":" */","lastModifiedDate":"2023-10-10"},{"lineNumber":13,"author":{"gitId":"evanyan13"},"content":"public interface ApplicationBookStorage {","lastModifiedDate":"2023-10-10"},{"lineNumber":14,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":15,"author":{"gitId":"evanyan13"},"content":"    /**","lastModifiedDate":"2023-10-10"},{"lineNumber":16,"author":{"gitId":"evanyan13"},"content":"     * Returns the file path of the data file.","lastModifiedDate":"2023-10-10"},{"lineNumber":17,"author":{"gitId":"evanyan13"},"content":"     */","lastModifiedDate":"2023-10-10"},{"lineNumber":18,"author":{"gitId":"evanyan13"},"content":"    Path getApplicationBookFilePath();","lastModifiedDate":"2023-10-10"},{"lineNumber":19,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":20,"author":{"gitId":"evanyan13"},"content":"    /**","lastModifiedDate":"2023-10-10"},{"lineNumber":21,"author":{"gitId":"evanyan13"},"content":"     * Returns ApplicationBook data as a {@link ReadOnlyApplicationBook}.","lastModifiedDate":"2023-10-10"},{"lineNumber":22,"author":{"gitId":"evanyan13"},"content":"     * Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2023-10-10"},{"lineNumber":23,"author":{"gitId":"evanyan13"},"content":"     *","lastModifiedDate":"2023-10-10"},{"lineNumber":24,"author":{"gitId":"evanyan13"},"content":"     * @throws DataLoadingException if loading the data from storage failed.","lastModifiedDate":"2023-10-10"},{"lineNumber":25,"author":{"gitId":"evanyan13"},"content":"     */","lastModifiedDate":"2023-10-10"},{"lineNumber":26,"author":{"gitId":"evanyan13"},"content":"    Optional\u003cReadOnlyApplicationBook\u003e readApplicationBook() throws DataLoadingException;","lastModifiedDate":"2023-10-10"},{"lineNumber":27,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":28,"author":{"gitId":"evanyan13"},"content":"    /**","lastModifiedDate":"2023-10-10"},{"lineNumber":29,"author":{"gitId":"evanyan13"},"content":"     * @see #getApplicationBookFilePath()","lastModifiedDate":"2023-10-10"},{"lineNumber":30,"author":{"gitId":"evanyan13"},"content":"     */","lastModifiedDate":"2023-10-10"},{"lineNumber":31,"author":{"gitId":"evanyan13"},"content":"    Optional\u003cReadOnlyApplicationBook\u003e readApplicationBook(Path filePath) throws DataLoadingException;","lastModifiedDate":"2023-10-10"},{"lineNumber":32,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":33,"author":{"gitId":"evanyan13"},"content":"    /**","lastModifiedDate":"2023-10-10"},{"lineNumber":34,"author":{"gitId":"evanyan13"},"content":"     * Saves the given {@link ReadOnlyApplicationBook} to the storage.","lastModifiedDate":"2023-10-10"},{"lineNumber":35,"author":{"gitId":"evanyan13"},"content":"     * @param applicationBook cannot be null.","lastModifiedDate":"2023-10-10"},{"lineNumber":36,"author":{"gitId":"evanyan13"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2023-10-10"},{"lineNumber":37,"author":{"gitId":"evanyan13"},"content":"     */","lastModifiedDate":"2023-10-10"},{"lineNumber":38,"author":{"gitId":"evanyan13"},"content":"    void saveApplicationBook(ReadOnlyApplicationBook applicationBook) throws IOException;","lastModifiedDate":"2023-10-10"},{"lineNumber":39,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":40,"author":{"gitId":"evanyan13"},"content":"    /**","lastModifiedDate":"2023-10-10"},{"lineNumber":41,"author":{"gitId":"evanyan13"},"content":"     * @see #saveApplicationBook(ReadOnlyApplicationBook)","lastModifiedDate":"2023-10-10"},{"lineNumber":42,"author":{"gitId":"evanyan13"},"content":"     */","lastModifiedDate":"2023-10-10"},{"lineNumber":43,"author":{"gitId":"evanyan13"},"content":"    void saveApplicationBook(ReadOnlyApplicationBook applicationBook, Path filePath) throws IOException;","lastModifiedDate":"2023-10-10"},{"lineNumber":44,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":45,"author":{"gitId":"evanyan13"},"content":"}","lastModifiedDate":"2023-10-10"}],"authorContributionMap":{"evanyan13":45}},{"path":"src/main/java/seedu/application/storage/JsonAdaptedInterview.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"peiran18"},"content":"package seedu.application.storage;","lastModifiedDate":"2023-10-31"},{"lineNumber":2,"author":{"gitId":"peiran18"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":3,"author":{"gitId":"peiran18"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-10-31"},{"lineNumber":4,"author":{"gitId":"peiran18"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-10-31"},{"lineNumber":5,"author":{"gitId":"peiran18"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":6,"author":{"gitId":"peiran18"},"content":"import seedu.application.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-10-31"},{"lineNumber":7,"author":{"gitId":"peiran18"},"content":"import seedu.application.model.job.*;","lastModifiedDate":"2023-10-31"},{"lineNumber":8,"author":{"gitId":"peiran18"},"content":"import seedu.application.model.job.interview.Interview;","lastModifiedDate":"2023-10-31"},{"lineNumber":9,"author":{"gitId":"peiran18"},"content":"import seedu.application.model.job.interview.InterviewAddress;","lastModifiedDate":"2023-10-31"},{"lineNumber":10,"author":{"gitId":"peiran18"},"content":"import seedu.application.model.job.interview.InterviewDateTime;","lastModifiedDate":"2023-10-31"},{"lineNumber":11,"author":{"gitId":"peiran18"},"content":"import seedu.application.model.job.interview.InterviewType;","lastModifiedDate":"2023-10-31"},{"lineNumber":12,"author":{"gitId":"peiran18"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":13,"author":{"gitId":"peiran18"},"content":"/**","lastModifiedDate":"2023-10-31"},{"lineNumber":14,"author":{"gitId":"peiran18"},"content":" * Jackson-friendly version of {@link Job}.","lastModifiedDate":"2023-10-31"},{"lineNumber":15,"author":{"gitId":"peiran18"},"content":" */","lastModifiedDate":"2023-10-31"},{"lineNumber":16,"author":{"gitId":"peiran18"},"content":"class JsonAdaptedInterview {","lastModifiedDate":"2023-10-31"},{"lineNumber":17,"author":{"gitId":"peiran18"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":18,"author":{"gitId":"peiran18"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Interview\u0027s %s field is missing!\";","lastModifiedDate":"2023-10-31"},{"lineNumber":19,"author":{"gitId":"peiran18"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":20,"author":{"gitId":"peiran18"},"content":"    private final String interviewType;","lastModifiedDate":"2023-10-31"},{"lineNumber":21,"author":{"gitId":"peiran18"},"content":"    private final String interviewDateTime;","lastModifiedDate":"2023-10-31"},{"lineNumber":22,"author":{"gitId":"peiran18"},"content":"    private final String interviewAddress;","lastModifiedDate":"2023-10-31"},{"lineNumber":23,"author":{"gitId":"peiran18"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":24,"author":{"gitId":"peiran18"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":25,"author":{"gitId":"peiran18"},"content":"     * Constructs a {@code JsonAdaptedJob} with the given job details.","lastModifiedDate":"2023-10-31"},{"lineNumber":26,"author":{"gitId":"peiran18"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":27,"author":{"gitId":"peiran18"},"content":"    @JsonCreator","lastModifiedDate":"2023-10-31"},{"lineNumber":28,"author":{"gitId":"peiran18"},"content":"    public JsonAdaptedInterview(@JsonProperty(\"interviewType\") String interviewType,","lastModifiedDate":"2023-10-31"},{"lineNumber":29,"author":{"gitId":"peiran18"},"content":"                                @JsonProperty(\"interviewDateTime\") String interviewDateTime,","lastModifiedDate":"2023-10-31"},{"lineNumber":30,"author":{"gitId":"peiran18"},"content":"                                @JsonProperty(\"interviewAddress\") String interviewAddress) {","lastModifiedDate":"2023-10-31"},{"lineNumber":31,"author":{"gitId":"peiran18"},"content":"        this.interviewType \u003d interviewType;","lastModifiedDate":"2023-10-31"},{"lineNumber":32,"author":{"gitId":"peiran18"},"content":"        this.interviewDateTime \u003d interviewDateTime;","lastModifiedDate":"2023-10-31"},{"lineNumber":33,"author":{"gitId":"peiran18"},"content":"        this.interviewAddress \u003d interviewAddress;","lastModifiedDate":"2023-10-31"},{"lineNumber":34,"author":{"gitId":"peiran18"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":35,"author":{"gitId":"peiran18"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":36,"author":{"gitId":"peiran18"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":37,"author":{"gitId":"peiran18"},"content":"     * Converts a given {@code Job} into this class for Jackson use.","lastModifiedDate":"2023-10-31"},{"lineNumber":38,"author":{"gitId":"peiran18"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":39,"author":{"gitId":"peiran18"},"content":"    public JsonAdaptedInterview(Interview source) {","lastModifiedDate":"2023-10-31"},{"lineNumber":40,"author":{"gitId":"peiran18"},"content":"        interviewType \u003d source.getInterviewType().interviewType;","lastModifiedDate":"2023-10-31"},{"lineNumber":41,"author":{"gitId":"peiran18"},"content":"        interviewDateTime \u003d source.getInterviewDateTime().interviewDateTime;","lastModifiedDate":"2023-10-31"},{"lineNumber":42,"author":{"gitId":"peiran18"},"content":"        interviewAddress \u003d source.getInterviewAddress().interviewAddress;","lastModifiedDate":"2023-10-31"},{"lineNumber":43,"author":{"gitId":"peiran18"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":44,"author":{"gitId":"peiran18"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":45,"author":{"gitId":"peiran18"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":46,"author":{"gitId":"peiran18"},"content":"     * Converts this Jackson-friendly adapted job object into the model\u0027s {@code Job} object.","lastModifiedDate":"2023-10-31"},{"lineNumber":47,"author":{"gitId":"peiran18"},"content":"     *","lastModifiedDate":"2023-10-31"},{"lineNumber":48,"author":{"gitId":"peiran18"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted job.","lastModifiedDate":"2023-10-31"},{"lineNumber":49,"author":{"gitId":"peiran18"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":50,"author":{"gitId":"peiran18"},"content":"    public Interview toModelType() throws IllegalValueException {","lastModifiedDate":"2023-10-31"},{"lineNumber":51,"author":{"gitId":"peiran18"},"content":"        if (interviewType \u003d\u003d null) {","lastModifiedDate":"2023-10-31"},{"lineNumber":52,"author":{"gitId":"peiran18"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2023-10-31"},{"lineNumber":53,"author":{"gitId":"peiran18"},"content":"                InterviewType.class.getSimpleName()));","lastModifiedDate":"2023-10-31"},{"lineNumber":54,"author":{"gitId":"peiran18"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":55,"author":{"gitId":"peiran18"},"content":"        if (!InterviewType.isValidInterviewType(interviewType)) {","lastModifiedDate":"2023-10-31"},{"lineNumber":56,"author":{"gitId":"peiran18"},"content":"            throw new IllegalValueException(InterviewType.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-31"},{"lineNumber":57,"author":{"gitId":"peiran18"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":58,"author":{"gitId":"peiran18"},"content":"        final InterviewType modelInterviewType \u003d new InterviewType(interviewType);","lastModifiedDate":"2023-10-31"},{"lineNumber":59,"author":{"gitId":"peiran18"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":60,"author":{"gitId":"peiran18"},"content":"        if (interviewDateTime \u003d\u003d null) {","lastModifiedDate":"2023-10-31"},{"lineNumber":61,"author":{"gitId":"peiran18"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2023-10-31"},{"lineNumber":62,"author":{"gitId":"peiran18"},"content":"                InterviewDateTime.class.getSimpleName()));","lastModifiedDate":"2023-10-31"},{"lineNumber":63,"author":{"gitId":"peiran18"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":64,"author":{"gitId":"peiran18"},"content":"        if (!InterviewDateTime.isValidInterviewDateTime(interviewDateTime)) {","lastModifiedDate":"2023-10-31"},{"lineNumber":65,"author":{"gitId":"peiran18"},"content":"            throw new IllegalValueException(InterviewDateTime.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-31"},{"lineNumber":66,"author":{"gitId":"peiran18"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":67,"author":{"gitId":"peiran18"},"content":"        final InterviewDateTime modelInterviewDateTime \u003d new InterviewDateTime(interviewDateTime);","lastModifiedDate":"2023-10-31"},{"lineNumber":68,"author":{"gitId":"peiran18"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":69,"author":{"gitId":"peiran18"},"content":"        if (interviewAddress \u003d\u003d null) {","lastModifiedDate":"2023-10-31"},{"lineNumber":70,"author":{"gitId":"peiran18"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2023-10-31"},{"lineNumber":71,"author":{"gitId":"peiran18"},"content":"                InterviewAddress.class.getSimpleName()));","lastModifiedDate":"2023-10-31"},{"lineNumber":72,"author":{"gitId":"peiran18"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":73,"author":{"gitId":"peiran18"},"content":"        if (!InterviewAddress.isValidInterviewAddress(interviewAddress)) {","lastModifiedDate":"2023-10-31"},{"lineNumber":74,"author":{"gitId":"peiran18"},"content":"            throw new IllegalValueException(InterviewAddress.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-31"},{"lineNumber":75,"author":{"gitId":"peiran18"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":76,"author":{"gitId":"peiran18"},"content":"        final InterviewAddress modelInterviewAddress \u003d new InterviewAddress(interviewAddress);","lastModifiedDate":"2023-10-31"},{"lineNumber":77,"author":{"gitId":"peiran18"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":78,"author":{"gitId":"peiran18"},"content":"        return new Interview(modelInterviewType, modelInterviewDateTime, modelInterviewAddress);","lastModifiedDate":"2023-10-31"},{"lineNumber":79,"author":{"gitId":"peiran18"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":80,"author":{"gitId":"peiran18"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":81,"author":{"gitId":"peiran18"},"content":"}","lastModifiedDate":"2023-10-31"}],"authorContributionMap":{"peiran18":81}},{"path":"src/main/java/seedu/application/storage/JsonAdaptedJob.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"evanyan13"},"content":"package seedu.application.storage;","lastModifiedDate":"2023-10-10"},{"lineNumber":2,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":3,"author":{"gitId":"peiran18"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-31"},{"lineNumber":4,"author":{"gitId":"peiran18"},"content":"import java.util.List;","lastModifiedDate":"2023-10-31"},{"lineNumber":5,"author":{"gitId":"peiran18"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-10-31"},{"lineNumber":6,"author":{"gitId":"peiran18"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":7,"author":{"gitId":"JeremyYong128"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-10-04"},{"lineNumber":8,"author":{"gitId":"JeremyYong128"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-10-04"},{"lineNumber":9,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":10,"author":{"gitId":"evanyan13"},"content":"import seedu.application.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-10-10"},{"lineNumber":11,"author":{"gitId":"peiran18"},"content":"import seedu.application.model.job.*;","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"peiran18"},"content":"import seedu.application.model.job.interview.Interview;","lastModifiedDate":"2023-10-31"},{"lineNumber":13,"author":{"gitId":"peiran18"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":14,"author":{"gitId":"JeremyYong128"},"content":"/**","lastModifiedDate":"2023-10-04"},{"lineNumber":15,"author":{"gitId":"JeremyYong128"},"content":" * Jackson-friendly version of {@link Job}.","lastModifiedDate":"2023-10-04"},{"lineNumber":16,"author":{"gitId":"JeremyYong128"},"content":" */","lastModifiedDate":"2023-10-04"},{"lineNumber":17,"author":{"gitId":"JeremyYong128"},"content":"class JsonAdaptedJob {","lastModifiedDate":"2023-10-04"},{"lineNumber":18,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":19,"author":{"gitId":"JeremyYong128"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Job\u0027s %s field is missing!\";","lastModifiedDate":"2023-10-04"},{"lineNumber":20,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":21,"author":{"gitId":"JeremyYong128"},"content":"    private final String role;","lastModifiedDate":"2023-10-04"},{"lineNumber":22,"author":{"gitId":"JeremyYong128"},"content":"    private final String company;","lastModifiedDate":"2023-10-04"},{"lineNumber":23,"author":{"gitId":"peiran18"},"content":"    private final String status;","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"evanyan13"},"content":"    private final String deadline;","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"migfoo02"},"content":"    private final String jobType;","lastModifiedDate":"2023-10-20"},{"lineNumber":26,"author":{"gitId":"czhiruo"},"content":"    private final String industry;","lastModifiedDate":"2023-10-20"},{"lineNumber":27,"author":{"gitId":"peiran18"},"content":"    private final List\u003cJsonAdaptedInterview\u003e interviews;","lastModifiedDate":"2023-10-31"},{"lineNumber":28,"author":{"gitId":"peiran18"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":29,"author":{"gitId":"JeremyYong128"},"content":"    /**","lastModifiedDate":"2023-10-04"},{"lineNumber":30,"author":{"gitId":"JeremyYong128"},"content":"     * Constructs a {@code JsonAdaptedJob} with the given job details.","lastModifiedDate":"2023-10-04"},{"lineNumber":31,"author":{"gitId":"JeremyYong128"},"content":"     */","lastModifiedDate":"2023-10-04"},{"lineNumber":32,"author":{"gitId":"JeremyYong128"},"content":"    @JsonCreator","lastModifiedDate":"2023-10-04"},{"lineNumber":33,"author":{"gitId":"evanyan13"},"content":"    public JsonAdaptedJob(@JsonProperty(\"role\") String role, @JsonProperty(\"company\") String company,","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"czhiruo"},"content":"                          @JsonProperty(\"status\") String status, @JsonProperty(\"deadline\") String deadline,","lastModifiedDate":"2023-10-20"},{"lineNumber":35,"author":{"gitId":"peiran18"},"content":"                          @JsonProperty(\"jobType\") String jobType, @JsonProperty(\"industry\") String industry,","lastModifiedDate":"2023-10-31"},{"lineNumber":36,"author":{"gitId":"peiran18"},"content":"                          @JsonProperty(\"interviews\") List\u003cJsonAdaptedInterview\u003e interviews) {","lastModifiedDate":"2023-10-31"},{"lineNumber":37,"author":{"gitId":"JeremyYong128"},"content":"        this.role \u003d role;","lastModifiedDate":"2023-10-04"},{"lineNumber":38,"author":{"gitId":"JeremyYong128"},"content":"        this.company \u003d company;","lastModifiedDate":"2023-10-04"},{"lineNumber":39,"author":{"gitId":"peiran18"},"content":"        this.status \u003d status;","lastModifiedDate":"2023-10-15"},{"lineNumber":40,"author":{"gitId":"evanyan13"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2023-10-13"},{"lineNumber":41,"author":{"gitId":"migfoo02"},"content":"        this.jobType \u003d jobType;","lastModifiedDate":"2023-10-20"},{"lineNumber":42,"author":{"gitId":"czhiruo"},"content":"        this.industry \u003d industry;","lastModifiedDate":"2023-10-20"},{"lineNumber":43,"author":{"gitId":"peiran18"},"content":"        this.interviews \u003d interviews;","lastModifiedDate":"2023-10-31"},{"lineNumber":44,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":45,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":46,"author":{"gitId":"JeremyYong128"},"content":"    /**","lastModifiedDate":"2023-10-04"},{"lineNumber":47,"author":{"gitId":"JeremyYong128"},"content":"     * Converts a given {@code Job} into this class for Jackson use.","lastModifiedDate":"2023-10-04"},{"lineNumber":48,"author":{"gitId":"JeremyYong128"},"content":"     */","lastModifiedDate":"2023-10-04"},{"lineNumber":49,"author":{"gitId":"JeremyYong128"},"content":"    public JsonAdaptedJob(Job source) {","lastModifiedDate":"2023-10-04"},{"lineNumber":50,"author":{"gitId":"JeremyYong128"},"content":"        role \u003d source.getRole().description;","lastModifiedDate":"2023-10-04"},{"lineNumber":51,"author":{"gitId":"JeremyYong128"},"content":"        company \u003d source.getCompany().name;","lastModifiedDate":"2023-10-04"},{"lineNumber":52,"author":{"gitId":"peiran18"},"content":"        status \u003d source.getStatus().status;","lastModifiedDate":"2023-10-15"},{"lineNumber":53,"author":{"gitId":"evanyan13"},"content":"        deadline \u003d source.getDeadline().deadline;","lastModifiedDate":"2023-10-13"},{"lineNumber":54,"author":{"gitId":"migfoo02"},"content":"        jobType \u003d source.getJobType().jobType;","lastModifiedDate":"2023-10-20"},{"lineNumber":55,"author":{"gitId":"czhiruo"},"content":"        industry \u003d source.getIndustry().industry;","lastModifiedDate":"2023-10-20"},{"lineNumber":56,"author":{"gitId":"peiran18"},"content":"        interviews \u003d source.getInterviews().stream()","lastModifiedDate":"2023-10-31"},{"lineNumber":57,"author":{"gitId":"peiran18"},"content":"            .map(JsonAdaptedInterview::new)","lastModifiedDate":"2023-10-31"},{"lineNumber":58,"author":{"gitId":"peiran18"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2023-10-31"},{"lineNumber":59,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":60,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":61,"author":{"gitId":"JeremyYong128"},"content":"    /**","lastModifiedDate":"2023-10-04"},{"lineNumber":62,"author":{"gitId":"JeremyYong128"},"content":"     * Converts this Jackson-friendly adapted job object into the model\u0027s {@code Job} object.","lastModifiedDate":"2023-10-04"},{"lineNumber":63,"author":{"gitId":"JeremyYong128"},"content":"     *","lastModifiedDate":"2023-10-04"},{"lineNumber":64,"author":{"gitId":"JeremyYong128"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted job.","lastModifiedDate":"2023-10-04"},{"lineNumber":65,"author":{"gitId":"JeremyYong128"},"content":"     */","lastModifiedDate":"2023-10-04"},{"lineNumber":66,"author":{"gitId":"JeremyYong128"},"content":"    public Job toModelType() throws IllegalValueException {","lastModifiedDate":"2023-10-04"},{"lineNumber":67,"author":{"gitId":"JeremyYong128"},"content":"        if (role \u003d\u003d null) {","lastModifiedDate":"2023-10-04"},{"lineNumber":68,"author":{"gitId":"evanyan13"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2023-10-14"},{"lineNumber":69,"author":{"gitId":"evanyan13"},"content":"                    Role.class.getSimpleName()));","lastModifiedDate":"2023-10-14"},{"lineNumber":70,"author":{"gitId":"JeremyYong128"},"content":"        }","lastModifiedDate":"2023-10-04"},{"lineNumber":71,"author":{"gitId":"JeremyYong128"},"content":"        if (!Role.isValidRole(role)) {","lastModifiedDate":"2023-10-04"},{"lineNumber":72,"author":{"gitId":"JeremyYong128"},"content":"            throw new IllegalValueException(Role.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-04"},{"lineNumber":73,"author":{"gitId":"JeremyYong128"},"content":"        }","lastModifiedDate":"2023-10-04"},{"lineNumber":74,"author":{"gitId":"JeremyYong128"},"content":"        final Role modelRole \u003d new Role(role);","lastModifiedDate":"2023-10-04"},{"lineNumber":75,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":76,"author":{"gitId":"JeremyYong128"},"content":"        if (company \u003d\u003d null) {","lastModifiedDate":"2023-10-04"},{"lineNumber":77,"author":{"gitId":"evanyan13"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2023-10-14"},{"lineNumber":78,"author":{"gitId":"evanyan13"},"content":"                    Company.class.getSimpleName()));","lastModifiedDate":"2023-10-14"},{"lineNumber":79,"author":{"gitId":"JeremyYong128"},"content":"        }","lastModifiedDate":"2023-10-04"},{"lineNumber":80,"author":{"gitId":"JeremyYong128"},"content":"        if (!Company.isValidCompany(company)) {","lastModifiedDate":"2023-10-04"},{"lineNumber":81,"author":{"gitId":"JeremyYong128"},"content":"            throw new IllegalValueException(Company.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-04"},{"lineNumber":82,"author":{"gitId":"JeremyYong128"},"content":"        }","lastModifiedDate":"2023-10-04"},{"lineNumber":83,"author":{"gitId":"JeremyYong128"},"content":"        final Company modelCompany \u003d new Company(company);","lastModifiedDate":"2023-10-04"},{"lineNumber":84,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":85,"author":{"gitId":"peiran18"},"content":"        if (status \u003d\u003d null) {","lastModifiedDate":"2023-10-15"},{"lineNumber":86,"author":{"gitId":"peiran18"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2023-10-15"},{"lineNumber":87,"author":{"gitId":"peiran18"},"content":"                    Status.class.getSimpleName()));","lastModifiedDate":"2023-10-15"},{"lineNumber":88,"author":{"gitId":"peiran18"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":89,"author":{"gitId":"peiran18"},"content":"        if (!Status.isValidStatus(status)) {","lastModifiedDate":"2023-10-15"},{"lineNumber":90,"author":{"gitId":"peiran18"},"content":"            throw new IllegalValueException(Status.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-15"},{"lineNumber":91,"author":{"gitId":"peiran18"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":92,"author":{"gitId":"peiran18"},"content":"        final Status modelStatus \u003d new Status(status);","lastModifiedDate":"2023-10-15"},{"lineNumber":93,"author":{"gitId":"peiran18"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":94,"author":{"gitId":"evanyan13"},"content":"        if (deadline \u003d\u003d null) {","lastModifiedDate":"2023-10-13"},{"lineNumber":95,"author":{"gitId":"evanyan13"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2023-10-14"},{"lineNumber":96,"author":{"gitId":"evanyan13"},"content":"                    Deadline.class.getSimpleName()));","lastModifiedDate":"2023-10-14"},{"lineNumber":97,"author":{"gitId":"evanyan13"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":98,"author":{"gitId":"evanyan13"},"content":"        if (!Deadline.isValidDeadline(deadline)) {","lastModifiedDate":"2023-10-13"},{"lineNumber":99,"author":{"gitId":"evanyan13"},"content":"            throw new IllegalValueException(Deadline.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-13"},{"lineNumber":100,"author":{"gitId":"evanyan13"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":101,"author":{"gitId":"evanyan13"},"content":"        final Deadline modelDeadline \u003d new Deadline(deadline);","lastModifiedDate":"2023-10-13"},{"lineNumber":102,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":103,"author":{"gitId":"migfoo02"},"content":"        if (jobType \u003d\u003d null) {","lastModifiedDate":"2023-10-20"},{"lineNumber":104,"author":{"gitId":"migfoo02"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2023-10-20"},{"lineNumber":105,"author":{"gitId":"migfoo02"},"content":"                    JobType.class.getSimpleName()));","lastModifiedDate":"2023-10-20"},{"lineNumber":106,"author":{"gitId":"migfoo02"},"content":"        }","lastModifiedDate":"2023-10-20"},{"lineNumber":107,"author":{"gitId":"migfoo02"},"content":"        if (!JobType.isValidJobType(jobType)) {","lastModifiedDate":"2023-10-20"},{"lineNumber":108,"author":{"gitId":"migfoo02"},"content":"            throw new IllegalValueException(JobType.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-20"},{"lineNumber":109,"author":{"gitId":"migfoo02"},"content":"        }","lastModifiedDate":"2023-10-20"},{"lineNumber":110,"author":{"gitId":"migfoo02"},"content":"        final JobType modelJobType \u003d new JobType(jobType);","lastModifiedDate":"2023-10-20"},{"lineNumber":111,"author":{"gitId":"migfoo02"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":112,"author":{"gitId":"czhiruo"},"content":"        if (industry \u003d\u003d null) {","lastModifiedDate":"2023-10-20"},{"lineNumber":113,"author":{"gitId":"czhiruo"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2023-10-20"},{"lineNumber":114,"author":{"gitId":"czhiruo"},"content":"                    Industry.class.getSimpleName()));","lastModifiedDate":"2023-10-20"},{"lineNumber":115,"author":{"gitId":"czhiruo"},"content":"        }","lastModifiedDate":"2023-10-20"},{"lineNumber":116,"author":{"gitId":"czhiruo"},"content":"        if (!Industry.isValidIndustry(industry)) {","lastModifiedDate":"2023-10-20"},{"lineNumber":117,"author":{"gitId":"czhiruo"},"content":"            throw new IllegalValueException(Industry.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-20"},{"lineNumber":118,"author":{"gitId":"czhiruo"},"content":"        }","lastModifiedDate":"2023-10-20"},{"lineNumber":119,"author":{"gitId":"czhiruo"},"content":"        final Industry modelIndustry \u003d new Industry(industry);","lastModifiedDate":"2023-10-20"},{"lineNumber":120,"author":{"gitId":"czhiruo"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":121,"author":{"gitId":"peiran18"},"content":"        List\u003cInterview\u003e modelInterviews \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-31"},{"lineNumber":122,"author":{"gitId":"peiran18"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":123,"author":{"gitId":"peiran18"},"content":"        if (interviews !\u003d null) {","lastModifiedDate":"2023-10-31"},{"lineNumber":124,"author":{"gitId":"peiran18"},"content":"            for (JsonAdaptedInterview interview : interviews) {","lastModifiedDate":"2023-10-31"},{"lineNumber":125,"author":{"gitId":"peiran18"},"content":"                Interview toModelType \u003d interview.toModelType();","lastModifiedDate":"2023-10-31"},{"lineNumber":126,"author":{"gitId":"peiran18"},"content":"                modelInterviews.add(toModelType);","lastModifiedDate":"2023-10-31"},{"lineNumber":127,"author":{"gitId":"peiran18"},"content":"            }","lastModifiedDate":"2023-10-31"},{"lineNumber":128,"author":{"gitId":"peiran18"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":129,"author":{"gitId":"peiran18"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":130,"author":{"gitId":"peiran18"},"content":"        return new Job(modelRole, modelCompany, modelDeadline, modelStatus,","lastModifiedDate":"2023-10-31"},{"lineNumber":131,"author":{"gitId":"peiran18"},"content":"                modelJobType, modelIndustry, modelInterviews);","lastModifiedDate":"2023-10-31"},{"lineNumber":132,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":133,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":134,"author":{"gitId":"JeremyYong128"},"content":"}","lastModifiedDate":"2023-10-04"}],"authorContributionMap":{"czhiruo":13,"evanyan13":19,"peiran18":38,"JeremyYong128":52,"migfoo02":12}},{"path":"src/main/java/seedu/application/storage/JsonApplicationBookStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"evanyan13"},"content":"package seedu.application.storage;","lastModifiedDate":"2023-10-10"},{"lineNumber":2,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":3,"author":{"gitId":"evanyan13"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-10"},{"lineNumber":4,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":5,"author":{"gitId":"evanyan13"},"content":"import java.io.IOException;","lastModifiedDate":"2023-10-10"},{"lineNumber":6,"author":{"gitId":"evanyan13"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-10-10"},{"lineNumber":7,"author":{"gitId":"evanyan13"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-10"},{"lineNumber":8,"author":{"gitId":"evanyan13"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-10-10"},{"lineNumber":9,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":10,"author":{"gitId":"evanyan13"},"content":"import seedu.application.commons.core.LogsCenter;","lastModifiedDate":"2023-10-10"},{"lineNumber":11,"author":{"gitId":"evanyan13"},"content":"import seedu.application.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-10-10"},{"lineNumber":12,"author":{"gitId":"evanyan13"},"content":"import seedu.application.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-10-10"},{"lineNumber":13,"author":{"gitId":"evanyan13"},"content":"import seedu.application.commons.util.FileUtil;","lastModifiedDate":"2023-10-10"},{"lineNumber":14,"author":{"gitId":"evanyan13"},"content":"import seedu.application.commons.util.JsonUtil;","lastModifiedDate":"2023-10-10"},{"lineNumber":15,"author":{"gitId":"evanyan13"},"content":"import seedu.application.model.ReadOnlyApplicationBook;","lastModifiedDate":"2023-10-10"},{"lineNumber":16,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":17,"author":{"gitId":"evanyan13"},"content":"/**","lastModifiedDate":"2023-10-10"},{"lineNumber":18,"author":{"gitId":"evanyan13"},"content":" * A class to access ApplicationBook data stored as a json file on the hard disk.","lastModifiedDate":"2023-10-10"},{"lineNumber":19,"author":{"gitId":"evanyan13"},"content":" */","lastModifiedDate":"2023-10-10"},{"lineNumber":20,"author":{"gitId":"evanyan13"},"content":"public class JsonApplicationBookStorage implements ApplicationBookStorage {","lastModifiedDate":"2023-10-10"},{"lineNumber":21,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":22,"author":{"gitId":"evanyan13"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonApplicationBookStorage.class);","lastModifiedDate":"2023-10-10"},{"lineNumber":23,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":24,"author":{"gitId":"migfoo02"},"content":"    private final Path filePath;","lastModifiedDate":"2023-10-22"},{"lineNumber":25,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":26,"author":{"gitId":"evanyan13"},"content":"    public JsonApplicationBookStorage(Path filePath) {","lastModifiedDate":"2023-10-10"},{"lineNumber":27,"author":{"gitId":"evanyan13"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-10-10"},{"lineNumber":28,"author":{"gitId":"evanyan13"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":29,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":30,"author":{"gitId":"evanyan13"},"content":"    public Path getApplicationBookFilePath() {","lastModifiedDate":"2023-10-10"},{"lineNumber":31,"author":{"gitId":"evanyan13"},"content":"        return filePath;","lastModifiedDate":"2023-10-10"},{"lineNumber":32,"author":{"gitId":"evanyan13"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":33,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":34,"author":{"gitId":"evanyan13"},"content":"    @Override","lastModifiedDate":"2023-10-10"},{"lineNumber":35,"author":{"gitId":"evanyan13"},"content":"    public Optional\u003cReadOnlyApplicationBook\u003e readApplicationBook() throws DataLoadingException {","lastModifiedDate":"2023-10-10"},{"lineNumber":36,"author":{"gitId":"evanyan13"},"content":"        return readApplicationBook(filePath);","lastModifiedDate":"2023-10-10"},{"lineNumber":37,"author":{"gitId":"evanyan13"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":38,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":39,"author":{"gitId":"evanyan13"},"content":"    /**","lastModifiedDate":"2023-10-10"},{"lineNumber":40,"author":{"gitId":"evanyan13"},"content":"     * Similar to {@link #readApplicationBook()}.","lastModifiedDate":"2023-10-10"},{"lineNumber":41,"author":{"gitId":"evanyan13"},"content":"     *","lastModifiedDate":"2023-10-10"},{"lineNumber":42,"author":{"gitId":"evanyan13"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2023-10-10"},{"lineNumber":43,"author":{"gitId":"evanyan13"},"content":"     * @throws DataLoadingException if loading the data from storage failed.","lastModifiedDate":"2023-10-10"},{"lineNumber":44,"author":{"gitId":"evanyan13"},"content":"     */","lastModifiedDate":"2023-10-10"},{"lineNumber":45,"author":{"gitId":"evanyan13"},"content":"    public Optional\u003cReadOnlyApplicationBook\u003e readApplicationBook(Path filePath) throws DataLoadingException {","lastModifiedDate":"2023-10-10"},{"lineNumber":46,"author":{"gitId":"evanyan13"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2023-10-10"},{"lineNumber":47,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":48,"author":{"gitId":"evanyan13"},"content":"        Optional\u003cJsonSerializableApplicationBook\u003e jsonApplicationBook \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2023-10-10"},{"lineNumber":49,"author":{"gitId":"evanyan13"},"content":"                filePath, JsonSerializableApplicationBook.class);","lastModifiedDate":"2023-10-10"},{"lineNumber":50,"author":{"gitId":"migfoo02"},"content":"        if (jsonApplicationBook.isEmpty()) {","lastModifiedDate":"2023-10-22"},{"lineNumber":51,"author":{"gitId":"evanyan13"},"content":"            return Optional.empty();","lastModifiedDate":"2023-10-10"},{"lineNumber":52,"author":{"gitId":"evanyan13"},"content":"        }","lastModifiedDate":"2023-10-10"},{"lineNumber":53,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":54,"author":{"gitId":"evanyan13"},"content":"        try {","lastModifiedDate":"2023-10-10"},{"lineNumber":55,"author":{"gitId":"evanyan13"},"content":"            return Optional.of(jsonApplicationBook.get().toModelType());","lastModifiedDate":"2023-10-10"},{"lineNumber":56,"author":{"gitId":"evanyan13"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2023-10-10"},{"lineNumber":57,"author":{"gitId":"evanyan13"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2023-10-10"},{"lineNumber":58,"author":{"gitId":"evanyan13"},"content":"            throw new DataLoadingException(ive);","lastModifiedDate":"2023-10-10"},{"lineNumber":59,"author":{"gitId":"evanyan13"},"content":"        }","lastModifiedDate":"2023-10-10"},{"lineNumber":60,"author":{"gitId":"evanyan13"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":61,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":62,"author":{"gitId":"evanyan13"},"content":"    @Override","lastModifiedDate":"2023-10-10"},{"lineNumber":63,"author":{"gitId":"evanyan13"},"content":"    public void saveApplicationBook(ReadOnlyApplicationBook applicationBook) throws IOException {","lastModifiedDate":"2023-10-10"},{"lineNumber":64,"author":{"gitId":"evanyan13"},"content":"        saveApplicationBook(applicationBook, filePath);","lastModifiedDate":"2023-10-10"},{"lineNumber":65,"author":{"gitId":"evanyan13"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":66,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":67,"author":{"gitId":"evanyan13"},"content":"    /**","lastModifiedDate":"2023-10-10"},{"lineNumber":68,"author":{"gitId":"evanyan13"},"content":"     * Similar to {@link #saveApplicationBook(ReadOnlyApplicationBook)}.","lastModifiedDate":"2023-10-10"},{"lineNumber":69,"author":{"gitId":"evanyan13"},"content":"     *","lastModifiedDate":"2023-10-10"},{"lineNumber":70,"author":{"gitId":"evanyan13"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2023-10-10"},{"lineNumber":71,"author":{"gitId":"evanyan13"},"content":"     */","lastModifiedDate":"2023-10-10"},{"lineNumber":72,"author":{"gitId":"evanyan13"},"content":"    public void saveApplicationBook(ReadOnlyApplicationBook applicationBook, Path filePath) throws IOException {","lastModifiedDate":"2023-10-10"},{"lineNumber":73,"author":{"gitId":"evanyan13"},"content":"        requireNonNull(applicationBook);","lastModifiedDate":"2023-10-10"},{"lineNumber":74,"author":{"gitId":"evanyan13"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2023-10-10"},{"lineNumber":75,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":76,"author":{"gitId":"evanyan13"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2023-10-10"},{"lineNumber":77,"author":{"gitId":"evanyan13"},"content":"        JsonUtil.saveJsonFile(new JsonSerializableApplicationBook(applicationBook), filePath);","lastModifiedDate":"2023-10-10"},{"lineNumber":78,"author":{"gitId":"evanyan13"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":79,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":80,"author":{"gitId":"evanyan13"},"content":"}","lastModifiedDate":"2023-10-10"}],"authorContributionMap":{"evanyan13":78,"migfoo02":2}},{"path":"src/main/java/seedu/application/storage/JsonSerializableApplicationBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"evanyan13"},"content":"package seedu.application.storage;","lastModifiedDate":"2023-10-10"},{"lineNumber":2,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":3,"author":{"gitId":"evanyan13"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-10"},{"lineNumber":4,"author":{"gitId":"evanyan13"},"content":"import java.util.List;","lastModifiedDate":"2023-10-10"},{"lineNumber":5,"author":{"gitId":"evanyan13"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-10-10"},{"lineNumber":6,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":7,"author":{"gitId":"evanyan13"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-10-10"},{"lineNumber":8,"author":{"gitId":"evanyan13"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-10-10"},{"lineNumber":9,"author":{"gitId":"evanyan13"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2023-10-10"},{"lineNumber":10,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":11,"author":{"gitId":"evanyan13"},"content":"import seedu.application.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-10-10"},{"lineNumber":12,"author":{"gitId":"evanyan13"},"content":"import seedu.application.model.ApplicationBook;","lastModifiedDate":"2023-10-10"},{"lineNumber":13,"author":{"gitId":"evanyan13"},"content":"import seedu.application.model.ReadOnlyApplicationBook;","lastModifiedDate":"2023-10-10"},{"lineNumber":14,"author":{"gitId":"evanyan13"},"content":"import seedu.application.model.job.Job;","lastModifiedDate":"2023-10-10"},{"lineNumber":15,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":16,"author":{"gitId":"evanyan13"},"content":"/**","lastModifiedDate":"2023-10-10"},{"lineNumber":17,"author":{"gitId":"evanyan13"},"content":" * An Immutable ApplicationBook that is serializable to JSON format.","lastModifiedDate":"2023-10-10"},{"lineNumber":18,"author":{"gitId":"evanyan13"},"content":" */","lastModifiedDate":"2023-10-10"},{"lineNumber":19,"author":{"gitId":"evanyan13"},"content":"@JsonRootName(value \u003d \"applicationbook\")","lastModifiedDate":"2023-10-10"},{"lineNumber":20,"author":{"gitId":"evanyan13"},"content":"class JsonSerializableApplicationBook {","lastModifiedDate":"2023-10-10"},{"lineNumber":21,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":22,"author":{"gitId":"evanyan13"},"content":"    public static final String MESSAGE_DUPLICATE_JOB \u003d \"Jobs list contains duplicate job(s).\";","lastModifiedDate":"2023-10-10"},{"lineNumber":23,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":24,"author":{"gitId":"evanyan13"},"content":"    private final List\u003cJsonAdaptedJob\u003e jobs \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-10"},{"lineNumber":25,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":26,"author":{"gitId":"evanyan13"},"content":"    /**","lastModifiedDate":"2023-10-10"},{"lineNumber":27,"author":{"gitId":"evanyan13"},"content":"     * Constructs a {@code JsonSerializableApplicationBook} with the given jobs.","lastModifiedDate":"2023-10-10"},{"lineNumber":28,"author":{"gitId":"evanyan13"},"content":"     */","lastModifiedDate":"2023-10-10"},{"lineNumber":29,"author":{"gitId":"evanyan13"},"content":"    @JsonCreator","lastModifiedDate":"2023-10-10"},{"lineNumber":30,"author":{"gitId":"evanyan13"},"content":"    public JsonSerializableApplicationBook(@JsonProperty(\"jobs\") List\u003cJsonAdaptedJob\u003e jobs) {","lastModifiedDate":"2023-10-10"},{"lineNumber":31,"author":{"gitId":"evanyan13"},"content":"        this.jobs.addAll(jobs);","lastModifiedDate":"2023-10-10"},{"lineNumber":32,"author":{"gitId":"evanyan13"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":33,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":34,"author":{"gitId":"evanyan13"},"content":"    /**","lastModifiedDate":"2023-10-10"},{"lineNumber":35,"author":{"gitId":"evanyan13"},"content":"     * Converts a given {@code ReadOnlyApplicationBook} into this class for Jackson use.","lastModifiedDate":"2023-10-10"},{"lineNumber":36,"author":{"gitId":"evanyan13"},"content":"     *","lastModifiedDate":"2023-10-10"},{"lineNumber":37,"author":{"gitId":"evanyan13"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableApplicationBook}.","lastModifiedDate":"2023-10-10"},{"lineNumber":38,"author":{"gitId":"evanyan13"},"content":"     */","lastModifiedDate":"2023-10-10"},{"lineNumber":39,"author":{"gitId":"evanyan13"},"content":"    public JsonSerializableApplicationBook(ReadOnlyApplicationBook source) {","lastModifiedDate":"2023-10-10"},{"lineNumber":40,"author":{"gitId":"evanyan13"},"content":"        jobs.addAll(source.getJobList().stream().map(JsonAdaptedJob::new).collect(Collectors.toList()));","lastModifiedDate":"2023-10-10"},{"lineNumber":41,"author":{"gitId":"evanyan13"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":42,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":43,"author":{"gitId":"evanyan13"},"content":"    /**","lastModifiedDate":"2023-10-10"},{"lineNumber":44,"author":{"gitId":"evanyan13"},"content":"     * Converts this application book into the model\u0027s {@code ApplicationBook} object.","lastModifiedDate":"2023-10-10"},{"lineNumber":45,"author":{"gitId":"evanyan13"},"content":"     *","lastModifiedDate":"2023-10-10"},{"lineNumber":46,"author":{"gitId":"evanyan13"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2023-10-10"},{"lineNumber":47,"author":{"gitId":"evanyan13"},"content":"     */","lastModifiedDate":"2023-10-10"},{"lineNumber":48,"author":{"gitId":"evanyan13"},"content":"    public ApplicationBook toModelType() throws IllegalValueException {","lastModifiedDate":"2023-10-10"},{"lineNumber":49,"author":{"gitId":"evanyan13"},"content":"        ApplicationBook applicationBook \u003d new ApplicationBook();","lastModifiedDate":"2023-10-10"},{"lineNumber":50,"author":{"gitId":"evanyan13"},"content":"        for (JsonAdaptedJob jsonAdaptedJob : jobs) {","lastModifiedDate":"2023-10-10"},{"lineNumber":51,"author":{"gitId":"evanyan13"},"content":"            Job job \u003d jsonAdaptedJob.toModelType();","lastModifiedDate":"2023-10-10"},{"lineNumber":52,"author":{"gitId":"evanyan13"},"content":"            if (applicationBook.hasJob(job)) {","lastModifiedDate":"2023-10-10"},{"lineNumber":53,"author":{"gitId":"evanyan13"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_JOB);","lastModifiedDate":"2023-10-10"},{"lineNumber":54,"author":{"gitId":"evanyan13"},"content":"            }","lastModifiedDate":"2023-10-10"},{"lineNumber":55,"author":{"gitId":"evanyan13"},"content":"            applicationBook.addJob(job);","lastModifiedDate":"2023-10-10"},{"lineNumber":56,"author":{"gitId":"evanyan13"},"content":"        }","lastModifiedDate":"2023-10-10"},{"lineNumber":57,"author":{"gitId":"evanyan13"},"content":"        return applicationBook;","lastModifiedDate":"2023-10-10"},{"lineNumber":58,"author":{"gitId":"evanyan13"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":59,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":60,"author":{"gitId":"evanyan13"},"content":"}","lastModifiedDate":"2023-10-10"}],"authorContributionMap":{"evanyan13":60}},{"path":"src/main/java/seedu/application/storage/JsonUserPrefsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"evanyan13"},"content":"package seedu.application.storage;","lastModifiedDate":"2023-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"evanyan13"},"content":"import seedu.application.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-10-10"},{"lineNumber":8,"author":{"gitId":"evanyan13"},"content":"import seedu.application.commons.util.JsonUtil;","lastModifiedDate":"2023-10-10"},{"lineNumber":9,"author":{"gitId":"evanyan13"},"content":"import seedu.application.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-10-10"},{"lineNumber":10,"author":{"gitId":"evanyan13"},"content":"import seedu.application.model.UserPrefs;","lastModifiedDate":"2023-10-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A class to access UserPrefs stored in the hard disk as a json file","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorage implements UserPrefsStorage {","lastModifiedDate":"2016-10-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"migfoo02"},"content":"    private final Path filePath;","lastModifiedDate":"2023-10-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public JsonUserPrefsStorage(Path filePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        return filePath;","lastModifiedDate":"2017-02-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return readUserPrefs(filePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Similar to {@link #readUserPrefs()}","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param prefsFilePath location of the data. Cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws DataLoadingException if the file format is not as expected.","lastModifiedDate":"2023-06-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs(Path prefsFilePath) throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return JsonUtil.readJsonFile(prefsFilePath, UserPrefs.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(userPrefs, filePath);","lastModifiedDate":"2016-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"evanyan13":5,"-":41,"migfoo02":1}},{"path":"src/main/java/seedu/application/storage/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"evanyan13"},"content":"package seedu.application.storage;","lastModifiedDate":"2023-10-10"},{"lineNumber":2,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":3,"author":{"gitId":"evanyan13"},"content":"import java.io.IOException;","lastModifiedDate":"2023-10-10"},{"lineNumber":4,"author":{"gitId":"evanyan13"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-10-10"},{"lineNumber":5,"author":{"gitId":"evanyan13"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-10"},{"lineNumber":6,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":7,"author":{"gitId":"evanyan13"},"content":"import seedu.application.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-10-10"},{"lineNumber":8,"author":{"gitId":"evanyan13"},"content":"import seedu.application.model.ReadOnlyApplicationBook;","lastModifiedDate":"2023-10-10"},{"lineNumber":9,"author":{"gitId":"evanyan13"},"content":"import seedu.application.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-10-10"},{"lineNumber":10,"author":{"gitId":"evanyan13"},"content":"import seedu.application.model.UserPrefs;","lastModifiedDate":"2023-10-10"},{"lineNumber":11,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":12,"author":{"gitId":"evanyan13"},"content":"/**","lastModifiedDate":"2023-10-10"},{"lineNumber":13,"author":{"gitId":"evanyan13"},"content":" * API of the Storage component","lastModifiedDate":"2023-10-10"},{"lineNumber":14,"author":{"gitId":"evanyan13"},"content":" */","lastModifiedDate":"2023-10-10"},{"lineNumber":15,"author":{"gitId":"evanyan13"},"content":"public interface Storage extends ApplicationBookStorage, UserPrefsStorage {","lastModifiedDate":"2023-10-10"},{"lineNumber":16,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":17,"author":{"gitId":"evanyan13"},"content":"    @Override","lastModifiedDate":"2023-10-10"},{"lineNumber":18,"author":{"gitId":"evanyan13"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataLoadingException;","lastModifiedDate":"2023-10-10"},{"lineNumber":19,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":20,"author":{"gitId":"evanyan13"},"content":"    @Override","lastModifiedDate":"2023-10-10"},{"lineNumber":21,"author":{"gitId":"evanyan13"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2023-10-10"},{"lineNumber":22,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":23,"author":{"gitId":"evanyan13"},"content":"    @Override","lastModifiedDate":"2023-10-10"},{"lineNumber":24,"author":{"gitId":"evanyan13"},"content":"    Path getApplicationBookFilePath();","lastModifiedDate":"2023-10-10"},{"lineNumber":25,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":26,"author":{"gitId":"evanyan13"},"content":"    @Override","lastModifiedDate":"2023-10-10"},{"lineNumber":27,"author":{"gitId":"evanyan13"},"content":"    Optional\u003cReadOnlyApplicationBook\u003e readApplicationBook() throws DataLoadingException;","lastModifiedDate":"2023-10-10"},{"lineNumber":28,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":29,"author":{"gitId":"evanyan13"},"content":"    @Override","lastModifiedDate":"2023-10-10"},{"lineNumber":30,"author":{"gitId":"evanyan13"},"content":"    void saveApplicationBook(ReadOnlyApplicationBook applicationBook) throws IOException;","lastModifiedDate":"2023-10-10"},{"lineNumber":31,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":32,"author":{"gitId":"evanyan13"},"content":"}","lastModifiedDate":"2023-10-10"}],"authorContributionMap":{"evanyan13":32}},{"path":"src/main/java/seedu/application/storage/StorageManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"evanyan13"},"content":"package seedu.application.storage;","lastModifiedDate":"2023-10-10"},{"lineNumber":2,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":3,"author":{"gitId":"evanyan13"},"content":"import java.io.IOException;","lastModifiedDate":"2023-10-10"},{"lineNumber":4,"author":{"gitId":"evanyan13"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-10-10"},{"lineNumber":5,"author":{"gitId":"evanyan13"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-10"},{"lineNumber":6,"author":{"gitId":"evanyan13"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-10-10"},{"lineNumber":7,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":8,"author":{"gitId":"evanyan13"},"content":"import seedu.application.commons.core.LogsCenter;","lastModifiedDate":"2023-10-10"},{"lineNumber":9,"author":{"gitId":"evanyan13"},"content":"import seedu.application.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-10-10"},{"lineNumber":10,"author":{"gitId":"evanyan13"},"content":"import seedu.application.model.ReadOnlyApplicationBook;","lastModifiedDate":"2023-10-10"},{"lineNumber":11,"author":{"gitId":"evanyan13"},"content":"import seedu.application.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-10-10"},{"lineNumber":12,"author":{"gitId":"evanyan13"},"content":"import seedu.application.model.UserPrefs;","lastModifiedDate":"2023-10-10"},{"lineNumber":13,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":14,"author":{"gitId":"evanyan13"},"content":"/**","lastModifiedDate":"2023-10-10"},{"lineNumber":15,"author":{"gitId":"evanyan13"},"content":" * Manages storage of ApplicationBook data in local storage.","lastModifiedDate":"2023-10-10"},{"lineNumber":16,"author":{"gitId":"evanyan13"},"content":" */","lastModifiedDate":"2023-10-10"},{"lineNumber":17,"author":{"gitId":"evanyan13"},"content":"public class StorageManager implements Storage {","lastModifiedDate":"2023-10-10"},{"lineNumber":18,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":19,"author":{"gitId":"evanyan13"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(StorageManager.class);","lastModifiedDate":"2023-10-10"},{"lineNumber":20,"author":{"gitId":"migfoo02"},"content":"    private final ApplicationBookStorage applicationBookStorage;","lastModifiedDate":"2023-10-22"},{"lineNumber":21,"author":{"gitId":"migfoo02"},"content":"    private final UserPrefsStorage userPrefsStorage;","lastModifiedDate":"2023-10-22"},{"lineNumber":22,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":23,"author":{"gitId":"evanyan13"},"content":"    /**","lastModifiedDate":"2023-10-10"},{"lineNumber":24,"author":{"gitId":"evanyan13"},"content":"     * Creates a {@code StorageManager} with the given {@code ApplicationBookStorage} and {@code UserPrefStorage}.","lastModifiedDate":"2023-10-10"},{"lineNumber":25,"author":{"gitId":"evanyan13"},"content":"     */","lastModifiedDate":"2023-10-10"},{"lineNumber":26,"author":{"gitId":"evanyan13"},"content":"    public StorageManager(ApplicationBookStorage applicationBookStorage, UserPrefsStorage userPrefsStorage) {","lastModifiedDate":"2023-10-10"},{"lineNumber":27,"author":{"gitId":"evanyan13"},"content":"        this.applicationBookStorage \u003d applicationBookStorage;","lastModifiedDate":"2023-10-10"},{"lineNumber":28,"author":{"gitId":"evanyan13"},"content":"        this.userPrefsStorage \u003d userPrefsStorage;","lastModifiedDate":"2023-10-10"},{"lineNumber":29,"author":{"gitId":"evanyan13"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":30,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":31,"author":{"gitId":"evanyan13"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-10-10"},{"lineNumber":32,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":33,"author":{"gitId":"evanyan13"},"content":"    @Override","lastModifiedDate":"2023-10-10"},{"lineNumber":34,"author":{"gitId":"evanyan13"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2023-10-10"},{"lineNumber":35,"author":{"gitId":"evanyan13"},"content":"        return userPrefsStorage.getUserPrefsFilePath();","lastModifiedDate":"2023-10-10"},{"lineNumber":36,"author":{"gitId":"evanyan13"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":37,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":38,"author":{"gitId":"evanyan13"},"content":"    @Override","lastModifiedDate":"2023-10-10"},{"lineNumber":39,"author":{"gitId":"evanyan13"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataLoadingException {","lastModifiedDate":"2023-10-10"},{"lineNumber":40,"author":{"gitId":"evanyan13"},"content":"        return userPrefsStorage.readUserPrefs();","lastModifiedDate":"2023-10-10"},{"lineNumber":41,"author":{"gitId":"evanyan13"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":42,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":43,"author":{"gitId":"evanyan13"},"content":"    @Override","lastModifiedDate":"2023-10-10"},{"lineNumber":44,"author":{"gitId":"evanyan13"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2023-10-10"},{"lineNumber":45,"author":{"gitId":"evanyan13"},"content":"        userPrefsStorage.saveUserPrefs(userPrefs);","lastModifiedDate":"2023-10-10"},{"lineNumber":46,"author":{"gitId":"evanyan13"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":47,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":48,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":49,"author":{"gitId":"evanyan13"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d ApplicationBook methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-10-10"},{"lineNumber":50,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":51,"author":{"gitId":"evanyan13"},"content":"    @Override","lastModifiedDate":"2023-10-10"},{"lineNumber":52,"author":{"gitId":"evanyan13"},"content":"    public Path getApplicationBookFilePath() {","lastModifiedDate":"2023-10-10"},{"lineNumber":53,"author":{"gitId":"evanyan13"},"content":"        return applicationBookStorage.getApplicationBookFilePath();","lastModifiedDate":"2023-10-10"},{"lineNumber":54,"author":{"gitId":"evanyan13"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":55,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":56,"author":{"gitId":"evanyan13"},"content":"    @Override","lastModifiedDate":"2023-10-10"},{"lineNumber":57,"author":{"gitId":"evanyan13"},"content":"    public Optional\u003cReadOnlyApplicationBook\u003e readApplicationBook() throws DataLoadingException {","lastModifiedDate":"2023-10-10"},{"lineNumber":58,"author":{"gitId":"evanyan13"},"content":"        return readApplicationBook(applicationBookStorage.getApplicationBookFilePath());","lastModifiedDate":"2023-10-10"},{"lineNumber":59,"author":{"gitId":"evanyan13"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":60,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":61,"author":{"gitId":"evanyan13"},"content":"    @Override","lastModifiedDate":"2023-10-10"},{"lineNumber":62,"author":{"gitId":"evanyan13"},"content":"    public Optional\u003cReadOnlyApplicationBook\u003e readApplicationBook(Path filePath) throws DataLoadingException {","lastModifiedDate":"2023-10-10"},{"lineNumber":63,"author":{"gitId":"evanyan13"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2023-10-10"},{"lineNumber":64,"author":{"gitId":"evanyan13"},"content":"        return applicationBookStorage.readApplicationBook(filePath);","lastModifiedDate":"2023-10-10"},{"lineNumber":65,"author":{"gitId":"evanyan13"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":66,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":67,"author":{"gitId":"evanyan13"},"content":"    @Override","lastModifiedDate":"2023-10-10"},{"lineNumber":68,"author":{"gitId":"evanyan13"},"content":"    public void saveApplicationBook(ReadOnlyApplicationBook applicationBook) throws IOException {","lastModifiedDate":"2023-10-10"},{"lineNumber":69,"author":{"gitId":"evanyan13"},"content":"        saveApplicationBook(applicationBook, applicationBookStorage.getApplicationBookFilePath());","lastModifiedDate":"2023-10-10"},{"lineNumber":70,"author":{"gitId":"evanyan13"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":71,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":72,"author":{"gitId":"evanyan13"},"content":"    @Override","lastModifiedDate":"2023-10-10"},{"lineNumber":73,"author":{"gitId":"evanyan13"},"content":"    public void saveApplicationBook(ReadOnlyApplicationBook applicationBook, Path filePath) throws IOException {","lastModifiedDate":"2023-10-10"},{"lineNumber":74,"author":{"gitId":"evanyan13"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2023-10-10"},{"lineNumber":75,"author":{"gitId":"evanyan13"},"content":"        applicationBookStorage.saveApplicationBook(applicationBook, filePath);","lastModifiedDate":"2023-10-10"},{"lineNumber":76,"author":{"gitId":"evanyan13"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":77,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":78,"author":{"gitId":"evanyan13"},"content":"}","lastModifiedDate":"2023-10-10"}],"authorContributionMap":{"evanyan13":76,"migfoo02":2}},{"path":"src/main/java/seedu/application/storage/UserPrefsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"evanyan13"},"content":"package seedu.application.storage;","lastModifiedDate":"2023-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"evanyan13"},"content":"import seedu.application.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-10-10"},{"lineNumber":8,"author":{"gitId":"evanyan13"},"content":"import seedu.application.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-10-10"},{"lineNumber":9,"author":{"gitId":"evanyan13"},"content":"import seedu.application.model.UserPrefs;","lastModifiedDate":"2023-10-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"evanyan13"},"content":" * Represents a storage for {@link UserPrefs}.","lastModifiedDate":"2023-10-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public interface UserPrefsStorage {","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Returns the file path of the UserPrefs data file.","lastModifiedDate":"2017-02-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    Path getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Returns UserPrefs data from storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2016-09-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-06-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @throws DataLoadingException if the loading of data from preference file failed.","lastModifiedDate":"2023-06-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataLoadingException;","lastModifiedDate":"2023-06-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"evanyan13"},"content":"     * Saves the given {@link ReadOnlyUserPrefs} to the storage.","lastModifiedDate":"2023-10-10"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @param userPrefs cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"evanyan13":6,"-":30}},{"path":"src/main/java/seedu/application/ui/CommandBox.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"evanyan13"},"content":"package seedu.application.ui;","lastModifiedDate":"2023-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":7,"author":{"gitId":"evanyan13"},"content":"import seedu.application.logic.Logic;","lastModifiedDate":"2023-10-10"},{"lineNumber":8,"author":{"gitId":"evanyan13"},"content":"import seedu.application.logic.commands.CommandResult;","lastModifiedDate":"2023-10-10"},{"lineNumber":9,"author":{"gitId":"evanyan13"},"content":"import seedu.application.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-10"},{"lineNumber":10,"author":{"gitId":"evanyan13"},"content":"import seedu.application.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * The UI component that is responsible for receiving user command inputs.","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class CommandBox extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String ERROR_STYLE_CLASS \u003d \"error\";","lastModifiedDate":"2017-02-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"CommandBox.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final CommandExecutor commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private TextField commandTextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Creates a {@code CommandBox} with the given {@code CommandExecutor}.","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public CommandBox(CommandExecutor commandExecutor) {","lastModifiedDate":"2019-01-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.commandExecutor \u003d commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // calls #setStyleToDefault() whenever there is a change to the text of the command box.","lastModifiedDate":"2017-06-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        commandTextField.textProperty().addListener((unused1, unused2, unused3) -\u003e setStyleToDefault());","lastModifiedDate":"2017-06-28"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Handles the Enter button pressed event.","lastModifiedDate":"2017-08-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private void handleCommandEntered() {","lastModifiedDate":"2018-04-01"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        String commandText \u003d commandTextField.getText();","lastModifiedDate":"2020-12-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        if (commandText.equals(\"\")) {","lastModifiedDate":"2020-12-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2020-12-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-02-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            commandExecutor.execute(commandText);","lastModifiedDate":"2020-12-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            commandTextField.setText(\"\");","lastModifiedDate":"2016-09-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2017-03-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            setStyleToIndicateCommandFailure();","lastModifiedDate":"2017-02-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Sets the command box style to use the default style.","lastModifiedDate":"2017-06-28"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    private void setStyleToDefault() {","lastModifiedDate":"2017-06-28"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        commandTextField.getStyleClass().remove(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-02-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Sets the command box style to indicate a failed command.","lastModifiedDate":"2017-02-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    private void setStyleToIndicateCommandFailure() {","lastModifiedDate":"2017-02-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        ObservableList\u003cString\u003e styleClass \u003d commandTextField.getStyleClass();","lastModifiedDate":"2017-03-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        if (styleClass.contains(ERROR_STYLE_CLASS)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2017-03-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        styleClass.add(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-03-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Represents a function that can execute commands.","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @FunctionalInterface","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public interface CommandExecutor {","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"         * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"evanyan13"},"content":"         * @see Logic#execute(String)","lastModifiedDate":"2023-10-10"},{"lineNumber":82,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"}],"authorContributionMap":{"evanyan13":6,"-":80}},{"path":"src/main/java/seedu/application/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"evanyan13"},"content":"package seedu.application.ui;","lastModifiedDate":"2023-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"evanyan13"},"content":"import seedu.application.commons.core.LogsCenter;","lastModifiedDate":"2023-10-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"evanyan13"},"content":"    public static final String USERGUIDE_URL \u003d \"https://ay2324s1-cs2103t-w12-3.github.io/tp/UserGuide.html\";","lastModifiedDate":"2023-10-10"},{"lineNumber":19,"author":{"gitId":"czhiruo"},"content":"    public static final String HELP_MESSAGE_COMMANDS \u003d \"Here are the available commands and how to use them: \\n\\n\"","lastModifiedDate":"2023-10-16"},{"lineNumber":20,"author":{"gitId":"czhiruo"},"content":"            + \"Words in UPPER_CASE are the parameters to be supplied by the user\\n\\n\"","lastModifiedDate":"2023-10-16"},{"lineNumber":21,"author":{"gitId":"czhiruo"},"content":"            + \"1. To add an application: add n/NAME \\n\"","lastModifiedDate":"2023-10-16"},{"lineNumber":22,"author":{"gitId":"czhiruo"},"content":"            + \"2. To delete an application: delete INDEX \\n\"","lastModifiedDate":"2023-10-16"},{"lineNumber":23,"author":{"gitId":"czhiruo"},"content":"            + \"3. To list all applications: list \\n\"","lastModifiedDate":"2023-10-16"},{"lineNumber":24,"author":{"gitId":"czhiruo"},"content":"            + \"4. To mark the status of an application: mark INDEX s/STATUS \\n\"","lastModifiedDate":"2023-10-16"},{"lineNumber":25,"author":{"gitId":"czhiruo"},"content":"            + \"5. To set a deadline for an application: deadline INDEX d/DEADLINE \\n\"","lastModifiedDate":"2023-10-16"},{"lineNumber":26,"author":{"gitId":"czhiruo"},"content":"            + \"6. To find an application by company: find -c [KEYWORDS] \\n\"","lastModifiedDate":"2023-10-16"},{"lineNumber":27,"author":{"gitId":"czhiruo"},"content":"            + \"7. To find an application by role: find -r [KEYWORDS] \\n\";","lastModifiedDate":"2023-10-16"},{"lineNumber":28,"author":{"gitId":"czhiruo"},"content":"    public static final String HELP_MESSAGE \u003d HELP_MESSAGE_COMMANDS + \"\\n\"","lastModifiedDate":"2023-10-16"},{"lineNumber":29,"author":{"gitId":"czhiruo"},"content":"            + \"Refer to the user guide for additional optional inputs: \" + USERGUIDE_URL;","lastModifiedDate":"2023-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2019-08-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *     \u003cul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *             if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     *             if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     *             if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     *             if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     *     \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2019-08-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2019-08-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2019-08-19"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        url.putString(USERGUIDE_URL);","lastModifiedDate":"2019-08-19"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2019-08-19"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"czhiruo":11,"evanyan13":3,"-":98}},{"path":"src/main/java/seedu/application/ui/InterviewCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"migfoo02"},"content":"package seedu.application.ui;","lastModifiedDate":"2023-10-27"},{"lineNumber":2,"author":{"gitId":"migfoo02"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":3,"author":{"gitId":"migfoo02"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-10-27"},{"lineNumber":4,"author":{"gitId":"migfoo02"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-10-27"},{"lineNumber":5,"author":{"gitId":"migfoo02"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-10-27"},{"lineNumber":6,"author":{"gitId":"migfoo02"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-10-27"},{"lineNumber":7,"author":{"gitId":"migfoo02"},"content":"import seedu.application.model.job.interview.Interview;","lastModifiedDate":"2023-10-27"},{"lineNumber":8,"author":{"gitId":"migfoo02"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":9,"author":{"gitId":"migfoo02"},"content":"/**","lastModifiedDate":"2023-10-27"},{"lineNumber":10,"author":{"gitId":"migfoo02"},"content":" * A UI component that shows information regarding an {@code Interview}.","lastModifiedDate":"2023-10-27"},{"lineNumber":11,"author":{"gitId":"migfoo02"},"content":" */","lastModifiedDate":"2023-10-27"},{"lineNumber":12,"author":{"gitId":"migfoo02"},"content":"public class InterviewCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-10-27"},{"lineNumber":13,"author":{"gitId":"migfoo02"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":14,"author":{"gitId":"migfoo02"},"content":"    public static final String FXML \u003d \"InterviewCard.fxml\";","lastModifiedDate":"2023-10-27"},{"lineNumber":15,"author":{"gitId":"migfoo02"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":16,"author":{"gitId":"migfoo02"},"content":"    public final Interview interview;","lastModifiedDate":"2023-10-27"},{"lineNumber":17,"author":{"gitId":"migfoo02"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":18,"author":{"gitId":"migfoo02"},"content":"    @FXML","lastModifiedDate":"2023-10-27"},{"lineNumber":19,"author":{"gitId":"migfoo02"},"content":"    private HBox cardPane;","lastModifiedDate":"2023-10-27"},{"lineNumber":20,"author":{"gitId":"migfoo02"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":21,"author":{"gitId":"migfoo02"},"content":"    @FXML","lastModifiedDate":"2023-10-27"},{"lineNumber":22,"author":{"gitId":"migfoo02"},"content":"    private Label title;","lastModifiedDate":"2023-10-27"},{"lineNumber":23,"author":{"gitId":"migfoo02"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":24,"author":{"gitId":"migfoo02"},"content":"    @FXML","lastModifiedDate":"2023-10-27"},{"lineNumber":25,"author":{"gitId":"migfoo02"},"content":"    private Label date;","lastModifiedDate":"2023-10-27"},{"lineNumber":26,"author":{"gitId":"migfoo02"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":27,"author":{"gitId":"migfoo02"},"content":"    @FXML","lastModifiedDate":"2023-10-27"},{"lineNumber":28,"author":{"gitId":"migfoo02"},"content":"    private Label address;","lastModifiedDate":"2023-10-27"},{"lineNumber":29,"author":{"gitId":"migfoo02"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":30,"author":{"gitId":"migfoo02"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":31,"author":{"gitId":"migfoo02"},"content":"     * Creates a {@code InterviewCard} with the given {@code Interview} and index to display.","lastModifiedDate":"2023-10-27"},{"lineNumber":32,"author":{"gitId":"migfoo02"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":33,"author":{"gitId":"migfoo02"},"content":"    public InterviewCard(Interview interview, int index) {","lastModifiedDate":"2023-10-27"},{"lineNumber":34,"author":{"gitId":"migfoo02"},"content":"        super(FXML);","lastModifiedDate":"2023-10-27"},{"lineNumber":35,"author":{"gitId":"migfoo02"},"content":"        this.interview \u003d interview;","lastModifiedDate":"2023-10-27"},{"lineNumber":36,"author":{"gitId":"migfoo02"},"content":"        String title \u003d \"Interview \";","lastModifiedDate":"2023-10-27"},{"lineNumber":37,"author":{"gitId":"migfoo02"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":38,"author":{"gitId":"migfoo02"},"content":"}","lastModifiedDate":"2023-10-27"}],"authorContributionMap":{"migfoo02":38}},{"path":"src/main/java/seedu/application/ui/JobCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"evanyan13"},"content":"package seedu.application.ui;","lastModifiedDate":"2023-10-10"},{"lineNumber":2,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":3,"author":{"gitId":"JeremyYong128"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-10-04"},{"lineNumber":4,"author":{"gitId":"JeremyYong128"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-10-04"},{"lineNumber":5,"author":{"gitId":"evanyan13"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2023-10-30"},{"lineNumber":6,"author":{"gitId":"JeremyYong128"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-10-04"},{"lineNumber":7,"author":{"gitId":"JeremyYong128"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-10-04"},{"lineNumber":8,"author":{"gitId":"evanyan13"},"content":"import seedu.application.model.job.Job;","lastModifiedDate":"2023-10-10"},{"lineNumber":9,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":10,"author":{"gitId":"JeremyYong128"},"content":"/**","lastModifiedDate":"2023-10-04"},{"lineNumber":11,"author":{"gitId":"evanyan13"},"content":" * An UI component that displays information of a {@code Job}.","lastModifiedDate":"2023-10-06"},{"lineNumber":12,"author":{"gitId":"JeremyYong128"},"content":" */","lastModifiedDate":"2023-10-04"},{"lineNumber":13,"author":{"gitId":"JeremyYong128"},"content":"public class JobCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-10-04"},{"lineNumber":14,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":15,"author":{"gitId":"JeremyYong128"},"content":"    private static final String FXML \u003d \"JobListCard.fxml\";","lastModifiedDate":"2023-10-04"},{"lineNumber":16,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":17,"author":{"gitId":"JeremyYong128"},"content":"    /**","lastModifiedDate":"2023-10-04"},{"lineNumber":18,"author":{"gitId":"JeremyYong128"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2023-10-04"},{"lineNumber":19,"author":{"gitId":"JeremyYong128"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2023-10-04"},{"lineNumber":20,"author":{"gitId":"JeremyYong128"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2023-10-04"},{"lineNumber":21,"author":{"gitId":"JeremyYong128"},"content":"     *","lastModifiedDate":"2023-10-04"},{"lineNumber":22,"author":{"gitId":"JeremyYong128"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2023-10-04"},{"lineNumber":23,"author":{"gitId":"JeremyYong128"},"content":"     */","lastModifiedDate":"2023-10-04"},{"lineNumber":24,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":25,"author":{"gitId":"JeremyYong128"},"content":"    public final Job job;","lastModifiedDate":"2023-10-04"},{"lineNumber":26,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":27,"author":{"gitId":"JeremyYong128"},"content":"    @FXML","lastModifiedDate":"2023-10-04"},{"lineNumber":28,"author":{"gitId":"JeremyYong128"},"content":"    private HBox cardPane;","lastModifiedDate":"2023-10-04"},{"lineNumber":29,"author":{"gitId":"JeremyYong128"},"content":"    @FXML","lastModifiedDate":"2023-10-04"},{"lineNumber":30,"author":{"gitId":"JeremyYong128"},"content":"    private Label role;","lastModifiedDate":"2023-10-04"},{"lineNumber":31,"author":{"gitId":"JeremyYong128"},"content":"    @FXML","lastModifiedDate":"2023-10-04"},{"lineNumber":32,"author":{"gitId":"JeremyYong128"},"content":"    private Label id;","lastModifiedDate":"2023-10-04"},{"lineNumber":33,"author":{"gitId":"JeremyYong128"},"content":"    @FXML","lastModifiedDate":"2023-10-04"},{"lineNumber":34,"author":{"gitId":"JeremyYong128"},"content":"    private Label company;","lastModifiedDate":"2023-10-04"},{"lineNumber":35,"author":{"gitId":"evanyan13"},"content":"    @FXML","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"evanyan13"},"content":"    private FlowPane status;","lastModifiedDate":"2023-10-30"},{"lineNumber":37,"author":{"gitId":"peiran18"},"content":"    @FXML","lastModifiedDate":"2023-10-15"},{"lineNumber":38,"author":{"gitId":"evanyan13"},"content":"    private Label deadline;","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":40,"author":{"gitId":"JeremyYong128"},"content":"    /**","lastModifiedDate":"2023-10-04"},{"lineNumber":41,"author":{"gitId":"JeremyYong128"},"content":"     * Creates a {@code JobCode} with the given {@code Job} and index to display.","lastModifiedDate":"2023-10-04"},{"lineNumber":42,"author":{"gitId":"JeremyYong128"},"content":"     */","lastModifiedDate":"2023-10-04"},{"lineNumber":43,"author":{"gitId":"JeremyYong128"},"content":"    public JobCard(Job job, int displayedIndex) {","lastModifiedDate":"2023-10-04"},{"lineNumber":44,"author":{"gitId":"JeremyYong128"},"content":"        super(FXML);","lastModifiedDate":"2023-10-04"},{"lineNumber":45,"author":{"gitId":"JeremyYong128"},"content":"        this.job \u003d job;","lastModifiedDate":"2023-10-04"},{"lineNumber":46,"author":{"gitId":"JeremyYong128"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2023-10-04"},{"lineNumber":47,"author":{"gitId":"JeremyYong128"},"content":"        role.setText(job.getRole().description);","lastModifiedDate":"2023-10-04"},{"lineNumber":48,"author":{"gitId":"JeremyYong128"},"content":"        company.setText(job.getCompany().name);","lastModifiedDate":"2023-10-04"},{"lineNumber":49,"author":{"gitId":"evanyan13"},"content":"        Label statusLabel \u003d setStatusLabelStyle();","lastModifiedDate":"2023-10-30"},{"lineNumber":50,"author":{"gitId":"evanyan13"},"content":"        status.getChildren().add(statusLabel);","lastModifiedDate":"2023-10-30"},{"lineNumber":51,"author":{"gitId":"evanyan13"},"content":"        deadline.setText(job.getDeadline().deadline);","lastModifiedDate":"2023-10-14"},{"lineNumber":52,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":53,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":54,"author":{"gitId":"evanyan13"},"content":"    private Label setStatusLabelStyle() {","lastModifiedDate":"2023-10-30"},{"lineNumber":55,"author":{"gitId":"evanyan13"},"content":"        String jobStatus \u003d job.getStatus().status;","lastModifiedDate":"2023-10-30"},{"lineNumber":56,"author":{"gitId":"evanyan13"},"content":"        Label statusLabel \u003d new Label(jobStatus);","lastModifiedDate":"2023-10-30"},{"lineNumber":57,"author":{"gitId":"evanyan13"},"content":"        statusLabel.getStyleClass().add(\"cell_status_label\");","lastModifiedDate":"2023-10-30"},{"lineNumber":58,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":59,"author":{"gitId":"evanyan13"},"content":"        if (jobStatus.equals(\"TO_BE_SUBMITTED\")) {","lastModifiedDate":"2023-10-30"},{"lineNumber":60,"author":{"gitId":"evanyan13"},"content":"            statusLabel.getStyleClass().add(\"to_be_submitted\");","lastModifiedDate":"2023-10-30"},{"lineNumber":61,"author":{"gitId":"evanyan13"},"content":"        } else if (jobStatus.equals(\"PENDING\")) {","lastModifiedDate":"2023-10-30"},{"lineNumber":62,"author":{"gitId":"evanyan13"},"content":"            statusLabel.getStyleClass().add(\"pending\");","lastModifiedDate":"2023-10-30"},{"lineNumber":63,"author":{"gitId":"evanyan13"},"content":"        } else if (jobStatus.equals(\"APPROVED\")) {","lastModifiedDate":"2023-10-30"},{"lineNumber":64,"author":{"gitId":"evanyan13"},"content":"            statusLabel.getStyleClass().add(\"approved\");","lastModifiedDate":"2023-10-30"},{"lineNumber":65,"author":{"gitId":"evanyan13"},"content":"        } else if (jobStatus.equals(\"REJECTED\")) {","lastModifiedDate":"2023-10-30"},{"lineNumber":66,"author":{"gitId":"evanyan13"},"content":"            statusLabel.getStyleClass().add(\"rejected\");","lastModifiedDate":"2023-10-30"},{"lineNumber":67,"author":{"gitId":"evanyan13"},"content":"        }","lastModifiedDate":"2023-10-30"},{"lineNumber":68,"author":{"gitId":"evanyan13"},"content":"        return statusLabel;","lastModifiedDate":"2023-10-30"},{"lineNumber":69,"author":{"gitId":"evanyan13"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":70,"author":{"gitId":"JeremyYong128"},"content":"}","lastModifiedDate":"2023-10-04"}],"authorContributionMap":{"evanyan13":28,"peiran18":1,"JeremyYong128":41}},{"path":"src/main/java/seedu/application/ui/JobDetailsPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"evanyan13"},"content":"package seedu.application.ui;","lastModifiedDate":"2023-10-25"},{"lineNumber":2,"author":{"gitId":"evanyan13"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-10-25"},{"lineNumber":3,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":4,"author":{"gitId":"evanyan13"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-10-25"},{"lineNumber":5,"author":{"gitId":"evanyan13"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"evanyan13"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"evanyan13"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"evanyan13"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"evanyan13"},"content":"import seedu.application.commons.core.LogsCenter;","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"evanyan13"},"content":"import seedu.application.model.job.Job;","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"evanyan13"},"content":"/**","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"evanyan13"},"content":" * Panel containing the details of the selected job.","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"evanyan13"},"content":" */","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"evanyan13"},"content":"public class JobDetailsPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"evanyan13"},"content":"    private static final String FXML \u003d \"JobDetailsPanel.fxml\";","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":18,"author":{"gitId":"evanyan13"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(JobDetailsPanel.class);","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"evanyan13"},"content":"    private final Job job;","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"evanyan13"},"content":"    // TODO Declare Interview List here","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"evanyan13"},"content":"    @FXML","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"evanyan13"},"content":"    private StackPane detailsPanelPlaceholder;","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"evanyan13"},"content":"    @FXML","lastModifiedDate":"2023-10-25"},{"lineNumber":27,"author":{"gitId":"evanyan13"},"content":"    private VBox jobDetailsPanel;","lastModifiedDate":"2023-10-25"},{"lineNumber":28,"author":{"gitId":"evanyan13"},"content":"    @FXML","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"evanyan13"},"content":"    private Label role;","lastModifiedDate":"2023-10-25"},{"lineNumber":30,"author":{"gitId":"evanyan13"},"content":"    @FXML","lastModifiedDate":"2023-10-25"},{"lineNumber":31,"author":{"gitId":"evanyan13"},"content":"    private Label company;","lastModifiedDate":"2023-10-25"},{"lineNumber":32,"author":{"gitId":"evanyan13"},"content":"    @FXML","lastModifiedDate":"2023-10-25"},{"lineNumber":33,"author":{"gitId":"evanyan13"},"content":"    private Label status;","lastModifiedDate":"2023-10-25"},{"lineNumber":34,"author":{"gitId":"evanyan13"},"content":"    @FXML","lastModifiedDate":"2023-10-25"},{"lineNumber":35,"author":{"gitId":"evanyan13"},"content":"    private Label deadline;","lastModifiedDate":"2023-10-25"},{"lineNumber":36,"author":{"gitId":"evanyan13"},"content":"    @FXML","lastModifiedDate":"2023-10-25"},{"lineNumber":37,"author":{"gitId":"evanyan13"},"content":"    private Label jobType;","lastModifiedDate":"2023-10-25"},{"lineNumber":38,"author":{"gitId":"evanyan13"},"content":"    @FXML","lastModifiedDate":"2023-10-25"},{"lineNumber":39,"author":{"gitId":"evanyan13"},"content":"    private Label industry;","lastModifiedDate":"2023-10-25"},{"lineNumber":40,"author":{"gitId":"evanyan13"},"content":"    @FXML","lastModifiedDate":"2023-10-25"},{"lineNumber":41,"author":{"gitId":"evanyan13"},"content":"    private Label interviewTitle;","lastModifiedDate":"2023-10-25"},{"lineNumber":42,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":43,"author":{"gitId":"evanyan13"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":44,"author":{"gitId":"evanyan13"},"content":"     * Creates a {@code JobDetailsPanel} with the selected {@code Job}.","lastModifiedDate":"2023-10-25"},{"lineNumber":45,"author":{"gitId":"evanyan13"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":46,"author":{"gitId":"evanyan13"},"content":"    public JobDetailsPanel(Job job) {","lastModifiedDate":"2023-10-25"},{"lineNumber":47,"author":{"gitId":"evanyan13"},"content":"        super(FXML);","lastModifiedDate":"2023-10-25"},{"lineNumber":48,"author":{"gitId":"evanyan13"},"content":"        this.job \u003d job;","lastModifiedDate":"2023-10-25"},{"lineNumber":49,"author":{"gitId":"evanyan13"},"content":"        role.setText(job.getRole().description);","lastModifiedDate":"2023-10-25"},{"lineNumber":50,"author":{"gitId":"evanyan13"},"content":"        company.setText(job.getCompany().name);","lastModifiedDate":"2023-10-25"},{"lineNumber":51,"author":{"gitId":"evanyan13"},"content":"        status.setText(job.getStatus().status);","lastModifiedDate":"2023-10-25"},{"lineNumber":52,"author":{"gitId":"evanyan13"},"content":"        deadline.setText(job.getDeadline().deadline);","lastModifiedDate":"2023-10-25"},{"lineNumber":53,"author":{"gitId":"evanyan13"},"content":"        jobType.setText(job.getJobType().jobType);","lastModifiedDate":"2023-10-25"},{"lineNumber":54,"author":{"gitId":"evanyan13"},"content":"        industry.setText(job.getIndustry().industry);","lastModifiedDate":"2023-10-25"},{"lineNumber":55,"author":{"gitId":"evanyan13"},"content":"        interviewTitle.setText(\"Interviews: \");","lastModifiedDate":"2023-10-25"},{"lineNumber":56,"author":{"gitId":"evanyan13"},"content":"        //TODO Initialise Interview List here","lastModifiedDate":"2023-10-25"},{"lineNumber":57,"author":{"gitId":"evanyan13"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":58,"author":{"gitId":"evanyan13"},"content":"}","lastModifiedDate":"2023-10-25"},{"lineNumber":59,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-25"}],"authorContributionMap":{"evanyan13":59}},{"path":"src/main/java/seedu/application/ui/JobListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"evanyan13"},"content":"package seedu.application.ui;","lastModifiedDate":"2023-10-10"},{"lineNumber":2,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":3,"author":{"gitId":"JeremyYong128"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-10-04"},{"lineNumber":4,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":5,"author":{"gitId":"JeremyYong128"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-10-04"},{"lineNumber":6,"author":{"gitId":"JeremyYong128"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-10-04"},{"lineNumber":7,"author":{"gitId":"JeremyYong128"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2023-10-04"},{"lineNumber":8,"author":{"gitId":"JeremyYong128"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2023-10-04"},{"lineNumber":9,"author":{"gitId":"JeremyYong128"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-10-04"},{"lineNumber":10,"author":{"gitId":"evanyan13"},"content":"import seedu.application.commons.core.LogsCenter;","lastModifiedDate":"2023-10-10"},{"lineNumber":11,"author":{"gitId":"evanyan13"},"content":"import seedu.application.model.job.Job;","lastModifiedDate":"2023-10-10"},{"lineNumber":12,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":13,"author":{"gitId":"JeremyYong128"},"content":"/**","lastModifiedDate":"2023-10-04"},{"lineNumber":14,"author":{"gitId":"evanyan13"},"content":" * Panel containing the list of jobs.","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"JeremyYong128"},"content":" */","lastModifiedDate":"2023-10-04"},{"lineNumber":16,"author":{"gitId":"JeremyYong128"},"content":"public class JobListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-10-04"},{"lineNumber":17,"author":{"gitId":"JeremyYong128"},"content":"    private static final String FXML \u003d \"JobListPanel.fxml\";","lastModifiedDate":"2023-10-04"},{"lineNumber":18,"author":{"gitId":"JeremyYong128"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(JobListPanel.class);","lastModifiedDate":"2023-10-04"},{"lineNumber":19,"author":{"gitId":"evanyan13"},"content":"    private MainWindow mainWindow;","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"JeremyYong128"},"content":"    @FXML","lastModifiedDate":"2023-10-04"},{"lineNumber":21,"author":{"gitId":"JeremyYong128"},"content":"    private ListView\u003cJob\u003e jobListView;","lastModifiedDate":"2023-10-04"},{"lineNumber":22,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":23,"author":{"gitId":"JeremyYong128"},"content":"    /**","lastModifiedDate":"2023-10-04"},{"lineNumber":24,"author":{"gitId":"JeremyYong128"},"content":"     * Creates a {@code JobListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2023-10-04"},{"lineNumber":25,"author":{"gitId":"JeremyYong128"},"content":"     */","lastModifiedDate":"2023-10-04"},{"lineNumber":26,"author":{"gitId":"evanyan13"},"content":"    public JobListPanel(ObservableList\u003cJob\u003e jobList, MainWindow mainWindow) {","lastModifiedDate":"2023-10-25"},{"lineNumber":27,"author":{"gitId":"JeremyYong128"},"content":"        super(FXML);","lastModifiedDate":"2023-10-04"},{"lineNumber":28,"author":{"gitId":"evanyan13"},"content":"        this.mainWindow \u003d mainWindow;","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"JeremyYong128"},"content":"        jobListView.setItems(jobList);","lastModifiedDate":"2023-10-04"},{"lineNumber":30,"author":{"gitId":"JeremyYong128"},"content":"        jobListView.setCellFactory(listView -\u003e new JobListViewCell());","lastModifiedDate":"2023-10-04"},{"lineNumber":31,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":32,"author":{"gitId":"evanyan13"},"content":"        // Event listener recognise the event where a jobCard is selected","lastModifiedDate":"2023-10-25"},{"lineNumber":33,"author":{"gitId":"evanyan13"},"content":"        jobListView.getSelectionModel().selectedItemProperty()","lastModifiedDate":"2023-10-25"},{"lineNumber":34,"author":{"gitId":"evanyan13"},"content":"            .addListener((observable, oldValue, newValue) -\u003e {","lastModifiedDate":"2023-10-25"},{"lineNumber":35,"author":{"gitId":"evanyan13"},"content":"                if (newValue !\u003d null) {","lastModifiedDate":"2023-10-25"},{"lineNumber":36,"author":{"gitId":"evanyan13"},"content":"                    mainWindow.displayJobDetails(newValue);","lastModifiedDate":"2023-10-25"},{"lineNumber":37,"author":{"gitId":"evanyan13"},"content":"                }","lastModifiedDate":"2023-10-25"},{"lineNumber":38,"author":{"gitId":"evanyan13"},"content":"            });","lastModifiedDate":"2023-10-25"},{"lineNumber":39,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":40,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":41,"author":{"gitId":"JeremyYong128"},"content":"    /**","lastModifiedDate":"2023-10-04"},{"lineNumber":42,"author":{"gitId":"JeremyYong128"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Job} using a {@code JobCard}.","lastModifiedDate":"2023-10-04"},{"lineNumber":43,"author":{"gitId":"JeremyYong128"},"content":"     */","lastModifiedDate":"2023-10-04"},{"lineNumber":44,"author":{"gitId":"JeremyYong128"},"content":"    class JobListViewCell extends ListCell\u003cJob\u003e {","lastModifiedDate":"2023-10-04"},{"lineNumber":45,"author":{"gitId":"JeremyYong128"},"content":"        @Override","lastModifiedDate":"2023-10-04"},{"lineNumber":46,"author":{"gitId":"JeremyYong128"},"content":"        protected void updateItem(Job job, boolean empty) {","lastModifiedDate":"2023-10-04"},{"lineNumber":47,"author":{"gitId":"JeremyYong128"},"content":"            super.updateItem(job, empty);","lastModifiedDate":"2023-10-04"},{"lineNumber":48,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":49,"author":{"gitId":"JeremyYong128"},"content":"            if (empty || job \u003d\u003d null) {","lastModifiedDate":"2023-10-04"},{"lineNumber":50,"author":{"gitId":"JeremyYong128"},"content":"                setGraphic(null);","lastModifiedDate":"2023-10-04"},{"lineNumber":51,"author":{"gitId":"JeremyYong128"},"content":"                setText(null);","lastModifiedDate":"2023-10-04"},{"lineNumber":52,"author":{"gitId":"JeremyYong128"},"content":"            } else {","lastModifiedDate":"2023-10-04"},{"lineNumber":53,"author":{"gitId":"JeremyYong128"},"content":"                setGraphic(new JobCard(job, getIndex() + 1).getRoot());","lastModifiedDate":"2023-10-04"},{"lineNumber":54,"author":{"gitId":"JeremyYong128"},"content":"            }","lastModifiedDate":"2023-10-04"},{"lineNumber":55,"author":{"gitId":"JeremyYong128"},"content":"        }","lastModifiedDate":"2023-10-04"},{"lineNumber":56,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":57,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":58,"author":{"gitId":"JeremyYong128"},"content":"}","lastModifiedDate":"2023-10-04"}],"authorContributionMap":{"evanyan13":15,"JeremyYong128":43}},{"path":"src/main/java/seedu/application/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"evanyan13"},"content":"package seedu.application.ui;","lastModifiedDate":"2023-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"evanyan13"},"content":"import seedu.application.commons.core.GuiSettings;","lastModifiedDate":"2023-10-10"},{"lineNumber":14,"author":{"gitId":"evanyan13"},"content":"import seedu.application.commons.core.LogsCenter;","lastModifiedDate":"2023-10-10"},{"lineNumber":15,"author":{"gitId":"evanyan13"},"content":"import seedu.application.logic.Logic;","lastModifiedDate":"2023-10-10"},{"lineNumber":16,"author":{"gitId":"evanyan13"},"content":"import seedu.application.logic.commands.CommandResult;","lastModifiedDate":"2023-10-10"},{"lineNumber":17,"author":{"gitId":"evanyan13"},"content":"import seedu.application.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-10"},{"lineNumber":18,"author":{"gitId":"evanyan13"},"content":"import seedu.application.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-10"},{"lineNumber":19,"author":{"gitId":"evanyan13"},"content":"import seedu.application.model.job.Job;","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"evanyan13"},"content":" * The Main Window. Provides the basic application layout containing a menu bar and space where other JavaFX","lastModifiedDate":"2023-10-20"},{"lineNumber":23,"author":{"gitId":"evanyan13"},"content":" * elements can be placed.","lastModifiedDate":"2023-10-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"JeremyYong128"},"content":"    private JobListPanel jobListPanel;","lastModifiedDate":"2023-10-04"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"JeremyYong128"},"content":"    private StackPane jobListPanelPlaceholder;","lastModifiedDate":"2023-10-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"evanyan13"},"content":"    @FXML","lastModifiedDate":"2023-10-25"},{"lineNumber":49,"author":{"gitId":"evanyan13"},"content":"    private StackPane jobDetailsPanelPlaceholder;","lastModifiedDate":"2023-10-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":85,"author":{"gitId":"evanyan13"},"content":"     *","lastModifiedDate":"2023-10-20"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"evanyan13"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666 is fixed in later version of SDK. According to the bug","lastModifiedDate":"2023-10-20"},{"lineNumber":94,"author":{"gitId":"evanyan13"},"content":"         * report, TextInputControl (TextField, TextArea) will consume function-key events. Because CommandBox","lastModifiedDate":"2023-10-20"},{"lineNumber":95,"author":{"gitId":"evanyan13"},"content":"         * contains a TextField, and ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will not work","lastModifiedDate":"2023-10-20"},{"lineNumber":96,"author":{"gitId":"evanyan13"},"content":"         * when the focus is in them because the key event is consumed by the TextInputControl(s). For now, we add","lastModifiedDate":"2023-10-20"},{"lineNumber":97,"author":{"gitId":"evanyan13"},"content":"         * following event filter to capture such key events and open help window purposely so to support accelerators","lastModifiedDate":"2023-10-20"},{"lineNumber":98,"author":{"gitId":"evanyan13"},"content":"         * even when focus is in CommandBox or ResultDisplay.","lastModifiedDate":"2023-10-20"},{"lineNumber":99,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":112,"author":{"gitId":"evanyan13"},"content":"        jobListPanel \u003d new JobListPanel(logic.getFilteredJobList(), this);","lastModifiedDate":"2023-10-25"},{"lineNumber":113,"author":{"gitId":"JeremyYong128"},"content":"        jobListPanelPlaceholder.getChildren().add(jobListPanel.getRoot());","lastModifiedDate":"2023-10-04"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":134,"author":{"gitId":"evanyan13"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":135,"author":{"gitId":"evanyan13"},"content":"     * Handles display job details event on JobCard object.","lastModifiedDate":"2023-10-25"},{"lineNumber":136,"author":{"gitId":"evanyan13"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":137,"author":{"gitId":"evanyan13"},"content":"    public void displayJobDetails(Job job) {","lastModifiedDate":"2023-10-25"},{"lineNumber":138,"author":{"gitId":"evanyan13"},"content":"        JobDetailsPanel jobDetailsPanel \u003d new JobDetailsPanel(job);","lastModifiedDate":"2023-10-25"},{"lineNumber":139,"author":{"gitId":"evanyan13"},"content":"        jobDetailsPanelPlaceholder.getChildren().clear();","lastModifiedDate":"2023-10-25"},{"lineNumber":140,"author":{"gitId":"evanyan13"},"content":"        jobDetailsPanelPlaceholder.getChildren().add(jobDetailsPanel.getRoot());","lastModifiedDate":"2023-10-25"},{"lineNumber":141,"author":{"gitId":"evanyan13"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":142,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":160,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":161,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":171,"author":{"gitId":"JeremyYong128"},"content":"    public JobListPanel getJobListPanel() {","lastModifiedDate":"2023-10-04"},{"lineNumber":172,"author":{"gitId":"JeremyYong128"},"content":"        return jobListPanel;","lastModifiedDate":"2023-10-04"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":176,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":177,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":178,"author":{"gitId":"evanyan13"},"content":"     * @see Logic#execute(String)","lastModifiedDate":"2023-10-10"},{"lineNumber":179,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":182,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":183,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":184,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":186,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":187,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":188,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":190,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":191,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":194,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":196,"author":{"gitId":"-"},"content":"            logger.info(\"An error occurred while executing command: \" + commandText);","lastModifiedDate":"2023-06-13"},{"lineNumber":197,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":198,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":201,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"evanyan13":30,"-":166,"JeremyYong128":5}},{"path":"src/main/java/seedu/application/ui/ResultDisplay.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"evanyan13"},"content":"package seedu.application.ui;","lastModifiedDate":"2023-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextArea;","lastModifiedDate":"2016-09-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * A ui for the status bar that is displayed at the header of the application.","lastModifiedDate":"2016-09-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class ResultDisplay extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"ResultDisplay.fxml\";","lastModifiedDate":"2016-09-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-10-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private TextArea resultDisplay;","lastModifiedDate":"2016-10-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public ResultDisplay() {","lastModifiedDate":"2017-06-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"evanyan13":1,"-":27}},{"path":"src/main/java/seedu/application/ui/Ui.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"evanyan13"},"content":"package seedu.application.ui;","lastModifiedDate":"2023-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-09-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * API of UI component","lastModifiedDate":"2016-09-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public interface Ui {","lastModifiedDate":"2016-09-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    /** Starts the UI (and the App).  */","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    void start(Stage primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"evanyan13":1,"-":12}},{"path":"src/main/java/seedu/application/ui/UiManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"evanyan13"},"content":"package seedu.application.ui;","lastModifiedDate":"2023-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.application.Platform;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2016-08-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert.AlertType;","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"evanyan13"},"content":"import seedu.application.MainApp;","lastModifiedDate":"2023-10-10"},{"lineNumber":11,"author":{"gitId":"evanyan13"},"content":"import seedu.application.commons.core.LogsCenter;","lastModifiedDate":"2023-10-10"},{"lineNumber":12,"author":{"gitId":"evanyan13"},"content":"import seedu.application.commons.util.StringUtil;","lastModifiedDate":"2023-10-10"},{"lineNumber":13,"author":{"gitId":"evanyan13"},"content":"import seedu.application.logic.Logic;","lastModifiedDate":"2023-10-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The manager of the UI component.","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class UiManager implements Ui {","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String ALERT_DIALOG_PANE_FIELD_ID \u003d \"alertDialogPane\";","lastModifiedDate":"2017-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(UiManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String ICON_APPLICATION \u003d \"/images/address_book_32.png\";","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private MainWindow mainWindow;","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Creates a {@code UiManager} with the given {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public UiManager(Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        logger.info(\"Starting UI...\");","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        //Set the application icon.","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        primaryStage.getIcons().add(getImage(ICON_APPLICATION));","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            mainWindow \u003d new MainWindow(primaryStage, logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            mainWindow.show(); //This should be called before creating other UI parts","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            mainWindow.fillInnerParts();","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2016-08-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            logger.severe(StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            showFatalErrorDialogAndShutdown(\"Fatal error during initializing\", e);","lastModifiedDate":"2016-08-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    void showAlertDialogAndWait(Alert.AlertType type, String title, String headerText, String contentText) {","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(mainWindow.getPrimaryStage(), type, title, headerText, contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Shows an alert dialog on {@code owner} with the given parameters.","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * This method only returns after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    private static void showAlertDialogAndWait(Stage owner, AlertType type, String title, String headerText,","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                                               String contentText) {","lastModifiedDate":"2016-08-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        final Alert alert \u003d new Alert(type);","lastModifiedDate":"2016-08-18"},{"lineNumber":68,"author":{"gitId":"evanyan13"},"content":"        alert.getDialogPane().getStylesheets().add(\"view/css/MainTheme.css\");","lastModifiedDate":"2023-10-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        alert.initOwner(owner);","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        alert.setTitle(title);","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        alert.setHeaderText(headerText);","lastModifiedDate":"2016-08-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        alert.setContentText(contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        alert.getDialogPane().setId(ALERT_DIALOG_PANE_FIELD_ID);","lastModifiedDate":"2016-10-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        alert.showAndWait();","lastModifiedDate":"2016-08-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Shows an error alert dialog with {@code title} and error message, {@code e},","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * and exits the application after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private void showFatalErrorDialogAndShutdown(String title, Throwable e) {","lastModifiedDate":"2016-09-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        logger.severe(title + \" \" + e.getMessage() + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(Alert.AlertType.ERROR, title, e.getMessage(), e.toString());","lastModifiedDate":"2016-08-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        Platform.exit();","lastModifiedDate":"2016-08-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        System.exit(1);","lastModifiedDate":"2016-08-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"evanyan13":6,"-":82}},{"path":"src/main/java/seedu/application/ui/UiPart.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"evanyan13"},"content":"package seedu.application.ui;","lastModifiedDate":"2023-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-12-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.net.URL;","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2016-12-21"},{"lineNumber":9,"author":{"gitId":"evanyan13"},"content":"import seedu.application.MainApp;","lastModifiedDate":"2023-10-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents a distinct part of the UI. e.g. Windows, dialogs, panels, status bars, etc.","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * It contains a scene graph with a root node of type {@code T}.","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public abstract class UiPart\u003cT\u003e {","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /** Resource folder where FXML files are stored. */","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String FXML_FILE_FOLDER \u003d \"/view/\";","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final FXMLLoader fxmlLoader \u003d new FXMLLoader();","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file URL.","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * The FXML file must not specify the {@code fx:controller} attribute.","lastModifiedDate":"2016-12-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public UiPart(URL fxmlFileUrl) {","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        loadFxmlFile(fxmlFileUrl, null);","lastModifiedDate":"2017-11-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Constructs a UiPart using the specified FXML file within {@link #FXML_FILE_FOLDER}.","lastModifiedDate":"2016-12-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @see #UiPart(URL)","lastModifiedDate":"2016-12-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public UiPart(String fxmlFileName) {","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this(getFxmlFileUrl(fxmlFileName));","lastModifiedDate":"2017-11-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file URL and root object.","lastModifiedDate":"2017-11-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * The FXML file must not specify the {@code fx:controller} attribute.","lastModifiedDate":"2017-11-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public UiPart(URL fxmlFileUrl, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        loadFxmlFile(fxmlFileUrl, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file within {@link #FXML_FILE_FOLDER} and root object.","lastModifiedDate":"2017-11-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * @see #UiPart(URL, T)","lastModifiedDate":"2017-11-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public UiPart(String fxmlFileName, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this(getFxmlFileUrl(fxmlFileName), root);","lastModifiedDate":"2017-11-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Returns the root object of the scene graph of this UiPart.","lastModifiedDate":"2016-12-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public T getRoot() {","lastModifiedDate":"2016-12-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return fxmlLoader.getRoot();","lastModifiedDate":"2016-12-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Loads the object hierarchy from a FXML document.","lastModifiedDate":"2017-11-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * @param location Location of the FXML document.","lastModifiedDate":"2017-11-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * @param root Specifies the root of the object hierarchy.","lastModifiedDate":"2017-11-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private void loadFxmlFile(URL location, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        requireNonNull(location);","lastModifiedDate":"2017-11-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        fxmlLoader.setLocation(location);","lastModifiedDate":"2017-11-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        fxmlLoader.setController(this);","lastModifiedDate":"2017-11-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        fxmlLoader.setRoot(root);","lastModifiedDate":"2017-11-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-11-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            fxmlLoader.load();","lastModifiedDate":"2017-11-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2017-11-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            throw new AssertionError(e);","lastModifiedDate":"2017-11-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Returns the FXML file URL for the specified FXML file name within {@link #FXML_FILE_FOLDER}.","lastModifiedDate":"2017-11-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private static URL getFxmlFileUrl(String fxmlFileName) {","lastModifiedDate":"2017-11-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        requireNonNull(fxmlFileName);","lastModifiedDate":"2017-11-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        String fxmlFileNameWithFolder \u003d FXML_FILE_FOLDER + fxmlFileName;","lastModifiedDate":"2017-11-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        URL fxmlFileUrl \u003d MainApp.class.getResource(fxmlFileNameWithFolder);","lastModifiedDate":"2017-11-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return requireNonNull(fxmlFileUrl);","lastModifiedDate":"2017-11-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"evanyan13":2,"-":86}},{"path":"src/main/resources/view/CommandBox.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"evanyan13"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-10-22"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":6,"author":{"gitId":"evanyan13"},"content":"\u003cStackPane styleClass\u003d\"stack-pane\" xmlns\u003d\"http://javafx.com/javafx/17\"","lastModifiedDate":"2023-10-30"},{"lineNumber":7,"author":{"gitId":"evanyan13"},"content":"           xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-10-22"},{"lineNumber":8,"author":{"gitId":"evanyan13"},"content":"    \u003cTextField fx:id\u003d\"commandTextField\" onAction\u003d\"#handleCommandEntered\" prefHeight\u003d\"70.0\" prefWidth\u003d\"160.0\"","lastModifiedDate":"2023-10-20"},{"lineNumber":9,"author":{"gitId":"evanyan13"},"content":"               promptText\u003d\"Enter command here...\"\u003e","lastModifiedDate":"2023-10-22"},{"lineNumber":10,"author":{"gitId":"evanyan13"},"content":"        \u003cpadding\u003e","lastModifiedDate":"2023-10-22"},{"lineNumber":11,"author":{"gitId":"evanyan13"},"content":"            \u003cInsets left\u003d\"20\"/\u003e","lastModifiedDate":"2023-10-22"},{"lineNumber":12,"author":{"gitId":"evanyan13"},"content":"        \u003c/padding\u003e","lastModifiedDate":"2023-10-22"},{"lineNumber":13,"author":{"gitId":"evanyan13"},"content":"    \u003c/TextField\u003e","lastModifiedDate":"2023-10-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2017-06-22"}],"authorContributionMap":{"evanyan13":9,"-":5}},{"path":"src/main/resources/view/HelpWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"evanyan13"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2023-10-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":11,"author":{"gitId":"evanyan13"},"content":"\u003cfx:root resizable\u003d\"false\" title\u003d\"Help\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/17\"","lastModifiedDate":"2023-10-20"},{"lineNumber":12,"author":{"gitId":"evanyan13"},"content":"         xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-10-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    \u003cicons\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        \u003cImage url\u003d\"@/images/help_icon.png\"/\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    \u003c/icons\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003cscene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        \u003cScene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            \u003cstylesheets\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"evanyan13"},"content":"                \u003cURL value\u003d\"@css/HelpWindow.css\"/\u003e","lastModifiedDate":"2023-10-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            \u003c/stylesheets\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            \u003cHBox alignment\u003d\"CENTER\" fx:id\u003d\"helpMessageContainer\"\u003e","lastModifiedDate":"2022-01-02"},{"lineNumber":23,"author":{"gitId":"-"},"content":"                \u003cchildren\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"                    \u003cLabel fx:id\u003d\"helpMessage\" text\u003d\"Label\"\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"                        \u003cHBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"                            \u003cInsets right\u003d\"5.0\"/\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                        \u003c/HBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"                    \u003c/Label\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"                    \u003cButton fx:id\u003d\"copyButton\" mnemonicParsing\u003d\"false\" onAction\u003d\"#copyUrl\" text\u003d\"Copy URL\"\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"                        \u003cHBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"                            \u003cInsets left\u003d\"5.0\"/\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                        \u003c/HBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                    \u003c/Button\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                \u003c/children\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                \u003copaqueInsets\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                    \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\"/\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                \u003c/opaqueInsets\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                \u003cpadding\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                    \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\"/\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                \u003c/padding\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        \u003c/Scene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    \u003c/scene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-12-01"}],"authorContributionMap":{"evanyan13":4,"-":40}},{"path":"src/main/resources/view/JobDetailsPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"evanyan13"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":2,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":3,"author":{"gitId":"evanyan13"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":4,"author":{"gitId":"evanyan13"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":5,"author":{"gitId":"evanyan13"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"evanyan13"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"evanyan13"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"evanyan13"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"evanyan13"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"evanyan13"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"evanyan13"},"content":"\u003cVBox fx:id\u003d\"jobDetailsPanel\" minWidth\u003d\"100\" prefHeight\u003d\"300.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/17\"","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"evanyan13"},"content":"      xmlns:fx\u003d\"http://javafx.com/fxml/1\" styleClass\u003d\"jobDetailsPanel\"\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"evanyan13"},"content":"    \u003cstylesheets\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"evanyan13"},"content":"        \u003cURL value\u003d\"@css/JobDetailsPanel.css\"/\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"evanyan13"},"content":"    \u003c/stylesheets\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"evanyan13"},"content":"    \u003cVBox VBox.vgrow\u003d\"NEVER\" minHeight\u003d\"150\" maxHeight\u003d\"150\" prefHeight\u003d\"150\"\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"evanyan13"},"content":"        \u003cpadding\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":18,"author":{"gitId":"evanyan13"},"content":"            \u003cInsets bottom\u003d\"0\" left\u003d\"15\" right\u003d\"15\" top\u003d\"15\"/\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"evanyan13"},"content":"        \u003c/padding\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"evanyan13"},"content":"        \u003cLabel fx:id\u003d\"company\" styleClass\u003d\"cell_big_label\" text\u003d\"\\$company\" wrapText\u003d\"true\"/\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"evanyan13"},"content":"        \u003cGridPane\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"evanyan13"},"content":"            \u003ccolumnConstraints\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"evanyan13"},"content":"                \u003cColumnConstraints minWidth\u003d\"100.0\"/\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"evanyan13"},"content":"            \u003c/columnConstraints\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"evanyan13"},"content":"            \u003cLabel styleClass\u003d\"cell_small_label\" text\u003d\"Role:\" GridPane.columnIndex\u003d\"0\" GridPane.rowIndex\u003d\"0\"","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"evanyan13"},"content":"                   GridPane.valignment\u003d\"TOP\"/\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":27,"author":{"gitId":"evanyan13"},"content":"            \u003cLabel fx:id\u003d\"role\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$role\" wrapText\u003d\"true\" GridPane.columnIndex\u003d\"1\"","lastModifiedDate":"2023-10-25"},{"lineNumber":28,"author":{"gitId":"evanyan13"},"content":"                   GridPane.rowIndex\u003d\"0\"/\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"evanyan13"},"content":"            \u003cLabel styleClass\u003d\"cell_small_label\" text\u003d\"Status:\" GridPane.columnIndex\u003d\"0\" GridPane.rowIndex\u003d\"1\"","lastModifiedDate":"2023-10-25"},{"lineNumber":30,"author":{"gitId":"evanyan13"},"content":"                   GridPane.valignment\u003d\"TOP\"/\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":31,"author":{"gitId":"evanyan13"},"content":"            \u003cLabel fx:id\u003d\"status\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$status\" GridPane.columnIndex\u003d\"1\"","lastModifiedDate":"2023-10-25"},{"lineNumber":32,"author":{"gitId":"evanyan13"},"content":"                   GridPane.rowIndex\u003d\"1\"/\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":33,"author":{"gitId":"evanyan13"},"content":"            \u003cLabel styleClass\u003d\"cell_small_label\" text\u003d\"Industry:\" GridPane.columnIndex\u003d\"0\" GridPane.rowIndex\u003d\"2\"","lastModifiedDate":"2023-10-25"},{"lineNumber":34,"author":{"gitId":"evanyan13"},"content":"                   GridPane.valignment\u003d\"TOP\"/\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":35,"author":{"gitId":"evanyan13"},"content":"            \u003cLabel fx:id\u003d\"industry\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$industry\" GridPane.columnIndex\u003d\"1\"","lastModifiedDate":"2023-10-25"},{"lineNumber":36,"author":{"gitId":"evanyan13"},"content":"                   GridPane.rowIndex\u003d\"2\"/\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":37,"author":{"gitId":"evanyan13"},"content":"            \u003cLabel styleClass\u003d\"cell_small_label\" text\u003d\"Deadline:\" GridPane.columnIndex\u003d\"0\" GridPane.rowIndex\u003d\"3\"","lastModifiedDate":"2023-10-25"},{"lineNumber":38,"author":{"gitId":"evanyan13"},"content":"                   GridPane.valignment\u003d\"TOP\"/\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":39,"author":{"gitId":"evanyan13"},"content":"            \u003cLabel fx:id\u003d\"deadline\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$industry\" GridPane.columnIndex\u003d\"1\"","lastModifiedDate":"2023-10-25"},{"lineNumber":40,"author":{"gitId":"evanyan13"},"content":"                   GridPane.rowIndex\u003d\"3\"/\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":41,"author":{"gitId":"evanyan13"},"content":"            \u003cLabel styleClass\u003d\"cell_small_label\" text\u003d\"Job Type:\" GridPane.columnIndex\u003d\"0\" GridPane.rowIndex\u003d\"4\"","lastModifiedDate":"2023-10-25"},{"lineNumber":42,"author":{"gitId":"evanyan13"},"content":"                   GridPane.valignment\u003d\"TOP\"/\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":43,"author":{"gitId":"evanyan13"},"content":"            \u003cLabel fx:id\u003d\"jobType\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$jobType\" GridPane.columnIndex\u003d\"1\"","lastModifiedDate":"2023-10-25"},{"lineNumber":44,"author":{"gitId":"evanyan13"},"content":"                   GridPane.rowIndex\u003d\"4\"/\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":45,"author":{"gitId":"evanyan13"},"content":"        \u003c/GridPane\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":46,"author":{"gitId":"evanyan13"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":47,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":48,"author":{"gitId":"evanyan13"},"content":"    \u003cVBox VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":49,"author":{"gitId":"evanyan13"},"content":"        \u003cpadding\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":50,"author":{"gitId":"evanyan13"},"content":"            \u003cInsets bottom\u003d\"15\" left\u003d\"15\" right\u003d\"15\" top\u003d\"0\"/\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":51,"author":{"gitId":"evanyan13"},"content":"        \u003c/padding\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":52,"author":{"gitId":"evanyan13"},"content":"        \u003cLabel fx:id\u003d\"interviewTitle\" styleClass\u003d\"cell_big_label\" text\u003d\"\\$interviews\"/\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":53,"author":{"gitId":"evanyan13"},"content":"        \u003cRegion minHeight\u003d\"5\" prefHeight\u003d\"5\" maxHeight\u003d\"5\"/\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":54,"author":{"gitId":"evanyan13"},"content":"        \u003cAnchorPane minHeight\u003d\"200\" prefHeight\u003d\"200\" prefWidth\u003d\"195.0\" styleClass\u003d\"interviewListPanel\"","lastModifiedDate":"2023-10-25"},{"lineNumber":55,"author":{"gitId":"evanyan13"},"content":"                    AnchorPane.bottomAnchor\u003d\"0.0\" AnchorPane.leftAnchor\u003d\"0.0\"","lastModifiedDate":"2023-10-25"},{"lineNumber":56,"author":{"gitId":"evanyan13"},"content":"                    AnchorPane.rightAnchor\u003d\"0.0\" AnchorPane.topAnchor\u003d\"0.0\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":57,"author":{"gitId":"evanyan13"},"content":"        \u003c/AnchorPane\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":58,"author":{"gitId":"evanyan13"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":59,"author":{"gitId":"evanyan13"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2023-10-25"}],"authorContributionMap":{"evanyan13":59}},{"path":"src/main/resources/view/JobListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"evanyan13"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2023-10-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-07-27"},{"lineNumber":12,"author":{"gitId":"evanyan13"},"content":"    \u003cGridPane HBox.hgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2023-10-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"evanyan13"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"300\"/\u003e","lastModifiedDate":"2023-10-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"evanyan13"},"content":"                \u003cInsets top\u003d\"10\" right\u003d\"20\" bottom\u003d\"10\" left\u003d\"30\"/\u003e","lastModifiedDate":"2023-10-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"evanyan13"},"content":"                \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_index_label\"\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"                    \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"                        \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\"/\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"                    \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"evanyan13"},"content":"                \u003cLabel fx:id\u003d\"company\" styleClass\u003d\"cell_big_label\" text\u003d\"\\$company\"/\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":28,"author":{"gitId":"evanyan13"},"content":"            \u003cLabel fx:id\u003d\"role\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$role\"/\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":29,"author":{"gitId":"evanyan13"},"content":"            \u003cFlowPane fx:id\u003d\"status\"/\u003e","lastModifiedDate":"2023-10-30"},{"lineNumber":30,"author":{"gitId":"evanyan13"},"content":"            \u003cLabel fx:id\u003d\"deadline\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$deadline\"/\u003e","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"evanyan13":9,"-":24}},{"path":"src/main/resources/view/JobListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"evanyan13"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"JeremyYong128"},"content":"    \u003cListView fx:id\u003d\"jobListView\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2023-10-04"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"evanyan13":1,"-":5,"JeremyYong128":1}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":9,"author":{"gitId":"evanyan13"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"evanyan13"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":13,"author":{"gitId":"evanyan13"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":14,"author":{"gitId":"evanyan13"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"\u003cfx:root type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2023-07-27"},{"lineNumber":16,"author":{"gitId":"evanyan13"},"content":"         title\u003d\"JobFindr\" minWidth\u003d\"1000\" minHeight\u003d\"785\" onCloseRequest\u003d\"#handleExit\"\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        \u003cImage url\u003d\"@/images/address_book_32.png\"/\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"evanyan13"},"content":"                \u003cURL value\u003d\"@css/MainTheme.css\"/\u003e","lastModifiedDate":"2023-10-20"},{"lineNumber":24,"author":{"gitId":"evanyan13"},"content":"                \u003cURL value\u003d\"@css/Extensions.css\"/\u003e","lastModifiedDate":"2023-10-20"},{"lineNumber":25,"author":{"gitId":"evanyan13"},"content":"                \u003cURL value\u003d\"@css/Button.css\"/\u003e","lastModifiedDate":"2023-10-22"},{"lineNumber":26,"author":{"gitId":"evanyan13"},"content":"                \u003cURL value\u003d\"@css/CommandBox.css\"/\u003e","lastModifiedDate":"2023-10-22"},{"lineNumber":27,"author":{"gitId":"evanyan13"},"content":"                \u003cURL value\u003d\"@css/JobList.css\"/\u003e","lastModifiedDate":"2023-10-20"},{"lineNumber":28,"author":{"gitId":"evanyan13"},"content":"                \u003cURL value\u003d\"@css/MenuBar.css\"/\u003e","lastModifiedDate":"2023-10-22"},{"lineNumber":29,"author":{"gitId":"evanyan13"},"content":"                \u003cURL value\u003d\"@css/ResultDisplay.css\"/\u003e","lastModifiedDate":"2023-10-22"},{"lineNumber":30,"author":{"gitId":"evanyan13"},"content":"                \u003cURL value\u003d\"@css/ScrollBar.css\"/\u003e","lastModifiedDate":"2023-10-22"},{"lineNumber":31,"author":{"gitId":"evanyan13"},"content":"                \u003cURL value\u003d\"@css/JobCard.css\"/\u003e","lastModifiedDate":"2023-10-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                    \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                        \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                    \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                    \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                        \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                    \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":43,"author":{"gitId":"evanyan13"},"content":"                \u003cHBox fx:id\u003d\"listAndDetailsSplitPanePlaceholder\" HBox.hgrow\u003d\"ALWAYS\" VBox.vgrow\u003d\"ALWAYS\" minHeight\u003d\"510\"","lastModifiedDate":"2023-10-25"},{"lineNumber":44,"author":{"gitId":"evanyan13"},"content":"                      styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":45,"author":{"gitId":"evanyan13"},"content":"                    \u003cVBox fx:id\u003d\"jobList\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"400\" maxWidth\u003d\"400\" minHeight\u003d\"350\"","lastModifiedDate":"2023-10-25"},{"lineNumber":46,"author":{"gitId":"evanyan13"},"content":"                          prefHeight\u003d\"350\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":47,"author":{"gitId":"evanyan13"},"content":"                        \u003cpadding\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":48,"author":{"gitId":"evanyan13"},"content":"                            \u003cInsets top\u003d\"20\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"20\"/\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":49,"author":{"gitId":"evanyan13"},"content":"                        \u003c/padding\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":50,"author":{"gitId":"evanyan13"},"content":"                        \u003cStackPane fx:id\u003d\"jobListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"","lastModifiedDate":"2023-10-25"},{"lineNumber":51,"author":{"gitId":"evanyan13"},"content":"                                   styleClass\u003d\"pane-with-border\"/\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":52,"author":{"gitId":"evanyan13"},"content":"                    \u003c/VBox\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":54,"author":{"gitId":"evanyan13"},"content":"                    \u003cAnchorPane HBox.hgrow\u003d\"ALWAYS\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"                        \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":56,"author":{"gitId":"evanyan13"},"content":"                            \u003cInsets top\u003d\"20\" right\u003d\"20\" bottom\u003d\"10\" left\u003d\"10\"/\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                        \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":58,"author":{"gitId":"evanyan13"},"content":"                        \u003cVBox fx:id\u003d\"jobDetailsPanel\" minWidth\u003d\"400\" prefWidth\u003d\"300\"","lastModifiedDate":"2023-10-25"},{"lineNumber":59,"author":{"gitId":"evanyan13"},"content":"                              AnchorPane.bottomAnchor\u003d\"0.0\" AnchorPane.leftAnchor\u003d\"0.0\"","lastModifiedDate":"2023-10-25"},{"lineNumber":60,"author":{"gitId":"evanyan13"},"content":"                              AnchorPane.rightAnchor\u003d\"0.0\" AnchorPane.topAnchor\u003d\"0.0\"\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":61,"author":{"gitId":"evanyan13"},"content":"                            \u003cStackPane fx:id\u003d\"jobDetailsPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":62,"author":{"gitId":"evanyan13"},"content":"                        \u003c/VBox\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":63,"author":{"gitId":"evanyan13"},"content":"                    \u003c/AnchorPane\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":64,"author":{"gitId":"evanyan13"},"content":"                \u003c/HBox\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"resultDisplayPlaceholder\" styleClass\u003d\"pane-with-border\"","lastModifiedDate":"2017-05-15"},{"lineNumber":67,"author":{"gitId":"evanyan13"},"content":"                           minHeight\u003d\"120\" prefHeight\u003d\"120\" maxHeight\u003d\"120\"\u003e","lastModifiedDate":"2023-10-20"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                    \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":69,"author":{"gitId":"evanyan13"},"content":"                        \u003cInsets top\u003d\"10\" right\u003d\"20\" bottom\u003d\"5\" left\u003d\"20\"/\u003e","lastModifiedDate":"2023-10-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                    \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":73,"author":{"gitId":"evanyan13"},"content":"                \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\"","lastModifiedDate":"2023-10-20"},{"lineNumber":74,"author":{"gitId":"evanyan13"},"content":"                           minHeight\u003d\"100\" prefHeight\u003d\"100\"\u003e","lastModifiedDate":"2023-10-20"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                    \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":76,"author":{"gitId":"evanyan13"},"content":"                        \u003cInsets top\u003d\"5\" right\u003d\"20\" bottom\u003d\"20\" left\u003d\"20\"/\u003e","lastModifiedDate":"2023-10-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                    \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":78,"author":{"gitId":"evanyan13"},"content":"                \u003c/StackPane\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"evanyan13":39,"-":43}},{"path":"src/main/resources/view/ResultDisplay.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"evanyan13"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-10-22"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.TextArea?\u003e","lastModifiedDate":"2023-10-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":6,"author":{"gitId":"evanyan13"},"content":"\u003cStackPane fx:id\u003d\"placeHolder\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-10-20"},{"lineNumber":7,"author":{"gitId":"evanyan13"},"content":"    \u003cTextArea fx:id\u003d\"resultDisplay\" editable\u003d\"false\" styleClass\u003d\"result-display\" minHeight\u003d\"100\" prefHeight\u003d\"100\"","lastModifiedDate":"2023-10-22"},{"lineNumber":8,"author":{"gitId":"evanyan13"},"content":"              wrapText\u003d\"true\"\u003e","lastModifiedDate":"2023-10-22"},{"lineNumber":9,"author":{"gitId":"evanyan13"},"content":"        \u003cpadding\u003e","lastModifiedDate":"2023-10-22"},{"lineNumber":10,"author":{"gitId":"evanyan13"},"content":"            \u003cInsets top\u003d\"10\" right\u003d\"10\" left\u003d\"10\" bottom\u003d\"10\"/\u003e","lastModifiedDate":"2023-10-22"},{"lineNumber":11,"author":{"gitId":"evanyan13"},"content":"        \u003c/padding\u003e","lastModifiedDate":"2023-10-22"},{"lineNumber":12,"author":{"gitId":"evanyan13"},"content":"    \u003c/TextArea\u003e","lastModifiedDate":"2023-10-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2017-06-22"}],"authorContributionMap":{"evanyan13":8,"-":5}},{"path":"src/main/resources/view/css/Button.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"evanyan13"},"content":"/*","lastModifiedDate":"2023-10-22"},{"lineNumber":2,"author":{"gitId":"evanyan13"},"content":" * Metro style Push Button","lastModifiedDate":"2023-10-22"},{"lineNumber":3,"author":{"gitId":"evanyan13"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2023-10-22"},{"lineNumber":4,"author":{"gitId":"evanyan13"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2023-10-22"},{"lineNumber":5,"author":{"gitId":"evanyan13"},"content":" */","lastModifiedDate":"2023-10-22"},{"lineNumber":6,"author":{"gitId":"evanyan13"},"content":".button {","lastModifiedDate":"2023-10-22"},{"lineNumber":7,"author":{"gitId":"evanyan13"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2023-10-22"},{"lineNumber":8,"author":{"gitId":"evanyan13"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2023-10-22"},{"lineNumber":9,"author":{"gitId":"evanyan13"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2023-10-22"},{"lineNumber":10,"author":{"gitId":"evanyan13"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2023-10-22"},{"lineNumber":11,"author":{"gitId":"evanyan13"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2023-10-22"},{"lineNumber":12,"author":{"gitId":"evanyan13"},"content":"    -fx-font-family: \"Verdana\", sans-serif;","lastModifiedDate":"2023-10-22"},{"lineNumber":13,"author":{"gitId":"evanyan13"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2023-10-22"},{"lineNumber":14,"author":{"gitId":"evanyan13"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2023-10-22"},{"lineNumber":15,"author":{"gitId":"evanyan13"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2023-10-22"},{"lineNumber":16,"author":{"gitId":"evanyan13"},"content":"}","lastModifiedDate":"2023-10-22"},{"lineNumber":17,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":18,"author":{"gitId":"evanyan13"},"content":".button:hover {","lastModifiedDate":"2023-10-22"},{"lineNumber":19,"author":{"gitId":"evanyan13"},"content":"    -fx-background-color: #3a3a3a;","lastModifiedDate":"2023-10-22"},{"lineNumber":20,"author":{"gitId":"evanyan13"},"content":"}","lastModifiedDate":"2023-10-22"},{"lineNumber":21,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":22,"author":{"gitId":"evanyan13"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2023-10-22"},{"lineNumber":23,"author":{"gitId":"evanyan13"},"content":"  -fx-background-color: white;","lastModifiedDate":"2023-10-22"},{"lineNumber":24,"author":{"gitId":"evanyan13"},"content":"  -fx-text-fill: #1d1d1d;","lastModifiedDate":"2023-10-22"},{"lineNumber":25,"author":{"gitId":"evanyan13"},"content":"}","lastModifiedDate":"2023-10-22"},{"lineNumber":26,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":27,"author":{"gitId":"evanyan13"},"content":".button:focused {","lastModifiedDate":"2023-10-22"},{"lineNumber":28,"author":{"gitId":"evanyan13"},"content":"    -fx-border-color: white, white;","lastModifiedDate":"2023-10-22"},{"lineNumber":29,"author":{"gitId":"evanyan13"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2023-10-22"},{"lineNumber":30,"author":{"gitId":"evanyan13"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2023-10-22"},{"lineNumber":31,"author":{"gitId":"evanyan13"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2023-10-22"},{"lineNumber":32,"author":{"gitId":"evanyan13"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2023-10-22"},{"lineNumber":33,"author":{"gitId":"evanyan13"},"content":"}","lastModifiedDate":"2023-10-22"},{"lineNumber":34,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":35,"author":{"gitId":"evanyan13"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2023-10-22"},{"lineNumber":36,"author":{"gitId":"evanyan13"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2023-10-22"},{"lineNumber":37,"author":{"gitId":"evanyan13"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2023-10-22"},{"lineNumber":38,"author":{"gitId":"evanyan13"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-10-22"},{"lineNumber":39,"author":{"gitId":"evanyan13"},"content":"}","lastModifiedDate":"2023-10-22"},{"lineNumber":40,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":41,"author":{"gitId":"evanyan13"},"content":".button:default {","lastModifiedDate":"2023-10-22"},{"lineNumber":42,"author":{"gitId":"evanyan13"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2023-10-22"},{"lineNumber":43,"author":{"gitId":"evanyan13"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2023-10-22"},{"lineNumber":44,"author":{"gitId":"evanyan13"},"content":"}","lastModifiedDate":"2023-10-22"},{"lineNumber":45,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":46,"author":{"gitId":"evanyan13"},"content":".button:default:hover {","lastModifiedDate":"2023-10-22"},{"lineNumber":47,"author":{"gitId":"evanyan13"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2023-10-22"},{"lineNumber":48,"author":{"gitId":"evanyan13"},"content":"}","lastModifiedDate":"2023-10-22"}],"authorContributionMap":{"evanyan13":48}},{"path":"src/main/resources/view/css/CommandBox.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"evanyan13"},"content":"#commandTypeLabel {","lastModifiedDate":"2023-10-22"},{"lineNumber":2,"author":{"gitId":"evanyan13"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2023-10-22"},{"lineNumber":3,"author":{"gitId":"evanyan13"},"content":"    -fx-text-fill: #878787;","lastModifiedDate":"2023-10-22"},{"lineNumber":4,"author":{"gitId":"evanyan13"},"content":"}","lastModifiedDate":"2023-10-22"},{"lineNumber":5,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":6,"author":{"gitId":"evanyan13"},"content":"#commandTextField {","lastModifiedDate":"2023-10-22"},{"lineNumber":7,"author":{"gitId":"evanyan13"},"content":"    -fx-background-color: transparent #343434 transparent #343434;","lastModifiedDate":"2023-10-22"},{"lineNumber":8,"author":{"gitId":"evanyan13"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2023-10-22"},{"lineNumber":9,"author":{"gitId":"evanyan13"},"content":"    -fx-background-radius: 15px;","lastModifiedDate":"2023-10-22"},{"lineNumber":10,"author":{"gitId":"evanyan13"},"content":"    -fx-background-color: #E4E1FF;","lastModifiedDate":"2023-10-22"},{"lineNumber":11,"author":{"gitId":"evanyan13"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2023-10-22"},{"lineNumber":12,"author":{"gitId":"evanyan13"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2023-10-22"},{"lineNumber":13,"author":{"gitId":"evanyan13"},"content":"    -fx-border-radius: 15px;","lastModifiedDate":"2023-10-22"},{"lineNumber":14,"author":{"gitId":"evanyan13"},"content":"    -fx-font-family: \"Verdana\", sans-serif;","lastModifiedDate":"2023-10-22"},{"lineNumber":15,"author":{"gitId":"evanyan13"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2023-10-22"},{"lineNumber":16,"author":{"gitId":"evanyan13"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2023-10-22"},{"lineNumber":17,"author":{"gitId":"evanyan13"},"content":"    -fx-text-fill: #343434;","lastModifiedDate":"2023-10-22"},{"lineNumber":18,"author":{"gitId":"evanyan13"},"content":"    -fx-prompt-text-fill: #6F6F6F;","lastModifiedDate":"2023-10-22"},{"lineNumber":19,"author":{"gitId":"evanyan13"},"content":"    -fx-effect: dropshadow(gaussian, rgba(00, 00, 00, 0.25), 4, 0, 2, 2);","lastModifiedDate":"2023-10-22"},{"lineNumber":20,"author":{"gitId":"evanyan13"},"content":"}","lastModifiedDate":"2023-10-22"}],"authorContributionMap":{"evanyan13":20}},{"path":"src/main/resources/view/css/Extensions.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":".error {","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d06651 !important; /* The error class should always override the default text-fill style */","lastModifiedDate":"2017-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".list-cell:empty {","lastModifiedDate":"2017-02-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    /* Empty cells will not have alternating colours */","lastModifiedDate":"2017-02-23"},{"lineNumber":8,"author":{"gitId":"evanyan13"},"content":"    -fx-background: #343434;","lastModifiedDate":"2023-10-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":".tag-selector {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    -fx-border-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-border-radius: 3;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-background-radius: 3;","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":".tooltip-text {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"evanyan13":1,"-":19}},{"path":"src/main/resources/view/css/JobCard.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"evanyan13"},"content":"/* Job Card */","lastModifiedDate":"2023-10-29"},{"lineNumber":2,"author":{"gitId":"evanyan13"},"content":"#cardPane {","lastModifiedDate":"2023-10-29"},{"lineNumber":3,"author":{"gitId":"evanyan13"},"content":"    -fx-background-color: #ffffff;","lastModifiedDate":"2023-10-29"},{"lineNumber":4,"author":{"gitId":"evanyan13"},"content":"    -fx-background-radius: 30px;","lastModifiedDate":"2023-10-29"},{"lineNumber":5,"author":{"gitId":"evanyan13"},"content":"    -fx-border-color: #E1E1E1;","lastModifiedDate":"2023-10-29"},{"lineNumber":6,"author":{"gitId":"evanyan13"},"content":"    -fx-border-size: 2;","lastModifiedDate":"2023-10-29"},{"lineNumber":7,"author":{"gitId":"evanyan13"},"content":"    -fx-border-radius: 30px;","lastModifiedDate":"2023-10-29"},{"lineNumber":8,"author":{"gitId":"evanyan13"},"content":"    -fx-padding: 0px, 0px, 50px, 0px;","lastModifiedDate":"2023-10-29"},{"lineNumber":9,"author":{"gitId":"evanyan13"},"content":"    -fx-effect: dropshadow(gaussian, rgba(0, 0, 0, 0.25), 4, 0, 2, 2);","lastModifiedDate":"2023-10-29"},{"lineNumber":10,"author":{"gitId":"evanyan13"},"content":"}","lastModifiedDate":"2023-10-29"},{"lineNumber":11,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":12,"author":{"gitId":"evanyan13"},"content":".cell_big_label {","lastModifiedDate":"2023-10-29"},{"lineNumber":13,"author":{"gitId":"evanyan13"},"content":"    -fx-font-family: \"Verdana\", sans-serif;","lastModifiedDate":"2023-10-29"},{"lineNumber":14,"author":{"gitId":"evanyan13"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2023-10-29"},{"lineNumber":15,"author":{"gitId":"evanyan13"},"content":"    -fx-font-size: 22px;","lastModifiedDate":"2023-10-29"},{"lineNumber":16,"author":{"gitId":"evanyan13"},"content":"    -fx-text-fill: #343434;","lastModifiedDate":"2023-10-29"},{"lineNumber":17,"author":{"gitId":"evanyan13"},"content":"}","lastModifiedDate":"2023-10-29"},{"lineNumber":18,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":19,"author":{"gitId":"evanyan13"},"content":".cell_small_label {","lastModifiedDate":"2023-10-29"},{"lineNumber":20,"author":{"gitId":"evanyan13"},"content":"    -fx-font-family: \"Verdana\", sans-serif;","lastModifiedDate":"2023-10-29"},{"lineNumber":21,"author":{"gitId":"evanyan13"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2023-10-29"},{"lineNumber":22,"author":{"gitId":"evanyan13"},"content":"    -fx-text-fill: #787878;","lastModifiedDate":"2023-10-29"},{"lineNumber":23,"author":{"gitId":"evanyan13"},"content":"}","lastModifiedDate":"2023-10-29"},{"lineNumber":24,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":25,"author":{"gitId":"evanyan13"},"content":".cell_index_label {","lastModifiedDate":"2023-10-29"},{"lineNumber":26,"author":{"gitId":"evanyan13"},"content":"    -fx-font-family: \"Verdana\", sans-serif;","lastModifiedDate":"2023-10-30"},{"lineNumber":27,"author":{"gitId":"evanyan13"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2023-10-29"},{"lineNumber":28,"author":{"gitId":"evanyan13"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2023-10-29"},{"lineNumber":29,"author":{"gitId":"evanyan13"},"content":"    -fx-text-fill: #343434;","lastModifiedDate":"2023-10-29"},{"lineNumber":30,"author":{"gitId":"evanyan13"},"content":"}","lastModifiedDate":"2023-10-29"},{"lineNumber":31,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":32,"author":{"gitId":"evanyan13"},"content":".cell_status_label {","lastModifiedDate":"2023-10-30"},{"lineNumber":33,"author":{"gitId":"evanyan13"},"content":"    -fx-font-family: \"Verdana\", sans-serif;","lastModifiedDate":"2023-10-30"},{"lineNumber":34,"author":{"gitId":"evanyan13"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2023-10-30"},{"lineNumber":35,"author":{"gitId":"evanyan13"},"content":"    -fx-text-fill: #343434;","lastModifiedDate":"2023-10-30"},{"lineNumber":36,"author":{"gitId":"evanyan13"},"content":"    -fx-padding: 2px 5px;","lastModifiedDate":"2023-10-30"},{"lineNumber":37,"author":{"gitId":"evanyan13"},"content":"}","lastModifiedDate":"2023-10-30"},{"lineNumber":38,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":39,"author":{"gitId":"evanyan13"},"content":".to_be_submitted {","lastModifiedDate":"2023-10-30"},{"lineNumber":40,"author":{"gitId":"evanyan13"},"content":"    -fx-background-color: #F4D5EE;","lastModifiedDate":"2023-10-30"},{"lineNumber":41,"author":{"gitId":"evanyan13"},"content":"    -fx-background-radius: 5px;","lastModifiedDate":"2023-10-30"},{"lineNumber":42,"author":{"gitId":"evanyan13"},"content":"}","lastModifiedDate":"2023-10-30"},{"lineNumber":43,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":44,"author":{"gitId":"evanyan13"},"content":".pending {","lastModifiedDate":"2023-10-30"},{"lineNumber":45,"author":{"gitId":"evanyan13"},"content":"    -fx-background-color: #E4E1FF;","lastModifiedDate":"2023-10-30"},{"lineNumber":46,"author":{"gitId":"evanyan13"},"content":"    -fx-background-radius: 5px;","lastModifiedDate":"2023-10-30"},{"lineNumber":47,"author":{"gitId":"evanyan13"},"content":"}","lastModifiedDate":"2023-10-30"},{"lineNumber":48,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":49,"author":{"gitId":"evanyan13"},"content":".approved {","lastModifiedDate":"2023-10-30"},{"lineNumber":50,"author":{"gitId":"evanyan13"},"content":"    -fx-background-color: #BFE2CE;","lastModifiedDate":"2023-10-30"},{"lineNumber":51,"author":{"gitId":"evanyan13"},"content":"    -fx-background-radius: 5px;","lastModifiedDate":"2023-10-30"},{"lineNumber":52,"author":{"gitId":"evanyan13"},"content":"}","lastModifiedDate":"2023-10-30"},{"lineNumber":53,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":54,"author":{"gitId":"evanyan13"},"content":".rejected {","lastModifiedDate":"2023-10-30"},{"lineNumber":55,"author":{"gitId":"evanyan13"},"content":"    -fx-background-color: #FFD0D3;","lastModifiedDate":"2023-10-30"},{"lineNumber":56,"author":{"gitId":"evanyan13"},"content":"    -fx-background-radius: 5px;","lastModifiedDate":"2023-10-30"},{"lineNumber":57,"author":{"gitId":"evanyan13"},"content":"}","lastModifiedDate":"2023-10-30"}],"authorContributionMap":{"evanyan13":57}},{"path":"src/main/resources/view/css/JobDetailsPanel.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"evanyan13"},"content":"/* Main Job Details Panel */","lastModifiedDate":"2023-10-25"},{"lineNumber":2,"author":{"gitId":"evanyan13"},"content":".jobDetailsPanel {","lastModifiedDate":"2023-10-25"},{"lineNumber":3,"author":{"gitId":"evanyan13"},"content":"    -fx-background-color: #FAF0FF;","lastModifiedDate":"2023-10-25"},{"lineNumber":4,"author":{"gitId":"evanyan13"},"content":"    -fx-background-radius: 15px;","lastModifiedDate":"2023-10-25"},{"lineNumber":5,"author":{"gitId":"evanyan13"},"content":"    -fx-border-radius: 15px;","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"evanyan13"},"content":"    -fx-effect: dropshadow(gaussian, rgba(0, 0, 0, 0.25), 4, 0, 2, 2);","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"evanyan13"},"content":"}","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"evanyan13"},"content":"/* Interview List */","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"evanyan13"},"content":".interviewListPanel {","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"evanyan13"},"content":"    -fx-background-color: #DCDCDC;","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"evanyan13"},"content":"    -fx-background-radius: 15px;","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"evanyan13"},"content":"    -fx-border-radius: 15px;","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"evanyan13"},"content":"}","lastModifiedDate":"2023-10-25"}],"authorContributionMap":{"evanyan13":14}},{"path":"src/main/resources/view/css/JobList.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"evanyan13"},"content":"/* Job List Panel*/","lastModifiedDate":"2023-10-22"},{"lineNumber":2,"author":{"gitId":"evanyan13"},"content":".list-view {","lastModifiedDate":"2023-10-20"},{"lineNumber":3,"author":{"gitId":"evanyan13"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2023-10-20"},{"lineNumber":4,"author":{"gitId":"evanyan13"},"content":"    -fx-padding: 0;","lastModifiedDate":"2023-10-20"},{"lineNumber":5,"author":{"gitId":"evanyan13"},"content":"    -fx-background-color: #ffffff;","lastModifiedDate":"2023-10-22"},{"lineNumber":6,"author":{"gitId":"evanyan13"},"content":"    -fx-background-radius: 20px;","lastModifiedDate":"2023-10-22"},{"lineNumber":7,"author":{"gitId":"evanyan13"},"content":"    -fx-control-inner-background: white;","lastModifiedDate":"2023-10-22"},{"lineNumber":8,"author":{"gitId":"evanyan13"},"content":"    -fx-control-inner-background-alt: white;","lastModifiedDate":"2023-10-22"},{"lineNumber":9,"author":{"gitId":"evanyan13"},"content":"    -fx-border-radius: 20px;","lastModifiedDate":"2023-10-22"},{"lineNumber":10,"author":{"gitId":"evanyan13"},"content":"}","lastModifiedDate":"2023-10-22"},{"lineNumber":11,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":12,"author":{"gitId":"evanyan13"},"content":".list-view .list-cell {","lastModifiedDate":"2023-10-22"},{"lineNumber":13,"author":{"gitId":"evanyan13"},"content":"    -fx-padding: 0px 10px 15px 5px;","lastModifiedDate":"2023-10-22"},{"lineNumber":14,"author":{"gitId":"evanyan13"},"content":"}","lastModifiedDate":"2023-10-20"},{"lineNumber":15,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":16,"author":{"gitId":"evanyan13"},"content":".list-cell:selected {","lastModifiedDate":"2023-10-22"},{"lineNumber":17,"author":{"gitId":"evanyan13"},"content":"    -fx-background-color: #ffffff;","lastModifiedDate":"2023-10-20"},{"lineNumber":18,"author":{"gitId":"evanyan13"},"content":"}","lastModifiedDate":"2023-10-20"},{"lineNumber":19,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":20,"author":{"gitId":"evanyan13"},"content":".list-cell:selected #cardPane {","lastModifiedDate":"2023-10-22"},{"lineNumber":21,"author":{"gitId":"evanyan13"},"content":"    -fx-background-color: #FAF0FF;","lastModifiedDate":"2023-10-22"},{"lineNumber":22,"author":{"gitId":"evanyan13"},"content":"}","lastModifiedDate":"2023-10-20"}],"authorContributionMap":{"evanyan13":22}},{"path":"src/main/resources/view/css/MainTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":".background {","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"evanyan13"},"content":"    -fx-background-color: #ffffff;","lastModifiedDate":"2023-10-20"},{"lineNumber":3,"author":{"gitId":"evanyan13"},"content":"    background-color: #ffffff; /* Used in the default.html file */","lastModifiedDate":"2023-10-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".label {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"evanyan13"},"content":"    -fx-font-family: \"Verdana\", sans-serif;","lastModifiedDate":"2023-10-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    -fx-text-fill: #555555;","lastModifiedDate":"2016-08-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":".label-bright {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"evanyan13"},"content":"    -fx-font-family: \"Verdana\", sans-serif;","lastModifiedDate":"2023-10-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":".label-header {","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"evanyan13"},"content":"    -fx-font-size: 24pt;","lastModifiedDate":"2023-10-19"},{"lineNumber":22,"author":{"gitId":"evanyan13"},"content":"    -fx-font-family: \"Verdana\", sans-serif;","lastModifiedDate":"2023-10-22"},{"lineNumber":23,"author":{"gitId":"evanyan13"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2023-10-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":".text-field {","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"evanyan13"},"content":"    -fx-font-family: \"Verdana\", sans-serif;","lastModifiedDate":"2023-10-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":".tab-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":".table-view {","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"evanyan13"},"content":"    -fx-base: #00ff00;","lastModifiedDate":"2023-10-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    -fx-control-inner-background: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    -fx-padding: 5;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":".table-view .column-header-background {","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    -fx-size: 35;","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    -fx-border-color:","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        derive(-fx-base, 80%)","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":".table-view .column-header .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"evanyan13"},"content":"    -fx-font-family: \"Verdana\", sans-serif;;","lastModifiedDate":"2023-10-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    -fx-border-color: transparent transparent transparent #4d4d4d;","lastModifiedDate":"2017-03-02"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":".split-pane {","lastModifiedDate":"2016-08-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":".stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":91,"author":{"gitId":"evanyan13"},"content":"     -fx-background-color: derive(#ffffff, 20%);","lastModifiedDate":"2023-10-20"},{"lineNumber":92,"author":{"gitId":"evanyan13"},"content":"     -fx-padding: 0 0 5px 0;","lastModifiedDate":"2023-10-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":".pane-with-border {","lastModifiedDate":"2017-05-15"},{"lineNumber":96,"author":{"gitId":"evanyan13"},"content":"     -fx-background-color: #ffffff;","lastModifiedDate":"2023-10-20"},{"lineNumber":97,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-09"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":99,"author":{"gitId":"-"},"content":".status-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"evanyan13"},"content":"    -fx-background-color: derive(#f4f4f4, 30%);","lastModifiedDate":"2023-10-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":".status-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"evanyan13"},"content":"    -fx-font-family: \"Verdana\", sans-serif;;","lastModifiedDate":"2023-10-22"},{"lineNumber":105,"author":{"gitId":"evanyan13"},"content":"    -fx-text-fill: #343434;","lastModifiedDate":"2023-10-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2018-12-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2018-12-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":".status-bar-with-border {","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"evanyan13"},"content":"    -fx-background-color: derive(#f4f4f4, 30%);","lastModifiedDate":"2023-10-19"},{"lineNumber":112,"author":{"gitId":"evanyan13"},"content":"    -fx-border-color: derive(#e4e4e4, 25%);","lastModifiedDate":"2023-10-19"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":".status-bar-with-border .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"evanyan13"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2023-10-19"},{"lineNumber":118,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":".grid-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":121,"author":{"gitId":"evanyan13"},"content":"    -fx-background-color: #ffffff;","lastModifiedDate":"2023-10-22"},{"lineNumber":122,"author":{"gitId":"evanyan13"},"content":"    -fx-border-color: #ffffff;","lastModifiedDate":"2023-10-22"},{"lineNumber":123,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":127,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":".dialog-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":131,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":135,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2016-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2016-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":145,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2016-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2016-08-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2016-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    -fx-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"#filterField, #personListPanel, #personWebpage {","lastModifiedDate":"2016-08-15"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2016-08-15"},{"lineNumber":156,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":157,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":158,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-22"}],"authorContributionMap":{"evanyan13":23,"-":135}},{"path":"src/main/resources/view/css/MenuBar.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"evanyan13"},"content":".menu-bar {","lastModifiedDate":"2023-10-22"},{"lineNumber":2,"author":{"gitId":"evanyan13"},"content":"    -fx-background-color: #ffffff;","lastModifiedDate":"2023-10-22"},{"lineNumber":3,"author":{"gitId":"evanyan13"},"content":"    -fx-border-style: none none solid none;","lastModifiedDate":"2023-10-22"},{"lineNumber":4,"author":{"gitId":"evanyan13"},"content":"    -fx-border-color: #E8E8E8;","lastModifiedDate":"2023-10-22"},{"lineNumber":5,"author":{"gitId":"evanyan13"},"content":"    -fx-border-size: 2px;","lastModifiedDate":"2023-10-22"},{"lineNumber":6,"author":{"gitId":"evanyan13"},"content":"}","lastModifiedDate":"2023-10-22"},{"lineNumber":7,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":8,"author":{"gitId":"evanyan13"},"content":".menu-bar .label {","lastModifiedDate":"2023-10-22"},{"lineNumber":9,"author":{"gitId":"evanyan13"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2023-10-22"},{"lineNumber":10,"author":{"gitId":"evanyan13"},"content":"    -fx-font-family: \"Verdana\", sans-serif;;","lastModifiedDate":"2023-10-22"},{"lineNumber":11,"author":{"gitId":"evanyan13"},"content":"    -fx-text-fill: #343434;","lastModifiedDate":"2023-10-22"},{"lineNumber":12,"author":{"gitId":"evanyan13"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2023-10-22"},{"lineNumber":13,"author":{"gitId":"evanyan13"},"content":"}","lastModifiedDate":"2023-10-22"},{"lineNumber":14,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":15,"author":{"gitId":"evanyan13"},"content":".menu-bar .menu:hover, .menu-bar .menu:focused {","lastModifiedDate":"2023-10-22"},{"lineNumber":16,"author":{"gitId":"evanyan13"},"content":"    -fx-background-color: #ffffff;","lastModifiedDate":"2023-10-22"},{"lineNumber":17,"author":{"gitId":"evanyan13"},"content":"}","lastModifiedDate":"2023-10-22"},{"lineNumber":18,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":19,"author":{"gitId":"evanyan13"},"content":".menu-bar .menu {","lastModifiedDate":"2023-10-22"},{"lineNumber":20,"author":{"gitId":"evanyan13"},"content":"    -fx-background-color: #ffffff;","lastModifiedDate":"2023-10-22"},{"lineNumber":21,"author":{"gitId":"evanyan13"},"content":"}","lastModifiedDate":"2023-10-22"},{"lineNumber":22,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":23,"author":{"gitId":"evanyan13"},"content":".menu-bar .menu:hover {","lastModifiedDate":"2023-10-22"},{"lineNumber":24,"author":{"gitId":"evanyan13"},"content":"    -fx-background-color: #E4E1FF;","lastModifiedDate":"2023-10-22"},{"lineNumber":25,"author":{"gitId":"evanyan13"},"content":"    -fx-background-radius: 10px;","lastModifiedDate":"2023-10-22"},{"lineNumber":26,"author":{"gitId":"evanyan13"},"content":"}","lastModifiedDate":"2023-10-22"},{"lineNumber":27,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":28,"author":{"gitId":"evanyan13"},"content":".menu-item:hover, .menu-item:focused {","lastModifiedDate":"2023-10-22"},{"lineNumber":29,"author":{"gitId":"evanyan13"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2023-10-22"},{"lineNumber":30,"author":{"gitId":"evanyan13"},"content":"}","lastModifiedDate":"2023-10-22"},{"lineNumber":31,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":32,"author":{"gitId":"evanyan13"},"content":".context-menu {","lastModifiedDate":"2023-10-22"},{"lineNumber":33,"author":{"gitId":"evanyan13"},"content":"    -fx-background-color: #DCDCDC;","lastModifiedDate":"2023-10-22"},{"lineNumber":34,"author":{"gitId":"evanyan13"},"content":"    -fx-background-radius: 10px;","lastModifiedDate":"2023-10-22"},{"lineNumber":35,"author":{"gitId":"evanyan13"},"content":"}","lastModifiedDate":"2023-10-22"},{"lineNumber":36,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":37,"author":{"gitId":"evanyan13"},"content":".context-menu:hover{","lastModifiedDate":"2023-10-22"},{"lineNumber":38,"author":{"gitId":"evanyan13"},"content":"    -fx-background-color: #E4E1FF;","lastModifiedDate":"2023-10-22"},{"lineNumber":39,"author":{"gitId":"evanyan13"},"content":"    -fx-background-radius: 10px;","lastModifiedDate":"2023-10-22"},{"lineNumber":40,"author":{"gitId":"evanyan13"},"content":"}","lastModifiedDate":"2023-10-22"},{"lineNumber":41,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":42,"author":{"gitId":"evanyan13"},"content":".context-menu .label {","lastModifiedDate":"2023-10-22"},{"lineNumber":43,"author":{"gitId":"evanyan13"},"content":"    -fx-text-fill: #343434;","lastModifiedDate":"2023-10-22"},{"lineNumber":44,"author":{"gitId":"evanyan13"},"content":"}","lastModifiedDate":"2023-10-22"}],"authorContributionMap":{"evanyan13":44}},{"path":"src/main/resources/view/css/ResultDisplay.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"evanyan13"},"content":".result-display {","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"evanyan13"},"content":"    -fx-background-color: #DCDCDC;","lastModifiedDate":"2023-10-22"},{"lineNumber":3,"author":{"gitId":"evanyan13"},"content":"    -fx-background-radius: 15;","lastModifiedDate":"2023-10-22"},{"lineNumber":4,"author":{"gitId":"evanyan13"},"content":"    -fx-font-family: \"Inter Bold\";","lastModifiedDate":"2023-10-22"},{"lineNumber":5,"author":{"gitId":"evanyan13"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2023-10-20"},{"lineNumber":6,"author":{"gitId":"evanyan13"},"content":"    -fx-text-fill: #5C5C5C;","lastModifiedDate":"2023-10-22"},{"lineNumber":7,"author":{"gitId":"evanyan13"},"content":"    -fx-effect: dropshadow(gaussian, rgba(00, 00, 00, 0.25), 4, 0, 2, 2);","lastModifiedDate":"2023-10-22"},{"lineNumber":8,"author":{"gitId":"evanyan13"},"content":"    -fx-border-radius: 15;","lastModifiedDate":"2023-10-22"},{"lineNumber":9,"author":{"gitId":"evanyan13"},"content":"}","lastModifiedDate":"2023-10-20"},{"lineNumber":10,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":11,"author":{"gitId":"evanyan13"},"content":".result-display .content {","lastModifiedDate":"2023-10-22"},{"lineNumber":12,"author":{"gitId":"evanyan13"},"content":"    -fx-background-color: #DCDCDC;","lastModifiedDate":"2023-10-22"},{"lineNumber":13,"author":{"gitId":"evanyan13"},"content":"}","lastModifiedDate":"2023-10-22"},{"lineNumber":14,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":15,"author":{"gitId":"evanyan13"},"content":".result-display .scroll-bar {","lastModifiedDate":"2023-10-22"},{"lineNumber":16,"author":{"gitId":"evanyan13"},"content":"    -fx-background-color: #F0F0F0;","lastModifiedDate":"2023-10-22"},{"lineNumber":17,"author":{"gitId":"evanyan13"},"content":"}","lastModifiedDate":"2023-10-22"}],"authorContributionMap":{"evanyan13":17}},{"path":"src/main/resources/view/css/ScrollBar.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"evanyan13"},"content":".scroll-bar {","lastModifiedDate":"2023-10-22"},{"lineNumber":2,"author":{"gitId":"evanyan13"},"content":"    -fx-background-color: #FCFCFC;","lastModifiedDate":"2023-10-22"},{"lineNumber":3,"author":{"gitId":"evanyan13"},"content":"    -fx-background-radius: 10px;","lastModifiedDate":"2023-10-22"},{"lineNumber":4,"author":{"gitId":"evanyan13"},"content":"    -fx-border-color: #E8E8E8;","lastModifiedDate":"2023-10-22"},{"lineNumber":5,"author":{"gitId":"evanyan13"},"content":"    -fx-border-weight: 2px;","lastModifiedDate":"2023-10-22"},{"lineNumber":6,"author":{"gitId":"evanyan13"},"content":"    -fx-border-radius: 10px;","lastModifiedDate":"2023-10-22"},{"lineNumber":7,"author":{"gitId":"evanyan13"},"content":"}","lastModifiedDate":"2023-10-22"},{"lineNumber":8,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":9,"author":{"gitId":"evanyan13"},"content":".scroll-bar .thumb {","lastModifiedDate":"2023-10-22"},{"lineNumber":10,"author":{"gitId":"evanyan13"},"content":"    -fx-background-color: #7A7A7A;","lastModifiedDate":"2023-10-22"},{"lineNumber":11,"author":{"gitId":"evanyan13"},"content":"    -fx-background-radius: 10px;","lastModifiedDate":"2023-10-22"},{"lineNumber":12,"author":{"gitId":"evanyan13"},"content":"    -fx-background-insets: 4;","lastModifiedDate":"2023-10-22"},{"lineNumber":13,"author":{"gitId":"evanyan13"},"content":"}","lastModifiedDate":"2023-10-22"},{"lineNumber":14,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":15,"author":{"gitId":"evanyan13"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2023-10-22"},{"lineNumber":16,"author":{"gitId":"evanyan13"},"content":"    -fx-background-color: #ffffff;","lastModifiedDate":"2023-10-22"},{"lineNumber":17,"author":{"gitId":"evanyan13"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2023-10-22"},{"lineNumber":18,"author":{"gitId":"evanyan13"},"content":"}","lastModifiedDate":"2023-10-22"},{"lineNumber":19,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":20,"author":{"gitId":"evanyan13"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2023-10-22"},{"lineNumber":21,"author":{"gitId":"evanyan13"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2023-10-22"},{"lineNumber":22,"author":{"gitId":"evanyan13"},"content":"}","lastModifiedDate":"2023-10-22"},{"lineNumber":23,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":24,"author":{"gitId":"evanyan13"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2023-10-22"},{"lineNumber":25,"author":{"gitId":"evanyan13"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2023-10-22"},{"lineNumber":26,"author":{"gitId":"evanyan13"},"content":"}","lastModifiedDate":"2023-10-22"},{"lineNumber":27,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":28,"author":{"gitId":"evanyan13"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2023-10-22"},{"lineNumber":29,"author":{"gitId":"evanyan13"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2023-10-22"},{"lineNumber":30,"author":{"gitId":"evanyan13"},"content":"}","lastModifiedDate":"2023-10-22"}],"authorContributionMap":{"evanyan13":30}},{"path":"src/test/java/seedu/application/AppParametersTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"evanyan13"},"content":"package seedu.application;","lastModifiedDate":"2023-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-02-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-02-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-04-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2018-04-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class AppParametersTest {","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final ParametersStub parametersStub \u003d new ParametersStub();","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final AppParameters expected \u003d new AppParameters();","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void parse_validConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", \"config.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        expected.setConfigPath(Paths.get(\"config.json\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void parse_nullConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", null);","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void parse_invalidConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", \"a\\0\");","lastModifiedDate":"2018-04-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        expected.setConfigPath(null);","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d new AppParameters();","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        String expected \u003d AppParameters.class.getCanonicalName() + \"{configPath\u003d\" + appParameters.getConfigPath() + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertEquals(expected, appParameters.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2019-02-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d new AppParameters();","lastModifiedDate":"2019-02-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertTrue(appParameters.equals(new AppParameters()));","lastModifiedDate":"2019-02-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(appParameters.equals(appParameters));","lastModifiedDate":"2019-02-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertFalse(appParameters.equals(null));","lastModifiedDate":"2019-02-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertFalse(appParameters.equals(5.0f));","lastModifiedDate":"2019-02-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // different config path -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        AppParameters otherAppParameters \u003d new AppParameters();","lastModifiedDate":"2019-02-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        otherAppParameters.setConfigPath(Paths.get(\"configPath\"));","lastModifiedDate":"2019-02-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertFalse(appParameters.equals(otherAppParameters));","lastModifiedDate":"2019-02-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    private static class ParametersStub extends Application.Parameters {","lastModifiedDate":"2018-04-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        private Map\u003cString, String\u003e namedParameters \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        public List\u003cString\u003e getRaw() {","lastModifiedDate":"2018-04-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"should not be called\");","lastModifiedDate":"2018-04-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        public List\u003cString\u003e getUnnamed() {","lastModifiedDate":"2018-04-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"should not be called\");","lastModifiedDate":"2018-04-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        public Map\u003cString, String\u003e getNamed() {","lastModifiedDate":"2018-04-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            return Collections.unmodifiableMap(namedParameters);","lastModifiedDate":"2018-04-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-04-21"}],"authorContributionMap":{"evanyan13":1,"-":88}},{"path":"src/test/java/seedu/application/commons/core/ConfigTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"evanyan13"},"content":"package seedu.application.commons.core;","lastModifiedDate":"2023-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"czhiruo"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2023-10-28"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"czhiruo"},"content":"import seedu.application.model.job.Industry;","lastModifiedDate":"2023-10-28"},{"lineNumber":8,"author":{"gitId":"czhiruo"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":9,"author":{"gitId":"czhiruo"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class ConfigTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        Config config \u003d new Config();","lastModifiedDate":"2019-02-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        String expected \u003d Config.class.getCanonicalName() + \"{logLevel\u003d\" + config.getLogLevel()","lastModifiedDate":"2019-02-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"                + \", userPrefsFilePath\u003d\" + config.getUserPrefsFilePath() + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertEquals(expected, config.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void equalsMethod() {","lastModifiedDate":"2016-09-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        Config defaultConfig \u003d new Config();","lastModifiedDate":"2016-09-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertNotNull(defaultConfig);","lastModifiedDate":"2016-10-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertTrue(defaultConfig.equals(defaultConfig));","lastModifiedDate":"2016-09-30"},{"lineNumber":25,"author":{"gitId":"czhiruo"},"content":"        assertFalse(defaultConfig.equals(new Industry(\"Manufacturing\")));","lastModifiedDate":"2023-10-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"czhiruo":5,"evanyan13":1,"-":23}},{"path":"src/test/java/seedu/application/commons/core/GuiSettingsTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"evanyan13"},"content":"package seedu.application.commons.core;","lastModifiedDate":"2023-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":3,"author":{"gitId":"czhiruo"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2023-10-28"},{"lineNumber":4,"author":{"gitId":"czhiruo"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-02-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":8,"author":{"gitId":"czhiruo"},"content":"import seedu.application.model.job.Industry;","lastModifiedDate":"2023-10-28"},{"lineNumber":9,"author":{"gitId":"czhiruo"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":10,"author":{"gitId":"czhiruo"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class GuiSettingsTest {","lastModifiedDate":"2019-02-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2019-02-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        String expected \u003d GuiSettings.class.getCanonicalName() + \"{windowWidth\u003d\" + guiSettings.getWindowWidth()","lastModifiedDate":"2019-02-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"                + \", windowHeight\u003d\" + guiSettings.getWindowHeight() + \", windowCoordinates\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"                + guiSettings.getWindowCoordinates() + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertEquals(expected, guiSettings.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":20,"author":{"gitId":"czhiruo"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":21,"author":{"gitId":"czhiruo"},"content":"    @Test","lastModifiedDate":"2023-10-28"},{"lineNumber":22,"author":{"gitId":"czhiruo"},"content":"    public void equalsMethod() {","lastModifiedDate":"2023-10-28"},{"lineNumber":23,"author":{"gitId":"czhiruo"},"content":"        GuiSettings defaultGuiSetting \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2023-10-28"},{"lineNumber":24,"author":{"gitId":"czhiruo"},"content":"        assertTrue(defaultGuiSetting.equals(defaultGuiSetting));","lastModifiedDate":"2023-10-28"},{"lineNumber":25,"author":{"gitId":"czhiruo"},"content":"        assertFalse(defaultGuiSetting.equals(new Industry(\"Manufacturing\")));","lastModifiedDate":"2023-10-28"},{"lineNumber":26,"author":{"gitId":"czhiruo"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-02-23"}],"authorContributionMap":{"czhiruo":12,"evanyan13":1,"-":14}},{"path":"src/test/java/seedu/application/commons/core/VersionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"evanyan13"},"content":"package seedu.application.commons.core;","lastModifiedDate":"2023-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"czhiruo"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2023-10-28"},{"lineNumber":4,"author":{"gitId":"evanyan13"},"content":"import static seedu.application.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"czhiruo"},"content":"import seedu.application.model.job.Industry;","lastModifiedDate":"2023-10-28"},{"lineNumber":9,"author":{"gitId":"czhiruo"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class VersionTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public void versionParsing_acceptableVersionString_parsedVersionCorrectly() {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V0.0.0ea\", 0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V3.10.2\", 3, 10, 2, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V100.100.100ea\", 100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public void versionParsing_wrongVersionString_throwIllegalArgumentException() {","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e Version.fromString(\"This is not a version string\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void versionConstructor_correctParameter_valueAsExpected() {","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(19, 10, 20, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(19, version.getMajor());","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(10, version.getMinor());","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(20, version.getPatch());","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertEquals(true, version.isEarlyAccess());","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void versionToString_validVersion_correctStringRepresentation() {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // boundary at 0","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertEquals(\"V0.0.0ea\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // normal values","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        version \u003d new Version(4, 10, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertEquals(\"V4.10.5\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // big numbers","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        version \u003d new Version(100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertEquals(\"V100.100.100ea\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_compareToIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Version one;","lastModifiedDate":"2017-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Version another;","lastModifiedDate":"2017-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // Tests equality","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003d\u003d 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        one \u003d new Version(11, 12, 13, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        another \u003d new Version(11, 12, 13, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003d\u003d 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // Tests different patch","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // Tests different minor","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 5, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // Tests different major","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        one \u003d new Version(10, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // Tests high major vs low minor","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        one \u003d new Version(10, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 1, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        // Tests high patch vs low minor","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 10, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 1, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        // Tests same major minor different patch","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        // Tests early access vs not early access on same version number","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        // Tests early access lower version vs not early access higher version compare by version number first","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // Tests early access higher version vs not early access lower version compare by version number first","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_hashCodeIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertEquals(100100100, version.hashCode());","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        version \u003d new Version(10, 10, 10, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertEquals(1010010010, version.hashCode());","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_equalIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        Version one;","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        Version another;","lastModifiedDate":"2016-10-16"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertTrue(one.equals(another));","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        one \u003d new Version(100, 191, 275, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        another \u003d new Version(100, 191, 275, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertTrue(one.equals(another));","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"czhiruo"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":131,"author":{"gitId":"czhiruo"},"content":"        one \u003d new Version(100, 191, 275, true);","lastModifiedDate":"2023-10-28"},{"lineNumber":132,"author":{"gitId":"czhiruo"},"content":"        assertTrue(one.equals(one));","lastModifiedDate":"2023-10-28"},{"lineNumber":133,"author":{"gitId":"czhiruo"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":134,"author":{"gitId":"czhiruo"},"content":"        one \u003d new Version(100, 191, 275, true);","lastModifiedDate":"2023-10-28"},{"lineNumber":135,"author":{"gitId":"czhiruo"},"content":"        assertFalse(one.equals(new Industry(\"Healthcare\")));","lastModifiedDate":"2023-10-28"},{"lineNumber":136,"author":{"gitId":"czhiruo"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":137,"author":{"gitId":"czhiruo"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":138,"author":{"gitId":"czhiruo"},"content":"    @Test","lastModifiedDate":"2023-10-28"},{"lineNumber":139,"author":{"gitId":"czhiruo"},"content":"    public void versionComparable_validVersion_equalIsNotCorrect() {","lastModifiedDate":"2023-10-28"},{"lineNumber":140,"author":{"gitId":"czhiruo"},"content":"        Version one;","lastModifiedDate":"2023-10-28"},{"lineNumber":141,"author":{"gitId":"czhiruo"},"content":"        Version another;","lastModifiedDate":"2023-10-28"},{"lineNumber":142,"author":{"gitId":"czhiruo"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":143,"author":{"gitId":"czhiruo"},"content":"        one \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2023-10-28"},{"lineNumber":144,"author":{"gitId":"czhiruo"},"content":"        another \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2023-10-28"},{"lineNumber":145,"author":{"gitId":"czhiruo"},"content":"        assertFalse(one.equals(another));","lastModifiedDate":"2023-10-28"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    private void verifyVersionParsedCorrectly(String versionString,","lastModifiedDate":"2016-08-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            int major, int minor, int patch, boolean isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        assertEquals(new Version(major, minor, patch, isEarlyAccess), Version.fromString(versionString));","lastModifiedDate":"2016-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"czhiruo":19,"evanyan13":2,"-":131}},{"path":"src/test/java/seedu/application/commons/core/index/IndexTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"evanyan13"},"content":"package seedu.application.commons.core.index;","lastModifiedDate":"2023-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"evanyan13"},"content":"import static seedu.application.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-10"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class IndexTest {","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public void createOneBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromOneBased(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromOneBased(1).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromOneBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // convert from one-based index to zero-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromOneBased(1).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertEquals(4, Index.fromOneBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void createZeroBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromZeroBased(-1));","lastModifiedDate":"2019-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromZeroBased(0).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromZeroBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // convert from zero-based index to one-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromZeroBased(0).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(6, Index.fromZeroBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        final Index fifthPersonIndex \u003d Index.fromOneBased(5);","lastModifiedDate":"2017-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(fifthPersonIndex.equals(Index.fromOneBased(5)));","lastModifiedDate":"2017-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(fifthPersonIndex.equals(Index.fromZeroBased(4)));","lastModifiedDate":"2017-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertTrue(fifthPersonIndex.equals(fifthPersonIndex));","lastModifiedDate":"2017-05-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(fifthPersonIndex.equals(null));","lastModifiedDate":"2017-05-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertFalse(fifthPersonIndex.equals(5.0f));","lastModifiedDate":"2017-05-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertFalse(fifthPersonIndex.equals(Index.fromOneBased(1)));","lastModifiedDate":"2017-05-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        Index index \u003d Index.fromZeroBased(0);","lastModifiedDate":"2019-02-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        String expected \u003d Index.class.getCanonicalName() + \"{zeroBasedIndex\u003d\" + index.getZeroBased() + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertEquals(expected, index.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"evanyan13":2,"-":65}},{"path":"src/test/java/seedu/application/commons/util/AppUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"evanyan13"},"content":"package seedu.application.commons.util;","lastModifiedDate":"2023-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"evanyan13"},"content":"import static seedu.application.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class AppUtilTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public void getImage_exitingImage() {","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        assertNotNull(AppUtil.getImage(\"/images/address_book_32.png\"));","lastModifiedDate":"2016-09-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void getImage_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e AppUtil.getImage(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void checkArgument_true_nothingHappens() {","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true);","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true, \"\");","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithoutErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e AppUtil.checkArgument(false));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        String errorMessage \u003d \"error message\";","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, errorMessage, () -\u003e AppUtil.checkArgument(false, errorMessage));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"evanyan13":2,"-":34}},{"path":"src/test/java/seedu/application/commons/util/CollectionUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"evanyan13"},"content":"package seedu.application.commons.util;","lastModifiedDate":"2023-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"evanyan13"},"content":"import static seedu.application.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-10-10"},{"lineNumber":6,"author":{"gitId":"evanyan13"},"content":"import static seedu.application.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-10"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class CollectionUtilTest {","lastModifiedDate":"2016-12-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void requireAllNonNullVarargs() {","lastModifiedDate":"2017-05-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        // no arguments","lastModifiedDate":"2017-01-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown();","lastModifiedDate":"2017-05-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // any non-empty argument list","lastModifiedDate":"2017-01-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(new Object(), new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(\"test\");","lastModifiedDate":"2017-05-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(\"\");","lastModifiedDate":"2017-05-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // argument lists with just one null at the beginning","lastModifiedDate":"2017-01-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Object) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(null, \"\", new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(null, new Object(), new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // argument lists with nulls in the middle","lastModifiedDate":"2017-01-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(new Object(), null, null, \"test\");","lastModifiedDate":"2017-05-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(\"\", null, new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // argument lists with one null as the last argument","lastModifiedDate":"2017-01-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(\"\", new Object(), null);","lastModifiedDate":"2017-05-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(new Object(), new Object(), null);","lastModifiedDate":"2017-05-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // null reference","lastModifiedDate":"2017-05-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Object[]) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // confirms nulls inside lists in the argument list are not considered","lastModifiedDate":"2017-01-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        List\u003cObject\u003e containingNull \u003d Arrays.asList((Object) null);","lastModifiedDate":"2017-01-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(containingNull, new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void requireAllNonNullCollection() {","lastModifiedDate":"2017-05-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // lists containing nulls in the front","lastModifiedDate":"2017-01-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList((Object) null));","lastModifiedDate":"2017-05-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(null, new Object(), \"\"));","lastModifiedDate":"2017-05-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // lists containing nulls in the middle","lastModifiedDate":"2017-01-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", null, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", null, \"eggs\", null, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // lists containing nulls at the end","lastModifiedDate":"2017-01-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", new Object(), null));","lastModifiedDate":"2017-05-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(new Object(), null));","lastModifiedDate":"2017-05-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // null reference","lastModifiedDate":"2017-05-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Collection\u003cObject\u003e) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // empty list","lastModifiedDate":"2017-01-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Collections.emptyList());","lastModifiedDate":"2017-05-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // list with all non-null elements","lastModifiedDate":"2017-01-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(new Object(), \"ham\", Integer.valueOf(1)));","lastModifiedDate":"2018-04-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // confirms nulls inside nested lists are not considered","lastModifiedDate":"2017-01-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        List\u003cObject\u003e containingNull \u003d Arrays.asList((Object) null);","lastModifiedDate":"2017-01-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(containingNull, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void isAnyNonNull() {","lastModifiedDate":"2017-06-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull());","lastModifiedDate":"2017-06-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull((Object) null));","lastModifiedDate":"2017-06-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull((Object[]) null));","lastModifiedDate":"2017-06-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertTrue(CollectionUtil.isAnyNonNull(new Object()));","lastModifiedDate":"2017-06-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertTrue(CollectionUtil.isAnyNonNull(new Object(), null));","lastModifiedDate":"2017-06-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Asserts that {@code CollectionUtil#requireAllNonNull(Object...)} throw {@code NullPointerException}","lastModifiedDate":"2017-08-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * if {@code objects} or any element of {@code objects} is null.","lastModifiedDate":"2017-08-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionThrown(Object... objects) {","lastModifiedDate":"2017-05-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e requireAllNonNull(objects));","lastModifiedDate":"2019-03-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Asserts that {@code CollectionUtil#requireAllNonNull(Collection\u003c?\u003e)} throw {@code NullPointerException}","lastModifiedDate":"2017-08-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * if {@code collection} or any element of {@code collection} is null.","lastModifiedDate":"2017-08-20"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionThrown(Collection\u003c?\u003e collection) {","lastModifiedDate":"2017-05-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e requireAllNonNull(collection));","lastModifiedDate":"2019-03-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionNotThrown(Object... objects) {","lastModifiedDate":"2017-05-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        requireAllNonNull(objects);","lastModifiedDate":"2017-05-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionNotThrown(Collection\u003c?\u003e collection) {","lastModifiedDate":"2017-05-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        requireAllNonNull(collection);","lastModifiedDate":"2017-05-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-22"}],"authorContributionMap":{"evanyan13":3,"-":105}},{"path":"src/test/java/seedu/application/commons/util/ConfigUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"evanyan13"},"content":"package seedu.application.commons.util;","lastModifiedDate":"2023-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"evanyan13"},"content":"import static seedu.application.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-10"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":16,"author":{"gitId":"evanyan13"},"content":"import seedu.application.commons.core.Config;","lastModifiedDate":"2023-10-10"},{"lineNumber":17,"author":{"gitId":"evanyan13"},"content":"import seedu.application.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-10-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class ConfigUtilTest {","lastModifiedDate":"2016-09-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"ConfigUtilTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path tempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void read_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e read(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void read_missingFile_emptyResult() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(read(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertThrows(DataLoadingException.class, () -\u003e read(\"NotJsonFormatConfig.json\"));","lastModifiedDate":"2023-06-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void read_fileInOrder_successfullyRead() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Config expected \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"TypicalConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void read_valuesMissingFromFile_defaultValuesUsed() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"EmptyConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertEquals(new Config(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void read_extraValuesInFile_extraValuesIgnored() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Config expected \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"ExtraValuesConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    private Config getTypicalConfig() {","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Config config \u003d new Config();","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        config.setLogLevel(Level.INFO);","lastModifiedDate":"2016-09-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        config.setUserPrefsFilePath(Paths.get(\"preferences.json\"));","lastModifiedDate":"2018-04-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return config;","lastModifiedDate":"2016-09-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    private Optional\u003cConfig\u003e read(String configFileInTestDataFolder) throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d addToTestDataPathIfNotNull(configFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return ConfigUtil.readConfig(configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void save_nullConfig_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e save(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void save_nullFile_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e save(new Config(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void saveConfig_allInOrder_success() throws DataLoadingException, IOException {","lastModifiedDate":"2023-06-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Config original \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d tempDir.resolve(\"TempConfig.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(original, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        Config readBack \u003d ConfigUtil.readConfig(configFilePath).get();","lastModifiedDate":"2016-12-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        original.setLogLevel(Level.FINE);","lastModifiedDate":"2016-09-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(original, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        readBack \u003d ConfigUtil.readConfig(configFilePath).get();","lastModifiedDate":"2016-12-20"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    private void save(Config config, String configFileInTestDataFolder) throws IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d addToTestDataPathIfNotNull(configFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(config, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String configFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return configFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                                  ? TEST_DATA_FOLDER.resolve(configFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                                  : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"evanyan13":4,"-":112}},{"path":"src/test/java/seedu/application/commons/util/FileUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"evanyan13"},"content":"package seedu.application.commons.util;","lastModifiedDate":"2023-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"evanyan13"},"content":"import static seedu.application.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-10"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class FileUtilTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void isValidPath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        // valid path","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        assertTrue(FileUtil.isValidPath(\"valid/file/path\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        // invalid path","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertFalse(FileUtil.isValidPath(\"a\\0\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // null path -\u003e throws NullPointerException","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e FileUtil.isValidPath(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"evanyan13":2,"-":21}},{"path":"src/test/java/seedu/application/commons/util/JsonUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"evanyan13"},"content":"package seedu.application.commons.util;","lastModifiedDate":"2023-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-10-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"evanyan13"},"content":"import seedu.application.testutil.SerializableTestClass;","lastModifiedDate":"2023-10-10"},{"lineNumber":11,"author":{"gitId":"evanyan13"},"content":"import seedu.application.testutil.TestUtil;","lastModifiedDate":"2023-10-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Tests JSON Read and Write","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class JsonUtilTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Path SERIALIZATION_FILE \u003d TestUtil.getFilePathInSandboxFolder(\"serialize.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void serializeObjectToJsonFile_noExceptionThrown() throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        SerializableTestClass serializableTestClass \u003d new SerializableTestClass();","lastModifiedDate":"2016-10-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        serializableTestClass.setTestValues();","lastModifiedDate":"2016-10-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        JsonUtil.serializeObjectToJsonFile(SERIALIZATION_FILE, serializableTestClass);","lastModifiedDate":"2016-10-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(FileUtil.readFromFile(SERIALIZATION_FILE), SerializableTestClass.JSON_STRING_REPRESENTATION);","lastModifiedDate":"2016-10-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void deserializeObjectFromJsonFile_noExceptionThrown() throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        FileUtil.writeToFile(SERIALIZATION_FILE, SerializableTestClass.JSON_STRING_REPRESENTATION);","lastModifiedDate":"2016-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        SerializableTestClass serializableTestClass \u003d JsonUtil","lastModifiedDate":"2016-10-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                .deserializeObjectFromJsonFile(SERIALIZATION_FILE, SerializableTestClass.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getName(), SerializableTestClass.getNameTestValue());","lastModifiedDate":"2016-10-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getListOfLocalDateTimes(), SerializableTestClass.getListTestValues());","lastModifiedDate":"2016-10-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getMapOfIntegerToString(), SerializableTestClass.getHashMapTestValues());","lastModifiedDate":"2016-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    //TODO: @Test jsonUtil_readJsonStringToObjectInstance_correctObject()","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    //TODO: @Test jsonUtil_writeThenReadObjectToJson_correctObject()","lastModifiedDate":"2016-09-28"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"evanyan13":3,"-":42}},{"path":"src/test/java/seedu/application/commons/util/StringUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"evanyan13"},"content":"package seedu.application.commons.util;","lastModifiedDate":"2023-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"evanyan13"},"content":"import static seedu.application.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-10"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class StringUtilTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    //---------------- Tests for isNonZeroUnsignedInteger --------------------------------------","lastModifiedDate":"2019-02-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void isNonZeroUnsignedInteger() {","lastModifiedDate":"2019-02-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        // EP: empty strings","lastModifiedDate":"2016-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"  \"));","lastModifiedDate":"2017-06-02"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // EP: not a number","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"a\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"aaa\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // EP: zero","lastModifiedDate":"2016-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"0\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // EP: zero as prefix","lastModifiedDate":"2017-06-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"01\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // EP: signed numbers","lastModifiedDate":"2016-10-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"-1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"+1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // EP: numbers with white space","lastModifiedDate":"2016-10-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\" 10 \")); // Leading/trailing spaces","lastModifiedDate":"2017-06-02"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"1 0\")); // Spaces in the middle","lastModifiedDate":"2017-06-02"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // EP: number larger than Integer.MAX_VALUE","lastModifiedDate":"2017-06-02"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2017-06-02"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // EP: valid numbers, should return true","lastModifiedDate":"2016-10-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"1\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"10\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    //---------------- Tests for containsWordIgnoreCase --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for word: null, empty, multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for sentence: null","lastModifiedDate":"2016-10-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * The four test cases below test one invalid input at a time.","lastModifiedDate":"2016-10-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullWord_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", null));","lastModifiedDate":"2019-03-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_emptyWord_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter cannot be empty\", ()","lastModifiedDate":"2019-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"  \"));","lastModifiedDate":"2019-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_multipleWords_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter should be a single word\", ()","lastModifiedDate":"2019-03-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"aaa BBB\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullSentence_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(null, \"abc\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for word:","lastModifiedDate":"2016-10-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     *   - any word","lastModifiedDate":"2016-10-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *   - word containing symbols/numbers","lastModifiedDate":"2016-10-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     *   - word with leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for sentence:","lastModifiedDate":"2016-10-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     *   - empty string","lastModifiedDate":"2016-10-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     *   - one word","lastModifiedDate":"2016-10-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     *   - multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     *   - sentence with extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Possible scenarios returning true:","lastModifiedDate":"2016-10-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     *   - matches first word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     *   - last word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     *   - middle word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     *   - matches multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Possible scenarios returning false:","lastModifiedDate":"2016-10-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     *   - query word matches part of a sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     *   - sentence word matches part of the query word","lastModifiedDate":"2016-10-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * The test method below tries to verify all above with a reasonably low number of test cases.","lastModifiedDate":"2016-10-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_validInputs_correctResult() {","lastModifiedDate":"2016-10-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // Empty sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"\", \"abc\")); // Boundary case","lastModifiedDate":"2016-10-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"    \", \"123\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // Matches a partial word only","lastModifiedDate":"2016-10-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bb\")); // Sentence word bigger than query word","lastModifiedDate":"2016-10-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bbbb\")); // Query word bigger than sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // Matches word in the sentence, different upper/lower case letters","lastModifiedDate":"2016-10-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc\", \"Bbb\")); // First word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc@1\", \"CCc@1\")); // Last word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"  AAA   bBb   ccc  \", \"aaa\")); // Sentence has extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"Aaa\", \"aaa\")); // Only one word in sentence (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"  ccc  \")); // Leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        // Matches multiple words in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"AAA bBb ccc  bbb\", \"bbB\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    //---------------- Tests for getDetails --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * Equivalence Partitions: null, valid throwable object","lastModifiedDate":"2016-10-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public void getDetails_exceptionGiven() {","lastModifiedDate":"2016-09-30"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.getDetails(new FileNotFoundException(\"file not found\"))","lastModifiedDate":"2019-03-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            .contains(\"java.io.FileNotFoundException: file not found\"));","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public void getDetails_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.getDetails(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"evanyan13":2,"-":141}},{"path":"src/test/java/seedu/application/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"evanyan13"},"content":"package seedu.application.logic;","lastModifiedDate":"2023-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"evanyan13"},"content":"import static seedu.application.logic.Messages.MESSAGE_INVALID_JOB_DISPLAYED_INDEX;","lastModifiedDate":"2023-10-10"},{"lineNumber":5,"author":{"gitId":"evanyan13"},"content":"import static seedu.application.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-10-10"},{"lineNumber":6,"author":{"gitId":"peiran18"},"content":"import static seedu.application.logic.commands.CommandTestUtil.*;","lastModifiedDate":"2023-10-19"},{"lineNumber":7,"author":{"gitId":"evanyan13"},"content":"import static seedu.application.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-10"},{"lineNumber":8,"author":{"gitId":"evanyan13"},"content":"import static seedu.application.testutil.TypicalJobs.CHEF;","lastModifiedDate":"2023-10-10"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.nio.file.AccessDeniedException;","lastModifiedDate":"2023-06-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":18,"author":{"gitId":"evanyan13"},"content":"import seedu.application.logic.commands.AddCommand;","lastModifiedDate":"2023-10-10"},{"lineNumber":19,"author":{"gitId":"evanyan13"},"content":"import seedu.application.logic.commands.CommandResult;","lastModifiedDate":"2023-10-10"},{"lineNumber":20,"author":{"gitId":"evanyan13"},"content":"import seedu.application.logic.commands.ListCommand;","lastModifiedDate":"2023-10-10"},{"lineNumber":21,"author":{"gitId":"evanyan13"},"content":"import seedu.application.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-10"},{"lineNumber":22,"author":{"gitId":"evanyan13"},"content":"import seedu.application.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-10"},{"lineNumber":23,"author":{"gitId":"evanyan13"},"content":"import seedu.application.model.Model;","lastModifiedDate":"2023-10-10"},{"lineNumber":24,"author":{"gitId":"evanyan13"},"content":"import seedu.application.model.ModelManager;","lastModifiedDate":"2023-10-10"},{"lineNumber":25,"author":{"gitId":"evanyan13"},"content":"import seedu.application.model.ReadOnlyApplicationBook;","lastModifiedDate":"2023-10-10"},{"lineNumber":26,"author":{"gitId":"evanyan13"},"content":"import seedu.application.model.UserPrefs;","lastModifiedDate":"2023-10-10"},{"lineNumber":27,"author":{"gitId":"evanyan13"},"content":"import seedu.application.model.job.Job;","lastModifiedDate":"2023-10-10"},{"lineNumber":28,"author":{"gitId":"evanyan13"},"content":"import seedu.application.storage.JsonApplicationBookStorage;","lastModifiedDate":"2023-10-10"},{"lineNumber":29,"author":{"gitId":"evanyan13"},"content":"import seedu.application.storage.JsonUserPrefsStorage;","lastModifiedDate":"2023-10-10"},{"lineNumber":30,"author":{"gitId":"evanyan13"},"content":"import seedu.application.storage.StorageManager;","lastModifiedDate":"2023-10-10"},{"lineNumber":31,"author":{"gitId":"evanyan13"},"content":"import seedu.application.testutil.JobBuilder;","lastModifiedDate":"2023-10-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy IO exception\");","lastModifiedDate":"2023-06-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_AD_EXCEPTION \u003d new AccessDeniedException(\"dummy access denied exception\");","lastModifiedDate":"2023-06-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"migfoo02"},"content":"    private final Model model \u003d new ModelManager();","lastModifiedDate":"2023-10-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":45,"author":{"gitId":"evanyan13"},"content":"        JsonApplicationBookStorage applicationBookStorage \u003d","lastModifiedDate":"2023-10-10"},{"lineNumber":46,"author":{"gitId":"evanyan13"},"content":"            new JsonApplicationBookStorage(temporaryFolder.resolve(\"applicationbook.json\"));","lastModifiedDate":"2023-10-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":48,"author":{"gitId":"evanyan13"},"content":"        StorageManager storage \u003d new StorageManager(applicationBookStorage, userPrefsStorage);","lastModifiedDate":"2023-10-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        String deleteCommand \u003d \"delete 9\";","lastModifiedDate":"2017-06-14"},{"lineNumber":61,"author":{"gitId":"JeremyYong128"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_JOB_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-04"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2017-06-19"},{"lineNumber":67,"author":{"gitId":"JeremyYong128"},"content":"        String expectedMessage \u003d String.format(ListCommand.MESSAGE_SUCCESS, 0);","lastModifiedDate":"2023-10-26"},{"lineNumber":68,"author":{"gitId":"JeremyYong128"},"content":"        assertCommandSuccess(listCommand, expectedMessage, model);","lastModifiedDate":"2023-10-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertCommandFailureForExceptionFromStorage(DUMMY_IO_EXCEPTION, String.format(","lastModifiedDate":"2023-06-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            LogicManager.FILE_OPS_ERROR_FORMAT, DUMMY_IO_EXCEPTION.getMessage()));","lastModifiedDate":"2023-06-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-06-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-06-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsAdException_throwsCommandException() {","lastModifiedDate":"2023-06-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertCommandFailureForExceptionFromStorage(DUMMY_AD_EXCEPTION, String.format(","lastModifiedDate":"2023-06-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            LogicManager.FILE_OPS_PERMISSION_ERROR_FORMAT, DUMMY_AD_EXCEPTION.getMessage()));","lastModifiedDate":"2023-06-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":84,"author":{"gitId":"JeremyYong128"},"content":"    public void getFilteredJobList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-10-04"},{"lineNumber":85,"author":{"gitId":"JeremyYong128"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredJobList().remove(0));","lastModifiedDate":"2023-10-04"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":93,"author":{"gitId":"evanyan13"},"content":"     *","lastModifiedDate":"2023-10-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"                                      Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":105,"author":{"gitId":"evanyan13"},"content":"     *","lastModifiedDate":"2023-10-10"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":114,"author":{"gitId":"evanyan13"},"content":"     *","lastModifiedDate":"2023-10-10"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":123,"author":{"gitId":"evanyan13"},"content":"     *","lastModifiedDate":"2023-10-10"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"                                      String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":128,"author":{"gitId":"evanyan13"},"content":"        Model expectedModel \u003d new ModelManager(model.getApplicationBook(), new UserPrefs());","lastModifiedDate":"2023-10-10"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":137,"author":{"gitId":"evanyan13"},"content":"     *","lastModifiedDate":"2023-10-10"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"                                      String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     * Tests the Logic component\u0027s handling of an {@code IOException} thrown by the Storage component.","lastModifiedDate":"2023-06-13"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-06-13"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     * @param e               the exception to be thrown by the Storage component","lastModifiedDate":"2023-06-13"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     * @param expectedMessage the message expected inside exception thrown by the Logic component","lastModifiedDate":"2023-06-13"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    private void assertCommandFailureForExceptionFromStorage(IOException e, String expectedMessage) {","lastModifiedDate":"2023-06-13"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        Path prefPath \u003d temporaryFolder.resolve(\"ExceptionUserPrefs.json\");","lastModifiedDate":"2023-06-13"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":155,"author":{"gitId":"evanyan13"},"content":"        // Inject LogicManager with an ApplicationBookStorage that throws the IOException e when saving","lastModifiedDate":"2023-10-10"},{"lineNumber":156,"author":{"gitId":"evanyan13"},"content":"        JsonApplicationBookStorage applicationBookStorage \u003d new JsonApplicationBookStorage(prefPath) {","lastModifiedDate":"2023-10-10"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":158,"author":{"gitId":"evanyan13"},"content":"            public void saveApplicationBook(ReadOnlyApplicationBook applicationBook,","lastModifiedDate":"2023-10-18"},{"lineNumber":159,"author":{"gitId":"evanyan13"},"content":"                                            Path filePath) throws IOException {","lastModifiedDate":"2023-10-18"},{"lineNumber":160,"author":{"gitId":"-"},"content":"                throw e;","lastModifiedDate":"2023-06-13"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2023-06-13"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2023-06-13"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            new JsonUserPrefsStorage(temporaryFolder.resolve(\"ExceptionUserPrefs.json\"));","lastModifiedDate":"2023-06-13"},{"lineNumber":166,"author":{"gitId":"evanyan13"},"content":"        StorageManager storage \u003d new StorageManager(applicationBookStorage, userPrefsStorage);","lastModifiedDate":"2023-10-10"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2023-06-13"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":170,"author":{"gitId":"evanyan13"},"content":"        // Triggers the saveApplicationBook method by executing an add command","lastModifiedDate":"2023-10-10"},{"lineNumber":171,"author":{"gitId":"peiran18"},"content":"        String addCommand \u003d AddCommand.COMMAND_WORD + ROLE_DESC_CHEF + COMPANY_DESC_CHEF","lastModifiedDate":"2023-10-19"},{"lineNumber":172,"author":{"gitId":"migfoo02"},"content":"            + DEADLINE_DESC_CHEF + STATUS_DESC_CHEF + JOB_TYPE_DESC_CHEF + INDUSTRY_DESC_CHEF;","lastModifiedDate":"2023-10-23"},{"lineNumber":173,"author":{"gitId":"JeremyYong128"},"content":"        Job expectedJob \u003d new JobBuilder(CHEF).build();","lastModifiedDate":"2023-10-04"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2023-06-13"},{"lineNumber":175,"author":{"gitId":"JeremyYong128"},"content":"        expectedModel.addJob(expectedJob);","lastModifiedDate":"2023-10-04"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2023-06-13"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":178,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"evanyan13":34,"peiran18":2,"-":133,"JeremyYong128":7,"migfoo02":2}},{"path":"src/test/java/seedu/application/logic/commands/AddCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"evanyan13"},"content":"package seedu.application.logic.commands;","lastModifiedDate":"2023-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"evanyan13"},"content":"import static seedu.application.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-10-10"},{"lineNumber":4,"author":{"gitId":"evanyan13"},"content":"import static seedu.application.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-10"},{"lineNumber":5,"author":{"gitId":"evanyan13"},"content":"import static seedu.application.testutil.TypicalJobs.getTypicalApplicationBook;","lastModifiedDate":"2023-10-10"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":10,"author":{"gitId":"evanyan13"},"content":"import seedu.application.logic.Messages;","lastModifiedDate":"2023-10-10"},{"lineNumber":11,"author":{"gitId":"evanyan13"},"content":"import seedu.application.model.Model;","lastModifiedDate":"2023-10-10"},{"lineNumber":12,"author":{"gitId":"evanyan13"},"content":"import seedu.application.model.ModelManager;","lastModifiedDate":"2023-10-10"},{"lineNumber":13,"author":{"gitId":"evanyan13"},"content":"import seedu.application.model.UserPrefs;","lastModifiedDate":"2023-10-10"},{"lineNumber":14,"author":{"gitId":"evanyan13"},"content":"import seedu.application.model.job.Job;","lastModifiedDate":"2023-10-10"},{"lineNumber":15,"author":{"gitId":"evanyan13"},"content":"import seedu.application.testutil.JobBuilder;","lastModifiedDate":"2023-10-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code AddCommand}.","lastModifiedDate":"2017-06-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class AddCommandIntegrationTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-15"},{"lineNumber":26,"author":{"gitId":"evanyan13"},"content":"        model \u003d new ModelManager(getTypicalApplicationBook(), new UserPrefs());","lastModifiedDate":"2023-10-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":30,"author":{"gitId":"JeremyYong128"},"content":"    public void execute_newJob_success() {","lastModifiedDate":"2023-10-04"},{"lineNumber":31,"author":{"gitId":"JeremyYong128"},"content":"        Job validJob \u003d new JobBuilder().build();","lastModifiedDate":"2023-10-04"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":33,"author":{"gitId":"evanyan13"},"content":"        Model expectedModel \u003d new ModelManager(model.getApplicationBook(), new UserPrefs());","lastModifiedDate":"2023-10-10"},{"lineNumber":34,"author":{"gitId":"JeremyYong128"},"content":"        expectedModel.addJob(validJob);","lastModifiedDate":"2023-10-04"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":36,"author":{"gitId":"JeremyYong128"},"content":"        assertCommandSuccess(new AddCommand(validJob), model,","lastModifiedDate":"2023-10-04"},{"lineNumber":37,"author":{"gitId":"JeremyYong128"},"content":"                String.format(AddCommand.MESSAGE_SUCCESS, Messages.format(validJob)),","lastModifiedDate":"2023-10-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                expectedModel);","lastModifiedDate":"2019-02-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":42,"author":{"gitId":"JeremyYong128"},"content":"    public void execute_duplicateJob_throwsCommandException() {","lastModifiedDate":"2023-10-04"},{"lineNumber":43,"author":{"gitId":"evanyan13"},"content":"        Job jobInList \u003d model.getApplicationBook().getJobList().get(0);","lastModifiedDate":"2023-10-10"},{"lineNumber":44,"author":{"gitId":"JeremyYong128"},"content":"        assertCommandFailure(new AddCommand(jobInList), model,","lastModifiedDate":"2023-10-04"},{"lineNumber":45,"author":{"gitId":"JeremyYong128"},"content":"                AddCommand.MESSAGE_DUPLICATE_JOB);","lastModifiedDate":"2023-10-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"evanyan13":13,"-":27,"JeremyYong128":8}},{"path":"src/test/java/seedu/application/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"evanyan13"},"content":"package seedu.application.logic.commands;","lastModifiedDate":"2023-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"migfoo02"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-23"},{"lineNumber":5,"author":{"gitId":"migfoo02"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2023-10-23"},{"lineNumber":6,"author":{"gitId":"evanyan13"},"content":"import static seedu.application.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-10"},{"lineNumber":7,"author":{"gitId":"evanyan13"},"content":"import static seedu.application.testutil.TypicalJobs.CHEF;","lastModifiedDate":"2023-10-10"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":17,"author":{"gitId":"evanyan13"},"content":"import seedu.application.commons.core.GuiSettings;","lastModifiedDate":"2023-10-10"},{"lineNumber":18,"author":{"gitId":"evanyan13"},"content":"import seedu.application.logic.Messages;","lastModifiedDate":"2023-10-10"},{"lineNumber":19,"author":{"gitId":"evanyan13"},"content":"import seedu.application.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-10"},{"lineNumber":20,"author":{"gitId":"evanyan13"},"content":"import seedu.application.model.Model;","lastModifiedDate":"2023-10-10"},{"lineNumber":21,"author":{"gitId":"evanyan13"},"content":"import seedu.application.model.ReadOnlyApplicationBook;","lastModifiedDate":"2023-10-10"},{"lineNumber":22,"author":{"gitId":"evanyan13"},"content":"import seedu.application.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-10-10"},{"lineNumber":23,"author":{"gitId":"peiran18"},"content":"import seedu.application.model.job.FieldComparator;","lastModifiedDate":"2023-10-20"},{"lineNumber":24,"author":{"gitId":"evanyan13"},"content":"import seedu.application.model.job.Job;","lastModifiedDate":"2023-10-10"},{"lineNumber":25,"author":{"gitId":"evanyan13"},"content":"import seedu.application.testutil.JobBuilder;","lastModifiedDate":"2023-10-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":30,"author":{"gitId":"JeremyYong128"},"content":"    public void constructor_nullJob_throwsNullPointerException() {","lastModifiedDate":"2023-10-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":35,"author":{"gitId":"JeremyYong128"},"content":"    public void execute_jobAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2023-10-04"},{"lineNumber":36,"author":{"gitId":"JeremyYong128"},"content":"        ModelStubAcceptingJobAdded modelStub \u003d new ModelStubAcceptingJobAdded();","lastModifiedDate":"2023-10-04"},{"lineNumber":37,"author":{"gitId":"JeremyYong128"},"content":"        Job validJob \u003d new JobBuilder().build();","lastModifiedDate":"2023-10-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":39,"author":{"gitId":"JeremyYong128"},"content":"        CommandResult commandResult \u003d new AddCommand(validJob).execute(modelStub);","lastModifiedDate":"2023-10-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":41,"author":{"gitId":"JeremyYong128"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, Messages.format(validJob)),","lastModifiedDate":"2023-10-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                commandResult.getFeedbackToUser());","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"JeremyYong128"},"content":"        assertEquals(Arrays.asList(validJob), modelStub.jobsAdded);","lastModifiedDate":"2023-10-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":47,"author":{"gitId":"JeremyYong128"},"content":"    public void execute_duplicateJob_throwsCommandException() {","lastModifiedDate":"2023-10-04"},{"lineNumber":48,"author":{"gitId":"JeremyYong128"},"content":"        Job validJob \u003d new JobBuilder().build();","lastModifiedDate":"2023-10-04"},{"lineNumber":49,"author":{"gitId":"JeremyYong128"},"content":"        AddCommand addCommand \u003d new AddCommand(validJob);","lastModifiedDate":"2023-10-04"},{"lineNumber":50,"author":{"gitId":"JeremyYong128"},"content":"        ModelStub modelStub \u003d new ModelStubWithJob(validJob);","lastModifiedDate":"2023-10-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":52,"author":{"gitId":"JeremyYong128"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_JOB, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2023-10-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":57,"author":{"gitId":"JeremyYong128"},"content":"        Job chef \u003d new JobBuilder().withRole(\"Chef\").build();","lastModifiedDate":"2023-10-04"},{"lineNumber":58,"author":{"gitId":"JeremyYong128"},"content":"        Job cleaner \u003d new JobBuilder().withRole(\"Cleaner\").build();","lastModifiedDate":"2023-10-04"},{"lineNumber":59,"author":{"gitId":"JeremyYong128"},"content":"        AddCommand addChefCommand \u003d new AddCommand(chef);","lastModifiedDate":"2023-10-04"},{"lineNumber":60,"author":{"gitId":"JeremyYong128"},"content":"        AddCommand addCleanerCommand \u003d new AddCommand(cleaner);","lastModifiedDate":"2023-10-04"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"migfoo02"},"content":"        assertEquals(addChefCommand, addChefCommand);","lastModifiedDate":"2023-10-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"JeremyYong128"},"content":"        AddCommand addChefCommandCopy \u003d new AddCommand(chef);","lastModifiedDate":"2023-10-04"},{"lineNumber":67,"author":{"gitId":"migfoo02"},"content":"        assertEquals(addChefCommand, addChefCommandCopy);","lastModifiedDate":"2023-10-20"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"migfoo02"},"content":"        assertNotEquals(1, addChefCommand);","lastModifiedDate":"2023-10-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"migfoo02"},"content":"        assertNotEquals(null, addChefCommand);","lastModifiedDate":"2023-10-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"JeremyYong128"},"content":"        // different job -\u003e returns false","lastModifiedDate":"2023-10-04"},{"lineNumber":76,"author":{"gitId":"migfoo02"},"content":"        assertNotEquals(addChefCommand, addCleanerCommand);","lastModifiedDate":"2023-10-20"},{"lineNumber":77,"author":{"gitId":"czhiruo"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":78,"author":{"gitId":"czhiruo"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-28"},{"lineNumber":79,"author":{"gitId":"czhiruo"},"content":"        assertNotEquals(null, addCleanerCommand);","lastModifiedDate":"2023-10-28"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":84,"author":{"gitId":"JeremyYong128"},"content":"        AddCommand addCommand \u003d new AddCommand(CHEF);","lastModifiedDate":"2023-10-04"},{"lineNumber":85,"author":{"gitId":"JeremyYong128"},"content":"        String expected \u003d AddCommand.class.getCanonicalName() + \"{toAdd\u003d\" + CHEF + \"}\";","lastModifiedDate":"2023-10-04"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertEquals(expected, addCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":90,"author":{"gitId":"migfoo02"},"content":"     * A default model stub that have all the methods failing.","lastModifiedDate":"2023-10-20"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":114,"author":{"gitId":"evanyan13"},"content":"        public Path getApplicationBookFilePath() {","lastModifiedDate":"2023-10-10"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":119,"author":{"gitId":"evanyan13"},"content":"        public void setApplicationBookFilePath(Path applicationBookFilePath) {","lastModifiedDate":"2023-10-10"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":124,"author":{"gitId":"JeremyYong128"},"content":"        public void addJob(Job job) {","lastModifiedDate":"2023-10-04"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":129,"author":{"gitId":"evanyan13"},"content":"        public void setApplicationBook(ReadOnlyApplicationBook newData) {","lastModifiedDate":"2023-10-10"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":134,"author":{"gitId":"evanyan13"},"content":"        public ReadOnlyApplicationBook getApplicationBook() {","lastModifiedDate":"2023-10-10"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":139,"author":{"gitId":"JeremyYong128"},"content":"        public boolean hasJob(Job job) {","lastModifiedDate":"2023-10-04"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":144,"author":{"gitId":"JeremyYong128"},"content":"        public void deleteJob(Job target) {","lastModifiedDate":"2023-10-04"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":149,"author":{"gitId":"JeremyYong128"},"content":"        public void setJob(Job target, Job editedJob) {","lastModifiedDate":"2023-10-04"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":154,"author":{"gitId":"JeremyYong128"},"content":"        public ObservableList\u003cJob\u003e getFilteredJobList() {","lastModifiedDate":"2023-10-04"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":159,"author":{"gitId":"JeremyYong128"},"content":"        public void updateFilteredJobList(Predicate\u003cJob\u003e predicate) {","lastModifiedDate":"2023-10-04"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":162,"author":{"gitId":"peiran18"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":163,"author":{"gitId":"peiran18"},"content":"        @Override","lastModifiedDate":"2023-10-20"},{"lineNumber":164,"author":{"gitId":"peiran18"},"content":"        public void sortJobs(FieldComparator comparator) {","lastModifiedDate":"2023-10-20"},{"lineNumber":165,"author":{"gitId":"peiran18"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-20"},{"lineNumber":166,"author":{"gitId":"peiran18"},"content":"        }","lastModifiedDate":"2023-10-20"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":170,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2018-08-07"},{"lineNumber":171,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":172,"author":{"gitId":"JeremyYong128"},"content":"    private class ModelStubWithJob extends ModelStub {","lastModifiedDate":"2023-10-04"},{"lineNumber":173,"author":{"gitId":"JeremyYong128"},"content":"        private final Job job;","lastModifiedDate":"2023-10-04"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":175,"author":{"gitId":"JeremyYong128"},"content":"        ModelStubWithJob(Job job) {","lastModifiedDate":"2023-10-04"},{"lineNumber":176,"author":{"gitId":"JeremyYong128"},"content":"            requireNonNull(job);","lastModifiedDate":"2023-10-04"},{"lineNumber":177,"author":{"gitId":"JeremyYong128"},"content":"            this.job \u003d job;","lastModifiedDate":"2023-10-04"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":181,"author":{"gitId":"JeremyYong128"},"content":"        public boolean hasJob(Job job) {","lastModifiedDate":"2023-10-04"},{"lineNumber":182,"author":{"gitId":"JeremyYong128"},"content":"            requireNonNull(job);","lastModifiedDate":"2023-10-04"},{"lineNumber":183,"author":{"gitId":"JeremyYong128"},"content":"            return this.job.isSameJob(job);","lastModifiedDate":"2023-10-04"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":188,"author":{"gitId":"JeremyYong128"},"content":"     * A Model stub that always accept the job being added.","lastModifiedDate":"2023-10-04"},{"lineNumber":189,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":190,"author":{"gitId":"JeremyYong128"},"content":"    private class ModelStubAcceptingJobAdded extends ModelStub {","lastModifiedDate":"2023-10-04"},{"lineNumber":191,"author":{"gitId":"JeremyYong128"},"content":"        final ArrayList\u003cJob\u003e jobsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-04"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":194,"author":{"gitId":"JeremyYong128"},"content":"        public boolean hasJob(Job job) {","lastModifiedDate":"2023-10-04"},{"lineNumber":195,"author":{"gitId":"JeremyYong128"},"content":"            requireNonNull(job);","lastModifiedDate":"2023-10-04"},{"lineNumber":196,"author":{"gitId":"JeremyYong128"},"content":"            return jobsAdded.stream().anyMatch(job::isSameJob);","lastModifiedDate":"2023-10-04"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":200,"author":{"gitId":"JeremyYong128"},"content":"        public void addJob(Job job) {","lastModifiedDate":"2023-10-04"},{"lineNumber":201,"author":{"gitId":"JeremyYong128"},"content":"            requireNonNull(job);","lastModifiedDate":"2023-10-04"},{"lineNumber":202,"author":{"gitId":"JeremyYong128"},"content":"            jobsAdded.add(job);","lastModifiedDate":"2023-10-04"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":206,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"czhiruo":3,"evanyan13":15,"peiran18":6,"-":131,"JeremyYong128":43,"migfoo02":8}},{"path":"src/test/java/seedu/application/logic/commands/ClearCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"evanyan13"},"content":"package seedu.application.logic.commands;","lastModifiedDate":"2023-10-10"},{"lineNumber":2,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":3,"author":{"gitId":"evanyan13"},"content":"import static seedu.application.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-10"},{"lineNumber":4,"author":{"gitId":"evanyan13"},"content":"import static seedu.application.testutil.TypicalJobs.getTypicalApplicationBook;","lastModifiedDate":"2023-10-10"},{"lineNumber":5,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":6,"author":{"gitId":"evanyan13"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-10"},{"lineNumber":7,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":8,"author":{"gitId":"evanyan13"},"content":"import seedu.application.model.ApplicationBook;","lastModifiedDate":"2023-10-10"},{"lineNumber":9,"author":{"gitId":"evanyan13"},"content":"import seedu.application.model.Model;","lastModifiedDate":"2023-10-10"},{"lineNumber":10,"author":{"gitId":"evanyan13"},"content":"import seedu.application.model.ModelManager;","lastModifiedDate":"2023-10-10"},{"lineNumber":11,"author":{"gitId":"evanyan13"},"content":"import seedu.application.model.UserPrefs;","lastModifiedDate":"2023-10-10"},{"lineNumber":12,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":13,"author":{"gitId":"evanyan13"},"content":"public class ClearCommandTest {","lastModifiedDate":"2023-10-10"},{"lineNumber":14,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":15,"author":{"gitId":"evanyan13"},"content":"    @Test","lastModifiedDate":"2023-10-10"},{"lineNumber":16,"author":{"gitId":"evanyan13"},"content":"    public void execute_emptyApplicationBook_success() {","lastModifiedDate":"2023-10-10"},{"lineNumber":17,"author":{"gitId":"evanyan13"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2023-10-10"},{"lineNumber":18,"author":{"gitId":"evanyan13"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2023-10-10"},{"lineNumber":19,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":20,"author":{"gitId":"evanyan13"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2023-10-10"},{"lineNumber":21,"author":{"gitId":"evanyan13"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":22,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":23,"author":{"gitId":"evanyan13"},"content":"    @Test","lastModifiedDate":"2023-10-10"},{"lineNumber":24,"author":{"gitId":"evanyan13"},"content":"    public void execute_nonEmptyApplicationBook_success() {","lastModifiedDate":"2023-10-10"},{"lineNumber":25,"author":{"gitId":"evanyan13"},"content":"        Model model \u003d new ModelManager(getTypicalApplicationBook(), new UserPrefs());","lastModifiedDate":"2023-10-10"},{"lineNumber":26,"author":{"gitId":"evanyan13"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalApplicationBook(), new UserPrefs());","lastModifiedDate":"2023-10-10"},{"lineNumber":27,"author":{"gitId":"evanyan13"},"content":"        expectedModel.setApplicationBook(new ApplicationBook());","lastModifiedDate":"2023-10-10"},{"lineNumber":28,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":29,"author":{"gitId":"evanyan13"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2023-10-10"},{"lineNumber":30,"author":{"gitId":"evanyan13"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":31,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":32,"author":{"gitId":"evanyan13"},"content":"}","lastModifiedDate":"2023-10-10"}],"authorContributionMap":{"evanyan13":32}},{"path":"src/test/java/seedu/application/logic/commands/CommandResultTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"evanyan13"},"content":"package seedu.application.logic.commands;","lastModifiedDate":"2023-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class CommandResultTest {","lastModifiedDate":"2018-12-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-12-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"migfoo02"},"content":"        assertEquals(commandResult, new CommandResult(\"feedback\"));","lastModifiedDate":"2023-10-23"},{"lineNumber":15,"author":{"gitId":"migfoo02"},"content":"        assertEquals(commandResult, new CommandResult(\"feedback\", false, false));","lastModifiedDate":"2023-10-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"migfoo02"},"content":"        assertEquals(commandResult, commandResult);","lastModifiedDate":"2023-10-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"migfoo02"},"content":"        assertNotEquals(commandResult, null);","lastModifiedDate":"2023-10-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"migfoo02"},"content":"        assertNotEquals(commandResult, 5.0f);","lastModifiedDate":"2023-10-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"migfoo02"},"content":"        assertNotEquals(commandResult, new CommandResult(\"different\"));","lastModifiedDate":"2023-10-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"migfoo02"},"content":"        assertNotEquals(commandResult, new CommandResult(\"feedback\", true, false));","lastModifiedDate":"2023-10-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"migfoo02"},"content":"        assertNotEquals(commandResult, new CommandResult(\"feedback\", false, true));","lastModifiedDate":"2023-10-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void hashcode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // same values -\u003e returns same hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(commandResult.hashCode(), new CommandResult(\"feedback\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"different\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", true, false).hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", false, true).hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2019-02-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        String expected \u003d CommandResult.class.getCanonicalName() + \"{feedbackToUser\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                + commandResult.getFeedbackToUser() + \", showHelp\u003d\" + commandResult.isShowHelp()","lastModifiedDate":"2019-02-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                + \", exit\u003d\" + commandResult.isExit() + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertEquals(expected, commandResult.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-12-09"}],"authorContributionMap":{"evanyan13":1,"-":52,"migfoo02":8}},{"path":"src/test/java/seedu/application/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"evanyan13"},"content":"package seedu.application.logic.commands;","lastModifiedDate":"2023-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"evanyan13"},"content":"import static seedu.application.logic.parser.CliSyntax.PREFIX_COMPANY;","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"evanyan13"},"content":"import static seedu.application.logic.parser.CliSyntax.PREFIX_DEADLINE;","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"czhiruo"},"content":"import static seedu.application.logic.parser.CliSyntax.PREFIX_INDUSTRY;","lastModifiedDate":"2023-10-21"},{"lineNumber":8,"author":{"gitId":"migfoo02"},"content":"import static seedu.application.logic.parser.CliSyntax.PREFIX_JOB_TYPE;","lastModifiedDate":"2023-10-23"},{"lineNumber":9,"author":{"gitId":"evanyan13"},"content":"import static seedu.application.logic.parser.CliSyntax.PREFIX_ROLE;","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"evanyan13"},"content":"import static seedu.application.logic.parser.CliSyntax.PREFIX_STATUS;","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"evanyan13"},"content":"import static seedu.application.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"evanyan13"},"content":"import seedu.application.commons.core.index.Index;","lastModifiedDate":"2023-10-10"},{"lineNumber":18,"author":{"gitId":"evanyan13"},"content":"import seedu.application.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-10"},{"lineNumber":19,"author":{"gitId":"evanyan13"},"content":"import seedu.application.model.ApplicationBook;","lastModifiedDate":"2023-10-10"},{"lineNumber":20,"author":{"gitId":"evanyan13"},"content":"import seedu.application.model.Model;","lastModifiedDate":"2023-10-10"},{"lineNumber":21,"author":{"gitId":"JeremyYong128"},"content":"import seedu.application.model.job.FieldContainsKeywordsPredicate;","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"evanyan13"},"content":"import seedu.application.model.job.Job;","lastModifiedDate":"2023-10-10"},{"lineNumber":23,"author":{"gitId":"evanyan13"},"content":"import seedu.application.testutil.EditJobDescriptorBuilder;","lastModifiedDate":"2023-10-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"JeremyYong128"},"content":"    public static final String VALID_ROLE_CHEF \u003d \"Chef\";","lastModifiedDate":"2023-10-04"},{"lineNumber":31,"author":{"gitId":"JeremyYong128"},"content":"    public static final String VALID_ROLE_CLEANER \u003d \"Cleaner\";","lastModifiedDate":"2023-10-04"},{"lineNumber":32,"author":{"gitId":"JeremyYong128"},"content":"    public static final String VALID_COMPANY_CHEF \u003d \"FineFoods\";","lastModifiedDate":"2023-10-04"},{"lineNumber":33,"author":{"gitId":"JeremyYong128"},"content":"    public static final String VALID_COMPANY_CLEANER \u003d \"Bleach Inc\";","lastModifiedDate":"2023-10-04"},{"lineNumber":34,"author":{"gitId":"peiran18"},"content":"    public static final String VALID_STATUS_CHEF \u003d \"rejected\";","lastModifiedDate":"2023-10-22"},{"lineNumber":35,"author":{"gitId":"peiran18"},"content":"    public static final String VALID_STATUS_CLEANER \u003d \"approved\";","lastModifiedDate":"2023-10-22"},{"lineNumber":36,"author":{"gitId":"evanyan13"},"content":"    public static final String VALID_DEADLINE_CHEF \u003d \"Dec 31 2030 1200\";","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"evanyan13"},"content":"    public static final String VALID_DEADLINE_CLEANER \u003d \"Dec 31 2040 1200\";","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"migfoo02"},"content":"    public static final String VALID_JOB_TYPE_CHEF \u003d \"FULL_TIME\";","lastModifiedDate":"2023-10-23"},{"lineNumber":39,"author":{"gitId":"migfoo02"},"content":"    public static final String VALID_JOB_TYPE_CLEANER \u003d \"PART_TIME\";","lastModifiedDate":"2023-10-23"},{"lineNumber":40,"author":{"gitId":"czhiruo"},"content":"    public static final String VALID_INDUSTRY_CHEF \u003d \"Culinary\";","lastModifiedDate":"2023-10-20"},{"lineNumber":41,"author":{"gitId":"czhiruo"},"content":"    public static final String VALID_INDUSTRY_CLEANER \u003d \"Cleaning\";","lastModifiedDate":"2023-10-20"},{"lineNumber":42,"author":{"gitId":"peiran18"},"content":"    public static final String VALID_INTERVIEW_TYPE_CHEF \u003d \"Onsite\";","lastModifiedDate":"2023-10-31"},{"lineNumber":43,"author":{"gitId":"peiran18"},"content":"    public static final String VALID_INTERVIEW_TYPE_CLEANER \u003d \"Group\";","lastModifiedDate":"2023-10-31"},{"lineNumber":44,"author":{"gitId":"peiran18"},"content":"    public static final String VALID_INTERVIEW_DATETIME_CHEF \u003d \"Dec 31 2050 1200\";","lastModifiedDate":"2023-10-31"},{"lineNumber":45,"author":{"gitId":"peiran18"},"content":"    public static final String VALID_INTERVIEW_DATETIME_CLEANER \u003d \"Dec 31 2060 1200\";","lastModifiedDate":"2023-10-31"},{"lineNumber":46,"author":{"gitId":"peiran18"},"content":"    public static final String VALID_INTERVIEW_ADDRESS_CHEF \u003d \"Hungry Street\";","lastModifiedDate":"2023-10-31"},{"lineNumber":47,"author":{"gitId":"peiran18"},"content":"    public static final String VALID_INTERVIEW_ADDRESS_CLEANER \u003d \"Dirty Street\";","lastModifiedDate":"2023-10-31"},{"lineNumber":48,"author":{"gitId":"JeremyYong128"},"content":"    public static final String ROLE_DESC_CHEF \u003d \" \" + PREFIX_ROLE + VALID_ROLE_CHEF;","lastModifiedDate":"2023-10-04"},{"lineNumber":49,"author":{"gitId":"JeremyYong128"},"content":"    public static final String ROLE_DESC_CLEANER \u003d \" \" + PREFIX_ROLE + VALID_ROLE_CLEANER;","lastModifiedDate":"2023-10-04"},{"lineNumber":50,"author":{"gitId":"JeremyYong128"},"content":"    public static final String COMPANY_DESC_CHEF \u003d \" \" + PREFIX_COMPANY + VALID_COMPANY_CHEF;","lastModifiedDate":"2023-10-04"},{"lineNumber":51,"author":{"gitId":"JeremyYong128"},"content":"    public static final String COMPANY_DESC_CLEANER \u003d \" \" + PREFIX_COMPANY + VALID_COMPANY_CLEANER;","lastModifiedDate":"2023-10-04"},{"lineNumber":52,"author":{"gitId":"peiran18"},"content":"    public static final String STATUS_DESC_CHEF \u003d \" \" + PREFIX_STATUS + VALID_STATUS_CHEF;","lastModifiedDate":"2023-10-16"},{"lineNumber":53,"author":{"gitId":"peiran18"},"content":"    public static final String STATUS_DESC_CLEANER \u003d \" \" + PREFIX_STATUS + VALID_STATUS_CLEANER;","lastModifiedDate":"2023-10-16"},{"lineNumber":54,"author":{"gitId":"evanyan13"},"content":"    public static final String DEADLINE_DESC_CHEF \u003d \" \" + PREFIX_DEADLINE + VALID_DEADLINE_CHEF;","lastModifiedDate":"2023-10-18"},{"lineNumber":55,"author":{"gitId":"evanyan13"},"content":"    public static final String DEADLINE_DESC_CLEANER \u003d \" \" + PREFIX_DEADLINE + VALID_DEADLINE_CLEANER;","lastModifiedDate":"2023-10-18"},{"lineNumber":56,"author":{"gitId":"migfoo02"},"content":"    public static final String JOB_TYPE_DESC_CHEF \u003d \" \" + PREFIX_JOB_TYPE + VALID_JOB_TYPE_CHEF;","lastModifiedDate":"2023-10-23"},{"lineNumber":57,"author":{"gitId":"migfoo02"},"content":"    public static final String JOB_TYPE_DESC_CLEANER \u003d \" \" + PREFIX_JOB_TYPE + VALID_JOB_TYPE_CLEANER;","lastModifiedDate":"2023-10-23"},{"lineNumber":58,"author":{"gitId":"czhiruo"},"content":"    public static final String INDUSTRY_DESC_CHEF \u003d \" \" + PREFIX_INDUSTRY + VALID_INDUSTRY_CHEF;","lastModifiedDate":"2023-10-21"},{"lineNumber":59,"author":{"gitId":"czhiruo"},"content":"    public static final String INDUSTRY_DESC_CLEANER \u003d \" \" + PREFIX_INDUSTRY + VALID_INDUSTRY_CLEANER;","lastModifiedDate":"2023-10-21"},{"lineNumber":60,"author":{"gitId":"JeremyYong128"},"content":"    public static final String INVALID_ROLE_DESC \u003d \" \" + PREFIX_ROLE + \"\u0026\"; // \u0027\u0026\u0027 not allowed in roles","lastModifiedDate":"2023-10-04"},{"lineNumber":61,"author":{"gitId":"JeremyYong128"},"content":"    public static final String INVALID_COMPANY_DESC \u003d \" \" + PREFIX_COMPANY + \"    \"; // company cannot be blank","lastModifiedDate":"2023-10-16"},{"lineNumber":62,"author":{"gitId":"evanyan13"},"content":"    public static final String INVALID_DEADLINE_DESC \u003d","lastModifiedDate":"2023-10-18"},{"lineNumber":63,"author":{"gitId":"evanyan13"},"content":"            \" \" + PREFIX_DEADLINE + \"Nov 12 2023\"; // deadline must be in the future","lastModifiedDate":"2023-10-18"},{"lineNumber":64,"author":{"gitId":"migfoo02"},"content":"    public static final String INVALID_STATUS_DESC \u003d \" \" + PREFIX_STATUS + \"SUBMITTED\";","lastModifiedDate":"2023-10-22"},{"lineNumber":65,"author":{"gitId":"migfoo02"},"content":"    public static final String INVALID_JOB_TYPE_DESC \u003d","lastModifiedDate":"2023-10-23"},{"lineNumber":66,"author":{"gitId":"migfoo02"},"content":"            \" \" + PREFIX_JOB_TYPE + \"OTHER\"; // job type must be selected from the list of options","lastModifiedDate":"2023-10-23"},{"lineNumber":67,"author":{"gitId":"czhiruo"},"content":"    public static final String INVALID_INDUSTRY_DESC \u003d","lastModifiedDate":"2023-10-21"},{"lineNumber":68,"author":{"gitId":"czhiruo"},"content":"            \" \" + PREFIX_INDUSTRY + \"    \"; //industry cannot be blank","lastModifiedDate":"2023-10-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":72,"author":{"gitId":"JeremyYong128"},"content":"    public static final EditCommand.EditJobDescriptor DESC_CHEF;","lastModifiedDate":"2023-10-04"},{"lineNumber":73,"author":{"gitId":"JeremyYong128"},"content":"    public static final EditCommand.EditJobDescriptor DESC_CLEANER;","lastModifiedDate":"2023-10-04"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":76,"author":{"gitId":"JeremyYong128"},"content":"        DESC_CHEF \u003d new EditJobDescriptorBuilder().withRole(VALID_ROLE_CHEF)","lastModifiedDate":"2023-10-04"},{"lineNumber":77,"author":{"gitId":"JeremyYong128"},"content":"            .withCompany(VALID_COMPANY_CHEF).build();","lastModifiedDate":"2023-10-04"},{"lineNumber":78,"author":{"gitId":"JeremyYong128"},"content":"        DESC_CLEANER \u003d new EditJobDescriptorBuilder().withRole(VALID_ROLE_CLEANER)","lastModifiedDate":"2023-10-04"},{"lineNumber":79,"author":{"gitId":"JeremyYong128"},"content":"            .withCompany(VALID_COMPANY_CLEANER).build();","lastModifiedDate":"2023-10-04"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                                            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":103,"author":{"gitId":"-"},"content":"                                            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":112,"author":{"gitId":"evanyan13"},"content":"     * - the application book, filtered job list and selected job in {@code actualModel} remain unchanged","lastModifiedDate":"2023-10-10"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":117,"author":{"gitId":"evanyan13"},"content":"        ApplicationBook expectedApplicationBook \u003d new ApplicationBook(actualModel.getApplicationBook());","lastModifiedDate":"2023-10-10"},{"lineNumber":118,"author":{"gitId":"JeremyYong128"},"content":"        List\u003cJob\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredJobList());","lastModifiedDate":"2023-10-04"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":121,"author":{"gitId":"evanyan13"},"content":"        assertEquals(expectedApplicationBook, actualModel.getApplicationBook());","lastModifiedDate":"2023-10-10"},{"lineNumber":122,"author":{"gitId":"JeremyYong128"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredJobList());","lastModifiedDate":"2023-10-04"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":124,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":126,"author":{"gitId":"JeremyYong128"},"content":"     * Updates {@code model}\u0027s filtered list to show only the job at the given {@code targetIndex} in the","lastModifiedDate":"2023-10-04"},{"lineNumber":127,"author":{"gitId":"evanyan13"},"content":"     * {@code model}\u0027s application book.","lastModifiedDate":"2023-10-10"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":129,"author":{"gitId":"JeremyYong128"},"content":"    public static void showJobAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2023-10-04"},{"lineNumber":130,"author":{"gitId":"JeremyYong128"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredJobList().size());","lastModifiedDate":"2023-10-04"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":132,"author":{"gitId":"JeremyYong128"},"content":"        Job job \u003d model.getFilteredJobList().get(targetIndex.getZeroBased());","lastModifiedDate":"2023-10-04"},{"lineNumber":133,"author":{"gitId":"JeremyYong128"},"content":"        final String[] splitRole \u003d job.getRole().description.split(\"\\\\s+\");","lastModifiedDate":"2023-10-04"},{"lineNumber":134,"author":{"gitId":"JeremyYong128"},"content":"        model.updateFilteredJobList(","lastModifiedDate":"2023-10-12"},{"lineNumber":135,"author":{"gitId":"JeremyYong128"},"content":"            new FieldContainsKeywordsPredicate(PREFIX_ROLE, Arrays.asList(splitRole)));","lastModifiedDate":"2023-10-26"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":137,"author":{"gitId":"JeremyYong128"},"content":"        assertEquals(1, model.getFilteredJobList().size());","lastModifiedDate":"2023-10-04"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":140,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"czhiruo":7,"evanyan13":23,"peiran18":10,"-":65,"JeremyYong128":27,"migfoo02":8}},{"path":"src/test/java/seedu/application/logic/commands/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"evanyan13"},"content":"package seedu.application.logic.commands;","lastModifiedDate":"2023-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"migfoo02"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2023-10-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"evanyan13"},"content":"import static seedu.application.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-10-10"},{"lineNumber":7,"author":{"gitId":"evanyan13"},"content":"import static seedu.application.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-10"},{"lineNumber":8,"author":{"gitId":"evanyan13"},"content":"import static seedu.application.logic.commands.CommandTestUtil.showJobAtIndex;","lastModifiedDate":"2023-10-10"},{"lineNumber":9,"author":{"gitId":"evanyan13"},"content":"import static seedu.application.testutil.TypicalIndexes.INDEX_FIRST_JOB;","lastModifiedDate":"2023-10-10"},{"lineNumber":10,"author":{"gitId":"evanyan13"},"content":"import static seedu.application.testutil.TypicalIndexes.INDEX_SECOND_JOB;","lastModifiedDate":"2023-10-10"},{"lineNumber":11,"author":{"gitId":"evanyan13"},"content":"import static seedu.application.testutil.TypicalJobs.getTypicalApplicationBook;","lastModifiedDate":"2023-10-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"evanyan13"},"content":"import seedu.application.commons.core.index.Index;","lastModifiedDate":"2023-10-10"},{"lineNumber":16,"author":{"gitId":"evanyan13"},"content":"import seedu.application.logic.Messages;","lastModifiedDate":"2023-10-10"},{"lineNumber":17,"author":{"gitId":"evanyan13"},"content":"import seedu.application.model.Model;","lastModifiedDate":"2023-10-10"},{"lineNumber":18,"author":{"gitId":"evanyan13"},"content":"import seedu.application.model.ModelManager;","lastModifiedDate":"2023-10-10"},{"lineNumber":19,"author":{"gitId":"evanyan13"},"content":"import seedu.application.model.UserPrefs;","lastModifiedDate":"2023-10-10"},{"lineNumber":20,"author":{"gitId":"evanyan13"},"content":"import seedu.application.model.job.Job;","lastModifiedDate":"2023-10-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2018-01-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"migfoo02"},"content":"    private final Model model \u003d new ModelManager(getTypicalApplicationBook(), new UserPrefs());","lastModifiedDate":"2023-10-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":32,"author":{"gitId":"JeremyYong128"},"content":"        Job jobToDelete \u003d model.getFilteredJobList().get(INDEX_FIRST_JOB.getZeroBased());","lastModifiedDate":"2023-10-04"},{"lineNumber":33,"author":{"gitId":"JeremyYong128"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_JOB);","lastModifiedDate":"2023-10-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"JeremyYong128"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_JOB_SUCCESS,","lastModifiedDate":"2023-10-04"},{"lineNumber":36,"author":{"gitId":"JeremyYong128"},"content":"                Messages.format(jobToDelete));","lastModifiedDate":"2023-10-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":38,"author":{"gitId":"evanyan13"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getApplicationBook(), new UserPrefs());","lastModifiedDate":"2023-10-10"},{"lineNumber":39,"author":{"gitId":"JeremyYong128"},"content":"        expectedModel.deleteJob(jobToDelete);","lastModifiedDate":"2023-10-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":46,"author":{"gitId":"JeremyYong128"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredJobList().size() + 1);","lastModifiedDate":"2023-10-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":49,"author":{"gitId":"JeremyYong128"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_JOB_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"JeremyYong128"},"content":"        showJobAtIndex(model, INDEX_FIRST_JOB);","lastModifiedDate":"2023-10-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":56,"author":{"gitId":"JeremyYong128"},"content":"        Job jobToDelete \u003d model.getFilteredJobList().get(INDEX_FIRST_JOB.getZeroBased());","lastModifiedDate":"2023-10-04"},{"lineNumber":57,"author":{"gitId":"JeremyYong128"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_JOB);","lastModifiedDate":"2023-10-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":59,"author":{"gitId":"JeremyYong128"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_JOB_SUCCESS,","lastModifiedDate":"2023-10-04"},{"lineNumber":60,"author":{"gitId":"JeremyYong128"},"content":"                Messages.format(jobToDelete));","lastModifiedDate":"2023-10-04"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":62,"author":{"gitId":"evanyan13"},"content":"        Model expectedModel \u003d new ModelManager(model.getApplicationBook(), new UserPrefs());","lastModifiedDate":"2023-10-10"},{"lineNumber":63,"author":{"gitId":"JeremyYong128"},"content":"        expectedModel.deleteJob(jobToDelete);","lastModifiedDate":"2023-10-04"},{"lineNumber":64,"author":{"gitId":"JeremyYong128"},"content":"        showNoJob(expectedModel);","lastModifiedDate":"2023-10-04"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":71,"author":{"gitId":"JeremyYong128"},"content":"        showJobAtIndex(model, INDEX_FIRST_JOB);","lastModifiedDate":"2023-10-04"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":73,"author":{"gitId":"JeremyYong128"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_JOB;","lastModifiedDate":"2023-10-04"},{"lineNumber":74,"author":{"gitId":"evanyan13"},"content":"        // ensures that outOfBoundIndex is still in bounds of application book list","lastModifiedDate":"2023-10-10"},{"lineNumber":75,"author":{"gitId":"evanyan13"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getApplicationBook().getJobList().size());","lastModifiedDate":"2023-10-10"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":79,"author":{"gitId":"JeremyYong128"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_JOB_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-04"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"JeremyYong128"},"content":"        DeleteCommand deleteFirstCommand \u003d new DeleteCommand(INDEX_FIRST_JOB);","lastModifiedDate":"2023-10-04"},{"lineNumber":85,"author":{"gitId":"JeremyYong128"},"content":"        DeleteCommand deleteSecondCommand \u003d new DeleteCommand(INDEX_SECOND_JOB);","lastModifiedDate":"2023-10-04"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"migfoo02"},"content":"        assertEquals(deleteFirstCommand, deleteFirstCommand);","lastModifiedDate":"2023-10-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"JeremyYong128"},"content":"        DeleteCommand deleteFirstCommandCopy \u003d new DeleteCommand(INDEX_FIRST_JOB);","lastModifiedDate":"2023-10-04"},{"lineNumber":92,"author":{"gitId":"migfoo02"},"content":"        assertEquals(deleteFirstCommand, deleteFirstCommandCopy);","lastModifiedDate":"2023-10-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"migfoo02"},"content":"        assertNotEquals(deleteFirstCommand, 5.0f);","lastModifiedDate":"2023-10-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"migfoo02"},"content":"        assertNotEquals(deleteFirstCommand, null);","lastModifiedDate":"2023-10-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"migfoo02"},"content":"        assertNotEquals(deleteFirstCommand, deleteSecondCommand);","lastModifiedDate":"2023-10-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2019-02-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(targetIndex);","lastModifiedDate":"2019-02-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        String expected \u003d DeleteCommand.class.getCanonicalName() + \"{targetIndex\u003d\" + targetIndex + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertEquals(expected, deleteCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":113,"author":{"gitId":"JeremyYong128"},"content":"     * Updates {@code model}\u0027s filtered list to show no job.","lastModifiedDate":"2023-10-04"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":115,"author":{"gitId":"JeremyYong128"},"content":"    private void showNoJob(Model model) {","lastModifiedDate":"2023-10-04"},{"lineNumber":116,"author":{"gitId":"JeremyYong128"},"content":"        model.updateFilteredJobList(p -\u003e false);","lastModifiedDate":"2023-10-04"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":118,"author":{"gitId":"JeremyYong128"},"content":"        assertTrue(model.getFilteredJobList().isEmpty());","lastModifiedDate":"2023-10-04"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":120,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"evanyan13":17,"-":72,"JeremyYong128":24,"migfoo02":7}},{"path":"src/test/java/seedu/application/logic/commands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"evanyan13"},"content":"package seedu.application.logic.commands;","lastModifiedDate":"2023-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"migfoo02"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2023-10-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"evanyan13"},"content":"import static seedu.application.logic.commands.CommandTestUtil.DESC_CHEF;","lastModifiedDate":"2023-10-10"},{"lineNumber":7,"author":{"gitId":"evanyan13"},"content":"import static seedu.application.logic.commands.CommandTestUtil.DESC_CLEANER;","lastModifiedDate":"2023-10-10"},{"lineNumber":8,"author":{"gitId":"evanyan13"},"content":"import static seedu.application.logic.commands.CommandTestUtil.VALID_COMPANY_CLEANER;","lastModifiedDate":"2023-10-10"},{"lineNumber":9,"author":{"gitId":"evanyan13"},"content":"import static seedu.application.logic.commands.CommandTestUtil.VALID_DEADLINE_CLEANER;","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"evanyan13"},"content":"import static seedu.application.logic.commands.CommandTestUtil.VALID_ROLE_CLEANER;","lastModifiedDate":"2023-10-10"},{"lineNumber":11,"author":{"gitId":"evanyan13"},"content":"import static seedu.application.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-10-10"},{"lineNumber":12,"author":{"gitId":"evanyan13"},"content":"import static seedu.application.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-10"},{"lineNumber":13,"author":{"gitId":"evanyan13"},"content":"import static seedu.application.logic.commands.CommandTestUtil.showJobAtIndex;","lastModifiedDate":"2023-10-10"},{"lineNumber":14,"author":{"gitId":"evanyan13"},"content":"import static seedu.application.testutil.TypicalIndexes.INDEX_FIRST_JOB;","lastModifiedDate":"2023-10-10"},{"lineNumber":15,"author":{"gitId":"evanyan13"},"content":"import static seedu.application.testutil.TypicalIndexes.INDEX_SECOND_JOB;","lastModifiedDate":"2023-10-10"},{"lineNumber":16,"author":{"gitId":"evanyan13"},"content":"import static seedu.application.testutil.TypicalJobs.getTypicalApplicationBook;","lastModifiedDate":"2023-10-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":20,"author":{"gitId":"evanyan13"},"content":"import seedu.application.commons.core.index.Index;","lastModifiedDate":"2023-10-10"},{"lineNumber":21,"author":{"gitId":"evanyan13"},"content":"import seedu.application.logic.Messages;","lastModifiedDate":"2023-10-10"},{"lineNumber":22,"author":{"gitId":"evanyan13"},"content":"import seedu.application.logic.commands.EditCommand.EditJobDescriptor;","lastModifiedDate":"2023-10-10"},{"lineNumber":23,"author":{"gitId":"evanyan13"},"content":"import seedu.application.model.ApplicationBook;","lastModifiedDate":"2023-10-10"},{"lineNumber":24,"author":{"gitId":"evanyan13"},"content":"import seedu.application.model.Model;","lastModifiedDate":"2023-10-10"},{"lineNumber":25,"author":{"gitId":"evanyan13"},"content":"import seedu.application.model.ModelManager;","lastModifiedDate":"2023-10-10"},{"lineNumber":26,"author":{"gitId":"evanyan13"},"content":"import seedu.application.model.UserPrefs;","lastModifiedDate":"2023-10-10"},{"lineNumber":27,"author":{"gitId":"evanyan13"},"content":"import seedu.application.model.job.Job;","lastModifiedDate":"2023-10-10"},{"lineNumber":28,"author":{"gitId":"evanyan13"},"content":"import seedu.application.testutil.EditJobDescriptorBuilder;","lastModifiedDate":"2023-10-10"},{"lineNumber":29,"author":{"gitId":"evanyan13"},"content":"import seedu.application.testutil.JobBuilder;","lastModifiedDate":"2023-10-10"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":32,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2020-12-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"public class EditCommandTest {","lastModifiedDate":"2017-05-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":36,"author":{"gitId":"migfoo02"},"content":"    private final Model model \u003d new ModelManager(getTypicalApplicationBook(), new UserPrefs());","lastModifiedDate":"2023-10-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":40,"author":{"gitId":"JeremyYong128"},"content":"        Job editedJob \u003d new JobBuilder().build();","lastModifiedDate":"2023-10-04"},{"lineNumber":41,"author":{"gitId":"JeremyYong128"},"content":"        EditJobDescriptor descriptor \u003d new EditJobDescriptorBuilder(editedJob).build();","lastModifiedDate":"2023-10-04"},{"lineNumber":42,"author":{"gitId":"JeremyYong128"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_JOB, descriptor);","lastModifiedDate":"2023-10-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"JeremyYong128"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_JOB_SUCCESS, Messages.format(editedJob));","lastModifiedDate":"2023-10-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":46,"author":{"gitId":"evanyan13"},"content":"        Model expectedModel \u003d new ModelManager(new ApplicationBook(model.getApplicationBook()), new UserPrefs());","lastModifiedDate":"2023-10-10"},{"lineNumber":47,"author":{"gitId":"JeremyYong128"},"content":"        expectedModel.setJob(model.getFilteredJobList().get(0), editedJob);","lastModifiedDate":"2023-10-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"JeremyYong128"},"content":"        Index indexLastJob \u003d Index.fromOneBased(model.getFilteredJobList().size());","lastModifiedDate":"2023-10-04"},{"lineNumber":55,"author":{"gitId":"JeremyYong128"},"content":"        Job lastJob \u003d model.getFilteredJobList().get(indexLastJob.getZeroBased());","lastModifiedDate":"2023-10-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":57,"author":{"gitId":"JeremyYong128"},"content":"        JobBuilder jobInList \u003d new JobBuilder(lastJob);","lastModifiedDate":"2023-10-04"},{"lineNumber":58,"author":{"gitId":"evanyan13"},"content":"        Job editedJob \u003d jobInList.withRole(VALID_ROLE_CLEANER)","lastModifiedDate":"2023-10-18"},{"lineNumber":59,"author":{"gitId":"evanyan13"},"content":"            .withCompany(VALID_COMPANY_CLEANER).withDeadline(VALID_DEADLINE_CLEANER).build();","lastModifiedDate":"2023-10-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":61,"author":{"gitId":"JeremyYong128"},"content":"        EditJobDescriptor descriptor \u003d new EditJobDescriptorBuilder().withRole(VALID_ROLE_CLEANER)","lastModifiedDate":"2023-10-04"},{"lineNumber":62,"author":{"gitId":"evanyan13"},"content":"            .withCompany(VALID_COMPANY_CLEANER).withDeadline(VALID_DEADLINE_CLEANER).build();","lastModifiedDate":"2023-10-18"},{"lineNumber":63,"author":{"gitId":"JeremyYong128"},"content":"        EditCommand editCommand \u003d new EditCommand(indexLastJob, descriptor);","lastModifiedDate":"2023-10-04"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":65,"author":{"gitId":"JeremyYong128"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_JOB_SUCCESS, Messages.format(editedJob));","lastModifiedDate":"2023-10-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":67,"author":{"gitId":"evanyan13"},"content":"        Model expectedModel \u003d new ModelManager(new ApplicationBook(model.getApplicationBook()), new UserPrefs());","lastModifiedDate":"2023-10-10"},{"lineNumber":68,"author":{"gitId":"JeremyYong128"},"content":"        expectedModel.setJob(lastJob, editedJob);","lastModifiedDate":"2023-10-04"},{"lineNumber":69,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":70,"author":{"gitId":"evanyan13"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-18"},{"lineNumber":71,"author":{"gitId":"evanyan13"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":72,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":73,"author":{"gitId":"evanyan13"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":74,"author":{"gitId":"evanyan13"},"content":"    public void execute_onlyNonCompulsoryFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2023-10-18"},{"lineNumber":75,"author":{"gitId":"evanyan13"},"content":"        Index indexLastJob \u003d Index.fromOneBased(model.getFilteredJobList().size());","lastModifiedDate":"2023-10-18"},{"lineNumber":76,"author":{"gitId":"evanyan13"},"content":"        Job lastJob \u003d model.getFilteredJobList().get(indexLastJob.getZeroBased());","lastModifiedDate":"2023-10-18"},{"lineNumber":77,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":78,"author":{"gitId":"evanyan13"},"content":"        JobBuilder jobInList \u003d new JobBuilder(lastJob);","lastModifiedDate":"2023-10-18"},{"lineNumber":79,"author":{"gitId":"evanyan13"},"content":"        Job editedJob \u003d jobInList.withDeadline(VALID_DEADLINE_CLEANER).build();","lastModifiedDate":"2023-10-18"},{"lineNumber":80,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":81,"author":{"gitId":"evanyan13"},"content":"        EditJobDescriptor descriptor \u003d new EditJobDescriptorBuilder().withDeadline(VALID_DEADLINE_CLEANER).build();","lastModifiedDate":"2023-10-18"},{"lineNumber":82,"author":{"gitId":"evanyan13"},"content":"        EditCommand editCommand \u003d new EditCommand(indexLastJob, descriptor);","lastModifiedDate":"2023-10-18"},{"lineNumber":83,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":84,"author":{"gitId":"evanyan13"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_JOB_SUCCESS, Messages.format(editedJob));","lastModifiedDate":"2023-10-18"},{"lineNumber":85,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":86,"author":{"gitId":"evanyan13"},"content":"        Model expectedModel \u003d new ModelManager(new ApplicationBook(model.getApplicationBook()), new UserPrefs());","lastModifiedDate":"2023-10-18"},{"lineNumber":87,"author":{"gitId":"evanyan13"},"content":"        expectedModel.setJob(lastJob, editedJob);","lastModifiedDate":"2023-10-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":94,"author":{"gitId":"JeremyYong128"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_JOB, new EditJobDescriptor());","lastModifiedDate":"2023-10-04"},{"lineNumber":95,"author":{"gitId":"JeremyYong128"},"content":"        Job editedJob \u003d model.getFilteredJobList().get(INDEX_FIRST_JOB.getZeroBased());","lastModifiedDate":"2023-10-04"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":97,"author":{"gitId":"JeremyYong128"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_JOB_SUCCESS, Messages.format(editedJob));","lastModifiedDate":"2023-10-04"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":99,"author":{"gitId":"evanyan13"},"content":"        Model expectedModel \u003d new ModelManager(new ApplicationBook(model.getApplicationBook()), new UserPrefs());","lastModifiedDate":"2023-10-10"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":106,"author":{"gitId":"JeremyYong128"},"content":"        showJobAtIndex(model, INDEX_FIRST_JOB);","lastModifiedDate":"2023-10-04"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":108,"author":{"gitId":"JeremyYong128"},"content":"        Job jobInFilteredList \u003d model.getFilteredJobList().get(INDEX_FIRST_JOB.getZeroBased());","lastModifiedDate":"2023-10-04"},{"lineNumber":109,"author":{"gitId":"JeremyYong128"},"content":"        Job editedJob \u003d new JobBuilder(jobInFilteredList).withRole(VALID_ROLE_CLEANER).build();","lastModifiedDate":"2023-10-04"},{"lineNumber":110,"author":{"gitId":"JeremyYong128"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_JOB,","lastModifiedDate":"2023-10-04"},{"lineNumber":111,"author":{"gitId":"JeremyYong128"},"content":"            new EditJobDescriptorBuilder().withRole(VALID_ROLE_CLEANER).build());","lastModifiedDate":"2023-10-04"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":113,"author":{"gitId":"JeremyYong128"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_JOB_SUCCESS, Messages.format(editedJob));","lastModifiedDate":"2023-10-04"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":115,"author":{"gitId":"evanyan13"},"content":"        Model expectedModel \u003d new ModelManager(new ApplicationBook(model.getApplicationBook()), new UserPrefs());","lastModifiedDate":"2023-10-10"},{"lineNumber":116,"author":{"gitId":"JeremyYong128"},"content":"        expectedModel.setJob(model.getFilteredJobList().get(0), editedJob);","lastModifiedDate":"2023-10-04"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":122,"author":{"gitId":"JeremyYong128"},"content":"    public void execute_duplicateJobUnfilteredList_failure() {","lastModifiedDate":"2023-10-04"},{"lineNumber":123,"author":{"gitId":"JeremyYong128"},"content":"        Job firstJob \u003d model.getFilteredJobList().get(INDEX_FIRST_JOB.getZeroBased());","lastModifiedDate":"2023-10-04"},{"lineNumber":124,"author":{"gitId":"JeremyYong128"},"content":"        EditJobDescriptor descriptor \u003d new EditJobDescriptorBuilder(firstJob).build();","lastModifiedDate":"2023-10-04"},{"lineNumber":125,"author":{"gitId":"JeremyYong128"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_SECOND_JOB, descriptor);","lastModifiedDate":"2023-10-04"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":127,"author":{"gitId":"JeremyYong128"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_JOB);","lastModifiedDate":"2023-10-04"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":131,"author":{"gitId":"JeremyYong128"},"content":"    public void execute_duplicateJobFilteredList_failure() {","lastModifiedDate":"2023-10-04"},{"lineNumber":132,"author":{"gitId":"JeremyYong128"},"content":"        showJobAtIndex(model, INDEX_FIRST_JOB);","lastModifiedDate":"2023-10-04"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":134,"author":{"gitId":"evanyan13"},"content":"        // edit job in filtered list into a duplicate in application book","lastModifiedDate":"2023-10-10"},{"lineNumber":135,"author":{"gitId":"evanyan13"},"content":"        Job jobInList \u003d model.getApplicationBook().getJobList().get(INDEX_SECOND_JOB.getZeroBased());","lastModifiedDate":"2023-10-10"},{"lineNumber":136,"author":{"gitId":"JeremyYong128"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_JOB,","lastModifiedDate":"2023-10-04"},{"lineNumber":137,"author":{"gitId":"JeremyYong128"},"content":"            new EditJobDescriptorBuilder(jobInList).build());","lastModifiedDate":"2023-10-04"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":139,"author":{"gitId":"JeremyYong128"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_JOB);","lastModifiedDate":"2023-10-04"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":143,"author":{"gitId":"JeremyYong128"},"content":"    public void execute_invalidJobIndexUnfilteredList_failure() {","lastModifiedDate":"2023-10-04"},{"lineNumber":144,"author":{"gitId":"JeremyYong128"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredJobList().size() + 1);","lastModifiedDate":"2023-10-04"},{"lineNumber":145,"author":{"gitId":"JeremyYong128"},"content":"        EditJobDescriptor descriptor \u003d new EditJobDescriptorBuilder().withRole(VALID_ROLE_CLEANER).build();","lastModifiedDate":"2023-10-04"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":148,"author":{"gitId":"JeremyYong128"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_JOB_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-04"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2017-05-18"},{"lineNumber":153,"author":{"gitId":"evanyan13"},"content":"     * but smaller than size of application book","lastModifiedDate":"2023-10-10"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":156,"author":{"gitId":"JeremyYong128"},"content":"    public void execute_invalidJobIndexFilteredList_failure() {","lastModifiedDate":"2023-10-04"},{"lineNumber":157,"author":{"gitId":"JeremyYong128"},"content":"        showJobAtIndex(model, INDEX_FIRST_JOB);","lastModifiedDate":"2023-10-04"},{"lineNumber":158,"author":{"gitId":"JeremyYong128"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_JOB;","lastModifiedDate":"2023-10-04"},{"lineNumber":159,"author":{"gitId":"evanyan13"},"content":"        // ensures that outOfBoundIndex is still in bounds of application book list","lastModifiedDate":"2023-10-10"},{"lineNumber":160,"author":{"gitId":"evanyan13"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getApplicationBook().getJobList().size());","lastModifiedDate":"2023-10-10"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex,","lastModifiedDate":"2018-08-08"},{"lineNumber":163,"author":{"gitId":"JeremyYong128"},"content":"            new EditJobDescriptorBuilder().withRole(VALID_ROLE_CLEANER).build());","lastModifiedDate":"2023-10-04"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":165,"author":{"gitId":"JeremyYong128"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_JOB_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-04"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":170,"author":{"gitId":"JeremyYong128"},"content":"        final EditCommand standardCommand \u003d new EditCommand(INDEX_FIRST_JOB, DESC_CHEF);","lastModifiedDate":"2023-10-04"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":173,"author":{"gitId":"JeremyYong128"},"content":"        EditJobDescriptor copyDescriptor \u003d new EditJobDescriptor(DESC_CHEF);","lastModifiedDate":"2023-10-04"},{"lineNumber":174,"author":{"gitId":"JeremyYong128"},"content":"        EditCommand commandWithSameValues \u003d new EditCommand(INDEX_FIRST_JOB, copyDescriptor);","lastModifiedDate":"2023-10-04"},{"lineNumber":175,"author":{"gitId":"migfoo02"},"content":"        assertEquals(standardCommand, commandWithSameValues);","lastModifiedDate":"2023-10-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":178,"author":{"gitId":"migfoo02"},"content":"        assertEquals(standardCommand, standardCommand);","lastModifiedDate":"2023-10-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":181,"author":{"gitId":"migfoo02"},"content":"        assertNotEquals(standardCommand, null);","lastModifiedDate":"2023-10-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":184,"author":{"gitId":"migfoo02"},"content":"        assertNotEquals(standardCommand, new ClearCommand());","lastModifiedDate":"2023-10-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":187,"author":{"gitId":"migfoo02"},"content":"        assertNotEquals(standardCommand, new EditCommand(INDEX_SECOND_JOB, DESC_CHEF));","lastModifiedDate":"2023-10-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":190,"author":{"gitId":"migfoo02"},"content":"        assertNotEquals(standardCommand, new EditCommand(INDEX_FIRST_JOB, DESC_CLEANER));","lastModifiedDate":"2023-10-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        Index index \u003d Index.fromOneBased(1);","lastModifiedDate":"2019-02-23"},{"lineNumber":196,"author":{"gitId":"JeremyYong128"},"content":"        EditJobDescriptor editJobDescriptor \u003d new EditJobDescriptor();","lastModifiedDate":"2023-10-04"},{"lineNumber":197,"author":{"gitId":"JeremyYong128"},"content":"        EditCommand editCommand \u003d new EditCommand(index, editJobDescriptor);","lastModifiedDate":"2023-10-04"},{"lineNumber":198,"author":{"gitId":"JeremyYong128"},"content":"        String expected \u003d EditCommand.class.getCanonicalName() + \"{index\u003d\" + index + \", editJobDescriptor\u003d\"","lastModifiedDate":"2023-10-04"},{"lineNumber":199,"author":{"gitId":"JeremyYong128"},"content":"            + editJobDescriptor + \"}\";","lastModifiedDate":"2023-10-04"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        assertEquals(expected, editCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"evanyan13":53,"-":94,"JeremyYong128":48,"migfoo02":8}},{"path":"src/test/java/seedu/application/logic/commands/EditJobDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"evanyan13"},"content":"package seedu.application.logic.commands;","lastModifiedDate":"2023-10-10"},{"lineNumber":2,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":3,"author":{"gitId":"JeremyYong128"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-04"},{"lineNumber":4,"author":{"gitId":"migfoo02"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2023-10-23"},{"lineNumber":5,"author":{"gitId":"evanyan13"},"content":"import static seedu.application.logic.commands.CommandTestUtil.DESC_CHEF;","lastModifiedDate":"2023-10-10"},{"lineNumber":6,"author":{"gitId":"evanyan13"},"content":"import static seedu.application.logic.commands.CommandTestUtil.DESC_CLEANER;","lastModifiedDate":"2023-10-10"},{"lineNumber":7,"author":{"gitId":"evanyan13"},"content":"import static seedu.application.logic.commands.CommandTestUtil.VALID_COMPANY_CLEANER;","lastModifiedDate":"2023-10-10"},{"lineNumber":8,"author":{"gitId":"evanyan13"},"content":"import static seedu.application.logic.commands.CommandTestUtil.VALID_DEADLINE_CLEANER;","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"evanyan13"},"content":"import static seedu.application.logic.commands.CommandTestUtil.VALID_ROLE_CLEANER;","lastModifiedDate":"2023-10-10"},{"lineNumber":10,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":11,"author":{"gitId":"JeremyYong128"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-04"},{"lineNumber":12,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":13,"author":{"gitId":"evanyan13"},"content":"import seedu.application.logic.commands.EditCommand.EditJobDescriptor;","lastModifiedDate":"2023-10-10"},{"lineNumber":14,"author":{"gitId":"evanyan13"},"content":"import seedu.application.testutil.EditJobDescriptorBuilder;","lastModifiedDate":"2023-10-10"},{"lineNumber":15,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":16,"author":{"gitId":"JeremyYong128"},"content":"public class EditJobDescriptorTest {","lastModifiedDate":"2023-10-04"},{"lineNumber":17,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":18,"author":{"gitId":"JeremyYong128"},"content":"    @Test","lastModifiedDate":"2023-10-04"},{"lineNumber":19,"author":{"gitId":"JeremyYong128"},"content":"    public void equals() {","lastModifiedDate":"2023-10-04"},{"lineNumber":20,"author":{"gitId":"JeremyYong128"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-04"},{"lineNumber":21,"author":{"gitId":"JeremyYong128"},"content":"        EditJobDescriptor descriptorWithSameValues \u003d new EditJobDescriptor(DESC_CHEF);","lastModifiedDate":"2023-10-04"},{"lineNumber":22,"author":{"gitId":"migfoo02"},"content":"        assertEquals(DESC_CHEF, descriptorWithSameValues);","lastModifiedDate":"2023-10-23"},{"lineNumber":23,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":24,"author":{"gitId":"JeremyYong128"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-04"},{"lineNumber":25,"author":{"gitId":"migfoo02"},"content":"        assertEquals(DESC_CHEF, DESC_CHEF);","lastModifiedDate":"2023-10-23"},{"lineNumber":26,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":27,"author":{"gitId":"JeremyYong128"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-04"},{"lineNumber":28,"author":{"gitId":"migfoo02"},"content":"        assertNotEquals(DESC_CHEF, null);","lastModifiedDate":"2023-10-23"},{"lineNumber":29,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":30,"author":{"gitId":"JeremyYong128"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-04"},{"lineNumber":31,"author":{"gitId":"migfoo02"},"content":"        assertNotEquals(DESC_CHEF, 5.0f);","lastModifiedDate":"2023-10-23"},{"lineNumber":32,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":33,"author":{"gitId":"JeremyYong128"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2023-10-04"},{"lineNumber":34,"author":{"gitId":"migfoo02"},"content":"        assertNotEquals(DESC_CHEF, DESC_CLEANER);","lastModifiedDate":"2023-10-23"},{"lineNumber":35,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":36,"author":{"gitId":"JeremyYong128"},"content":"        // different role -\u003e returns false","lastModifiedDate":"2023-10-04"},{"lineNumber":37,"author":{"gitId":"JeremyYong128"},"content":"        EditJobDescriptor editedChef \u003d new EditJobDescriptorBuilder(DESC_CHEF).withRole(VALID_ROLE_CLEANER).build();","lastModifiedDate":"2023-10-04"},{"lineNumber":38,"author":{"gitId":"migfoo02"},"content":"        assertNotEquals(DESC_CHEF, editedChef);","lastModifiedDate":"2023-10-23"},{"lineNumber":39,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":40,"author":{"gitId":"JeremyYong128"},"content":"        // different company -\u003e returns false","lastModifiedDate":"2023-10-04"},{"lineNumber":41,"author":{"gitId":"JeremyYong128"},"content":"        editedChef \u003d new EditJobDescriptorBuilder(DESC_CHEF).withCompany(VALID_COMPANY_CLEANER).build();","lastModifiedDate":"2023-10-04"},{"lineNumber":42,"author":{"gitId":"migfoo02"},"content":"        assertNotEquals(DESC_CHEF, editedChef);","lastModifiedDate":"2023-10-23"},{"lineNumber":43,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":44,"author":{"gitId":"evanyan13"},"content":"        // different deadline -\u003e returns false","lastModifiedDate":"2023-10-18"},{"lineNumber":45,"author":{"gitId":"evanyan13"},"content":"        editedChef \u003d new EditJobDescriptorBuilder(DESC_CHEF).withDeadline(VALID_DEADLINE_CLEANER).build();","lastModifiedDate":"2023-10-18"},{"lineNumber":46,"author":{"gitId":"migfoo02"},"content":"        assertNotEquals(DESC_CHEF, editedChef);","lastModifiedDate":"2023-10-23"},{"lineNumber":47,"author":{"gitId":"czhiruo"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":48,"author":{"gitId":"czhiruo"},"content":"        // different status -\u003e returns false","lastModifiedDate":"2023-10-20"},{"lineNumber":49,"author":{"gitId":"czhiruo"},"content":"        editedChef \u003d new EditJobDescriptorBuilder(DESC_CHEF).withStatus(\"APPROVED\").build();","lastModifiedDate":"2023-10-21"},{"lineNumber":50,"author":{"gitId":"migfoo02"},"content":"        assertNotEquals(DESC_CHEF, editedChef);","lastModifiedDate":"2023-10-23"},{"lineNumber":51,"author":{"gitId":"czhiruo"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":52,"author":{"gitId":"migfoo02"},"content":"        // different jobType -\u003e returns false","lastModifiedDate":"2023-10-22"},{"lineNumber":53,"author":{"gitId":"migfoo02"},"content":"        editedChef \u003d new EditJobDescriptorBuilder(DESC_CHEF).withJobType(\"PART_TIME\").build();","lastModifiedDate":"2023-10-22"},{"lineNumber":54,"author":{"gitId":"migfoo02"},"content":"        assertNotEquals(DESC_CHEF, editedChef);","lastModifiedDate":"2023-10-23"},{"lineNumber":55,"author":{"gitId":"migfoo02"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":56,"author":{"gitId":"czhiruo"},"content":"        // different industry -\u003e returns false","lastModifiedDate":"2023-10-20"},{"lineNumber":57,"author":{"gitId":"czhiruo"},"content":"        editedChef \u003d new EditJobDescriptorBuilder(DESC_CHEF).withIndustry(\"Baking\").build();","lastModifiedDate":"2023-10-21"},{"lineNumber":58,"author":{"gitId":"migfoo02"},"content":"        assertNotEquals(DESC_CHEF, editedChef);","lastModifiedDate":"2023-10-23"},{"lineNumber":59,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":60,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":61,"author":{"gitId":"JeremyYong128"},"content":"    @Test","lastModifiedDate":"2023-10-04"},{"lineNumber":62,"author":{"gitId":"JeremyYong128"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-04"},{"lineNumber":63,"author":{"gitId":"JeremyYong128"},"content":"        EditJobDescriptor editJobDescriptor \u003d new EditJobDescriptor();","lastModifiedDate":"2023-10-04"},{"lineNumber":64,"author":{"gitId":"JeremyYong128"},"content":"        String expected \u003d EditJobDescriptor.class.getCanonicalName() + \"{company\u003d\"","lastModifiedDate":"2023-10-14"},{"lineNumber":65,"author":{"gitId":"JeremyYong128"},"content":"            + editJobDescriptor.getCompany().orElse(null) + \", role\u003d\"","lastModifiedDate":"2023-10-14"},{"lineNumber":66,"author":{"gitId":"evanyan13"},"content":"            + editJobDescriptor.getRole().orElse(null) + \", deadline\u003d\"","lastModifiedDate":"2023-10-18"},{"lineNumber":67,"author":{"gitId":"peiran18"},"content":"            + editJobDescriptor.getDeadline().orElse(null) + \", status\u003d\"","lastModifiedDate":"2023-10-19"},{"lineNumber":68,"author":{"gitId":"migfoo02"},"content":"            + editJobDescriptor.getStatus().orElse(null) + \", jobType\u003d\"","lastModifiedDate":"2023-10-20"},{"lineNumber":69,"author":{"gitId":"migfoo02"},"content":"            + editJobDescriptor.getJobType().orElse(null) + \", industry\u003d\"","lastModifiedDate":"2023-10-22"},{"lineNumber":70,"author":{"gitId":"czhiruo"},"content":"            + editJobDescriptor.getIndustry().orElse(null) + \"}\";","lastModifiedDate":"2023-10-20"},{"lineNumber":71,"author":{"gitId":"JeremyYong128"},"content":"        assertEquals(expected, editJobDescriptor.toString());","lastModifiedDate":"2023-10-04"},{"lineNumber":72,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":73,"author":{"gitId":"JeremyYong128"},"content":"}","lastModifiedDate":"2023-10-04"}],"authorContributionMap":{"czhiruo":7,"evanyan13":12,"peiran18":1,"JeremyYong128":36,"migfoo02":17}},{"path":"src/test/java/seedu/application/logic/commands/ExitCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"evanyan13"},"content":"package seedu.application.logic.commands;","lastModifiedDate":"2023-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"evanyan13"},"content":"import static seedu.application.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-10"},{"lineNumber":4,"author":{"gitId":"evanyan13"},"content":"import static seedu.application.logic.commands.ExitCommand.MESSAGE_EXIT_ACKNOWLEDGEMENT;","lastModifiedDate":"2023-10-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"evanyan13"},"content":"import seedu.application.model.Model;","lastModifiedDate":"2023-10-10"},{"lineNumber":9,"author":{"gitId":"evanyan13"},"content":"import seedu.application.model.ModelManager;","lastModifiedDate":"2023-10-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ExitCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"migfoo02"},"content":"    private final Model model \u003d new ModelManager();","lastModifiedDate":"2023-10-23"},{"lineNumber":13,"author":{"gitId":"migfoo02"},"content":"    private final Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2023-10-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_exit_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ExitCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"evanyan13":5,"-":13,"migfoo02":2}},{"path":"src/test/java/seedu/application/logic/commands/FindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"evanyan13"},"content":"package seedu.application.logic.commands;","lastModifiedDate":"2023-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"migfoo02"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2023-10-23"},{"lineNumber":5,"author":{"gitId":"evanyan13"},"content":"import static seedu.application.logic.Messages.MESSAGE_JOBS_LISTED_OVERVIEW;","lastModifiedDate":"2023-10-10"},{"lineNumber":6,"author":{"gitId":"evanyan13"},"content":"import static seedu.application.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-10"},{"lineNumber":7,"author":{"gitId":"JeremyYong128"},"content":"import static seedu.application.logic.parser.CliSyntax.PREFIX_ROLE;","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"evanyan13"},"content":"import static seedu.application.testutil.TypicalJobs.getTypicalApplicationBook;","lastModifiedDate":"2023-10-10"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"JeremyYong128"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"evanyan13"},"content":"import seedu.application.model.Model;","lastModifiedDate":"2023-10-10"},{"lineNumber":17,"author":{"gitId":"evanyan13"},"content":"import seedu.application.model.ModelManager;","lastModifiedDate":"2023-10-10"},{"lineNumber":18,"author":{"gitId":"evanyan13"},"content":"import seedu.application.model.UserPrefs;","lastModifiedDate":"2023-10-10"},{"lineNumber":19,"author":{"gitId":"JeremyYong128"},"content":"import seedu.application.model.job.CombinedPredicate;","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"JeremyYong128"},"content":"import seedu.application.model.job.FieldContainsKeywordsPredicate;","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class FindCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"migfoo02"},"content":"    private final Model model \u003d new ModelManager(getTypicalApplicationBook(), new UserPrefs());","lastModifiedDate":"2023-10-23"},{"lineNumber":27,"author":{"gitId":"migfoo02"},"content":"    private final Model expectedModel \u003d new ModelManager(getTypicalApplicationBook(), new UserPrefs());","lastModifiedDate":"2023-10-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"JeremyYong128"},"content":"        CombinedPredicate firstPredicate \u003d","lastModifiedDate":"2023-10-26"},{"lineNumber":32,"author":{"gitId":"JeremyYong128"},"content":"                new CombinedPredicate(Arrays.asList(","lastModifiedDate":"2023-10-26"},{"lineNumber":33,"author":{"gitId":"JeremyYong128"},"content":"                        new FieldContainsKeywordsPredicate(PREFIX_ROLE, Collections.singletonList(\"first\"))));","lastModifiedDate":"2023-10-26"},{"lineNumber":34,"author":{"gitId":"JeremyYong128"},"content":"        CombinedPredicate secondPredicate \u003d","lastModifiedDate":"2023-10-26"},{"lineNumber":35,"author":{"gitId":"JeremyYong128"},"content":"                new CombinedPredicate(Arrays.asList(","lastModifiedDate":"2023-10-26"},{"lineNumber":36,"author":{"gitId":"JeremyYong128"},"content":"                        new FieldContainsKeywordsPredicate(PREFIX_ROLE, Collections.singletonList(\"second\"))));","lastModifiedDate":"2023-10-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommand \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        FindCommand findSecondCommand \u003d new FindCommand(secondPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"migfoo02"},"content":"        assertEquals(findFirstCommand, findFirstCommand);","lastModifiedDate":"2023-10-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommandCopy \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":46,"author":{"gitId":"migfoo02"},"content":"        assertEquals(findFirstCommand, findFirstCommandCopy);","lastModifiedDate":"2023-10-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"migfoo02"},"content":"        assertNotEquals(findFirstCommand, 5.0f);","lastModifiedDate":"2023-10-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"migfoo02"},"content":"        assertNotEquals(findFirstCommand, null);","lastModifiedDate":"2023-10-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"JeremyYong128"},"content":"        // different job -\u003e returns false","lastModifiedDate":"2023-10-04"},{"lineNumber":55,"author":{"gitId":"migfoo02"},"content":"        assertNotEquals(findFirstCommand, findSecondCommand);","lastModifiedDate":"2023-10-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":59,"author":{"gitId":"JeremyYong128"},"content":"    public void execute_multipleKeywords_noJobsFound() {","lastModifiedDate":"2023-10-26"},{"lineNumber":60,"author":{"gitId":"JeremyYong128"},"content":"        String expectedMessage \u003d String.format(MESSAGE_JOBS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2023-10-04"},{"lineNumber":61,"author":{"gitId":"JeremyYong128"},"content":"        CombinedPredicate combinedPredicate \u003d new CombinedPredicate(","lastModifiedDate":"2023-10-26"},{"lineNumber":62,"author":{"gitId":"JeremyYong128"},"content":"                Arrays.asList(preparePredicate(PREFIX_ROLE + \" Grass Seller Police\")));","lastModifiedDate":"2023-10-26"},{"lineNumber":63,"author":{"gitId":"JeremyYong128"},"content":"        FindCommand command \u003d new FindCommand(combinedPredicate);","lastModifiedDate":"2023-10-26"},{"lineNumber":64,"author":{"gitId":"JeremyYong128"},"content":"        expectedModel.updateFilteredJobList(combinedPredicate);","lastModifiedDate":"2023-10-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":66,"author":{"gitId":"JeremyYong128"},"content":"        assertEquals(Arrays.asList(), model.getFilteredJobList());","lastModifiedDate":"2023-10-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":71,"author":{"gitId":"JeremyYong128"},"content":"        CombinedPredicate predicate \u003d new CombinedPredicate(Arrays.asList(","lastModifiedDate":"2023-10-26"},{"lineNumber":72,"author":{"gitId":"JeremyYong128"},"content":"                        new FieldContainsKeywordsPredicate(PREFIX_ROLE, Arrays.asList(\"keyword\"))));","lastModifiedDate":"2023-10-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        FindCommand findCommand \u003d new FindCommand(predicate);","lastModifiedDate":"2019-02-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        String expected \u003d FindCommand.class.getCanonicalName() + \"{predicate\u003d\" + predicate + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertEquals(expected, findCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-12"},{"lineNumber":79,"author":{"gitId":"JeremyYong128"},"content":"     * Parses {@code userInput} into a {@code FieldContainsKeywordsPredicate}.","lastModifiedDate":"2023-10-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-12"},{"lineNumber":81,"author":{"gitId":"JeremyYong128"},"content":"    private FieldContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2023-10-12"},{"lineNumber":82,"author":{"gitId":"JeremyYong128"},"content":"        String[] specifierAndKeywords \u003d userInput.split(\"\\\\s+\");","lastModifiedDate":"2023-10-12"},{"lineNumber":83,"author":{"gitId":"migfoo02"},"content":"        ArrayList\u003cString\u003e keywords \u003d new ArrayList\u003c\u003e(Arrays.asList(specifierAndKeywords)","lastModifiedDate":"2023-10-23"},{"lineNumber":84,"author":{"gitId":"migfoo02"},"content":"                .subList(1, specifierAndKeywords.length));","lastModifiedDate":"2023-10-23"},{"lineNumber":85,"author":{"gitId":"JeremyYong128"},"content":"        return new FieldContainsKeywordsPredicate(PREFIX_ROLE, keywords);","lastModifiedDate":"2023-10-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"evanyan13":7,"-":46,"JeremyYong128":24,"migfoo02":10}},{"path":"src/test/java/seedu/application/logic/commands/HelpCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"evanyan13"},"content":"package seedu.application.logic.commands;","lastModifiedDate":"2023-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"evanyan13"},"content":"import static seedu.application.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-10"},{"lineNumber":4,"author":{"gitId":"evanyan13"},"content":"import static seedu.application.logic.commands.HelpCommand.SHOWING_HELP_MESSAGE;","lastModifiedDate":"2023-10-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"evanyan13"},"content":"import seedu.application.model.Model;","lastModifiedDate":"2023-10-10"},{"lineNumber":9,"author":{"gitId":"evanyan13"},"content":"import seedu.application.model.ModelManager;","lastModifiedDate":"2023-10-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class HelpCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"migfoo02"},"content":"    private final Model model \u003d new ModelManager();","lastModifiedDate":"2023-10-23"},{"lineNumber":13,"author":{"gitId":"migfoo02"},"content":"    private final Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2023-10-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_help_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(SHOWING_HELP_MESSAGE, true, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new HelpCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"evanyan13":5,"-":13,"migfoo02":2}},{"path":"src/test/java/seedu/application/logic/commands/ListCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"evanyan13"},"content":"package seedu.application.logic.commands;","lastModifiedDate":"2023-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"evanyan13"},"content":"import static seedu.application.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-10"},{"lineNumber":4,"author":{"gitId":"evanyan13"},"content":"import static seedu.application.logic.commands.CommandTestUtil.showJobAtIndex;","lastModifiedDate":"2023-10-10"},{"lineNumber":5,"author":{"gitId":"evanyan13"},"content":"import static seedu.application.testutil.TypicalIndexes.INDEX_FIRST_JOB;","lastModifiedDate":"2023-10-10"},{"lineNumber":6,"author":{"gitId":"evanyan13"},"content":"import static seedu.application.testutil.TypicalJobs.getTypicalApplicationBook;","lastModifiedDate":"2023-10-10"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"evanyan13"},"content":"import seedu.application.model.Model;","lastModifiedDate":"2023-10-10"},{"lineNumber":12,"author":{"gitId":"evanyan13"},"content":"import seedu.application.model.ModelManager;","lastModifiedDate":"2023-10-10"},{"lineNumber":13,"author":{"gitId":"evanyan13"},"content":"import seedu.application.model.UserPrefs;","lastModifiedDate":"2023-10-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListCommand.","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class ListCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model expectedModel;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"evanyan13"},"content":"        model \u003d new ModelManager(getTypicalApplicationBook(), new UserPrefs());","lastModifiedDate":"2023-10-10"},{"lineNumber":26,"author":{"gitId":"evanyan13"},"content":"        expectedModel \u003d new ModelManager(model.getApplicationBook(), new UserPrefs());","lastModifiedDate":"2023-10-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2017-08-15"},{"lineNumber":31,"author":{"gitId":"JeremyYong128"},"content":"        String expectedMessage \u003d String.format(ListCommand.MESSAGE_SUCCESS, 7);","lastModifiedDate":"2023-10-26"},{"lineNumber":32,"author":{"gitId":"JeremyYong128"},"content":"        assertCommandSuccess(new ListCommand(), model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2017-08-15"},{"lineNumber":37,"author":{"gitId":"JeremyYong128"},"content":"        showJobAtIndex(model, INDEX_FIRST_JOB);","lastModifiedDate":"2023-10-04"},{"lineNumber":38,"author":{"gitId":"JeremyYong128"},"content":"        String expectedMessage \u003d String.format(ListCommand.MESSAGE_SUCCESS, 7);","lastModifiedDate":"2023-10-26"},{"lineNumber":39,"author":{"gitId":"JeremyYong128"},"content":"        assertCommandSuccess(new ListCommand(), model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-26"},{"lineNumber":40,"author":{"gitId":"peiran18"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"evanyan13":10,"peiran18":1,"-":25,"JeremyYong128":5}},{"path":"src/test/java/seedu/application/logic/commands/SortCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"JeremyYong128"},"content":"package seedu.application.logic.commands;","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"JeremyYong128"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"JeremyYong128"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"JeremyYong128"},"content":"import static seedu.application.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"JeremyYong128"},"content":"import static seedu.application.logic.parser.CliSyntax.PREFIX_COMPANY;","lastModifiedDate":"2023-10-27"},{"lineNumber":7,"author":{"gitId":"JeremyYong128"},"content":"import static seedu.application.logic.parser.CliSyntax.PREFIX_DEADLINE;","lastModifiedDate":"2023-10-27"},{"lineNumber":8,"author":{"gitId":"JeremyYong128"},"content":"import static seedu.application.logic.parser.CliSyntax.PREFIX_INDUSTRY;","lastModifiedDate":"2023-10-27"},{"lineNumber":9,"author":{"gitId":"JeremyYong128"},"content":"import static seedu.application.logic.parser.CliSyntax.PREFIX_JOB_TYPE;","lastModifiedDate":"2023-10-27"},{"lineNumber":10,"author":{"gitId":"JeremyYong128"},"content":"import static seedu.application.logic.parser.CliSyntax.PREFIX_ROLE;","lastModifiedDate":"2023-10-27"},{"lineNumber":11,"author":{"gitId":"JeremyYong128"},"content":"import static seedu.application.logic.parser.CliSyntax.PREFIX_STATUS;","lastModifiedDate":"2023-10-27"},{"lineNumber":12,"author":{"gitId":"JeremyYong128"},"content":"import static seedu.application.testutil.TypicalJobs.getTypicalApplicationBook;","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"JeremyYong128"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"JeremyYong128"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"JeremyYong128"},"content":"import seedu.application.model.Model;","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"JeremyYong128"},"content":"import seedu.application.model.ModelManager;","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"JeremyYong128"},"content":"import seedu.application.model.UserPrefs;","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"JeremyYong128"},"content":"import seedu.application.model.job.FieldComparator;","lastModifiedDate":"2023-10-27"},{"lineNumber":21,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"JeremyYong128"},"content":"/**","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"JeremyYong128"},"content":" * Contains integration tests (interaction with the Model) and unit tests for SortCommand.","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"JeremyYong128"},"content":" */","lastModifiedDate":"2023-10-26"},{"lineNumber":25,"author":{"gitId":"JeremyYong128"},"content":"public class SortCommandTest {","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":27,"author":{"gitId":"JeremyYong128"},"content":"    private Model model;","lastModifiedDate":"2023-10-26"},{"lineNumber":28,"author":{"gitId":"JeremyYong128"},"content":"    private Model expectedModel;","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":30,"author":{"gitId":"JeremyYong128"},"content":"    @BeforeEach","lastModifiedDate":"2023-10-26"},{"lineNumber":31,"author":{"gitId":"JeremyYong128"},"content":"    public void setUp() {","lastModifiedDate":"2023-10-26"},{"lineNumber":32,"author":{"gitId":"JeremyYong128"},"content":"        model \u003d new ModelManager(getTypicalApplicationBook(), new UserPrefs());","lastModifiedDate":"2023-10-26"},{"lineNumber":33,"author":{"gitId":"JeremyYong128"},"content":"        expectedModel \u003d new ModelManager(model.getApplicationBook(), new UserPrefs());","lastModifiedDate":"2023-10-26"},{"lineNumber":34,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":35,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":36,"author":{"gitId":"JeremyYong128"},"content":"    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":37,"author":{"gitId":"JeremyYong128"},"content":"    public void execute_listIsSortedByCompany_showsSortedListByCompany() {","lastModifiedDate":"2023-10-27"},{"lineNumber":38,"author":{"gitId":"JeremyYong128"},"content":"        FieldComparator fieldComparator \u003d new FieldComparator(PREFIX_COMPANY);","lastModifiedDate":"2023-10-27"},{"lineNumber":39,"author":{"gitId":"JeremyYong128"},"content":"        expectedModel.sortJobs(fieldComparator);","lastModifiedDate":"2023-10-27"},{"lineNumber":40,"author":{"gitId":"JeremyYong128"},"content":"        assertCommandSuccess(new SortCommand(fieldComparator), model, SortCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2023-10-27"},{"lineNumber":41,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":42,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":43,"author":{"gitId":"JeremyYong128"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":44,"author":{"gitId":"JeremyYong128"},"content":"    public void execute_listIsSortedByRoles_showsSortedListByRole() {","lastModifiedDate":"2023-10-26"},{"lineNumber":45,"author":{"gitId":"JeremyYong128"},"content":"        FieldComparator fieldComparator \u003d new FieldComparator(PREFIX_ROLE);","lastModifiedDate":"2023-10-27"},{"lineNumber":46,"author":{"gitId":"JeremyYong128"},"content":"        expectedModel.sortJobs(fieldComparator);","lastModifiedDate":"2023-10-26"},{"lineNumber":47,"author":{"gitId":"JeremyYong128"},"content":"        assertCommandSuccess(new SortCommand(fieldComparator), model, SortCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2023-10-26"},{"lineNumber":48,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":49,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":50,"author":{"gitId":"JeremyYong128"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":51,"author":{"gitId":"JeremyYong128"},"content":"    public void execute_listIsSortedByStatus_showsSortedListByStatus() {","lastModifiedDate":"2023-10-27"},{"lineNumber":52,"author":{"gitId":"JeremyYong128"},"content":"        FieldComparator fieldComparator \u003d new FieldComparator(PREFIX_STATUS);","lastModifiedDate":"2023-10-27"},{"lineNumber":53,"author":{"gitId":"JeremyYong128"},"content":"        expectedModel.sortJobs(fieldComparator);","lastModifiedDate":"2023-10-27"},{"lineNumber":54,"author":{"gitId":"JeremyYong128"},"content":"        assertCommandSuccess(new SortCommand(fieldComparator), model, SortCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2023-10-27"},{"lineNumber":55,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":56,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":57,"author":{"gitId":"JeremyYong128"},"content":"    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":58,"author":{"gitId":"JeremyYong128"},"content":"    public void execute_listIsSortedByIndustry_showsSortedListByIndustry() {","lastModifiedDate":"2023-10-27"},{"lineNumber":59,"author":{"gitId":"JeremyYong128"},"content":"        FieldComparator fieldComparator \u003d new FieldComparator(PREFIX_INDUSTRY);","lastModifiedDate":"2023-10-27"},{"lineNumber":60,"author":{"gitId":"JeremyYong128"},"content":"        expectedModel.sortJobs(fieldComparator);","lastModifiedDate":"2023-10-26"},{"lineNumber":61,"author":{"gitId":"JeremyYong128"},"content":"        assertCommandSuccess(new SortCommand(fieldComparator), model, SortCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2023-10-26"},{"lineNumber":62,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":63,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":64,"author":{"gitId":"JeremyYong128"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":65,"author":{"gitId":"JeremyYong128"},"content":"    public void execute_listIsSortedByDeadline_showsSortedListByDeadline() {","lastModifiedDate":"2023-10-26"},{"lineNumber":66,"author":{"gitId":"JeremyYong128"},"content":"        FieldComparator fieldComparator \u003d new FieldComparator(PREFIX_DEADLINE);","lastModifiedDate":"2023-10-27"},{"lineNumber":67,"author":{"gitId":"JeremyYong128"},"content":"        expectedModel.sortJobs(fieldComparator);","lastModifiedDate":"2023-10-26"},{"lineNumber":68,"author":{"gitId":"JeremyYong128"},"content":"        assertCommandSuccess(new SortCommand(fieldComparator), model, SortCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2023-10-26"},{"lineNumber":69,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":70,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":71,"author":{"gitId":"JeremyYong128"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":72,"author":{"gitId":"JeremyYong128"},"content":"    public void execute_listIsSortedByJobType_showsSortedListByJobType() {","lastModifiedDate":"2023-10-27"},{"lineNumber":73,"author":{"gitId":"JeremyYong128"},"content":"        FieldComparator fieldComparator \u003d new FieldComparator(PREFIX_JOB_TYPE);","lastModifiedDate":"2023-10-27"},{"lineNumber":74,"author":{"gitId":"JeremyYong128"},"content":"        expectedModel.sortJobs(fieldComparator);","lastModifiedDate":"2023-10-26"},{"lineNumber":75,"author":{"gitId":"JeremyYong128"},"content":"        assertCommandSuccess(new SortCommand(fieldComparator), model, SortCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2023-10-26"},{"lineNumber":76,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":77,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":78,"author":{"gitId":"JeremyYong128"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":79,"author":{"gitId":"JeremyYong128"},"content":"    public void equals() {","lastModifiedDate":"2023-10-26"},{"lineNumber":80,"author":{"gitId":"JeremyYong128"},"content":"        SortCommand listByRoleCommand \u003d new SortCommand(new FieldComparator(PREFIX_ROLE));","lastModifiedDate":"2023-10-27"},{"lineNumber":81,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":82,"author":{"gitId":"JeremyYong128"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-26"},{"lineNumber":83,"author":{"gitId":"JeremyYong128"},"content":"        assertEquals(listByRoleCommand, listByRoleCommand);","lastModifiedDate":"2023-10-26"},{"lineNumber":84,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":85,"author":{"gitId":"JeremyYong128"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-26"},{"lineNumber":86,"author":{"gitId":"JeremyYong128"},"content":"        SortCommand listByRoleCommandCopy \u003d new SortCommand(new FieldComparator(PREFIX_ROLE));","lastModifiedDate":"2023-10-27"},{"lineNumber":87,"author":{"gitId":"JeremyYong128"},"content":"        assertEquals(listByRoleCommand, listByRoleCommandCopy);","lastModifiedDate":"2023-10-26"},{"lineNumber":88,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":89,"author":{"gitId":"JeremyYong128"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-26"},{"lineNumber":90,"author":{"gitId":"JeremyYong128"},"content":"        assertNotEquals(listByRoleCommand, 5.0f);","lastModifiedDate":"2023-10-26"},{"lineNumber":91,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":92,"author":{"gitId":"JeremyYong128"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-26"},{"lineNumber":93,"author":{"gitId":"JeremyYong128"},"content":"        assertNotEquals(listByRoleCommand, null);","lastModifiedDate":"2023-10-26"},{"lineNumber":94,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":95,"author":{"gitId":"JeremyYong128"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2023-10-26"},{"lineNumber":96,"author":{"gitId":"JeremyYong128"},"content":"        SortCommand listByCompanyCommand \u003d new SortCommand(new FieldComparator(PREFIX_COMPANY));","lastModifiedDate":"2023-10-27"},{"lineNumber":97,"author":{"gitId":"JeremyYong128"},"content":"        assertNotEquals(listByRoleCommand, listByCompanyCommand);","lastModifiedDate":"2023-10-26"},{"lineNumber":98,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":99,"author":{"gitId":"JeremyYong128"},"content":"}","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"JeremyYong128":99}},{"path":"src/test/java/seedu/application/logic/parser/AddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"evanyan13"},"content":"package seedu.application.logic.parser;","lastModifiedDate":"2023-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"evanyan13"},"content":"import static seedu.application.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-10"},{"lineNumber":4,"author":{"gitId":"migfoo02"},"content":"import static seedu.application.logic.commands.CommandTestUtil.COMPANY_DESC_CHEF;","lastModifiedDate":"2023-10-22"},{"lineNumber":5,"author":{"gitId":"migfoo02"},"content":"import static seedu.application.logic.commands.CommandTestUtil.COMPANY_DESC_CLEANER;","lastModifiedDate":"2023-10-22"},{"lineNumber":6,"author":{"gitId":"migfoo02"},"content":"import static seedu.application.logic.commands.CommandTestUtil.DEADLINE_DESC_CHEF;","lastModifiedDate":"2023-10-22"},{"lineNumber":7,"author":{"gitId":"migfoo02"},"content":"import static seedu.application.logic.commands.CommandTestUtil.DEADLINE_DESC_CLEANER;","lastModifiedDate":"2023-10-22"},{"lineNumber":8,"author":{"gitId":"migfoo02"},"content":"import static seedu.application.logic.commands.CommandTestUtil.INDUSTRY_DESC_CHEF;","lastModifiedDate":"2023-10-22"},{"lineNumber":9,"author":{"gitId":"migfoo02"},"content":"import static seedu.application.logic.commands.CommandTestUtil.INDUSTRY_DESC_CLEANER;","lastModifiedDate":"2023-10-22"},{"lineNumber":10,"author":{"gitId":"migfoo02"},"content":"import static seedu.application.logic.commands.CommandTestUtil.INVALID_COMPANY_DESC;","lastModifiedDate":"2023-10-22"},{"lineNumber":11,"author":{"gitId":"migfoo02"},"content":"import static seedu.application.logic.commands.CommandTestUtil.INVALID_DEADLINE_DESC;","lastModifiedDate":"2023-10-22"},{"lineNumber":12,"author":{"gitId":"migfoo02"},"content":"import static seedu.application.logic.commands.CommandTestUtil.INVALID_INDUSTRY_DESC;","lastModifiedDate":"2023-10-22"},{"lineNumber":13,"author":{"gitId":"migfoo02"},"content":"import static seedu.application.logic.commands.CommandTestUtil.INVALID_JOB_TYPE_DESC;","lastModifiedDate":"2023-10-23"},{"lineNumber":14,"author":{"gitId":"migfoo02"},"content":"import static seedu.application.logic.commands.CommandTestUtil.INVALID_ROLE_DESC;","lastModifiedDate":"2023-10-22"},{"lineNumber":15,"author":{"gitId":"migfoo02"},"content":"import static seedu.application.logic.commands.CommandTestUtil.INVALID_STATUS_DESC;","lastModifiedDate":"2023-10-22"},{"lineNumber":16,"author":{"gitId":"migfoo02"},"content":"import static seedu.application.logic.commands.CommandTestUtil.JOB_TYPE_DESC_CHEF;","lastModifiedDate":"2023-10-23"},{"lineNumber":17,"author":{"gitId":"migfoo02"},"content":"import static seedu.application.logic.commands.CommandTestUtil.JOB_TYPE_DESC_CLEANER;","lastModifiedDate":"2023-10-23"},{"lineNumber":18,"author":{"gitId":"migfoo02"},"content":"import static seedu.application.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2023-10-22"},{"lineNumber":19,"author":{"gitId":"migfoo02"},"content":"import static seedu.application.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2023-10-22"},{"lineNumber":20,"author":{"gitId":"migfoo02"},"content":"import static seedu.application.logic.commands.CommandTestUtil.ROLE_DESC_CHEF;","lastModifiedDate":"2023-10-22"},{"lineNumber":21,"author":{"gitId":"migfoo02"},"content":"import static seedu.application.logic.commands.CommandTestUtil.ROLE_DESC_CLEANER;","lastModifiedDate":"2023-10-22"},{"lineNumber":22,"author":{"gitId":"migfoo02"},"content":"import static seedu.application.logic.commands.CommandTestUtil.STATUS_DESC_CHEF;","lastModifiedDate":"2023-10-22"},{"lineNumber":23,"author":{"gitId":"migfoo02"},"content":"import static seedu.application.logic.commands.CommandTestUtil.STATUS_DESC_CLEANER;","lastModifiedDate":"2023-10-22"},{"lineNumber":24,"author":{"gitId":"migfoo02"},"content":"import static seedu.application.logic.commands.CommandTestUtil.VALID_COMPANY_CLEANER;","lastModifiedDate":"2023-10-22"},{"lineNumber":25,"author":{"gitId":"migfoo02"},"content":"import static seedu.application.logic.commands.CommandTestUtil.VALID_ROLE_CLEANER;","lastModifiedDate":"2023-10-22"},{"lineNumber":26,"author":{"gitId":"migfoo02"},"content":"import static seedu.application.logic.parser.CliSyntax.PREFIX_COMPANY;","lastModifiedDate":"2023-10-22"},{"lineNumber":27,"author":{"gitId":"migfoo02"},"content":"import static seedu.application.logic.parser.CliSyntax.PREFIX_DEADLINE;","lastModifiedDate":"2023-10-22"},{"lineNumber":28,"author":{"gitId":"migfoo02"},"content":"import static seedu.application.logic.parser.CliSyntax.PREFIX_INDUSTRY;","lastModifiedDate":"2023-10-22"},{"lineNumber":29,"author":{"gitId":"migfoo02"},"content":"import static seedu.application.logic.parser.CliSyntax.PREFIX_JOB_TYPE;","lastModifiedDate":"2023-10-23"},{"lineNumber":30,"author":{"gitId":"migfoo02"},"content":"import static seedu.application.logic.parser.CliSyntax.PREFIX_ROLE;","lastModifiedDate":"2023-10-22"},{"lineNumber":31,"author":{"gitId":"migfoo02"},"content":"import static seedu.application.logic.parser.CliSyntax.PREFIX_STATUS;","lastModifiedDate":"2023-10-22"},{"lineNumber":32,"author":{"gitId":"evanyan13"},"content":"import static seedu.application.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-10-10"},{"lineNumber":33,"author":{"gitId":"evanyan13"},"content":"import static seedu.application.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-10-10"},{"lineNumber":34,"author":{"gitId":"evanyan13"},"content":"import static seedu.application.testutil.TypicalJobs.CLEANER;","lastModifiedDate":"2023-10-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":38,"author":{"gitId":"evanyan13"},"content":"import seedu.application.logic.Messages;","lastModifiedDate":"2023-10-10"},{"lineNumber":39,"author":{"gitId":"evanyan13"},"content":"import seedu.application.logic.commands.AddCommand;","lastModifiedDate":"2023-10-10"},{"lineNumber":40,"author":{"gitId":"evanyan13"},"content":"import seedu.application.model.job.Company;","lastModifiedDate":"2023-10-10"},{"lineNumber":41,"author":{"gitId":"evanyan13"},"content":"import seedu.application.model.job.Job;","lastModifiedDate":"2023-10-10"},{"lineNumber":42,"author":{"gitId":"evanyan13"},"content":"import seedu.application.model.job.Role;","lastModifiedDate":"2023-10-10"},{"lineNumber":43,"author":{"gitId":"evanyan13"},"content":"import seedu.application.testutil.JobBuilder;","lastModifiedDate":"2023-10-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"public class AddCommandParserTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private AddCommandParser parser \u003d new AddCommandParser();","lastModifiedDate":"2017-06-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":50,"author":{"gitId":"JeremyYong128"},"content":"        Job expectedJob \u003d new JobBuilder(CLEANER).build();","lastModifiedDate":"2023-10-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":53,"author":{"gitId":"czhiruo"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + ROLE_DESC_CLEANER + COMPANY_DESC_CLEANER","lastModifiedDate":"2023-10-21"},{"lineNumber":54,"author":{"gitId":"migfoo02"},"content":"                        + DEADLINE_DESC_CLEANER + STATUS_DESC_CLEANER + JOB_TYPE_DESC_CLEANER + INDUSTRY_DESC_CLEANER,","lastModifiedDate":"2023-10-23"},{"lineNumber":55,"author":{"gitId":"JeremyYong128"},"content":"            new AddCommand(expectedJob));","lastModifiedDate":"2023-10-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-07-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void parse_repeatedNonTagValue_failure() {","lastModifiedDate":"2023-07-14"},{"lineNumber":60,"author":{"gitId":"evanyan13"},"content":"        String validExpectedJobString \u003d ROLE_DESC_CLEANER + COMPANY_DESC_CLEANER","lastModifiedDate":"2023-10-18"},{"lineNumber":61,"author":{"gitId":"migfoo02"},"content":"            + DEADLINE_DESC_CLEANER + STATUS_DESC_CLEANER + JOB_TYPE_DESC_CLEANER + INDUSTRY_DESC_CLEANER;","lastModifiedDate":"2023-10-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":63,"author":{"gitId":"JeremyYong128"},"content":"        // multiple roles","lastModifiedDate":"2023-10-04"},{"lineNumber":64,"author":{"gitId":"JeremyYong128"},"content":"        assertParseFailure(parser, ROLE_DESC_CHEF + validExpectedJobString,","lastModifiedDate":"2023-10-04"},{"lineNumber":65,"author":{"gitId":"JeremyYong128"},"content":"            Messages.getErrorMessageForDuplicatePrefixes(PREFIX_ROLE));","lastModifiedDate":"2023-10-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":67,"author":{"gitId":"JeremyYong128"},"content":"        // multiple companies","lastModifiedDate":"2023-10-04"},{"lineNumber":68,"author":{"gitId":"JeremyYong128"},"content":"        assertParseFailure(parser, COMPANY_DESC_CHEF + validExpectedJobString,","lastModifiedDate":"2023-10-04"},{"lineNumber":69,"author":{"gitId":"JeremyYong128"},"content":"            Messages.getErrorMessageForDuplicatePrefixes(PREFIX_COMPANY));","lastModifiedDate":"2023-10-04"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":71,"author":{"gitId":"evanyan13"},"content":"        // multiple deadlines","lastModifiedDate":"2023-10-18"},{"lineNumber":72,"author":{"gitId":"evanyan13"},"content":"        assertParseFailure(parser, DEADLINE_DESC_CHEF + validExpectedJobString,","lastModifiedDate":"2023-10-18"},{"lineNumber":73,"author":{"gitId":"evanyan13"},"content":"            Messages.getErrorMessageForDuplicatePrefixes(PREFIX_DEADLINE));","lastModifiedDate":"2023-10-18"},{"lineNumber":74,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":75,"author":{"gitId":"peiran18"},"content":"        // multiple status","lastModifiedDate":"2023-10-19"},{"lineNumber":76,"author":{"gitId":"peiran18"},"content":"        assertParseFailure(parser, STATUS_DESC_CHEF + validExpectedJobString,","lastModifiedDate":"2023-10-19"},{"lineNumber":77,"author":{"gitId":"peiran18"},"content":"            Messages.getErrorMessageForDuplicatePrefixes(PREFIX_STATUS));","lastModifiedDate":"2023-10-19"},{"lineNumber":78,"author":{"gitId":"peiran18"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":79,"author":{"gitId":"migfoo02"},"content":"        // multiple jobTypes","lastModifiedDate":"2023-10-22"},{"lineNumber":80,"author":{"gitId":"migfoo02"},"content":"        assertParseFailure(parser, JOB_TYPE_DESC_CHEF + validExpectedJobString,","lastModifiedDate":"2023-10-23"},{"lineNumber":81,"author":{"gitId":"migfoo02"},"content":"            Messages.getErrorMessageForDuplicatePrefixes(PREFIX_JOB_TYPE));","lastModifiedDate":"2023-10-23"},{"lineNumber":82,"author":{"gitId":"migfoo02"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":83,"author":{"gitId":"czhiruo"},"content":"        // multiple industries","lastModifiedDate":"2023-10-21"},{"lineNumber":84,"author":{"gitId":"czhiruo"},"content":"        assertParseFailure(parser, INDUSTRY_DESC_CHEF + validExpectedJobString,","lastModifiedDate":"2023-10-21"},{"lineNumber":85,"author":{"gitId":"czhiruo"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_INDUSTRY));","lastModifiedDate":"2023-10-21"},{"lineNumber":86,"author":{"gitId":"czhiruo"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // multiple fields repeated","lastModifiedDate":"2023-07-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2023-07-14"},{"lineNumber":89,"author":{"gitId":"peiran18"},"content":"            validExpectedJobString + COMPANY_DESC_CHEF + ROLE_DESC_CHEF","lastModifiedDate":"2023-10-19"},{"lineNumber":90,"author":{"gitId":"migfoo02"},"content":"                + DEADLINE_DESC_CLEANER + STATUS_DESC_CLEANER + JOB_TYPE_DESC_CLEANER + INDUSTRY_DESC_CLEANER","lastModifiedDate":"2023-10-23"},{"lineNumber":91,"author":{"gitId":"evanyan13"},"content":"                + validExpectedJobString,","lastModifiedDate":"2023-10-18"},{"lineNumber":92,"author":{"gitId":"czhiruo"},"content":"            Messages.getErrorMessageForDuplicatePrefixes(PREFIX_ROLE, PREFIX_COMPANY,","lastModifiedDate":"2023-10-21"},{"lineNumber":93,"author":{"gitId":"migfoo02"},"content":"                    PREFIX_DEADLINE, PREFIX_STATUS, PREFIX_JOB_TYPE, PREFIX_INDUSTRY));","lastModifiedDate":"2023-10-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        // invalid value followed by valid value","lastModifiedDate":"2023-07-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":97,"author":{"gitId":"JeremyYong128"},"content":"        // invalid role","lastModifiedDate":"2023-10-04"},{"lineNumber":98,"author":{"gitId":"JeremyYong128"},"content":"        assertParseFailure(parser, INVALID_ROLE_DESC + validExpectedJobString,","lastModifiedDate":"2023-10-04"},{"lineNumber":99,"author":{"gitId":"JeremyYong128"},"content":"            Messages.getErrorMessageForDuplicatePrefixes(PREFIX_ROLE));","lastModifiedDate":"2023-10-04"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":101,"author":{"gitId":"JeremyYong128"},"content":"        // invalid company","lastModifiedDate":"2023-10-04"},{"lineNumber":102,"author":{"gitId":"JeremyYong128"},"content":"        assertParseFailure(parser, INVALID_COMPANY_DESC + validExpectedJobString,","lastModifiedDate":"2023-10-04"},{"lineNumber":103,"author":{"gitId":"JeremyYong128"},"content":"            Messages.getErrorMessageForDuplicatePrefixes(PREFIX_COMPANY));","lastModifiedDate":"2023-10-04"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":105,"author":{"gitId":"migfoo02"},"content":"        // invalid deadline","lastModifiedDate":"2023-10-22"},{"lineNumber":106,"author":{"gitId":"evanyan13"},"content":"        assertParseFailure(parser, INVALID_DEADLINE_DESC + validExpectedJobString,","lastModifiedDate":"2023-10-18"},{"lineNumber":107,"author":{"gitId":"evanyan13"},"content":"            Messages.getErrorMessageForDuplicatePrefixes(PREFIX_DEADLINE));","lastModifiedDate":"2023-10-18"},{"lineNumber":108,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":109,"author":{"gitId":"peiran18"},"content":"        // invalid status","lastModifiedDate":"2023-10-19"},{"lineNumber":110,"author":{"gitId":"peiran18"},"content":"        assertParseFailure(parser, INVALID_STATUS_DESC + validExpectedJobString,","lastModifiedDate":"2023-10-19"},{"lineNumber":111,"author":{"gitId":"peiran18"},"content":"            Messages.getErrorMessageForDuplicatePrefixes(PREFIX_STATUS));","lastModifiedDate":"2023-10-19"},{"lineNumber":112,"author":{"gitId":"peiran18"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":113,"author":{"gitId":"migfoo02"},"content":"        // invalid jobType","lastModifiedDate":"2023-10-22"},{"lineNumber":114,"author":{"gitId":"migfoo02"},"content":"        assertParseFailure(parser, INVALID_JOB_TYPE_DESC + validExpectedJobString,","lastModifiedDate":"2023-10-23"},{"lineNumber":115,"author":{"gitId":"migfoo02"},"content":"            Messages.getErrorMessageForDuplicatePrefixes(PREFIX_JOB_TYPE));","lastModifiedDate":"2023-10-23"},{"lineNumber":116,"author":{"gitId":"migfoo02"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":117,"author":{"gitId":"czhiruo"},"content":"        // invalid industry","lastModifiedDate":"2023-10-21"},{"lineNumber":118,"author":{"gitId":"czhiruo"},"content":"        assertParseFailure(parser, INVALID_INDUSTRY_DESC + validExpectedJobString,","lastModifiedDate":"2023-10-21"},{"lineNumber":119,"author":{"gitId":"czhiruo"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_INDUSTRY));","lastModifiedDate":"2023-10-21"},{"lineNumber":120,"author":{"gitId":"czhiruo"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // valid value followed by invalid value","lastModifiedDate":"2023-07-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":123,"author":{"gitId":"JeremyYong128"},"content":"        // invalid role","lastModifiedDate":"2023-10-04"},{"lineNumber":124,"author":{"gitId":"JeremyYong128"},"content":"        assertParseFailure(parser, validExpectedJobString + INVALID_ROLE_DESC,","lastModifiedDate":"2023-10-04"},{"lineNumber":125,"author":{"gitId":"JeremyYong128"},"content":"            Messages.getErrorMessageForDuplicatePrefixes(PREFIX_ROLE));","lastModifiedDate":"2023-10-04"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":127,"author":{"gitId":"JeremyYong128"},"content":"        // invalid company","lastModifiedDate":"2023-10-04"},{"lineNumber":128,"author":{"gitId":"JeremyYong128"},"content":"        assertParseFailure(parser, validExpectedJobString + INVALID_COMPANY_DESC,","lastModifiedDate":"2023-10-04"},{"lineNumber":129,"author":{"gitId":"JeremyYong128"},"content":"            Messages.getErrorMessageForDuplicatePrefixes(PREFIX_COMPANY));","lastModifiedDate":"2023-10-04"},{"lineNumber":130,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":131,"author":{"gitId":"evanyan13"},"content":"        // invalid deadline","lastModifiedDate":"2023-10-18"},{"lineNumber":132,"author":{"gitId":"evanyan13"},"content":"        assertParseFailure(parser, validExpectedJobString + INVALID_DEADLINE_DESC,","lastModifiedDate":"2023-10-18"},{"lineNumber":133,"author":{"gitId":"evanyan13"},"content":"            Messages.getErrorMessageForDuplicatePrefixes(PREFIX_DEADLINE));","lastModifiedDate":"2023-10-18"},{"lineNumber":134,"author":{"gitId":"peiran18"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":135,"author":{"gitId":"peiran18"},"content":"        // invalid status","lastModifiedDate":"2023-10-19"},{"lineNumber":136,"author":{"gitId":"peiran18"},"content":"        assertParseFailure(parser, validExpectedJobString + INVALID_STATUS_DESC,","lastModifiedDate":"2023-10-19"},{"lineNumber":137,"author":{"gitId":"peiran18"},"content":"            Messages.getErrorMessageForDuplicatePrefixes(PREFIX_STATUS));","lastModifiedDate":"2023-10-19"},{"lineNumber":138,"author":{"gitId":"czhiruo"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":139,"author":{"gitId":"migfoo02"},"content":"        // invalid jobType","lastModifiedDate":"2023-10-22"},{"lineNumber":140,"author":{"gitId":"migfoo02"},"content":"        assertParseFailure(parser, validExpectedJobString + INVALID_JOB_TYPE_DESC,","lastModifiedDate":"2023-10-23"},{"lineNumber":141,"author":{"gitId":"migfoo02"},"content":"            Messages.getErrorMessageForDuplicatePrefixes(PREFIX_JOB_TYPE));","lastModifiedDate":"2023-10-23"},{"lineNumber":142,"author":{"gitId":"migfoo02"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":143,"author":{"gitId":"czhiruo"},"content":"        // invalid industry","lastModifiedDate":"2023-10-21"},{"lineNumber":144,"author":{"gitId":"czhiruo"},"content":"        assertParseFailure(parser, validExpectedJobString + INVALID_INDUSTRY_DESC,","lastModifiedDate":"2023-10-21"},{"lineNumber":145,"author":{"gitId":"czhiruo"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_INDUSTRY));","lastModifiedDate":"2023-10-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-06-15"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":152,"author":{"gitId":"JeremyYong128"},"content":"        // missing role prefix","lastModifiedDate":"2023-10-04"},{"lineNumber":153,"author":{"gitId":"JeremyYong128"},"content":"        assertParseFailure(parser, VALID_ROLE_CLEANER + COMPANY_DESC_CLEANER, expectedMessage);","lastModifiedDate":"2023-10-04"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":155,"author":{"gitId":"JeremyYong128"},"content":"        // missing company prefix","lastModifiedDate":"2023-10-04"},{"lineNumber":156,"author":{"gitId":"JeremyYong128"},"content":"        assertParseFailure(parser, ROLE_DESC_CLEANER + VALID_COMPANY_CLEANER, expectedMessage);","lastModifiedDate":"2023-10-04"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":159,"author":{"gitId":"JeremyYong128"},"content":"        assertParseFailure(parser, VALID_ROLE_CLEANER + VALID_COMPANY_CLEANER, expectedMessage);","lastModifiedDate":"2023-10-04"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":164,"author":{"gitId":"JeremyYong128"},"content":"        // invalid role","lastModifiedDate":"2023-10-04"},{"lineNumber":165,"author":{"gitId":"JeremyYong128"},"content":"        assertParseFailure(parser, INVALID_ROLE_DESC + COMPANY_DESC_CLEANER, Role.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-04"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":167,"author":{"gitId":"JeremyYong128"},"content":"        // invalid company","lastModifiedDate":"2023-10-04"},{"lineNumber":168,"author":{"gitId":"JeremyYong128"},"content":"        assertParseFailure(parser, ROLE_DESC_CLEANER + INVALID_COMPANY_DESC, Company.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-04"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":171,"author":{"gitId":"JeremyYong128"},"content":"        assertParseFailure(parser, INVALID_ROLE_DESC + INVALID_COMPANY_DESC, Role.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-04"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":174,"author":{"gitId":"JeremyYong128"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + ROLE_DESC_CLEANER + COMPANY_DESC_CLEANER,","lastModifiedDate":"2023-10-04"},{"lineNumber":175,"author":{"gitId":"-"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-12-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":177,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"czhiruo":14,"evanyan13":24,"peiran18":13,"-":50,"JeremyYong128":31,"migfoo02":45}},{"path":"src/test/java/seedu/application/logic/parser/ApplicationBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"evanyan13"},"content":"package seedu.application.logic.parser;","lastModifiedDate":"2023-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"evanyan13"},"content":"import static seedu.application.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-10"},{"lineNumber":6,"author":{"gitId":"evanyan13"},"content":"import static seedu.application.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-10-10"},{"lineNumber":7,"author":{"gitId":"JeremyYong128"},"content":"import static seedu.application.logic.parser.CliSyntax.*;","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"evanyan13"},"content":"import static seedu.application.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-10"},{"lineNumber":9,"author":{"gitId":"evanyan13"},"content":"import static seedu.application.testutil.TypicalIndexes.INDEX_FIRST_JOB;","lastModifiedDate":"2023-10-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"JeremyYong128"},"content":"import seedu.application.logic.commands.*;","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"evanyan13"},"content":"import seedu.application.logic.commands.EditCommand.EditJobDescriptor;","lastModifiedDate":"2023-10-10"},{"lineNumber":19,"author":{"gitId":"JeremyYong128"},"content":"import seedu.application.logic.commands.SortCommand;","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"evanyan13"},"content":"import seedu.application.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-10"},{"lineNumber":21,"author":{"gitId":"JeremyYong128"},"content":"import seedu.application.model.job.CombinedPredicate;","lastModifiedDate":"2023-10-27"},{"lineNumber":22,"author":{"gitId":"JeremyYong128"},"content":"import seedu.application.model.job.FieldContainsKeywordsPredicate;","lastModifiedDate":"2023-10-27"},{"lineNumber":23,"author":{"gitId":"JeremyYong128"},"content":"import seedu.application.model.job.Job;","lastModifiedDate":"2023-10-27"},{"lineNumber":24,"author":{"gitId":"evanyan13"},"content":"import seedu.application.testutil.EditJobDescriptorBuilder;","lastModifiedDate":"2023-10-10"},{"lineNumber":25,"author":{"gitId":"evanyan13"},"content":"import seedu.application.testutil.JobBuilder;","lastModifiedDate":"2023-10-10"},{"lineNumber":26,"author":{"gitId":"evanyan13"},"content":"import seedu.application.testutil.JobUtil;","lastModifiedDate":"2023-10-10"},{"lineNumber":27,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":28,"author":{"gitId":"evanyan13"},"content":"public class ApplicationBookParserTest {","lastModifiedDate":"2023-10-10"},{"lineNumber":29,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":30,"author":{"gitId":"evanyan13"},"content":"    private final ApplicationBookParser parser \u003d new ApplicationBookParser();","lastModifiedDate":"2023-10-10"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"JeremyYong128"},"content":"        Job job \u003d new JobBuilder().build();","lastModifiedDate":"2023-10-04"},{"lineNumber":35,"author":{"gitId":"JeremyYong128"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(JobUtil.getAddCommand(job));","lastModifiedDate":"2023-10-04"},{"lineNumber":36,"author":{"gitId":"JeremyYong128"},"content":"        assertEquals(new AddCommand(job), command);","lastModifiedDate":"2023-10-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"JeremyYong128"},"content":"            DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_JOB.getOneBased());","lastModifiedDate":"2023-10-04"},{"lineNumber":49,"author":{"gitId":"JeremyYong128"},"content":"        assertEquals(new DeleteCommand(INDEX_FIRST_JOB), command);","lastModifiedDate":"2023-10-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"JeremyYong128"},"content":"        Job job \u003d new JobBuilder().build();","lastModifiedDate":"2023-10-04"},{"lineNumber":55,"author":{"gitId":"JeremyYong128"},"content":"        EditJobDescriptor descriptor \u003d new EditJobDescriptorBuilder(job).build();","lastModifiedDate":"2023-10-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"JeremyYong128"},"content":"            + INDEX_FIRST_JOB.getOneBased() + \" \" + JobUtil.getEditJobDescriptorDetails(descriptor));","lastModifiedDate":"2023-10-04"},{"lineNumber":58,"author":{"gitId":"JeremyYong128"},"content":"        assertEquals(new EditCommand(INDEX_FIRST_JOB, descriptor), command);","lastModifiedDate":"2023-10-04"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"JeremyYong128"},"content":"            FindCommand.COMMAND_WORD + \" \" + PREFIX_ROLE","lastModifiedDate":"2023-10-26"},{"lineNumber":72,"author":{"gitId":"JeremyYong128"},"content":"                + \" \" + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2023-10-12"},{"lineNumber":73,"author":{"gitId":"JeremyYong128"},"content":"        FieldContainsKeywordsPredicate fieldPredicate \u003d new FieldContainsKeywordsPredicate(PREFIX_ROLE, keywords);","lastModifiedDate":"2023-10-26"},{"lineNumber":74,"author":{"gitId":"JeremyYong128"},"content":"        CombinedPredicate combinedPredicate \u003d new CombinedPredicate(List.of(fieldPredicate));","lastModifiedDate":"2023-10-26"},{"lineNumber":75,"author":{"gitId":"JeremyYong128"},"content":"        assertEquals(new FindCommand(combinedPredicate), command);","lastModifiedDate":"2023-10-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"JeremyYong128"},"content":"    public void parseCommand_sort() throws Exception {","lastModifiedDate":"2023-10-26"},{"lineNumber":86,"author":{"gitId":"JeremyYong128"},"content":"        assertTrue(parser.parseCommand(SortCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2023-10-26"},{"lineNumber":87,"author":{"gitId":"JeremyYong128"},"content":"                + PREFIX_COMPANY) instanceof SortCommand);","lastModifiedDate":"2023-10-27"},{"lineNumber":88,"author":{"gitId":"JeremyYong128"},"content":"        assertTrue(parser.parseCommand(SortCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2023-10-26"},{"lineNumber":89,"author":{"gitId":"JeremyYong128"},"content":"                + PREFIX_ROLE) instanceof SortCommand);","lastModifiedDate":"2023-10-27"},{"lineNumber":90,"author":{"gitId":"JeremyYong128"},"content":"        assertTrue(parser.parseCommand(SortCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2023-10-26"},{"lineNumber":91,"author":{"gitId":"JeremyYong128"},"content":"                + PREFIX_STATUS) instanceof SortCommand);","lastModifiedDate":"2023-10-27"},{"lineNumber":92,"author":{"gitId":"JeremyYong128"},"content":"        assertTrue(parser.parseCommand(SortCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2023-10-26"},{"lineNumber":93,"author":{"gitId":"JeremyYong128"},"content":"                + PREFIX_INDUSTRY) instanceof SortCommand);","lastModifiedDate":"2023-10-27"},{"lineNumber":94,"author":{"gitId":"JeremyYong128"},"content":"        assertTrue(parser.parseCommand(SortCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2023-10-26"},{"lineNumber":95,"author":{"gitId":"JeremyYong128"},"content":"                + PREFIX_DEADLINE) instanceof SortCommand);","lastModifiedDate":"2023-10-27"},{"lineNumber":96,"author":{"gitId":"JeremyYong128"},"content":"        assertTrue(parser.parseCommand(SortCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2023-10-26"},{"lineNumber":97,"author":{"gitId":"JeremyYong128"},"content":"                + PREFIX_JOB_TYPE) instanceof SortCommand);","lastModifiedDate":"2023-10-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"evanyan13":14,"-":63,"JeremyYong128":33}},{"path":"src/test/java/seedu/application/logic/parser/ArgumentTokenizerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"evanyan13"},"content":"package seedu.application.logic.parser;","lastModifiedDate":"2023-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class ArgumentTokenizerTest {","lastModifiedDate":"2016-10-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final Prefix unknownPrefix \u003d new Prefix(\"--u\");","lastModifiedDate":"2016-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private final Prefix pSlash \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final Prefix dashT \u003d new Prefix(\"-t\");","lastModifiedDate":"2016-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final Prefix hatQ \u003d new Prefix(\"^Q\");","lastModifiedDate":"2016-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void tokenize_emptyArgsString_noValues() {","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  \";","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private void assertPreamblePresent(ArgumentMultimap argMultimap, String expectedPreamble) {","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(expectedPreamble, argMultimap.getPreamble());","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private void assertPreambleEmpty(ArgumentMultimap argMultimap) {","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertTrue(argMultimap.getPreamble().isEmpty());","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Asserts all the arguments in {@code argMultimap} with {@code prefix} match the {@code expectedValues}","lastModifiedDate":"2017-08-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * and only the last value is returned upon calling {@code ArgumentMultimap#getValue(Prefix)}.","lastModifiedDate":"2017-08-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private void assertArgumentPresent(ArgumentMultimap argMultimap, Prefix prefix, String... expectedValues) {","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // Verify the last value is returned","lastModifiedDate":"2016-10-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(expectedValues[expectedValues.length - 1], argMultimap.getValue(prefix).get());","lastModifiedDate":"2017-06-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // Verify the number of values returned is as expected","lastModifiedDate":"2016-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(expectedValues.length, argMultimap.getAllValues(prefix).size());","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // Verify all values returned are as expected and in order","lastModifiedDate":"2016-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c expectedValues.length; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            assertEquals(expectedValues[i], argMultimap.getAllValues(prefix).get(i));","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private void assertArgumentAbsent(ArgumentMultimap argMultimap, Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(argMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void tokenize_noPrefixes_allTakenAsPreamble() {","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  some random string /t tag with leading and trailing spaces \";","lastModifiedDate":"2016-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString);","lastModifiedDate":"2017-03-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // Same string expected as preamble, but leading/trailing spaces should be trimmed","lastModifiedDate":"2016-10-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, argsString.trim());","lastModifiedDate":"2017-03-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void tokenize_oneArgument() {","lastModifiedDate":"2016-10-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // Preamble present","lastModifiedDate":"2016-10-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  Some preamble string p/ Argument value \";","lastModifiedDate":"2017-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"Some preamble string\");","lastModifiedDate":"2017-03-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // No preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        argsString \u003d \" p/   Argument value \";","lastModifiedDate":"2017-03-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArguments() {","lastModifiedDate":"2016-10-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // Only two arguments are present","lastModifiedDate":"2016-10-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleString -t dashT-Value p/pSlash value\";","lastModifiedDate":"2017-03-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2017-03-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2017-03-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // All three arguments are present","lastModifiedDate":"2017-05-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        argsString \u003d \"Different Preamble String ^Q111 -t dashT-Value p/pSlash value\";","lastModifiedDate":"2017-03-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"Different Preamble String\");","lastModifiedDate":"2017-03-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, hatQ, \"111\");","lastModifiedDate":"2017-03-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        /* Also covers: Reusing of the tokenizer multiple times */","lastModifiedDate":"2016-10-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // Reuse tokenizer on an empty string to ensure ArgumentMultimap is correctly reset","lastModifiedDate":"2017-03-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // (i.e. no stale values from the previous tokenizing remain)","lastModifiedDate":"2017-03-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        argsString \u003d \"\";","lastModifiedDate":"2017-03-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-03-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        /* Also covers: testing for prefixes not specified as a prefix */","lastModifiedDate":"2020-05-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // Prefixes not previously given to the tokenizer should not return any values","lastModifiedDate":"2016-10-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        argsString \u003d unknownPrefix + \"some value\";","lastModifiedDate":"2017-05-09"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, unknownPrefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, argsString); // Unknown prefix is taken as part of preamble","lastModifiedDate":"2017-03-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArgumentsWithRepeats() {","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // Two arguments repeated, some have empty values","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleString -t dashT-Value ^Q ^Q -t another dashT value p/ pSlash value -t\";","lastModifiedDate":"2017-03-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2017-03-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\", \"another dashT value\", \"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, hatQ, \"\", \"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArgumentsJoined() {","lastModifiedDate":"2017-05-19"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleStringp/ pSlash joined-tjoined -t not joined^Qjoined\";","lastModifiedDate":"2017-05-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-05-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleStringp/ pSlash joined-tjoined\");","lastModifiedDate":"2017-05-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-05-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"not joined^Qjoined\");","lastModifiedDate":"2017-05-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2017-05-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public void equalsMethod() {","lastModifiedDate":"2016-10-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        Prefix aaa \u003d new Prefix(\"aaa\");","lastModifiedDate":"2016-10-16"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertEquals(aaa, aaa);","lastModifiedDate":"2016-10-16"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertEquals(aaa, new Prefix(\"aaa\"));","lastModifiedDate":"2016-10-16"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertNotEquals(aaa, \"aaa\");","lastModifiedDate":"2016-10-16"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertNotEquals(aaa, new Prefix(\"aab\"));","lastModifiedDate":"2016-10-16"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":150,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"evanyan13":1,"-":149}},{"path":"src/test/java/seedu/application/logic/parser/CommandParserTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"evanyan13"},"content":"package seedu.application.logic.parser;","lastModifiedDate":"2023-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"evanyan13"},"content":"import seedu.application.logic.commands.Command;","lastModifiedDate":"2023-10-10"},{"lineNumber":6,"author":{"gitId":"evanyan13"},"content":"import seedu.application.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-10"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Contains helper methods for testing command parsers.","lastModifiedDate":"2017-07-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class CommandParserTestUtil {","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is successful and the command created","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * equals to {@code expectedCommand}.","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static void assertParseSuccess(Parser\u003c? extends Command\u003e parser, String userInput,","lastModifiedDate":"2022-02-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"                                          Command expectedCommand) {","lastModifiedDate":"2022-02-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            Command command \u003d parser.parse(userInput);","lastModifiedDate":"2017-07-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommand, command);","lastModifiedDate":"2017-07-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(\"Invalid userInput.\", pe);","lastModifiedDate":"2017-08-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is unsuccessful and the error message","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * equals to {@code expectedMessage}.","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static void assertParseFailure(Parser\u003c? extends Command\u003e parser, String userInput, String expectedMessage) {","lastModifiedDate":"2022-02-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-07-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            parser.parse(userInput);","lastModifiedDate":"2017-07-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"The expected ParseException was not thrown.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2017-07-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            assertEquals(expectedMessage, pe.getMessage());","lastModifiedDate":"2017-07-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-06"}],"authorContributionMap":{"evanyan13":3,"-":36}},{"path":"src/test/java/seedu/application/logic/parser/DeleteCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"evanyan13"},"content":"package seedu.application.logic.parser;","lastModifiedDate":"2023-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"evanyan13"},"content":"import static seedu.application.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-10"},{"lineNumber":4,"author":{"gitId":"evanyan13"},"content":"import static seedu.application.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-10-10"},{"lineNumber":5,"author":{"gitId":"evanyan13"},"content":"import static seedu.application.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-10-10"},{"lineNumber":6,"author":{"gitId":"evanyan13"},"content":"import static seedu.application.testutil.TypicalIndexes.INDEX_FIRST_JOB;","lastModifiedDate":"2023-10-10"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":10,"author":{"gitId":"evanyan13"},"content":"import seedu.application.logic.commands.DeleteCommand;","lastModifiedDate":"2023-10-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2017-06-09"},{"lineNumber":14,"author":{"gitId":"migfoo02"},"content":" * outside the DeleteCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2023-10-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * same path through the DeleteCommand, and therefore we test only one of them.","lastModifiedDate":"2017-06-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2017-06-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2017-06-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class DeleteCommandParserTest {","lastModifiedDate":"2017-06-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private DeleteCommandParser parser \u003d new DeleteCommandParser();","lastModifiedDate":"2017-06-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"JeremyYong128"},"content":"        assertParseSuccess(parser, \"1\", new DeleteCommand(INDEX_FIRST_JOB));","lastModifiedDate":"2023-10-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"evanyan13":6,"-":24,"JeremyYong128":1,"migfoo02":1}},{"path":"src/test/java/seedu/application/logic/parser/EditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"evanyan13"},"content":"package seedu.application.logic.parser;","lastModifiedDate":"2023-10-10"},{"lineNumber":2,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":3,"author":{"gitId":"evanyan13"},"content":"import static seedu.application.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-10"},{"lineNumber":4,"author":{"gitId":"evanyan13"},"content":"import static seedu.application.logic.commands.CommandTestUtil.COMPANY_DESC_CHEF;","lastModifiedDate":"2023-10-10"},{"lineNumber":5,"author":{"gitId":"evanyan13"},"content":"import static seedu.application.logic.commands.CommandTestUtil.COMPANY_DESC_CLEANER;","lastModifiedDate":"2023-10-10"},{"lineNumber":6,"author":{"gitId":"evanyan13"},"content":"import static seedu.application.logic.commands.CommandTestUtil.INVALID_COMPANY_DESC;","lastModifiedDate":"2023-10-10"},{"lineNumber":7,"author":{"gitId":"evanyan13"},"content":"import static seedu.application.logic.commands.CommandTestUtil.INVALID_ROLE_DESC;","lastModifiedDate":"2023-10-10"},{"lineNumber":8,"author":{"gitId":"evanyan13"},"content":"import static seedu.application.logic.commands.CommandTestUtil.ROLE_DESC_CHEF;","lastModifiedDate":"2023-10-10"},{"lineNumber":9,"author":{"gitId":"evanyan13"},"content":"import static seedu.application.logic.commands.CommandTestUtil.VALID_COMPANY_CHEF;","lastModifiedDate":"2023-10-10"},{"lineNumber":10,"author":{"gitId":"evanyan13"},"content":"import static seedu.application.logic.commands.CommandTestUtil.VALID_COMPANY_CLEANER;","lastModifiedDate":"2023-10-10"},{"lineNumber":11,"author":{"gitId":"evanyan13"},"content":"import static seedu.application.logic.commands.CommandTestUtil.VALID_ROLE_CHEF;","lastModifiedDate":"2023-10-10"},{"lineNumber":12,"author":{"gitId":"evanyan13"},"content":"import static seedu.application.logic.parser.CliSyntax.PREFIX_COMPANY;","lastModifiedDate":"2023-10-10"},{"lineNumber":13,"author":{"gitId":"evanyan13"},"content":"import static seedu.application.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-10-10"},{"lineNumber":14,"author":{"gitId":"evanyan13"},"content":"import static seedu.application.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-10-10"},{"lineNumber":15,"author":{"gitId":"evanyan13"},"content":"import static seedu.application.testutil.TypicalIndexes.INDEX_FIRST_JOB;","lastModifiedDate":"2023-10-10"},{"lineNumber":16,"author":{"gitId":"evanyan13"},"content":"import static seedu.application.testutil.TypicalIndexes.INDEX_SECOND_JOB;","lastModifiedDate":"2023-10-10"},{"lineNumber":17,"author":{"gitId":"evanyan13"},"content":"import static seedu.application.testutil.TypicalIndexes.INDEX_THIRD_JOB;","lastModifiedDate":"2023-10-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":21,"author":{"gitId":"evanyan13"},"content":"import seedu.application.commons.core.index.Index;","lastModifiedDate":"2023-10-10"},{"lineNumber":22,"author":{"gitId":"evanyan13"},"content":"import seedu.application.logic.Messages;","lastModifiedDate":"2023-10-10"},{"lineNumber":23,"author":{"gitId":"evanyan13"},"content":"import seedu.application.logic.commands.EditCommand;","lastModifiedDate":"2023-10-10"},{"lineNumber":24,"author":{"gitId":"evanyan13"},"content":"import seedu.application.logic.commands.EditCommand.EditJobDescriptor;","lastModifiedDate":"2023-10-10"},{"lineNumber":25,"author":{"gitId":"evanyan13"},"content":"import seedu.application.model.job.Company;","lastModifiedDate":"2023-10-10"},{"lineNumber":26,"author":{"gitId":"evanyan13"},"content":"import seedu.application.model.job.Role;","lastModifiedDate":"2023-10-10"},{"lineNumber":27,"author":{"gitId":"evanyan13"},"content":"import seedu.application.testutil.EditJobDescriptorBuilder;","lastModifiedDate":"2023-10-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class EditCommandParserTest {","lastModifiedDate":"2017-05-04"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2017-05-04"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-05-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":34,"author":{"gitId":"migfoo02"},"content":"    private final EditCommandParser parser \u003d new EditCommandParser();","lastModifiedDate":"2023-10-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2017-05-04"},{"lineNumber":39,"author":{"gitId":"JeremyYong128"},"content":"        assertParseFailure(parser, VALID_ROLE_CHEF, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\", EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-07-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2017-06-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"JeremyYong128"},"content":"        assertParseFailure(parser, \"-5\" + ROLE_DESC_CHEF, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2017-06-06"},{"lineNumber":54,"author":{"gitId":"JeremyYong128"},"content":"        assertParseFailure(parser, \"0\" + ROLE_DESC_CHEF, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":60,"author":{"gitId":"czhiruo"},"content":"        assertParseFailure(parser, \"1 k/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":65,"author":{"gitId":"JeremyYong128"},"content":"        assertParseFailure(parser, \"1\" + INVALID_ROLE_DESC, Role.MESSAGE_CONSTRAINTS); // invalid role","lastModifiedDate":"2023-10-04"},{"lineNumber":66,"author":{"gitId":"JeremyYong128"},"content":"        assertParseFailure(parser, \"1\" + INVALID_COMPANY_DESC, Company.MESSAGE_CONSTRAINTS); // invalid company","lastModifiedDate":"2023-10-04"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":68,"author":{"gitId":"JeremyYong128"},"content":"        // invalid role followed by valid company","lastModifiedDate":"2023-10-04"},{"lineNumber":69,"author":{"gitId":"JeremyYong128"},"content":"        assertParseFailure(parser, \"1\" + INVALID_ROLE_DESC + COMPANY_DESC_CHEF, Role.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-04"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2017-05-04"},{"lineNumber":72,"author":{"gitId":"JeremyYong128"},"content":"        assertParseFailure(parser, \"1\" + INVALID_ROLE_DESC + INVALID_COMPANY_DESC,","lastModifiedDate":"2023-10-04"},{"lineNumber":73,"author":{"gitId":"JeremyYong128"},"content":"                Role.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-04"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":78,"author":{"gitId":"JeremyYong128"},"content":"        Index targetIndex \u003d INDEX_SECOND_JOB;","lastModifiedDate":"2023-10-04"},{"lineNumber":79,"author":{"gitId":"JeremyYong128"},"content":"        String userInput \u003d targetIndex.getOneBased() + COMPANY_DESC_CLEANER + ROLE_DESC_CHEF;","lastModifiedDate":"2023-10-04"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":81,"author":{"gitId":"JeremyYong128"},"content":"        EditJobDescriptor descriptor \u003d new EditJobDescriptorBuilder().withRole(VALID_ROLE_CHEF)","lastModifiedDate":"2023-10-04"},{"lineNumber":82,"author":{"gitId":"JeremyYong128"},"content":"                .withCompany(VALID_COMPANY_CLEANER).build();","lastModifiedDate":"2023-10-04"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":88,"author":{"gitId":"JeremyYong128"},"content":"    // To be implemented once more fields are added","lastModifiedDate":"2023-10-04"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":91,"author":{"gitId":"JeremyYong128"},"content":"        Index targetIndex \u003d INDEX_FIRST_JOB;","lastModifiedDate":"2023-10-04"},{"lineNumber":92,"author":{"gitId":"JeremyYong128"},"content":"        String userInput \u003d targetIndex.getOneBased() + COMPANY_DESC_CLEANER + ROLE_DESC_CHEF;","lastModifiedDate":"2023-10-04"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":94,"author":{"gitId":"JeremyYong128"},"content":"        EditJobDescriptor descriptor \u003d new EditJobDescriptorBuilder().withCompany(VALID_COMPANY_CLEANER)","lastModifiedDate":"2023-10-04"},{"lineNumber":95,"author":{"gitId":"JeremyYong128"},"content":"                .withRole(VALID_ROLE_CHEF).build();","lastModifiedDate":"2023-10-04"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":103,"author":{"gitId":"JeremyYong128"},"content":"        // role","lastModifiedDate":"2023-10-04"},{"lineNumber":104,"author":{"gitId":"JeremyYong128"},"content":"        Index targetIndex \u003d INDEX_THIRD_JOB;","lastModifiedDate":"2023-10-04"},{"lineNumber":105,"author":{"gitId":"JeremyYong128"},"content":"        String userInput \u003d targetIndex.getOneBased() + ROLE_DESC_CHEF;","lastModifiedDate":"2023-10-04"},{"lineNumber":106,"author":{"gitId":"JeremyYong128"},"content":"        EditJobDescriptor descriptor \u003d new EditJobDescriptorBuilder().withRole(VALID_ROLE_CHEF).build();","lastModifiedDate":"2023-10-04"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":110,"author":{"gitId":"JeremyYong128"},"content":"        // company","lastModifiedDate":"2023-10-04"},{"lineNumber":111,"author":{"gitId":"JeremyYong128"},"content":"        userInput \u003d targetIndex.getOneBased() + COMPANY_DESC_CHEF;","lastModifiedDate":"2023-10-04"},{"lineNumber":112,"author":{"gitId":"JeremyYong128"},"content":"        descriptor \u003d new EditJobDescriptorBuilder().withCompany(VALID_COMPANY_CHEF).build();","lastModifiedDate":"2023-10-04"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_failure() {","lastModifiedDate":"2023-07-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // More extensive testing of duplicate parameter detections is done in","lastModifiedDate":"2023-07-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // AddCommandParserTest#parse_repeatedNonTagValue_failure()","lastModifiedDate":"2023-07-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        // valid followed by invalid","lastModifiedDate":"2023-07-14"},{"lineNumber":124,"author":{"gitId":"JeremyYong128"},"content":"        Index targetIndex \u003d INDEX_THIRD_JOB;","lastModifiedDate":"2023-10-04"},{"lineNumber":125,"author":{"gitId":"JeremyYong128"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_COMPANY_DESC + COMPANY_DESC_CLEANER;","lastModifiedDate":"2023-10-04"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":127,"author":{"gitId":"JeremyYong128"},"content":"        assertParseFailure(parser, userInput, Messages.getErrorMessageForDuplicatePrefixes(PREFIX_COMPANY));","lastModifiedDate":"2023-10-04"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        // invalid followed by valid","lastModifiedDate":"2023-07-14"},{"lineNumber":130,"author":{"gitId":"JeremyYong128"},"content":"        userInput \u003d targetIndex.getOneBased() + COMPANY_DESC_CLEANER + INVALID_COMPANY_DESC;","lastModifiedDate":"2023-10-04"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":132,"author":{"gitId":"JeremyYong128"},"content":"        assertParseFailure(parser, userInput, Messages.getErrorMessageForDuplicatePrefixes(PREFIX_COMPANY));","lastModifiedDate":"2023-10-04"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":134,"author":{"gitId":"migfoo02"},"content":"        // multiple valid fields repeated","lastModifiedDate":"2023-10-22"},{"lineNumber":135,"author":{"gitId":"JeremyYong128"},"content":"        userInput \u003d targetIndex.getOneBased() + COMPANY_DESC_CHEF + COMPANY_DESC_CHEF + COMPANY_DESC_CLEANER;","lastModifiedDate":"2023-10-04"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput,","lastModifiedDate":"2023-07-14"},{"lineNumber":138,"author":{"gitId":"JeremyYong128"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_COMPANY));","lastModifiedDate":"2023-10-04"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        // multiple invalid values","lastModifiedDate":"2023-07-14"},{"lineNumber":141,"author":{"gitId":"JeremyYong128"},"content":"        userInput \u003d targetIndex.getOneBased() + INVALID_COMPANY_DESC + INVALID_COMPANY_DESC;","lastModifiedDate":"2023-10-04"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput,","lastModifiedDate":"2023-07-14"},{"lineNumber":144,"author":{"gitId":"JeremyYong128"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_COMPANY));","lastModifiedDate":"2023-10-04"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":146,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"czhiruo":1,"evanyan13":24,"-":85,"JeremyYong128":34,"migfoo02":2}},{"path":"src/test/java/seedu/application/logic/parser/FindCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"evanyan13"},"content":"package seedu.application.logic.parser;","lastModifiedDate":"2023-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":3,"author":{"gitId":"evanyan13"},"content":"import static seedu.application.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-10"},{"lineNumber":4,"author":{"gitId":"JeremyYong128"},"content":"import static seedu.application.logic.parser.CliSyntax.PREFIX_COMPANY;","lastModifiedDate":"2023-10-31"},{"lineNumber":5,"author":{"gitId":"JeremyYong128"},"content":"import static seedu.application.logic.parser.CliSyntax.PREFIX_ROLE;","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"evanyan13"},"content":"import static seedu.application.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-10-10"},{"lineNumber":7,"author":{"gitId":"evanyan13"},"content":"import static seedu.application.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-10-10"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":13,"author":{"gitId":"evanyan13"},"content":"import seedu.application.logic.commands.FindCommand;","lastModifiedDate":"2023-10-10"},{"lineNumber":14,"author":{"gitId":"JeremyYong128"},"content":"import seedu.application.model.job.CombinedPredicate;","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"JeremyYong128"},"content":"import seedu.application.model.job.FieldContainsKeywordsPredicate;","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class FindCommandParserTest {","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"migfoo02"},"content":"    private final FindCommandParser parser \u003d new FindCommandParser();","lastModifiedDate":"2023-10-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"JeremyYong128"},"content":"        assertParseFailure(parser, \"     \",","lastModifiedDate":"2023-10-31"},{"lineNumber":24,"author":{"gitId":"JeremyYong128"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_EMPTY_KEYWORDS));","lastModifiedDate":"2023-10-31"},{"lineNumber":25,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":27,"author":{"gitId":"JeremyYong128"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":28,"author":{"gitId":"JeremyYong128"},"content":"    public void parse_emptyKeywords_throwsParseException() {","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"JeremyYong128"},"content":"        assertParseFailure(parser, \" \" + PREFIX_ROLE.toString(),","lastModifiedDate":"2023-10-31"},{"lineNumber":30,"author":{"gitId":"JeremyYong128"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_EMPTY_KEYWORDS));","lastModifiedDate":"2023-10-31"},{"lineNumber":31,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":32,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsFindCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2017-06-27"},{"lineNumber":36,"author":{"gitId":"JeremyYong128"},"content":"        FieldContainsKeywordsPredicate expectedFirstPredicate \u003d new FieldContainsKeywordsPredicate(","lastModifiedDate":"2023-10-26"},{"lineNumber":37,"author":{"gitId":"JeremyYong128"},"content":"                PREFIX_ROLE, Arrays.asList(\"Software\", \"Grass\"));","lastModifiedDate":"2023-10-26"},{"lineNumber":38,"author":{"gitId":"JeremyYong128"},"content":"        CombinedPredicate expectedCombinedPredicate \u003d new CombinedPredicate(Arrays.asList(expectedFirstPredicate));","lastModifiedDate":"2023-10-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        FindCommand expectedFindCommand \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"JeremyYong128"},"content":"                new FindCommand(expectedCombinedPredicate);","lastModifiedDate":"2023-10-26"},{"lineNumber":41,"author":{"gitId":"JeremyYong128"},"content":"        assertParseSuccess(parser, \" \" + PREFIX_ROLE + \" Software Grass\", expectedFindCommand);","lastModifiedDate":"2023-10-31"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"JeremyYong128"},"content":"        assertParseSuccess(parser, \" \"","lastModifiedDate":"2023-10-31"},{"lineNumber":45,"author":{"gitId":"JeremyYong128"},"content":"                + PREFIX_ROLE + \" \\n Software \\n \\t Grass  \\t\", expectedFindCommand);","lastModifiedDate":"2023-10-26"},{"lineNumber":46,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":47,"author":{"gitId":"JeremyYong128"},"content":"        // multiple prefixes","lastModifiedDate":"2023-10-31"},{"lineNumber":48,"author":{"gitId":"JeremyYong128"},"content":"        FieldContainsKeywordsPredicate expectedSecondPredicate \u003d new FieldContainsKeywordsPredicate(","lastModifiedDate":"2023-10-31"},{"lineNumber":49,"author":{"gitId":"JeremyYong128"},"content":"                PREFIX_COMPANY, Arrays.asList(\"Google\"));","lastModifiedDate":"2023-10-31"},{"lineNumber":50,"author":{"gitId":"JeremyYong128"},"content":"        expectedCombinedPredicate \u003d new CombinedPredicate(","lastModifiedDate":"2023-10-31"},{"lineNumber":51,"author":{"gitId":"JeremyYong128"},"content":"                Arrays.asList(expectedFirstPredicate, expectedSecondPredicate));","lastModifiedDate":"2023-10-31"},{"lineNumber":52,"author":{"gitId":"JeremyYong128"},"content":"        expectedFindCommand \u003d new FindCommand(expectedCombinedPredicate);","lastModifiedDate":"2023-10-31"},{"lineNumber":53,"author":{"gitId":"JeremyYong128"},"content":"        assertParseSuccess(parser, \" \" + PREFIX_ROLE + \"Software Grass \" + PREFIX_COMPANY + \"Google\",","lastModifiedDate":"2023-10-31"},{"lineNumber":54,"author":{"gitId":"JeremyYong128"},"content":"                expectedFindCommand);","lastModifiedDate":"2023-10-31"},{"lineNumber":55,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-27"}],"authorContributionMap":{"evanyan13":5,"-":21,"JeremyYong128":31,"migfoo02":1}},{"path":"src/test/java/seedu/application/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"evanyan13"},"content":"package seedu.application.logic.parser;","lastModifiedDate":"2023-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"evanyan13"},"content":"import static seedu.application.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2023-10-10"},{"lineNumber":5,"author":{"gitId":"evanyan13"},"content":"import static seedu.application.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-10"},{"lineNumber":6,"author":{"gitId":"evanyan13"},"content":"import static seedu.application.testutil.TypicalIndexes.INDEX_FIRST_JOB;","lastModifiedDate":"2023-10-10"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":10,"author":{"gitId":"evanyan13"},"content":"import seedu.application.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-10"},{"lineNumber":11,"author":{"gitId":"peiran18"},"content":"import seedu.application.model.job.*;","lastModifiedDate":"2023-10-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":14,"author":{"gitId":"JeremyYong128"},"content":"    private static final String INVALID_ROLE \u003d \"Softw@re Engineer\";","lastModifiedDate":"2023-10-04"},{"lineNumber":15,"author":{"gitId":"JeremyYong128"},"content":"    private static final String INVALID_COMPANY \u003d \"      \";","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"peiran18"},"content":"    private static final String INVALID_DEADLINE \u003d \"18 August\";","lastModifiedDate":"2023-10-22"},{"lineNumber":17,"author":{"gitId":"peiran18"},"content":"    private static final String INVALID_STATUS \u003d \"Submitted\";","lastModifiedDate":"2023-10-22"},{"lineNumber":18,"author":{"gitId":"peiran18"},"content":"    private static final String INVALID_JOBTYPE \u003d \"Intern\";","lastModifiedDate":"2023-10-22"},{"lineNumber":19,"author":{"gitId":"peiran18"},"content":"    private static final String INVALID_INDUSTRY \u003d \"$Finance\";","lastModifiedDate":"2023-10-22"},{"lineNumber":20,"author":{"gitId":"JeremyYong128"},"content":"    private static final String VALID_ROLE \u003d \"Software Engineer\";","lastModifiedDate":"2023-10-04"},{"lineNumber":21,"author":{"gitId":"JeremyYong128"},"content":"    private static final String VALID_COMPANY \u003d \"Google\";","lastModifiedDate":"2023-10-04"},{"lineNumber":22,"author":{"gitId":"peiran18"},"content":"    private static final String VALID_DEADLINE \u003d \"Dec 31 2030 1200\";","lastModifiedDate":"2023-10-22"},{"lineNumber":23,"author":{"gitId":"peiran18"},"content":"    private static final String VALID_STATUS \u003d \"Pending\";","lastModifiedDate":"2023-10-22"},{"lineNumber":24,"author":{"gitId":"peiran18"},"content":"    private static final String VALID_JOBTYPE \u003d \"INTERNSHIP\";","lastModifiedDate":"2023-10-22"},{"lineNumber":25,"author":{"gitId":"peiran18"},"content":"    private static final String VALID_INDUSTRY \u003d \"Finance\";","lastModifiedDate":"2023-10-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":42,"author":{"gitId":"JeremyYong128"},"content":"        assertEquals(INDEX_FIRST_JOB, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2023-10-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":45,"author":{"gitId":"JeremyYong128"},"content":"        assertEquals(INDEX_FIRST_JOB, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2023-10-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":49,"author":{"gitId":"JeremyYong128"},"content":"    public void parseRole_null_throwsNullPointerException() {","lastModifiedDate":"2023-10-04"},{"lineNumber":50,"author":{"gitId":"JeremyYong128"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseRole((String) null));","lastModifiedDate":"2023-10-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":54,"author":{"gitId":"JeremyYong128"},"content":"    public void parseRole_invalidValue_throwsParseException() {","lastModifiedDate":"2023-10-04"},{"lineNumber":55,"author":{"gitId":"JeremyYong128"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseRole(INVALID_ROLE));","lastModifiedDate":"2023-10-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":59,"author":{"gitId":"JeremyYong128"},"content":"    public void parseRole_validValueWithoutWhitespace_returnsRole() throws Exception {","lastModifiedDate":"2023-10-04"},{"lineNumber":60,"author":{"gitId":"JeremyYong128"},"content":"        Role expectedName \u003d new Role(VALID_ROLE);","lastModifiedDate":"2023-10-04"},{"lineNumber":61,"author":{"gitId":"JeremyYong128"},"content":"        assertEquals(expectedName, ParserUtil.parseRole(VALID_ROLE));","lastModifiedDate":"2023-10-04"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":65,"author":{"gitId":"JeremyYong128"},"content":"    public void parseRole_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2023-10-04"},{"lineNumber":66,"author":{"gitId":"JeremyYong128"},"content":"        String roleWithWhitespace \u003d WHITESPACE + VALID_ROLE + WHITESPACE;","lastModifiedDate":"2023-10-04"},{"lineNumber":67,"author":{"gitId":"JeremyYong128"},"content":"        Role expectedRole \u003d new Role(VALID_ROLE);","lastModifiedDate":"2023-10-04"},{"lineNumber":68,"author":{"gitId":"JeremyYong128"},"content":"        assertEquals(expectedRole, ParserUtil.parseRole(roleWithWhitespace));","lastModifiedDate":"2023-10-04"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":72,"author":{"gitId":"JeremyYong128"},"content":"    public void parseCompany_null_throwsNullPointerException() {","lastModifiedDate":"2023-10-04"},{"lineNumber":73,"author":{"gitId":"JeremyYong128"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseCompany((String) null));","lastModifiedDate":"2023-10-04"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":77,"author":{"gitId":"JeremyYong128"},"content":"    public void parseCompany_invalidValue_throwsParseException() {","lastModifiedDate":"2023-10-04"},{"lineNumber":78,"author":{"gitId":"JeremyYong128"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseCompany(INVALID_COMPANY));","lastModifiedDate":"2023-10-04"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":82,"author":{"gitId":"JeremyYong128"},"content":"    public void parseCompany_validValueWithoutWhitespace_returnsCompany() throws Exception {","lastModifiedDate":"2023-10-04"},{"lineNumber":83,"author":{"gitId":"JeremyYong128"},"content":"        Company expectedCompany \u003d new Company(VALID_COMPANY);","lastModifiedDate":"2023-10-04"},{"lineNumber":84,"author":{"gitId":"JeremyYong128"},"content":"        assertEquals(expectedCompany, ParserUtil.parseCompany(VALID_COMPANY));","lastModifiedDate":"2023-10-04"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":88,"author":{"gitId":"JeremyYong128"},"content":"    public void parseCompany_validValueWithWhitespace_returnsTrimmedCompany() throws Exception {","lastModifiedDate":"2023-10-04"},{"lineNumber":89,"author":{"gitId":"JeremyYong128"},"content":"        String companyWithWhitespace \u003d WHITESPACE + VALID_COMPANY + WHITESPACE;","lastModifiedDate":"2023-10-04"},{"lineNumber":90,"author":{"gitId":"JeremyYong128"},"content":"        Company expectedCompany \u003d new Company(VALID_COMPANY);","lastModifiedDate":"2023-10-04"},{"lineNumber":91,"author":{"gitId":"JeremyYong128"},"content":"        assertEquals(expectedCompany, ParserUtil.parseCompany(companyWithWhitespace));","lastModifiedDate":"2023-10-04"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"czhiruo"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":94,"author":{"gitId":"czhiruo"},"content":"    @Test","lastModifiedDate":"2023-10-22"},{"lineNumber":95,"author":{"gitId":"peiran18"},"content":"    public void parseDeadline_null_throwsNullPointerException() {","lastModifiedDate":"2023-10-22"},{"lineNumber":96,"author":{"gitId":"peiran18"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseDeadline((String) null));","lastModifiedDate":"2023-10-22"},{"lineNumber":97,"author":{"gitId":"peiran18"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":98,"author":{"gitId":"peiran18"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":99,"author":{"gitId":"peiran18"},"content":"    @Test","lastModifiedDate":"2023-10-22"},{"lineNumber":100,"author":{"gitId":"peiran18"},"content":"    public void parseDeadline_invalidValue_throwsParseException() {","lastModifiedDate":"2023-10-22"},{"lineNumber":101,"author":{"gitId":"peiran18"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseDeadline(INVALID_DEADLINE));","lastModifiedDate":"2023-10-22"},{"lineNumber":102,"author":{"gitId":"peiran18"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":103,"author":{"gitId":"peiran18"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":104,"author":{"gitId":"peiran18"},"content":"    @Test","lastModifiedDate":"2023-10-22"},{"lineNumber":105,"author":{"gitId":"peiran18"},"content":"    public void parseDeadline_validValueWithoutWhitespace_returnsDeadline() throws Exception {","lastModifiedDate":"2023-10-22"},{"lineNumber":106,"author":{"gitId":"peiran18"},"content":"        Deadline expectedDeadline \u003d new Deadline(VALID_DEADLINE);","lastModifiedDate":"2023-10-22"},{"lineNumber":107,"author":{"gitId":"peiran18"},"content":"        assertEquals(expectedDeadline, ParserUtil.parseDeadline(VALID_DEADLINE));","lastModifiedDate":"2023-10-22"},{"lineNumber":108,"author":{"gitId":"peiran18"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":109,"author":{"gitId":"peiran18"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":110,"author":{"gitId":"peiran18"},"content":"    @Test","lastModifiedDate":"2023-10-22"},{"lineNumber":111,"author":{"gitId":"peiran18"},"content":"    public void parseDeadline_validValueWithWhitespace_returnsTrimmedDeadline() throws Exception {","lastModifiedDate":"2023-10-22"},{"lineNumber":112,"author":{"gitId":"peiran18"},"content":"        String deadlineWithWhitespace \u003d WHITESPACE + VALID_DEADLINE + WHITESPACE;","lastModifiedDate":"2023-10-22"},{"lineNumber":113,"author":{"gitId":"peiran18"},"content":"        Deadline expectedDeadline \u003d new Deadline(VALID_DEADLINE);","lastModifiedDate":"2023-10-22"},{"lineNumber":114,"author":{"gitId":"peiran18"},"content":"        assertEquals(expectedDeadline, ParserUtil.parseDeadline(deadlineWithWhitespace));","lastModifiedDate":"2023-10-22"},{"lineNumber":115,"author":{"gitId":"peiran18"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":116,"author":{"gitId":"peiran18"},"content":"    @Test","lastModifiedDate":"2023-10-22"},{"lineNumber":117,"author":{"gitId":"peiran18"},"content":"    public void parseStatus_null_throwsNullPointerException() {","lastModifiedDate":"2023-10-22"},{"lineNumber":118,"author":{"gitId":"peiran18"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseStatus((String) null));","lastModifiedDate":"2023-10-22"},{"lineNumber":119,"author":{"gitId":"peiran18"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":120,"author":{"gitId":"peiran18"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":121,"author":{"gitId":"peiran18"},"content":"    @Test","lastModifiedDate":"2023-10-22"},{"lineNumber":122,"author":{"gitId":"peiran18"},"content":"    public void parseStatus_invalidValue_throwsParseException() {","lastModifiedDate":"2023-10-22"},{"lineNumber":123,"author":{"gitId":"peiran18"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseStatus(INVALID_STATUS));","lastModifiedDate":"2023-10-22"},{"lineNumber":124,"author":{"gitId":"peiran18"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":125,"author":{"gitId":"peiran18"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":126,"author":{"gitId":"peiran18"},"content":"    @Test","lastModifiedDate":"2023-10-22"},{"lineNumber":127,"author":{"gitId":"peiran18"},"content":"    public void parseStatus_validValueWithoutWhitespace_returnsStatus() throws Exception {","lastModifiedDate":"2023-10-22"},{"lineNumber":128,"author":{"gitId":"peiran18"},"content":"        Status expectedStatus \u003d new Status(VALID_STATUS);","lastModifiedDate":"2023-10-22"},{"lineNumber":129,"author":{"gitId":"peiran18"},"content":"        assertEquals(expectedStatus, ParserUtil.parseStatus(VALID_STATUS));","lastModifiedDate":"2023-10-22"},{"lineNumber":130,"author":{"gitId":"peiran18"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":131,"author":{"gitId":"peiran18"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":132,"author":{"gitId":"peiran18"},"content":"    @Test","lastModifiedDate":"2023-10-22"},{"lineNumber":133,"author":{"gitId":"peiran18"},"content":"    public void parseStatus_validValueWithWhitespace_returnsTrimmedStatus() throws Exception {","lastModifiedDate":"2023-10-22"},{"lineNumber":134,"author":{"gitId":"peiran18"},"content":"        String statusWithWhitespace \u003d WHITESPACE + VALID_STATUS + WHITESPACE;","lastModifiedDate":"2023-10-22"},{"lineNumber":135,"author":{"gitId":"peiran18"},"content":"        Status expectedStatus \u003d new Status(VALID_STATUS);","lastModifiedDate":"2023-10-22"},{"lineNumber":136,"author":{"gitId":"peiran18"},"content":"        assertEquals(expectedStatus, ParserUtil.parseStatus(statusWithWhitespace));","lastModifiedDate":"2023-10-22"},{"lineNumber":137,"author":{"gitId":"peiran18"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":138,"author":{"gitId":"peiran18"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":139,"author":{"gitId":"peiran18"},"content":"    @Test","lastModifiedDate":"2023-10-22"},{"lineNumber":140,"author":{"gitId":"peiran18"},"content":"    public void parseJobType_null_throwsNullPointerException() {","lastModifiedDate":"2023-10-22"},{"lineNumber":141,"author":{"gitId":"peiran18"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseJobType((String) null));","lastModifiedDate":"2023-10-22"},{"lineNumber":142,"author":{"gitId":"peiran18"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":143,"author":{"gitId":"peiran18"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":144,"author":{"gitId":"peiran18"},"content":"    @Test","lastModifiedDate":"2023-10-22"},{"lineNumber":145,"author":{"gitId":"peiran18"},"content":"    public void parseJobType_invalidValue_throwsParseException() {","lastModifiedDate":"2023-10-22"},{"lineNumber":146,"author":{"gitId":"peiran18"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseJobType(INVALID_JOBTYPE));","lastModifiedDate":"2023-10-22"},{"lineNumber":147,"author":{"gitId":"peiran18"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":148,"author":{"gitId":"peiran18"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":149,"author":{"gitId":"peiran18"},"content":"    @Test","lastModifiedDate":"2023-10-22"},{"lineNumber":150,"author":{"gitId":"peiran18"},"content":"    public void parseJobType_validValueWithoutWhitespace_returnsJobType() throws Exception {","lastModifiedDate":"2023-10-22"},{"lineNumber":151,"author":{"gitId":"peiran18"},"content":"        JobType expectedJobType \u003d new JobType(VALID_JOBTYPE);","lastModifiedDate":"2023-10-22"},{"lineNumber":152,"author":{"gitId":"peiran18"},"content":"        assertEquals(expectedJobType, ParserUtil.parseJobType(VALID_JOBTYPE));","lastModifiedDate":"2023-10-22"},{"lineNumber":153,"author":{"gitId":"peiran18"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":154,"author":{"gitId":"peiran18"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":155,"author":{"gitId":"peiran18"},"content":"    @Test","lastModifiedDate":"2023-10-22"},{"lineNumber":156,"author":{"gitId":"peiran18"},"content":"    public void parseJobType_validValueWithWhitespace_returnsTrimmedJobType() throws Exception {","lastModifiedDate":"2023-10-22"},{"lineNumber":157,"author":{"gitId":"peiran18"},"content":"        String jobTypeWithWhitespace \u003d WHITESPACE + VALID_JOBTYPE + WHITESPACE;","lastModifiedDate":"2023-10-22"},{"lineNumber":158,"author":{"gitId":"peiran18"},"content":"        JobType expectedJobType \u003d new JobType(VALID_JOBTYPE);","lastModifiedDate":"2023-10-22"},{"lineNumber":159,"author":{"gitId":"peiran18"},"content":"        assertEquals(expectedJobType, ParserUtil.parseJobType(jobTypeWithWhitespace));","lastModifiedDate":"2023-10-22"},{"lineNumber":160,"author":{"gitId":"peiran18"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":161,"author":{"gitId":"peiran18"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":162,"author":{"gitId":"peiran18"},"content":"    @Test","lastModifiedDate":"2023-10-22"},{"lineNumber":163,"author":{"gitId":"peiran18"},"content":"    public void parseIndustry_null_throwsNullPointerException() {","lastModifiedDate":"2023-10-22"},{"lineNumber":164,"author":{"gitId":"peiran18"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseIndustry((String) null));","lastModifiedDate":"2023-10-22"},{"lineNumber":165,"author":{"gitId":"peiran18"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":166,"author":{"gitId":"peiran18"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":167,"author":{"gitId":"peiran18"},"content":"    @Test","lastModifiedDate":"2023-10-22"},{"lineNumber":168,"author":{"gitId":"peiran18"},"content":"    public void parseIndustry_invalidValue_throwsParseException() {","lastModifiedDate":"2023-10-22"},{"lineNumber":169,"author":{"gitId":"czhiruo"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndustry(INVALID_INDUSTRY));","lastModifiedDate":"2023-10-22"},{"lineNumber":170,"author":{"gitId":"czhiruo"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":171,"author":{"gitId":"peiran18"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":172,"author":{"gitId":"peiran18"},"content":"    @Test","lastModifiedDate":"2023-10-22"},{"lineNumber":173,"author":{"gitId":"peiran18"},"content":"    public void parseIndustry_validValueWithoutWhitespace_returnsIndustry() throws Exception {","lastModifiedDate":"2023-10-22"},{"lineNumber":174,"author":{"gitId":"peiran18"},"content":"        Industry expectedIndustry \u003d new Industry(VALID_INDUSTRY);","lastModifiedDate":"2023-10-22"},{"lineNumber":175,"author":{"gitId":"peiran18"},"content":"        assertEquals(expectedIndustry, ParserUtil.parseIndustry(VALID_INDUSTRY));","lastModifiedDate":"2023-10-22"},{"lineNumber":176,"author":{"gitId":"peiran18"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":177,"author":{"gitId":"peiran18"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":178,"author":{"gitId":"peiran18"},"content":"    @Test","lastModifiedDate":"2023-10-22"},{"lineNumber":179,"author":{"gitId":"peiran18"},"content":"    public void parseIndustry_validValueWithWhitespace_returnsTrimmedIndustry() throws Exception {","lastModifiedDate":"2023-10-22"},{"lineNumber":180,"author":{"gitId":"peiran18"},"content":"        String industryWithWhitespace \u003d WHITESPACE + VALID_INDUSTRY + WHITESPACE;","lastModifiedDate":"2023-10-22"},{"lineNumber":181,"author":{"gitId":"peiran18"},"content":"        Industry expectedIndustry \u003d new Industry(VALID_INDUSTRY);","lastModifiedDate":"2023-10-22"},{"lineNumber":182,"author":{"gitId":"peiran18"},"content":"        assertEquals(expectedIndustry, ParserUtil.parseIndustry(industryWithWhitespace));","lastModifiedDate":"2023-10-22"},{"lineNumber":183,"author":{"gitId":"peiran18"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":184,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"czhiruo":4,"evanyan13":5,"peiran18":96,"-":51,"JeremyYong128":28}},{"path":"src/test/java/seedu/application/logic/parser/SortCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"peiran18"},"content":"package seedu.application.logic.parser;","lastModifiedDate":"2023-10-22"},{"lineNumber":2,"author":{"gitId":"peiran18"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":3,"author":{"gitId":"peiran18"},"content":"import static seedu.application.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-22"},{"lineNumber":4,"author":{"gitId":"JeremyYong128"},"content":"import static seedu.application.logic.parser.CliSyntax.PREFIX_COMPANY;","lastModifiedDate":"2023-10-27"},{"lineNumber":5,"author":{"gitId":"JeremyYong128"},"content":"import static seedu.application.logic.parser.CliSyntax.PREFIX_STATUS;","lastModifiedDate":"2023-10-27"},{"lineNumber":6,"author":{"gitId":"peiran18"},"content":"import static seedu.application.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-10-22"},{"lineNumber":7,"author":{"gitId":"peiran18"},"content":"import static seedu.application.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-10-22"},{"lineNumber":8,"author":{"gitId":"peiran18"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":9,"author":{"gitId":"peiran18"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-22"},{"lineNumber":10,"author":{"gitId":"peiran18"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":11,"author":{"gitId":"JeremyYong128"},"content":"import seedu.application.logic.commands.SortCommand;","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"peiran18"},"content":"import seedu.application.model.job.FieldComparator;","lastModifiedDate":"2023-10-22"},{"lineNumber":13,"author":{"gitId":"peiran18"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":14,"author":{"gitId":"JeremyYong128"},"content":"public class SortCommandParserTest {","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"peiran18"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":16,"author":{"gitId":"JeremyYong128"},"content":"    private final SortCommandParser parser \u003d new SortCommandParser();","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"peiran18"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":18,"author":{"gitId":"peiran18"},"content":"    @Test","lastModifiedDate":"2023-10-22"},{"lineNumber":19,"author":{"gitId":"peiran18"},"content":"    public void parse_invalidArgs_throwParseException() {","lastModifiedDate":"2023-10-22"},{"lineNumber":20,"author":{"gitId":"JeremyYong128"},"content":"        // extra characters after \"sort\" that are no specifiers","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"peiran18"},"content":"        assertParseFailure(parser, \"by role\",","lastModifiedDate":"2023-10-22"},{"lineNumber":22,"author":{"gitId":"JeremyYong128"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, SortCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"peiran18"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":24,"author":{"gitId":"peiran18"},"content":"        // more than one specifier","lastModifiedDate":"2023-10-22"},{"lineNumber":25,"author":{"gitId":"JeremyYong128"},"content":"        assertParseFailure(parser, PREFIX_COMPANY + \" \" + PREFIX_STATUS,","lastModifiedDate":"2023-10-27"},{"lineNumber":26,"author":{"gitId":"JeremyYong128"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, SortCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-26"},{"lineNumber":27,"author":{"gitId":"peiran18"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":28,"author":{"gitId":"peiran18"},"content":"        // invalid specifier","lastModifiedDate":"2023-10-22"},{"lineNumber":29,"author":{"gitId":"JeremyYong128"},"content":"        assertParseFailure(parser, \"b/\",","lastModifiedDate":"2023-10-27"},{"lineNumber":30,"author":{"gitId":"JeremyYong128"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, SortCommand.MESSAGE_INVALID_SPECIFIER));","lastModifiedDate":"2023-10-26"},{"lineNumber":31,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":32,"author":{"gitId":"JeremyYong128"},"content":"        // no arguments","lastModifiedDate":"2023-10-26"},{"lineNumber":33,"author":{"gitId":"JeremyYong128"},"content":"        assertParseFailure(parser, \"\",","lastModifiedDate":"2023-10-26"},{"lineNumber":34,"author":{"gitId":"JeremyYong128"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, SortCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-26"},{"lineNumber":35,"author":{"gitId":"peiran18"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":36,"author":{"gitId":"peiran18"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":37,"author":{"gitId":"peiran18"},"content":"    @Test","lastModifiedDate":"2023-10-22"},{"lineNumber":38,"author":{"gitId":"peiran18"},"content":"    public void parse_validArgs_returnsListCommand() {","lastModifiedDate":"2023-10-22"},{"lineNumber":39,"author":{"gitId":"JeremyYong128"},"content":"        FieldComparator fieldComparator \u003d new FieldComparator(PREFIX_COMPANY);","lastModifiedDate":"2023-10-27"},{"lineNumber":40,"author":{"gitId":"JeremyYong128"},"content":"        SortCommand expectedCommand \u003d new SortCommand(fieldComparator);","lastModifiedDate":"2023-10-26"},{"lineNumber":41,"author":{"gitId":"JeremyYong128"},"content":"        assertParseSuccess(parser, PREFIX_COMPANY.toString(), expectedCommand);","lastModifiedDate":"2023-10-27"},{"lineNumber":42,"author":{"gitId":"peiran18"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":43,"author":{"gitId":"peiran18"},"content":"}","lastModifiedDate":"2023-10-22"}],"authorContributionMap":{"peiran18":25,"JeremyYong128":18}},{"path":"src/test/java/seedu/application/model/ApplicationBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"evanyan13"},"content":"package seedu.application.model;","lastModifiedDate":"2023-10-10"},{"lineNumber":2,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":3,"author":{"gitId":"evanyan13"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-10"},{"lineNumber":4,"author":{"gitId":"evanyan13"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-10"},{"lineNumber":5,"author":{"gitId":"evanyan13"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-10"},{"lineNumber":6,"author":{"gitId":"evanyan13"},"content":"import static seedu.application.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-10"},{"lineNumber":7,"author":{"gitId":"evanyan13"},"content":"import static seedu.application.testutil.TypicalJobs.CHEF;","lastModifiedDate":"2023-10-10"},{"lineNumber":8,"author":{"gitId":"evanyan13"},"content":"import static seedu.application.testutil.TypicalJobs.getTypicalApplicationBook;","lastModifiedDate":"2023-10-10"},{"lineNumber":9,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":10,"author":{"gitId":"evanyan13"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-10"},{"lineNumber":11,"author":{"gitId":"evanyan13"},"content":"import java.util.Collection;","lastModifiedDate":"2023-10-10"},{"lineNumber":12,"author":{"gitId":"evanyan13"},"content":"import java.util.Collections;","lastModifiedDate":"2023-10-10"},{"lineNumber":13,"author":{"gitId":"evanyan13"},"content":"import java.util.List;","lastModifiedDate":"2023-10-10"},{"lineNumber":14,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":15,"author":{"gitId":"evanyan13"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-10"},{"lineNumber":16,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":17,"author":{"gitId":"evanyan13"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-10-10"},{"lineNumber":18,"author":{"gitId":"evanyan13"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-10-10"},{"lineNumber":19,"author":{"gitId":"evanyan13"},"content":"import seedu.application.model.job.Job;","lastModifiedDate":"2023-10-10"},{"lineNumber":20,"author":{"gitId":"evanyan13"},"content":"import seedu.application.model.job.exceptions.DuplicateJobException;","lastModifiedDate":"2023-10-10"},{"lineNumber":21,"author":{"gitId":"evanyan13"},"content":"import seedu.application.testutil.JobBuilder;","lastModifiedDate":"2023-10-10"},{"lineNumber":22,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":23,"author":{"gitId":"evanyan13"},"content":"public class ApplicationBookTest {","lastModifiedDate":"2023-10-10"},{"lineNumber":24,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":25,"author":{"gitId":"evanyan13"},"content":"    private final ApplicationBook applicationBook \u003d new ApplicationBook();","lastModifiedDate":"2023-10-10"},{"lineNumber":26,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":27,"author":{"gitId":"evanyan13"},"content":"    @Test","lastModifiedDate":"2023-10-10"},{"lineNumber":28,"author":{"gitId":"evanyan13"},"content":"    public void constructor() {","lastModifiedDate":"2023-10-10"},{"lineNumber":29,"author":{"gitId":"evanyan13"},"content":"        assertEquals(Collections.emptyList(), applicationBook.getJobList());","lastModifiedDate":"2023-10-10"},{"lineNumber":30,"author":{"gitId":"evanyan13"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":31,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":32,"author":{"gitId":"evanyan13"},"content":"    @Test","lastModifiedDate":"2023-10-10"},{"lineNumber":33,"author":{"gitId":"evanyan13"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2023-10-10"},{"lineNumber":34,"author":{"gitId":"evanyan13"},"content":"        assertThrows(NullPointerException.class, () -\u003e applicationBook.resetData(null));","lastModifiedDate":"2023-10-10"},{"lineNumber":35,"author":{"gitId":"evanyan13"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":36,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":37,"author":{"gitId":"evanyan13"},"content":"    @Test","lastModifiedDate":"2023-10-10"},{"lineNumber":38,"author":{"gitId":"evanyan13"},"content":"    public void resetData_withValidReadOnlyApplicationBook_replacesData() {","lastModifiedDate":"2023-10-10"},{"lineNumber":39,"author":{"gitId":"evanyan13"},"content":"        ApplicationBook newData \u003d getTypicalApplicationBook();","lastModifiedDate":"2023-10-10"},{"lineNumber":40,"author":{"gitId":"evanyan13"},"content":"        applicationBook.resetData(newData);","lastModifiedDate":"2023-10-10"},{"lineNumber":41,"author":{"gitId":"evanyan13"},"content":"        assertEquals(newData, applicationBook);","lastModifiedDate":"2023-10-10"},{"lineNumber":42,"author":{"gitId":"evanyan13"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":43,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":44,"author":{"gitId":"evanyan13"},"content":"    // To be implemented when non-identity fields are created","lastModifiedDate":"2023-10-10"},{"lineNumber":45,"author":{"gitId":"evanyan13"},"content":"    @Test","lastModifiedDate":"2023-10-10"},{"lineNumber":46,"author":{"gitId":"evanyan13"},"content":"    public void resetData_withDuplicateJobs_throwsDuplicateJobException() {","lastModifiedDate":"2023-10-10"},{"lineNumber":47,"author":{"gitId":"evanyan13"},"content":"        // Two jobs with the same identity fields","lastModifiedDate":"2023-10-10"},{"lineNumber":48,"author":{"gitId":"evanyan13"},"content":"        Job editedChef \u003d new JobBuilder(CHEF).build();","lastModifiedDate":"2023-10-10"},{"lineNumber":49,"author":{"gitId":"evanyan13"},"content":"        List\u003cJob\u003e newJobs \u003d Arrays.asList(CHEF, editedChef);","lastModifiedDate":"2023-10-10"},{"lineNumber":50,"author":{"gitId":"evanyan13"},"content":"        ApplicationBookStub newData \u003d new ApplicationBookStub(newJobs);","lastModifiedDate":"2023-10-10"},{"lineNumber":51,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":52,"author":{"gitId":"evanyan13"},"content":"        assertThrows(DuplicateJobException.class, () -\u003e applicationBook.resetData(newData));","lastModifiedDate":"2023-10-10"},{"lineNumber":53,"author":{"gitId":"evanyan13"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":54,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":55,"author":{"gitId":"evanyan13"},"content":"    @Test","lastModifiedDate":"2023-10-10"},{"lineNumber":56,"author":{"gitId":"evanyan13"},"content":"    public void hasJob_nullJob_throwsNullPointerException() {","lastModifiedDate":"2023-10-10"},{"lineNumber":57,"author":{"gitId":"evanyan13"},"content":"        assertThrows(NullPointerException.class, () -\u003e applicationBook.hasJob(null));","lastModifiedDate":"2023-10-10"},{"lineNumber":58,"author":{"gitId":"evanyan13"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":59,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":60,"author":{"gitId":"evanyan13"},"content":"    @Test","lastModifiedDate":"2023-10-10"},{"lineNumber":61,"author":{"gitId":"evanyan13"},"content":"    public void hasJob_jobNotInApplicationBook_returnsFalse() {","lastModifiedDate":"2023-10-10"},{"lineNumber":62,"author":{"gitId":"evanyan13"},"content":"        assertFalse(applicationBook.hasJob(CHEF));","lastModifiedDate":"2023-10-10"},{"lineNumber":63,"author":{"gitId":"evanyan13"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":64,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":65,"author":{"gitId":"evanyan13"},"content":"    @Test","lastModifiedDate":"2023-10-10"},{"lineNumber":66,"author":{"gitId":"evanyan13"},"content":"    public void hasJob_jobInApplicationBook_returnsTrue() {","lastModifiedDate":"2023-10-10"},{"lineNumber":67,"author":{"gitId":"evanyan13"},"content":"        applicationBook.addJob(CHEF);","lastModifiedDate":"2023-10-10"},{"lineNumber":68,"author":{"gitId":"evanyan13"},"content":"        assertTrue(applicationBook.hasJob(CHEF));","lastModifiedDate":"2023-10-10"},{"lineNumber":69,"author":{"gitId":"evanyan13"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":70,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":71,"author":{"gitId":"evanyan13"},"content":"    // To be implemented when non-identity fields are created","lastModifiedDate":"2023-10-10"},{"lineNumber":72,"author":{"gitId":"evanyan13"},"content":"    @Test","lastModifiedDate":"2023-10-10"},{"lineNumber":73,"author":{"gitId":"evanyan13"},"content":"    public void hasJob_jobWithSameIdentityFieldsInApplicationBook_returnsTrue() {","lastModifiedDate":"2023-10-10"},{"lineNumber":74,"author":{"gitId":"evanyan13"},"content":"        applicationBook.addJob(CHEF);","lastModifiedDate":"2023-10-10"},{"lineNumber":75,"author":{"gitId":"evanyan13"},"content":"        Job editedChef \u003d new JobBuilder(CHEF).build();","lastModifiedDate":"2023-10-10"},{"lineNumber":76,"author":{"gitId":"evanyan13"},"content":"        assertTrue(applicationBook.hasJob(editedChef));","lastModifiedDate":"2023-10-10"},{"lineNumber":77,"author":{"gitId":"evanyan13"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":78,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":79,"author":{"gitId":"evanyan13"},"content":"    @Test","lastModifiedDate":"2023-10-10"},{"lineNumber":80,"author":{"gitId":"evanyan13"},"content":"    public void getJobList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-10-10"},{"lineNumber":81,"author":{"gitId":"evanyan13"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e applicationBook.getJobList().remove(0));","lastModifiedDate":"2023-10-10"},{"lineNumber":82,"author":{"gitId":"evanyan13"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":83,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":84,"author":{"gitId":"evanyan13"},"content":"    @Test","lastModifiedDate":"2023-10-10"},{"lineNumber":85,"author":{"gitId":"evanyan13"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-10"},{"lineNumber":86,"author":{"gitId":"evanyan13"},"content":"        String expected \u003d ApplicationBook.class.getCanonicalName() + \"{jobs\u003d\" + applicationBook.getJobList() + \"}\";","lastModifiedDate":"2023-10-10"},{"lineNumber":87,"author":{"gitId":"evanyan13"},"content":"        assertEquals(expected, applicationBook.toString());","lastModifiedDate":"2023-10-10"},{"lineNumber":88,"author":{"gitId":"evanyan13"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":89,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":90,"author":{"gitId":"czhiruo"},"content":"    @Test","lastModifiedDate":"2023-10-28"},{"lineNumber":91,"author":{"gitId":"czhiruo"},"content":"    void testEquals() {","lastModifiedDate":"2023-10-28"},{"lineNumber":92,"author":{"gitId":"czhiruo"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-28"},{"lineNumber":93,"author":{"gitId":"czhiruo"},"content":"        assertTrue(applicationBook.equals(applicationBook));","lastModifiedDate":"2023-10-28"},{"lineNumber":94,"author":{"gitId":"czhiruo"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":95,"author":{"gitId":"czhiruo"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-28"},{"lineNumber":96,"author":{"gitId":"czhiruo"},"content":"        assertFalse(applicationBook.equals(null));","lastModifiedDate":"2023-10-28"},{"lineNumber":97,"author":{"gitId":"czhiruo"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":98,"author":{"gitId":"czhiruo"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":99,"author":{"gitId":"evanyan13"},"content":"    /**","lastModifiedDate":"2023-10-10"},{"lineNumber":100,"author":{"gitId":"evanyan13"},"content":"     * A stub ReadOnlyApplicationBook whose jobs list can violate interface constraints.","lastModifiedDate":"2023-10-10"},{"lineNumber":101,"author":{"gitId":"evanyan13"},"content":"     */","lastModifiedDate":"2023-10-10"},{"lineNumber":102,"author":{"gitId":"evanyan13"},"content":"    private static class ApplicationBookStub implements ReadOnlyApplicationBook {","lastModifiedDate":"2023-10-10"},{"lineNumber":103,"author":{"gitId":"evanyan13"},"content":"        private final ObservableList\u003cJob\u003e jobs \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-10-10"},{"lineNumber":104,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":105,"author":{"gitId":"evanyan13"},"content":"        ApplicationBookStub(Collection\u003cJob\u003e jobs) {","lastModifiedDate":"2023-10-10"},{"lineNumber":106,"author":{"gitId":"evanyan13"},"content":"            this.jobs.setAll(jobs);","lastModifiedDate":"2023-10-10"},{"lineNumber":107,"author":{"gitId":"evanyan13"},"content":"        }","lastModifiedDate":"2023-10-10"},{"lineNumber":108,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":109,"author":{"gitId":"evanyan13"},"content":"        @Override","lastModifiedDate":"2023-10-10"},{"lineNumber":110,"author":{"gitId":"evanyan13"},"content":"        public ObservableList\u003cJob\u003e getJobList() {","lastModifiedDate":"2023-10-10"},{"lineNumber":111,"author":{"gitId":"evanyan13"},"content":"            return jobs;","lastModifiedDate":"2023-10-10"},{"lineNumber":112,"author":{"gitId":"evanyan13"},"content":"        }","lastModifiedDate":"2023-10-10"},{"lineNumber":113,"author":{"gitId":"evanyan13"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":114,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":115,"author":{"gitId":"evanyan13"},"content":"}","lastModifiedDate":"2023-10-10"}],"authorContributionMap":{"czhiruo":9,"evanyan13":106}},{"path":"src/test/java/seedu/application/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"evanyan13"},"content":"package seedu.application.model;","lastModifiedDate":"2023-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"migfoo02"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2023-10-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"evanyan13"},"content":"import static seedu.application.model.Model.PREDICATE_SHOW_ALL_JOBS;","lastModifiedDate":"2023-10-10"},{"lineNumber":8,"author":{"gitId":"evanyan13"},"content":"import static seedu.application.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-10"},{"lineNumber":9,"author":{"gitId":"evanyan13"},"content":"import static seedu.application.testutil.TypicalJobs.CHEF;","lastModifiedDate":"2023-10-10"},{"lineNumber":10,"author":{"gitId":"evanyan13"},"content":"import static seedu.application.testutil.TypicalJobs.CLEANER;","lastModifiedDate":"2023-10-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":18,"author":{"gitId":"evanyan13"},"content":"import seedu.application.commons.core.GuiSettings;","lastModifiedDate":"2023-10-10"},{"lineNumber":19,"author":{"gitId":"JeremyYong128"},"content":"import seedu.application.logic.parser.CliSyntax;","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"JeremyYong128"},"content":"import seedu.application.model.job.FieldContainsKeywordsPredicate;","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"evanyan13"},"content":"import seedu.application.testutil.ApplicationBookBuilder;","lastModifiedDate":"2023-10-10"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"evanyan13"},"content":"        assertEquals(new ApplicationBook(), new ApplicationBook(modelManager.getApplicationBook()));","lastModifiedDate":"2023-10-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"evanyan13"},"content":"        userPrefs.setApplicationBookFilePath(Paths.get(\"application/book/file/path\"));","lastModifiedDate":"2023-10-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":49,"author":{"gitId":"evanyan13"},"content":"        userPrefs.setApplicationBookFilePath(Paths.get(\"new/application/book/file/path\"));","lastModifiedDate":"2023-10-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"evanyan13"},"content":"    public void setApplicationBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2023-10-10"},{"lineNumber":67,"author":{"gitId":"evanyan13"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setApplicationBookFilePath(null));","lastModifiedDate":"2023-10-10"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"evanyan13"},"content":"    public void setApplicationBookFilePath_validPath_setsApplicationBookFilePath() {","lastModifiedDate":"2023-10-10"},{"lineNumber":72,"author":{"gitId":"evanyan13"},"content":"        Path path \u003d Paths.get(\"application/book/file/path\");","lastModifiedDate":"2023-10-10"},{"lineNumber":73,"author":{"gitId":"evanyan13"},"content":"        modelManager.setApplicationBookFilePath(path);","lastModifiedDate":"2023-10-10"},{"lineNumber":74,"author":{"gitId":"evanyan13"},"content":"        assertEquals(path, modelManager.getApplicationBookFilePath());","lastModifiedDate":"2023-10-10"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"JeremyYong128"},"content":"    public void hasJob_nullJob_throwsNullPointerException() {","lastModifiedDate":"2023-10-04"},{"lineNumber":79,"author":{"gitId":"JeremyYong128"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasJob(null));","lastModifiedDate":"2023-10-04"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"evanyan13"},"content":"    public void hasJob_jobNotInApplicationBook_returnsFalse() {","lastModifiedDate":"2023-10-10"},{"lineNumber":84,"author":{"gitId":"JeremyYong128"},"content":"        assertFalse(modelManager.hasJob(CHEF));","lastModifiedDate":"2023-10-04"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":88,"author":{"gitId":"evanyan13"},"content":"    public void hasJob_jobInApplicationBook_returnsTrue() {","lastModifiedDate":"2023-10-10"},{"lineNumber":89,"author":{"gitId":"JeremyYong128"},"content":"        modelManager.addJob(CHEF);","lastModifiedDate":"2023-10-04"},{"lineNumber":90,"author":{"gitId":"JeremyYong128"},"content":"        assertTrue(modelManager.hasJob(CHEF));","lastModifiedDate":"2023-10-04"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":94,"author":{"gitId":"JeremyYong128"},"content":"    public void getFilteredJobList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-10-04"},{"lineNumber":95,"author":{"gitId":"JeremyYong128"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredJobList().remove(0));","lastModifiedDate":"2023-10-04"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":100,"author":{"gitId":"evanyan13"},"content":"        ApplicationBook applicationBook \u003d new ApplicationBookBuilder().withJob(CHEF).withJob(CLEANER).build();","lastModifiedDate":"2023-10-10"},{"lineNumber":101,"author":{"gitId":"evanyan13"},"content":"        ApplicationBook differentApplicationBook \u003d new ApplicationBook();","lastModifiedDate":"2023-10-10"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":105,"author":{"gitId":"evanyan13"},"content":"        modelManager \u003d new ModelManager(applicationBook, userPrefs);","lastModifiedDate":"2023-10-10"},{"lineNumber":106,"author":{"gitId":"evanyan13"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(applicationBook, userPrefs);","lastModifiedDate":"2023-10-10"},{"lineNumber":107,"author":{"gitId":"migfoo02"},"content":"        assertEquals(modelManager, modelManagerCopy);","lastModifiedDate":"2023-10-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":110,"author":{"gitId":"migfoo02"},"content":"        assertEquals(modelManager, modelManager);","lastModifiedDate":"2023-10-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":113,"author":{"gitId":"migfoo02"},"content":"        assertNotEquals(modelManager, null);","lastModifiedDate":"2023-10-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":116,"author":{"gitId":"migfoo02"},"content":"        assertNotEquals(modelManager, 5);","lastModifiedDate":"2023-10-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":118,"author":{"gitId":"evanyan13"},"content":"        // different applicationBook -\u003e returns false","lastModifiedDate":"2023-10-10"},{"lineNumber":119,"author":{"gitId":"migfoo02"},"content":"        assertNotEquals(modelManager, new ModelManager(differentApplicationBook, userPrefs));","lastModifiedDate":"2023-10-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":122,"author":{"gitId":"JeremyYong128"},"content":"        String[] keywords \u003d CHEF.getRole().description.split(\"\\\\s+\");","lastModifiedDate":"2023-10-04"},{"lineNumber":123,"author":{"gitId":"JeremyYong128"},"content":"        modelManager.updateFilteredJobList(","lastModifiedDate":"2023-10-12"},{"lineNumber":124,"author":{"gitId":"JeremyYong128"},"content":"                new FieldContainsKeywordsPredicate(CliSyntax.PREFIX_ROLE, Arrays.asList(keywords)));","lastModifiedDate":"2023-10-26"},{"lineNumber":125,"author":{"gitId":"migfoo02"},"content":"        assertNotEquals(modelManager, new ModelManager(applicationBook, userPrefs));","lastModifiedDate":"2023-10-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":128,"author":{"gitId":"JeremyYong128"},"content":"        modelManager.updateFilteredJobList(PREDICATE_SHOW_ALL_JOBS);","lastModifiedDate":"2023-10-04"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":132,"author":{"gitId":"evanyan13"},"content":"        differentUserPrefs.setApplicationBookFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2023-10-10"},{"lineNumber":133,"author":{"gitId":"migfoo02"},"content":"        assertNotEquals(modelManager, new ModelManager(applicationBook, differentUserPrefs));","lastModifiedDate":"2023-10-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":135,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"evanyan13":24,"-":90,"JeremyYong128":13,"migfoo02":8}},{"path":"src/test/java/seedu/application/model/UserPrefsTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"evanyan13"},"content":"package seedu.application.model;","lastModifiedDate":"2023-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"czhiruo"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-28"},{"lineNumber":4,"author":{"gitId":"czhiruo"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-28"},{"lineNumber":5,"author":{"gitId":"evanyan13"},"content":"import static seedu.application.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-10"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class UserPrefsTest {","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        UserPrefs userPref \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPref.setGuiSettings(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"evanyan13"},"content":"    public void setApplicationBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2023-10-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"evanyan13"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPrefs.setApplicationBookFilePath(null));","lastModifiedDate":"2023-10-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"czhiruo"},"content":"    @Test","lastModifiedDate":"2023-10-28"},{"lineNumber":24,"author":{"gitId":"czhiruo"},"content":"    void testEquals() {","lastModifiedDate":"2023-10-28"},{"lineNumber":25,"author":{"gitId":"czhiruo"},"content":"        UserPrefs userPref \u003d new UserPrefs();","lastModifiedDate":"2023-10-28"},{"lineNumber":26,"author":{"gitId":"czhiruo"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-28"},{"lineNumber":27,"author":{"gitId":"czhiruo"},"content":"        assertTrue(userPref.equals(userPref));","lastModifiedDate":"2023-10-28"},{"lineNumber":28,"author":{"gitId":"czhiruo"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":29,"author":{"gitId":"czhiruo"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-28"},{"lineNumber":30,"author":{"gitId":"czhiruo"},"content":"        assertFalse(userPref.equals(null));","lastModifiedDate":"2023-10-28"},{"lineNumber":31,"author":{"gitId":"czhiruo"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":32,"author":{"gitId":"czhiruo"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"czhiruo":12,"evanyan13":4,"-":17}},{"path":"src/test/java/seedu/application/model/job/CombinedPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"JeremyYong128"},"content":"package seedu.application.model.job;","lastModifiedDate":"2023-10-31"},{"lineNumber":2,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":3,"author":{"gitId":"JeremyYong128"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-31"},{"lineNumber":4,"author":{"gitId":"JeremyYong128"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2023-10-31"},{"lineNumber":5,"author":{"gitId":"JeremyYong128"},"content":"import static seedu.application.logic.parser.CliSyntax.PREFIX_ROLE;","lastModifiedDate":"2023-10-31"},{"lineNumber":6,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":7,"author":{"gitId":"JeremyYong128"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-31"},{"lineNumber":8,"author":{"gitId":"JeremyYong128"},"content":"import java.util.Collections;","lastModifiedDate":"2023-10-31"},{"lineNumber":9,"author":{"gitId":"JeremyYong128"},"content":"import java.util.List;","lastModifiedDate":"2023-10-31"},{"lineNumber":10,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":11,"author":{"gitId":"JeremyYong128"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-31"},{"lineNumber":12,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":13,"author":{"gitId":"JeremyYong128"},"content":"public class CombinedPredicateTest {","lastModifiedDate":"2023-10-31"},{"lineNumber":14,"author":{"gitId":"JeremyYong128"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":15,"author":{"gitId":"JeremyYong128"},"content":"    public void equals() {","lastModifiedDate":"2023-10-31"},{"lineNumber":16,"author":{"gitId":"JeremyYong128"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2023-10-31"},{"lineNumber":17,"author":{"gitId":"JeremyYong128"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2023-10-31"},{"lineNumber":18,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":19,"author":{"gitId":"JeremyYong128"},"content":"        FieldContainsKeywordsPredicate first \u003d new FieldContainsKeywordsPredicate(","lastModifiedDate":"2023-10-31"},{"lineNumber":20,"author":{"gitId":"JeremyYong128"},"content":"                PREFIX_ROLE, firstPredicateKeywordList);","lastModifiedDate":"2023-10-31"},{"lineNumber":21,"author":{"gitId":"JeremyYong128"},"content":"        FieldContainsKeywordsPredicate second \u003d new FieldContainsKeywordsPredicate(","lastModifiedDate":"2023-10-31"},{"lineNumber":22,"author":{"gitId":"JeremyYong128"},"content":"                PREFIX_ROLE, secondPredicateKeywordList);","lastModifiedDate":"2023-10-31"},{"lineNumber":23,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":24,"author":{"gitId":"JeremyYong128"},"content":"        CombinedPredicate firstPredicate \u003d new CombinedPredicate(Arrays.asList(first));","lastModifiedDate":"2023-10-31"},{"lineNumber":25,"author":{"gitId":"JeremyYong128"},"content":"        CombinedPredicate secondPredicate \u003d new CombinedPredicate((Arrays.asList(first, second)));","lastModifiedDate":"2023-10-31"},{"lineNumber":26,"author":{"gitId":"JeremyYong128"},"content":"        CombinedPredicate thirdPredicate \u003d new CombinedPredicate((Arrays.asList(second, first)));","lastModifiedDate":"2023-10-31"},{"lineNumber":27,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":28,"author":{"gitId":"JeremyYong128"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-31"},{"lineNumber":29,"author":{"gitId":"JeremyYong128"},"content":"        assertEquals(firstPredicate, firstPredicate);","lastModifiedDate":"2023-10-31"},{"lineNumber":30,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":31,"author":{"gitId":"JeremyYong128"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-31"},{"lineNumber":32,"author":{"gitId":"JeremyYong128"},"content":"        CombinedPredicate firstPredicateCopy \u003d new CombinedPredicate(Arrays.asList(first));","lastModifiedDate":"2023-10-31"},{"lineNumber":33,"author":{"gitId":"JeremyYong128"},"content":"        assertEquals(firstPredicate, firstPredicateCopy);","lastModifiedDate":"2023-10-31"},{"lineNumber":34,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":35,"author":{"gitId":"JeremyYong128"},"content":"        // same predicates -\u003e returns true","lastModifiedDate":"2023-10-31"},{"lineNumber":36,"author":{"gitId":"JeremyYong128"},"content":"        assertEquals(secondPredicate, thirdPredicate);","lastModifiedDate":"2023-10-31"},{"lineNumber":37,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":38,"author":{"gitId":"JeremyYong128"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-31"},{"lineNumber":39,"author":{"gitId":"JeremyYong128"},"content":"        assertNotEquals(firstPredicate, 5.0f);","lastModifiedDate":"2023-10-31"},{"lineNumber":40,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":41,"author":{"gitId":"JeremyYong128"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-31"},{"lineNumber":42,"author":{"gitId":"JeremyYong128"},"content":"        assertNotEquals(firstPredicate, null);","lastModifiedDate":"2023-10-31"},{"lineNumber":43,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":44,"author":{"gitId":"JeremyYong128"},"content":"        // different predicate -\u003e returns false","lastModifiedDate":"2023-10-31"},{"lineNumber":45,"author":{"gitId":"JeremyYong128"},"content":"        assertNotEquals(firstPredicate, secondPredicate);","lastModifiedDate":"2023-10-31"},{"lineNumber":46,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":47,"author":{"gitId":"JeremyYong128"},"content":"}","lastModifiedDate":"2023-10-31"}],"authorContributionMap":{"JeremyYong128":47}},{"path":"src/test/java/seedu/application/model/job/CompanyTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"evanyan13"},"content":"package seedu.application.model.job;","lastModifiedDate":"2023-10-10"},{"lineNumber":2,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":3,"author":{"gitId":"migfoo02"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-23"},{"lineNumber":4,"author":{"gitId":"JeremyYong128"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-04"},{"lineNumber":5,"author":{"gitId":"migfoo02"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2023-10-23"},{"lineNumber":6,"author":{"gitId":"JeremyYong128"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-04"},{"lineNumber":7,"author":{"gitId":"evanyan13"},"content":"import static seedu.application.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-10"},{"lineNumber":8,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":9,"author":{"gitId":"JeremyYong128"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-04"},{"lineNumber":10,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":11,"author":{"gitId":"JeremyYong128"},"content":"public class CompanyTest {","lastModifiedDate":"2023-10-04"},{"lineNumber":12,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":13,"author":{"gitId":"JeremyYong128"},"content":"    @Test","lastModifiedDate":"2023-10-04"},{"lineNumber":14,"author":{"gitId":"JeremyYong128"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-10-04"},{"lineNumber":15,"author":{"gitId":"JeremyYong128"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Company(null));","lastModifiedDate":"2023-10-04"},{"lineNumber":16,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":17,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":18,"author":{"gitId":"JeremyYong128"},"content":"    @Test","lastModifiedDate":"2023-10-04"},{"lineNumber":19,"author":{"gitId":"JeremyYong128"},"content":"    public void constructor_invalidCompany_throwsIllegalArgumentException() {","lastModifiedDate":"2023-10-04"},{"lineNumber":20,"author":{"gitId":"JeremyYong128"},"content":"        String invalidCompany \u003d \"\";","lastModifiedDate":"2023-10-04"},{"lineNumber":21,"author":{"gitId":"JeremyYong128"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Company(invalidCompany));","lastModifiedDate":"2023-10-04"},{"lineNumber":22,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":23,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":24,"author":{"gitId":"JeremyYong128"},"content":"    @Test","lastModifiedDate":"2023-10-04"},{"lineNumber":25,"author":{"gitId":"JeremyYong128"},"content":"    public void isValidCompany() {","lastModifiedDate":"2023-10-04"},{"lineNumber":26,"author":{"gitId":"JeremyYong128"},"content":"        // null company","lastModifiedDate":"2023-10-04"},{"lineNumber":27,"author":{"gitId":"JeremyYong128"},"content":"        assertThrows(NullPointerException.class, () -\u003e Company.isValidCompany(null));","lastModifiedDate":"2023-10-04"},{"lineNumber":28,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":29,"author":{"gitId":"JeremyYong128"},"content":"        // invalid companies","lastModifiedDate":"2023-10-04"},{"lineNumber":30,"author":{"gitId":"JeremyYong128"},"content":"        assertFalse(Company.isValidCompany(\"\")); // empty string","lastModifiedDate":"2023-10-04"},{"lineNumber":31,"author":{"gitId":"JeremyYong128"},"content":"        assertFalse(Company.isValidCompany(\" \")); // spaces only","lastModifiedDate":"2023-10-04"},{"lineNumber":32,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":33,"author":{"gitId":"JeremyYong128"},"content":"        // valid company numbers","lastModifiedDate":"2023-10-04"},{"lineNumber":34,"author":{"gitId":"JeremyYong128"},"content":"        assertTrue(Company.isValidCompany(\"Google\"));","lastModifiedDate":"2023-10-04"},{"lineNumber":35,"author":{"gitId":"JeremyYong128"},"content":"        assertTrue(Company.isValidCompany(\"National University of Singapore\"));","lastModifiedDate":"2023-10-04"},{"lineNumber":36,"author":{"gitId":"JeremyYong128"},"content":"        assertTrue(Company.isValidCompany(\"G@@gle\")); // not alphanumeric","lastModifiedDate":"2023-10-16"},{"lineNumber":37,"author":{"gitId":"JeremyYong128"},"content":"        assertTrue(Company.isValidCompany(\"Shopee 2\")); // company with numbers","lastModifiedDate":"2023-10-04"},{"lineNumber":38,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":39,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":40,"author":{"gitId":"JeremyYong128"},"content":"    @Test","lastModifiedDate":"2023-10-04"},{"lineNumber":41,"author":{"gitId":"czhiruo"},"content":"    public void testEqualsAndHashcode() {","lastModifiedDate":"2023-10-28"},{"lineNumber":42,"author":{"gitId":"JeremyYong128"},"content":"        Company company \u003d new Company(\"999\");","lastModifiedDate":"2023-10-04"},{"lineNumber":43,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":44,"author":{"gitId":"JeremyYong128"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-04"},{"lineNumber":45,"author":{"gitId":"czhiruo"},"content":"        assertTrue(company.equals(new Company(\"999\")));","lastModifiedDate":"2023-10-28"},{"lineNumber":46,"author":{"gitId":"czhiruo"},"content":"        assertEquals(company.hashCode(), new Company(\"999\").hashCode());","lastModifiedDate":"2023-10-28"},{"lineNumber":47,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":48,"author":{"gitId":"JeremyYong128"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-04"},{"lineNumber":49,"author":{"gitId":"czhiruo"},"content":"        assertTrue(company.equals(company));","lastModifiedDate":"2023-10-28"},{"lineNumber":50,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":51,"author":{"gitId":"JeremyYong128"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-04"},{"lineNumber":52,"author":{"gitId":"czhiruo"},"content":"        assertFalse(company.equals(null));","lastModifiedDate":"2023-10-28"},{"lineNumber":53,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":54,"author":{"gitId":"JeremyYong128"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-04"},{"lineNumber":55,"author":{"gitId":"czhiruo"},"content":"        assertFalse(company.equals(5.0f));","lastModifiedDate":"2023-10-28"},{"lineNumber":56,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":57,"author":{"gitId":"JeremyYong128"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2023-10-04"},{"lineNumber":58,"author":{"gitId":"czhiruo"},"content":"        assertFalse(company.equals(new Company(\"995\")));","lastModifiedDate":"2023-10-28"},{"lineNumber":59,"author":{"gitId":"czhiruo"},"content":"        assertNotEquals(company.hashCode(), new Company(\"995\").hashCode());","lastModifiedDate":"2023-10-28"},{"lineNumber":60,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":61,"author":{"gitId":"JeremyYong128"},"content":"}","lastModifiedDate":"2023-10-04"}],"authorContributionMap":{"czhiruo":8,"evanyan13":2,"JeremyYong128":49,"migfoo02":2}},{"path":"src/test/java/seedu/application/model/job/DeadlineTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"evanyan13"},"content":"package seedu.application.model.job;","lastModifiedDate":"2023-10-22"},{"lineNumber":2,"author":{"gitId":"czhiruo"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2023-10-28"},{"lineNumber":3,"author":{"gitId":"evanyan13"},"content":"import static seedu.application.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-22"},{"lineNumber":4,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":5,"author":{"gitId":"evanyan13"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-22"},{"lineNumber":6,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":7,"author":{"gitId":"evanyan13"},"content":"class DeadlineTest {","lastModifiedDate":"2023-10-22"},{"lineNumber":8,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":9,"author":{"gitId":"evanyan13"},"content":"    @Test","lastModifiedDate":"2023-10-22"},{"lineNumber":10,"author":{"gitId":"evanyan13"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-10-22"},{"lineNumber":11,"author":{"gitId":"evanyan13"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Deadline(null));","lastModifiedDate":"2023-10-22"},{"lineNumber":12,"author":{"gitId":"evanyan13"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":13,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":14,"author":{"gitId":"evanyan13"},"content":"    @Test","lastModifiedDate":"2023-10-22"},{"lineNumber":15,"author":{"gitId":"evanyan13"},"content":"    public void constructor_invalidDeadline_throwsIllegalArgumentException() {","lastModifiedDate":"2023-10-22"},{"lineNumber":16,"author":{"gitId":"evanyan13"},"content":"        String invalidDeadline \u003d \"Nov 12 2023\";","lastModifiedDate":"2023-10-22"},{"lineNumber":17,"author":{"gitId":"evanyan13"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Deadline(invalidDeadline));","lastModifiedDate":"2023-10-22"},{"lineNumber":18,"author":{"gitId":"evanyan13"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":19,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":20,"author":{"gitId":"evanyan13"},"content":"    @Test","lastModifiedDate":"2023-10-22"},{"lineNumber":21,"author":{"gitId":"evanyan13"},"content":"    void testisValidDeadline() {","lastModifiedDate":"2023-10-22"},{"lineNumber":22,"author":{"gitId":"evanyan13"},"content":"        // null deadline","lastModifiedDate":"2023-10-22"},{"lineNumber":23,"author":{"gitId":"evanyan13"},"content":"        assertThrows(NullPointerException.class, () -\u003e Deadline.isValidDeadline(null));","lastModifiedDate":"2023-10-22"},{"lineNumber":24,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":25,"author":{"gitId":"evanyan13"},"content":"        // invalid deadlines","lastModifiedDate":"2023-10-22"},{"lineNumber":26,"author":{"gitId":"evanyan13"},"content":"        assertFalse(Deadline.isValidDeadline(\"\")); // empty string","lastModifiedDate":"2023-10-22"},{"lineNumber":27,"author":{"gitId":"evanyan13"},"content":"        assertFalse(Deadline.isValidDeadline(\" \")); // spaces only","lastModifiedDate":"2023-10-22"},{"lineNumber":28,"author":{"gitId":"evanyan13"},"content":"        assertFalse(Deadline.isValidDeadline(\"Today\")); // Invalid DateTime","lastModifiedDate":"2023-10-22"},{"lineNumber":29,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":30,"author":{"gitId":"evanyan13"},"content":"        // valid deadlines","lastModifiedDate":"2023-10-22"},{"lineNumber":31,"author":{"gitId":"evanyan13"},"content":"        assertTrue(Deadline.isValidDeadline(\"Dec 31 2030 1200\"));","lastModifiedDate":"2023-10-22"},{"lineNumber":32,"author":{"gitId":"evanyan13"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":33,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":34,"author":{"gitId":"evanyan13"},"content":"    @Test","lastModifiedDate":"2023-10-22"},{"lineNumber":35,"author":{"gitId":"evanyan13"},"content":"    public void testCompareTo() {","lastModifiedDate":"2023-10-22"},{"lineNumber":36,"author":{"gitId":"evanyan13"},"content":"        // Create Deadline objects","lastModifiedDate":"2023-10-22"},{"lineNumber":37,"author":{"gitId":"evanyan13"},"content":"        Deadline earlierDeadline \u003d new Deadline(\"Dec 31 2023 1200\");","lastModifiedDate":"2023-10-22"},{"lineNumber":38,"author":{"gitId":"evanyan13"},"content":"        Deadline laterDeadline \u003d new Deadline(\"Dec 31 2030 1200\");","lastModifiedDate":"2023-10-22"},{"lineNumber":39,"author":{"gitId":"evanyan13"},"content":"        Deadline emptyDeadline \u003d new Deadline(Deadline.TO_ADD_DEADLINE);","lastModifiedDate":"2023-10-22"},{"lineNumber":40,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":41,"author":{"gitId":"evanyan13"},"content":"        // when both deadlines are empty","lastModifiedDate":"2023-10-22"},{"lineNumber":42,"author":{"gitId":"evanyan13"},"content":"        assertEquals(0, emptyDeadline.compareTo(emptyDeadline));","lastModifiedDate":"2023-10-22"},{"lineNumber":43,"author":{"gitId":"evanyan13"},"content":"        assertEquals(0, emptyDeadline.compareTo(new Deadline(Deadline.TO_ADD_DEADLINE)));","lastModifiedDate":"2023-10-22"},{"lineNumber":44,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":45,"author":{"gitId":"evanyan13"},"content":"        // when one deadline is empty","lastModifiedDate":"2023-10-22"},{"lineNumber":46,"author":{"gitId":"evanyan13"},"content":"        assertEquals(1, earlierDeadline.compareTo(emptyDeadline));","lastModifiedDate":"2023-10-22"},{"lineNumber":47,"author":{"gitId":"evanyan13"},"content":"        assertEquals(-1, emptyDeadline.compareTo(laterDeadline));","lastModifiedDate":"2023-10-22"},{"lineNumber":48,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":49,"author":{"gitId":"evanyan13"},"content":"        // when both deadlines have valid dates","lastModifiedDate":"2023-10-22"},{"lineNumber":50,"author":{"gitId":"evanyan13"},"content":"        assertEquals(-1, earlierDeadline.compareTo(laterDeadline));","lastModifiedDate":"2023-10-22"},{"lineNumber":51,"author":{"gitId":"evanyan13"},"content":"        assertEquals(1, laterDeadline.compareTo(earlierDeadline));","lastModifiedDate":"2023-10-22"},{"lineNumber":52,"author":{"gitId":"evanyan13"},"content":"        assertEquals(0, earlierDeadline.compareTo(new Deadline(\"Dec 31 2023 1200\")));","lastModifiedDate":"2023-10-22"},{"lineNumber":53,"author":{"gitId":"evanyan13"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":54,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":55,"author":{"gitId":"evanyan13"},"content":"    @Test","lastModifiedDate":"2023-10-22"},{"lineNumber":56,"author":{"gitId":"czhiruo"},"content":"    void testEqualsAndHashcode() {","lastModifiedDate":"2023-10-28"},{"lineNumber":57,"author":{"gitId":"evanyan13"},"content":"        Deadline deadline \u003d new Deadline(\"Dec 31 2030 1200\");","lastModifiedDate":"2023-10-22"},{"lineNumber":58,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":59,"author":{"gitId":"evanyan13"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-22"},{"lineNumber":60,"author":{"gitId":"evanyan13"},"content":"        assertTrue(deadline.equals(new Deadline(\"Dec 31 2030 1200\")));","lastModifiedDate":"2023-10-22"},{"lineNumber":61,"author":{"gitId":"czhiruo"},"content":"        assertEquals(deadline.hashCode(), new Deadline(\"Dec 31 2030 1200\").hashCode());","lastModifiedDate":"2023-10-28"},{"lineNumber":62,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":63,"author":{"gitId":"evanyan13"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-22"},{"lineNumber":64,"author":{"gitId":"evanyan13"},"content":"        assertTrue(deadline.equals(deadline));","lastModifiedDate":"2023-10-22"},{"lineNumber":65,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":66,"author":{"gitId":"evanyan13"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-22"},{"lineNumber":67,"author":{"gitId":"evanyan13"},"content":"        assertFalse(deadline.equals(null));","lastModifiedDate":"2023-10-22"},{"lineNumber":68,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":69,"author":{"gitId":"evanyan13"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-22"},{"lineNumber":70,"author":{"gitId":"evanyan13"},"content":"        assertFalse(deadline.equals(5.0f));","lastModifiedDate":"2023-10-22"},{"lineNumber":71,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":72,"author":{"gitId":"evanyan13"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2023-10-22"},{"lineNumber":73,"author":{"gitId":"evanyan13"},"content":"        assertFalse(deadline.equals(new Deadline(\"Dec 31 2040 1200\")));","lastModifiedDate":"2023-10-22"},{"lineNumber":74,"author":{"gitId":"czhiruo"},"content":"        assertNotEquals(deadline.hashCode(), new Deadline(\"Dec 31 2040 1200\").hashCode());","lastModifiedDate":"2023-10-28"},{"lineNumber":75,"author":{"gitId":"evanyan13"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":76,"author":{"gitId":"evanyan13"},"content":"}","lastModifiedDate":"2023-10-22"}],"authorContributionMap":{"czhiruo":4,"evanyan13":72}},{"path":"src/test/java/seedu/application/model/job/FieldComparatorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"peiran18"},"content":"package seedu.application.model.job;","lastModifiedDate":"2023-10-22"},{"lineNumber":2,"author":{"gitId":"peiran18"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":3,"author":{"gitId":"migfoo02"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-23"},{"lineNumber":4,"author":{"gitId":"migfoo02"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-23"},{"lineNumber":5,"author":{"gitId":"migfoo02"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2023-10-23"},{"lineNumber":6,"author":{"gitId":"migfoo02"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-23"},{"lineNumber":7,"author":{"gitId":"JeremyYong128"},"content":"import static seedu.application.logic.parser.CliSyntax.*;","lastModifiedDate":"2023-10-27"},{"lineNumber":8,"author":{"gitId":"peiran18"},"content":"import static seedu.application.model.job.Deadline.TO_ADD_DEADLINE;","lastModifiedDate":"2023-10-22"},{"lineNumber":9,"author":{"gitId":"peiran18"},"content":"import static seedu.application.testutil.TypicalJobs.CHEF;","lastModifiedDate":"2023-10-22"},{"lineNumber":10,"author":{"gitId":"peiran18"},"content":"import static seedu.application.testutil.TypicalJobs.CLEANER;","lastModifiedDate":"2023-10-22"},{"lineNumber":11,"author":{"gitId":"peiran18"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":12,"author":{"gitId":"peiran18"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-22"},{"lineNumber":13,"author":{"gitId":"peiran18"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":14,"author":{"gitId":"JeremyYong128"},"content":"import seedu.application.logic.parser.Prefix;","lastModifiedDate":"2023-10-27"},{"lineNumber":15,"author":{"gitId":"peiran18"},"content":"import seedu.application.testutil.JobBuilder;","lastModifiedDate":"2023-10-22"},{"lineNumber":16,"author":{"gitId":"peiran18"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":17,"author":{"gitId":"peiran18"},"content":"public class FieldComparatorTest {","lastModifiedDate":"2023-10-22"},{"lineNumber":18,"author":{"gitId":"peiran18"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":19,"author":{"gitId":"peiran18"},"content":"    @Test","lastModifiedDate":"2023-10-22"},{"lineNumber":20,"author":{"gitId":"peiran18"},"content":"    public void isValidSpecifier_validSpecifiers_returnTrue() {","lastModifiedDate":"2023-10-22"},{"lineNumber":21,"author":{"gitId":"JeremyYong128"},"content":"        assertTrue(FieldComparator.isValidPrefix(PREFIX_COMPANY.getPrefix()));","lastModifiedDate":"2023-10-27"},{"lineNumber":22,"author":{"gitId":"JeremyYong128"},"content":"        assertTrue(FieldComparator.isValidPrefix(PREFIX_ROLE.getPrefix()));","lastModifiedDate":"2023-10-27"},{"lineNumber":23,"author":{"gitId":"JeremyYong128"},"content":"        assertTrue(FieldComparator.isValidPrefix(PREFIX_STATUS.getPrefix()));","lastModifiedDate":"2023-10-27"},{"lineNumber":24,"author":{"gitId":"JeremyYong128"},"content":"        assertTrue(FieldComparator.isValidPrefix(PREFIX_INDUSTRY.getPrefix()));","lastModifiedDate":"2023-10-27"},{"lineNumber":25,"author":{"gitId":"JeremyYong128"},"content":"        assertTrue(FieldComparator.isValidPrefix(PREFIX_DEADLINE.getPrefix()));","lastModifiedDate":"2023-10-27"},{"lineNumber":26,"author":{"gitId":"JeremyYong128"},"content":"        assertTrue(FieldComparator.isValidPrefix(PREFIX_JOB_TYPE.getPrefix()));","lastModifiedDate":"2023-10-27"},{"lineNumber":27,"author":{"gitId":"peiran18"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":28,"author":{"gitId":"peiran18"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":29,"author":{"gitId":"peiran18"},"content":"    @Test","lastModifiedDate":"2023-10-22"},{"lineNumber":30,"author":{"gitId":"peiran18"},"content":"    public void isValidSpecifier_invalidSpecifiers_returnFalse() {","lastModifiedDate":"2023-10-22"},{"lineNumber":31,"author":{"gitId":"JeremyYong128"},"content":"        assertFalse(FieldComparator.isValidPrefix(\"x\"));","lastModifiedDate":"2023-10-27"},{"lineNumber":32,"author":{"gitId":"JeremyYong128"},"content":"        assertFalse(FieldComparator.isValidPrefix(\"description\"));","lastModifiedDate":"2023-10-27"},{"lineNumber":33,"author":{"gitId":"JeremyYong128"},"content":"        assertFalse(FieldComparator.isValidPrefix(\"-k\"));","lastModifiedDate":"2023-10-27"},{"lineNumber":34,"author":{"gitId":"JeremyYong128"},"content":"        assertFalse(FieldComparator.isValidPrefix(\" \"));","lastModifiedDate":"2023-10-27"},{"lineNumber":35,"author":{"gitId":"peiran18"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":36,"author":{"gitId":"peiran18"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":37,"author":{"gitId":"peiran18"},"content":"    @Test","lastModifiedDate":"2023-10-22"},{"lineNumber":38,"author":{"gitId":"peiran18"},"content":"    public void compare_validSpecifiers_correctComparison() {","lastModifiedDate":"2023-10-22"},{"lineNumber":39,"author":{"gitId":"peiran18"},"content":"        Job job1 \u003d new JobBuilder(CLEANER).withDeadline(TO_ADD_DEADLINE).build();","lastModifiedDate":"2023-10-22"},{"lineNumber":40,"author":{"gitId":"peiran18"},"content":"        Job job2 \u003d new JobBuilder(CHEF).withDeadline(TO_ADD_DEADLINE).build();","lastModifiedDate":"2023-10-22"},{"lineNumber":41,"author":{"gitId":"peiran18"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":42,"author":{"gitId":"JeremyYong128"},"content":"        FieldComparator roleComparator \u003d new FieldComparator(PREFIX_ROLE);","lastModifiedDate":"2023-10-27"},{"lineNumber":43,"author":{"gitId":"peiran18"},"content":"        assertTrue(roleComparator.compare(job1, job2) \u003e 0); // job2 should be before job1","lastModifiedDate":"2023-10-22"},{"lineNumber":44,"author":{"gitId":"peiran18"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":45,"author":{"gitId":"JeremyYong128"},"content":"        FieldComparator deadlineComparator \u003d new FieldComparator(PREFIX_DEADLINE);","lastModifiedDate":"2023-10-27"},{"lineNumber":46,"author":{"gitId":"peiran18"},"content":"        assertEquals(0, deadlineComparator.compare(job1, job2)); // job1 and job2 has the same deadline","lastModifiedDate":"2023-10-22"},{"lineNumber":47,"author":{"gitId":"peiran18"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":48,"author":{"gitId":"JeremyYong128"},"content":"        FieldComparator statusComparator \u003d new FieldComparator(PREFIX_STATUS);","lastModifiedDate":"2023-10-27"},{"lineNumber":49,"author":{"gitId":"peiran18"},"content":"        assertTrue(statusComparator.compare(job1, job2) \u003c 0); // job2 should be after job1","lastModifiedDate":"2023-10-22"},{"lineNumber":50,"author":{"gitId":"peiran18"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":51,"author":{"gitId":"peiran18"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":52,"author":{"gitId":"peiran18"},"content":"    @Test","lastModifiedDate":"2023-10-22"},{"lineNumber":53,"author":{"gitId":"peiran18"},"content":"    public void compare_invalidSpecifier_defaultComparison() {","lastModifiedDate":"2023-10-22"},{"lineNumber":54,"author":{"gitId":"peiran18"},"content":"        Job job1 \u003d new JobBuilder(CHEF).build();","lastModifiedDate":"2023-10-22"},{"lineNumber":55,"author":{"gitId":"peiran18"},"content":"        Job job2 \u003d new JobBuilder(CLEANER).build();","lastModifiedDate":"2023-10-22"},{"lineNumber":56,"author":{"gitId":"peiran18"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":57,"author":{"gitId":"JeremyYong128"},"content":"        FieldComparator invalidComparator \u003d new FieldComparator(new Prefix(\"x/\"));","lastModifiedDate":"2023-10-27"},{"lineNumber":58,"author":{"gitId":"peiran18"},"content":"        assertEquals(-1, invalidComparator.compare(job1, job2));","lastModifiedDate":"2023-10-22"},{"lineNumber":59,"author":{"gitId":"peiran18"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":60,"author":{"gitId":"peiran18"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":61,"author":{"gitId":"peiran18"},"content":"    @Test","lastModifiedDate":"2023-10-22"},{"lineNumber":62,"author":{"gitId":"peiran18"},"content":"    public void equals() {","lastModifiedDate":"2023-10-22"},{"lineNumber":63,"author":{"gitId":"JeremyYong128"},"content":"        FieldComparator fieldComparator \u003d new FieldComparator(PREFIX_ROLE);","lastModifiedDate":"2023-10-27"},{"lineNumber":64,"author":{"gitId":"peiran18"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":65,"author":{"gitId":"peiran18"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-22"},{"lineNumber":66,"author":{"gitId":"JeremyYong128"},"content":"        assertEquals(fieldComparator, new FieldComparator(PREFIX_ROLE));","lastModifiedDate":"2023-10-27"},{"lineNumber":67,"author":{"gitId":"peiran18"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":68,"author":{"gitId":"peiran18"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-22"},{"lineNumber":69,"author":{"gitId":"migfoo02"},"content":"        assertEquals(fieldComparator, fieldComparator);","lastModifiedDate":"2023-10-23"},{"lineNumber":70,"author":{"gitId":"peiran18"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":71,"author":{"gitId":"peiran18"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-22"},{"lineNumber":72,"author":{"gitId":"migfoo02"},"content":"        assertNotEquals(fieldComparator, null);","lastModifiedDate":"2023-10-23"},{"lineNumber":73,"author":{"gitId":"peiran18"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":74,"author":{"gitId":"peiran18"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-22"},{"lineNumber":75,"author":{"gitId":"migfoo02"},"content":"        assertNotEquals(fieldComparator, 5.0f);","lastModifiedDate":"2023-10-23"},{"lineNumber":76,"author":{"gitId":"peiran18"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":77,"author":{"gitId":"peiran18"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2023-10-22"},{"lineNumber":78,"author":{"gitId":"JeremyYong128"},"content":"        assertNotEquals(fieldComparator, new FieldComparator(PREFIX_STATUS));","lastModifiedDate":"2023-10-27"},{"lineNumber":79,"author":{"gitId":"peiran18"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":80,"author":{"gitId":"peiran18"},"content":"}","lastModifiedDate":"2023-10-22"}],"authorContributionMap":{"peiran18":54,"JeremyYong128":19,"migfoo02":7}},{"path":"src/test/java/seedu/application/model/job/FieldContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"JeremyYong128"},"content":"package seedu.application.model.job;","lastModifiedDate":"2023-10-14"},{"lineNumber":2,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":3,"author":{"gitId":"migfoo02"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-23"},{"lineNumber":4,"author":{"gitId":"migfoo02"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-23"},{"lineNumber":5,"author":{"gitId":"migfoo02"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2023-10-23"},{"lineNumber":6,"author":{"gitId":"migfoo02"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-23"},{"lineNumber":7,"author":{"gitId":"JeremyYong128"},"content":"import static seedu.application.logic.parser.CliSyntax.PREFIX_COMPANY;","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"JeremyYong128"},"content":"import static seedu.application.logic.parser.CliSyntax.PREFIX_DEADLINE;","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"JeremyYong128"},"content":"import static seedu.application.logic.parser.CliSyntax.PREFIX_INDUSTRY;","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"JeremyYong128"},"content":"import static seedu.application.logic.parser.CliSyntax.PREFIX_JOB_TYPE;","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"JeremyYong128"},"content":"import static seedu.application.logic.parser.CliSyntax.PREFIX_ROLE;","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"JeremyYong128"},"content":"import static seedu.application.logic.parser.CliSyntax.PREFIX_STATUS;","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":14,"author":{"gitId":"JeremyYong128"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-14"},{"lineNumber":15,"author":{"gitId":"JeremyYong128"},"content":"import java.util.Collections;","lastModifiedDate":"2023-10-14"},{"lineNumber":16,"author":{"gitId":"JeremyYong128"},"content":"import java.util.List;","lastModifiedDate":"2023-10-14"},{"lineNumber":17,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":18,"author":{"gitId":"JeremyYong128"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-14"},{"lineNumber":19,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":20,"author":{"gitId":"JeremyYong128"},"content":"import seedu.application.model.job.JobType.JobTypes;","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"JeremyYong128"},"content":"import seedu.application.model.job.Status.JobStatus;","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"JeremyYong128"},"content":"import seedu.application.testutil.JobBuilder;","lastModifiedDate":"2023-10-14"},{"lineNumber":23,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":24,"author":{"gitId":"JeremyYong128"},"content":"public class FieldContainsKeywordsPredicateTest {","lastModifiedDate":"2023-10-14"},{"lineNumber":25,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":26,"author":{"gitId":"JeremyYong128"},"content":"    @Test","lastModifiedDate":"2023-10-14"},{"lineNumber":27,"author":{"gitId":"JeremyYong128"},"content":"    public void equals() {","lastModifiedDate":"2023-10-14"},{"lineNumber":28,"author":{"gitId":"JeremyYong128"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2023-10-14"},{"lineNumber":29,"author":{"gitId":"JeremyYong128"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2023-10-14"},{"lineNumber":30,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":31,"author":{"gitId":"JeremyYong128"},"content":"        FieldContainsKeywordsPredicate firstPredicate \u003d new FieldContainsKeywordsPredicate(","lastModifiedDate":"2023-10-14"},{"lineNumber":32,"author":{"gitId":"JeremyYong128"},"content":"                PREFIX_ROLE, firstPredicateKeywordList);","lastModifiedDate":"2023-10-26"},{"lineNumber":33,"author":{"gitId":"JeremyYong128"},"content":"        FieldContainsKeywordsPredicate secondPredicate \u003d new FieldContainsKeywordsPredicate(","lastModifiedDate":"2023-10-14"},{"lineNumber":34,"author":{"gitId":"JeremyYong128"},"content":"                PREFIX_ROLE, secondPredicateKeywordList);","lastModifiedDate":"2023-10-26"},{"lineNumber":35,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":36,"author":{"gitId":"JeremyYong128"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-14"},{"lineNumber":37,"author":{"gitId":"migfoo02"},"content":"        assertEquals(firstPredicate, firstPredicate);","lastModifiedDate":"2023-10-23"},{"lineNumber":38,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":39,"author":{"gitId":"JeremyYong128"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-14"},{"lineNumber":40,"author":{"gitId":"JeremyYong128"},"content":"        FieldContainsKeywordsPredicate firstPredicateCopy \u003d","lastModifiedDate":"2023-10-14"},{"lineNumber":41,"author":{"gitId":"JeremyYong128"},"content":"                new FieldContainsKeywordsPredicate(PREFIX_ROLE, firstPredicateKeywordList);","lastModifiedDate":"2023-10-26"},{"lineNumber":42,"author":{"gitId":"migfoo02"},"content":"        assertEquals(firstPredicate, firstPredicateCopy);","lastModifiedDate":"2023-10-23"},{"lineNumber":43,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":44,"author":{"gitId":"JeremyYong128"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-14"},{"lineNumber":45,"author":{"gitId":"migfoo02"},"content":"        assertNotEquals(firstPredicate, 5.0f);","lastModifiedDate":"2023-10-23"},{"lineNumber":46,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":47,"author":{"gitId":"JeremyYong128"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-14"},{"lineNumber":48,"author":{"gitId":"migfoo02"},"content":"        assertNotEquals(firstPredicate, null);","lastModifiedDate":"2023-10-23"},{"lineNumber":49,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":50,"author":{"gitId":"JeremyYong128"},"content":"        // different predicate -\u003e returns false","lastModifiedDate":"2023-10-14"},{"lineNumber":51,"author":{"gitId":"migfoo02"},"content":"        assertNotEquals(firstPredicate, secondPredicate);","lastModifiedDate":"2023-10-23"},{"lineNumber":52,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":53,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":54,"author":{"gitId":"JeremyYong128"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":55,"author":{"gitId":"JeremyYong128"},"content":"    public void getPreamblePredicate() {","lastModifiedDate":"2023-10-31"},{"lineNumber":56,"author":{"gitId":"JeremyYong128"},"content":"        List\u003cString\u003e oneKeyword \u003d Arrays.asList(\"one\");","lastModifiedDate":"2023-10-31"},{"lineNumber":57,"author":{"gitId":"JeremyYong128"},"content":"        List\u003cString\u003e oneAndTwoKeywords \u003d Arrays.asList(\"one\", \"two\");","lastModifiedDate":"2023-10-31"},{"lineNumber":58,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":59,"author":{"gitId":"JeremyYong128"},"content":"        // One keyword","lastModifiedDate":"2023-10-31"},{"lineNumber":60,"author":{"gitId":"JeremyYong128"},"content":"        assertTrue(FieldContainsKeywordsPredicate.getPreamblePredicate(oneKeyword).test(","lastModifiedDate":"2023-10-31"},{"lineNumber":61,"author":{"gitId":"JeremyYong128"},"content":"                new JobBuilder().withCompany(\"one\").build()));","lastModifiedDate":"2023-10-31"},{"lineNumber":62,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":63,"author":{"gitId":"JeremyYong128"},"content":"        // Multiple keywords","lastModifiedDate":"2023-10-31"},{"lineNumber":64,"author":{"gitId":"JeremyYong128"},"content":"        assertTrue(FieldContainsKeywordsPredicate.getPreamblePredicate(oneAndTwoKeywords).test(","lastModifiedDate":"2023-10-31"},{"lineNumber":65,"author":{"gitId":"JeremyYong128"},"content":"                new JobBuilder().withCompany(\"two\").withRole(\"one\").build()));","lastModifiedDate":"2023-10-31"},{"lineNumber":66,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":67,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":68,"author":{"gitId":"JeremyYong128"},"content":"    @Test","lastModifiedDate":"2023-10-14"},{"lineNumber":69,"author":{"gitId":"JeremyYong128"},"content":"    public void test_companyContainsKeywords_returnsTrue() {","lastModifiedDate":"2023-10-26"},{"lineNumber":70,"author":{"gitId":"JeremyYong128"},"content":"        // One keyword","lastModifiedDate":"2023-10-26"},{"lineNumber":71,"author":{"gitId":"JeremyYong128"},"content":"        FieldContainsKeywordsPredicate predicate \u003d new FieldContainsKeywordsPredicate(","lastModifiedDate":"2023-10-26"},{"lineNumber":72,"author":{"gitId":"JeremyYong128"},"content":"                PREFIX_COMPANY, Collections.singletonList(\"Google\"));","lastModifiedDate":"2023-10-26"},{"lineNumber":73,"author":{"gitId":"JeremyYong128"},"content":"        assertTrue(predicate.test(new JobBuilder().withCompany(\"Google Singapore\").build()));","lastModifiedDate":"2023-10-26"},{"lineNumber":74,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":75,"author":{"gitId":"JeremyYong128"},"content":"        // Multiple keywords","lastModifiedDate":"2023-10-26"},{"lineNumber":76,"author":{"gitId":"JeremyYong128"},"content":"        predicate \u003d new FieldContainsKeywordsPredicate(PREFIX_COMPANY, Arrays.asList(\"Google\", \"Singapore\"));","lastModifiedDate":"2023-10-26"},{"lineNumber":77,"author":{"gitId":"JeremyYong128"},"content":"        assertTrue(predicate.test(new JobBuilder().withCompany(\"Google Singapore\").build()));","lastModifiedDate":"2023-10-26"},{"lineNumber":78,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":79,"author":{"gitId":"JeremyYong128"},"content":"        // Mixed-case keywords","lastModifiedDate":"2023-10-26"},{"lineNumber":80,"author":{"gitId":"JeremyYong128"},"content":"        predicate \u003d new FieldContainsKeywordsPredicate(PREFIX_COMPANY, Arrays.asList(\"gOOgLe\", \"SinGApOre\"));","lastModifiedDate":"2023-10-26"},{"lineNumber":81,"author":{"gitId":"JeremyYong128"},"content":"        assertTrue(predicate.test(new JobBuilder().withCompany(\"Google Singapore\").build()));","lastModifiedDate":"2023-10-26"},{"lineNumber":82,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":83,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":84,"author":{"gitId":"JeremyYong128"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":85,"author":{"gitId":"JeremyYong128"},"content":"    public void test_companyDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2023-10-26"},{"lineNumber":86,"author":{"gitId":"JeremyYong128"},"content":"        // Only one matching keyword","lastModifiedDate":"2023-10-26"},{"lineNumber":87,"author":{"gitId":"JeremyYong128"},"content":"        FieldContainsKeywordsPredicate predicate \u003d new FieldContainsKeywordsPredicate(","lastModifiedDate":"2023-10-26"},{"lineNumber":88,"author":{"gitId":"JeremyYong128"},"content":"                PREFIX_COMPANY, Arrays.asList(\"Google\", \"Malaysia\"));","lastModifiedDate":"2023-10-26"},{"lineNumber":89,"author":{"gitId":"JeremyYong128"},"content":"        assertFalse(predicate.test(new JobBuilder().withCompany(\"Google Singapore\").build()));","lastModifiedDate":"2023-10-26"},{"lineNumber":90,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":91,"author":{"gitId":"JeremyYong128"},"content":"        // Non-matching keyword","lastModifiedDate":"2023-10-26"},{"lineNumber":92,"author":{"gitId":"JeremyYong128"},"content":"        predicate \u003d new FieldContainsKeywordsPredicate(PREFIX_COMPANY, Arrays.asList(\"Apple\"));","lastModifiedDate":"2023-10-26"},{"lineNumber":93,"author":{"gitId":"JeremyYong128"},"content":"        assertFalse(predicate.test(new JobBuilder().withCompany(\"Google Singapore\").build()));","lastModifiedDate":"2023-10-26"},{"lineNumber":94,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":95,"author":{"gitId":"JeremyYong128"},"content":"        // Keywords match role, but does not match company","lastModifiedDate":"2023-10-26"},{"lineNumber":96,"author":{"gitId":"JeremyYong128"},"content":"        predicate \u003d new FieldContainsKeywordsPredicate(PREFIX_COMPANY, Arrays.asList(\"Software\"));","lastModifiedDate":"2023-10-26"},{"lineNumber":97,"author":{"gitId":"JeremyYong128"},"content":"        assertFalse(predicate.test(new JobBuilder().withRole(\"Software Engineer\").withCompany(\"Google\").build()));","lastModifiedDate":"2023-10-26"},{"lineNumber":98,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":99,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":100,"author":{"gitId":"JeremyYong128"},"content":"    @Test","lastModifiedDate":"2023-10-14"},{"lineNumber":101,"author":{"gitId":"JeremyYong128"},"content":"    public void test_roleContainsKeywords_returnsTrue() {","lastModifiedDate":"2023-10-14"},{"lineNumber":102,"author":{"gitId":"JeremyYong128"},"content":"        // One keyword","lastModifiedDate":"2023-10-14"},{"lineNumber":103,"author":{"gitId":"JeremyYong128"},"content":"        FieldContainsKeywordsPredicate predicate \u003d new FieldContainsKeywordsPredicate(","lastModifiedDate":"2023-10-14"},{"lineNumber":104,"author":{"gitId":"JeremyYong128"},"content":"                PREFIX_ROLE, Collections.singletonList(\"Software\"));","lastModifiedDate":"2023-10-26"},{"lineNumber":105,"author":{"gitId":"JeremyYong128"},"content":"        assertTrue(predicate.test(new JobBuilder().withRole(\"Software Engineer\").build()));","lastModifiedDate":"2023-10-14"},{"lineNumber":106,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":107,"author":{"gitId":"JeremyYong128"},"content":"        // Multiple keywords","lastModifiedDate":"2023-10-14"},{"lineNumber":108,"author":{"gitId":"JeremyYong128"},"content":"        predicate \u003d new FieldContainsKeywordsPredicate(PREFIX_ROLE, Arrays.asList(\"Software\", \"Engineer\"));","lastModifiedDate":"2023-10-26"},{"lineNumber":109,"author":{"gitId":"JeremyYong128"},"content":"        assertTrue(predicate.test(new JobBuilder().withRole(\"Software Engineer\").build()));","lastModifiedDate":"2023-10-14"},{"lineNumber":110,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":111,"author":{"gitId":"JeremyYong128"},"content":"        // Mixed-case keywords","lastModifiedDate":"2023-10-14"},{"lineNumber":112,"author":{"gitId":"JeremyYong128"},"content":"        predicate \u003d new FieldContainsKeywordsPredicate(PREFIX_ROLE, Arrays.asList(\"sOFtwaRe\", \"EnGIneer\"));","lastModifiedDate":"2023-10-26"},{"lineNumber":113,"author":{"gitId":"JeremyYong128"},"content":"        assertTrue(predicate.test(new JobBuilder().withRole(\"Software Engineer\").build()));","lastModifiedDate":"2023-10-14"},{"lineNumber":114,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":115,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":116,"author":{"gitId":"JeremyYong128"},"content":"    @Test","lastModifiedDate":"2023-10-14"},{"lineNumber":117,"author":{"gitId":"JeremyYong128"},"content":"    public void test_roleDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2023-10-14"},{"lineNumber":118,"author":{"gitId":"JeremyYong128"},"content":"        // Only one matching keyword","lastModifiedDate":"2023-10-26"},{"lineNumber":119,"author":{"gitId":"JeremyYong128"},"content":"        FieldContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2023-10-26"},{"lineNumber":120,"author":{"gitId":"JeremyYong128"},"content":"                new FieldContainsKeywordsPredicate(PREFIX_ROLE, Arrays.asList(\"Mechanical\", \"Engineer\"));","lastModifiedDate":"2023-10-26"},{"lineNumber":121,"author":{"gitId":"JeremyYong128"},"content":"        assertFalse(predicate.test(new JobBuilder().withRole(\"Software Engineer\").build()));","lastModifiedDate":"2023-10-26"},{"lineNumber":122,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":123,"author":{"gitId":"JeremyYong128"},"content":"        // Non-matching keyword","lastModifiedDate":"2023-10-14"},{"lineNumber":124,"author":{"gitId":"JeremyYong128"},"content":"        predicate \u003d new FieldContainsKeywordsPredicate(PREFIX_ROLE, Arrays.asList(\"Chef\"));","lastModifiedDate":"2023-10-26"},{"lineNumber":125,"author":{"gitId":"JeremyYong128"},"content":"        assertFalse(predicate.test(new JobBuilder().withRole(\"Software Engineer\").build()));","lastModifiedDate":"2023-10-14"},{"lineNumber":126,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":127,"author":{"gitId":"JeremyYong128"},"content":"        // Keywords match company, but does not match role","lastModifiedDate":"2023-10-14"},{"lineNumber":128,"author":{"gitId":"JeremyYong128"},"content":"        predicate \u003d new FieldContainsKeywordsPredicate(PREFIX_ROLE, Arrays.asList(\"Google\"));","lastModifiedDate":"2023-10-26"},{"lineNumber":129,"author":{"gitId":"JeremyYong128"},"content":"        assertFalse(predicate.test(new JobBuilder().withRole(\"Software Engineer\").withCompany(\"Google\").build()));","lastModifiedDate":"2023-10-14"},{"lineNumber":130,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":131,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":132,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":133,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":134,"author":{"gitId":"JeremyYong128"},"content":"    @Test","lastModifiedDate":"2023-10-14"},{"lineNumber":135,"author":{"gitId":"JeremyYong128"},"content":"    public void test_statusContainsKeywords_returnsTrue() {","lastModifiedDate":"2023-10-26"},{"lineNumber":136,"author":{"gitId":"JeremyYong128"},"content":"        // One keyword","lastModifiedDate":"2023-10-14"},{"lineNumber":137,"author":{"gitId":"JeremyYong128"},"content":"        FieldContainsKeywordsPredicate predicate \u003d new FieldContainsKeywordsPredicate(","lastModifiedDate":"2023-10-14"},{"lineNumber":138,"author":{"gitId":"JeremyYong128"},"content":"                PREFIX_STATUS, Collections.singletonList(JobStatus.PENDING.toString()));","lastModifiedDate":"2023-10-26"},{"lineNumber":139,"author":{"gitId":"JeremyYong128"},"content":"        assertTrue(predicate.test(new JobBuilder().withStatus(JobStatus.PENDING.toString()).build()));","lastModifiedDate":"2023-10-26"},{"lineNumber":140,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":141,"author":{"gitId":"JeremyYong128"},"content":"        // Mixed-case keywords","lastModifiedDate":"2023-10-26"},{"lineNumber":142,"author":{"gitId":"JeremyYong128"},"content":"        predicate \u003d new FieldContainsKeywordsPredicate(PREFIX_STATUS, Arrays.asList(\"pEnDing\"));","lastModifiedDate":"2023-10-26"},{"lineNumber":143,"author":{"gitId":"JeremyYong128"},"content":"        assertTrue(predicate.test(new JobBuilder().withStatus(JobStatus.PENDING.toString()).build()));","lastModifiedDate":"2023-10-26"},{"lineNumber":144,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":145,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":146,"author":{"gitId":"JeremyYong128"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":147,"author":{"gitId":"JeremyYong128"},"content":"    public void test_statusDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2023-10-26"},{"lineNumber":148,"author":{"gitId":"JeremyYong128"},"content":"        // Multiple keywords","lastModifiedDate":"2023-10-14"},{"lineNumber":149,"author":{"gitId":"JeremyYong128"},"content":"        FieldContainsKeywordsPredicate predicate \u003d new FieldContainsKeywordsPredicate(","lastModifiedDate":"2023-10-26"},{"lineNumber":150,"author":{"gitId":"JeremyYong128"},"content":"                PREFIX_STATUS, Arrays.asList(JobStatus.PENDING.toString(), JobStatus.APPROVED.toString()));","lastModifiedDate":"2023-10-26"},{"lineNumber":151,"author":{"gitId":"JeremyYong128"},"content":"        assertFalse(predicate.test(new JobBuilder().withStatus(JobStatus.PENDING.toString()).build()));","lastModifiedDate":"2023-10-26"},{"lineNumber":152,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":153,"author":{"gitId":"JeremyYong128"},"content":"        // Non-matching keyword","lastModifiedDate":"2023-10-26"},{"lineNumber":154,"author":{"gitId":"JeremyYong128"},"content":"        predicate \u003d new FieldContainsKeywordsPredicate(PREFIX_STATUS, Arrays.asList(\"Apple\"));","lastModifiedDate":"2023-10-26"},{"lineNumber":155,"author":{"gitId":"JeremyYong128"},"content":"        assertFalse(predicate.test(new JobBuilder().withStatus(JobStatus.PENDING.toString()).build()));","lastModifiedDate":"2023-10-26"},{"lineNumber":156,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":157,"author":{"gitId":"JeremyYong128"},"content":"        // Keywords match company, but does not match status","lastModifiedDate":"2023-10-26"},{"lineNumber":158,"author":{"gitId":"JeremyYong128"},"content":"        predicate \u003d new FieldContainsKeywordsPredicate(PREFIX_STATUS, Arrays.asList(JobStatus.PENDING.toString()));","lastModifiedDate":"2023-10-26"},{"lineNumber":159,"author":{"gitId":"JeremyYong128"},"content":"        assertFalse(predicate.test(new JobBuilder()","lastModifiedDate":"2023-10-26"},{"lineNumber":160,"author":{"gitId":"JeremyYong128"},"content":"                .withRole(JobStatus.APPROVED.toString())","lastModifiedDate":"2023-10-26"},{"lineNumber":161,"author":{"gitId":"JeremyYong128"},"content":"                .withCompany(JobStatus.PENDING.toString()).build()));","lastModifiedDate":"2023-10-26"},{"lineNumber":162,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":163,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":164,"author":{"gitId":"JeremyYong128"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":165,"author":{"gitId":"JeremyYong128"},"content":"    public void test_industryContainsKeywords_returnsTrue() {","lastModifiedDate":"2023-10-26"},{"lineNumber":166,"author":{"gitId":"JeremyYong128"},"content":"        // One keyword","lastModifiedDate":"2023-10-26"},{"lineNumber":167,"author":{"gitId":"JeremyYong128"},"content":"        FieldContainsKeywordsPredicate predicate \u003d new FieldContainsKeywordsPredicate(","lastModifiedDate":"2023-10-26"},{"lineNumber":168,"author":{"gitId":"JeremyYong128"},"content":"                PREFIX_INDUSTRY, Collections.singletonList(\"Tech\"));","lastModifiedDate":"2023-10-26"},{"lineNumber":169,"author":{"gitId":"JeremyYong128"},"content":"        assertTrue(predicate.test(new JobBuilder().withIndustry(\"Tech\").build()));","lastModifiedDate":"2023-10-26"},{"lineNumber":170,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":171,"author":{"gitId":"JeremyYong128"},"content":"        // Multiple keywords","lastModifiedDate":"2023-10-26"},{"lineNumber":172,"author":{"gitId":"JeremyYong128"},"content":"        predicate \u003d new FieldContainsKeywordsPredicate(PREFIX_INDUSTRY, Arrays.asList(\"Food\", \"Science\"));","lastModifiedDate":"2023-10-26"},{"lineNumber":173,"author":{"gitId":"JeremyYong128"},"content":"        assertTrue(predicate.test(new JobBuilder().withIndustry(\"Food Science\").build()));","lastModifiedDate":"2023-10-26"},{"lineNumber":174,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":175,"author":{"gitId":"JeremyYong128"},"content":"        // Mixed-case keywords","lastModifiedDate":"2023-10-26"},{"lineNumber":176,"author":{"gitId":"JeremyYong128"},"content":"        predicate \u003d new FieldContainsKeywordsPredicate(PREFIX_INDUSTRY, Arrays.asList(\"fOOd\", \"sCIEnce\"));","lastModifiedDate":"2023-10-26"},{"lineNumber":177,"author":{"gitId":"JeremyYong128"},"content":"        assertTrue(predicate.test(new JobBuilder().withIndustry(\"Food Science\").build()));","lastModifiedDate":"2023-10-26"},{"lineNumber":178,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":179,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":180,"author":{"gitId":"JeremyYong128"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":181,"author":{"gitId":"JeremyYong128"},"content":"    public void test_industryDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2023-10-26"},{"lineNumber":182,"author":{"gitId":"JeremyYong128"},"content":"        // Only one matching keyword","lastModifiedDate":"2023-10-14"},{"lineNumber":183,"author":{"gitId":"JeremyYong128"},"content":"        FieldContainsKeywordsPredicate predicate \u003d new FieldContainsKeywordsPredicate(","lastModifiedDate":"2023-10-26"},{"lineNumber":184,"author":{"gitId":"JeremyYong128"},"content":"                PREFIX_INDUSTRY, Arrays.asList(\"Food\", \"Science\"));","lastModifiedDate":"2023-10-26"},{"lineNumber":185,"author":{"gitId":"JeremyYong128"},"content":"        assertFalse(predicate.test(new JobBuilder().withIndustry(\"Computer Science\").build()));","lastModifiedDate":"2023-10-26"},{"lineNumber":186,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":187,"author":{"gitId":"JeremyYong128"},"content":"        // Non-matching keyword","lastModifiedDate":"2023-10-26"},{"lineNumber":188,"author":{"gitId":"JeremyYong128"},"content":"        predicate \u003d new FieldContainsKeywordsPredicate(PREFIX_INDUSTRY, Arrays.asList(\"Apple\"));","lastModifiedDate":"2023-10-26"},{"lineNumber":189,"author":{"gitId":"JeremyYong128"},"content":"        assertFalse(predicate.test(new JobBuilder().withIndustry(\"Food Science\").build()));","lastModifiedDate":"2023-10-26"},{"lineNumber":190,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":191,"author":{"gitId":"JeremyYong128"},"content":"        // Keywords match role, but does not match industry","lastModifiedDate":"2023-10-26"},{"lineNumber":192,"author":{"gitId":"JeremyYong128"},"content":"        predicate \u003d new FieldContainsKeywordsPredicate(PREFIX_INDUSTRY, Arrays.asList(\"Food\"));","lastModifiedDate":"2023-10-26"},{"lineNumber":193,"author":{"gitId":"JeremyYong128"},"content":"        assertFalse(predicate.test(new JobBuilder().withRole(\"Food Science\").withIndustry(\"Computer Science\").build()));","lastModifiedDate":"2023-10-26"},{"lineNumber":194,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":195,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":196,"author":{"gitId":"JeremyYong128"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":197,"author":{"gitId":"JeremyYong128"},"content":"    public void test_deadlineContainsKeywords_returnsTrue() {","lastModifiedDate":"2023-10-26"},{"lineNumber":198,"author":{"gitId":"JeremyYong128"},"content":"        // One keyword","lastModifiedDate":"2023-10-26"},{"lineNumber":199,"author":{"gitId":"JeremyYong128"},"content":"        FieldContainsKeywordsPredicate predicate \u003d new FieldContainsKeywordsPredicate(","lastModifiedDate":"2023-10-26"},{"lineNumber":200,"author":{"gitId":"JeremyYong128"},"content":"                PREFIX_DEADLINE, Collections.singletonList(\"Dec\"));","lastModifiedDate":"2023-10-26"},{"lineNumber":201,"author":{"gitId":"JeremyYong128"},"content":"        assertTrue(predicate.test(new JobBuilder().withDeadline(\"Dec 01 2030 1200\").build()));","lastModifiedDate":"2023-10-26"},{"lineNumber":202,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":203,"author":{"gitId":"JeremyYong128"},"content":"        // Multiple keywords","lastModifiedDate":"2023-10-26"},{"lineNumber":204,"author":{"gitId":"JeremyYong128"},"content":"        predicate \u003d new FieldContainsKeywordsPredicate(PREFIX_DEADLINE, Arrays.asList(\"Dec\", \"01\"));","lastModifiedDate":"2023-10-26"},{"lineNumber":205,"author":{"gitId":"JeremyYong128"},"content":"        assertTrue(predicate.test(new JobBuilder().withDeadline(\"Dec 01 2030 1200\").build()));","lastModifiedDate":"2023-10-26"},{"lineNumber":206,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":207,"author":{"gitId":"JeremyYong128"},"content":"        // Mixed-case keywords","lastModifiedDate":"2023-10-14"},{"lineNumber":208,"author":{"gitId":"JeremyYong128"},"content":"        predicate \u003d new FieldContainsKeywordsPredicate(PREFIX_DEADLINE, Arrays.asList(\"deC\", \"01\"));","lastModifiedDate":"2023-10-26"},{"lineNumber":209,"author":{"gitId":"JeremyYong128"},"content":"        assertTrue(predicate.test(new JobBuilder().withDeadline(\"Dec 01 2030 1200\").build()));","lastModifiedDate":"2023-10-26"},{"lineNumber":210,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":211,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":212,"author":{"gitId":"JeremyYong128"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":213,"author":{"gitId":"JeremyYong128"},"content":"    public void test_deadlineDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2023-10-26"},{"lineNumber":214,"author":{"gitId":"JeremyYong128"},"content":"        // Only one matching keyword","lastModifiedDate":"2023-10-26"},{"lineNumber":215,"author":{"gitId":"JeremyYong128"},"content":"        FieldContainsKeywordsPredicate predicate \u003d new FieldContainsKeywordsPredicate(","lastModifiedDate":"2023-10-26"},{"lineNumber":216,"author":{"gitId":"JeremyYong128"},"content":"                PREFIX_COMPANY, Arrays.asList(\"Sep\", \"01\"));","lastModifiedDate":"2023-10-26"},{"lineNumber":217,"author":{"gitId":"JeremyYong128"},"content":"        assertFalse(predicate.test(new JobBuilder().withDeadline(\"Dec 01 2030 1200\").build()));","lastModifiedDate":"2023-10-26"},{"lineNumber":218,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":219,"author":{"gitId":"JeremyYong128"},"content":"        // Non-matching keyword","lastModifiedDate":"2023-10-26"},{"lineNumber":220,"author":{"gitId":"JeremyYong128"},"content":"        predicate \u003d new FieldContainsKeywordsPredicate(PREFIX_DEADLINE, Arrays.asList(\"Sep\"));","lastModifiedDate":"2023-10-26"},{"lineNumber":221,"author":{"gitId":"JeremyYong128"},"content":"        assertFalse(predicate.test(new JobBuilder().withDeadline(\"Dec 01 2030 1200\").build()));","lastModifiedDate":"2023-10-26"},{"lineNumber":222,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":223,"author":{"gitId":"JeremyYong128"},"content":"        // Keywords match company, but does not match deadline","lastModifiedDate":"2023-10-26"},{"lineNumber":224,"author":{"gitId":"JeremyYong128"},"content":"        predicate \u003d new FieldContainsKeywordsPredicate(PREFIX_DEADLINE, Arrays.asList(\"Dec\"));","lastModifiedDate":"2023-10-26"},{"lineNumber":225,"author":{"gitId":"JeremyYong128"},"content":"        assertFalse(predicate.test(new JobBuilder().withDeadline(\"Sep 01 2030 1200\").withCompany(\"Dec\").build()));","lastModifiedDate":"2023-10-26"},{"lineNumber":226,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":227,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":228,"author":{"gitId":"JeremyYong128"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":229,"author":{"gitId":"JeremyYong128"},"content":"    public void test_jobTypeContainsKeywords_returnsTrue() {","lastModifiedDate":"2023-10-26"},{"lineNumber":230,"author":{"gitId":"JeremyYong128"},"content":"        // One keyword","lastModifiedDate":"2023-10-26"},{"lineNumber":231,"author":{"gitId":"JeremyYong128"},"content":"        FieldContainsKeywordsPredicate predicate \u003d new FieldContainsKeywordsPredicate(","lastModifiedDate":"2023-10-26"},{"lineNumber":232,"author":{"gitId":"JeremyYong128"},"content":"                PREFIX_COMPANY, Collections.singletonList(\"Google\"));","lastModifiedDate":"2023-10-26"},{"lineNumber":233,"author":{"gitId":"JeremyYong128"},"content":"        assertTrue(predicate.test(new JobBuilder().withCompany(\"Google Singapore\").build()));","lastModifiedDate":"2023-10-26"},{"lineNumber":234,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":235,"author":{"gitId":"JeremyYong128"},"content":"        // Mixed-case keywords","lastModifiedDate":"2023-10-26"},{"lineNumber":236,"author":{"gitId":"JeremyYong128"},"content":"        predicate \u003d new FieldContainsKeywordsPredicate(PREFIX_COMPANY, Arrays.asList(\"gOOgLe\", \"SinGApOre\"));","lastModifiedDate":"2023-10-26"},{"lineNumber":237,"author":{"gitId":"JeremyYong128"},"content":"        assertTrue(predicate.test(new JobBuilder().withCompany(\"Google Singapore\").build()));","lastModifiedDate":"2023-10-14"},{"lineNumber":238,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":239,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":240,"author":{"gitId":"JeremyYong128"},"content":"    @Test","lastModifiedDate":"2023-10-14"},{"lineNumber":241,"author":{"gitId":"JeremyYong128"},"content":"    public void test_jobTypeDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2023-10-26"},{"lineNumber":242,"author":{"gitId":"JeremyYong128"},"content":"        // Multiple keywords","lastModifiedDate":"2023-10-26"},{"lineNumber":243,"author":{"gitId":"JeremyYong128"},"content":"        FieldContainsKeywordsPredicate predicate \u003d new FieldContainsKeywordsPredicate(","lastModifiedDate":"2023-10-14"},{"lineNumber":244,"author":{"gitId":"JeremyYong128"},"content":"                PREFIX_JOB_TYPE, Arrays.asList(JobTypes.CONTRACT.toString(), JobTypes.FREELANCE.toString()));","lastModifiedDate":"2023-10-26"},{"lineNumber":245,"author":{"gitId":"JeremyYong128"},"content":"        assertFalse(predicate.test(new JobBuilder().withJobType(JobTypes.CONTRACT.toString()).build()));","lastModifiedDate":"2023-10-26"},{"lineNumber":246,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":247,"author":{"gitId":"JeremyYong128"},"content":"        // Non-matching keyword","lastModifiedDate":"2023-10-14"},{"lineNumber":248,"author":{"gitId":"JeremyYong128"},"content":"        predicate \u003d new FieldContainsKeywordsPredicate(PREFIX_JOB_TYPE, Arrays.asList(JobTypes.FREELANCE.toString()));","lastModifiedDate":"2023-10-26"},{"lineNumber":249,"author":{"gitId":"JeremyYong128"},"content":"        assertFalse(predicate.test(new JobBuilder().withJobType(JobTypes.CONTRACT.toString()).build()));","lastModifiedDate":"2023-10-26"},{"lineNumber":250,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":251,"author":{"gitId":"JeremyYong128"},"content":"        // Keywords match role, but does not match company","lastModifiedDate":"2023-10-14"},{"lineNumber":252,"author":{"gitId":"JeremyYong128"},"content":"        predicate \u003d new FieldContainsKeywordsPredicate(PREFIX_JOB_TYPE, Arrays.asList(JobTypes.FREELANCE.toString()));","lastModifiedDate":"2023-10-26"},{"lineNumber":253,"author":{"gitId":"JeremyYong128"},"content":"        assertFalse(predicate.test(new JobBuilder()","lastModifiedDate":"2023-10-26"},{"lineNumber":254,"author":{"gitId":"JeremyYong128"},"content":"                .withRole(JobTypes.FREELANCE.toString())","lastModifiedDate":"2023-10-26"},{"lineNumber":255,"author":{"gitId":"JeremyYong128"},"content":"                .withCompany(JobTypes.CONTRACT.toString()).build()));","lastModifiedDate":"2023-10-26"},{"lineNumber":256,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":257,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":258,"author":{"gitId":"JeremyYong128"},"content":"    @Test","lastModifiedDate":"2023-10-14"},{"lineNumber":259,"author":{"gitId":"JeremyYong128"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-14"},{"lineNumber":260,"author":{"gitId":"JeremyYong128"},"content":"        List\u003cString\u003e keywords \u003d List.of(\"keyword1\", \"keyword2\");","lastModifiedDate":"2023-10-14"},{"lineNumber":261,"author":{"gitId":"JeremyYong128"},"content":"        FieldContainsKeywordsPredicate predicate \u003d new FieldContainsKeywordsPredicate(PREFIX_COMPANY, keywords);","lastModifiedDate":"2023-10-26"},{"lineNumber":262,"author":{"gitId":"JeremyYong128"},"content":"        String expected \u003d FieldContainsKeywordsPredicate.class.getCanonicalName() + \"{keywords\u003d\" + keywords + \"}\";","lastModifiedDate":"2023-10-14"},{"lineNumber":263,"author":{"gitId":"JeremyYong128"},"content":"        assertEquals(expected, predicate.toString());","lastModifiedDate":"2023-10-14"},{"lineNumber":264,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":265,"author":{"gitId":"JeremyYong128"},"content":"}","lastModifiedDate":"2023-10-14"}],"authorContributionMap":{"JeremyYong128":256,"migfoo02":9}},{"path":"src/test/java/seedu/application/model/job/IndustryTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"czhiruo"},"content":"package seedu.application.model.job;","lastModifiedDate":"2023-10-22"},{"lineNumber":2,"author":{"gitId":"czhiruo"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":3,"author":{"gitId":"migfoo02"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-23"},{"lineNumber":4,"author":{"gitId":"migfoo02"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-23"},{"lineNumber":5,"author":{"gitId":"migfoo02"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2023-10-23"},{"lineNumber":6,"author":{"gitId":"migfoo02"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-23"},{"lineNumber":7,"author":{"gitId":"czhiruo"},"content":"import static seedu.application.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-22"},{"lineNumber":8,"author":{"gitId":"czhiruo"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":9,"author":{"gitId":"czhiruo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-22"},{"lineNumber":10,"author":{"gitId":"czhiruo"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":11,"author":{"gitId":"czhiruo"},"content":"class IndustryTest {","lastModifiedDate":"2023-10-22"},{"lineNumber":12,"author":{"gitId":"czhiruo"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":13,"author":{"gitId":"czhiruo"},"content":"    @Test","lastModifiedDate":"2023-10-22"},{"lineNumber":14,"author":{"gitId":"czhiruo"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-10-22"},{"lineNumber":15,"author":{"gitId":"czhiruo"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Industry(null));","lastModifiedDate":"2023-10-22"},{"lineNumber":16,"author":{"gitId":"czhiruo"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":17,"author":{"gitId":"czhiruo"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":18,"author":{"gitId":"czhiruo"},"content":"    @Test","lastModifiedDate":"2023-10-22"},{"lineNumber":19,"author":{"gitId":"czhiruo"},"content":"    public void constructor_invalidIndustry_throwsIllegalArgumentException() {","lastModifiedDate":"2023-10-22"},{"lineNumber":20,"author":{"gitId":"czhiruo"},"content":"        String invalidIndustry \u003d \"\";","lastModifiedDate":"2023-10-22"},{"lineNumber":21,"author":{"gitId":"czhiruo"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Industry(invalidIndustry));","lastModifiedDate":"2023-10-22"},{"lineNumber":22,"author":{"gitId":"czhiruo"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":23,"author":{"gitId":"czhiruo"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":24,"author":{"gitId":"czhiruo"},"content":"    @Test","lastModifiedDate":"2023-10-22"},{"lineNumber":25,"author":{"gitId":"czhiruo"},"content":"    void isValidIndustry() {","lastModifiedDate":"2023-10-22"},{"lineNumber":26,"author":{"gitId":"czhiruo"},"content":"        // null industry","lastModifiedDate":"2023-10-22"},{"lineNumber":27,"author":{"gitId":"czhiruo"},"content":"        assertThrows(NullPointerException.class, () -\u003e Industry.isValidIndustry(null));","lastModifiedDate":"2023-10-22"},{"lineNumber":28,"author":{"gitId":"czhiruo"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":29,"author":{"gitId":"czhiruo"},"content":"        // invalid industries","lastModifiedDate":"2023-10-22"},{"lineNumber":30,"author":{"gitId":"czhiruo"},"content":"        assertFalse(Industry.isValidIndustry(\"\")); // empty string","lastModifiedDate":"2023-10-22"},{"lineNumber":31,"author":{"gitId":"czhiruo"},"content":"        assertFalse(Industry.isValidIndustry(\" \")); // spaces only","lastModifiedDate":"2023-10-22"},{"lineNumber":32,"author":{"gitId":"czhiruo"},"content":"        assertFalse(Industry.isValidIndustry(\"$Finance\")); // starts with non-alphanumeric character","lastModifiedDate":"2023-10-22"},{"lineNumber":33,"author":{"gitId":"czhiruo"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":34,"author":{"gitId":"czhiruo"},"content":"        // valid industries","lastModifiedDate":"2023-10-22"},{"lineNumber":35,"author":{"gitId":"czhiruo"},"content":"        assertTrue(Industry.isValidIndustry(\"Farming\"));","lastModifiedDate":"2023-10-22"},{"lineNumber":36,"author":{"gitId":"JeremyYong128"},"content":"        assertTrue(Industry.isValidIndustry(\"Health \u0026 Wellness\")); // non-alphanumeric characters","lastModifiedDate":"2023-10-31"},{"lineNumber":37,"author":{"gitId":"JeremyYong128"},"content":"        assertTrue(Industry.isValidIndustry(\"Bitcoin 2\")); // with numbers","lastModifiedDate":"2023-10-31"},{"lineNumber":38,"author":{"gitId":"czhiruo"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":39,"author":{"gitId":"czhiruo"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":40,"author":{"gitId":"czhiruo"},"content":"    @Test","lastModifiedDate":"2023-10-22"},{"lineNumber":41,"author":{"gitId":"czhiruo"},"content":"    void testEqualsAndHashcode() {","lastModifiedDate":"2023-10-28"},{"lineNumber":42,"author":{"gitId":"czhiruo"},"content":"        Industry industry \u003d new Industry(\"Finance\");","lastModifiedDate":"2023-10-22"},{"lineNumber":43,"author":{"gitId":"czhiruo"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":44,"author":{"gitId":"czhiruo"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-22"},{"lineNumber":45,"author":{"gitId":"czhiruo"},"content":"        assertTrue(industry.equals(new Industry(\"Finance\")));","lastModifiedDate":"2023-10-28"},{"lineNumber":46,"author":{"gitId":"czhiruo"},"content":"        assertEquals(industry.hashCode(), new Industry(\"Finance\").hashCode());","lastModifiedDate":"2023-10-28"},{"lineNumber":47,"author":{"gitId":"czhiruo"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":48,"author":{"gitId":"czhiruo"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-22"},{"lineNumber":49,"author":{"gitId":"czhiruo"},"content":"        assertTrue(industry.equals(industry));","lastModifiedDate":"2023-10-28"},{"lineNumber":50,"author":{"gitId":"czhiruo"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":51,"author":{"gitId":"czhiruo"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-22"},{"lineNumber":52,"author":{"gitId":"czhiruo"},"content":"        assertFalse(industry.equals(null));","lastModifiedDate":"2023-10-28"},{"lineNumber":53,"author":{"gitId":"czhiruo"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":54,"author":{"gitId":"czhiruo"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-22"},{"lineNumber":55,"author":{"gitId":"czhiruo"},"content":"        assertFalse(industry.equals(new Company(\"Google\")));","lastModifiedDate":"2023-10-28"},{"lineNumber":56,"author":{"gitId":"czhiruo"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":57,"author":{"gitId":"czhiruo"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2023-10-22"},{"lineNumber":58,"author":{"gitId":"czhiruo"},"content":"        assertFalse(industry.equals(new Industry(\"Engineering\")));","lastModifiedDate":"2023-10-28"},{"lineNumber":59,"author":{"gitId":"czhiruo"},"content":"        assertNotEquals(industry.hashCode(), (new Industry(\"Engineering\").hashCode()));","lastModifiedDate":"2023-10-28"},{"lineNumber":60,"author":{"gitId":"czhiruo"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":61,"author":{"gitId":"czhiruo"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":62,"author":{"gitId":"czhiruo"},"content":"}","lastModifiedDate":"2023-10-22"}],"authorContributionMap":{"czhiruo":56,"JeremyYong128":2,"migfoo02":4}},{"path":"src/test/java/seedu/application/model/job/JobTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"evanyan13"},"content":"package seedu.application.model.job;","lastModifiedDate":"2023-10-10"},{"lineNumber":2,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":3,"author":{"gitId":"JeremyYong128"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-04"},{"lineNumber":4,"author":{"gitId":"JeremyYong128"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-04"},{"lineNumber":5,"author":{"gitId":"migfoo02"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2023-10-23"},{"lineNumber":6,"author":{"gitId":"JeremyYong128"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-04"},{"lineNumber":7,"author":{"gitId":"migfoo02"},"content":"import static seedu.application.logic.commands.CommandTestUtil.VALID_COMPANY_CHEF;","lastModifiedDate":"2023-10-23"},{"lineNumber":8,"author":{"gitId":"migfoo02"},"content":"import static seedu.application.logic.commands.CommandTestUtil.VALID_COMPANY_CLEANER;","lastModifiedDate":"2023-10-23"},{"lineNumber":9,"author":{"gitId":"migfoo02"},"content":"import static seedu.application.logic.commands.CommandTestUtil.VALID_DEADLINE_CLEANER;","lastModifiedDate":"2023-10-23"},{"lineNumber":10,"author":{"gitId":"migfoo02"},"content":"import static seedu.application.logic.commands.CommandTestUtil.VALID_INDUSTRY_CLEANER;","lastModifiedDate":"2023-10-23"},{"lineNumber":11,"author":{"gitId":"migfoo02"},"content":"import static seedu.application.logic.commands.CommandTestUtil.VALID_JOB_TYPE_CLEANER;","lastModifiedDate":"2023-10-23"},{"lineNumber":12,"author":{"gitId":"migfoo02"},"content":"import static seedu.application.logic.commands.CommandTestUtil.VALID_ROLE_CLEANER;","lastModifiedDate":"2023-10-23"},{"lineNumber":13,"author":{"gitId":"migfoo02"},"content":"import static seedu.application.logic.commands.CommandTestUtil.VALID_STATUS_CLEANER;","lastModifiedDate":"2023-10-23"},{"lineNumber":14,"author":{"gitId":"evanyan13"},"content":"import static seedu.application.testutil.TypicalJobs.CHEF;","lastModifiedDate":"2023-10-10"},{"lineNumber":15,"author":{"gitId":"evanyan13"},"content":"import static seedu.application.testutil.TypicalJobs.CLEANER;","lastModifiedDate":"2023-10-10"},{"lineNumber":16,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":17,"author":{"gitId":"JeremyYong128"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-04"},{"lineNumber":18,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":19,"author":{"gitId":"evanyan13"},"content":"import seedu.application.testutil.JobBuilder;","lastModifiedDate":"2023-10-10"},{"lineNumber":20,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":21,"author":{"gitId":"JeremyYong128"},"content":"public class JobTest {","lastModifiedDate":"2023-10-04"},{"lineNumber":22,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":23,"author":{"gitId":"JeremyYong128"},"content":"    @Test","lastModifiedDate":"2023-10-04"},{"lineNumber":24,"author":{"gitId":"JeremyYong128"},"content":"    public void isSameJob() {","lastModifiedDate":"2023-10-04"},{"lineNumber":25,"author":{"gitId":"JeremyYong128"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-04"},{"lineNumber":26,"author":{"gitId":"JeremyYong128"},"content":"        assertTrue(CHEF.isSameJob(CHEF));","lastModifiedDate":"2023-10-04"},{"lineNumber":27,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":28,"author":{"gitId":"JeremyYong128"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-04"},{"lineNumber":29,"author":{"gitId":"JeremyYong128"},"content":"        assertFalse(CHEF.isSameJob(null));","lastModifiedDate":"2023-10-04"},{"lineNumber":30,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":31,"author":{"gitId":"JeremyYong128"},"content":"        // To be implemented after non-identity fields are created","lastModifiedDate":"2023-10-04"},{"lineNumber":32,"author":{"gitId":"JeremyYong128"},"content":"        // same role and company, all other attributes different -\u003e returns true","lastModifiedDate":"2023-10-04"},{"lineNumber":33,"author":{"gitId":"JeremyYong128"},"content":"        Job editedChef \u003d new JobBuilder(CHEF).withCompany(VALID_COMPANY_CHEF).build();","lastModifiedDate":"2023-10-04"},{"lineNumber":34,"author":{"gitId":"JeremyYong128"},"content":"        assertTrue(CHEF.isSameJob(editedChef));","lastModifiedDate":"2023-10-04"},{"lineNumber":35,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":36,"author":{"gitId":"JeremyYong128"},"content":"        // different role, all other attributes same -\u003e returns false","lastModifiedDate":"2023-10-04"},{"lineNumber":37,"author":{"gitId":"JeremyYong128"},"content":"        editedChef \u003d new JobBuilder(CHEF).withRole(VALID_ROLE_CLEANER).build();","lastModifiedDate":"2023-10-04"},{"lineNumber":38,"author":{"gitId":"JeremyYong128"},"content":"        assertFalse(CHEF.isSameJob(editedChef));","lastModifiedDate":"2023-10-04"},{"lineNumber":39,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":40,"author":{"gitId":"JeremyYong128"},"content":"        // role differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2023-10-04"},{"lineNumber":41,"author":{"gitId":"JeremyYong128"},"content":"        Job editedCleaner \u003d new JobBuilder(CLEANER).withRole(VALID_ROLE_CLEANER.toLowerCase()).build();","lastModifiedDate":"2023-10-04"},{"lineNumber":42,"author":{"gitId":"JeremyYong128"},"content":"        assertFalse(CLEANER.isSameJob(editedCleaner));","lastModifiedDate":"2023-10-04"},{"lineNumber":43,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":44,"author":{"gitId":"JeremyYong128"},"content":"        // role has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2023-10-04"},{"lineNumber":45,"author":{"gitId":"JeremyYong128"},"content":"        String roleWithTrailingSpaces \u003d VALID_ROLE_CLEANER + \" \";","lastModifiedDate":"2023-10-04"},{"lineNumber":46,"author":{"gitId":"JeremyYong128"},"content":"        editedCleaner \u003d new JobBuilder(CLEANER).withRole(roleWithTrailingSpaces).build();","lastModifiedDate":"2023-10-04"},{"lineNumber":47,"author":{"gitId":"JeremyYong128"},"content":"        assertFalse(CLEANER.isSameJob(editedCleaner));","lastModifiedDate":"2023-10-04"},{"lineNumber":48,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":49,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":50,"author":{"gitId":"JeremyYong128"},"content":"    @Test","lastModifiedDate":"2023-10-04"},{"lineNumber":51,"author":{"gitId":"czhiruo"},"content":"    public void testEqualsAndHashcode() {","lastModifiedDate":"2023-10-28"},{"lineNumber":52,"author":{"gitId":"JeremyYong128"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-04"},{"lineNumber":53,"author":{"gitId":"JeremyYong128"},"content":"        Job chefCopy \u003d new JobBuilder(CHEF).build();","lastModifiedDate":"2023-10-04"},{"lineNumber":54,"author":{"gitId":"czhiruo"},"content":"        assertTrue(CHEF.equals(chefCopy));","lastModifiedDate":"2023-10-28"},{"lineNumber":55,"author":{"gitId":"czhiruo"},"content":"        assertEquals(CHEF.hashCode(), chefCopy.hashCode());","lastModifiedDate":"2023-10-28"},{"lineNumber":56,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":57,"author":{"gitId":"JeremyYong128"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-04"},{"lineNumber":58,"author":{"gitId":"czhiruo"},"content":"        assertTrue(CHEF.equals(CHEF));","lastModifiedDate":"2023-10-28"},{"lineNumber":59,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":60,"author":{"gitId":"JeremyYong128"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-04"},{"lineNumber":61,"author":{"gitId":"czhiruo"},"content":"        assertFalse(CHEF.equals(null));","lastModifiedDate":"2023-10-28"},{"lineNumber":62,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":63,"author":{"gitId":"JeremyYong128"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2023-10-04"},{"lineNumber":64,"author":{"gitId":"czhiruo"},"content":"        assertFalse(CHEF.equals(5.0f));","lastModifiedDate":"2023-10-28"},{"lineNumber":65,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":66,"author":{"gitId":"JeremyYong128"},"content":"        // different job -\u003e returns false","lastModifiedDate":"2023-10-04"},{"lineNumber":67,"author":{"gitId":"czhiruo"},"content":"        assertFalse(CHEF.equals(CLEANER));","lastModifiedDate":"2023-10-28"},{"lineNumber":68,"author":{"gitId":"czhiruo"},"content":"        assertNotEquals(CHEF.hashCode(), CLEANER.hashCode());","lastModifiedDate":"2023-10-28"},{"lineNumber":69,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":70,"author":{"gitId":"JeremyYong128"},"content":"        // different role -\u003e returns false","lastModifiedDate":"2023-10-04"},{"lineNumber":71,"author":{"gitId":"czhiruo"},"content":"        Job chefEditedRole \u003d new JobBuilder(CHEF).withRole(VALID_ROLE_CLEANER).build();","lastModifiedDate":"2023-10-28"},{"lineNumber":72,"author":{"gitId":"czhiruo"},"content":"        assertFalse(CHEF.equals(chefEditedRole));","lastModifiedDate":"2023-10-28"},{"lineNumber":73,"author":{"gitId":"czhiruo"},"content":"        assertNotEquals(CHEF.hashCode(), chefEditedRole.hashCode());","lastModifiedDate":"2023-10-28"},{"lineNumber":74,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":75,"author":{"gitId":"JeremyYong128"},"content":"        // different company -\u003e returns false","lastModifiedDate":"2023-10-04"},{"lineNumber":76,"author":{"gitId":"czhiruo"},"content":"        Job chefEditedCompany \u003d new JobBuilder(CHEF).withCompany(VALID_COMPANY_CLEANER).build();","lastModifiedDate":"2023-10-28"},{"lineNumber":77,"author":{"gitId":"czhiruo"},"content":"        assertFalse(CHEF.equals(chefEditedCompany));","lastModifiedDate":"2023-10-28"},{"lineNumber":78,"author":{"gitId":"czhiruo"},"content":"        assertNotEquals(CHEF.hashCode(), chefEditedCompany.hashCode());","lastModifiedDate":"2023-10-28"},{"lineNumber":79,"author":{"gitId":"peiran18"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":80,"author":{"gitId":"peiran18"},"content":"        // different status -\u003e returns false","lastModifiedDate":"2023-10-15"},{"lineNumber":81,"author":{"gitId":"czhiruo"},"content":"        Job chefEditedStatus \u003d new JobBuilder(CHEF).withStatus(VALID_STATUS_CLEANER).build();","lastModifiedDate":"2023-10-28"},{"lineNumber":82,"author":{"gitId":"czhiruo"},"content":"        assertFalse(CHEF.equals(chefEditedStatus));","lastModifiedDate":"2023-10-28"},{"lineNumber":83,"author":{"gitId":"czhiruo"},"content":"        assertNotEquals(CHEF.hashCode(), chefEditedStatus.hashCode());","lastModifiedDate":"2023-10-28"},{"lineNumber":84,"author":{"gitId":"migfoo02"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":85,"author":{"gitId":"migfoo02"},"content":"        // different deadline -\u003e returns false","lastModifiedDate":"2023-10-23"},{"lineNumber":86,"author":{"gitId":"czhiruo"},"content":"        Job editedChefDeadline \u003d new JobBuilder(CHEF).withDeadline(VALID_DEADLINE_CLEANER).build();","lastModifiedDate":"2023-10-28"},{"lineNumber":87,"author":{"gitId":"czhiruo"},"content":"        assertFalse(CHEF.equals(editedChefDeadline));","lastModifiedDate":"2023-10-28"},{"lineNumber":88,"author":{"gitId":"czhiruo"},"content":"        assertNotEquals(CHEF.hashCode(), editedChefDeadline.hashCode());","lastModifiedDate":"2023-10-28"},{"lineNumber":89,"author":{"gitId":"migfoo02"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":90,"author":{"gitId":"migfoo02"},"content":"        // different job type -\u003e returns false","lastModifiedDate":"2023-10-23"},{"lineNumber":91,"author":{"gitId":"czhiruo"},"content":"        Job editedChefJobType \u003d new JobBuilder(CHEF).withJobType(VALID_JOB_TYPE_CLEANER).build();","lastModifiedDate":"2023-10-28"},{"lineNumber":92,"author":{"gitId":"czhiruo"},"content":"        assertFalse(CHEF.equals(editedChefJobType));","lastModifiedDate":"2023-10-28"},{"lineNumber":93,"author":{"gitId":"czhiruo"},"content":"        assertNotEquals(CHEF.hashCode(), editedChefJobType.hashCode());","lastModifiedDate":"2023-10-28"},{"lineNumber":94,"author":{"gitId":"czhiruo"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":95,"author":{"gitId":"czhiruo"},"content":"        // different industry -\u003e returns false","lastModifiedDate":"2023-10-20"},{"lineNumber":96,"author":{"gitId":"czhiruo"},"content":"        Job editedChefIndustry \u003d new JobBuilder(CHEF).withIndustry(VALID_INDUSTRY_CLEANER).build();","lastModifiedDate":"2023-10-28"},{"lineNumber":97,"author":{"gitId":"czhiruo"},"content":"        assertFalse(CHEF.equals(editedChefIndustry));","lastModifiedDate":"2023-10-28"},{"lineNumber":98,"author":{"gitId":"czhiruo"},"content":"        assertNotEquals(CHEF.hashCode(), editedChefIndustry.hashCode());","lastModifiedDate":"2023-10-28"},{"lineNumber":99,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":100,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":101,"author":{"gitId":"JeremyYong128"},"content":"    @Test","lastModifiedDate":"2023-10-04"},{"lineNumber":102,"author":{"gitId":"JeremyYong128"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-04"},{"lineNumber":103,"author":{"gitId":"migfoo02"},"content":"        String expected \u003d Job.class.getCanonicalName()","lastModifiedDate":"2023-10-23"},{"lineNumber":104,"author":{"gitId":"migfoo02"},"content":"                + \"{role\u003d\" + CHEF.getRole()","lastModifiedDate":"2023-10-23"},{"lineNumber":105,"author":{"gitId":"migfoo02"},"content":"                + \", company\u003d\" + CHEF.getCompany()","lastModifiedDate":"2023-10-23"},{"lineNumber":106,"author":{"gitId":"migfoo02"},"content":"                + \", deadline\u003d\" + CHEF.getDeadline()","lastModifiedDate":"2023-10-23"},{"lineNumber":107,"author":{"gitId":"migfoo02"},"content":"                + \", status\u003d\" + CHEF.getStatus()","lastModifiedDate":"2023-10-23"},{"lineNumber":108,"author":{"gitId":"migfoo02"},"content":"                + \", jobType\u003d\" + CHEF.getJobType()","lastModifiedDate":"2023-10-23"},{"lineNumber":109,"author":{"gitId":"migfoo02"},"content":"                + \", industry\u003d\" + CHEF.getIndustry()","lastModifiedDate":"2023-10-23"},{"lineNumber":110,"author":{"gitId":"migfoo02"},"content":"                + \"}\";","lastModifiedDate":"2023-10-23"},{"lineNumber":111,"author":{"gitId":"JeremyYong128"},"content":"        assertEquals(expected, CHEF.toString());","lastModifiedDate":"2023-10-04"},{"lineNumber":112,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":113,"author":{"gitId":"JeremyYong128"},"content":"}","lastModifiedDate":"2023-10-04"}],"authorContributionMap":{"czhiruo":28,"evanyan13":4,"peiran18":2,"JeremyYong128":59,"migfoo02":20}},{"path":"src/test/java/seedu/application/model/job/JobTypeTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"migfoo02"},"content":"package seedu.application.model.job;","lastModifiedDate":"2023-10-22"},{"lineNumber":2,"author":{"gitId":"migfoo02"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":3,"author":{"gitId":"migfoo02"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-23"},{"lineNumber":4,"author":{"gitId":"migfoo02"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-23"},{"lineNumber":5,"author":{"gitId":"migfoo02"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2023-10-23"},{"lineNumber":6,"author":{"gitId":"migfoo02"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-23"},{"lineNumber":7,"author":{"gitId":"migfoo02"},"content":"import static seedu.application.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-22"},{"lineNumber":8,"author":{"gitId":"migfoo02"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":9,"author":{"gitId":"migfoo02"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-22"},{"lineNumber":10,"author":{"gitId":"migfoo02"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":11,"author":{"gitId":"migfoo02"},"content":"public class JobTypeTest {","lastModifiedDate":"2023-10-22"},{"lineNumber":12,"author":{"gitId":"migfoo02"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":13,"author":{"gitId":"migfoo02"},"content":"    @Test","lastModifiedDate":"2023-10-22"},{"lineNumber":14,"author":{"gitId":"migfoo02"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-10-22"},{"lineNumber":15,"author":{"gitId":"migfoo02"},"content":"        assertThrows(NullPointerException.class, () -\u003e new JobType(null));","lastModifiedDate":"2023-10-22"},{"lineNumber":16,"author":{"gitId":"migfoo02"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":17,"author":{"gitId":"migfoo02"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":18,"author":{"gitId":"migfoo02"},"content":"    @Test","lastModifiedDate":"2023-10-22"},{"lineNumber":19,"author":{"gitId":"migfoo02"},"content":"    public void constructor_invalidStatus_throwsIllegalArgumentException() {","lastModifiedDate":"2023-10-22"},{"lineNumber":20,"author":{"gitId":"migfoo02"},"content":"        String invalidJobType \u003d \"\";","lastModifiedDate":"2023-10-22"},{"lineNumber":21,"author":{"gitId":"migfoo02"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new JobType(invalidJobType));","lastModifiedDate":"2023-10-22"},{"lineNumber":22,"author":{"gitId":"migfoo02"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":23,"author":{"gitId":"migfoo02"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":24,"author":{"gitId":"migfoo02"},"content":"    @Test","lastModifiedDate":"2023-10-22"},{"lineNumber":25,"author":{"gitId":"migfoo02"},"content":"    public void isValidJobType() {","lastModifiedDate":"2023-10-22"},{"lineNumber":26,"author":{"gitId":"migfoo02"},"content":"        // null job type","lastModifiedDate":"2023-10-22"},{"lineNumber":27,"author":{"gitId":"migfoo02"},"content":"        assertThrows(NullPointerException.class, () -\u003e JobType.isValidJobType(null));","lastModifiedDate":"2023-10-22"},{"lineNumber":28,"author":{"gitId":"migfoo02"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":29,"author":{"gitId":"migfoo02"},"content":"        // invalid job type","lastModifiedDate":"2023-10-22"},{"lineNumber":30,"author":{"gitId":"migfoo02"},"content":"        assertFalse(JobType.isValidJobType(\"\")); // empty string","lastModifiedDate":"2023-10-22"},{"lineNumber":31,"author":{"gitId":"migfoo02"},"content":"        assertFalse(JobType.isValidJobType(\" \")); // spaces only","lastModifiedDate":"2023-10-22"},{"lineNumber":32,"author":{"gitId":"migfoo02"},"content":"        assertFalse(JobType.isValidJobType(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2023-10-22"},{"lineNumber":33,"author":{"gitId":"migfoo02"},"content":"        assertFalse(JobType.isValidJobType(\"peter\")); // does not match anything in enum JobTypes","lastModifiedDate":"2023-10-22"},{"lineNumber":34,"author":{"gitId":"migfoo02"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":35,"author":{"gitId":"migfoo02"},"content":"        // valid job type","lastModifiedDate":"2023-10-22"},{"lineNumber":36,"author":{"gitId":"migfoo02"},"content":"        assertTrue(JobType.isValidJobType(\"full_time\")); // all lowercase","lastModifiedDate":"2023-10-22"},{"lineNumber":37,"author":{"gitId":"migfoo02"},"content":"        assertTrue(JobType.isValidJobType(\"Full_Time\")); // first letter capitalised","lastModifiedDate":"2023-10-22"},{"lineNumber":38,"author":{"gitId":"migfoo02"},"content":"        assertTrue(JobType.isValidJobType(\"full_TIME\")); // some lower case, some upper case","lastModifiedDate":"2023-10-22"},{"lineNumber":39,"author":{"gitId":"migfoo02"},"content":"        assertTrue(JobType.isValidJobType(\"FULL_TIME\")); // all uppercase","lastModifiedDate":"2023-10-22"},{"lineNumber":40,"author":{"gitId":"migfoo02"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":41,"author":{"gitId":"migfoo02"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":42,"author":{"gitId":"migfoo02"},"content":"    @Test","lastModifiedDate":"2023-10-22"},{"lineNumber":43,"author":{"gitId":"czhiruo"},"content":"    public void testEqualsAndHashcode() {","lastModifiedDate":"2023-10-28"},{"lineNumber":44,"author":{"gitId":"migfoo02"},"content":"        JobType jobType \u003d new JobType(\"FULL_TIME\");","lastModifiedDate":"2023-10-22"},{"lineNumber":45,"author":{"gitId":"migfoo02"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":46,"author":{"gitId":"migfoo02"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-22"},{"lineNumber":47,"author":{"gitId":"czhiruo"},"content":"        assertTrue(jobType.equals(new JobType(\"FULL_TIME\")));","lastModifiedDate":"2023-10-28"},{"lineNumber":48,"author":{"gitId":"czhiruo"},"content":"        assertEquals(jobType.hashCode(), new JobType(\"FULL_TIME\").hashCode());","lastModifiedDate":"2023-10-28"},{"lineNumber":49,"author":{"gitId":"migfoo02"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":50,"author":{"gitId":"migfoo02"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-22"},{"lineNumber":51,"author":{"gitId":"czhiruo"},"content":"        assertTrue(jobType.equals(jobType));","lastModifiedDate":"2023-10-28"},{"lineNumber":52,"author":{"gitId":"migfoo02"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":53,"author":{"gitId":"migfoo02"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-22"},{"lineNumber":54,"author":{"gitId":"czhiruo"},"content":"        assertFalse(jobType.equals(null));","lastModifiedDate":"2023-10-28"},{"lineNumber":55,"author":{"gitId":"migfoo02"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":56,"author":{"gitId":"migfoo02"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-22"},{"lineNumber":57,"author":{"gitId":"czhiruo"},"content":"        assertFalse(jobType.equals(5.0f));","lastModifiedDate":"2023-10-28"},{"lineNumber":58,"author":{"gitId":"migfoo02"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":59,"author":{"gitId":"migfoo02"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2023-10-22"},{"lineNumber":60,"author":{"gitId":"czhiruo"},"content":"        assertFalse(jobType.equals(new JobType(\"PART_TIME\")));","lastModifiedDate":"2023-10-28"},{"lineNumber":61,"author":{"gitId":"czhiruo"},"content":"        assertNotEquals(jobType.hashCode(), new JobType(\"PART_TIME\").hashCode());","lastModifiedDate":"2023-10-28"},{"lineNumber":62,"author":{"gitId":"migfoo02"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":63,"author":{"gitId":"migfoo02"},"content":"}","lastModifiedDate":"2023-10-22"}],"authorContributionMap":{"czhiruo":8,"migfoo02":55}},{"path":"src/test/java/seedu/application/model/job/RoleTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"evanyan13"},"content":"package seedu.application.model.job;","lastModifiedDate":"2023-10-10"},{"lineNumber":2,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":3,"author":{"gitId":"migfoo02"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-23"},{"lineNumber":4,"author":{"gitId":"JeremyYong128"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-04"},{"lineNumber":5,"author":{"gitId":"migfoo02"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2023-10-23"},{"lineNumber":6,"author":{"gitId":"JeremyYong128"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-04"},{"lineNumber":7,"author":{"gitId":"evanyan13"},"content":"import static seedu.application.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-10"},{"lineNumber":8,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":9,"author":{"gitId":"JeremyYong128"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-04"},{"lineNumber":10,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":11,"author":{"gitId":"JeremyYong128"},"content":"public class RoleTest {","lastModifiedDate":"2023-10-04"},{"lineNumber":12,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":13,"author":{"gitId":"JeremyYong128"},"content":"    @Test","lastModifiedDate":"2023-10-04"},{"lineNumber":14,"author":{"gitId":"JeremyYong128"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-10-04"},{"lineNumber":15,"author":{"gitId":"JeremyYong128"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Role(null));","lastModifiedDate":"2023-10-04"},{"lineNumber":16,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":17,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":18,"author":{"gitId":"JeremyYong128"},"content":"    @Test","lastModifiedDate":"2023-10-04"},{"lineNumber":19,"author":{"gitId":"JeremyYong128"},"content":"    public void constructor_invalidRole_throwsIllegalArgumentException() {","lastModifiedDate":"2023-10-04"},{"lineNumber":20,"author":{"gitId":"JeremyYong128"},"content":"        String invalidRole \u003d \"\";","lastModifiedDate":"2023-10-04"},{"lineNumber":21,"author":{"gitId":"JeremyYong128"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Role(invalidRole));","lastModifiedDate":"2023-10-04"},{"lineNumber":22,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":23,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":24,"author":{"gitId":"JeremyYong128"},"content":"    @Test","lastModifiedDate":"2023-10-04"},{"lineNumber":25,"author":{"gitId":"JeremyYong128"},"content":"    public void isValidRole() {","lastModifiedDate":"2023-10-04"},{"lineNumber":26,"author":{"gitId":"JeremyYong128"},"content":"        // null role","lastModifiedDate":"2023-10-04"},{"lineNumber":27,"author":{"gitId":"JeremyYong128"},"content":"        assertThrows(NullPointerException.class, () -\u003e Role.isValidRole(null));","lastModifiedDate":"2023-10-04"},{"lineNumber":28,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":29,"author":{"gitId":"JeremyYong128"},"content":"        // invalid role","lastModifiedDate":"2023-10-04"},{"lineNumber":30,"author":{"gitId":"JeremyYong128"},"content":"        assertFalse(Role.isValidRole(\"\")); // empty string","lastModifiedDate":"2023-10-04"},{"lineNumber":31,"author":{"gitId":"JeremyYong128"},"content":"        assertFalse(Role.isValidRole(\" \")); // spaces only","lastModifiedDate":"2023-10-04"},{"lineNumber":32,"author":{"gitId":"JeremyYong128"},"content":"        assertFalse(Role.isValidRole(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2023-10-04"},{"lineNumber":33,"author":{"gitId":"JeremyYong128"},"content":"        assertFalse(Role.isValidRole(\"peter*\")); // contains non-alphanumeric characters","lastModifiedDate":"2023-10-04"},{"lineNumber":34,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":35,"author":{"gitId":"JeremyYong128"},"content":"        // valid role","lastModifiedDate":"2023-10-04"},{"lineNumber":36,"author":{"gitId":"JeremyYong128"},"content":"        assertTrue(Role.isValidRole(\"peter jack\")); // alphabets only","lastModifiedDate":"2023-10-04"},{"lineNumber":37,"author":{"gitId":"JeremyYong128"},"content":"        assertTrue(Role.isValidRole(\"12345\")); // numbers only","lastModifiedDate":"2023-10-04"},{"lineNumber":38,"author":{"gitId":"JeremyYong128"},"content":"        assertTrue(Role.isValidRole(\"peter the 2nd\")); // alphanumeric characters","lastModifiedDate":"2023-10-04"},{"lineNumber":39,"author":{"gitId":"JeremyYong128"},"content":"        assertTrue(Role.isValidRole(\"Capital Tan\")); // with capital letters","lastModifiedDate":"2023-10-04"},{"lineNumber":40,"author":{"gitId":"JeremyYong128"},"content":"        assertTrue(Role.isValidRole(\"David Roger Jackson Ray Jr 2nd\")); // long roles","lastModifiedDate":"2023-10-04"},{"lineNumber":41,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":42,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":43,"author":{"gitId":"JeremyYong128"},"content":"    @Test","lastModifiedDate":"2023-10-04"},{"lineNumber":44,"author":{"gitId":"czhiruo"},"content":"    public void testEqualsAndHashcode() {","lastModifiedDate":"2023-10-28"},{"lineNumber":45,"author":{"gitId":"JeremyYong128"},"content":"        Role role \u003d new Role(\"Valid Role\");","lastModifiedDate":"2023-10-04"},{"lineNumber":46,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":47,"author":{"gitId":"JeremyYong128"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-04"},{"lineNumber":48,"author":{"gitId":"czhiruo"},"content":"        assertTrue(role.equals(new Role(\"Valid Role\")));","lastModifiedDate":"2023-10-28"},{"lineNumber":49,"author":{"gitId":"czhiruo"},"content":"        assertEquals(role.hashCode(), new Role(\"Valid Role\").hashCode());","lastModifiedDate":"2023-10-28"},{"lineNumber":50,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":51,"author":{"gitId":"JeremyYong128"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-04"},{"lineNumber":52,"author":{"gitId":"czhiruo"},"content":"        assertTrue(role.equals(role));","lastModifiedDate":"2023-10-28"},{"lineNumber":53,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":54,"author":{"gitId":"JeremyYong128"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-04"},{"lineNumber":55,"author":{"gitId":"czhiruo"},"content":"        assertFalse(role.equals(null));","lastModifiedDate":"2023-10-28"},{"lineNumber":56,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":57,"author":{"gitId":"JeremyYong128"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-04"},{"lineNumber":58,"author":{"gitId":"czhiruo"},"content":"        assertFalse(role.equals(5.0f));","lastModifiedDate":"2023-10-28"},{"lineNumber":59,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":60,"author":{"gitId":"JeremyYong128"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2023-10-04"},{"lineNumber":61,"author":{"gitId":"czhiruo"},"content":"        assertFalse(role.equals(new Role(\"Other Valid Role\")));","lastModifiedDate":"2023-10-28"},{"lineNumber":62,"author":{"gitId":"czhiruo"},"content":"        assertNotEquals(role.hashCode(), new Role(\"Other Valid Role\").hashCode());","lastModifiedDate":"2023-10-28"},{"lineNumber":63,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":64,"author":{"gitId":"JeremyYong128"},"content":"}","lastModifiedDate":"2023-10-04"}],"authorContributionMap":{"czhiruo":8,"evanyan13":2,"JeremyYong128":52,"migfoo02":2}},{"path":"src/test/java/seedu/application/model/job/StatusTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"peiran18"},"content":"package seedu.application.model.job;","lastModifiedDate":"2023-10-22"},{"lineNumber":2,"author":{"gitId":"peiran18"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":3,"author":{"gitId":"migfoo02"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-23"},{"lineNumber":4,"author":{"gitId":"peiran18"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-22"},{"lineNumber":5,"author":{"gitId":"migfoo02"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2023-10-23"},{"lineNumber":6,"author":{"gitId":"peiran18"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-22"},{"lineNumber":7,"author":{"gitId":"peiran18"},"content":"import static seedu.application.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-22"},{"lineNumber":8,"author":{"gitId":"peiran18"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":9,"author":{"gitId":"peiran18"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-22"},{"lineNumber":10,"author":{"gitId":"peiran18"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":11,"author":{"gitId":"peiran18"},"content":"public class StatusTest {","lastModifiedDate":"2023-10-22"},{"lineNumber":12,"author":{"gitId":"peiran18"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":13,"author":{"gitId":"peiran18"},"content":"    @Test","lastModifiedDate":"2023-10-22"},{"lineNumber":14,"author":{"gitId":"peiran18"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-10-22"},{"lineNumber":15,"author":{"gitId":"peiran18"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Status(null));","lastModifiedDate":"2023-10-22"},{"lineNumber":16,"author":{"gitId":"peiran18"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":17,"author":{"gitId":"peiran18"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":18,"author":{"gitId":"peiran18"},"content":"    @Test","lastModifiedDate":"2023-10-22"},{"lineNumber":19,"author":{"gitId":"peiran18"},"content":"    public void constructor_invalidStatus_throwsIllegalArgumentException() {","lastModifiedDate":"2023-10-22"},{"lineNumber":20,"author":{"gitId":"peiran18"},"content":"        String invalidStatus \u003d \"\";","lastModifiedDate":"2023-10-22"},{"lineNumber":21,"author":{"gitId":"peiran18"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Status(invalidStatus));","lastModifiedDate":"2023-10-22"},{"lineNumber":22,"author":{"gitId":"peiran18"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":23,"author":{"gitId":"peiran18"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":24,"author":{"gitId":"peiran18"},"content":"    @Test","lastModifiedDate":"2023-10-22"},{"lineNumber":25,"author":{"gitId":"peiran18"},"content":"    public void isValidStatus() {","lastModifiedDate":"2023-10-22"},{"lineNumber":26,"author":{"gitId":"peiran18"},"content":"        // null status","lastModifiedDate":"2023-10-22"},{"lineNumber":27,"author":{"gitId":"peiran18"},"content":"        assertThrows(NullPointerException.class, () -\u003e Status.isValidStatus(null));","lastModifiedDate":"2023-10-22"},{"lineNumber":28,"author":{"gitId":"peiran18"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":29,"author":{"gitId":"peiran18"},"content":"        // invalid status","lastModifiedDate":"2023-10-22"},{"lineNumber":30,"author":{"gitId":"peiran18"},"content":"        assertFalse(Status.isValidStatus(\"\")); // empty string","lastModifiedDate":"2023-10-22"},{"lineNumber":31,"author":{"gitId":"peiran18"},"content":"        assertFalse(Status.isValidStatus(\" \")); // spaces only","lastModifiedDate":"2023-10-22"},{"lineNumber":32,"author":{"gitId":"peiran18"},"content":"        assertFalse(Status.isValidStatus(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2023-10-22"},{"lineNumber":33,"author":{"gitId":"peiran18"},"content":"        assertFalse(Status.isValidStatus(\"peter\")); // does not match anything in enum JobStatus","lastModifiedDate":"2023-10-22"},{"lineNumber":34,"author":{"gitId":"peiran18"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":35,"author":{"gitId":"peiran18"},"content":"        // valid status","lastModifiedDate":"2023-10-22"},{"lineNumber":36,"author":{"gitId":"peiran18"},"content":"        assertTrue(Status.isValidStatus(\"to_be_submitted\")); // all lowercase","lastModifiedDate":"2023-10-22"},{"lineNumber":37,"author":{"gitId":"peiran18"},"content":"        assertTrue(Status.isValidStatus(\"Pending\")); // first letter capitalised","lastModifiedDate":"2023-10-22"},{"lineNumber":38,"author":{"gitId":"peiran18"},"content":"        assertTrue(Status.isValidStatus(\"appROVed\")); // some lower case, some upper case","lastModifiedDate":"2023-10-22"},{"lineNumber":39,"author":{"gitId":"peiran18"},"content":"        assertTrue(Status.isValidStatus(\"REJECTED\")); // all uppercase","lastModifiedDate":"2023-10-22"},{"lineNumber":40,"author":{"gitId":"peiran18"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":41,"author":{"gitId":"peiran18"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":42,"author":{"gitId":"peiran18"},"content":"    @Test","lastModifiedDate":"2023-10-22"},{"lineNumber":43,"author":{"gitId":"czhiruo"},"content":"    public void testEqualsAndHashcode() {","lastModifiedDate":"2023-10-28"},{"lineNumber":44,"author":{"gitId":"czhiruo"},"content":"        Status status \u003d new Status(\"TO_BE_SUBMITTED\");","lastModifiedDate":"2023-10-28"},{"lineNumber":45,"author":{"gitId":"peiran18"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":46,"author":{"gitId":"peiran18"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-22"},{"lineNumber":47,"author":{"gitId":"czhiruo"},"content":"        assertTrue(status.equals(new Status(\"TO_BE_SUBMITTED\")));","lastModifiedDate":"2023-10-28"},{"lineNumber":48,"author":{"gitId":"czhiruo"},"content":"        assertEquals(status.hashCode(), new Status(\"TO_BE_SUBMITTED\").hashCode());","lastModifiedDate":"2023-10-28"},{"lineNumber":49,"author":{"gitId":"peiran18"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":50,"author":{"gitId":"peiran18"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-22"},{"lineNumber":51,"author":{"gitId":"czhiruo"},"content":"        assertTrue(status.equals(status));","lastModifiedDate":"2023-10-28"},{"lineNumber":52,"author":{"gitId":"peiran18"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":53,"author":{"gitId":"peiran18"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-22"},{"lineNumber":54,"author":{"gitId":"czhiruo"},"content":"        assertFalse(status.equals(null));","lastModifiedDate":"2023-10-28"},{"lineNumber":55,"author":{"gitId":"peiran18"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":56,"author":{"gitId":"peiran18"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-22"},{"lineNumber":57,"author":{"gitId":"czhiruo"},"content":"        assertFalse(status.equals(5.0f));","lastModifiedDate":"2023-10-28"},{"lineNumber":58,"author":{"gitId":"peiran18"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":59,"author":{"gitId":"peiran18"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2023-10-22"},{"lineNumber":60,"author":{"gitId":"czhiruo"},"content":"        assertFalse(status.equals(new Status(\"Pending\")));","lastModifiedDate":"2023-10-28"},{"lineNumber":61,"author":{"gitId":"czhiruo"},"content":"        assertNotEquals(status.hashCode(), new Status(\"Pending\").hashCode());","lastModifiedDate":"2023-10-28"},{"lineNumber":62,"author":{"gitId":"peiran18"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":63,"author":{"gitId":"peiran18"},"content":"}","lastModifiedDate":"2023-10-22"}],"authorContributionMap":{"czhiruo":9,"peiran18":52,"migfoo02":2}},{"path":"src/test/java/seedu/application/model/job/UniqueJobListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"evanyan13"},"content":"package seedu.application.model.job;","lastModifiedDate":"2023-10-10"},{"lineNumber":2,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":3,"author":{"gitId":"czhiruo"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2023-10-28"},{"lineNumber":4,"author":{"gitId":"evanyan13"},"content":"import static seedu.application.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-10"},{"lineNumber":5,"author":{"gitId":"evanyan13"},"content":"import static seedu.application.testutil.TypicalJobs.CHEF;","lastModifiedDate":"2023-10-10"},{"lineNumber":6,"author":{"gitId":"evanyan13"},"content":"import static seedu.application.testutil.TypicalJobs.CLEANER;","lastModifiedDate":"2023-10-10"},{"lineNumber":7,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":8,"author":{"gitId":"JeremyYong128"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-04"},{"lineNumber":9,"author":{"gitId":"JeremyYong128"},"content":"import java.util.Collections;","lastModifiedDate":"2023-10-04"},{"lineNumber":10,"author":{"gitId":"JeremyYong128"},"content":"import java.util.List;","lastModifiedDate":"2023-10-04"},{"lineNumber":11,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":12,"author":{"gitId":"JeremyYong128"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-04"},{"lineNumber":13,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":14,"author":{"gitId":"evanyan13"},"content":"import seedu.application.model.job.exceptions.DuplicateJobException;","lastModifiedDate":"2023-10-10"},{"lineNumber":15,"author":{"gitId":"evanyan13"},"content":"import seedu.application.model.job.exceptions.JobNotFoundException;","lastModifiedDate":"2023-10-10"},{"lineNumber":16,"author":{"gitId":"evanyan13"},"content":"import seedu.application.testutil.JobBuilder;","lastModifiedDate":"2023-10-10"},{"lineNumber":17,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":18,"author":{"gitId":"JeremyYong128"},"content":"public class UniqueJobListTest {","lastModifiedDate":"2023-10-04"},{"lineNumber":19,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":20,"author":{"gitId":"JeremyYong128"},"content":"    private final UniqueJobList uniqueJobList \u003d new UniqueJobList();","lastModifiedDate":"2023-10-04"},{"lineNumber":21,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":22,"author":{"gitId":"JeremyYong128"},"content":"    @Test","lastModifiedDate":"2023-10-04"},{"lineNumber":23,"author":{"gitId":"JeremyYong128"},"content":"    public void contains_nullJob_throwsNullPointerException() {","lastModifiedDate":"2023-10-04"},{"lineNumber":24,"author":{"gitId":"JeremyYong128"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueJobList.contains(null));","lastModifiedDate":"2023-10-04"},{"lineNumber":25,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":26,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":27,"author":{"gitId":"JeremyYong128"},"content":"    @Test","lastModifiedDate":"2023-10-04"},{"lineNumber":28,"author":{"gitId":"JeremyYong128"},"content":"    public void contains_jobNotInList_returnsFalse() {","lastModifiedDate":"2023-10-04"},{"lineNumber":29,"author":{"gitId":"JeremyYong128"},"content":"        assertFalse(uniqueJobList.contains(CHEF));","lastModifiedDate":"2023-10-04"},{"lineNumber":30,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":31,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":32,"author":{"gitId":"JeremyYong128"},"content":"    @Test","lastModifiedDate":"2023-10-04"},{"lineNumber":33,"author":{"gitId":"JeremyYong128"},"content":"    public void contains_jobInList_returnsTrue() {","lastModifiedDate":"2023-10-04"},{"lineNumber":34,"author":{"gitId":"JeremyYong128"},"content":"        uniqueJobList.add(CHEF);","lastModifiedDate":"2023-10-04"},{"lineNumber":35,"author":{"gitId":"JeremyYong128"},"content":"        assertTrue(uniqueJobList.contains(CHEF));","lastModifiedDate":"2023-10-04"},{"lineNumber":36,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":37,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":38,"author":{"gitId":"JeremyYong128"},"content":"    // To be implemented when non-identity fields are created","lastModifiedDate":"2023-10-04"},{"lineNumber":39,"author":{"gitId":"JeremyYong128"},"content":"    @Test","lastModifiedDate":"2023-10-04"},{"lineNumber":40,"author":{"gitId":"JeremyYong128"},"content":"    public void contains_jobWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2023-10-04"},{"lineNumber":41,"author":{"gitId":"JeremyYong128"},"content":"        uniqueJobList.add(CHEF);","lastModifiedDate":"2023-10-04"},{"lineNumber":42,"author":{"gitId":"JeremyYong128"},"content":"        Job editedAlice \u003d new JobBuilder(CHEF).build();","lastModifiedDate":"2023-10-04"},{"lineNumber":43,"author":{"gitId":"JeremyYong128"},"content":"        assertTrue(uniqueJobList.contains(editedAlice));","lastModifiedDate":"2023-10-04"},{"lineNumber":44,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":45,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":46,"author":{"gitId":"JeremyYong128"},"content":"    @Test","lastModifiedDate":"2023-10-04"},{"lineNumber":47,"author":{"gitId":"JeremyYong128"},"content":"    public void add_nullJob_throwsNullPointerException() {","lastModifiedDate":"2023-10-04"},{"lineNumber":48,"author":{"gitId":"JeremyYong128"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueJobList.add(null));","lastModifiedDate":"2023-10-04"},{"lineNumber":49,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":50,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":51,"author":{"gitId":"JeremyYong128"},"content":"    @Test","lastModifiedDate":"2023-10-04"},{"lineNumber":52,"author":{"gitId":"JeremyYong128"},"content":"    public void add_duplicateJob_throwsDuplicateJobException() {","lastModifiedDate":"2023-10-04"},{"lineNumber":53,"author":{"gitId":"JeremyYong128"},"content":"        uniqueJobList.add(CHEF);","lastModifiedDate":"2023-10-04"},{"lineNumber":54,"author":{"gitId":"JeremyYong128"},"content":"        assertThrows(DuplicateJobException.class, () -\u003e uniqueJobList.add(CHEF));","lastModifiedDate":"2023-10-04"},{"lineNumber":55,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":56,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":57,"author":{"gitId":"JeremyYong128"},"content":"    @Test","lastModifiedDate":"2023-10-04"},{"lineNumber":58,"author":{"gitId":"JeremyYong128"},"content":"    public void setJob_nullTargetJob_throwsNullPointerException() {","lastModifiedDate":"2023-10-04"},{"lineNumber":59,"author":{"gitId":"JeremyYong128"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueJobList.setJob(null, CHEF));","lastModifiedDate":"2023-10-04"},{"lineNumber":60,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":61,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":62,"author":{"gitId":"JeremyYong128"},"content":"    @Test","lastModifiedDate":"2023-10-04"},{"lineNumber":63,"author":{"gitId":"JeremyYong128"},"content":"    public void setJob_nullEditedJob_throwsNullPointerException() {","lastModifiedDate":"2023-10-04"},{"lineNumber":64,"author":{"gitId":"JeremyYong128"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueJobList.setJob(CHEF, null));","lastModifiedDate":"2023-10-04"},{"lineNumber":65,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":66,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":67,"author":{"gitId":"JeremyYong128"},"content":"    @Test","lastModifiedDate":"2023-10-04"},{"lineNumber":68,"author":{"gitId":"JeremyYong128"},"content":"    public void setJob_targetJobNotInList_throwsJobNotFoundException() {","lastModifiedDate":"2023-10-04"},{"lineNumber":69,"author":{"gitId":"JeremyYong128"},"content":"        assertThrows(JobNotFoundException.class, () -\u003e uniqueJobList.setJob(CHEF, CHEF));","lastModifiedDate":"2023-10-04"},{"lineNumber":70,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":71,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":72,"author":{"gitId":"JeremyYong128"},"content":"    @Test","lastModifiedDate":"2023-10-04"},{"lineNumber":73,"author":{"gitId":"JeremyYong128"},"content":"    public void setJob_editedJobIsSameJob_success() {","lastModifiedDate":"2023-10-04"},{"lineNumber":74,"author":{"gitId":"JeremyYong128"},"content":"        uniqueJobList.add(CHEF);","lastModifiedDate":"2023-10-04"},{"lineNumber":75,"author":{"gitId":"JeremyYong128"},"content":"        uniqueJobList.setJob(CHEF, CHEF);","lastModifiedDate":"2023-10-04"},{"lineNumber":76,"author":{"gitId":"JeremyYong128"},"content":"        UniqueJobList expectedUniqueJobList \u003d new UniqueJobList();","lastModifiedDate":"2023-10-04"},{"lineNumber":77,"author":{"gitId":"JeremyYong128"},"content":"        expectedUniqueJobList.add(CHEF);","lastModifiedDate":"2023-10-04"},{"lineNumber":78,"author":{"gitId":"JeremyYong128"},"content":"        assertEquals(expectedUniqueJobList, uniqueJobList);","lastModifiedDate":"2023-10-04"},{"lineNumber":79,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":80,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":81,"author":{"gitId":"JeremyYong128"},"content":"    // To be implemented when non-identity fields are created","lastModifiedDate":"2023-10-04"},{"lineNumber":82,"author":{"gitId":"JeremyYong128"},"content":"    @Test","lastModifiedDate":"2023-10-04"},{"lineNumber":83,"author":{"gitId":"JeremyYong128"},"content":"    public void setJob_editedJobHasSameIdentity_success() {","lastModifiedDate":"2023-10-04"},{"lineNumber":84,"author":{"gitId":"JeremyYong128"},"content":"        uniqueJobList.add(CHEF);","lastModifiedDate":"2023-10-04"},{"lineNumber":85,"author":{"gitId":"JeremyYong128"},"content":"        Job editedAlice \u003d new JobBuilder(CHEF)","lastModifiedDate":"2023-10-04"},{"lineNumber":86,"author":{"gitId":"JeremyYong128"},"content":"                .build();","lastModifiedDate":"2023-10-04"},{"lineNumber":87,"author":{"gitId":"JeremyYong128"},"content":"        uniqueJobList.setJob(CHEF, editedAlice);","lastModifiedDate":"2023-10-04"},{"lineNumber":88,"author":{"gitId":"JeremyYong128"},"content":"        UniqueJobList expectedUniqueJobList \u003d new UniqueJobList();","lastModifiedDate":"2023-10-04"},{"lineNumber":89,"author":{"gitId":"JeremyYong128"},"content":"        expectedUniqueJobList.add(editedAlice);","lastModifiedDate":"2023-10-04"},{"lineNumber":90,"author":{"gitId":"JeremyYong128"},"content":"        assertEquals(expectedUniqueJobList, uniqueJobList);","lastModifiedDate":"2023-10-04"},{"lineNumber":91,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":92,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":93,"author":{"gitId":"JeremyYong128"},"content":"    @Test","lastModifiedDate":"2023-10-04"},{"lineNumber":94,"author":{"gitId":"JeremyYong128"},"content":"    public void setJob_editedJobHasDifferentIdentity_success() {","lastModifiedDate":"2023-10-04"},{"lineNumber":95,"author":{"gitId":"JeremyYong128"},"content":"        uniqueJobList.add(CHEF);","lastModifiedDate":"2023-10-04"},{"lineNumber":96,"author":{"gitId":"JeremyYong128"},"content":"        uniqueJobList.setJob(CHEF, CLEANER);","lastModifiedDate":"2023-10-04"},{"lineNumber":97,"author":{"gitId":"JeremyYong128"},"content":"        UniqueJobList expectedUniqueJobList \u003d new UniqueJobList();","lastModifiedDate":"2023-10-04"},{"lineNumber":98,"author":{"gitId":"JeremyYong128"},"content":"        expectedUniqueJobList.add(CLEANER);","lastModifiedDate":"2023-10-04"},{"lineNumber":99,"author":{"gitId":"JeremyYong128"},"content":"        assertEquals(expectedUniqueJobList, uniqueJobList);","lastModifiedDate":"2023-10-04"},{"lineNumber":100,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":101,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":102,"author":{"gitId":"JeremyYong128"},"content":"    @Test","lastModifiedDate":"2023-10-04"},{"lineNumber":103,"author":{"gitId":"JeremyYong128"},"content":"    public void setJob_editedJobHasNonUniqueIdentity_throwsDuplicateJobException() {","lastModifiedDate":"2023-10-04"},{"lineNumber":104,"author":{"gitId":"JeremyYong128"},"content":"        uniqueJobList.add(CHEF);","lastModifiedDate":"2023-10-04"},{"lineNumber":105,"author":{"gitId":"JeremyYong128"},"content":"        uniqueJobList.add(CLEANER);","lastModifiedDate":"2023-10-04"},{"lineNumber":106,"author":{"gitId":"JeremyYong128"},"content":"        assertThrows(DuplicateJobException.class, () -\u003e uniqueJobList.setJob(CHEF, CLEANER));","lastModifiedDate":"2023-10-04"},{"lineNumber":107,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":108,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":109,"author":{"gitId":"JeremyYong128"},"content":"    @Test","lastModifiedDate":"2023-10-04"},{"lineNumber":110,"author":{"gitId":"JeremyYong128"},"content":"    public void remove_nullJob_throwsNullPointerException() {","lastModifiedDate":"2023-10-04"},{"lineNumber":111,"author":{"gitId":"JeremyYong128"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueJobList.remove(null));","lastModifiedDate":"2023-10-04"},{"lineNumber":112,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":113,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":114,"author":{"gitId":"JeremyYong128"},"content":"    @Test","lastModifiedDate":"2023-10-04"},{"lineNumber":115,"author":{"gitId":"JeremyYong128"},"content":"    public void remove_jobDoesNotExist_throwsJobNotFoundException() {","lastModifiedDate":"2023-10-04"},{"lineNumber":116,"author":{"gitId":"JeremyYong128"},"content":"        assertThrows(JobNotFoundException.class, () -\u003e uniqueJobList.remove(CHEF));","lastModifiedDate":"2023-10-04"},{"lineNumber":117,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":118,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":119,"author":{"gitId":"JeremyYong128"},"content":"    @Test","lastModifiedDate":"2023-10-04"},{"lineNumber":120,"author":{"gitId":"JeremyYong128"},"content":"    public void remove_existingJob_removesJob() {","lastModifiedDate":"2023-10-04"},{"lineNumber":121,"author":{"gitId":"JeremyYong128"},"content":"        uniqueJobList.add(CHEF);","lastModifiedDate":"2023-10-04"},{"lineNumber":122,"author":{"gitId":"JeremyYong128"},"content":"        uniqueJobList.remove(CHEF);","lastModifiedDate":"2023-10-04"},{"lineNumber":123,"author":{"gitId":"JeremyYong128"},"content":"        UniqueJobList expectedUniqueJobList \u003d new UniqueJobList();","lastModifiedDate":"2023-10-04"},{"lineNumber":124,"author":{"gitId":"JeremyYong128"},"content":"        assertEquals(expectedUniqueJobList, uniqueJobList);","lastModifiedDate":"2023-10-04"},{"lineNumber":125,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":126,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":127,"author":{"gitId":"JeremyYong128"},"content":"    @Test","lastModifiedDate":"2023-10-04"},{"lineNumber":128,"author":{"gitId":"JeremyYong128"},"content":"    public void setJobs_nullUniqueJobList_throwsNullPointerException() {","lastModifiedDate":"2023-10-04"},{"lineNumber":129,"author":{"gitId":"JeremyYong128"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueJobList.setJobs((UniqueJobList) null));","lastModifiedDate":"2023-10-04"},{"lineNumber":130,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":131,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":132,"author":{"gitId":"JeremyYong128"},"content":"    @Test","lastModifiedDate":"2023-10-04"},{"lineNumber":133,"author":{"gitId":"JeremyYong128"},"content":"    public void setJobs_uniqueJobList_replacesOwnListWithProvidedUniqueJobList() {","lastModifiedDate":"2023-10-04"},{"lineNumber":134,"author":{"gitId":"JeremyYong128"},"content":"        uniqueJobList.add(CHEF);","lastModifiedDate":"2023-10-04"},{"lineNumber":135,"author":{"gitId":"JeremyYong128"},"content":"        UniqueJobList expectedUniqueJobList \u003d new UniqueJobList();","lastModifiedDate":"2023-10-04"},{"lineNumber":136,"author":{"gitId":"JeremyYong128"},"content":"        expectedUniqueJobList.add(CLEANER);","lastModifiedDate":"2023-10-04"},{"lineNumber":137,"author":{"gitId":"JeremyYong128"},"content":"        uniqueJobList.setJobs(expectedUniqueJobList);","lastModifiedDate":"2023-10-04"},{"lineNumber":138,"author":{"gitId":"JeremyYong128"},"content":"        assertEquals(expectedUniqueJobList, uniqueJobList);","lastModifiedDate":"2023-10-04"},{"lineNumber":139,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":140,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":141,"author":{"gitId":"JeremyYong128"},"content":"    @Test","lastModifiedDate":"2023-10-04"},{"lineNumber":142,"author":{"gitId":"JeremyYong128"},"content":"    public void setJobs_nullList_throwsNullPointerException() {","lastModifiedDate":"2023-10-04"},{"lineNumber":143,"author":{"gitId":"JeremyYong128"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueJobList.setJobs((List\u003cJob\u003e) null));","lastModifiedDate":"2023-10-04"},{"lineNumber":144,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":145,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":146,"author":{"gitId":"JeremyYong128"},"content":"    @Test","lastModifiedDate":"2023-10-04"},{"lineNumber":147,"author":{"gitId":"JeremyYong128"},"content":"    public void setJobs_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2023-10-04"},{"lineNumber":148,"author":{"gitId":"JeremyYong128"},"content":"        uniqueJobList.add(CHEF);","lastModifiedDate":"2023-10-04"},{"lineNumber":149,"author":{"gitId":"JeremyYong128"},"content":"        List\u003cJob\u003e jobList \u003d Collections.singletonList(CLEANER);","lastModifiedDate":"2023-10-04"},{"lineNumber":150,"author":{"gitId":"JeremyYong128"},"content":"        uniqueJobList.setJobs(jobList);","lastModifiedDate":"2023-10-04"},{"lineNumber":151,"author":{"gitId":"JeremyYong128"},"content":"        UniqueJobList expectedUniqueJobList \u003d new UniqueJobList();","lastModifiedDate":"2023-10-04"},{"lineNumber":152,"author":{"gitId":"JeremyYong128"},"content":"        expectedUniqueJobList.add(CLEANER);","lastModifiedDate":"2023-10-04"},{"lineNumber":153,"author":{"gitId":"JeremyYong128"},"content":"        assertEquals(expectedUniqueJobList, uniqueJobList);","lastModifiedDate":"2023-10-04"},{"lineNumber":154,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":155,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":156,"author":{"gitId":"JeremyYong128"},"content":"    @Test","lastModifiedDate":"2023-10-04"},{"lineNumber":157,"author":{"gitId":"JeremyYong128"},"content":"    public void setJobs_listWithDuplicateJobs_throwsDuplicateJobException() {","lastModifiedDate":"2023-10-04"},{"lineNumber":158,"author":{"gitId":"JeremyYong128"},"content":"        List\u003cJob\u003e listWithDuplicateJobs \u003d Arrays.asList(CHEF, CHEF);","lastModifiedDate":"2023-10-04"},{"lineNumber":159,"author":{"gitId":"JeremyYong128"},"content":"        assertThrows(DuplicateJobException.class, () -\u003e uniqueJobList.setJobs(listWithDuplicateJobs));","lastModifiedDate":"2023-10-04"},{"lineNumber":160,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":161,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":162,"author":{"gitId":"JeremyYong128"},"content":"    @Test","lastModifiedDate":"2023-10-04"},{"lineNumber":163,"author":{"gitId":"JeremyYong128"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-10-04"},{"lineNumber":164,"author":{"gitId":"JeremyYong128"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2023-10-04"},{"lineNumber":165,"author":{"gitId":"JeremyYong128"},"content":"            -\u003e uniqueJobList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2023-10-04"},{"lineNumber":166,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":167,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":168,"author":{"gitId":"JeremyYong128"},"content":"    @Test","lastModifiedDate":"2023-10-04"},{"lineNumber":169,"author":{"gitId":"JeremyYong128"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-04"},{"lineNumber":170,"author":{"gitId":"JeremyYong128"},"content":"        assertEquals(uniqueJobList.asUnmodifiableObservableList().toString(), uniqueJobList.toString());","lastModifiedDate":"2023-10-04"},{"lineNumber":171,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":172,"author":{"gitId":"czhiruo"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":173,"author":{"gitId":"czhiruo"},"content":"    @Test","lastModifiedDate":"2023-10-28"},{"lineNumber":174,"author":{"gitId":"czhiruo"},"content":"    public void testEqualsAndHashcode() {","lastModifiedDate":"2023-10-28"},{"lineNumber":175,"author":{"gitId":"czhiruo"},"content":"        UniqueJobList first \u003d new UniqueJobList();","lastModifiedDate":"2023-10-28"},{"lineNumber":176,"author":{"gitId":"czhiruo"},"content":"        UniqueJobList another \u003d new UniqueJobList();","lastModifiedDate":"2023-10-28"},{"lineNumber":177,"author":{"gitId":"czhiruo"},"content":"        first.add(CHEF);","lastModifiedDate":"2023-10-28"},{"lineNumber":178,"author":{"gitId":"czhiruo"},"content":"        first.add(CLEANER);","lastModifiedDate":"2023-10-28"},{"lineNumber":179,"author":{"gitId":"czhiruo"},"content":"        another.add(CHEF);","lastModifiedDate":"2023-10-28"},{"lineNumber":180,"author":{"gitId":"czhiruo"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-28"},{"lineNumber":181,"author":{"gitId":"czhiruo"},"content":"        assertTrue(first.equals(first));","lastModifiedDate":"2023-10-28"},{"lineNumber":182,"author":{"gitId":"czhiruo"},"content":"        assertEquals(first.hashCode(), first.hashCode());","lastModifiedDate":"2023-10-28"},{"lineNumber":183,"author":{"gitId":"czhiruo"},"content":"        // different jobs in list -\u003e returns false","lastModifiedDate":"2023-10-28"},{"lineNumber":184,"author":{"gitId":"czhiruo"},"content":"        assertFalse(first.equals(another));","lastModifiedDate":"2023-10-28"},{"lineNumber":185,"author":{"gitId":"czhiruo"},"content":"        assertNotEquals(first.hashCode(), another.hashCode());","lastModifiedDate":"2023-10-28"},{"lineNumber":186,"author":{"gitId":"czhiruo"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-28"},{"lineNumber":187,"author":{"gitId":"czhiruo"},"content":"        assertFalse(uniqueJobList.equals(null));","lastModifiedDate":"2023-10-28"},{"lineNumber":188,"author":{"gitId":"czhiruo"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":189,"author":{"gitId":"JeremyYong128"},"content":"}","lastModifiedDate":"2023-10-04"}],"authorContributionMap":{"czhiruo":18,"evanyan13":7,"JeremyYong128":164}},{"path":"src/test/java/seedu/application/storage/JsonAdaptedJobTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"evanyan13"},"content":"package seedu.application.storage;","lastModifiedDate":"2023-10-10"},{"lineNumber":2,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":3,"author":{"gitId":"czhiruo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-31"},{"lineNumber":4,"author":{"gitId":"czhiruo"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":5,"author":{"gitId":"JeremyYong128"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-04"},{"lineNumber":6,"author":{"gitId":"evanyan13"},"content":"import static seedu.application.storage.JsonAdaptedJob.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2023-10-10"},{"lineNumber":7,"author":{"gitId":"evanyan13"},"content":"import static seedu.application.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-10"},{"lineNumber":8,"author":{"gitId":"evanyan13"},"content":"import static seedu.application.testutil.TypicalJobs.CLEANER;","lastModifiedDate":"2023-10-10"},{"lineNumber":9,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":10,"author":{"gitId":"peiran18"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-31"},{"lineNumber":11,"author":{"gitId":"peiran18"},"content":"import java.util.List;","lastModifiedDate":"2023-10-31"},{"lineNumber":12,"author":{"gitId":"peiran18"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":13,"author":{"gitId":"JeremyYong128"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-04"},{"lineNumber":14,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":15,"author":{"gitId":"evanyan13"},"content":"import seedu.application.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-10-10"},{"lineNumber":16,"author":{"gitId":"czhiruo"},"content":"import seedu.application.model.job.*;","lastModifiedDate":"2023-10-21"},{"lineNumber":17,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":18,"author":{"gitId":"JeremyYong128"},"content":"public class JsonAdaptedJobTest {","lastModifiedDate":"2023-10-04"},{"lineNumber":19,"author":{"gitId":"JeremyYong128"},"content":"    private static final String INVALID_ROLE \u003d \"Softw@re\";","lastModifiedDate":"2023-10-04"},{"lineNumber":20,"author":{"gitId":"JeremyYong128"},"content":"    private static final String INVALID_COMPANY \u003d \"      \";","lastModifiedDate":"2023-10-16"},{"lineNumber":21,"author":{"gitId":"peiran18"},"content":"    private static final String INVALID_STATUS \u003d \"submitted\";","lastModifiedDate":"2023-10-15"},{"lineNumber":22,"author":{"gitId":"evanyan13"},"content":"    private static final String INVALID_DEADLINE \u003d \"Nov 12 2023\";","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"migfoo02"},"content":"    private static final String INVALID_JOB_TYPE \u003d \"OTHER\";","lastModifiedDate":"2023-10-23"},{"lineNumber":24,"author":{"gitId":"czhiruo"},"content":"    private static final String INVALID_INDUSTRY \u003d \"   \";","lastModifiedDate":"2023-10-21"},{"lineNumber":25,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":26,"author":{"gitId":"JeremyYong128"},"content":"    private static final String VALID_ROLE \u003d CLEANER.getRole().toString();","lastModifiedDate":"2023-10-04"},{"lineNumber":27,"author":{"gitId":"JeremyYong128"},"content":"    private static final String VALID_COMPANY \u003d CLEANER.getCompany().toString();","lastModifiedDate":"2023-10-04"},{"lineNumber":28,"author":{"gitId":"peiran18"},"content":"    private static final String VALID_STATUS \u003d CLEANER.getStatus().toString();","lastModifiedDate":"2023-10-15"},{"lineNumber":29,"author":{"gitId":"evanyan13"},"content":"    private static final String VALID_DEADLINE \u003d CLEANER.getDeadline().toString();","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"migfoo02"},"content":"    private static final String VALID_JOB_TYPE \u003d CLEANER.getJobType().toString();","lastModifiedDate":"2023-10-23"},{"lineNumber":31,"author":{"gitId":"czhiruo"},"content":"    private static final String VALID_INDUSTRY \u003d CLEANER.getIndustry().toString();","lastModifiedDate":"2023-10-20"},{"lineNumber":32,"author":{"gitId":"peiran18"},"content":"    private static final List\u003cJsonAdaptedInterview\u003e VALID_INTERVIEWS \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-31"},{"lineNumber":33,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":34,"author":{"gitId":"JeremyYong128"},"content":"    @Test","lastModifiedDate":"2023-10-04"},{"lineNumber":35,"author":{"gitId":"JeremyYong128"},"content":"    public void toModelType_validJobDetails_returnsJob() throws Exception {","lastModifiedDate":"2023-10-04"},{"lineNumber":36,"author":{"gitId":"JeremyYong128"},"content":"        JsonAdaptedJob job \u003d new JsonAdaptedJob(CLEANER);","lastModifiedDate":"2023-10-04"},{"lineNumber":37,"author":{"gitId":"JeremyYong128"},"content":"        assertEquals(CLEANER, job.toModelType());","lastModifiedDate":"2023-10-04"},{"lineNumber":38,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":39,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":40,"author":{"gitId":"JeremyYong128"},"content":"    @Test","lastModifiedDate":"2023-10-04"},{"lineNumber":41,"author":{"gitId":"JeremyYong128"},"content":"    public void toModelType_invalidRole_throwsIllegalValueException() {","lastModifiedDate":"2023-10-04"},{"lineNumber":42,"author":{"gitId":"JeremyYong128"},"content":"        JsonAdaptedJob job \u003d","lastModifiedDate":"2023-10-04"},{"lineNumber":43,"author":{"gitId":"migfoo02"},"content":"                new JsonAdaptedJob(INVALID_ROLE, VALID_COMPANY, VALID_STATUS, VALID_DEADLINE,","lastModifiedDate":"2023-10-22"},{"lineNumber":44,"author":{"gitId":"peiran18"},"content":"                        VALID_JOB_TYPE, VALID_INDUSTRY, VALID_INTERVIEWS);","lastModifiedDate":"2023-10-31"},{"lineNumber":45,"author":{"gitId":"JeremyYong128"},"content":"        String expectedMessage \u003d Role.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-10-04"},{"lineNumber":46,"author":{"gitId":"JeremyYong128"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, job::toModelType);","lastModifiedDate":"2023-10-04"},{"lineNumber":47,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":48,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":49,"author":{"gitId":"JeremyYong128"},"content":"    @Test","lastModifiedDate":"2023-10-04"},{"lineNumber":50,"author":{"gitId":"JeremyYong128"},"content":"    public void toModelType_nullRole_throwsIllegalValueException() {","lastModifiedDate":"2023-10-04"},{"lineNumber":51,"author":{"gitId":"migfoo02"},"content":"        JsonAdaptedJob job \u003d new JsonAdaptedJob(null, VALID_COMPANY, VALID_STATUS, VALID_DEADLINE,","lastModifiedDate":"2023-10-22"},{"lineNumber":52,"author":{"gitId":"peiran18"},"content":"                VALID_JOB_TYPE, VALID_INDUSTRY, VALID_INTERVIEWS);","lastModifiedDate":"2023-10-31"},{"lineNumber":53,"author":{"gitId":"JeremyYong128"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Role.class.getSimpleName());","lastModifiedDate":"2023-10-04"},{"lineNumber":54,"author":{"gitId":"JeremyYong128"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, job::toModelType);","lastModifiedDate":"2023-10-04"},{"lineNumber":55,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":56,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":57,"author":{"gitId":"JeremyYong128"},"content":"    @Test","lastModifiedDate":"2023-10-04"},{"lineNumber":58,"author":{"gitId":"JeremyYong128"},"content":"    public void toModelType_invalidCompany_throwsIllegalValueException() {","lastModifiedDate":"2023-10-04"},{"lineNumber":59,"author":{"gitId":"JeremyYong128"},"content":"        JsonAdaptedJob job \u003d","lastModifiedDate":"2023-10-04"},{"lineNumber":60,"author":{"gitId":"migfoo02"},"content":"                new JsonAdaptedJob(VALID_ROLE, INVALID_COMPANY, VALID_STATUS, VALID_DEADLINE,","lastModifiedDate":"2023-10-22"},{"lineNumber":61,"author":{"gitId":"peiran18"},"content":"                        VALID_JOB_TYPE, VALID_INDUSTRY, VALID_INTERVIEWS);","lastModifiedDate":"2023-10-31"},{"lineNumber":62,"author":{"gitId":"JeremyYong128"},"content":"        String expectedMessage \u003d Company.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-10-04"},{"lineNumber":63,"author":{"gitId":"JeremyYong128"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, job::toModelType);","lastModifiedDate":"2023-10-04"},{"lineNumber":64,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":65,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":66,"author":{"gitId":"JeremyYong128"},"content":"    @Test","lastModifiedDate":"2023-10-04"},{"lineNumber":67,"author":{"gitId":"JeremyYong128"},"content":"    public void toModelType_nullCompany_throwsIllegalValueException() {","lastModifiedDate":"2023-10-04"},{"lineNumber":68,"author":{"gitId":"migfoo02"},"content":"        JsonAdaptedJob job \u003d new JsonAdaptedJob(VALID_ROLE, null, VALID_STATUS, VALID_DEADLINE,","lastModifiedDate":"2023-10-22"},{"lineNumber":69,"author":{"gitId":"peiran18"},"content":"                VALID_JOB_TYPE, VALID_INDUSTRY, VALID_INTERVIEWS);","lastModifiedDate":"2023-10-31"},{"lineNumber":70,"author":{"gitId":"JeremyYong128"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Company.class.getSimpleName());","lastModifiedDate":"2023-10-04"},{"lineNumber":71,"author":{"gitId":"JeremyYong128"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, job::toModelType);","lastModifiedDate":"2023-10-04"},{"lineNumber":72,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":73,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":74,"author":{"gitId":"peiran18"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":75,"author":{"gitId":"peiran18"},"content":"    public void toModelType_invalidStatus_throwsIllegalValueException() {","lastModifiedDate":"2023-10-15"},{"lineNumber":76,"author":{"gitId":"peiran18"},"content":"        JsonAdaptedJob job \u003d","lastModifiedDate":"2023-10-15"},{"lineNumber":77,"author":{"gitId":"migfoo02"},"content":"                new JsonAdaptedJob(VALID_ROLE, VALID_COMPANY, INVALID_STATUS, VALID_DEADLINE,","lastModifiedDate":"2023-10-22"},{"lineNumber":78,"author":{"gitId":"peiran18"},"content":"                        VALID_JOB_TYPE, VALID_INDUSTRY, VALID_INTERVIEWS);","lastModifiedDate":"2023-10-31"},{"lineNumber":79,"author":{"gitId":"peiran18"},"content":"        String expectedMessage \u003d Status.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-10-15"},{"lineNumber":80,"author":{"gitId":"peiran18"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, job::toModelType);","lastModifiedDate":"2023-10-15"},{"lineNumber":81,"author":{"gitId":"peiran18"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":82,"author":{"gitId":"peiran18"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":83,"author":{"gitId":"peiran18"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":84,"author":{"gitId":"peiran18"},"content":"    public void toModelType_nullStatus_throwsIllegalValueException() {","lastModifiedDate":"2023-10-15"},{"lineNumber":85,"author":{"gitId":"migfoo02"},"content":"        JsonAdaptedJob job \u003d new JsonAdaptedJob(VALID_ROLE, VALID_COMPANY, null, VALID_DEADLINE,","lastModifiedDate":"2023-10-22"},{"lineNumber":86,"author":{"gitId":"peiran18"},"content":"                VALID_JOB_TYPE, VALID_INDUSTRY, VALID_INTERVIEWS);","lastModifiedDate":"2023-10-31"},{"lineNumber":87,"author":{"gitId":"peiran18"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Status.class.getSimpleName());","lastModifiedDate":"2023-10-15"},{"lineNumber":88,"author":{"gitId":"peiran18"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, job::toModelType);","lastModifiedDate":"2023-10-15"},{"lineNumber":89,"author":{"gitId":"peiran18"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":90,"author":{"gitId":"peiran18"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":91,"author":{"gitId":"evanyan13"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":92,"author":{"gitId":"evanyan13"},"content":"    public void toModelType_invalidDeadline_throwsIllegalValueException() {","lastModifiedDate":"2023-10-13"},{"lineNumber":93,"author":{"gitId":"evanyan13"},"content":"        JsonAdaptedJob job \u003d","lastModifiedDate":"2023-10-13"},{"lineNumber":94,"author":{"gitId":"migfoo02"},"content":"                new JsonAdaptedJob(VALID_ROLE, VALID_COMPANY, VALID_STATUS, INVALID_DEADLINE,","lastModifiedDate":"2023-10-22"},{"lineNumber":95,"author":{"gitId":"peiran18"},"content":"                        VALID_JOB_TYPE, VALID_INDUSTRY, VALID_INTERVIEWS);","lastModifiedDate":"2023-10-31"},{"lineNumber":96,"author":{"gitId":"evanyan13"},"content":"        String expectedMessage \u003d Deadline.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-10-13"},{"lineNumber":97,"author":{"gitId":"evanyan13"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, job::toModelType);","lastModifiedDate":"2023-10-13"},{"lineNumber":98,"author":{"gitId":"evanyan13"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":99,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":100,"author":{"gitId":"evanyan13"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":101,"author":{"gitId":"evanyan13"},"content":"    public void toModelType_nullDeadline_throwsIllegalValueException() {","lastModifiedDate":"2023-10-13"},{"lineNumber":102,"author":{"gitId":"migfoo02"},"content":"        JsonAdaptedJob job \u003d new JsonAdaptedJob(VALID_ROLE, VALID_COMPANY, VALID_STATUS, null,","lastModifiedDate":"2023-10-22"},{"lineNumber":103,"author":{"gitId":"peiran18"},"content":"                VALID_JOB_TYPE, VALID_INDUSTRY, VALID_INTERVIEWS);","lastModifiedDate":"2023-10-31"},{"lineNumber":104,"author":{"gitId":"evanyan13"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Deadline.class.getSimpleName());","lastModifiedDate":"2023-10-13"},{"lineNumber":105,"author":{"gitId":"evanyan13"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, job::toModelType);","lastModifiedDate":"2023-10-13"},{"lineNumber":106,"author":{"gitId":"evanyan13"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":107,"author":{"gitId":"czhiruo"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":108,"author":{"gitId":"migfoo02"},"content":"    @Test","lastModifiedDate":"2023-10-20"},{"lineNumber":109,"author":{"gitId":"migfoo02"},"content":"    public void toModelType_invalidJobType_throwsIllegalValueException() {","lastModifiedDate":"2023-10-20"},{"lineNumber":110,"author":{"gitId":"migfoo02"},"content":"        JsonAdaptedJob job \u003d","lastModifiedDate":"2023-10-20"},{"lineNumber":111,"author":{"gitId":"migfoo02"},"content":"                new JsonAdaptedJob(VALID_ROLE, VALID_COMPANY, VALID_STATUS, VALID_DEADLINE,","lastModifiedDate":"2023-10-22"},{"lineNumber":112,"author":{"gitId":"peiran18"},"content":"                        INVALID_JOB_TYPE, VALID_INDUSTRY, VALID_INTERVIEWS);","lastModifiedDate":"2023-10-31"},{"lineNumber":113,"author":{"gitId":"migfoo02"},"content":"        String expectedMessage \u003d JobType.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-10-20"},{"lineNumber":114,"author":{"gitId":"migfoo02"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, job::toModelType);","lastModifiedDate":"2023-10-20"},{"lineNumber":115,"author":{"gitId":"migfoo02"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":116,"author":{"gitId":"migfoo02"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":117,"author":{"gitId":"migfoo02"},"content":"    @Test","lastModifiedDate":"2023-10-20"},{"lineNumber":118,"author":{"gitId":"migfoo02"},"content":"    public void toModelType_nullJobType_throwsIllegalValueException() {","lastModifiedDate":"2023-10-20"},{"lineNumber":119,"author":{"gitId":"migfoo02"},"content":"        JsonAdaptedJob job \u003d new JsonAdaptedJob(VALID_ROLE, VALID_COMPANY, VALID_STATUS, VALID_DEADLINE,","lastModifiedDate":"2023-10-22"},{"lineNumber":120,"author":{"gitId":"peiran18"},"content":"                null, VALID_INDUSTRY, VALID_INTERVIEWS);","lastModifiedDate":"2023-10-31"},{"lineNumber":121,"author":{"gitId":"migfoo02"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, JobType.class.getSimpleName());","lastModifiedDate":"2023-10-20"},{"lineNumber":122,"author":{"gitId":"migfoo02"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, job::toModelType);","lastModifiedDate":"2023-10-20"},{"lineNumber":123,"author":{"gitId":"migfoo02"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":124,"author":{"gitId":"migfoo02"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":125,"author":{"gitId":"czhiruo"},"content":"    @Test","lastModifiedDate":"2023-10-20"},{"lineNumber":126,"author":{"gitId":"czhiruo"},"content":"    public void toModelType_invalidIndustry_throwsIllegalValueException() {","lastModifiedDate":"2023-10-20"},{"lineNumber":127,"author":{"gitId":"czhiruo"},"content":"        JsonAdaptedJob job \u003d","lastModifiedDate":"2023-10-20"},{"lineNumber":128,"author":{"gitId":"migfoo02"},"content":"                new JsonAdaptedJob(VALID_ROLE, VALID_COMPANY, VALID_STATUS, VALID_DEADLINE,","lastModifiedDate":"2023-10-22"},{"lineNumber":129,"author":{"gitId":"peiran18"},"content":"                        VALID_JOB_TYPE, INVALID_INDUSTRY, VALID_INTERVIEWS);","lastModifiedDate":"2023-10-31"},{"lineNumber":130,"author":{"gitId":"czhiruo"},"content":"        String expectedMessage \u003d Industry.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-10-21"},{"lineNumber":131,"author":{"gitId":"czhiruo"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, job::toModelType);","lastModifiedDate":"2023-10-20"},{"lineNumber":132,"author":{"gitId":"czhiruo"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":133,"author":{"gitId":"czhiruo"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":134,"author":{"gitId":"czhiruo"},"content":"    @Test","lastModifiedDate":"2023-10-20"},{"lineNumber":135,"author":{"gitId":"czhiruo"},"content":"    public void toModelType_nullIndustry_throwsIllegalValueException() {","lastModifiedDate":"2023-10-20"},{"lineNumber":136,"author":{"gitId":"migfoo02"},"content":"        JsonAdaptedJob job \u003d new JsonAdaptedJob(VALID_ROLE, VALID_COMPANY, VALID_STATUS, VALID_DEADLINE,","lastModifiedDate":"2023-10-22"},{"lineNumber":137,"author":{"gitId":"peiran18"},"content":"                VALID_JOB_TYPE, null, VALID_INTERVIEWS);","lastModifiedDate":"2023-10-31"},{"lineNumber":138,"author":{"gitId":"czhiruo"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Industry.class.getSimpleName());","lastModifiedDate":"2023-10-21"},{"lineNumber":139,"author":{"gitId":"czhiruo"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, job::toModelType);","lastModifiedDate":"2023-10-20"},{"lineNumber":140,"author":{"gitId":"czhiruo"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":141,"author":{"gitId":"czhiruo"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":142,"author":{"gitId":"JeremyYong128"},"content":"}","lastModifiedDate":"2023-10-04"}],"authorContributionMap":{"czhiruo":19,"evanyan13":20,"peiran18":31,"JeremyYong128":45,"migfoo02":27}},{"path":"src/test/java/seedu/application/storage/JsonApplicationBookStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"evanyan13"},"content":"package seedu.application.storage;","lastModifiedDate":"2023-10-10"},{"lineNumber":2,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":3,"author":{"gitId":"evanyan13"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-10"},{"lineNumber":4,"author":{"gitId":"evanyan13"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-10"},{"lineNumber":5,"author":{"gitId":"evanyan13"},"content":"import static seedu.application.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-10"},{"lineNumber":6,"author":{"gitId":"evanyan13"},"content":"import static seedu.application.testutil.TypicalJobs.CHEF;","lastModifiedDate":"2023-10-10"},{"lineNumber":7,"author":{"gitId":"evanyan13"},"content":"import static seedu.application.testutil.TypicalJobs.CLEANER;","lastModifiedDate":"2023-10-10"},{"lineNumber":8,"author":{"gitId":"evanyan13"},"content":"import static seedu.application.testutil.TypicalJobs.GRASS_CUTTER;","lastModifiedDate":"2023-10-10"},{"lineNumber":9,"author":{"gitId":"evanyan13"},"content":"import static seedu.application.testutil.TypicalJobs.getTypicalApplicationBook;","lastModifiedDate":"2023-10-10"},{"lineNumber":10,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":11,"author":{"gitId":"evanyan13"},"content":"import java.io.IOException;","lastModifiedDate":"2023-10-10"},{"lineNumber":12,"author":{"gitId":"evanyan13"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-10-10"},{"lineNumber":13,"author":{"gitId":"evanyan13"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-10-10"},{"lineNumber":14,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":15,"author":{"gitId":"evanyan13"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-10"},{"lineNumber":16,"author":{"gitId":"evanyan13"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2023-10-10"},{"lineNumber":17,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":18,"author":{"gitId":"evanyan13"},"content":"import seedu.application.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-10-10"},{"lineNumber":19,"author":{"gitId":"evanyan13"},"content":"import seedu.application.model.ApplicationBook;","lastModifiedDate":"2023-10-10"},{"lineNumber":20,"author":{"gitId":"evanyan13"},"content":"import seedu.application.model.ReadOnlyApplicationBook;","lastModifiedDate":"2023-10-10"},{"lineNumber":21,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":22,"author":{"gitId":"evanyan13"},"content":"public class JsonApplicationBookStorageTest {","lastModifiedDate":"2023-10-10"},{"lineNumber":23,"author":{"gitId":"evanyan13"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonApplicationBookStorageTest\");","lastModifiedDate":"2023-10-10"},{"lineNumber":24,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":25,"author":{"gitId":"evanyan13"},"content":"    @TempDir","lastModifiedDate":"2023-10-10"},{"lineNumber":26,"author":{"gitId":"evanyan13"},"content":"    public Path testFolder;","lastModifiedDate":"2023-10-10"},{"lineNumber":27,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":28,"author":{"gitId":"evanyan13"},"content":"    @Test","lastModifiedDate":"2023-10-10"},{"lineNumber":29,"author":{"gitId":"evanyan13"},"content":"    public void readApplicationBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2023-10-10"},{"lineNumber":30,"author":{"gitId":"evanyan13"},"content":"        assertThrows(NullPointerException.class, () -\u003e readApplicationBook(null));","lastModifiedDate":"2023-10-10"},{"lineNumber":31,"author":{"gitId":"evanyan13"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":32,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":33,"author":{"gitId":"evanyan13"},"content":"    private java.util.Optional\u003cReadOnlyApplicationBook\u003e readApplicationBook(String filePath) throws Exception {","lastModifiedDate":"2023-10-10"},{"lineNumber":34,"author":{"gitId":"evanyan13"},"content":"        return new JsonApplicationBookStorage(Paths.get(filePath))","lastModifiedDate":"2023-10-10"},{"lineNumber":35,"author":{"gitId":"evanyan13"},"content":"                .readApplicationBook(addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2023-10-10"},{"lineNumber":36,"author":{"gitId":"evanyan13"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":37,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":38,"author":{"gitId":"evanyan13"},"content":"    private Path addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {","lastModifiedDate":"2023-10-10"},{"lineNumber":39,"author":{"gitId":"evanyan13"},"content":"        return prefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2023-10-10"},{"lineNumber":40,"author":{"gitId":"evanyan13"},"content":"                ? TEST_DATA_FOLDER.resolve(prefsFileInTestDataFolder)","lastModifiedDate":"2023-10-10"},{"lineNumber":41,"author":{"gitId":"evanyan13"},"content":"                : null;","lastModifiedDate":"2023-10-10"},{"lineNumber":42,"author":{"gitId":"evanyan13"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":43,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":44,"author":{"gitId":"evanyan13"},"content":"    @Test","lastModifiedDate":"2023-10-10"},{"lineNumber":45,"author":{"gitId":"evanyan13"},"content":"    public void read_missingFile_emptyResult() throws Exception {","lastModifiedDate":"2023-10-10"},{"lineNumber":46,"author":{"gitId":"evanyan13"},"content":"        assertFalse(readApplicationBook(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2023-10-10"},{"lineNumber":47,"author":{"gitId":"evanyan13"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":48,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":49,"author":{"gitId":"evanyan13"},"content":"    @Test","lastModifiedDate":"2023-10-10"},{"lineNumber":50,"author":{"gitId":"evanyan13"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2023-10-10"},{"lineNumber":51,"author":{"gitId":"evanyan13"},"content":"        assertThrows(DataLoadingException.class, () -\u003e readApplicationBook(\"notJsonFormatApplicationBook.json\"));","lastModifiedDate":"2023-10-10"},{"lineNumber":52,"author":{"gitId":"evanyan13"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":53,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":54,"author":{"gitId":"evanyan13"},"content":"    @Test","lastModifiedDate":"2023-10-10"},{"lineNumber":55,"author":{"gitId":"evanyan13"},"content":"    public void readApplicationBook_invalidJobApplicationBook_throwDataLoadingException() {","lastModifiedDate":"2023-10-10"},{"lineNumber":56,"author":{"gitId":"evanyan13"},"content":"        assertThrows(DataLoadingException.class, () -\u003e readApplicationBook(\"invalidJobApplicationBook.json\"));","lastModifiedDate":"2023-10-10"},{"lineNumber":57,"author":{"gitId":"evanyan13"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":58,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":59,"author":{"gitId":"evanyan13"},"content":"    @Test","lastModifiedDate":"2023-10-10"},{"lineNumber":60,"author":{"gitId":"evanyan13"},"content":"    public void readApplicationBook_invalidAndValidJobApplicationBook_throwDataLoadingException() {","lastModifiedDate":"2023-10-10"},{"lineNumber":61,"author":{"gitId":"evanyan13"},"content":"        assertThrows(DataLoadingException.class, () -\u003e readApplicationBook(\"invalidAndValidJobApplicationBook.json\"));","lastModifiedDate":"2023-10-10"},{"lineNumber":62,"author":{"gitId":"evanyan13"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":63,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":64,"author":{"gitId":"evanyan13"},"content":"    @Test","lastModifiedDate":"2023-10-10"},{"lineNumber":65,"author":{"gitId":"evanyan13"},"content":"    public void readAndSaveApplicationBook_allInOrder_success() throws Exception {","lastModifiedDate":"2023-10-10"},{"lineNumber":66,"author":{"gitId":"evanyan13"},"content":"        Path filePath \u003d testFolder.resolve(\"TempApplicationBook.json\");","lastModifiedDate":"2023-10-10"},{"lineNumber":67,"author":{"gitId":"evanyan13"},"content":"        ApplicationBook original \u003d getTypicalApplicationBook();","lastModifiedDate":"2023-10-10"},{"lineNumber":68,"author":{"gitId":"evanyan13"},"content":"        JsonApplicationBookStorage jsonApplicationBookStorage \u003d new JsonApplicationBookStorage(filePath);","lastModifiedDate":"2023-10-10"},{"lineNumber":69,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":70,"author":{"gitId":"evanyan13"},"content":"        // Save in new file and read back","lastModifiedDate":"2023-10-10"},{"lineNumber":71,"author":{"gitId":"evanyan13"},"content":"        jsonApplicationBookStorage.saveApplicationBook(original, filePath);","lastModifiedDate":"2023-10-10"},{"lineNumber":72,"author":{"gitId":"evanyan13"},"content":"        ReadOnlyApplicationBook readBack \u003d jsonApplicationBookStorage.readApplicationBook(filePath).get();","lastModifiedDate":"2023-10-10"},{"lineNumber":73,"author":{"gitId":"evanyan13"},"content":"        assertEquals(original, new ApplicationBook(readBack));","lastModifiedDate":"2023-10-10"},{"lineNumber":74,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":75,"author":{"gitId":"evanyan13"},"content":"        // Modify data, overwrite exiting file, and read back","lastModifiedDate":"2023-10-10"},{"lineNumber":76,"author":{"gitId":"evanyan13"},"content":"        original.addJob(CHEF);","lastModifiedDate":"2023-10-10"},{"lineNumber":77,"author":{"gitId":"evanyan13"},"content":"        original.removeJob(GRASS_CUTTER);","lastModifiedDate":"2023-10-10"},{"lineNumber":78,"author":{"gitId":"evanyan13"},"content":"        jsonApplicationBookStorage.saveApplicationBook(original, filePath);","lastModifiedDate":"2023-10-10"},{"lineNumber":79,"author":{"gitId":"evanyan13"},"content":"        readBack \u003d jsonApplicationBookStorage.readApplicationBook(filePath).get();","lastModifiedDate":"2023-10-10"},{"lineNumber":80,"author":{"gitId":"evanyan13"},"content":"        assertEquals(original, new ApplicationBook(readBack));","lastModifiedDate":"2023-10-10"},{"lineNumber":81,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":82,"author":{"gitId":"evanyan13"},"content":"        // Save and read without specifying file path","lastModifiedDate":"2023-10-10"},{"lineNumber":83,"author":{"gitId":"evanyan13"},"content":"        original.addJob(CLEANER);","lastModifiedDate":"2023-10-10"},{"lineNumber":84,"author":{"gitId":"evanyan13"},"content":"        jsonApplicationBookStorage.saveApplicationBook(original); // file path not specified","lastModifiedDate":"2023-10-10"},{"lineNumber":85,"author":{"gitId":"evanyan13"},"content":"        readBack \u003d jsonApplicationBookStorage.readApplicationBook().get(); // file path not specified","lastModifiedDate":"2023-10-10"},{"lineNumber":86,"author":{"gitId":"evanyan13"},"content":"        assertEquals(original, new ApplicationBook(readBack));","lastModifiedDate":"2023-10-10"},{"lineNumber":87,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":88,"author":{"gitId":"evanyan13"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":89,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":90,"author":{"gitId":"evanyan13"},"content":"    @Test","lastModifiedDate":"2023-10-10"},{"lineNumber":91,"author":{"gitId":"evanyan13"},"content":"    public void saveApplicationBook_nullApplicationBook_throwsNullPointerException() {","lastModifiedDate":"2023-10-10"},{"lineNumber":92,"author":{"gitId":"evanyan13"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveApplicationBook(null, \"SomeFile.json\"));","lastModifiedDate":"2023-10-10"},{"lineNumber":93,"author":{"gitId":"evanyan13"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":94,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":95,"author":{"gitId":"evanyan13"},"content":"    /**","lastModifiedDate":"2023-10-10"},{"lineNumber":96,"author":{"gitId":"evanyan13"},"content":"     * Saves {@code ApplicationBook} at the specified {@code filePath}.","lastModifiedDate":"2023-10-10"},{"lineNumber":97,"author":{"gitId":"evanyan13"},"content":"     */","lastModifiedDate":"2023-10-10"},{"lineNumber":98,"author":{"gitId":"evanyan13"},"content":"    private void saveApplicationBook(ReadOnlyApplicationBook applicationBook, String filePath) {","lastModifiedDate":"2023-10-10"},{"lineNumber":99,"author":{"gitId":"evanyan13"},"content":"        try {","lastModifiedDate":"2023-10-10"},{"lineNumber":100,"author":{"gitId":"evanyan13"},"content":"            new JsonApplicationBookStorage(Paths.get(filePath))","lastModifiedDate":"2023-10-10"},{"lineNumber":101,"author":{"gitId":"evanyan13"},"content":"                    .saveApplicationBook(applicationBook, addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2023-10-10"},{"lineNumber":102,"author":{"gitId":"evanyan13"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2023-10-10"},{"lineNumber":103,"author":{"gitId":"evanyan13"},"content":"            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);","lastModifiedDate":"2023-10-10"},{"lineNumber":104,"author":{"gitId":"evanyan13"},"content":"        }","lastModifiedDate":"2023-10-10"},{"lineNumber":105,"author":{"gitId":"evanyan13"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":106,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":107,"author":{"gitId":"evanyan13"},"content":"    @Test","lastModifiedDate":"2023-10-10"},{"lineNumber":108,"author":{"gitId":"evanyan13"},"content":"    public void saveApplicationBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2023-10-10"},{"lineNumber":109,"author":{"gitId":"evanyan13"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveApplicationBook(new ApplicationBook(), null));","lastModifiedDate":"2023-10-10"},{"lineNumber":110,"author":{"gitId":"evanyan13"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":111,"author":{"gitId":"evanyan13"},"content":"}","lastModifiedDate":"2023-10-10"}],"authorContributionMap":{"evanyan13":111}},{"path":"src/test/java/seedu/application/storage/JsonSerializableApplicationBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"evanyan13"},"content":"package seedu.application.storage;","lastModifiedDate":"2023-10-10"},{"lineNumber":2,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":3,"author":{"gitId":"evanyan13"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-10"},{"lineNumber":4,"author":{"gitId":"evanyan13"},"content":"import static seedu.application.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-10"},{"lineNumber":5,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":6,"author":{"gitId":"evanyan13"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-10-10"},{"lineNumber":7,"author":{"gitId":"evanyan13"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-10-10"},{"lineNumber":8,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":9,"author":{"gitId":"evanyan13"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-10"},{"lineNumber":10,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":11,"author":{"gitId":"evanyan13"},"content":"import seedu.application.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-10-10"},{"lineNumber":12,"author":{"gitId":"evanyan13"},"content":"import seedu.application.commons.util.JsonUtil;","lastModifiedDate":"2023-10-10"},{"lineNumber":13,"author":{"gitId":"evanyan13"},"content":"import seedu.application.model.ApplicationBook;","lastModifiedDate":"2023-10-10"},{"lineNumber":14,"author":{"gitId":"evanyan13"},"content":"import seedu.application.testutil.TypicalJobs;","lastModifiedDate":"2023-10-10"},{"lineNumber":15,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":16,"author":{"gitId":"evanyan13"},"content":"public class JsonSerializableApplicationBookTest {","lastModifiedDate":"2023-10-10"},{"lineNumber":17,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":18,"author":{"gitId":"evanyan13"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(","lastModifiedDate":"2023-10-10"},{"lineNumber":19,"author":{"gitId":"evanyan13"},"content":"            \"src\", \"test\", \"data\", \"JsonSerializableApplicationBookTest\");","lastModifiedDate":"2023-10-10"},{"lineNumber":20,"author":{"gitId":"evanyan13"},"content":"    private static final Path TYPICAL_JOBS_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalJobsApplicationBook.json\");","lastModifiedDate":"2023-10-10"},{"lineNumber":21,"author":{"gitId":"evanyan13"},"content":"    private static final Path INVALID_JOB_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidJobApplicationBook.json\");","lastModifiedDate":"2023-10-10"},{"lineNumber":22,"author":{"gitId":"evanyan13"},"content":"    private static final Path DUPLICATE_JOB_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicateJobApplicationBook.json\");","lastModifiedDate":"2023-10-10"},{"lineNumber":23,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":24,"author":{"gitId":"evanyan13"},"content":"    @Test","lastModifiedDate":"2023-10-10"},{"lineNumber":25,"author":{"gitId":"evanyan13"},"content":"    public void toModelType_typicalJobsFile_success() throws Exception {","lastModifiedDate":"2023-10-10"},{"lineNumber":26,"author":{"gitId":"evanyan13"},"content":"        JsonSerializableApplicationBook dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_JOBS_FILE,","lastModifiedDate":"2023-10-10"},{"lineNumber":27,"author":{"gitId":"evanyan13"},"content":"                JsonSerializableApplicationBook.class).get();","lastModifiedDate":"2023-10-10"},{"lineNumber":28,"author":{"gitId":"evanyan13"},"content":"        ApplicationBook applicationBookFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2023-10-10"},{"lineNumber":29,"author":{"gitId":"evanyan13"},"content":"        ApplicationBook typicalJobsApplicationBook \u003d TypicalJobs.getTypicalApplicationBook();","lastModifiedDate":"2023-10-10"},{"lineNumber":30,"author":{"gitId":"evanyan13"},"content":"        assertEquals(applicationBookFromFile, typicalJobsApplicationBook);","lastModifiedDate":"2023-10-10"},{"lineNumber":31,"author":{"gitId":"evanyan13"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":32,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":33,"author":{"gitId":"evanyan13"},"content":"    @Test","lastModifiedDate":"2023-10-10"},{"lineNumber":34,"author":{"gitId":"evanyan13"},"content":"    public void toModelType_invalidJobFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2023-10-10"},{"lineNumber":35,"author":{"gitId":"evanyan13"},"content":"        JsonSerializableApplicationBook dataFromFile \u003d JsonUtil.readJsonFile(INVALID_JOB_FILE,","lastModifiedDate":"2023-10-10"},{"lineNumber":36,"author":{"gitId":"evanyan13"},"content":"                JsonSerializableApplicationBook.class).get();","lastModifiedDate":"2023-10-10"},{"lineNumber":37,"author":{"gitId":"evanyan13"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2023-10-10"},{"lineNumber":38,"author":{"gitId":"evanyan13"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":39,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":40,"author":{"gitId":"evanyan13"},"content":"    @Test","lastModifiedDate":"2023-10-10"},{"lineNumber":41,"author":{"gitId":"evanyan13"},"content":"    public void toModelType_duplicateJobs_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2023-10-10"},{"lineNumber":42,"author":{"gitId":"evanyan13"},"content":"        JsonSerializableApplicationBook dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_JOB_FILE,","lastModifiedDate":"2023-10-10"},{"lineNumber":43,"author":{"gitId":"evanyan13"},"content":"                JsonSerializableApplicationBook.class).get();","lastModifiedDate":"2023-10-10"},{"lineNumber":44,"author":{"gitId":"evanyan13"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableApplicationBook.MESSAGE_DUPLICATE_JOB,","lastModifiedDate":"2023-10-10"},{"lineNumber":45,"author":{"gitId":"evanyan13"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2023-10-10"},{"lineNumber":46,"author":{"gitId":"evanyan13"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":47,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":48,"author":{"gitId":"evanyan13"},"content":"}","lastModifiedDate":"2023-10-10"}],"authorContributionMap":{"evanyan13":48}},{"path":"src/test/java/seedu/application/storage/JsonUserPrefsStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"evanyan13"},"content":"package seedu.application.storage;","lastModifiedDate":"2023-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"evanyan13"},"content":"import static seedu.application.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-10"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":15,"author":{"gitId":"evanyan13"},"content":"import seedu.application.commons.core.GuiSettings;","lastModifiedDate":"2023-10-10"},{"lineNumber":16,"author":{"gitId":"evanyan13"},"content":"import seedu.application.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-10-10"},{"lineNumber":17,"author":{"gitId":"evanyan13"},"content":"import seedu.application.model.UserPrefs;","lastModifiedDate":"2023-10-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorageTest {","lastModifiedDate":"2016-10-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonUserPrefsStorageTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void readUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Optional\u003cUserPrefs\u003e readUserPrefs(String userPrefsFileInTestDataFolder) throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d addToTestDataPathIfNotNull(userPrefsFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return new JsonUserPrefsStorage(prefsFilePath).readUserPrefs(prefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void readUserPrefs_missingFile_emptyResult() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(readUserPrefs(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void readUserPrefs_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(DataLoadingException.class, () -\u003e readUserPrefs(\"NotJsonFormatUserPrefs.json\"));","lastModifiedDate":"2023-06-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String userPrefsFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return userPrefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(userPrefsFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void readUserPrefs_fileInOrder_successfullyRead() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"TypicalUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void readUserPrefs_valuesMissingFromFile_defaultValuesUsed() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"EmptyUserPrefs.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void readUserPrefs_extraValuesInFile_extraValuesIgnored() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"ExtraValuesUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    private UserPrefs getTypicalUserPrefs() {","lastModifiedDate":"2017-02-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1000, 500, 300, 100));","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"evanyan13"},"content":"        userPrefs.setApplicationBookFilePath(Paths.get(\"applicationbook.json\"));","lastModifiedDate":"2023-10-10"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2017-02-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void savePrefs_nullPrefs_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(new UserPrefs(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Saves {@code userPrefs} at the specified {@code prefsFileInTestDataFolder} filepath.","lastModifiedDate":"2017-08-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    private void saveUserPrefs(UserPrefs userPrefs, String prefsFileInTestDataFolder) {","lastModifiedDate":"2017-08-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            new JsonUserPrefsStorage(addToTestDataPathIfNotNull(prefsFileInTestDataFolder))","lastModifiedDate":"2016-10-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                    .saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file\", ioe);","lastModifiedDate":"2017-08-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_allInOrder_success() throws DataLoadingException, IOException {","lastModifiedDate":"2023-06-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(1200, 200, 0, 2));","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        Path pefsFilePath \u003d testFolder.resolve(\"TempPrefs.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage jsonUserPrefsStorage \u003d new JsonUserPrefsStorage(pefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        UserPrefs readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(5, 5, 5, 5));","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"evanyan13":6,"-":117}},{"path":"src/test/java/seedu/application/storage/StorageManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"evanyan13"},"content":"package seedu.application.storage;","lastModifiedDate":"2023-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"evanyan13"},"content":"import static seedu.application.testutil.TypicalJobs.getTypicalApplicationBook;","lastModifiedDate":"2023-10-10"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"evanyan13"},"content":"import seedu.application.commons.core.GuiSettings;","lastModifiedDate":"2023-10-10"},{"lineNumber":14,"author":{"gitId":"evanyan13"},"content":"import seedu.application.model.ApplicationBook;","lastModifiedDate":"2023-10-10"},{"lineNumber":15,"author":{"gitId":"evanyan13"},"content":"import seedu.application.model.ReadOnlyApplicationBook;","lastModifiedDate":"2023-10-10"},{"lineNumber":16,"author":{"gitId":"evanyan13"},"content":"import seedu.application.model.UserPrefs;","lastModifiedDate":"2023-10-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class StorageManagerTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private StorageManager storageManager;","lastModifiedDate":"2017-04-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"evanyan13"},"content":"        JsonApplicationBookStorage applicationBookStorage \u003d new JsonApplicationBookStorage(getTempFilePath(\"ab\"));","lastModifiedDate":"2023-10-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));","lastModifiedDate":"2017-02-25"},{"lineNumber":29,"author":{"gitId":"evanyan13"},"content":"        storageManager \u003d new StorageManager(applicationBookStorage, userPrefsStorage);","lastModifiedDate":"2023-10-10"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Path getTempFilePath(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return testFolder.resolve(fileName);","lastModifiedDate":"2019-04-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void prefsReadSave() throws Exception {","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-09-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-09-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"         * {@link JsonUserPrefsStorage} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonUserPrefsStorageTest} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(300, 600, 4, 6));","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        storageManager.saveUserPrefs(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        UserPrefs retrieved \u003d storageManager.readUserPrefs().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(original, retrieved);","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"evanyan13"},"content":"    public void applicationBookReadSave() throws Exception {","lastModifiedDate":"2023-10-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-10-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"evanyan13"},"content":"         * {@link JsonApplicationBookStorage} class.","lastModifiedDate":"2023-10-10"},{"lineNumber":55,"author":{"gitId":"evanyan13"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonApplicationBookStorageTest} class.","lastModifiedDate":"2023-10-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"evanyan13"},"content":"        ApplicationBook original \u003d getTypicalApplicationBook();","lastModifiedDate":"2023-10-10"},{"lineNumber":58,"author":{"gitId":"evanyan13"},"content":"        storageManager.saveApplicationBook(original);","lastModifiedDate":"2023-10-10"},{"lineNumber":59,"author":{"gitId":"evanyan13"},"content":"        ReadOnlyApplicationBook retrieved \u003d storageManager.readApplicationBook().get();","lastModifiedDate":"2023-10-10"},{"lineNumber":60,"author":{"gitId":"evanyan13"},"content":"        assertEquals(original, new ApplicationBook(retrieved));","lastModifiedDate":"2023-10-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-01"},{"lineNumber":64,"author":{"gitId":"evanyan13"},"content":"    public void getApplicationBookFilePath() {","lastModifiedDate":"2023-10-10"},{"lineNumber":65,"author":{"gitId":"evanyan13"},"content":"        assertNotNull(storageManager.getApplicationBookFilePath());","lastModifiedDate":"2023-10-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"evanyan13":17,"-":51}},{"path":"src/test/java/seedu/application/testutil/ApplicationBookBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"evanyan13"},"content":"package seedu.application.testutil;","lastModifiedDate":"2023-10-10"},{"lineNumber":2,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":3,"author":{"gitId":"evanyan13"},"content":"import seedu.application.model.ApplicationBook;","lastModifiedDate":"2023-10-10"},{"lineNumber":4,"author":{"gitId":"evanyan13"},"content":"import seedu.application.model.job.Job;","lastModifiedDate":"2023-10-10"},{"lineNumber":5,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":6,"author":{"gitId":"evanyan13"},"content":"/**","lastModifiedDate":"2023-10-10"},{"lineNumber":7,"author":{"gitId":"migfoo02"},"content":" * A utility class to help with building ApplicationBook objects.","lastModifiedDate":"2023-10-22"},{"lineNumber":8,"author":{"gitId":"evanyan13"},"content":" * Example usage: \u003cbr\u003e","lastModifiedDate":"2023-10-10"},{"lineNumber":9,"author":{"gitId":"evanyan13"},"content":" *     {@code ApplicationBook ab \u003d new ApplicationBookBuilder().withJob(\"Software Engineer\", \"Google\").build();}","lastModifiedDate":"2023-10-10"},{"lineNumber":10,"author":{"gitId":"evanyan13"},"content":" */","lastModifiedDate":"2023-10-10"},{"lineNumber":11,"author":{"gitId":"evanyan13"},"content":"public class ApplicationBookBuilder {","lastModifiedDate":"2023-10-10"},{"lineNumber":12,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":13,"author":{"gitId":"migfoo02"},"content":"    private final ApplicationBook applicationBook;","lastModifiedDate":"2023-10-22"},{"lineNumber":14,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":15,"author":{"gitId":"evanyan13"},"content":"    public ApplicationBookBuilder() {","lastModifiedDate":"2023-10-10"},{"lineNumber":16,"author":{"gitId":"evanyan13"},"content":"        applicationBook \u003d new ApplicationBook();","lastModifiedDate":"2023-10-10"},{"lineNumber":17,"author":{"gitId":"evanyan13"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":18,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":19,"author":{"gitId":"evanyan13"},"content":"    public ApplicationBookBuilder(ApplicationBook applicationBook) {","lastModifiedDate":"2023-10-10"},{"lineNumber":20,"author":{"gitId":"evanyan13"},"content":"        this.applicationBook \u003d applicationBook;","lastModifiedDate":"2023-10-10"},{"lineNumber":21,"author":{"gitId":"evanyan13"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":22,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":23,"author":{"gitId":"evanyan13"},"content":"    /**","lastModifiedDate":"2023-10-10"},{"lineNumber":24,"author":{"gitId":"evanyan13"},"content":"     * Adds a new {@code Person} to the {@code ApplicationBook} that we are building.","lastModifiedDate":"2023-10-10"},{"lineNumber":25,"author":{"gitId":"evanyan13"},"content":"     */","lastModifiedDate":"2023-10-10"},{"lineNumber":26,"author":{"gitId":"evanyan13"},"content":"    public ApplicationBookBuilder withJob(Job job) {","lastModifiedDate":"2023-10-10"},{"lineNumber":27,"author":{"gitId":"evanyan13"},"content":"        applicationBook.addJob(job);","lastModifiedDate":"2023-10-10"},{"lineNumber":28,"author":{"gitId":"evanyan13"},"content":"        return this;","lastModifiedDate":"2023-10-10"},{"lineNumber":29,"author":{"gitId":"evanyan13"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":30,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":31,"author":{"gitId":"evanyan13"},"content":"    public ApplicationBook build() {","lastModifiedDate":"2023-10-10"},{"lineNumber":32,"author":{"gitId":"evanyan13"},"content":"        return applicationBook;","lastModifiedDate":"2023-10-10"},{"lineNumber":33,"author":{"gitId":"evanyan13"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":34,"author":{"gitId":"evanyan13"},"content":"}","lastModifiedDate":"2023-10-10"}],"authorContributionMap":{"evanyan13":32,"migfoo02":2}},{"path":"src/test/java/seedu/application/testutil/Assert.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"evanyan13"},"content":"package seedu.application.testutil;","lastModifiedDate":"2023-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2019-03-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.function.Executable;","lastModifiedDate":"2019-03-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * A set of assertion methods useful for writing tests.","lastModifiedDate":"2017-07-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class Assert {","lastModifiedDate":"2017-07-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Asserts that the {@code executable} throws the {@code expectedType} Exception.","lastModifiedDate":"2019-03-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * This is a wrapper method that invokes {@link Assertions#assertThrows(Class, Executable)}, to maintain consistency","lastModifiedDate":"2019-03-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * with our custom {@link #assertThrows(Class, String, Executable)} method.","lastModifiedDate":"2019-03-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * To standardize API calls in this project, users should use this method instead of","lastModifiedDate":"2019-03-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * {@link Assertions#assertThrows(Class, Executable)}.","lastModifiedDate":"2019-03-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static void assertThrows(Class\u003c? extends Throwable\u003e expectedType, Executable executable) {","lastModifiedDate":"2019-03-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        Assertions.assertThrows(expectedType, executable);","lastModifiedDate":"2019-03-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-02-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-02-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-02-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Asserts that the {@code executable} throws the {@code expectedType} Exception with the {@code expectedMessage}.","lastModifiedDate":"2019-03-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * If there\u0027s no need for the verification of the exception\u0027s error message, call","lastModifiedDate":"2018-02-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * {@link #assertThrows(Class, Executable)} instead.","lastModifiedDate":"2019-03-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2019-03-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @see #assertThrows(Class, Executable)","lastModifiedDate":"2019-03-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-02-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static void assertThrows(Class\u003c? extends Throwable\u003e expectedType, String expectedMessage,","lastModifiedDate":"2019-03-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            Executable executable) {","lastModifiedDate":"2019-03-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        Throwable thrownException \u003d Assertions.assertThrows(expectedType, executable);","lastModifiedDate":"2019-03-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(expectedMessage, thrownException.getMessage());","lastModifiedDate":"2019-03-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-17"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-17"}],"authorContributionMap":{"evanyan13":1,"-":33}},{"path":"src/test/java/seedu/application/testutil/EditJobDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"evanyan13"},"content":"package seedu.application.testutil;","lastModifiedDate":"2023-10-10"},{"lineNumber":2,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":3,"author":{"gitId":"evanyan13"},"content":"import seedu.application.logic.commands.EditCommand.EditJobDescriptor;","lastModifiedDate":"2023-10-10"},{"lineNumber":4,"author":{"gitId":"czhiruo"},"content":"import seedu.application.model.job.*;","lastModifiedDate":"2023-10-20"},{"lineNumber":5,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":6,"author":{"gitId":"JeremyYong128"},"content":"/**","lastModifiedDate":"2023-10-04"},{"lineNumber":7,"author":{"gitId":"JeremyYong128"},"content":" * A utility class to help with building EditJobDescriptor objects.","lastModifiedDate":"2023-10-04"},{"lineNumber":8,"author":{"gitId":"JeremyYong128"},"content":" */","lastModifiedDate":"2023-10-04"},{"lineNumber":9,"author":{"gitId":"JeremyYong128"},"content":"public class EditJobDescriptorBuilder {","lastModifiedDate":"2023-10-04"},{"lineNumber":10,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":11,"author":{"gitId":"JeremyYong128"},"content":"    private EditJobDescriptor descriptor;","lastModifiedDate":"2023-10-04"},{"lineNumber":12,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":13,"author":{"gitId":"JeremyYong128"},"content":"    public EditJobDescriptorBuilder() {","lastModifiedDate":"2023-10-04"},{"lineNumber":14,"author":{"gitId":"JeremyYong128"},"content":"        descriptor \u003d new EditJobDescriptor();","lastModifiedDate":"2023-10-04"},{"lineNumber":15,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":16,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":17,"author":{"gitId":"JeremyYong128"},"content":"    public EditJobDescriptorBuilder(EditJobDescriptor descriptor) {","lastModifiedDate":"2023-10-04"},{"lineNumber":18,"author":{"gitId":"JeremyYong128"},"content":"        this.descriptor \u003d new EditJobDescriptor(descriptor);","lastModifiedDate":"2023-10-04"},{"lineNumber":19,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":20,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":21,"author":{"gitId":"JeremyYong128"},"content":"    /**","lastModifiedDate":"2023-10-04"},{"lineNumber":22,"author":{"gitId":"JeremyYong128"},"content":"     * Returns an {@code EditJobDescriptor} with fields containing {@code job}\u0027s details","lastModifiedDate":"2023-10-04"},{"lineNumber":23,"author":{"gitId":"JeremyYong128"},"content":"     */","lastModifiedDate":"2023-10-04"},{"lineNumber":24,"author":{"gitId":"JeremyYong128"},"content":"    public EditJobDescriptorBuilder(Job job) {","lastModifiedDate":"2023-10-04"},{"lineNumber":25,"author":{"gitId":"JeremyYong128"},"content":"        descriptor \u003d new EditJobDescriptor();","lastModifiedDate":"2023-10-04"},{"lineNumber":26,"author":{"gitId":"JeremyYong128"},"content":"        descriptor.setRole(job.getRole());","lastModifiedDate":"2023-10-04"},{"lineNumber":27,"author":{"gitId":"JeremyYong128"},"content":"        descriptor.setCompany(job.getCompany());","lastModifiedDate":"2023-10-04"},{"lineNumber":28,"author":{"gitId":"evanyan13"},"content":"        descriptor.setDeadline(job.getDeadline());","lastModifiedDate":"2023-10-18"},{"lineNumber":29,"author":{"gitId":"czhiruo"},"content":"        descriptor.setStatus(job.getStatus());","lastModifiedDate":"2023-10-20"},{"lineNumber":30,"author":{"gitId":"migfoo02"},"content":"        descriptor.setJobType(job.getJobType());","lastModifiedDate":"2023-10-22"},{"lineNumber":31,"author":{"gitId":"czhiruo"},"content":"        descriptor.setIndustry(job.getIndustry());","lastModifiedDate":"2023-10-20"},{"lineNumber":32,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":33,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":34,"author":{"gitId":"JeremyYong128"},"content":"    /**","lastModifiedDate":"2023-10-04"},{"lineNumber":35,"author":{"gitId":"JeremyYong128"},"content":"     * Sets the {@code Role} of the {@code EditJobDescriptor} that we are building.","lastModifiedDate":"2023-10-04"},{"lineNumber":36,"author":{"gitId":"JeremyYong128"},"content":"     */","lastModifiedDate":"2023-10-04"},{"lineNumber":37,"author":{"gitId":"JeremyYong128"},"content":"    public EditJobDescriptorBuilder withRole(String role) {","lastModifiedDate":"2023-10-04"},{"lineNumber":38,"author":{"gitId":"JeremyYong128"},"content":"        descriptor.setRole(new Role(role));","lastModifiedDate":"2023-10-04"},{"lineNumber":39,"author":{"gitId":"JeremyYong128"},"content":"        return this;","lastModifiedDate":"2023-10-04"},{"lineNumber":40,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":41,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":42,"author":{"gitId":"JeremyYong128"},"content":"    /**","lastModifiedDate":"2023-10-04"},{"lineNumber":43,"author":{"gitId":"JeremyYong128"},"content":"     * Sets the {@code Company} of the {@code EditJobDescriptor} that we are building.","lastModifiedDate":"2023-10-04"},{"lineNumber":44,"author":{"gitId":"JeremyYong128"},"content":"     */","lastModifiedDate":"2023-10-04"},{"lineNumber":45,"author":{"gitId":"JeremyYong128"},"content":"    public EditJobDescriptorBuilder withCompany(String company) {","lastModifiedDate":"2023-10-04"},{"lineNumber":46,"author":{"gitId":"JeremyYong128"},"content":"        descriptor.setCompany(new Company(company));","lastModifiedDate":"2023-10-04"},{"lineNumber":47,"author":{"gitId":"JeremyYong128"},"content":"        return this;","lastModifiedDate":"2023-10-04"},{"lineNumber":48,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":49,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":50,"author":{"gitId":"evanyan13"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":51,"author":{"gitId":"evanyan13"},"content":"     * Sets the {@code Deadline} of the {@code EditJobDescriptor} that we are building.","lastModifiedDate":"2023-10-18"},{"lineNumber":52,"author":{"gitId":"evanyan13"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":53,"author":{"gitId":"evanyan13"},"content":"    public EditJobDescriptorBuilder withDeadline(String deadline) {","lastModifiedDate":"2023-10-18"},{"lineNumber":54,"author":{"gitId":"evanyan13"},"content":"        descriptor.setDeadline(new Deadline(deadline));","lastModifiedDate":"2023-10-18"},{"lineNumber":55,"author":{"gitId":"evanyan13"},"content":"        return this;","lastModifiedDate":"2023-10-18"},{"lineNumber":56,"author":{"gitId":"evanyan13"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":57,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":58,"author":{"gitId":"czhiruo"},"content":"    /**","lastModifiedDate":"2023-10-21"},{"lineNumber":59,"author":{"gitId":"czhiruo"},"content":"     * Sets the {@code Status} of the {@code EditJobDescriptor} that we are building.","lastModifiedDate":"2023-10-21"},{"lineNumber":60,"author":{"gitId":"czhiruo"},"content":"     */","lastModifiedDate":"2023-10-21"},{"lineNumber":61,"author":{"gitId":"czhiruo"},"content":"    public EditJobDescriptorBuilder withStatus(String status) {","lastModifiedDate":"2023-10-20"},{"lineNumber":62,"author":{"gitId":"czhiruo"},"content":"        descriptor.setStatus(new Status(status));","lastModifiedDate":"2023-10-20"},{"lineNumber":63,"author":{"gitId":"czhiruo"},"content":"        return this;","lastModifiedDate":"2023-10-20"},{"lineNumber":64,"author":{"gitId":"czhiruo"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":65,"author":{"gitId":"czhiruo"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":66,"author":{"gitId":"migfoo02"},"content":"    /**","lastModifiedDate":"2023-10-22"},{"lineNumber":67,"author":{"gitId":"migfoo02"},"content":"     * Sets the {@code JobType} of the {@code EditJobDescriptor} that we are building.","lastModifiedDate":"2023-10-22"},{"lineNumber":68,"author":{"gitId":"migfoo02"},"content":"     */","lastModifiedDate":"2023-10-22"},{"lineNumber":69,"author":{"gitId":"migfoo02"},"content":"    public EditJobDescriptorBuilder withJobType(String jobType) {","lastModifiedDate":"2023-10-22"},{"lineNumber":70,"author":{"gitId":"migfoo02"},"content":"        descriptor.setJobType(new JobType(jobType));","lastModifiedDate":"2023-10-22"},{"lineNumber":71,"author":{"gitId":"migfoo02"},"content":"        return this;","lastModifiedDate":"2023-10-22"},{"lineNumber":72,"author":{"gitId":"migfoo02"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":73,"author":{"gitId":"migfoo02"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":74,"author":{"gitId":"czhiruo"},"content":"    /**","lastModifiedDate":"2023-10-21"},{"lineNumber":75,"author":{"gitId":"czhiruo"},"content":"     * Sets the {@code Industry} of the {@code EditJobDescriptor} that we are building.","lastModifiedDate":"2023-10-21"},{"lineNumber":76,"author":{"gitId":"czhiruo"},"content":"     */","lastModifiedDate":"2023-10-21"},{"lineNumber":77,"author":{"gitId":"czhiruo"},"content":"    public EditJobDescriptorBuilder withIndustry(String industry) {","lastModifiedDate":"2023-10-20"},{"lineNumber":78,"author":{"gitId":"czhiruo"},"content":"        descriptor.setIndustry(new Industry(industry));","lastModifiedDate":"2023-10-20"},{"lineNumber":79,"author":{"gitId":"czhiruo"},"content":"        return this;","lastModifiedDate":"2023-10-20"},{"lineNumber":80,"author":{"gitId":"czhiruo"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":81,"author":{"gitId":"czhiruo"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":82,"author":{"gitId":"JeremyYong128"},"content":"    public EditJobDescriptor build() {","lastModifiedDate":"2023-10-04"},{"lineNumber":83,"author":{"gitId":"JeremyYong128"},"content":"        return descriptor;","lastModifiedDate":"2023-10-04"},{"lineNumber":84,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":85,"author":{"gitId":"JeremyYong128"},"content":"}","lastModifiedDate":"2023-10-04"}],"authorContributionMap":{"czhiruo":19,"evanyan13":11,"JeremyYong128":46,"migfoo02":9}},{"path":"src/test/java/seedu/application/testutil/InterviewBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"peiran18"},"content":"package seedu.application.testutil;","lastModifiedDate":"2023-10-31"},{"lineNumber":2,"author":{"gitId":"peiran18"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":3,"author":{"gitId":"peiran18"},"content":"import seedu.application.model.job.*;","lastModifiedDate":"2023-10-31"},{"lineNumber":4,"author":{"gitId":"peiran18"},"content":"import seedu.application.model.job.interview.Interview;","lastModifiedDate":"2023-10-31"},{"lineNumber":5,"author":{"gitId":"peiran18"},"content":"import seedu.application.model.job.interview.InterviewAddress;","lastModifiedDate":"2023-10-31"},{"lineNumber":6,"author":{"gitId":"peiran18"},"content":"import seedu.application.model.job.interview.InterviewDateTime;","lastModifiedDate":"2023-10-31"},{"lineNumber":7,"author":{"gitId":"peiran18"},"content":"import seedu.application.model.job.interview.InterviewType;","lastModifiedDate":"2023-10-31"},{"lineNumber":8,"author":{"gitId":"peiran18"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":9,"author":{"gitId":"peiran18"},"content":"/**","lastModifiedDate":"2023-10-31"},{"lineNumber":10,"author":{"gitId":"peiran18"},"content":" * A utility class to help with building Interview objects.","lastModifiedDate":"2023-10-31"},{"lineNumber":11,"author":{"gitId":"peiran18"},"content":" */","lastModifiedDate":"2023-10-31"},{"lineNumber":12,"author":{"gitId":"peiran18"},"content":"public class InterviewBuilder {","lastModifiedDate":"2023-10-31"},{"lineNumber":13,"author":{"gitId":"peiran18"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":14,"author":{"gitId":"peiran18"},"content":"    public static final String DEFAULT_TYPE \u003d \"Technical\";","lastModifiedDate":"2023-10-31"},{"lineNumber":15,"author":{"gitId":"peiran18"},"content":"    public static final String DEFAULT_DATETIME \u003d \"Dec 31 2030 1200\";","lastModifiedDate":"2023-10-31"},{"lineNumber":16,"author":{"gitId":"peiran18"},"content":"    public static final String DEFAULT_ADDRESS \u003d \"Home\";","lastModifiedDate":"2023-10-31"},{"lineNumber":17,"author":{"gitId":"peiran18"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":18,"author":{"gitId":"peiran18"},"content":"    private InterviewType interviewType;","lastModifiedDate":"2023-10-31"},{"lineNumber":19,"author":{"gitId":"peiran18"},"content":"    private InterviewDateTime interviewDateTime;","lastModifiedDate":"2023-10-31"},{"lineNumber":20,"author":{"gitId":"peiran18"},"content":"    private InterviewAddress interviewAddress;","lastModifiedDate":"2023-10-31"},{"lineNumber":21,"author":{"gitId":"peiran18"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":22,"author":{"gitId":"peiran18"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":23,"author":{"gitId":"peiran18"},"content":"     * Creates a {@code InterviewBuilder} with the default details.","lastModifiedDate":"2023-10-31"},{"lineNumber":24,"author":{"gitId":"peiran18"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":25,"author":{"gitId":"peiran18"},"content":"    public InterviewBuilder() {","lastModifiedDate":"2023-10-31"},{"lineNumber":26,"author":{"gitId":"peiran18"},"content":"        interviewType \u003d new InterviewType(DEFAULT_TYPE);","lastModifiedDate":"2023-10-31"},{"lineNumber":27,"author":{"gitId":"peiran18"},"content":"        interviewDateTime \u003d new InterviewDateTime(DEFAULT_DATETIME);","lastModifiedDate":"2023-10-31"},{"lineNumber":28,"author":{"gitId":"peiran18"},"content":"        interviewAddress \u003d new InterviewAddress(DEFAULT_ADDRESS);","lastModifiedDate":"2023-10-31"},{"lineNumber":29,"author":{"gitId":"peiran18"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":30,"author":{"gitId":"peiran18"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":31,"author":{"gitId":"peiran18"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":32,"author":{"gitId":"peiran18"},"content":"     * Initializes the InterviewBuilder with the data of {@code interviewToCopy}.","lastModifiedDate":"2023-10-31"},{"lineNumber":33,"author":{"gitId":"peiran18"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":34,"author":{"gitId":"peiran18"},"content":"    public InterviewBuilder(Interview interviewToCopy) {","lastModifiedDate":"2023-10-31"},{"lineNumber":35,"author":{"gitId":"peiran18"},"content":"        interviewType \u003d interviewToCopy.getInterviewType();","lastModifiedDate":"2023-10-31"},{"lineNumber":36,"author":{"gitId":"peiran18"},"content":"        interviewDateTime \u003d interviewToCopy.getInterviewDateTime();","lastModifiedDate":"2023-10-31"},{"lineNumber":37,"author":{"gitId":"peiran18"},"content":"        interviewAddress \u003d interviewToCopy.getInterviewAddress();","lastModifiedDate":"2023-10-31"},{"lineNumber":38,"author":{"gitId":"peiran18"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":39,"author":{"gitId":"peiran18"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":40,"author":{"gitId":"peiran18"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":41,"author":{"gitId":"peiran18"},"content":"     * Sets the {@code interviewType} of the {@code Interview} that we are building.","lastModifiedDate":"2023-10-31"},{"lineNumber":42,"author":{"gitId":"peiran18"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":43,"author":{"gitId":"peiran18"},"content":"    public InterviewBuilder withType(String interviewType) {","lastModifiedDate":"2023-10-31"},{"lineNumber":44,"author":{"gitId":"peiran18"},"content":"        this.interviewType \u003d new InterviewType(interviewType);","lastModifiedDate":"2023-10-31"},{"lineNumber":45,"author":{"gitId":"peiran18"},"content":"        return this;","lastModifiedDate":"2023-10-31"},{"lineNumber":46,"author":{"gitId":"peiran18"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":47,"author":{"gitId":"peiran18"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":48,"author":{"gitId":"peiran18"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":49,"author":{"gitId":"peiran18"},"content":"     * Sets the {@code interviewDateTime} of the {@code Interview} that we are building.","lastModifiedDate":"2023-10-31"},{"lineNumber":50,"author":{"gitId":"peiran18"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":51,"author":{"gitId":"peiran18"},"content":"    public InterviewBuilder withDateTime(String interviewDateTime) {","lastModifiedDate":"2023-10-31"},{"lineNumber":52,"author":{"gitId":"peiran18"},"content":"        this.interviewDateTime \u003d new InterviewDateTime(interviewDateTime);","lastModifiedDate":"2023-10-31"},{"lineNumber":53,"author":{"gitId":"peiran18"},"content":"        return this;","lastModifiedDate":"2023-10-31"},{"lineNumber":54,"author":{"gitId":"peiran18"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":55,"author":{"gitId":"peiran18"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":56,"author":{"gitId":"peiran18"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":57,"author":{"gitId":"peiran18"},"content":"     * Sets the {@code interviewAddress} of the {@code Interview} that we are building.","lastModifiedDate":"2023-10-31"},{"lineNumber":58,"author":{"gitId":"peiran18"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":59,"author":{"gitId":"peiran18"},"content":"    public InterviewBuilder withAddress(String interviewAddress) {","lastModifiedDate":"2023-10-31"},{"lineNumber":60,"author":{"gitId":"peiran18"},"content":"        this.interviewAddress \u003d new InterviewAddress(interviewAddress);","lastModifiedDate":"2023-10-31"},{"lineNumber":61,"author":{"gitId":"peiran18"},"content":"        return this;","lastModifiedDate":"2023-10-31"},{"lineNumber":62,"author":{"gitId":"peiran18"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":63,"author":{"gitId":"peiran18"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":64,"author":{"gitId":"peiran18"},"content":"    public Interview build() {","lastModifiedDate":"2023-10-31"},{"lineNumber":65,"author":{"gitId":"peiran18"},"content":"        return new Interview(interviewType, interviewDateTime, interviewAddress);","lastModifiedDate":"2023-10-31"},{"lineNumber":66,"author":{"gitId":"peiran18"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":67,"author":{"gitId":"peiran18"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":68,"author":{"gitId":"peiran18"},"content":"}","lastModifiedDate":"2023-10-31"}],"authorContributionMap":{"peiran18":68}},{"path":"src/test/java/seedu/application/testutil/JobBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"evanyan13"},"content":"package seedu.application.testutil;","lastModifiedDate":"2023-10-10"},{"lineNumber":2,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":3,"author":{"gitId":"peiran18"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-31"},{"lineNumber":4,"author":{"gitId":"peiran18"},"content":"import java.util.List;","lastModifiedDate":"2023-10-31"},{"lineNumber":5,"author":{"gitId":"peiran18"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":6,"author":{"gitId":"peiran18"},"content":"import seedu.application.model.job.*;","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"peiran18"},"content":"import seedu.application.model.job.interview.Interview;","lastModifiedDate":"2023-10-31"},{"lineNumber":8,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":9,"author":{"gitId":"JeremyYong128"},"content":"/**","lastModifiedDate":"2023-10-04"},{"lineNumber":10,"author":{"gitId":"JeremyYong128"},"content":" * A utility class to help with building Job objects.","lastModifiedDate":"2023-10-04"},{"lineNumber":11,"author":{"gitId":"JeremyYong128"},"content":" */","lastModifiedDate":"2023-10-04"},{"lineNumber":12,"author":{"gitId":"JeremyYong128"},"content":"public class JobBuilder {","lastModifiedDate":"2023-10-04"},{"lineNumber":13,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":14,"author":{"gitId":"JeremyYong128"},"content":"    public static final String DEFAULT_ROLE \u003d \"Student\";","lastModifiedDate":"2023-10-04"},{"lineNumber":15,"author":{"gitId":"JeremyYong128"},"content":"    public static final String DEFAULT_COMPANY \u003d \"Sparkletots\";","lastModifiedDate":"2023-10-04"},{"lineNumber":16,"author":{"gitId":"evanyan13"},"content":"    public static final String DEFAULT_DEADLINE \u003d Deadline.TO_ADD_DEADLINE;","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"peiran18"},"content":"    public static final String DEFAULT_JOB_TYPE \u003d JobType.TO_ADD_JOB_TYPE;","lastModifiedDate":"2023-10-31"},{"lineNumber":18,"author":{"gitId":"peiran18"},"content":"    public static final String DEFAULT_STATUS \u003d Status.IN_PROGRESS;","lastModifiedDate":"2023-10-21"},{"lineNumber":19,"author":{"gitId":"czhiruo"},"content":"    public static final String DEFAULT_INDUSTRY \u003d Industry.TO_ADD_INDUSTRY;","lastModifiedDate":"2023-10-20"},{"lineNumber":20,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":21,"author":{"gitId":"JeremyYong128"},"content":"    private Role role;","lastModifiedDate":"2023-10-04"},{"lineNumber":22,"author":{"gitId":"JeremyYong128"},"content":"    private Company company;","lastModifiedDate":"2023-10-04"},{"lineNumber":23,"author":{"gitId":"peiran18"},"content":"    private Status status;","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"evanyan13"},"content":"    private Deadline deadline;","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"migfoo02"},"content":"    private JobType jobType;","lastModifiedDate":"2023-10-20"},{"lineNumber":26,"author":{"gitId":"czhiruo"},"content":"    private Industry industry;","lastModifiedDate":"2023-10-20"},{"lineNumber":27,"author":{"gitId":"peiran18"},"content":"    private List\u003cInterview\u003e interviews;","lastModifiedDate":"2023-10-31"},{"lineNumber":28,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":29,"author":{"gitId":"JeremyYong128"},"content":"    /**","lastModifiedDate":"2023-10-04"},{"lineNumber":30,"author":{"gitId":"JeremyYong128"},"content":"     * Creates a {@code JobBuilder} with the default details.","lastModifiedDate":"2023-10-04"},{"lineNumber":31,"author":{"gitId":"JeremyYong128"},"content":"     */","lastModifiedDate":"2023-10-04"},{"lineNumber":32,"author":{"gitId":"JeremyYong128"},"content":"    public JobBuilder() {","lastModifiedDate":"2023-10-04"},{"lineNumber":33,"author":{"gitId":"JeremyYong128"},"content":"        role \u003d new Role(DEFAULT_ROLE);","lastModifiedDate":"2023-10-04"},{"lineNumber":34,"author":{"gitId":"JeremyYong128"},"content":"        company \u003d new Company(DEFAULT_COMPANY);","lastModifiedDate":"2023-10-04"},{"lineNumber":35,"author":{"gitId":"evanyan13"},"content":"        deadline \u003d new Deadline(DEFAULT_DEADLINE);","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"peiran18"},"content":"        jobType \u003d new JobType(DEFAULT_JOB_TYPE);","lastModifiedDate":"2023-10-31"},{"lineNumber":37,"author":{"gitId":"peiran18"},"content":"        status \u003d new Status(DEFAULT_STATUS);","lastModifiedDate":"2023-10-21"},{"lineNumber":38,"author":{"gitId":"czhiruo"},"content":"        industry \u003d new Industry(DEFAULT_INDUSTRY);","lastModifiedDate":"2023-10-20"},{"lineNumber":39,"author":{"gitId":"peiran18"},"content":"        interviews \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-31"},{"lineNumber":40,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":41,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":42,"author":{"gitId":"JeremyYong128"},"content":"    /**","lastModifiedDate":"2023-10-04"},{"lineNumber":43,"author":{"gitId":"JeremyYong128"},"content":"     * Initializes the JobBuilder with the data of {@code jobToCopy}.","lastModifiedDate":"2023-10-04"},{"lineNumber":44,"author":{"gitId":"JeremyYong128"},"content":"     */","lastModifiedDate":"2023-10-04"},{"lineNumber":45,"author":{"gitId":"JeremyYong128"},"content":"    public JobBuilder(Job jobToCopy) {","lastModifiedDate":"2023-10-04"},{"lineNumber":46,"author":{"gitId":"JeremyYong128"},"content":"        role \u003d jobToCopy.getRole();","lastModifiedDate":"2023-10-04"},{"lineNumber":47,"author":{"gitId":"JeremyYong128"},"content":"        company \u003d jobToCopy.getCompany();","lastModifiedDate":"2023-10-04"},{"lineNumber":48,"author":{"gitId":"evanyan13"},"content":"        deadline \u003d jobToCopy.getDeadline();","lastModifiedDate":"2023-10-13"},{"lineNumber":49,"author":{"gitId":"migfoo02"},"content":"        jobType \u003d jobToCopy.getJobType();","lastModifiedDate":"2023-10-20"},{"lineNumber":50,"author":{"gitId":"peiran18"},"content":"        status \u003d jobToCopy.getStatus();","lastModifiedDate":"2023-10-21"},{"lineNumber":51,"author":{"gitId":"czhiruo"},"content":"        industry \u003d jobToCopy.getIndustry();","lastModifiedDate":"2023-10-20"},{"lineNumber":52,"author":{"gitId":"peiran18"},"content":"        interviews \u003d jobToCopy.getInterviews();","lastModifiedDate":"2023-10-31"},{"lineNumber":53,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":54,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":55,"author":{"gitId":"JeremyYong128"},"content":"    /**","lastModifiedDate":"2023-10-04"},{"lineNumber":56,"author":{"gitId":"JeremyYong128"},"content":"     * Sets the {@code role} of the {@code Job} that we are building.","lastModifiedDate":"2023-10-04"},{"lineNumber":57,"author":{"gitId":"JeremyYong128"},"content":"     */","lastModifiedDate":"2023-10-04"},{"lineNumber":58,"author":{"gitId":"JeremyYong128"},"content":"    public JobBuilder withRole(String role) {","lastModifiedDate":"2023-10-04"},{"lineNumber":59,"author":{"gitId":"JeremyYong128"},"content":"        this.role \u003d new Role(role);","lastModifiedDate":"2023-10-04"},{"lineNumber":60,"author":{"gitId":"JeremyYong128"},"content":"        return this;","lastModifiedDate":"2023-10-04"},{"lineNumber":61,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":62,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":63,"author":{"gitId":"JeremyYong128"},"content":"    /**","lastModifiedDate":"2023-10-04"},{"lineNumber":64,"author":{"gitId":"JeremyYong128"},"content":"     * Sets the {@code Company} of the {@code Job} that we are building.","lastModifiedDate":"2023-10-04"},{"lineNumber":65,"author":{"gitId":"JeremyYong128"},"content":"     */","lastModifiedDate":"2023-10-04"},{"lineNumber":66,"author":{"gitId":"JeremyYong128"},"content":"    public JobBuilder withCompany(String company) {","lastModifiedDate":"2023-10-04"},{"lineNumber":67,"author":{"gitId":"JeremyYong128"},"content":"        this.company \u003d new Company(company);","lastModifiedDate":"2023-10-04"},{"lineNumber":68,"author":{"gitId":"JeremyYong128"},"content":"        return this;","lastModifiedDate":"2023-10-04"},{"lineNumber":69,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":70,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":71,"author":{"gitId":"peiran18"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":72,"author":{"gitId":"JeremyYong128"},"content":"     * Sets the {@code Deadline} of the {@code Job} that we are building.","lastModifiedDate":"2023-10-26"},{"lineNumber":73,"author":{"gitId":"peiran18"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":74,"author":{"gitId":"peiran18"},"content":"    public JobBuilder withDeadline(String deadline) {","lastModifiedDate":"2023-10-21"},{"lineNumber":75,"author":{"gitId":"peiran18"},"content":"        this.deadline \u003d new Deadline(deadline);","lastModifiedDate":"2023-10-21"},{"lineNumber":76,"author":{"gitId":"peiran18"},"content":"        return this;","lastModifiedDate":"2023-10-15"},{"lineNumber":77,"author":{"gitId":"peiran18"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":78,"author":{"gitId":"peiran18"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":79,"author":{"gitId":"evanyan13"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":80,"author":{"gitId":"JeremyYong128"},"content":"     * Sets the {@code Status} of the {@code Job} that we are building.","lastModifiedDate":"2023-10-26"},{"lineNumber":81,"author":{"gitId":"evanyan13"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":82,"author":{"gitId":"peiran18"},"content":"    public JobBuilder withStatus(String status) {","lastModifiedDate":"2023-10-21"},{"lineNumber":83,"author":{"gitId":"peiran18"},"content":"        this.status \u003d new Status(status);","lastModifiedDate":"2023-10-21"},{"lineNumber":84,"author":{"gitId":"evanyan13"},"content":"        return this;","lastModifiedDate":"2023-10-13"},{"lineNumber":85,"author":{"gitId":"evanyan13"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":86,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":87,"author":{"gitId":"migfoo02"},"content":"    /**","lastModifiedDate":"2023-10-20"},{"lineNumber":88,"author":{"gitId":"migfoo02"},"content":"     * Sets the {@code JobType} of the {@code Job} that we are building.","lastModifiedDate":"2023-10-20"},{"lineNumber":89,"author":{"gitId":"migfoo02"},"content":"     */","lastModifiedDate":"2023-10-20"},{"lineNumber":90,"author":{"gitId":"migfoo02"},"content":"    public JobBuilder withJobType(String jobType) {","lastModifiedDate":"2023-10-20"},{"lineNumber":91,"author":{"gitId":"migfoo02"},"content":"        this.jobType \u003d new JobType(jobType);","lastModifiedDate":"2023-10-20"},{"lineNumber":92,"author":{"gitId":"migfoo02"},"content":"        return this;","lastModifiedDate":"2023-10-20"},{"lineNumber":93,"author":{"gitId":"migfoo02"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":94,"author":{"gitId":"migfoo02"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":95,"author":{"gitId":"czhiruo"},"content":"    /**","lastModifiedDate":"2023-10-20"},{"lineNumber":96,"author":{"gitId":"czhiruo"},"content":"     * Sets the {@code Industry} of the {@code Job} that we are building.","lastModifiedDate":"2023-10-20"},{"lineNumber":97,"author":{"gitId":"czhiruo"},"content":"     */","lastModifiedDate":"2023-10-20"},{"lineNumber":98,"author":{"gitId":"czhiruo"},"content":"    public JobBuilder withIndustry(String industry) {","lastModifiedDate":"2023-10-20"},{"lineNumber":99,"author":{"gitId":"czhiruo"},"content":"        this.industry \u003d new Industry(industry);","lastModifiedDate":"2023-10-20"},{"lineNumber":100,"author":{"gitId":"czhiruo"},"content":"        return this;","lastModifiedDate":"2023-10-20"},{"lineNumber":101,"author":{"gitId":"czhiruo"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":102,"author":{"gitId":"czhiruo"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":103,"author":{"gitId":"peiran18"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":104,"author":{"gitId":"peiran18"},"content":"     * Sets the {@code Interviews} of the {@code Job} that we are building.","lastModifiedDate":"2023-10-31"},{"lineNumber":105,"author":{"gitId":"peiran18"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":106,"author":{"gitId":"peiran18"},"content":"    public JobBuilder withInterview(Interview interview) {","lastModifiedDate":"2023-10-31"},{"lineNumber":107,"author":{"gitId":"peiran18"},"content":"        this.interviews.add(interview);","lastModifiedDate":"2023-10-31"},{"lineNumber":108,"author":{"gitId":"peiran18"},"content":"        return this;","lastModifiedDate":"2023-10-31"},{"lineNumber":109,"author":{"gitId":"peiran18"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":110,"author":{"gitId":"czhiruo"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":111,"author":{"gitId":"peiran18"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":112,"author":{"gitId":"peiran18"},"content":"     * Builds the {@code Job}.","lastModifiedDate":"2023-10-31"},{"lineNumber":113,"author":{"gitId":"peiran18"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":114,"author":{"gitId":"JeremyYong128"},"content":"    public Job build() {","lastModifiedDate":"2023-10-04"},{"lineNumber":115,"author":{"gitId":"peiran18"},"content":"        Job job \u003d new Job(role, company, deadline, status, jobType, industry);","lastModifiedDate":"2023-10-31"},{"lineNumber":116,"author":{"gitId":"peiran18"},"content":"        for (Interview interview : interviews) {","lastModifiedDate":"2023-10-31"},{"lineNumber":117,"author":{"gitId":"peiran18"},"content":"            job.addInterview(interview);","lastModifiedDate":"2023-10-31"},{"lineNumber":118,"author":{"gitId":"peiran18"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":119,"author":{"gitId":"peiran18"},"content":"        return job;","lastModifiedDate":"2023-10-31"},{"lineNumber":120,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":121,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":122,"author":{"gitId":"JeremyYong128"},"content":"}","lastModifiedDate":"2023-10-04"}],"authorContributionMap":{"czhiruo":13,"evanyan13":10,"peiran18":38,"JeremyYong128":51,"migfoo02":10}},{"path":"src/test/java/seedu/application/testutil/JobUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"evanyan13"},"content":"package seedu.application.testutil;","lastModifiedDate":"2023-10-10"},{"lineNumber":2,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":3,"author":{"gitId":"evanyan13"},"content":"import static seedu.application.logic.parser.CliSyntax.PREFIX_COMPANY;","lastModifiedDate":"2023-10-10"},{"lineNumber":4,"author":{"gitId":"evanyan13"},"content":"import static seedu.application.logic.parser.CliSyntax.PREFIX_DEADLINE;","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"czhiruo"},"content":"import static seedu.application.logic.parser.CliSyntax.PREFIX_INDUSTRY;","lastModifiedDate":"2023-10-21"},{"lineNumber":6,"author":{"gitId":"migfoo02"},"content":"import static seedu.application.logic.parser.CliSyntax.PREFIX_JOB_TYPE;","lastModifiedDate":"2023-10-23"},{"lineNumber":7,"author":{"gitId":"evanyan13"},"content":"import static seedu.application.logic.parser.CliSyntax.PREFIX_ROLE;","lastModifiedDate":"2023-10-10"},{"lineNumber":8,"author":{"gitId":"czhiruo"},"content":"import static seedu.application.logic.parser.CliSyntax.PREFIX_STATUS;","lastModifiedDate":"2023-10-21"},{"lineNumber":9,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":10,"author":{"gitId":"evanyan13"},"content":"import seedu.application.logic.commands.AddCommand;","lastModifiedDate":"2023-10-10"},{"lineNumber":11,"author":{"gitId":"evanyan13"},"content":"import seedu.application.logic.commands.EditCommand.EditJobDescriptor;","lastModifiedDate":"2023-10-10"},{"lineNumber":12,"author":{"gitId":"evanyan13"},"content":"import seedu.application.model.job.Job;","lastModifiedDate":"2023-10-10"},{"lineNumber":13,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":14,"author":{"gitId":"JeremyYong128"},"content":"/**","lastModifiedDate":"2023-10-04"},{"lineNumber":15,"author":{"gitId":"JeremyYong128"},"content":" * A utility class for Job.","lastModifiedDate":"2023-10-04"},{"lineNumber":16,"author":{"gitId":"JeremyYong128"},"content":" */","lastModifiedDate":"2023-10-04"},{"lineNumber":17,"author":{"gitId":"JeremyYong128"},"content":"public class JobUtil {","lastModifiedDate":"2023-10-04"},{"lineNumber":18,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":19,"author":{"gitId":"JeremyYong128"},"content":"    /**","lastModifiedDate":"2023-10-04"},{"lineNumber":20,"author":{"gitId":"JeremyYong128"},"content":"     * Returns an add command string for adding the {@code job}.","lastModifiedDate":"2023-10-04"},{"lineNumber":21,"author":{"gitId":"JeremyYong128"},"content":"     */","lastModifiedDate":"2023-10-04"},{"lineNumber":22,"author":{"gitId":"JeremyYong128"},"content":"    public static String getAddCommand(Job job) {","lastModifiedDate":"2023-10-04"},{"lineNumber":23,"author":{"gitId":"JeremyYong128"},"content":"        return AddCommand.COMMAND_WORD + \" \" + getJobDetails(job);","lastModifiedDate":"2023-10-04"},{"lineNumber":24,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":25,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":26,"author":{"gitId":"JeremyYong128"},"content":"    /**","lastModifiedDate":"2023-10-04"},{"lineNumber":27,"author":{"gitId":"JeremyYong128"},"content":"     * Returns the part of command string for the given {@code job}\u0027s details.","lastModifiedDate":"2023-10-04"},{"lineNumber":28,"author":{"gitId":"JeremyYong128"},"content":"     */","lastModifiedDate":"2023-10-04"},{"lineNumber":29,"author":{"gitId":"JeremyYong128"},"content":"    public static String getJobDetails(Job job) {","lastModifiedDate":"2023-10-04"},{"lineNumber":30,"author":{"gitId":"JeremyYong128"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-10-04"},{"lineNumber":31,"author":{"gitId":"JeremyYong128"},"content":"        sb.append(PREFIX_ROLE + job.getRole().description + \" \");","lastModifiedDate":"2023-10-04"},{"lineNumber":32,"author":{"gitId":"JeremyYong128"},"content":"        sb.append(PREFIX_COMPANY + job.getCompany().name + \" \");","lastModifiedDate":"2023-10-04"},{"lineNumber":33,"author":{"gitId":"JeremyYong128"},"content":"        return sb.toString();","lastModifiedDate":"2023-10-04"},{"lineNumber":34,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":35,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":36,"author":{"gitId":"JeremyYong128"},"content":"    /**","lastModifiedDate":"2023-10-04"},{"lineNumber":37,"author":{"gitId":"JeremyYong128"},"content":"     * Returns the part of command string for the given {@code EditJobDescriptor}\u0027s details.","lastModifiedDate":"2023-10-04"},{"lineNumber":38,"author":{"gitId":"JeremyYong128"},"content":"     */","lastModifiedDate":"2023-10-04"},{"lineNumber":39,"author":{"gitId":"JeremyYong128"},"content":"    public static String getEditJobDescriptorDetails(EditJobDescriptor descriptor) {","lastModifiedDate":"2023-10-04"},{"lineNumber":40,"author":{"gitId":"JeremyYong128"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-10-04"},{"lineNumber":41,"author":{"gitId":"JeremyYong128"},"content":"        descriptor.getRole().ifPresent(role -\u003e sb.append(PREFIX_ROLE).append(role.description).append(\" \"));","lastModifiedDate":"2023-10-04"},{"lineNumber":42,"author":{"gitId":"evanyan13"},"content":"        descriptor.getCompany()","lastModifiedDate":"2023-10-18"},{"lineNumber":43,"author":{"gitId":"evanyan13"},"content":"            .ifPresent(company -\u003e sb.append(PREFIX_COMPANY).append(company.name).append(\" \"));","lastModifiedDate":"2023-10-18"},{"lineNumber":44,"author":{"gitId":"evanyan13"},"content":"        descriptor.getDeadline()","lastModifiedDate":"2023-10-18"},{"lineNumber":45,"author":{"gitId":"evanyan13"},"content":"            .ifPresent(deadline -\u003e sb.append(PREFIX_DEADLINE).append(deadline.deadline).append(\" \"));","lastModifiedDate":"2023-10-18"},{"lineNumber":46,"author":{"gitId":"czhiruo"},"content":"        descriptor.getStatus()","lastModifiedDate":"2023-10-21"},{"lineNumber":47,"author":{"gitId":"czhiruo"},"content":"            .ifPresent(status -\u003e sb.append(PREFIX_STATUS).append(status.status).append(\" \"));","lastModifiedDate":"2023-10-21"},{"lineNumber":48,"author":{"gitId":"migfoo02"},"content":"        descriptor.getJobType()","lastModifiedDate":"2023-10-20"},{"lineNumber":49,"author":{"gitId":"migfoo02"},"content":"            .ifPresent(jobType -\u003e sb.append(PREFIX_JOB_TYPE).append(jobType.jobType).append(\" \"));","lastModifiedDate":"2023-10-23"},{"lineNumber":50,"author":{"gitId":"czhiruo"},"content":"        descriptor.getIndustry()","lastModifiedDate":"2023-10-21"},{"lineNumber":51,"author":{"gitId":"czhiruo"},"content":"                .ifPresent(industry -\u003e sb.append(PREFIX_INDUSTRY).append(industry.industry).append(\" \"));","lastModifiedDate":"2023-10-21"},{"lineNumber":52,"author":{"gitId":"JeremyYong128"},"content":"        return sb.toString();","lastModifiedDate":"2023-10-04"},{"lineNumber":53,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":54,"author":{"gitId":"JeremyYong128"},"content":"}","lastModifiedDate":"2023-10-04"}],"authorContributionMap":{"czhiruo":6,"evanyan13":11,"JeremyYong128":34,"migfoo02":3}},{"path":"src/test/java/seedu/application/testutil/SerializableTestClass.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"evanyan13"},"content":"package seedu.application.testutil;","lastModifiedDate":"2023-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * A class used to test serialization and deserialization","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class SerializableTestClass {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String JSON_STRING_REPRESENTATION \u003d String.format(\"{%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            + \"  \\\"name\\\" : \\\"This is a test class\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"  \\\"listOfLocalDateTimes\\\" : \"","lastModifiedDate":"2016-10-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"[ \\\"-999999999-01-01T00:00:00\\\", \\\"+999999999-12-31T23:59:59.999999999\\\", \"","lastModifiedDate":"2016-10-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"\\\"0001-01-01T01:01:00\\\" ],%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"  \\\"mapOfIntegerToString\\\" : {%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"    \\\"1\\\" : \\\"One\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"    \\\"2\\\" : \\\"Two\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"    \\\"3\\\" : \\\"Three\\\"%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"  }%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"}\");","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String NAME_TEST_VALUE \u003d \"This is a test class\";","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private String name;","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private List\u003cLocalDateTime\u003e listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private HashMap\u003cInteger, String\u003e mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static String getNameTestValue() {","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return NAME_TEST_VALUE;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static List\u003cLocalDateTime\u003e getListTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        List\u003cLocalDateTime\u003e listOfLocalDateTimes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.MIN);","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.MAX);","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.of(1, 1, 1, 1, 1));","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static HashMap\u003cInteger, String\u003e getHashMapTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        HashMap\u003cInteger, String\u003e mapOfIntegerToString \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(1, \"One\");","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(2, \"Two\");","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(3, \"Three\");","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void setTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        name \u003d getNameTestValue();","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes \u003d getListTestValues();","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        mapOfIntegerToString \u003d getHashMapTestValues();","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public String getName() {","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public List\u003cLocalDateTime\u003e getListOfLocalDateTimes() {","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public HashMap\u003cInteger, String\u003e getMapOfIntegerToString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"evanyan13":1,"-":71}},{"path":"src/test/java/seedu/application/testutil/TestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"evanyan13"},"content":"package seedu.application.testutil;","lastModifiedDate":"2023-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"evanyan13"},"content":"import seedu.application.commons.core.index.Index;","lastModifiedDate":"2023-10-10"},{"lineNumber":9,"author":{"gitId":"evanyan13"},"content":"import seedu.application.model.Model;","lastModifiedDate":"2023-10-10"},{"lineNumber":10,"author":{"gitId":"evanyan13"},"content":"import seedu.application.model.job.Job;","lastModifiedDate":"2023-10-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A utility class for test cases.","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class TestUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Folder used for temp files created during testing. Ignored by Git.","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Path SANDBOX_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"sandbox\");","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Appends {@code fileName} to the sandbox folder path and returns the resulting path.","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates the sandbox folder if it doesn\u0027t exist.","lastModifiedDate":"2016-09-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static Path getFilePathInSandboxFolder(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            Files.createDirectories(SANDBOX_FOLDER);","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2016-09-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return SANDBOX_FOLDER.resolve(fileName);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":36,"author":{"gitId":"JeremyYong128"},"content":"     * Returns the middle index of the job in the {@code model}\u0027s job list.","lastModifiedDate":"2023-10-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static Index getMidIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":39,"author":{"gitId":"JeremyYong128"},"content":"        return Index.fromOneBased(model.getFilteredJobList().size() / 2);","lastModifiedDate":"2023-10-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":43,"author":{"gitId":"JeremyYong128"},"content":"     * Returns the last index of the job in the {@code model}\u0027s job list.","lastModifiedDate":"2023-10-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static Index getLastIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":46,"author":{"gitId":"JeremyYong128"},"content":"        return Index.fromOneBased(model.getFilteredJobList().size());","lastModifiedDate":"2023-10-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Returns the person in the {@code model}\u0027s person list at {@code index}.","lastModifiedDate":"2017-07-30"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":52,"author":{"gitId":"JeremyYong128"},"content":"    public static Job getJob(Model model, Index index) {","lastModifiedDate":"2023-10-04"},{"lineNumber":53,"author":{"gitId":"JeremyYong128"},"content":"        return model.getFilteredJobList().get(index.getZeroBased());","lastModifiedDate":"2023-10-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"evanyan13":4,"-":45,"JeremyYong128":6}},{"path":"src/test/java/seedu/application/testutil/TypicalIndexes.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"evanyan13"},"content":"package seedu.application.testutil;","lastModifiedDate":"2023-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":3,"author":{"gitId":"evanyan13"},"content":"import seedu.application.commons.core.index.Index;","lastModifiedDate":"2023-10-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Index} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class TypicalIndexes {","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"JeremyYong128"},"content":"    public static final Index INDEX_FIRST_JOB \u003d Index.fromOneBased(1);","lastModifiedDate":"2023-10-04"},{"lineNumber":10,"author":{"gitId":"JeremyYong128"},"content":"    public static final Index INDEX_SECOND_JOB \u003d Index.fromOneBased(2);","lastModifiedDate":"2023-10-04"},{"lineNumber":11,"author":{"gitId":"JeremyYong128"},"content":"    public static final Index INDEX_THIRD_JOB \u003d Index.fromOneBased(3);","lastModifiedDate":"2023-10-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-08-05"}],"authorContributionMap":{"evanyan13":2,"-":7,"JeremyYong128":3}},{"path":"src/test/java/seedu/application/testutil/TypicalInterviews.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"peiran18"},"content":"package seedu.application.testutil;","lastModifiedDate":"2023-10-31"},{"lineNumber":2,"author":{"gitId":"peiran18"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":3,"author":{"gitId":"peiran18"},"content":"import static seedu.application.logic.commands.CommandTestUtil.*;","lastModifiedDate":"2023-10-31"},{"lineNumber":4,"author":{"gitId":"peiran18"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":5,"author":{"gitId":"peiran18"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-31"},{"lineNumber":6,"author":{"gitId":"peiran18"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-31"},{"lineNumber":7,"author":{"gitId":"peiran18"},"content":"import java.util.List;","lastModifiedDate":"2023-10-31"},{"lineNumber":8,"author":{"gitId":"peiran18"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":9,"author":{"gitId":"peiran18"},"content":"import seedu.application.model.job.interview.Interview;","lastModifiedDate":"2023-10-31"},{"lineNumber":10,"author":{"gitId":"peiran18"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":11,"author":{"gitId":"peiran18"},"content":"/**","lastModifiedDate":"2023-10-31"},{"lineNumber":12,"author":{"gitId":"peiran18"},"content":" * A utility class containing a list of {@code Job} objects to be used in tests.","lastModifiedDate":"2023-10-31"},{"lineNumber":13,"author":{"gitId":"peiran18"},"content":" */","lastModifiedDate":"2023-10-31"},{"lineNumber":14,"author":{"gitId":"peiran18"},"content":"public class TypicalInterviews {","lastModifiedDate":"2023-10-31"},{"lineNumber":15,"author":{"gitId":"peiran18"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":16,"author":{"gitId":"peiran18"},"content":"    public static final Interview TECHNICAL_INTERVIEW \u003d new InterviewBuilder().withType(\"Technical\")","lastModifiedDate":"2023-10-31"},{"lineNumber":17,"author":{"gitId":"peiran18"},"content":"            .withDateTime(\"Dec 31 2030 1200\").withAddress(\"XYZ Road\").build();","lastModifiedDate":"2023-10-31"},{"lineNumber":18,"author":{"gitId":"peiran18"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":19,"author":{"gitId":"peiran18"},"content":"    public static final Interview BEHAVIOURAL_INTERVIEW \u003d new InterviewBuilder().withType(\"Behavioural\")","lastModifiedDate":"2023-10-31"},{"lineNumber":20,"author":{"gitId":"peiran18"},"content":"            .withDateTime(\"Jan 31 2020 1000\").withAddress(\"123 Street\").build();","lastModifiedDate":"2023-10-31"},{"lineNumber":21,"author":{"gitId":"peiran18"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":22,"author":{"gitId":"peiran18"},"content":"    public static final Interview ONLINE_INTERVIEW \u003d new InterviewBuilder().withType(\"Online\")","lastModifiedDate":"2023-10-31"},{"lineNumber":23,"author":{"gitId":"peiran18"},"content":"            .withDateTime(\"Aug 18 2023 1600\").withAddress(\"Home\").build();","lastModifiedDate":"2023-10-31"},{"lineNumber":24,"author":{"gitId":"peiran18"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":25,"author":{"gitId":"peiran18"},"content":"    // Manually added - Person\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2023-10-31"},{"lineNumber":26,"author":{"gitId":"peiran18"},"content":"    public static final Interview CHEF_INTERVIEW \u003d new InterviewBuilder().withType(VALID_INTERVIEW_TYPE_CHEF)","lastModifiedDate":"2023-10-31"},{"lineNumber":27,"author":{"gitId":"peiran18"},"content":"            .withDateTime(VALID_INTERVIEW_DATETIME_CHEF).withAddress(VALID_INTERVIEW_ADDRESS_CHEF).build();","lastModifiedDate":"2023-10-31"},{"lineNumber":28,"author":{"gitId":"peiran18"},"content":"    public static final Interview CLEANER_INTERVIEW \u003d new InterviewBuilder().withType(VALID_INTERVIEW_TYPE_CLEANER)","lastModifiedDate":"2023-10-31"},{"lineNumber":29,"author":{"gitId":"peiran18"},"content":"            .withDateTime(VALID_INTERVIEW_DATETIME_CLEANER).withAddress(VALID_INTERVIEW_ADDRESS_CLEANER).build();","lastModifiedDate":"2023-10-31"},{"lineNumber":30,"author":{"gitId":"peiran18"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":31,"author":{"gitId":"peiran18"},"content":"    private TypicalInterviews() {","lastModifiedDate":"2023-10-31"},{"lineNumber":32,"author":{"gitId":"peiran18"},"content":"    } // prevents instantiation","lastModifiedDate":"2023-10-31"},{"lineNumber":33,"author":{"gitId":"peiran18"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":34,"author":{"gitId":"peiran18"},"content":"    public static List\u003cInterview\u003e getTypicalInterviews() {","lastModifiedDate":"2023-10-31"},{"lineNumber":35,"author":{"gitId":"peiran18"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(TECHNICAL_INTERVIEW, BEHAVIOURAL_INTERVIEW, ONLINE_INTERVIEW));","lastModifiedDate":"2023-10-31"},{"lineNumber":36,"author":{"gitId":"peiran18"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":37,"author":{"gitId":"peiran18"},"content":"}","lastModifiedDate":"2023-10-31"}],"authorContributionMap":{"peiran18":37}},{"path":"src/test/java/seedu/application/testutil/TypicalJobs.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"evanyan13"},"content":"package seedu.application.testutil;","lastModifiedDate":"2023-10-10"},{"lineNumber":2,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":3,"author":{"gitId":"migfoo02"},"content":"import static seedu.application.logic.commands.CommandTestUtil.VALID_COMPANY_CHEF;","lastModifiedDate":"2023-10-23"},{"lineNumber":4,"author":{"gitId":"migfoo02"},"content":"import static seedu.application.logic.commands.CommandTestUtil.VALID_COMPANY_CLEANER;","lastModifiedDate":"2023-10-23"},{"lineNumber":5,"author":{"gitId":"migfoo02"},"content":"import static seedu.application.logic.commands.CommandTestUtil.VALID_DEADLINE_CHEF;","lastModifiedDate":"2023-10-23"},{"lineNumber":6,"author":{"gitId":"migfoo02"},"content":"import static seedu.application.logic.commands.CommandTestUtil.VALID_DEADLINE_CLEANER;","lastModifiedDate":"2023-10-23"},{"lineNumber":7,"author":{"gitId":"migfoo02"},"content":"import static seedu.application.logic.commands.CommandTestUtil.VALID_INDUSTRY_CHEF;","lastModifiedDate":"2023-10-23"},{"lineNumber":8,"author":{"gitId":"migfoo02"},"content":"import static seedu.application.logic.commands.CommandTestUtil.VALID_INDUSTRY_CLEANER;","lastModifiedDate":"2023-10-23"},{"lineNumber":9,"author":{"gitId":"migfoo02"},"content":"import static seedu.application.logic.commands.CommandTestUtil.VALID_JOB_TYPE_CHEF;","lastModifiedDate":"2023-10-23"},{"lineNumber":10,"author":{"gitId":"migfoo02"},"content":"import static seedu.application.logic.commands.CommandTestUtil.VALID_JOB_TYPE_CLEANER;","lastModifiedDate":"2023-10-23"},{"lineNumber":11,"author":{"gitId":"migfoo02"},"content":"import static seedu.application.logic.commands.CommandTestUtil.VALID_ROLE_CHEF;","lastModifiedDate":"2023-10-23"},{"lineNumber":12,"author":{"gitId":"migfoo02"},"content":"import static seedu.application.logic.commands.CommandTestUtil.VALID_ROLE_CLEANER;","lastModifiedDate":"2023-10-23"},{"lineNumber":13,"author":{"gitId":"migfoo02"},"content":"import static seedu.application.logic.commands.CommandTestUtil.VALID_STATUS_CHEF;","lastModifiedDate":"2023-10-23"},{"lineNumber":14,"author":{"gitId":"migfoo02"},"content":"import static seedu.application.logic.commands.CommandTestUtil.VALID_STATUS_CLEANER;","lastModifiedDate":"2023-10-23"},{"lineNumber":15,"author":{"gitId":"peiran18"},"content":"import static seedu.application.testutil.TypicalInterviews.*;","lastModifiedDate":"2023-10-31"},{"lineNumber":16,"author":{"gitId":"peiran18"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":17,"author":{"gitId":"JeremyYong128"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-04"},{"lineNumber":18,"author":{"gitId":"JeremyYong128"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-04"},{"lineNumber":19,"author":{"gitId":"JeremyYong128"},"content":"import java.util.List;","lastModifiedDate":"2023-10-04"},{"lineNumber":20,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":21,"author":{"gitId":"evanyan13"},"content":"import seedu.application.model.ApplicationBook;","lastModifiedDate":"2023-10-10"},{"lineNumber":22,"author":{"gitId":"migfoo02"},"content":"import seedu.application.model.job.*;","lastModifiedDate":"2023-10-22"},{"lineNumber":23,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":24,"author":{"gitId":"JeremyYong128"},"content":"/**","lastModifiedDate":"2023-10-04"},{"lineNumber":25,"author":{"gitId":"JeremyYong128"},"content":" * A utility class containing a list of {@code Job} objects to be used in tests.","lastModifiedDate":"2023-10-04"},{"lineNumber":26,"author":{"gitId":"JeremyYong128"},"content":" */","lastModifiedDate":"2023-10-04"},{"lineNumber":27,"author":{"gitId":"JeremyYong128"},"content":"public class TypicalJobs {","lastModifiedDate":"2023-10-04"},{"lineNumber":28,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":29,"author":{"gitId":"JeremyYong128"},"content":"    public static final Job SOFTWARE_ENGINEER \u003d new JobBuilder().withRole(\"Software Engineer\")","lastModifiedDate":"2023-10-04"},{"lineNumber":30,"author":{"gitId":"peiran18"},"content":"        .withCompany(\"Google\").withStatus(Status.IN_PROGRESS)","lastModifiedDate":"2023-10-15"},{"lineNumber":31,"author":{"gitId":"migfoo02"},"content":"        .withDeadline(Deadline.TO_ADD_DEADLINE).withJobType(JobType.TO_ADD_JOB_TYPE)","lastModifiedDate":"2023-10-22"},{"lineNumber":32,"author":{"gitId":"peiran18"},"content":"        .withIndustry(Industry.TO_ADD_INDUSTRY).withInterview(new InterviewBuilder().build()).build();","lastModifiedDate":"2023-10-31"},{"lineNumber":33,"author":{"gitId":"JeremyYong128"},"content":"    public static final Job TEACHER \u003d new JobBuilder().withRole(\"Teacher\")","lastModifiedDate":"2023-10-04"},{"lineNumber":34,"author":{"gitId":"peiran18"},"content":"        .withCompany(\"NUS\").withStatus(Status.IN_PROGRESS)","lastModifiedDate":"2023-10-15"},{"lineNumber":35,"author":{"gitId":"migfoo02"},"content":"        .withDeadline(Deadline.TO_ADD_DEADLINE).withJobType(JobType.TO_ADD_JOB_TYPE)","lastModifiedDate":"2023-10-22"},{"lineNumber":36,"author":{"gitId":"peiran18"},"content":"        .withIndustry(Industry.TO_ADD_INDUSTRY).withInterview(new InterviewBuilder().build()).build();","lastModifiedDate":"2023-10-31"},{"lineNumber":37,"author":{"gitId":"JeremyYong128"},"content":"    public static final Job WAITER \u003d new JobBuilder().withRole(\"Waiter\")","lastModifiedDate":"2023-10-04"},{"lineNumber":38,"author":{"gitId":"peiran18"},"content":"        .withCompany(\"McDonalds\").withStatus(Status.IN_PROGRESS)","lastModifiedDate":"2023-10-15"},{"lineNumber":39,"author":{"gitId":"migfoo02"},"content":"        .withDeadline(Deadline.TO_ADD_DEADLINE).withJobType(JobType.TO_ADD_JOB_TYPE)","lastModifiedDate":"2023-10-22"},{"lineNumber":40,"author":{"gitId":"peiran18"},"content":"        .withIndustry(Industry.TO_ADD_INDUSTRY).withInterview(new InterviewBuilder().build()).build();","lastModifiedDate":"2023-10-31"},{"lineNumber":41,"author":{"gitId":"JeremyYong128"},"content":"    public static final Job PILOT \u003d new JobBuilder().withRole(\"Pilot\")","lastModifiedDate":"2023-10-04"},{"lineNumber":42,"author":{"gitId":"peiran18"},"content":"        .withCompany(\"Singapore Airlines\").withStatus(Status.IN_PROGRESS)","lastModifiedDate":"2023-10-15"},{"lineNumber":43,"author":{"gitId":"migfoo02"},"content":"        .withDeadline(Deadline.TO_ADD_DEADLINE).withJobType(JobType.TO_ADD_JOB_TYPE)","lastModifiedDate":"2023-10-22"},{"lineNumber":44,"author":{"gitId":"peiran18"},"content":"        .withIndustry(Industry.TO_ADD_INDUSTRY).withInterview(new InterviewBuilder().build()).build();","lastModifiedDate":"2023-10-31"},{"lineNumber":45,"author":{"gitId":"JeremyYong128"},"content":"    public static final Job POLICE_OFFICER \u003d new JobBuilder().withRole(\"Police Officer\")","lastModifiedDate":"2023-10-04"},{"lineNumber":46,"author":{"gitId":"peiran18"},"content":"        .withCompany(\"SPF\").withStatus(Status.IN_PROGRESS)","lastModifiedDate":"2023-10-15"},{"lineNumber":47,"author":{"gitId":"migfoo02"},"content":"        .withDeadline(Deadline.TO_ADD_DEADLINE).withJobType(JobType.TO_ADD_JOB_TYPE)","lastModifiedDate":"2023-10-22"},{"lineNumber":48,"author":{"gitId":"peiran18"},"content":"        .withIndustry(Industry.TO_ADD_INDUSTRY).withInterview(new InterviewBuilder().build()).build();","lastModifiedDate":"2023-10-31"},{"lineNumber":49,"author":{"gitId":"JeremyYong128"},"content":"    public static final Job FRUIT_SELLER \u003d new JobBuilder().withRole(\"Fruit Seller\")","lastModifiedDate":"2023-10-04"},{"lineNumber":50,"author":{"gitId":"peiran18"},"content":"        .withCompany(\"ABC Fruits\").withStatus(Status.IN_PROGRESS)","lastModifiedDate":"2023-10-15"},{"lineNumber":51,"author":{"gitId":"migfoo02"},"content":"        .withDeadline(Deadline.TO_ADD_DEADLINE).withJobType(JobType.TO_ADD_JOB_TYPE)","lastModifiedDate":"2023-10-22"},{"lineNumber":52,"author":{"gitId":"peiran18"},"content":"        .withIndustry(Industry.TO_ADD_INDUSTRY).withInterview(new InterviewBuilder().build()).build();","lastModifiedDate":"2023-10-31"},{"lineNumber":53,"author":{"gitId":"JeremyYong128"},"content":"    public static final Job GRASS_CUTTER \u003d new JobBuilder().withRole(\"Grass Cutter\")","lastModifiedDate":"2023-10-04"},{"lineNumber":54,"author":{"gitId":"peiran18"},"content":"        .withCompany(\"XYZ Gardening\").withStatus(Status.IN_PROGRESS)","lastModifiedDate":"2023-10-15"},{"lineNumber":55,"author":{"gitId":"migfoo02"},"content":"        .withDeadline(Deadline.TO_ADD_DEADLINE).withJobType(JobType.TO_ADD_JOB_TYPE)","lastModifiedDate":"2023-10-22"},{"lineNumber":56,"author":{"gitId":"peiran18"},"content":"        .withIndustry(Industry.TO_ADD_INDUSTRY).withInterview(new InterviewBuilder().build()).build();","lastModifiedDate":"2023-10-31"},{"lineNumber":57,"author":{"gitId":"JeremyYong128"},"content":"    // Manually added","lastModifiedDate":"2023-10-04"},{"lineNumber":58,"author":{"gitId":"JeremyYong128"},"content":"    public static final Job ARTIST \u003d new JobBuilder().withRole(\"Artist\")","lastModifiedDate":"2023-10-04"},{"lineNumber":59,"author":{"gitId":"JeremyYong128"},"content":"        .withCompany(\"Van Gogh Paintings\").build();","lastModifiedDate":"2023-10-04"},{"lineNumber":60,"author":{"gitId":"JeremyYong128"},"content":"    public static final Job SPRINTER \u003d new JobBuilder().withRole(\"Sprinter\")","lastModifiedDate":"2023-10-04"},{"lineNumber":61,"author":{"gitId":"JeremyYong128"},"content":"        .withCompany(\"Nike\").build();","lastModifiedDate":"2023-10-04"},{"lineNumber":62,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":63,"author":{"gitId":"JeremyYong128"},"content":"    // Manually added - Person\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2023-10-04"},{"lineNumber":64,"author":{"gitId":"JeremyYong128"},"content":"    public static final Job CHEF \u003d new JobBuilder().withRole(VALID_ROLE_CHEF)","lastModifiedDate":"2023-10-04"},{"lineNumber":65,"author":{"gitId":"peiran18"},"content":"        .withCompany(VALID_COMPANY_CHEF).withStatus(VALID_STATUS_CHEF)","lastModifiedDate":"2023-10-19"},{"lineNumber":66,"author":{"gitId":"migfoo02"},"content":"        .withDeadline(VALID_DEADLINE_CHEF).withJobType(VALID_JOB_TYPE_CHEF)","lastModifiedDate":"2023-10-23"},{"lineNumber":67,"author":{"gitId":"peiran18"},"content":"        .withIndustry(VALID_INDUSTRY_CHEF).withInterview(new InterviewBuilder().build()).build();","lastModifiedDate":"2023-10-31"},{"lineNumber":68,"author":{"gitId":"JeremyYong128"},"content":"    public static final Job CLEANER \u003d new JobBuilder().withRole(VALID_ROLE_CLEANER)","lastModifiedDate":"2023-10-04"},{"lineNumber":69,"author":{"gitId":"peiran18"},"content":"        .withCompany(VALID_COMPANY_CLEANER).withStatus(VALID_STATUS_CLEANER)","lastModifiedDate":"2023-10-19"},{"lineNumber":70,"author":{"gitId":"migfoo02"},"content":"        .withDeadline(VALID_DEADLINE_CLEANER).withJobType(VALID_JOB_TYPE_CLEANER)","lastModifiedDate":"2023-10-23"},{"lineNumber":71,"author":{"gitId":"peiran18"},"content":"        .withIndustry(VALID_INDUSTRY_CLEANER).withInterview(new InterviewBuilder().build()).build();","lastModifiedDate":"2023-10-31"},{"lineNumber":72,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":73,"author":{"gitId":"JeremyYong128"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2023-10-04"},{"lineNumber":74,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":75,"author":{"gitId":"evanyan13"},"content":"    private TypicalJobs() {","lastModifiedDate":"2023-10-13"},{"lineNumber":76,"author":{"gitId":"evanyan13"},"content":"    } // prevents instantiation","lastModifiedDate":"2023-10-13"},{"lineNumber":77,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":78,"author":{"gitId":"JeremyYong128"},"content":"    /**","lastModifiedDate":"2023-10-04"},{"lineNumber":79,"author":{"gitId":"evanyan13"},"content":"     * Returns an {@code ApplicationBook} with all the typical jobs.","lastModifiedDate":"2023-10-10"},{"lineNumber":80,"author":{"gitId":"JeremyYong128"},"content":"     */","lastModifiedDate":"2023-10-04"},{"lineNumber":81,"author":{"gitId":"evanyan13"},"content":"    public static ApplicationBook getTypicalApplicationBook() {","lastModifiedDate":"2023-10-10"},{"lineNumber":82,"author":{"gitId":"evanyan13"},"content":"        ApplicationBook ab \u003d new ApplicationBook();","lastModifiedDate":"2023-10-10"},{"lineNumber":83,"author":{"gitId":"JeremyYong128"},"content":"        for (Job job : getTypicalJobs()) {","lastModifiedDate":"2023-10-04"},{"lineNumber":84,"author":{"gitId":"JeremyYong128"},"content":"            ab.addJob(job);","lastModifiedDate":"2023-10-04"},{"lineNumber":85,"author":{"gitId":"JeremyYong128"},"content":"        }","lastModifiedDate":"2023-10-04"},{"lineNumber":86,"author":{"gitId":"JeremyYong128"},"content":"        return ab;","lastModifiedDate":"2023-10-04"},{"lineNumber":87,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":88,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":89,"author":{"gitId":"JeremyYong128"},"content":"    public static List\u003cJob\u003e getTypicalJobs() {","lastModifiedDate":"2023-10-04"},{"lineNumber":90,"author":{"gitId":"JeremyYong128"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(SOFTWARE_ENGINEER, TEACHER, WAITER, PILOT,","lastModifiedDate":"2023-10-04"},{"lineNumber":91,"author":{"gitId":"evanyan13"},"content":"            POLICE_OFFICER, FRUIT_SELLER, GRASS_CUTTER));","lastModifiedDate":"2023-10-06"},{"lineNumber":92,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":93,"author":{"gitId":"JeremyYong128"},"content":"}","lastModifiedDate":"2023-10-04"}],"authorContributionMap":{"evanyan13":8,"peiran18":20,"JeremyYong128":43,"migfoo02":22}},{"path":"src/test/java/seedu/application/testutil/TypicalJobsStore.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"peiran18"},"content":"//package seedu.application.testutil;","lastModifiedDate":"2023-10-31"},{"lineNumber":2,"author":{"gitId":"peiran18"},"content":"//","lastModifiedDate":"2023-10-31"},{"lineNumber":3,"author":{"gitId":"peiran18"},"content":"//import static seedu.application.logic.commands.CommandTestUtil.VALID_COMPANY_CHEF;","lastModifiedDate":"2023-10-31"},{"lineNumber":4,"author":{"gitId":"peiran18"},"content":"//import static seedu.application.logic.commands.CommandTestUtil.VALID_COMPANY_CLEANER;","lastModifiedDate":"2023-10-31"},{"lineNumber":5,"author":{"gitId":"peiran18"},"content":"//import static seedu.application.logic.commands.CommandTestUtil.VALID_DEADLINE_CHEF;","lastModifiedDate":"2023-10-31"},{"lineNumber":6,"author":{"gitId":"peiran18"},"content":"//import static seedu.application.logic.commands.CommandTestUtil.VALID_DEADLINE_CLEANER;","lastModifiedDate":"2023-10-31"},{"lineNumber":7,"author":{"gitId":"peiran18"},"content":"//import static seedu.application.logic.commands.CommandTestUtil.VALID_INDUSTRY_CHEF;","lastModifiedDate":"2023-10-31"},{"lineNumber":8,"author":{"gitId":"peiran18"},"content":"//import static seedu.application.logic.commands.CommandTestUtil.VALID_INDUSTRY_CLEANER;","lastModifiedDate":"2023-10-31"},{"lineNumber":9,"author":{"gitId":"peiran18"},"content":"//import static seedu.application.logic.commands.CommandTestUtil.VALID_JOB_TYPE_CHEF;","lastModifiedDate":"2023-10-31"},{"lineNumber":10,"author":{"gitId":"peiran18"},"content":"//import static seedu.application.logic.commands.CommandTestUtil.VALID_JOB_TYPE_CLEANER;","lastModifiedDate":"2023-10-31"},{"lineNumber":11,"author":{"gitId":"peiran18"},"content":"//import static seedu.application.logic.commands.CommandTestUtil.VALID_ROLE_CHEF;","lastModifiedDate":"2023-10-31"},{"lineNumber":12,"author":{"gitId":"peiran18"},"content":"//import static seedu.application.logic.commands.CommandTestUtil.VALID_ROLE_CLEANER;","lastModifiedDate":"2023-10-31"},{"lineNumber":13,"author":{"gitId":"peiran18"},"content":"//import static seedu.application.logic.commands.CommandTestUtil.VALID_STATUS_CHEF;","lastModifiedDate":"2023-10-31"},{"lineNumber":14,"author":{"gitId":"peiran18"},"content":"//import static seedu.application.logic.commands.CommandTestUtil.VALID_STATUS_CLEANER;","lastModifiedDate":"2023-10-31"},{"lineNumber":15,"author":{"gitId":"peiran18"},"content":"//import static seedu.application.testutil.TypicalInterviews.*;","lastModifiedDate":"2023-10-31"},{"lineNumber":16,"author":{"gitId":"peiran18"},"content":"//","lastModifiedDate":"2023-10-31"},{"lineNumber":17,"author":{"gitId":"peiran18"},"content":"//import java.util.ArrayList;","lastModifiedDate":"2023-10-31"},{"lineNumber":18,"author":{"gitId":"peiran18"},"content":"//import java.util.Arrays;","lastModifiedDate":"2023-10-31"},{"lineNumber":19,"author":{"gitId":"peiran18"},"content":"//import java.util.List;","lastModifiedDate":"2023-10-31"},{"lineNumber":20,"author":{"gitId":"peiran18"},"content":"//","lastModifiedDate":"2023-10-31"},{"lineNumber":21,"author":{"gitId":"peiran18"},"content":"//import seedu.application.model.ApplicationBook;","lastModifiedDate":"2023-10-31"},{"lineNumber":22,"author":{"gitId":"peiran18"},"content":"//import seedu.application.model.job.*;","lastModifiedDate":"2023-10-31"},{"lineNumber":23,"author":{"gitId":"peiran18"},"content":"//","lastModifiedDate":"2023-10-31"},{"lineNumber":24,"author":{"gitId":"peiran18"},"content":"///**","lastModifiedDate":"2023-10-31"},{"lineNumber":25,"author":{"gitId":"peiran18"},"content":"// * A utility class containing a list of {@code Job} objects to be used in tests.","lastModifiedDate":"2023-10-31"},{"lineNumber":26,"author":{"gitId":"peiran18"},"content":"// */","lastModifiedDate":"2023-10-31"},{"lineNumber":27,"author":{"gitId":"peiran18"},"content":"//public class TypicalJobs {","lastModifiedDate":"2023-10-31"},{"lineNumber":28,"author":{"gitId":"peiran18"},"content":"//","lastModifiedDate":"2023-10-31"},{"lineNumber":29,"author":{"gitId":"peiran18"},"content":"//    public static final Job SOFTWARE_ENGINEER \u003d new JobBuilder().withRole(\"Software Engineer\")","lastModifiedDate":"2023-10-31"},{"lineNumber":30,"author":{"gitId":"peiran18"},"content":"//        .withCompany(\"Google\").withStatus(Status.IN_PROGRESS)","lastModifiedDate":"2023-10-31"},{"lineNumber":31,"author":{"gitId":"peiran18"},"content":"//        .withDeadline(Deadline.TO_ADD_DEADLINE).withJobType(JobType.TO_ADD_JOB_TYPE)","lastModifiedDate":"2023-10-31"},{"lineNumber":32,"author":{"gitId":"peiran18"},"content":"//        .withIndustry(Industry.TO_ADD_INDUSTRY).withInterview(new InterviewBuilder(TECHNICAL_INTERVIEW).build())","lastModifiedDate":"2023-10-31"},{"lineNumber":33,"author":{"gitId":"peiran18"},"content":"//        .withInterview(new InterviewBuilder(ONLINE_INTERVIEW).build()).build();","lastModifiedDate":"2023-10-31"},{"lineNumber":34,"author":{"gitId":"peiran18"},"content":"//    public static final Job TEACHER \u003d new JobBuilder().withRole(\"Teacher\")","lastModifiedDate":"2023-10-31"},{"lineNumber":35,"author":{"gitId":"peiran18"},"content":"//        .withCompany(\"NUS\").withStatus(Status.IN_PROGRESS)","lastModifiedDate":"2023-10-31"},{"lineNumber":36,"author":{"gitId":"peiran18"},"content":"//        .withDeadline(Deadline.TO_ADD_DEADLINE).withJobType(JobType.TO_ADD_JOB_TYPE)","lastModifiedDate":"2023-10-31"},{"lineNumber":37,"author":{"gitId":"peiran18"},"content":"//        .withIndustry(Industry.TO_ADD_INDUSTRY).withInterview(BEHAVIOURAL_INTERVIEW)","lastModifiedDate":"2023-10-31"},{"lineNumber":38,"author":{"gitId":"peiran18"},"content":"//        .withInterview(TECHNICAL_INTERVIEW).build();","lastModifiedDate":"2023-10-31"},{"lineNumber":39,"author":{"gitId":"peiran18"},"content":"//    public static final Job WAITER \u003d new JobBuilder().withRole(\"Waiter\")","lastModifiedDate":"2023-10-31"},{"lineNumber":40,"author":{"gitId":"peiran18"},"content":"//        .withCompany(\"McDonalds\").withStatus(Status.IN_PROGRESS)","lastModifiedDate":"2023-10-31"},{"lineNumber":41,"author":{"gitId":"peiran18"},"content":"//        .withDeadline(Deadline.TO_ADD_DEADLINE).withJobType(JobType.TO_ADD_JOB_TYPE)","lastModifiedDate":"2023-10-31"},{"lineNumber":42,"author":{"gitId":"peiran18"},"content":"//        .withIndustry(Industry.TO_ADD_INDUSTRY).withInterview(ONLINE_INTERVIEW)","lastModifiedDate":"2023-10-31"},{"lineNumber":43,"author":{"gitId":"peiran18"},"content":"//        .withInterview(BEHAVIOURAL_INTERVIEW).build();","lastModifiedDate":"2023-10-31"},{"lineNumber":44,"author":{"gitId":"peiran18"},"content":"//    public static final Job PILOT \u003d new JobBuilder().withRole(\"Pilot\")","lastModifiedDate":"2023-10-31"},{"lineNumber":45,"author":{"gitId":"peiran18"},"content":"//        .withCompany(\"Singapore Airlines\").withStatus(Status.IN_PROGRESS)","lastModifiedDate":"2023-10-31"},{"lineNumber":46,"author":{"gitId":"peiran18"},"content":"//        .withDeadline(Deadline.TO_ADD_DEADLINE).withJobType(JobType.TO_ADD_JOB_TYPE)","lastModifiedDate":"2023-10-31"},{"lineNumber":47,"author":{"gitId":"peiran18"},"content":"//        .withIndustry(Industry.TO_ADD_INDUSTRY).withInterview(TECHNICAL_INTERVIEW).build();","lastModifiedDate":"2023-10-31"},{"lineNumber":48,"author":{"gitId":"peiran18"},"content":"//    public static final Job POLICE_OFFICER \u003d new JobBuilder().withRole(\"Police Officer\")","lastModifiedDate":"2023-10-31"},{"lineNumber":49,"author":{"gitId":"peiran18"},"content":"//        .withCompany(\"SPF\").withStatus(Status.IN_PROGRESS)","lastModifiedDate":"2023-10-31"},{"lineNumber":50,"author":{"gitId":"peiran18"},"content":"//        .withDeadline(Deadline.TO_ADD_DEADLINE).withJobType(JobType.TO_ADD_JOB_TYPE)","lastModifiedDate":"2023-10-31"},{"lineNumber":51,"author":{"gitId":"peiran18"},"content":"//        .withIndustry(Industry.TO_ADD_INDUSTRY).withInterview(BEHAVIOURAL_INTERVIEW).build();","lastModifiedDate":"2023-10-31"},{"lineNumber":52,"author":{"gitId":"peiran18"},"content":"//    public static final Job FRUIT_SELLER \u003d new JobBuilder().withRole(\"Fruit Seller\")","lastModifiedDate":"2023-10-31"},{"lineNumber":53,"author":{"gitId":"peiran18"},"content":"//        .withCompany(\"ABC Fruits\").withStatus(Status.IN_PROGRESS)","lastModifiedDate":"2023-10-31"},{"lineNumber":54,"author":{"gitId":"peiran18"},"content":"//        .withDeadline(Deadline.TO_ADD_DEADLINE).withJobType(JobType.TO_ADD_JOB_TYPE)","lastModifiedDate":"2023-10-31"},{"lineNumber":55,"author":{"gitId":"peiran18"},"content":"//        .withIndustry(Industry.TO_ADD_INDUSTRY).build();","lastModifiedDate":"2023-10-31"},{"lineNumber":56,"author":{"gitId":"peiran18"},"content":"//    public static final Job GRASS_CUTTER \u003d new JobBuilder().withRole(\"Grass Cutter\")","lastModifiedDate":"2023-10-31"},{"lineNumber":57,"author":{"gitId":"peiran18"},"content":"//        .withCompany(\"XYZ Gardening\").withStatus(Status.IN_PROGRESS)","lastModifiedDate":"2023-10-31"},{"lineNumber":58,"author":{"gitId":"peiran18"},"content":"//        .withDeadline(Deadline.TO_ADD_DEADLINE).withJobType(JobType.TO_ADD_JOB_TYPE)","lastModifiedDate":"2023-10-31"},{"lineNumber":59,"author":{"gitId":"peiran18"},"content":"//        .withIndustry(Industry.TO_ADD_INDUSTRY).withInterview(ONLINE_INTERVIEW).build();","lastModifiedDate":"2023-10-31"},{"lineNumber":60,"author":{"gitId":"peiran18"},"content":"//    // Manually added","lastModifiedDate":"2023-10-31"},{"lineNumber":61,"author":{"gitId":"peiran18"},"content":"//    public static final Job ARTIST \u003d new JobBuilder().withRole(\"Artist\")","lastModifiedDate":"2023-10-31"},{"lineNumber":62,"author":{"gitId":"peiran18"},"content":"//        .withCompany(\"Van Gogh Paintings\").build();","lastModifiedDate":"2023-10-31"},{"lineNumber":63,"author":{"gitId":"peiran18"},"content":"//    public static final Job SPRINTER \u003d new JobBuilder().withRole(\"Sprinter\")","lastModifiedDate":"2023-10-31"},{"lineNumber":64,"author":{"gitId":"peiran18"},"content":"//        .withCompany(\"Nike\").build();","lastModifiedDate":"2023-10-31"},{"lineNumber":65,"author":{"gitId":"peiran18"},"content":"//","lastModifiedDate":"2023-10-31"},{"lineNumber":66,"author":{"gitId":"peiran18"},"content":"//    // Manually added - Person\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2023-10-31"},{"lineNumber":67,"author":{"gitId":"peiran18"},"content":"//    public static final Job CHEF \u003d new JobBuilder().withRole(VALID_ROLE_CHEF)","lastModifiedDate":"2023-10-31"},{"lineNumber":68,"author":{"gitId":"peiran18"},"content":"//        .withCompany(VALID_COMPANY_CHEF).withStatus(VALID_STATUS_CHEF)","lastModifiedDate":"2023-10-31"},{"lineNumber":69,"author":{"gitId":"peiran18"},"content":"//        .withDeadline(VALID_DEADLINE_CHEF).withJobType(VALID_JOB_TYPE_CHEF)","lastModifiedDate":"2023-10-31"},{"lineNumber":70,"author":{"gitId":"peiran18"},"content":"//        .withIndustry(VALID_INDUSTRY_CHEF).build();","lastModifiedDate":"2023-10-31"},{"lineNumber":71,"author":{"gitId":"peiran18"},"content":"//    public static final Job CLEANER \u003d new JobBuilder().withRole(VALID_ROLE_CLEANER)","lastModifiedDate":"2023-10-31"},{"lineNumber":72,"author":{"gitId":"peiran18"},"content":"//        .withCompany(VALID_COMPANY_CLEANER).withStatus(VALID_STATUS_CLEANER)","lastModifiedDate":"2023-10-31"},{"lineNumber":73,"author":{"gitId":"peiran18"},"content":"//        .withDeadline(VALID_DEADLINE_CLEANER).withJobType(VALID_JOB_TYPE_CLEANER)","lastModifiedDate":"2023-10-31"},{"lineNumber":74,"author":{"gitId":"peiran18"},"content":"//        .withIndustry(VALID_INDUSTRY_CLEANER).build();","lastModifiedDate":"2023-10-31"},{"lineNumber":75,"author":{"gitId":"peiran18"},"content":"//","lastModifiedDate":"2023-10-31"},{"lineNumber":76,"author":{"gitId":"peiran18"},"content":"//    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2023-10-31"},{"lineNumber":77,"author":{"gitId":"peiran18"},"content":"//","lastModifiedDate":"2023-10-31"},{"lineNumber":78,"author":{"gitId":"peiran18"},"content":"//    private TypicalJobs() {","lastModifiedDate":"2023-10-31"},{"lineNumber":79,"author":{"gitId":"peiran18"},"content":"//    } // prevents instantiation","lastModifiedDate":"2023-10-31"},{"lineNumber":80,"author":{"gitId":"peiran18"},"content":"//","lastModifiedDate":"2023-10-31"},{"lineNumber":81,"author":{"gitId":"peiran18"},"content":"//    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":82,"author":{"gitId":"peiran18"},"content":"//     * Returns an {@code ApplicationBook} with all the typical jobs.","lastModifiedDate":"2023-10-31"},{"lineNumber":83,"author":{"gitId":"peiran18"},"content":"//     */","lastModifiedDate":"2023-10-31"},{"lineNumber":84,"author":{"gitId":"peiran18"},"content":"//    public static ApplicationBook getTypicalApplicationBook() {","lastModifiedDate":"2023-10-31"},{"lineNumber":85,"author":{"gitId":"peiran18"},"content":"//        ApplicationBook ab \u003d new ApplicationBook();","lastModifiedDate":"2023-10-31"},{"lineNumber":86,"author":{"gitId":"peiran18"},"content":"//        for (Job job : getTypicalJobs()) {","lastModifiedDate":"2023-10-31"},{"lineNumber":87,"author":{"gitId":"peiran18"},"content":"//            ab.addJob(job);","lastModifiedDate":"2023-10-31"},{"lineNumber":88,"author":{"gitId":"peiran18"},"content":"//        }","lastModifiedDate":"2023-10-31"},{"lineNumber":89,"author":{"gitId":"peiran18"},"content":"//        return ab;","lastModifiedDate":"2023-10-31"},{"lineNumber":90,"author":{"gitId":"peiran18"},"content":"//    }","lastModifiedDate":"2023-10-31"},{"lineNumber":91,"author":{"gitId":"peiran18"},"content":"//","lastModifiedDate":"2023-10-31"},{"lineNumber":92,"author":{"gitId":"peiran18"},"content":"//    public static List\u003cJob\u003e getTypicalJobs() {","lastModifiedDate":"2023-10-31"},{"lineNumber":93,"author":{"gitId":"peiran18"},"content":"//        return new ArrayList\u003c\u003e(Arrays.asList(SOFTWARE_ENGINEER, TEACHER, WAITER, PILOT,","lastModifiedDate":"2023-10-31"},{"lineNumber":94,"author":{"gitId":"peiran18"},"content":"//            POLICE_OFFICER, FRUIT_SELLER, GRASS_CUTTER));","lastModifiedDate":"2023-10-31"},{"lineNumber":95,"author":{"gitId":"peiran18"},"content":"//    }","lastModifiedDate":"2023-10-31"},{"lineNumber":96,"author":{"gitId":"peiran18"},"content":"//}","lastModifiedDate":"2023-10-31"}],"authorContributionMap":{"peiran18":96}},{"path":"src/test/java/seedu/application/ui/TestFxmlObject.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"evanyan13"},"content":"package seedu.application.ui;","lastModifiedDate":"2023-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.beans.DefaultProperty;","lastModifiedDate":"2016-12-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * A test object which can be constructed via an FXML file.","lastModifiedDate":"2016-12-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Unlike other JavaFX classes, this class can be constructed without the JavaFX toolkit being initialized.","lastModifiedDate":"2016-12-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"@DefaultProperty(\"text\")","lastModifiedDate":"2016-12-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class TestFxmlObject {","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private String text;","lastModifiedDate":"2016-12-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public TestFxmlObject() {}","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public TestFxmlObject(String text) {","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        setText(text);","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public String getText() {","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        return text;","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setText(String text) {","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.text \u003d text;","lastModifiedDate":"2016-12-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-12-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (!(other instanceof TestFxmlObject)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        TestFxmlObject otherTestFxmlObject \u003d (TestFxmlObject) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return Objects.equals(text, otherTestFxmlObject.text);","lastModifiedDate":"2023-07-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"evanyan13":1,"-":44}},{"path":"src/test/java/seedu/application/ui/UiPartTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"evanyan13"},"content":"package seedu.application.ui;","lastModifiedDate":"2023-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"evanyan13"},"content":"import static seedu.application.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-10"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.net.URL;","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2019-04-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"evanyan13"},"content":"import seedu.application.MainApp;","lastModifiedDate":"2023-10-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class UiPartTest {","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final String MISSING_FILE_PATH \u003d \"UiPartTest/missingFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final String INVALID_FILE_PATH \u003d \"UiPartTest/invalidFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final String VALID_FILE_PATH \u003d \"UiPartTest/validFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String VALID_FILE_WITH_FX_ROOT_PATH \u003d \"UiPartTest/validFileWithFxRoot.fxml\";","lastModifiedDate":"2017-11-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final TestFxmlObject VALID_FILE_ROOT \u003d new TestFxmlObject(\"Hello World!\");","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void constructor_nullFileUrl_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((URL) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((URL) null, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void constructor_missingFileUrl_throwsAssertionError() throws Exception {","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        URL missingFileUrl \u003d new URL(testFolder.toUri().toURL(), MISSING_FILE_PATH);","lastModifiedDate":"2019-04-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(missingFileUrl));","lastModifiedDate":"2019-03-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(missingFileUrl, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void constructor_invalidFileUrl_throwsAssertionError() {","lastModifiedDate":"2016-12-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        URL invalidFileUrl \u003d getTestFileUrl(INVALID_FILE_PATH);","lastModifiedDate":"2016-12-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(invalidFileUrl));","lastModifiedDate":"2019-03-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(invalidFileUrl, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void constructor_validFileUrl_loadsFile() {","lastModifiedDate":"2016-12-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        URL validFileUrl \u003d getTestFileUrl(VALID_FILE_PATH);","lastModifiedDate":"2016-12-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertEquals(VALID_FILE_ROOT, new TestUiPart\u003cTestFxmlObject\u003e(validFileUrl).getRoot());","lastModifiedDate":"2016-12-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-11-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void constructor_validFileWithFxRootUrl_loadsFile() {","lastModifiedDate":"2017-11-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        URL validFileUrl \u003d getTestFileUrl(VALID_FILE_WITH_FX_ROOT_PATH);","lastModifiedDate":"2017-11-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        TestFxmlObject root \u003d new TestFxmlObject();","lastModifiedDate":"2017-11-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertEquals(VALID_FILE_ROOT, new TestUiPart\u003cTestFxmlObject\u003e(validFileUrl, root).getRoot());","lastModifiedDate":"2017-11-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void constructor_nullFileName_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((String) null, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void constructor_missingFileName_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e(MISSING_FILE_PATH));","lastModifiedDate":"2019-03-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e(MISSING_FILE_PATH, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void constructor_invalidFileName_throwsAssertionError() {","lastModifiedDate":"2016-12-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(INVALID_FILE_PATH));","lastModifiedDate":"2019-03-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(INVALID_FILE_PATH, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    private URL getTestFileUrl(String testFilePath) {","lastModifiedDate":"2016-12-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        String testFilePathInView \u003d \"/view/\" + testFilePath;","lastModifiedDate":"2016-12-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        URL testFileUrl \u003d MainApp.class.getResource(testFilePathInView);","lastModifiedDate":"2016-12-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertNotNull(testFileUrl, testFilePathInView + \" does not exist.\");","lastModifiedDate":"2019-03-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return testFileUrl;","lastModifiedDate":"2016-12-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * UiPart used for testing.","lastModifiedDate":"2016-12-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * It should only be used with invalid FXML files or the valid file located at {@link VALID_FILE_PATH}.","lastModifiedDate":"2016-12-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private static class TestUiPart\u003cT\u003e extends UiPart\u003cT\u003e {","lastModifiedDate":"2016-12-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        @FXML","lastModifiedDate":"2016-12-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        private TestFxmlObject validFileRoot; // Check that @FXML annotations work","lastModifiedDate":"2016-12-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        TestUiPart(URL fxmlFileUrl, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            super(fxmlFileUrl, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        TestUiPart(String fxmlFileName, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            super(fxmlFileName, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        TestUiPart(URL fxmlFileUrl) {","lastModifiedDate":"2016-12-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            super(fxmlFileUrl);","lastModifiedDate":"2016-12-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            assertEquals(VALID_FILE_ROOT, validFileRoot);","lastModifiedDate":"2016-12-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        TestUiPart(String fxmlFileName) {","lastModifiedDate":"2016-12-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            super(fxmlFileName);","lastModifiedDate":"2016-12-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            assertEquals(VALID_FILE_ROOT, validFileRoot);","lastModifiedDate":"2016-12-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"evanyan13":3,"-":111}},{"path":"src/test/resources/view/UiPartTest/validFile.fxml","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-12-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"evanyan13"},"content":"\u003c?import seedu.application.ui.TestFxmlObject?\u003e","lastModifiedDate":"2023-10-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003cTestFxmlObject xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:id\u003d\"validFileRoot\"\u003eHello World!\u003c/TestFxmlObject\u003e","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"evanyan13":1,"-":3}},{"path":"src/test/resources/view/UiPartTest/validFileWithFxRoot.fxml","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":3,"author":{"gitId":"evanyan13"},"content":"\u003cfx:root type\u003d\"seedu.application.ui.TestFxmlObject\" xmlns\u003d\"http://javafx.com/javafx/17\"","lastModifiedDate":"2023-10-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"         xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-07-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \u003ctext\u003eHello World!\u003c/text\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"evanyan13":1,"-":5}}]

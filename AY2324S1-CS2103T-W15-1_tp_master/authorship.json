[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"eyelessrhyme7"},"content":"[![CI Status](https://github.com/AY2324S1-CS2103T-W15-1/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2324S1-CS2103T-W15-1/tp/actions)","lastModifiedDate":"2023-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-09-23"},{"lineNumber":6,"author":{"gitId":"eyelessrhyme7"},"content":"Team Members: Raman, Tejas, Jackie, Kiat Win, Yarn Meng","lastModifiedDate":"2023-09-23"},{"lineNumber":7,"author":{"gitId":"eyelessrhyme7"},"content":"* This is **a CLI Task Manager for Computer Science professors**.\u003cbr\u003e","lastModifiedDate":"2023-10-02"},{"lineNumber":8,"author":{"gitId":"-"},"content":"  Example usages:","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"eyelessrhyme7"},"content":"  * as a CLI Task Manager for CS professors.","lastModifiedDate":"2023-10-02"},{"lineNumber":10,"author":{"gitId":"eyelessrhyme7"},"content":"  * as a grading component for CS2103T students.","lastModifiedDate":"2023-10-02"},{"lineNumber":11,"author":{"gitId":"eyelessrhyme7"},"content":"* The project simulates a CLI Task Manager for Professors to easily schedule and manage tasks.","lastModifiedDate":"2023-10-02"},{"lineNumber":12,"author":{"gitId":"eyelessrhyme7"},"content":"  * It is **written in OOP fashion**. It provides a **brilliantly well-written** code base **around 6 KLoC.**","lastModifiedDate":"2023-10-02"},{"lineNumber":13,"author":{"gitId":"eyelessrhyme7"},"content":"  * It comes with an **excellent level of user and developer documentation**.","lastModifiedDate":"2023-10-02"},{"lineNumber":14,"author":{"gitId":"eyelessrhyme7"},"content":"* It is named `ProfPlan` as it helps CS professors plan their tasks and schedules.","lastModifiedDate":"2023-10-02"},{"lineNumber":15,"author":{"gitId":"eyelessrhyme7"},"content":"* For the detailed documentation of this project, see the **[ProfPlan Product Website - TO BE UPDATED](https://github.com/AY2324S1-CS2103T-W15-1/tp/blob/master/docs/DeveloperGuide.md)**.","lastModifiedDate":"2023-10-03"},{"lineNumber":16,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":17,"author":{"gitId":"eyelessrhyme7"},"content":"* This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2023-10-02"}],"authorContributionMap":{"eyelessrhyme7":13,"-":4}},{"path":"bin/main/view/CommandBox.fxml","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"jack1e0"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"jack1e0"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"jack1e0"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"jack1e0"},"content":"\u003cStackPane styleClass\u003d\"stack-pane\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"jack1e0"},"content":"  \u003cTextField fx:id\u003d\"commandTextField\" onAction\u003d\"#handleCommandEntered\" promptText\u003d\"Enter command here...\"/\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"jack1e0"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"jack1e0":9}},{"path":"bin/main/view/DarkTheme.css","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"jack1e0"},"content":".background {","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"jack1e0"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"jack1e0"},"content":"    background-color: #383838; /* Used in the default.html file */","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"jack1e0"},"content":"}","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"jack1e0"},"content":".label {","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"jack1e0"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"jack1e0"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"jack1e0"},"content":"    -fx-text-fill: #555555;","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"jack1e0"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"jack1e0"},"content":"}","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"jack1e0"},"content":".label-bright {","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"jack1e0"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"jack1e0"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"jack1e0"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"jack1e0"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"jack1e0"},"content":"}","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"jack1e0"},"content":".label-header {","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"jack1e0"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"jack1e0"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"jack1e0"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"jack1e0"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"jack1e0"},"content":"}","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"jack1e0"},"content":".text-field {","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"jack1e0"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"jack1e0"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"jack1e0"},"content":"}","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"jack1e0"},"content":".tab-pane {","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"jack1e0"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"jack1e0"},"content":"}","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"jack1e0"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"jack1e0"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"jack1e0"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"jack1e0"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"jack1e0"},"content":"}","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":43,"author":{"gitId":"jack1e0"},"content":".table-view {","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"jack1e0"},"content":"    -fx-base: #1d1d1d;","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"jack1e0"},"content":"    -fx-control-inner-background: #1d1d1d;","lastModifiedDate":"2023-10-17"},{"lineNumber":46,"author":{"gitId":"jack1e0"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2023-10-17"},{"lineNumber":47,"author":{"gitId":"jack1e0"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2023-10-17"},{"lineNumber":48,"author":{"gitId":"jack1e0"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2023-10-17"},{"lineNumber":49,"author":{"gitId":"jack1e0"},"content":"    -fx-padding: 10;","lastModifiedDate":"2023-11-03"},{"lineNumber":50,"author":{"gitId":"jack1e0"},"content":"}","lastModifiedDate":"2023-10-17"},{"lineNumber":51,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":52,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":53,"author":{"gitId":"jack1e0"},"content":".table-view .column-header-background {","lastModifiedDate":"2023-10-17"},{"lineNumber":54,"author":{"gitId":"jack1e0"},"content":"    -fx-background-color: #44106B;","lastModifiedDate":"2023-11-03"},{"lineNumber":55,"author":{"gitId":"jack1e0"},"content":"}","lastModifiedDate":"2023-10-17"},{"lineNumber":56,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":57,"author":{"gitId":"jack1e0"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2023-10-17"},{"lineNumber":58,"author":{"gitId":"jack1e0"},"content":"    -fx-size: 35;","lastModifiedDate":"2023-10-17"},{"lineNumber":59,"author":{"gitId":"jack1e0"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2023-10-17"},{"lineNumber":60,"author":{"gitId":"jack1e0"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2023-10-17"},{"lineNumber":61,"author":{"gitId":"jack1e0"},"content":"    -fx-border-color:","lastModifiedDate":"2023-10-17"},{"lineNumber":62,"author":{"gitId":"jack1e0"},"content":"        transparent","lastModifiedDate":"2023-10-17"},{"lineNumber":63,"author":{"gitId":"jack1e0"},"content":"        transparent","lastModifiedDate":"2023-10-17"},{"lineNumber":64,"author":{"gitId":"jack1e0"},"content":"        derive(-fx-base, 80%)","lastModifiedDate":"2023-10-17"},{"lineNumber":65,"author":{"gitId":"jack1e0"},"content":"        transparent;","lastModifiedDate":"2023-10-17"},{"lineNumber":66,"author":{"gitId":"jack1e0"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2023-10-17"},{"lineNumber":67,"author":{"gitId":"jack1e0"},"content":"}","lastModifiedDate":"2023-10-17"},{"lineNumber":68,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":69,"author":{"gitId":"jack1e0"},"content":".table-view .column-header .label {","lastModifiedDate":"2023-10-17"},{"lineNumber":70,"author":{"gitId":"jack1e0"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2023-10-17"},{"lineNumber":71,"author":{"gitId":"jack1e0"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2023-11-03"},{"lineNumber":72,"author":{"gitId":"jack1e0"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-10-17"},{"lineNumber":73,"author":{"gitId":"jack1e0"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2023-10-17"},{"lineNumber":74,"author":{"gitId":"jack1e0"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2023-10-17"},{"lineNumber":75,"author":{"gitId":"jack1e0"},"content":"}","lastModifiedDate":"2023-10-17"},{"lineNumber":76,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":77,"author":{"gitId":"jack1e0"},"content":".table-view:focused .table-row-cell.list-cell {","lastModifiedDate":"2023-11-03"},{"lineNumber":78,"author":{"gitId":"jack1e0"},"content":"    -fx-background-color: #DC4247;","lastModifiedDate":"2023-11-03"},{"lineNumber":79,"author":{"gitId":"jack1e0"},"content":"}","lastModifiedDate":"2023-11-03"},{"lineNumber":80,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":81,"author":{"gitId":"jack1e0"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2023-10-17"},{"lineNumber":82,"author":{"gitId":"jack1e0"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2023-11-02"},{"lineNumber":83,"author":{"gitId":"jack1e0"},"content":"}","lastModifiedDate":"2023-11-02"},{"lineNumber":84,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":85,"author":{"gitId":"jack1e0"},"content":".table-view .table-row-cell:focused {","lastModifiedDate":"2023-11-02"},{"lineNumber":86,"author":{"gitId":"jack1e0"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2023-11-02"},{"lineNumber":87,"author":{"gitId":"jack1e0"},"content":"}","lastModifiedDate":"2023-10-17"},{"lineNumber":88,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":89,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":90,"author":{"gitId":"jack1e0"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2023-10-17"},{"lineNumber":91,"author":{"gitId":"jack1e0"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2023-10-17"},{"lineNumber":92,"author":{"gitId":"jack1e0"},"content":"    -fx-border-color: transparent transparent transparent #4d4d4d;","lastModifiedDate":"2023-10-17"},{"lineNumber":93,"author":{"gitId":"jack1e0"},"content":"}","lastModifiedDate":"2023-10-17"},{"lineNumber":94,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":95,"author":{"gitId":"jack1e0"},"content":".split-pane {","lastModifiedDate":"2023-10-17"},{"lineNumber":96,"author":{"gitId":"jack1e0"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2023-10-17"},{"lineNumber":97,"author":{"gitId":"jack1e0"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2023-10-17"},{"lineNumber":98,"author":{"gitId":"jack1e0"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2023-10-17"},{"lineNumber":99,"author":{"gitId":"jack1e0"},"content":"}","lastModifiedDate":"2023-10-17"},{"lineNumber":100,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":101,"author":{"gitId":"jack1e0"},"content":".list-view {","lastModifiedDate":"2023-10-17"},{"lineNumber":102,"author":{"gitId":"jack1e0"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2023-10-17"},{"lineNumber":103,"author":{"gitId":"jack1e0"},"content":"    -fx-padding: 0;","lastModifiedDate":"2023-10-17"},{"lineNumber":104,"author":{"gitId":"jack1e0"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2023-10-17"},{"lineNumber":105,"author":{"gitId":"jack1e0"},"content":"}","lastModifiedDate":"2023-10-17"},{"lineNumber":106,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":107,"author":{"gitId":"jack1e0"},"content":".list-cell {","lastModifiedDate":"2023-10-17"},{"lineNumber":108,"author":{"gitId":"jack1e0"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2023-10-17"},{"lineNumber":109,"author":{"gitId":"jack1e0"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2023-10-17"},{"lineNumber":110,"author":{"gitId":"jack1e0"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2023-10-17"},{"lineNumber":111,"author":{"gitId":"jack1e0"},"content":"}","lastModifiedDate":"2023-10-17"},{"lineNumber":112,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":113,"author":{"gitId":"jack1e0"},"content":".list-cell:filled:even {","lastModifiedDate":"2023-10-17"},{"lineNumber":114,"author":{"gitId":"jack1e0"},"content":"    -fx-background-color: #32337D;","lastModifiedDate":"2023-11-03"},{"lineNumber":115,"author":{"gitId":"jack1e0"},"content":"}","lastModifiedDate":"2023-10-17"},{"lineNumber":116,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":117,"author":{"gitId":"jack1e0"},"content":".list-cell:filled:odd {","lastModifiedDate":"2023-10-17"},{"lineNumber":118,"author":{"gitId":"jack1e0"},"content":"    -fx-background-color: #4C3C78;","lastModifiedDate":"2023-11-03"},{"lineNumber":119,"author":{"gitId":"jack1e0"},"content":"}","lastModifiedDate":"2023-10-17"},{"lineNumber":120,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":121,"author":{"gitId":"jack1e0"},"content":".list-cell:filled:selected {","lastModifiedDate":"2023-10-17"},{"lineNumber":122,"author":{"gitId":"jack1e0"},"content":"    -fx-background-color: #424d5f;","lastModifiedDate":"2023-10-17"},{"lineNumber":123,"author":{"gitId":"jack1e0"},"content":"}","lastModifiedDate":"2023-10-17"},{"lineNumber":124,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":125,"author":{"gitId":"jack1e0"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2023-10-17"},{"lineNumber":126,"author":{"gitId":"jack1e0"},"content":"    -fx-border-color: #3e7b91;","lastModifiedDate":"2023-10-17"},{"lineNumber":127,"author":{"gitId":"jack1e0"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2023-10-17"},{"lineNumber":128,"author":{"gitId":"jack1e0"},"content":"}","lastModifiedDate":"2023-10-17"},{"lineNumber":129,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":130,"author":{"gitId":"jack1e0"},"content":".list-cell .label {","lastModifiedDate":"2023-10-17"},{"lineNumber":131,"author":{"gitId":"jack1e0"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-10-17"},{"lineNumber":132,"author":{"gitId":"jack1e0"},"content":"}","lastModifiedDate":"2023-10-17"},{"lineNumber":133,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":134,"author":{"gitId":"jack1e0"},"content":".cell_big_label {","lastModifiedDate":"2023-10-17"},{"lineNumber":135,"author":{"gitId":"jack1e0"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2023-10-17"},{"lineNumber":136,"author":{"gitId":"jack1e0"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2023-10-17"},{"lineNumber":137,"author":{"gitId":"jack1e0"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2023-10-17"},{"lineNumber":138,"author":{"gitId":"jack1e0"},"content":"}","lastModifiedDate":"2023-10-17"},{"lineNumber":139,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":140,"author":{"gitId":"jack1e0"},"content":".cell_small_label {","lastModifiedDate":"2023-10-17"},{"lineNumber":141,"author":{"gitId":"jack1e0"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2023-10-17"},{"lineNumber":142,"author":{"gitId":"jack1e0"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2023-10-17"},{"lineNumber":143,"author":{"gitId":"jack1e0"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2023-10-17"},{"lineNumber":144,"author":{"gitId":"jack1e0"},"content":"}","lastModifiedDate":"2023-10-17"},{"lineNumber":145,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":146,"author":{"gitId":"jack1e0"},"content":".stack-pane {","lastModifiedDate":"2023-10-17"},{"lineNumber":147,"author":{"gitId":"jack1e0"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2023-10-17"},{"lineNumber":148,"author":{"gitId":"jack1e0"},"content":"}","lastModifiedDate":"2023-10-17"},{"lineNumber":149,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":150,"author":{"gitId":"jack1e0"},"content":".pane-with-border {","lastModifiedDate":"2023-10-17"},{"lineNumber":151,"author":{"gitId":"jack1e0"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2023-10-17"},{"lineNumber":152,"author":{"gitId":"jack1e0"},"content":"     -fx-border-color: derive(#1d1d1d, 10%);","lastModifiedDate":"2023-10-17"},{"lineNumber":153,"author":{"gitId":"jack1e0"},"content":"     -fx-border-top-width: 1px;","lastModifiedDate":"2023-10-17"},{"lineNumber":154,"author":{"gitId":"jack1e0"},"content":"}","lastModifiedDate":"2023-10-17"},{"lineNumber":155,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":156,"author":{"gitId":"jack1e0"},"content":".status-bar {","lastModifiedDate":"2023-10-17"},{"lineNumber":157,"author":{"gitId":"jack1e0"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2023-10-17"},{"lineNumber":158,"author":{"gitId":"jack1e0"},"content":"}","lastModifiedDate":"2023-10-17"},{"lineNumber":159,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":160,"author":{"gitId":"jack1e0"},"content":".table-view {","lastModifiedDate":"2023-11-02"},{"lineNumber":161,"author":{"gitId":"jack1e0"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2023-11-02"},{"lineNumber":162,"author":{"gitId":"jack1e0"},"content":"}","lastModifiedDate":"2023-11-02"},{"lineNumber":163,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":164,"author":{"gitId":"jack1e0"},"content":".table-view .column-header-background .label {","lastModifiedDate":"2023-11-02"},{"lineNumber":165,"author":{"gitId":"jack1e0"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2023-11-02"},{"lineNumber":166,"author":{"gitId":"jack1e0"},"content":"    -fx-font-size: 10pt;","lastModifiedDate":"2023-11-02"},{"lineNumber":167,"author":{"gitId":"jack1e0"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-11-02"},{"lineNumber":168,"author":{"gitId":"jack1e0"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2023-11-03"},{"lineNumber":169,"author":{"gitId":"jack1e0"},"content":"    -fx-alignment: CENTER;","lastModifiedDate":"2023-11-02"},{"lineNumber":170,"author":{"gitId":"jack1e0"},"content":"}","lastModifiedDate":"2023-11-02"},{"lineNumber":171,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":172,"author":{"gitId":"jack1e0"},"content":".matrix-display {","lastModifiedDate":"2023-11-02"},{"lineNumber":173,"author":{"gitId":"jack1e0"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2023-10-17"},{"lineNumber":174,"author":{"gitId":"jack1e0"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2023-10-17"},{"lineNumber":175,"author":{"gitId":"jack1e0"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2023-10-17"},{"lineNumber":176,"author":{"gitId":"jack1e0"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-10-17"},{"lineNumber":177,"author":{"gitId":"jack1e0"},"content":"}","lastModifiedDate":"2023-10-17"},{"lineNumber":178,"author":{"gitId":"jack1e0"},"content":".matrix-display .table-row-cell {","lastModifiedDate":"2023-11-03"},{"lineNumber":179,"author":{"gitId":"jack1e0"},"content":"    -fx-background-color: #794ECC;","lastModifiedDate":"2023-11-03"},{"lineNumber":180,"author":{"gitId":"jack1e0"},"content":"}","lastModifiedDate":"2023-11-03"},{"lineNumber":181,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":182,"author":{"gitId":"jack1e0"},"content":".matrix-display .list-cell {","lastModifiedDate":"2023-11-03"},{"lineNumber":183,"author":{"gitId":"jack1e0"},"content":"    -fx-background-color: #3c3e3f;","lastModifiedDate":"2023-11-03"},{"lineNumber":184,"author":{"gitId":"jack1e0"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2023-11-03"},{"lineNumber":185,"author":{"gitId":"jack1e0"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2023-11-03"},{"lineNumber":186,"author":{"gitId":"jack1e0"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-11-03"},{"lineNumber":187,"author":{"gitId":"jack1e0"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2023-11-03"},{"lineNumber":188,"author":{"gitId":"jack1e0"},"content":"}","lastModifiedDate":"2023-11-03"},{"lineNumber":189,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":190,"author":{"gitId":"jack1e0"},"content":".result-display .label {","lastModifiedDate":"2023-10-17"},{"lineNumber":191,"author":{"gitId":"jack1e0"},"content":"    -fx-text-fill: white !important;","lastModifiedDate":"2023-11-02"},{"lineNumber":192,"author":{"gitId":"jack1e0"},"content":"}","lastModifiedDate":"2023-10-17"},{"lineNumber":193,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":194,"author":{"gitId":"jack1e0"},"content":".status-bar .label {","lastModifiedDate":"2023-10-17"},{"lineNumber":195,"author":{"gitId":"jack1e0"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2023-10-17"},{"lineNumber":196,"author":{"gitId":"jack1e0"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-10-17"},{"lineNumber":197,"author":{"gitId":"jack1e0"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2023-10-17"},{"lineNumber":198,"author":{"gitId":"jack1e0"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2023-10-17"},{"lineNumber":199,"author":{"gitId":"jack1e0"},"content":"}","lastModifiedDate":"2023-10-17"},{"lineNumber":200,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":201,"author":{"gitId":"jack1e0"},"content":".status-bar-with-border {","lastModifiedDate":"2023-10-17"},{"lineNumber":202,"author":{"gitId":"jack1e0"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2023-10-17"},{"lineNumber":203,"author":{"gitId":"jack1e0"},"content":"    -fx-border-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2023-10-17"},{"lineNumber":204,"author":{"gitId":"jack1e0"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2023-10-17"},{"lineNumber":205,"author":{"gitId":"jack1e0"},"content":"}","lastModifiedDate":"2023-10-17"},{"lineNumber":206,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":207,"author":{"gitId":"jack1e0"},"content":".status-bar-with-border .label {","lastModifiedDate":"2023-10-17"},{"lineNumber":208,"author":{"gitId":"jack1e0"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-10-17"},{"lineNumber":209,"author":{"gitId":"jack1e0"},"content":"}","lastModifiedDate":"2023-10-17"},{"lineNumber":210,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":211,"author":{"gitId":"jack1e0"},"content":".grid-pane {","lastModifiedDate":"2023-10-17"},{"lineNumber":212,"author":{"gitId":"jack1e0"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2023-10-17"},{"lineNumber":213,"author":{"gitId":"jack1e0"},"content":"    -fx-border-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2023-10-17"},{"lineNumber":214,"author":{"gitId":"jack1e0"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2023-10-17"},{"lineNumber":215,"author":{"gitId":"jack1e0"},"content":"}","lastModifiedDate":"2023-10-17"},{"lineNumber":216,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":217,"author":{"gitId":"jack1e0"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2023-10-17"},{"lineNumber":218,"author":{"gitId":"jack1e0"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2023-10-17"},{"lineNumber":219,"author":{"gitId":"jack1e0"},"content":"}","lastModifiedDate":"2023-10-17"},{"lineNumber":220,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":221,"author":{"gitId":"jack1e0"},"content":".context-menu {","lastModifiedDate":"2023-10-17"},{"lineNumber":222,"author":{"gitId":"jack1e0"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2023-10-17"},{"lineNumber":223,"author":{"gitId":"jack1e0"},"content":"}","lastModifiedDate":"2023-10-17"},{"lineNumber":224,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":225,"author":{"gitId":"jack1e0"},"content":".context-menu .label {","lastModifiedDate":"2023-10-17"},{"lineNumber":226,"author":{"gitId":"jack1e0"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-10-17"},{"lineNumber":227,"author":{"gitId":"jack1e0"},"content":"}","lastModifiedDate":"2023-10-17"},{"lineNumber":228,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":229,"author":{"gitId":"jack1e0"},"content":".menu-bar {","lastModifiedDate":"2023-10-17"},{"lineNumber":230,"author":{"gitId":"jack1e0"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2023-10-17"},{"lineNumber":231,"author":{"gitId":"jack1e0"},"content":"}","lastModifiedDate":"2023-10-17"},{"lineNumber":232,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":233,"author":{"gitId":"jack1e0"},"content":".menu-bar .label {","lastModifiedDate":"2023-10-17"},{"lineNumber":234,"author":{"gitId":"jack1e0"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2023-10-17"},{"lineNumber":235,"author":{"gitId":"jack1e0"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2023-10-17"},{"lineNumber":236,"author":{"gitId":"jack1e0"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-10-17"},{"lineNumber":237,"author":{"gitId":"jack1e0"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2023-10-17"},{"lineNumber":238,"author":{"gitId":"jack1e0"},"content":"}","lastModifiedDate":"2023-10-17"},{"lineNumber":239,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":240,"author":{"gitId":"jack1e0"},"content":".menu .left-container {","lastModifiedDate":"2023-10-17"},{"lineNumber":241,"author":{"gitId":"jack1e0"},"content":"    -fx-background-color: black;","lastModifiedDate":"2023-10-17"},{"lineNumber":242,"author":{"gitId":"jack1e0"},"content":"}","lastModifiedDate":"2023-10-17"},{"lineNumber":243,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":244,"author":{"gitId":"jack1e0"},"content":"/*","lastModifiedDate":"2023-10-17"},{"lineNumber":245,"author":{"gitId":"jack1e0"},"content":" * Metro style Push Button","lastModifiedDate":"2023-10-17"},{"lineNumber":246,"author":{"gitId":"jack1e0"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2023-10-17"},{"lineNumber":247,"author":{"gitId":"jack1e0"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2023-10-17"},{"lineNumber":248,"author":{"gitId":"jack1e0"},"content":" */","lastModifiedDate":"2023-10-17"},{"lineNumber":249,"author":{"gitId":"jack1e0"},"content":".button {","lastModifiedDate":"2023-10-17"},{"lineNumber":250,"author":{"gitId":"jack1e0"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2023-10-17"},{"lineNumber":251,"author":{"gitId":"jack1e0"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2023-10-17"},{"lineNumber":252,"author":{"gitId":"jack1e0"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2023-10-17"},{"lineNumber":253,"author":{"gitId":"jack1e0"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2023-10-17"},{"lineNumber":254,"author":{"gitId":"jack1e0"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2023-10-17"},{"lineNumber":255,"author":{"gitId":"jack1e0"},"content":"    -fx-font-family: \"Segoe UI\", Helvetica, Arial, sans-serif;","lastModifiedDate":"2023-10-17"},{"lineNumber":256,"author":{"gitId":"jack1e0"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2023-10-17"},{"lineNumber":257,"author":{"gitId":"jack1e0"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2023-10-17"},{"lineNumber":258,"author":{"gitId":"jack1e0"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2023-10-17"},{"lineNumber":259,"author":{"gitId":"jack1e0"},"content":"}","lastModifiedDate":"2023-10-17"},{"lineNumber":260,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":261,"author":{"gitId":"jack1e0"},"content":".button:hover {","lastModifiedDate":"2023-10-17"},{"lineNumber":262,"author":{"gitId":"jack1e0"},"content":"    -fx-background-color: #3a3a3a;","lastModifiedDate":"2023-10-17"},{"lineNumber":263,"author":{"gitId":"jack1e0"},"content":"}","lastModifiedDate":"2023-10-17"},{"lineNumber":264,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":265,"author":{"gitId":"jack1e0"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2023-10-17"},{"lineNumber":266,"author":{"gitId":"jack1e0"},"content":"  -fx-background-color: white;","lastModifiedDate":"2023-10-17"},{"lineNumber":267,"author":{"gitId":"jack1e0"},"content":"  -fx-text-fill: #1d1d1d;","lastModifiedDate":"2023-10-17"},{"lineNumber":268,"author":{"gitId":"jack1e0"},"content":"}","lastModifiedDate":"2023-10-17"},{"lineNumber":269,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":270,"author":{"gitId":"jack1e0"},"content":".button:focused {","lastModifiedDate":"2023-10-17"},{"lineNumber":271,"author":{"gitId":"jack1e0"},"content":"    -fx-border-color: white, white;","lastModifiedDate":"2023-10-17"},{"lineNumber":272,"author":{"gitId":"jack1e0"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2023-10-17"},{"lineNumber":273,"author":{"gitId":"jack1e0"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2023-10-17"},{"lineNumber":274,"author":{"gitId":"jack1e0"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2023-10-17"},{"lineNumber":275,"author":{"gitId":"jack1e0"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2023-10-17"},{"lineNumber":276,"author":{"gitId":"jack1e0"},"content":"}","lastModifiedDate":"2023-10-17"},{"lineNumber":277,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":278,"author":{"gitId":"jack1e0"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2023-10-17"},{"lineNumber":279,"author":{"gitId":"jack1e0"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2023-10-17"},{"lineNumber":280,"author":{"gitId":"jack1e0"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2023-10-17"},{"lineNumber":281,"author":{"gitId":"jack1e0"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-10-17"},{"lineNumber":282,"author":{"gitId":"jack1e0"},"content":"}","lastModifiedDate":"2023-10-17"},{"lineNumber":283,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":284,"author":{"gitId":"jack1e0"},"content":".button:default {","lastModifiedDate":"2023-10-17"},{"lineNumber":285,"author":{"gitId":"jack1e0"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2023-10-17"},{"lineNumber":286,"author":{"gitId":"jack1e0"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2023-10-17"},{"lineNumber":287,"author":{"gitId":"jack1e0"},"content":"}","lastModifiedDate":"2023-10-17"},{"lineNumber":288,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":289,"author":{"gitId":"jack1e0"},"content":".button:default:hover {","lastModifiedDate":"2023-10-17"},{"lineNumber":290,"author":{"gitId":"jack1e0"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2023-10-17"},{"lineNumber":291,"author":{"gitId":"jack1e0"},"content":"}","lastModifiedDate":"2023-10-17"},{"lineNumber":292,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":293,"author":{"gitId":"jack1e0"},"content":".dialog-pane {","lastModifiedDate":"2023-10-17"},{"lineNumber":294,"author":{"gitId":"jack1e0"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2023-10-17"},{"lineNumber":295,"author":{"gitId":"jack1e0"},"content":"}","lastModifiedDate":"2023-10-17"},{"lineNumber":296,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":297,"author":{"gitId":"jack1e0"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2023-10-17"},{"lineNumber":298,"author":{"gitId":"jack1e0"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2023-10-17"},{"lineNumber":299,"author":{"gitId":"jack1e0"},"content":"}","lastModifiedDate":"2023-10-17"},{"lineNumber":300,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":301,"author":{"gitId":"jack1e0"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2023-10-17"},{"lineNumber":302,"author":{"gitId":"jack1e0"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2023-10-17"},{"lineNumber":303,"author":{"gitId":"jack1e0"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2023-10-17"},{"lineNumber":304,"author":{"gitId":"jack1e0"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-10-17"},{"lineNumber":305,"author":{"gitId":"jack1e0"},"content":"}","lastModifiedDate":"2023-10-17"},{"lineNumber":306,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":307,"author":{"gitId":"jack1e0"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2023-10-17"},{"lineNumber":308,"author":{"gitId":"jack1e0"},"content":"    -fx-background-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2023-10-17"},{"lineNumber":309,"author":{"gitId":"jack1e0"},"content":"}","lastModifiedDate":"2023-10-17"},{"lineNumber":310,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":311,"author":{"gitId":"jack1e0"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2023-10-17"},{"lineNumber":312,"author":{"gitId":"jack1e0"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2023-10-17"},{"lineNumber":313,"author":{"gitId":"jack1e0"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2023-10-17"},{"lineNumber":314,"author":{"gitId":"jack1e0"},"content":"    -fx-fill: white;","lastModifiedDate":"2023-10-17"},{"lineNumber":315,"author":{"gitId":"jack1e0"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-10-17"},{"lineNumber":316,"author":{"gitId":"jack1e0"},"content":"}","lastModifiedDate":"2023-10-17"},{"lineNumber":317,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":318,"author":{"gitId":"jack1e0"},"content":".scroll-bar {","lastModifiedDate":"2023-10-17"},{"lineNumber":319,"author":{"gitId":"jack1e0"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2023-10-17"},{"lineNumber":320,"author":{"gitId":"jack1e0"},"content":"}","lastModifiedDate":"2023-10-17"},{"lineNumber":321,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":322,"author":{"gitId":"jack1e0"},"content":".scroll-bar .thumb {","lastModifiedDate":"2023-10-17"},{"lineNumber":323,"author":{"gitId":"jack1e0"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2023-10-17"},{"lineNumber":324,"author":{"gitId":"jack1e0"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2023-10-17"},{"lineNumber":325,"author":{"gitId":"jack1e0"},"content":"}","lastModifiedDate":"2023-10-17"},{"lineNumber":326,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":327,"author":{"gitId":"jack1e0"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2023-10-17"},{"lineNumber":328,"author":{"gitId":"jack1e0"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2023-10-17"},{"lineNumber":329,"author":{"gitId":"jack1e0"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2023-10-17"},{"lineNumber":330,"author":{"gitId":"jack1e0"},"content":"}","lastModifiedDate":"2023-10-17"},{"lineNumber":331,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":332,"author":{"gitId":"jack1e0"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2023-10-17"},{"lineNumber":333,"author":{"gitId":"jack1e0"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2023-10-17"},{"lineNumber":334,"author":{"gitId":"jack1e0"},"content":"}","lastModifiedDate":"2023-10-17"},{"lineNumber":335,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":336,"author":{"gitId":"jack1e0"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2023-10-17"},{"lineNumber":337,"author":{"gitId":"jack1e0"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2023-10-17"},{"lineNumber":338,"author":{"gitId":"jack1e0"},"content":"}","lastModifiedDate":"2023-10-17"},{"lineNumber":339,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":340,"author":{"gitId":"jack1e0"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2023-10-17"},{"lineNumber":341,"author":{"gitId":"jack1e0"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2023-10-17"},{"lineNumber":342,"author":{"gitId":"jack1e0"},"content":"}","lastModifiedDate":"2023-10-17"},{"lineNumber":343,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":344,"author":{"gitId":"jack1e0"},"content":"#cardPane {","lastModifiedDate":"2023-10-17"},{"lineNumber":345,"author":{"gitId":"jack1e0"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2023-10-17"},{"lineNumber":346,"author":{"gitId":"jack1e0"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2023-10-17"},{"lineNumber":347,"author":{"gitId":"jack1e0"},"content":"}","lastModifiedDate":"2023-10-17"},{"lineNumber":348,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":349,"author":{"gitId":"jack1e0"},"content":"#commandTypeLabel {","lastModifiedDate":"2023-10-17"},{"lineNumber":350,"author":{"gitId":"jack1e0"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2023-10-17"},{"lineNumber":351,"author":{"gitId":"jack1e0"},"content":"    -fx-text-fill: #F70D1A;","lastModifiedDate":"2023-10-17"},{"lineNumber":352,"author":{"gitId":"jack1e0"},"content":"}","lastModifiedDate":"2023-10-17"},{"lineNumber":353,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":354,"author":{"gitId":"jack1e0"},"content":"#commandTextField {","lastModifiedDate":"2023-10-17"},{"lineNumber":355,"author":{"gitId":"jack1e0"},"content":"    -fx-background-color: #ADDBB6;","lastModifiedDate":"2023-11-03"},{"lineNumber":356,"author":{"gitId":"jack1e0"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2023-10-17"},{"lineNumber":357,"author":{"gitId":"jack1e0"},"content":"    -fx-border-color: #383838 #383838 #50AB64 #383838;","lastModifiedDate":"2023-11-03"},{"lineNumber":358,"author":{"gitId":"jack1e0"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2023-10-17"},{"lineNumber":359,"author":{"gitId":"jack1e0"},"content":"    -fx-border-width: 3;","lastModifiedDate":"2023-11-03"},{"lineNumber":360,"author":{"gitId":"jack1e0"},"content":"    -fx-font-family: \"Segoe UI Bold\";","lastModifiedDate":"2023-11-03"},{"lineNumber":361,"author":{"gitId":"jack1e0"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2023-10-17"},{"lineNumber":362,"author":{"gitId":"jack1e0"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2023-11-03"},{"lineNumber":363,"author":{"gitId":"jack1e0"},"content":"    -fx-prompt-text-fill: #545454;","lastModifiedDate":"2023-11-03"},{"lineNumber":364,"author":{"gitId":"jack1e0"},"content":"}","lastModifiedDate":"2023-10-17"},{"lineNumber":365,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":366,"author":{"gitId":"jack1e0"},"content":"#filterField, #taskListPanel, #taskWebpage {","lastModifiedDate":"2023-10-17"},{"lineNumber":367,"author":{"gitId":"jack1e0"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2023-10-17"},{"lineNumber":368,"author":{"gitId":"jack1e0"},"content":"}","lastModifiedDate":"2023-10-17"},{"lineNumber":369,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":370,"author":{"gitId":"jack1e0"},"content":"#resultDisplay {","lastModifiedDate":"2023-11-03"},{"lineNumber":371,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":372,"author":{"gitId":"jack1e0"},"content":"}","lastModifiedDate":"2023-11-03"},{"lineNumber":373,"author":{"gitId":"jack1e0"},"content":"#resultDisplay .content {","lastModifiedDate":"2023-10-17"},{"lineNumber":374,"author":{"gitId":"jack1e0"},"content":"    -fx-background-color: black;","lastModifiedDate":"2023-11-03"},{"lineNumber":375,"author":{"gitId":"jack1e0"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2023-10-17"},{"lineNumber":376,"author":{"gitId":"jack1e0"},"content":"    -fx-border-width: 3;","lastModifiedDate":"2023-11-03"},{"lineNumber":377,"author":{"gitId":"jack1e0"},"content":"    -fx-border-color: black;","lastModifiedDate":"2023-11-03"},{"lineNumber":378,"author":{"gitId":"jack1e0"},"content":"}","lastModifiedDate":"2023-10-17"},{"lineNumber":379,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":380,"author":{"gitId":"jack1e0"},"content":"#tags {","lastModifiedDate":"2023-10-17"},{"lineNumber":381,"author":{"gitId":"jack1e0"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2023-10-17"},{"lineNumber":382,"author":{"gitId":"jack1e0"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2023-10-17"},{"lineNumber":383,"author":{"gitId":"jack1e0"},"content":"}","lastModifiedDate":"2023-10-17"},{"lineNumber":384,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":385,"author":{"gitId":"jack1e0"},"content":"#tags .label {","lastModifiedDate":"2023-10-17"},{"lineNumber":386,"author":{"gitId":"jack1e0"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-10-17"},{"lineNumber":387,"author":{"gitId":"jack1e0"},"content":"    -fx-background-color: #D97930;","lastModifiedDate":"2023-11-03"},{"lineNumber":388,"author":{"gitId":"jack1e0"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2023-10-17"},{"lineNumber":389,"author":{"gitId":"jack1e0"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2023-10-17"},{"lineNumber":390,"author":{"gitId":"jack1e0"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2023-10-17"},{"lineNumber":391,"author":{"gitId":"jack1e0"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2023-10-17"},{"lineNumber":392,"author":{"gitId":"jack1e0"},"content":"}","lastModifiedDate":"2023-10-17"},{"lineNumber":393,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":394,"author":{"gitId":"jack1e0"},"content":".list-view {","lastModifiedDate":"2023-11-02"},{"lineNumber":395,"author":{"gitId":"jack1e0"},"content":"    -fx-padding: 5px ;","lastModifiedDate":"2023-11-02"},{"lineNumber":396,"author":{"gitId":"jack1e0"},"content":"}","lastModifiedDate":"2023-11-02"},{"lineNumber":397,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":398,"author":{"gitId":"jack1e0"},"content":".list-cell {","lastModifiedDate":"2023-11-02"},{"lineNumber":399,"author":{"gitId":"jack1e0"},"content":"    -fx-padding: 5px ;","lastModifiedDate":"2023-11-02"},{"lineNumber":400,"author":{"gitId":"jack1e0"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2023-11-02"},{"lineNumber":401,"author":{"gitId":"jack1e0"},"content":"    -fx-background-insets: 0px, 5px ;","lastModifiedDate":"2023-11-02"},{"lineNumber":402,"author":{"gitId":"jack1e0"},"content":"}","lastModifiedDate":"2023-11-02"},{"lineNumber":403,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":404,"author":{"gitId":"jack1e0"},"content":".list-cell:empty {","lastModifiedDate":"2023-11-02"},{"lineNumber":405,"author":{"gitId":"jack1e0"},"content":"    -fx-padding: 5px ;","lastModifiedDate":"2023-11-02"},{"lineNumber":406,"author":{"gitId":"jack1e0"},"content":"    -fx-background-color: transparent ;","lastModifiedDate":"2023-11-02"},{"lineNumber":407,"author":{"gitId":"jack1e0"},"content":"    -fx-background-insets: 0 ;","lastModifiedDate":"2023-11-02"},{"lineNumber":408,"author":{"gitId":"jack1e0"},"content":"}","lastModifiedDate":"2023-11-02"}],"authorContributionMap":{"jack1e0":408}},{"path":"bin/main/view/Extensions.css","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"jack1e0"},"content":".error {","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"jack1e0"},"content":"    -fx-text-fill: #d06651 !important; /* The error class should always override the default text-fill style */","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"jack1e0"},"content":"}","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"jack1e0"},"content":".list-cell:empty {","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"jack1e0"},"content":"    /* Empty cells will not have alternating colours */","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"jack1e0"},"content":"    -fx-background: #383838;","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"jack1e0"},"content":"}","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"jack1e0"},"content":".tag-selector {","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"jack1e0"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"jack1e0"},"content":"    -fx-border-color: white;","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"jack1e0"},"content":"    -fx-border-radius: 3;","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"jack1e0"},"content":"    -fx-background-radius: 3;","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"jack1e0"},"content":"}","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"jack1e0"},"content":".tooltip-text {","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"jack1e0"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"jack1e0"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"jack1e0":20}},{"path":"bin/main/view/HelpWindow.css","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"jack1e0"},"content":"#copyButton, #helpMessage {","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"jack1e0"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"jack1e0"},"content":"}","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"jack1e0"},"content":"#copyButton {","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"jack1e0"},"content":"    -fx-background-color: dimgray;","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"jack1e0"},"content":"}","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"jack1e0"},"content":"#copyButton:hover {","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"jack1e0"},"content":"    -fx-background-color: gray;","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"jack1e0"},"content":"}","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"jack1e0"},"content":"#copyButton:armed {","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"jack1e0"},"content":"    -fx-background-color: darkgray;","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"jack1e0"},"content":"}","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"jack1e0"},"content":"#helpMessageContainer {","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"jack1e0"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"jack1e0"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"jack1e0":19}},{"path":"bin/main/view/HelpWindow.fxml","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"jack1e0"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"jack1e0"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"jack1e0"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"jack1e0"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"jack1e0"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"jack1e0"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"jack1e0"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"jack1e0"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"jack1e0"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"jack1e0"},"content":"\u003cfx:root resizable\u003d\"false\" title\u003d\"Help\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"jack1e0"},"content":"  \u003cicons\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"jack1e0"},"content":"    \u003cImage url\u003d\"@/images/help_icon.png\" /\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"jack1e0"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"jack1e0"},"content":"  \u003cscene\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"jack1e0"},"content":"    \u003cScene\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"jack1e0"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"jack1e0"},"content":"        \u003cURL value\u003d\"@HelpWindow.css\" /\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"jack1e0"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"jack1e0"},"content":"      \u003cHBox alignment\u003d\"CENTER\" fx:id\u003d\"helpMessageContainer\"\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"jack1e0"},"content":"        \u003cchildren\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"jack1e0"},"content":"          \u003cLabel fx:id\u003d\"helpMessage\" text\u003d\"Label\"\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"jack1e0"},"content":"            \u003cHBox.margin\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"jack1e0"},"content":"              \u003cInsets right\u003d\"5.0\" /\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"jack1e0"},"content":"            \u003c/HBox.margin\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"jack1e0"},"content":"          \u003c/Label\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"jack1e0"},"content":"          \u003cButton fx:id\u003d\"copyButton\" mnemonicParsing\u003d\"false\" onAction\u003d\"#copyUrl\" text\u003d\"Copy URL\"\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"jack1e0"},"content":"            \u003cHBox.margin\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"jack1e0"},"content":"              \u003cInsets left\u003d\"5.0\" /\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"jack1e0"},"content":"            \u003c/HBox.margin\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"jack1e0"},"content":"          \u003c/Button\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"jack1e0"},"content":"        \u003c/children\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"jack1e0"},"content":"        \u003copaqueInsets\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"jack1e0"},"content":"          \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"jack1e0"},"content":"        \u003c/opaqueInsets\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"jack1e0"},"content":"        \u003cpadding\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"jack1e0"},"content":"          \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"jack1e0"},"content":"        \u003c/padding\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"jack1e0"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"jack1e0"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"jack1e0"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"jack1e0"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"jack1e0":44}},{"path":"bin/main/view/MainWindow.fxml","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"jack1e0"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"jack1e0"},"content":"\u003c?import java.lang.String?\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":4,"author":{"gitId":"jack1e0"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"jack1e0"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"jack1e0"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"jack1e0"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"jack1e0"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"jack1e0"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"jack1e0"},"content":"\u003c?import javafx.scene.control.TableView?\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":11,"author":{"gitId":"jack1e0"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"jack1e0"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":13,"author":{"gitId":"jack1e0"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":14,"author":{"gitId":"jack1e0"},"content":"\u003c?import javafx.scene.layout.RowConstraints?\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":15,"author":{"gitId":"jack1e0"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"jack1e0"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"jack1e0"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":18,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"jack1e0"},"content":"\u003cfx:root minHeight\u003d\"600\" minWidth\u003d\"450\" onCloseRequest\u003d\"#handleExit\" title\u003d\"ProfPlan\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/16\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":20,"author":{"gitId":"jack1e0"},"content":"  \u003cicons\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"jack1e0"},"content":"    \u003cImage url\u003d\"@/images/profplan_32.png\" /\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":22,"author":{"gitId":"jack1e0"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"jack1e0"},"content":"  \u003cscene\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"jack1e0"},"content":"    \u003cScene\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"jack1e0"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"jack1e0"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"jack1e0"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"jack1e0"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"jack1e0"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"jack1e0"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"jack1e0"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"jack1e0"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"jack1e0"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"jack1e0"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"jack1e0"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"jack1e0"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"jack1e0"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"jack1e0"},"content":"        \u003cStackPane fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":41,"author":{"gitId":"jack1e0"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"jack1e0"},"content":"            \u003cInsets bottom\u003d\"5\" left\u003d\"10\" right\u003d\"10\" top\u003d\"5\" /\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":43,"author":{"gitId":"jack1e0"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"jack1e0"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":46,"author":{"gitId":"jack1e0"},"content":"                    \u003cStackPane fx:id\u003d\"resultDisplayPlaceholder\" maxHeight\u003d\"100\" minHeight\u003d\"100\" prefHeight\u003d\"100\" style\u003d\"-fx-text-fill: white;\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":47,"author":{"gitId":"jack1e0"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":48,"author":{"gitId":"jack1e0"},"content":"            \u003cInsets bottom\u003d\"5\" left\u003d\"10\" right\u003d\"10\" top\u003d\"5\" /\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":49,"author":{"gitId":"jack1e0"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":50,"author":{"gitId":"jack1e0"},"content":"               \u003cstyleClass\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":51,"author":{"gitId":"jack1e0"},"content":"                  \u003cString fx:value\u003d\"pane-with-border\" /\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":52,"author":{"gitId":"jack1e0"},"content":"                  \u003cString fx:value\u003d\"result-display\" /\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":53,"author":{"gitId":"jack1e0"},"content":"               \u003c/styleClass\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":54,"author":{"gitId":"jack1e0"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":55,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":56,"author":{"gitId":"jack1e0"},"content":"        \u003cVBox fx:id\u003d\"taskList\" minWidth\u003d\"340\" prefWidth\u003d\"340\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":57,"author":{"gitId":"jack1e0"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":58,"author":{"gitId":"jack1e0"},"content":"            \u003cInsets bottom\u003d\"10\" left\u003d\"10\" right\u003d\"10\" top\u003d\"10\" /\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":59,"author":{"gitId":"jack1e0"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":60,"author":{"gitId":"jack1e0"},"content":"               \u003cGridPane fx:id\u003d\"resultGrid\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":61,"author":{"gitId":"jack1e0"},"content":"                 \u003ccolumnConstraints\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":62,"author":{"gitId":"jack1e0"},"content":"                   \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"100.0\" /\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":63,"author":{"gitId":"jack1e0"},"content":"                   \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"100.0\" /\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":64,"author":{"gitId":"jack1e0"},"content":"                 \u003c/columnConstraints\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":65,"author":{"gitId":"jack1e0"},"content":"                 \u003crowConstraints\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":66,"author":{"gitId":"jack1e0"},"content":"                   \u003cRowConstraints /\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":67,"author":{"gitId":"jack1e0"},"content":"                 \u003c/rowConstraints\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":68,"author":{"gitId":"jack1e0"},"content":"                  \u003cchildren\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":69,"author":{"gitId":"jack1e0"},"content":"                \u003cStackPane fx:id\u003d\"taskListPanelPlaceholder\" prefHeight\u003d\"150.0\" prefWidth\u003d\"107.0\" styleClass\u003d\"pane-with-border\" GridPane.hgrow\u003d\"NEVER\" GridPane.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":70,"author":{"gitId":"jack1e0"},"content":"                     \u003cStackPane prefHeight\u003d\"150.0\" prefWidth\u003d\"200.0\" styleClass\u003d\"pane-with-border\" GridPane.columnIndex\u003d\"1\" GridPane.hgrow\u003d\"NEVER\" GridPane.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":71,"author":{"gitId":"jack1e0"},"content":"                        \u003cchildren\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":72,"author":{"gitId":"jack1e0"},"content":"                           \u003cTableView fx:id\u003d\"matrixDisplay\" prefHeight\u003d\"200.0\" prefWidth\u003d\"200.0\" styleClass\u003d\"matrix-display\" /\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":73,"author":{"gitId":"jack1e0"},"content":"                        \u003c/children\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":74,"author":{"gitId":"jack1e0"},"content":"                     \u003c/StackPane\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":75,"author":{"gitId":"jack1e0"},"content":"                  \u003c/children\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":76,"author":{"gitId":"jack1e0"},"content":"               \u003c/GridPane\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":77,"author":{"gitId":"jack1e0"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":78,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":79,"author":{"gitId":"jack1e0"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":80,"author":{"gitId":"jack1e0"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":81,"author":{"gitId":"jack1e0"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":82,"author":{"gitId":"jack1e0"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":83,"author":{"gitId":"jack1e0"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"jack1e0":83}},{"path":"bin/main/view/ResultDisplay.fxml","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"jack1e0"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"jack1e0"},"content":"\u003c?import javafx.scene.control.TextArea?\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"jack1e0"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"jack1e0"},"content":"\u003cStackPane fx:id\u003d\"placeHolder\" styleClass\u003d\"pane-with-border\" xmlns\u003d\"http://javafx.com/javafx/16\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":7,"author":{"gitId":"jack1e0"},"content":"  \u003cTextArea fx:id\u003d\"resultDisplay\" editable\u003d\"false\" style\u003d\"-fx-text-fill: white;\" styleClass\u003d\"result-display\" /\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":8,"author":{"gitId":"jack1e0"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"jack1e0":8}},{"path":"bin/main/view/StatusBarFooter.fxml","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"jack1e0"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"jack1e0"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"jack1e0"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"jack1e0"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"jack1e0"},"content":"\u003cGridPane styleClass\u003d\"status-bar\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"jack1e0"},"content":"  \u003ccolumnConstraints\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"jack1e0"},"content":"    \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" /\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"jack1e0"},"content":"  \u003c/columnConstraints\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"jack1e0"},"content":"  \u003cLabel fx:id\u003d\"saveLocationStatus\" /\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"jack1e0"},"content":"\u003c/GridPane\u003e","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"jack1e0":12}},{"path":"bin/main/view/TaskListCard.fxml","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"-"},"content":"      \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"jack1e0"},"content":"      \u003cLabel fx:id\u003d\"description\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$description\" /\u003e","lastModifiedDate":"2023-11-03"},{"lineNumber":32,"author":{"gitId":"jack1e0"},"content":"      \u003cLabel fx:id\u003d\"link\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$link\" /\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":33,"author":{"gitId":"jack1e0"},"content":"      \u003cLabel fx:id\u003d\"priority\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$priority\" /\u003e","lastModifiedDate":"2023-11-03"},{"lineNumber":34,"author":{"gitId":"jack1e0"},"content":"      \u003cLabel fx:id\u003d\"dueDate\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$dueDate\" /\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"jack1e0"},"content":"      \u003cLabel fx:id\u003d\"status\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$status\" style\u003d\"-fx-background-color: #1F9978; -fx-background-radius: 5;\" /\u003e","lastModifiedDate":"2023-11-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"jack1e0":5,"-":33}},{"path":"bin/main/view/TaskListPanel.fxml","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"jack1e0"},"content":"  \u003cListView fx:id\u003d\"taskListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"jack1e0":1,"-":7}},{"path":"bin/test/view/UiPartTest/invalidFile.fxml","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"jack1e0"},"content":"Not a valid FXML file","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"jack1e0":1}},{"path":"bin/test/view/UiPartTest/validFile.fxml","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"jack1e0"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"jack1e0"},"content":"\u003c?import profplan.ui.TestFxmlObject?\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"jack1e0"},"content":"\u003cTestFxmlObject xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:id\u003d\"validFileRoot\"\u003eHello World!\u003c/TestFxmlObject\u003e","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"jack1e0":4}},{"path":"bin/test/view/UiPartTest/validFileWithFxRoot.fxml","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"jack1e0"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"jack1e0"},"content":"\u003c?import profplan.ui.TestFxmlObject ?\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"jack1e0"},"content":"\u003cfx:root type\u003d\"TestFxmlObject\" xmlns\u003d\"http://javafx.com/javafx/17\"","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"jack1e0"},"content":"         xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:id\u003d\"validFileRoot\"\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"jack1e0"},"content":"    \u003ctext\u003eHello World!\u003c/text\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"jack1e0"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"jack1e0":7}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"kiatkat"},"content":"mainClassName \u003d \u0027profplan.Main\u0027","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-04-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        html.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        xml.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-07-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":69,"author":{"gitId":"kiatkat"},"content":"    archiveFileName \u003d \u0027profplan.jar\u0027","lastModifiedDate":"2023-10-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"newway1814"},"content":"run {","lastModifiedDate":"2023-10-25"},{"lineNumber":73,"author":{"gitId":"newway1814"},"content":"    enableAssertions \u003d true;","lastModifiedDate":"2023-10-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"kiatkat":2,"-":72,"newway1814":2}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"newway1814"},"content":"### Tejas Gandhi","lastModifiedDate":"2023-10-02"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"newway1814"},"content":"\u003cimg src\u003d\"images/newway1814.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-10-02"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"newway1814"},"content":"[[github](http://github.com/newway1814)]","lastModifiedDate":"2023-10-02"},{"lineNumber":16,"author":{"gitId":"newway1814"},"content":"[[portfolio](team/newway1814.md)]","lastModifiedDate":"2023-10-02"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"eyelessrhyme7"},"content":"* Role: Developer","lastModifiedDate":"2023-10-02"},{"lineNumber":19,"author":{"gitId":"newway1814"},"content":"* Responsibilities:","lastModifiedDate":"2023-10-02"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"jack1e0"},"content":"### Guo Jiaqi Jackie","lastModifiedDate":"2023-10-02"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"jack1e0"},"content":"\u003cimg src\u003d\"images/jack1e0.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"jack1e0"},"content":"[[github](http://github.com/jack1e0)] [[portfolio](team/jack1e0.md)]","lastModifiedDate":"2023-10-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"eyelessrhyme7"},"content":"* Responsibilities:","lastModifiedDate":"2023-10-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"kiatkat"},"content":"### Kiat Win","lastModifiedDate":"2023-10-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"kiatkat"},"content":"\u003cimg src\u003d\"images/kiatkat.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-10-02"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"kiatkat"},"content":"[[github](http://github.com/kiatkat)]","lastModifiedDate":"2023-10-02"},{"lineNumber":35,"author":{"gitId":"kiatkat"},"content":"[[portfolio](team/kiatkat.md)]","lastModifiedDate":"2023-10-02"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"kiatkat"},"content":"* Responsibilities:","lastModifiedDate":"2023-10-02"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"yarnmengnus"},"content":"### Yarn Meng","lastModifiedDate":"2023-10-02"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"yarnmengnus"},"content":"\u003cimg src\u003d\"images/yarnmengnus.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"yarnmengnus"},"content":"[[github](http://github.com/yarnmengnus)]","lastModifiedDate":"2023-10-02"},{"lineNumber":45,"author":{"gitId":"yarnmengnus"},"content":"[[portfolio](team/yarnmengnus.md)]","lastModifiedDate":"2023-10-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"eyelessrhyme7"},"content":"* Responsibilities:","lastModifiedDate":"2023-10-02"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":50,"author":{"gitId":"eyelessrhyme7"},"content":"### Raman Gupta","lastModifiedDate":"2023-10-02"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":52,"author":{"gitId":"eyelessrhyme7"},"content":"\u003cimg src\u003d\"images/eyelessrhyme7.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-10-02"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":54,"author":{"gitId":"eyelessrhyme7"},"content":"[[github](http://github.com/eyelessrhyme7)]","lastModifiedDate":"2023-10-02"},{"lineNumber":55,"author":{"gitId":"eyelessrhyme7"},"content":"[[portfolio](team/newway1814.md)]","lastModifiedDate":"2023-10-02"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":57,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2023-10-02"},{"lineNumber":58,"author":{"gitId":"eyelessrhyme7"},"content":"* Responsibilities:","lastModifiedDate":"2023-10-02"},{"lineNumber":59,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-10-02"}],"authorContributionMap":{"yarnmengnus":4,"jack1e0":3,"kiatkat":5,"eyelessrhyme7":9,"-":33,"newway1814":5}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"kiatkat"},"content":"* This project is built on top of the codebase of [AddressBook Level-3 (AB3)](https://github.com/se-edu/addressbook-level3).","lastModifiedDate":"2023-10-02"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":23,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document `docs/diagrams` folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"jack1e0"},"content":"**`Main`** (consisting of classes [`Main`](https://github.com/AY2324S1-CS2103T-W15-1/tp/blob/master/src/main/java/profplan/Main.java) and [`MainApp`](https://github.com/AY2324S1-CS2103T-W15-1/tp/blob/master/src/main/java/profplan/MainApp.java)) is in charge of the app launch and shut down.","lastModifiedDate":"2023-11-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* At app launch, it initializes the other components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"* At shut down, it shuts down the other components and invokes cleanup methods where necessary.","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"The bulk of the app\u0027s work is done by the following four components:","lastModifiedDate":"2023-09-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2023-09-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"jack1e0"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point).","lastModifiedDate":"2023-11-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"jack1e0"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/AY2324S1-CS2103T-W15-1/tp/blob/master/src/main/java/profplan/ui/Ui.java)","lastModifiedDate":"2023-11-12"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"newway1814"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `TaskListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2023-10-16"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"jack1e0"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/AY2324S1-CS2103T-W15-1/tp/blob/master/src/main/java/profplan/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/AY2324S1-CS2103T-W15-1/tp/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2023-11-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":85,"author":{"gitId":"newway1814"},"content":"* depends on some classes in the `Model` component, as it displays `Task` object residing in the `Model`.","lastModifiedDate":"2023-10-16"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"jack1e0"},"content":"**API** : [`Logic.java`](https://github.com/AY2324S1-CS2103T-W15-1/tp/blob/master/src/main/java/profplan/logic/Logic.java)","lastModifiedDate":"2023-11-12"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"jack1e0"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-11-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"The sequence diagram below illustrates the interactions within the `Logic` component, taking `execute(\"delete 1\")` API call as an example.","lastModifiedDate":"2023-09-03"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"jack1e0"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-11-12"},{"lineNumber":104,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2023-09-03"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":106,"author":{"gitId":"newway1814"},"content":"1. When `Logic` is called upon to execute a command, it is passed to an `ProfPlanParser` object which in turn creates a parser that matches the command (e.g., `DeleteCommandParser`) and uses it to parse the command.","lastModifiedDate":"2023-10-26"},{"lineNumber":107,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `DeleteCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2023-09-03"},{"lineNumber":108,"author":{"gitId":"newway1814"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to delete a task).","lastModifiedDate":"2023-10-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2023-09-03"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":111,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":116,"author":{"gitId":"newway1814"},"content":"* When called upon to parse a user command, the `ProfPlanParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `ProfPlanParser` returns back as a `Command` object.","lastModifiedDate":"2023-10-26"},{"lineNumber":117,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":120,"author":{"gitId":"jack1e0"},"content":"**API** : [`Model.java`](https://github.com/AY2324S1-CS2103T-W15-1/tp/blob/master/src/main/java/profplan/model/Model.java)","lastModifiedDate":"2023-11-12"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"newway1814"},"content":"\u003cimg src\u003d\"images/UmlForModel.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2023-11-09"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"eyelessrhyme7"},"content":"* stores the task list data i.e., all `Task` objects (which are contained in a `UniqueTaskList` object).","lastModifiedDate":"2023-10-17"},{"lineNumber":128,"author":{"gitId":"newway1814"},"content":"* stores the currently \u0027selected\u0027 `Task` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cTask\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2023-10-16"},{"lineNumber":129,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":132,"author":{"gitId":"jack1e0"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `ProfPlan`, which `Task` references. This allows `ProfPlan` to only require one `Tag` object per unique tag, instead of each `Task` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2023-11-12"},{"lineNumber":133,"author":{"gitId":"jack1e0"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-11-12"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":135,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"jack1e0"},"content":"**API** : [`Storage.java`](https://github.com/AY2324S1-CS2103T-W15-1/tp/blob/master/src/main/java/profplan/storage/Storage.java)","lastModifiedDate":"2023-11-12"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"eyelessrhyme7"},"content":"* can save both tasklist data and user preference data in JSON format, and read them back into corresponding objects.","lastModifiedDate":"2023-10-17"},{"lineNumber":148,"author":{"gitId":"jack1e0"},"content":"* inherits from both `ProfPlanStorage` and `UserPrefsStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2023-11-12"},{"lineNumber":149,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"kiatkat"},"content":"Classes used by multiple components are in the `profplan.commons` package.","lastModifiedDate":"2023-10-27"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":162,"author":{"gitId":"eyelessrhyme7"},"content":"## DoNext feature","lastModifiedDate":"2023-10-26"},{"lineNumber":163,"author":{"gitId":"eyelessrhyme7"},"content":"### Actual implementation","lastModifiedDate":"2023-10-26"},{"lineNumber":164,"author":{"gitId":"eyelessrhyme7"},"content":"- The DoNext feature in ProfPlan allows users to generate a recommendation of which task to do next.","lastModifiedDate":"2023-10-26"},{"lineNumber":165,"author":{"gitId":"jack1e0"},"content":"- We compute (priority) / (number of days to due date) for every task, and select the task with the highest computed value as the recommendation.","lastModifiedDate":"2023-11-12"},{"lineNumber":166,"author":{"gitId":"jack1e0"},"content":"- This is because a task is recommended if it has higher priority and lower number of days left to due date.","lastModifiedDate":"2023-11-12"},{"lineNumber":167,"author":{"gitId":"jack1e0"},"content":"- Below, we describe the implementation details for this feature through a (partial) UML class and state diagram:","lastModifiedDate":"2023-11-12"},{"lineNumber":168,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":169,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":170,"author":{"gitId":"eyelessrhyme7"},"content":"[//]: # (\u003cdiv style\u003d\"display: flex; justify-content: space-between; margin-bottom: 20px;\"\u003e)","lastModifiedDate":"2023-10-26"},{"lineNumber":171,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":172,"author":{"gitId":"eyelessrhyme7"},"content":"[//]: # (    \u003cdiv style\u003d\"flex: 1; margin-right: 5px;\"\u003e)","lastModifiedDate":"2023-10-26"},{"lineNumber":173,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":174,"author":{"gitId":"eyelessrhyme7"},"content":"[//]: # (        \u003cimg src\u003d\"images/DoNextCommandClassDiagram.png\" alt\u003d\"DoNextCommand Class Diagram\" width\u003d\"380\"\u003e)","lastModifiedDate":"2023-10-26"},{"lineNumber":175,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":176,"author":{"gitId":"eyelessrhyme7"},"content":"[//]: # (    \u003c/div\u003e)","lastModifiedDate":"2023-10-26"},{"lineNumber":177,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":178,"author":{"gitId":"eyelessrhyme7"},"content":"[//]: # (\u003c/div\u003e)","lastModifiedDate":"2023-10-26"},{"lineNumber":179,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":180,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":181,"author":{"gitId":"eyelessrhyme7"},"content":"The `DoNextCommand` is a part of the ProfPlan application, a task management tool. It allows users to generate next task recommendation. It is one of the standout features of ProfPlan, as it generates smart recommendations for professors.","lastModifiedDate":"2023-10-26"},{"lineNumber":182,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":183,"author":{"gitId":"eyelessrhyme7"},"content":"### Code Structure","lastModifiedDate":"2023-10-26"},{"lineNumber":184,"author":{"gitId":"eyelessrhyme7"},"content":"The code structure for the `DoNextCommand` is well-organized. It consists of the following components:","lastModifiedDate":"2023-10-26"},{"lineNumber":185,"author":{"gitId":"eyelessrhyme7"},"content":"- `DoNextCommand` class: Represents the command itself.","lastModifiedDate":"2023-10-26"},{"lineNumber":186,"author":{"gitId":"eyelessrhyme7"},"content":"- `ProfPlanParser` class: Responsible for parsing user input and creating `DoNextCommand` instances.","lastModifiedDate":"2023-10-26"},{"lineNumber":187,"author":{"gitId":"eyelessrhyme7"},"content":"- `Priority` class: Represents the priority of a task (from 1 to 10).","lastModifiedDate":"2023-10-26"},{"lineNumber":188,"author":{"gitId":"jack1e0"},"content":"- `DueDate` class: Represents the deadline of a task (in dd-MM-yyyy format, e.g. \u002701-02-2023\u0027).","lastModifiedDate":"2023-11-12"},{"lineNumber":189,"author":{"gitId":"eyelessrhyme7"},"content":"- `Task` class: Represents a task, and it contains the priority and dueDate that `DoNextCommand` processes.","lastModifiedDate":"2023-10-26"},{"lineNumber":190,"author":{"gitId":"eyelessrhyme7"},"content":"- `ModelManager` class: contains the `getDoNextTask()` function to generate recommended task.","lastModifiedDate":"2023-10-26"},{"lineNumber":191,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":192,"author":{"gitId":"eyelessrhyme7"},"content":"### Class Details \u003ca name\u003d\"class-details\"\u003e\u003c/a\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":193,"author":{"gitId":"eyelessrhyme7"},"content":"### `DoNextCommand` \u003ca name\u003d\"donextcommand\"\u003e\u003c/a\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":194,"author":{"gitId":"eyelessrhyme7"},"content":"- Purpose: Represents the `do_next` command that generates next task recommendation.","lastModifiedDate":"2023-10-26"},{"lineNumber":195,"author":{"gitId":"eyelessrhyme7"},"content":"- Key Methods:","lastModifiedDate":"2023-10-26"},{"lineNumber":196,"author":{"gitId":"eyelessrhyme7"},"content":"    - `execute(Model model)`: Executes the `DoNextCommand` by computing and output the next task to do.","lastModifiedDate":"2023-10-26"},{"lineNumber":197,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":198,"author":{"gitId":"eyelessrhyme7"},"content":"### `Priority` \u003ca name\u003d\"priority\"\u003e\u003c/a\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":199,"author":{"gitId":"eyelessrhyme7"},"content":"- Purpose: Represents the priority of a task (from 1 to 10).","lastModifiedDate":"2023-10-26"},{"lineNumber":200,"author":{"gitId":"eyelessrhyme7"},"content":"- Key Methods:","lastModifiedDate":"2023-10-26"},{"lineNumber":201,"author":{"gitId":"eyelessrhyme7"},"content":"    - `isValidPriority(String test)`: Checks if a given priority is valid according to the predefined regex.","lastModifiedDate":"2023-10-26"},{"lineNumber":202,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":203,"author":{"gitId":"eyelessrhyme7"},"content":"### `DueDate` \u003ca name\u003d\"duedate\"\u003e\u003c/a\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":204,"author":{"gitId":"eyelessrhyme7"},"content":"- Purpose: Represents the deadline of a task (in dd-MM-yyyy format or \u002701-02-2023\u0027).","lastModifiedDate":"2023-10-26"},{"lineNumber":205,"author":{"gitId":"eyelessrhyme7"},"content":"- Key Methods:","lastModifiedDate":"2023-10-26"},{"lineNumber":206,"author":{"gitId":"eyelessrhyme7"},"content":"    - `isValidDate(String test)`: Checks if a given date is valid according to the predefined regex.","lastModifiedDate":"2023-10-26"},{"lineNumber":207,"author":{"gitId":"eyelessrhyme7"},"content":"    - `isIncludedorBefore(DueDate otherDate)`: Checks whether the current date is before, on equals the given date.","lastModifiedDate":"2023-10-26"},{"lineNumber":208,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":209,"author":{"gitId":"eyelessrhyme7"},"content":"### `Task` \u003ca name\u003d\"task\"\u003e\u003c/a\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":210,"author":{"gitId":"eyelessrhyme7"},"content":"- Purpose: Represents a task, and it contains the priority and dueDate.","lastModifiedDate":"2023-10-26"},{"lineNumber":211,"author":{"gitId":"eyelessrhyme7"},"content":"- Key Methods:","lastModifiedDate":"2023-10-26"},{"lineNumber":212,"author":{"gitId":"eyelessrhyme7"},"content":"    - `getPriority()`: returns the priority of the task.","lastModifiedDate":"2023-10-26"},{"lineNumber":213,"author":{"gitId":"eyelessrhyme7"},"content":"    - `getDueDate()`: returns the dueDate of the task.","lastModifiedDate":"2023-10-26"},{"lineNumber":214,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":215,"author":{"gitId":"eyelessrhyme7"},"content":"### `ModelManager` \u003ca name\u003d\"modelmanager\"\u003e\u003c/a\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":216,"author":{"gitId":"eyelessrhyme7"},"content":"- Purpose: Represents a model manager, implements the Model class and carries out core functionality for commands.","lastModifiedDate":"2023-10-26"},{"lineNumber":217,"author":{"gitId":"eyelessrhyme7"},"content":"- Key Methods:","lastModifiedDate":"2023-10-26"},{"lineNumber":218,"author":{"gitId":"eyelessrhyme7"},"content":"    - `getDoNextTask()`: returns the recommended task after processing priority/#daysTodueDate for every task.","lastModifiedDate":"2023-10-26"},{"lineNumber":219,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":220,"author":{"gitId":"eyelessrhyme7"},"content":"### Sequence Diagram \u003ca name\u003d\"sequence-diagram\"\u003e\u003c/a\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":221,"author":{"gitId":"eyelessrhyme7"},"content":"The sequence diagram provides an overview of how the `DoNext` is executed and interacts with other components.","lastModifiedDate":"2023-10-26"},{"lineNumber":222,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":223,"author":{"gitId":"eyelessrhyme7"},"content":"[//]: # ()","lastModifiedDate":"2023-10-26"},{"lineNumber":224,"author":{"gitId":"eyelessrhyme7"},"content":"[//]: # (![Sequence Diagram]\u0026#40;images/DoNextCommandSequenceDiagram.png\u0026#41;)","lastModifiedDate":"2023-10-26"},{"lineNumber":225,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":226,"author":{"gitId":"eyelessrhyme7"},"content":"Here\u0027s a breakdown of the sequence:","lastModifiedDate":"2023-10-26"},{"lineNumber":227,"author":{"gitId":"eyelessrhyme7"},"content":"1. The `LogicManager` receives the command \"do_next\" from the user.","lastModifiedDate":"2023-10-26"},{"lineNumber":228,"author":{"gitId":"eyelessrhyme7"},"content":"2. The `ProfPlanParser` parses the command and creates a `DoNextCommand`.","lastModifiedDate":"2023-10-26"},{"lineNumber":229,"author":{"gitId":"eyelessrhyme7"},"content":"4. The `DoNextCommand` is executed.","lastModifiedDate":"2023-10-26"},{"lineNumber":230,"author":{"gitId":"eyelessrhyme7"},"content":"5. The `ModelManager` executes the function `getDoNextTask`","lastModifiedDate":"2023-10-26"},{"lineNumber":231,"author":{"gitId":"eyelessrhyme7"},"content":"6. A `CommandResult` is created to provide feedback to the user, containing the recommended task as a String.","lastModifiedDate":"2023-10-26"},{"lineNumber":232,"author":{"gitId":"eyelessrhyme7"},"content":"7. The result is returned to the `LogicManager`.","lastModifiedDate":"2023-10-26"},{"lineNumber":233,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":234,"author":{"gitId":"eyelessrhyme7"},"content":"### Usage \u003ca name\u003d\"usage\"\u003e\u003c/a\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":235,"author":{"gitId":"eyelessrhyme7"},"content":"To use the `DoNext` in the ProfPlan application, you can execute the following steps:","lastModifiedDate":"2023-10-26"},{"lineNumber":236,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":237,"author":{"gitId":"eyelessrhyme7"},"content":"1. Enter the \"do_next\" command.","lastModifiedDate":"2023-10-26"},{"lineNumber":238,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":239,"author":{"gitId":"eyelessrhyme7"},"content":"2. The `DoNext` will handle the task recommendation generation.","lastModifiedDate":"2023-10-26"},{"lineNumber":240,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":241,"author":{"gitId":"eyelessrhyme7"},"content":"3. The application will provide feedback, and output the task generated in the message window.","lastModifiedDate":"2023-10-26"},{"lineNumber":242,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":243,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":244,"author":{"gitId":"eyelessrhyme7"},"content":"## Mark feature","lastModifiedDate":"2023-11-12"},{"lineNumber":245,"author":{"gitId":"newway1814"},"content":"### Actual implementation","lastModifiedDate":"2023-10-26"},{"lineNumber":246,"author":{"gitId":"eyelessrhyme7"},"content":"The Mark feature in ProfPlan allows users to set a task as done. Below, we describe the implementation details for this feature through a (partial) UML class diagram:","lastModifiedDate":"2023-11-12"},{"lineNumber":247,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":248,"author":{"gitId":"newway1814"},"content":"\u003cdiv style\u003d\"display: flex; justify-content: space-between; margin-bottom: 20px;\"\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":249,"author":{"gitId":"newway1814"},"content":"    \u003cdiv style\u003d\"flex: 1; margin-right: 5px;\"\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":250,"author":{"gitId":"newway1814"},"content":"        \u003cimg src\u003d\"images/MarkCommandClassDiagram.png\" alt\u003d\"MarkCommand Class Diagram\" width\u003d\"380\"\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":251,"author":{"gitId":"newway1814"},"content":"    \u003c/div\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":252,"author":{"gitId":"newway1814"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":253,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":254,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":255,"author":{"gitId":"newway1814"},"content":"The `MarkCommand` is a part of the ProfPlan application, a task management tool. The `MarkCommand` allows users to mark a task as done by specifying the task index. It is a critical part of the application\u0027s functionality, as it helps users manage and track their tasks efficiently.","lastModifiedDate":"2023-10-26"},{"lineNumber":256,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":257,"author":{"gitId":"newway1814"},"content":"### Code Structure","lastModifiedDate":"2023-10-26"},{"lineNumber":258,"author":{"gitId":"newway1814"},"content":"The code structure for the `MarkCommand` is well-organized. It consists of the following components:","lastModifiedDate":"2023-10-26"},{"lineNumber":259,"author":{"gitId":"newway1814"},"content":"- `MarkCommand` class: Represents the command itself.","lastModifiedDate":"2023-10-26"},{"lineNumber":260,"author":{"gitId":"newway1814"},"content":"- `MarkCommandParser` class: Responsible for parsing user input and creating `MarkCommand` instances.","lastModifiedDate":"2023-10-26"},{"lineNumber":261,"author":{"gitId":"newway1814"},"content":"- `Status` class: Represents the status of a task (either \"done\" or \"undone\").","lastModifiedDate":"2023-10-26"},{"lineNumber":262,"author":{"gitId":"jack1e0"},"content":"- `Task` class: Represents a task, and it contains the status that the `MarkCommand` changes.","lastModifiedDate":"2023-11-12"},{"lineNumber":263,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":264,"author":{"gitId":"newway1814"},"content":"### Class Details \u003ca name\u003d\"class-details\"\u003e\u003c/a\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":265,"author":{"gitId":"newway1814"},"content":"### `MarkCommand` \u003ca name\u003d\"markcommand\"\u003e\u003c/a\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":266,"author":{"gitId":"newway1814"},"content":"- Purpose: Represents the `mark` command that allows users to mark a task as done.","lastModifiedDate":"2023-10-26"},{"lineNumber":267,"author":{"gitId":"newway1814"},"content":"- Key Methods:","lastModifiedDate":"2023-10-26"},{"lineNumber":268,"author":{"gitId":"newway1814"},"content":"    - `execute(Model model)`: Executes the `MarkCommand` by marking the task as done in the model.","lastModifiedDate":"2023-10-26"},{"lineNumber":269,"author":{"gitId":"newway1814"},"content":"    - `equals(Object other)`: Compares two `MarkCommand` objects for equality.","lastModifiedDate":"2023-10-26"},{"lineNumber":270,"author":{"gitId":"newway1814"},"content":"    - `toString()`: Returns a string representation of the `MarkCommand`.","lastModifiedDate":"2023-10-26"},{"lineNumber":271,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":272,"author":{"gitId":"newway1814"},"content":"### `MarkCommandParser` \u003ca name\u003d\"markcommandparser\"\u003e\u003c/a\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":273,"author":{"gitId":"newway1814"},"content":"- Purpose: Parses user input to create `MarkCommand` instances.","lastModifiedDate":"2023-10-26"},{"lineNumber":274,"author":{"gitId":"newway1814"},"content":"- Key Methods:","lastModifiedDate":"2023-10-26"},{"lineNumber":275,"author":{"gitId":"newway1814"},"content":"    - `parse(String args)`: Parses the user input and returns a `MarkCommand` if the input is valid.","lastModifiedDate":"2023-10-26"},{"lineNumber":276,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":277,"author":{"gitId":"newway1814"},"content":"### `Status` \u003ca name\u003d\"status\"\u003e\u003c/a\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":278,"author":{"gitId":"newway1814"},"content":"- Purpose: Represents the status of a task. It can be either \"done\" or \"undone.\"","lastModifiedDate":"2023-10-26"},{"lineNumber":279,"author":{"gitId":"newway1814"},"content":"- Key Methods:","lastModifiedDate":"2023-10-26"},{"lineNumber":280,"author":{"gitId":"newway1814"},"content":"    - `isValidStatus(String test)`: Checks if a given status is valid according to the predefined regex.","lastModifiedDate":"2023-10-26"},{"lineNumber":281,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":282,"author":{"gitId":"newway1814"},"content":"### `Task` \u003ca name\u003d\"task\"\u003e\u003c/a\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":283,"author":{"gitId":"newway1814"},"content":"- Purpose: Represents a task, and it contains the status that the `MarkCommand` changes.","lastModifiedDate":"2023-10-26"},{"lineNumber":284,"author":{"gitId":"newway1814"},"content":"- Key Methods:","lastModifiedDate":"2023-10-26"},{"lineNumber":285,"author":{"gitId":"newway1814"},"content":"    - `setStatus(Status status)`: Sets the status of the task.","lastModifiedDate":"2023-10-26"},{"lineNumber":286,"author":{"gitId":"newway1814"},"content":"    - `Task(Task task)`: Constructor for creating a new task as a copy of an existing task.","lastModifiedDate":"2023-10-26"},{"lineNumber":287,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":288,"author":{"gitId":"newway1814"},"content":"### Sequence Diagram \u003ca name\u003d\"sequence-diagram\"\u003e\u003c/a\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":289,"author":{"gitId":"jack1e0"},"content":"The sequence diagram below provides an overview of how the `MarkCommand` is executed and interacts with other components.","lastModifiedDate":"2023-11-12"},{"lineNumber":290,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":291,"author":{"gitId":"newway1814"},"content":"![Sequence Diagram](images/MarkCommandSequenceDiagram.png)","lastModifiedDate":"2023-10-26"},{"lineNumber":292,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":293,"author":{"gitId":"newway1814"},"content":"Here\u0027s a breakdown of the sequence:","lastModifiedDate":"2023-10-26"},{"lineNumber":294,"author":{"gitId":"newway1814"},"content":"1. The `LogicManager` receives the command \"mark 1\" from the user.","lastModifiedDate":"2023-10-26"},{"lineNumber":295,"author":{"gitId":"newway1814"},"content":"2. The `ProfPlanParser` parses the command and recognizes it as a `MarkCommand`.","lastModifiedDate":"2023-10-26"},{"lineNumber":296,"author":{"gitId":"newway1814"},"content":"3. The `MarkCommandParser` parses the argument \"1\" and creates a `MarkCommand`.","lastModifiedDate":"2023-10-26"},{"lineNumber":297,"author":{"gitId":"newway1814"},"content":"4. The `MarkCommand` is executed.","lastModifiedDate":"2023-10-26"},{"lineNumber":298,"author":{"gitId":"newway1814"},"content":"5. The `Model` is updated by marking the task as done.","lastModifiedDate":"2023-10-26"},{"lineNumber":299,"author":{"gitId":"newway1814"},"content":"6. A `CommandResult` is created to provide feedback to the user.","lastModifiedDate":"2023-10-26"},{"lineNumber":300,"author":{"gitId":"newway1814"},"content":"7. The result is returned to the `LogicManager`.","lastModifiedDate":"2023-10-26"},{"lineNumber":301,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":302,"author":{"gitId":"newway1814"},"content":"### Usage \u003ca name\u003d\"usage\"\u003e\u003c/a\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":303,"author":{"gitId":"newway1814"},"content":"To use the `MarkCommand` in the ProfPlan application, you can execute the following steps:","lastModifiedDate":"2023-10-26"},{"lineNumber":304,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":305,"author":{"gitId":"newway1814"},"content":"1. Enter the \"mark\" command followed by the task index you want to mark as done. For example, \"mark 1\" marks the task with index 1 as done.","lastModifiedDate":"2023-10-26"},{"lineNumber":306,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":307,"author":{"gitId":"newway1814"},"content":"2. The `MarkCommand` will handle the task marking process and update the task status in the model.","lastModifiedDate":"2023-10-26"},{"lineNumber":308,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":309,"author":{"gitId":"newway1814"},"content":"3. The application will provide feedback, indicating the successful marking of the task as done.","lastModifiedDate":"2023-10-26"},{"lineNumber":310,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":311,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":312,"author":{"gitId":"jack1e0"},"content":"## Filter feature","lastModifiedDate":"2023-10-27"},{"lineNumber":313,"author":{"gitId":"jack1e0"},"content":"### Actual implementation","lastModifiedDate":"2023-10-27"},{"lineNumber":314,"author":{"gitId":"jack1e0"},"content":"The Filter feature in ProfPlan allows users to filter according to one or more of the following criteria:","lastModifiedDate":"2023-11-12"},{"lineNumber":315,"author":{"gitId":"jack1e0"},"content":"- `DueDate`: displays tasks before given due date","lastModifiedDate":"2023-10-27"},{"lineNumber":316,"author":{"gitId":"jack1e0"},"content":"- `Priority`: displays tasks of given priority","lastModifiedDate":"2023-10-27"},{"lineNumber":317,"author":{"gitId":"jack1e0"},"content":"- `Status`: displays tasks of given status","lastModifiedDate":"2023-10-27"},{"lineNumber":318,"author":{"gitId":"jack1e0"},"content":"- `RecurringType`: displays tasks of given recurring type","lastModifiedDate":"2023-11-12"},{"lineNumber":319,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":320,"author":{"gitId":"jack1e0"},"content":"Below, we describe the implementation details for this feature through a (partial )UML class diagram:","lastModifiedDate":"2023-11-12"},{"lineNumber":321,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":322,"author":{"gitId":"jack1e0"},"content":"\u003cdiv style\u003d\"display: flex; justify-content: space-between; margin-bottom: 20px;\"\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":323,"author":{"gitId":"jack1e0"},"content":"    \u003cdiv style\u003d\"flex: 1; margin-right: 5px;\"\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":324,"author":{"gitId":"jack1e0"},"content":"        \u003cimg src\u003d\"images/FilterCommandClassDiagram.png\" alt\u003d\"FilterCommand Class Diagram\" width\u003d\"800px\"\u003e","lastModifiedDate":"2023-11-12"},{"lineNumber":325,"author":{"gitId":"jack1e0"},"content":"    \u003c/div\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":326,"author":{"gitId":"jack1e0"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":327,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":328,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":329,"author":{"gitId":"jack1e0"},"content":"The `FilterCommand` is a part of the ProfPlan application, a task management tool. The `FilterCommand` allows users to filter tasks by due date, priority, and status. This enables clearer visualisation of tasks.","lastModifiedDate":"2023-10-27"},{"lineNumber":330,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":331,"author":{"gitId":"jack1e0"},"content":"### Code Structure","lastModifiedDate":"2023-10-27"},{"lineNumber":332,"author":{"gitId":"jack1e0"},"content":"The code structure for the `FilterCommand` is well-organized. It consists of the following components:","lastModifiedDate":"2023-10-27"},{"lineNumber":333,"author":{"gitId":"jack1e0"},"content":"- `FilterCommand` class: Represents the command itself.","lastModifiedDate":"2023-10-27"},{"lineNumber":334,"author":{"gitId":"jack1e0"},"content":"- `FilterCommandParser` class: Responsible for parsing user input and creating `FilterCommand` instances.","lastModifiedDate":"2023-10-27"},{"lineNumber":335,"author":{"gitId":"jack1e0"},"content":"- `TaskDueDatePredicate` class: Represents the DueDate predicate.","lastModifiedDate":"2023-10-27"},{"lineNumber":336,"author":{"gitId":"jack1e0"},"content":"- `TaskPriorityPredicate` class: Represents the Priority predicate.","lastModifiedDate":"2023-10-27"},{"lineNumber":337,"author":{"gitId":"jack1e0"},"content":"- `TaskStatusPredicate` class: Represents the Status predicate.","lastModifiedDate":"2023-10-27"},{"lineNumber":338,"author":{"gitId":"jack1e0"},"content":"- `TaskRecurringTypePredicate` class: Represents the RecurringType predicate","lastModifiedDate":"2023-11-12"},{"lineNumber":339,"author":{"gitId":"jack1e0"},"content":"- `CombinedPredicate` class: Represents the combination of multiple predicates","lastModifiedDate":"2023-11-12"},{"lineNumber":340,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":341,"author":{"gitId":"jack1e0"},"content":"### Class Details \u003ca name\u003d\"class-details\"\u003e\u003c/a\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":342,"author":{"gitId":"jack1e0"},"content":"### `FilterCommand` \u003ca name\u003d\"filtercommand\"\u003e\u003c/a\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":343,"author":{"gitId":"jack1e0"},"content":"- Purpose: Represents the `filter` command that allows users to filter by DueDate, Priority, Status, and/or RecurringType.","lastModifiedDate":"2023-11-12"},{"lineNumber":344,"author":{"gitId":"jack1e0"},"content":"- Key Methods:","lastModifiedDate":"2023-10-27"},{"lineNumber":345,"author":{"gitId":"jack1e0"},"content":"    - `execute(Model model)`: Executes the `FilterCommand` by updating the filtered task list in model.","lastModifiedDate":"2023-10-27"},{"lineNumber":346,"author":{"gitId":"jack1e0"},"content":"    - `equals(Object other)`: Compares two `FilterCommand` objects for equality.","lastModifiedDate":"2023-10-27"},{"lineNumber":347,"author":{"gitId":"jack1e0"},"content":"    - `toString()`: Returns a string representation of the `FilterCommand`.","lastModifiedDate":"2023-10-27"},{"lineNumber":348,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":349,"author":{"gitId":"jack1e0"},"content":"### `FilterCommandParser` \u003ca name\u003d\"filtercommandparser\"\u003e\u003c/a\u003e","lastModifiedDate":"2023-11-12"},{"lineNumber":350,"author":{"gitId":"jack1e0"},"content":"- Purpose: Parses user input to create `FilterCommand` instances.","lastModifiedDate":"2023-10-27"},{"lineNumber":351,"author":{"gitId":"jack1e0"},"content":"- Key Methods:","lastModifiedDate":"2023-10-27"},{"lineNumber":352,"author":{"gitId":"jack1e0"},"content":"    - `parse(String args)`: Parses the user input using the `ArgumentMultimap` and returns a `FilterCommand` if the input is valid.","lastModifiedDate":"2023-10-27"},{"lineNumber":353,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":354,"author":{"gitId":"jack1e0"},"content":"### `TaskDueDatePredicate` \u003ca name\u003d\"taskduedatepredicate\"\u003e\u003c/a\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":355,"author":{"gitId":"jack1e0"},"content":"- Purpose: Represents the DueDate predicate. It contains a `DueDate`, whose value is determined by the user input.","lastModifiedDate":"2023-10-27"},{"lineNumber":356,"author":{"gitId":"jack1e0"},"content":"- Key Methods:","lastModifiedDate":"2023-10-27"},{"lineNumber":357,"author":{"gitId":"jack1e0"},"content":"    - `getDueDate()`: Returns the `DueDate` predicate.","lastModifiedDate":"2023-10-27"},{"lineNumber":358,"author":{"gitId":"jack1e0"},"content":"    - `test(Task task)`: Returns true if a given Task falls before or on the `DueDate`.","lastModifiedDate":"2023-10-27"},{"lineNumber":359,"author":{"gitId":"jack1e0"},"content":"    - `equals(Object other)`: Compares two `TaskDueDatePredicate` objects for equality.","lastModifiedDate":"2023-10-27"},{"lineNumber":360,"author":{"gitId":"jack1e0"},"content":"    - `toString()`: Returns a string representation of the `TaskDueDatePredicate`.","lastModifiedDate":"2023-10-27"},{"lineNumber":361,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":362,"author":{"gitId":"jack1e0"},"content":"### `TaskPriorityPredicate` \u003ca name\u003d\"taskprioritypredicate\"\u003e\u003c/a\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":363,"author":{"gitId":"jack1e0"},"content":"- Purpose: Represents the Priority predicate. It contains a `Priority`, whose value is determined by the user input.","lastModifiedDate":"2023-10-27"},{"lineNumber":364,"author":{"gitId":"jack1e0"},"content":"- Key Methods:","lastModifiedDate":"2023-10-27"},{"lineNumber":365,"author":{"gitId":"jack1e0"},"content":"    - `getPriority()`: Returns the `Priority` predicate.","lastModifiedDate":"2023-10-27"},{"lineNumber":366,"author":{"gitId":"jack1e0"},"content":"    - `test(Task task)`: Returns true if given Task has the same `Priority` as the predicate.","lastModifiedDate":"2023-10-27"},{"lineNumber":367,"author":{"gitId":"jack1e0"},"content":"    - `equals(Object other)`: Compares two `TaskPriorityPredicate` objects for equality.","lastModifiedDate":"2023-10-27"},{"lineNumber":368,"author":{"gitId":"jack1e0"},"content":"    - `toString()`: Returns a string representation of the `TaskPriorityPredicate`.","lastModifiedDate":"2023-10-27"},{"lineNumber":369,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":370,"author":{"gitId":"jack1e0"},"content":"### `TaskStatusPredicate` \u003ca name\u003d\"taskstatuspredicate\"\u003e\u003c/a\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":371,"author":{"gitId":"jack1e0"},"content":"- Purpose: Represents the Status predicate. It contains a `Status`, whose value is determined by the user input.","lastModifiedDate":"2023-10-27"},{"lineNumber":372,"author":{"gitId":"jack1e0"},"content":"- Key Methods:","lastModifiedDate":"2023-10-27"},{"lineNumber":373,"author":{"gitId":"jack1e0"},"content":"    - `getStatus()`: Returns the `Status` predicate.","lastModifiedDate":"2023-10-27"},{"lineNumber":374,"author":{"gitId":"jack1e0"},"content":"    - `test(Task task)`: Returns true if given Task has the same `Status` as the predicate.","lastModifiedDate":"2023-10-27"},{"lineNumber":375,"author":{"gitId":"jack1e0"},"content":"    - `equals(Object other)`: Compares two `TaskStatusPredicate` objects for equality.","lastModifiedDate":"2023-10-27"},{"lineNumber":376,"author":{"gitId":"jack1e0"},"content":"    - `toString()`: Returns a string representation of the `TaskStatusPredicate`.","lastModifiedDate":"2023-10-27"},{"lineNumber":377,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":378,"author":{"gitId":"jack1e0"},"content":"### `TaskRecurringTypePredicate` \u003ca name\u003d\"taskrecurringtypepredicate\"\u003e\u003c/a\u003e","lastModifiedDate":"2023-11-12"},{"lineNumber":379,"author":{"gitId":"jack1e0"},"content":"- Purpose: Represents the RecurringType predicate. It contains a `RecurringType`, whose value is determined by the user input.","lastModifiedDate":"2023-11-12"},{"lineNumber":380,"author":{"gitId":"jack1e0"},"content":"- Key Methods:","lastModifiedDate":"2023-11-12"},{"lineNumber":381,"author":{"gitId":"jack1e0"},"content":"    - `getRecurringType()`: Returns the `RecurringType` predicate.","lastModifiedDate":"2023-11-12"},{"lineNumber":382,"author":{"gitId":"jack1e0"},"content":"    - `test(Task task)`: Returns true if given Task has the same `RecurringType` as the predicate.","lastModifiedDate":"2023-11-12"},{"lineNumber":383,"author":{"gitId":"jack1e0"},"content":"    - `equals(Object other)`: Compares two `TaskRecurringTypePredicate` objects for equality.","lastModifiedDate":"2023-11-12"},{"lineNumber":384,"author":{"gitId":"jack1e0"},"content":"    - `toString()`: Returns a string representation of the `TaskRecurringTypePredicate`.","lastModifiedDate":"2023-11-12"},{"lineNumber":385,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":386,"author":{"gitId":"jack1e0"},"content":"### `CombinedPredicate` \u003ca name\u003d\"combinedpredicate\"\u003e\u003c/a\u003e","lastModifiedDate":"2023-11-12"},{"lineNumber":387,"author":{"gitId":"jack1e0"},"content":"- Purpose: Represents the combination of multiple predicates. It contains an `ArrayList\u003cPredicate\u003cTask\u003e\u003e`, which contains the predicates it considers.","lastModifiedDate":"2023-11-12"},{"lineNumber":388,"author":{"gitId":"jack1e0"},"content":"- Key Methods:","lastModifiedDate":"2023-11-12"},{"lineNumber":389,"author":{"gitId":"jack1e0"},"content":"    - `test(Task task)`: Returns true if given Task fulfills all the predicates in the ArrayList of predicates.","lastModifiedDate":"2023-11-12"},{"lineNumber":390,"author":{"gitId":"jack1e0"},"content":"    - `equals(Object other)`: Compares two `CombinedPredicate` objects for equality.","lastModifiedDate":"2023-11-12"},{"lineNumber":391,"author":{"gitId":"jack1e0"},"content":"    - `toString()`: Returns a string representation of the `CombinedPredicate`.","lastModifiedDate":"2023-11-12"},{"lineNumber":392,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":393,"author":{"gitId":"jack1e0"},"content":"### Usage \u003ca name\u003d\"usage\"\u003e\u003c/a\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":394,"author":{"gitId":"jack1e0"},"content":"To use the `FilterCommand` in the ProfPlan application, you can execute the following steps:","lastModifiedDate":"2023-10-27"},{"lineNumber":395,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":396,"author":{"gitId":"jack1e0"},"content":"1. Enter the \"filter\" command followed by \"d/\", \"p/\", \"s/\" and/or \"recur/\", for DueDate, Priority, Status and RecurringType respectively. Then, input the value of predicate, which must follow the formats of the criteria:","lastModifiedDate":"2023-11-12"},{"lineNumber":397,"author":{"gitId":"jack1e0"},"content":"    - DueDate: a date in the format dd-MM-yyyy","lastModifiedDate":"2023-10-27"},{"lineNumber":398,"author":{"gitId":"jack1e0"},"content":"    - Priority: an Integer from 1 to 10 inclusive","lastModifiedDate":"2023-10-27"},{"lineNumber":399,"author":{"gitId":"jack1e0"},"content":"    - Status: \"done\" or \"undone","lastModifiedDate":"2023-10-27"},{"lineNumber":400,"author":{"gitId":"jack1e0"},"content":"    - RecurringType: \"none\", \"daily\", \"weekly\", \"monthly\", or \"semesterly\"","lastModifiedDate":"2023-11-12"},{"lineNumber":401,"author":{"gitId":"jack1e0"},"content":"For example, \"filter d/01-01-2023 s/undone\" filters for tasks before and on 01-01-2023 that are undone.","lastModifiedDate":"2023-11-12"},{"lineNumber":402,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":403,"author":{"gitId":"jack1e0"},"content":"2. The `FilterCommand` will filter the task list in the model according to the predicate(s) applied.","lastModifiedDate":"2023-11-12"},{"lineNumber":404,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":405,"author":{"gitId":"jack1e0"},"content":"3. The application will provide feedback, indicating the successful filtering, and display the relevant tasks.","lastModifiedDate":"2023-10-27"},{"lineNumber":406,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":407,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":408,"author":{"gitId":"jack1e0"},"content":"## Help for Commands feature","lastModifiedDate":"2023-11-12"},{"lineNumber":409,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":410,"author":{"gitId":"jack1e0"},"content":"The detail listing mechanism is facilitated by the `HelpCommandParser` class, which implements the `Parser` interface. This `HelpCommandParser` overrides the `parse()` method in `Parser` and creates either an empty `HelpCommand`, or a `HelpCommand` with a `COMMAND_WORD` as a String. For example `help` or `help delete`.","lastModifiedDate":"2023-11-12"},{"lineNumber":411,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":412,"author":{"gitId":"jack1e0"},"content":"Hence, this will be facilitated by overloading the constructor in `HelpCommand` to either create an empty `HelpCommand`, or a `HelpCommand` with a `COMMAND_WORD`:","lastModifiedDate":"2023-11-12"},{"lineNumber":413,"author":{"gitId":"yarnmengnus"},"content":"* When an empty `HelpCommand` executes `execute()`, a `CommandResult` with `MESSAGE_USAGE` of all commands will be created.","lastModifiedDate":"2023-11-11"},{"lineNumber":414,"author":{"gitId":"yarnmengnus"},"content":"* When a `HelpCommand` with a `COMMAND_WORD` executes `execute()`, a `CommandResult` with the `MESSAGE_DETAIL` of the `Command` specified by the `COMMAND_WORD` will be created.","lastModifiedDate":"2023-11-11"},{"lineNumber":415,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":416,"author":{"gitId":"jack1e0"},"content":"The following activity diagram shows how the Help Command works:","lastModifiedDate":"2023-11-12"},{"lineNumber":417,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":418,"author":{"gitId":"yarnmengnus"},"content":"![HelpActivityDiagram](images/HelpActivity.png)","lastModifiedDate":"2023-11-11"},{"lineNumber":419,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":420,"author":{"gitId":"yarnmengnus"},"content":"### Design considerations:","lastModifiedDate":"2023-11-11"},{"lineNumber":421,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":422,"author":{"gitId":"yarnmengnus"},"content":"**Aspect: How to store `Command` details:**","lastModifiedDate":"2023-11-11"},{"lineNumber":423,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":424,"author":{"gitId":"yarnmengnus"},"content":"* **Alternative 1 (current choice): Store Command Details in each command.**","lastModifiedDate":"2023-11-11"},{"lineNumber":425,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":426,"author":{"gitId":"jack1e0"},"content":"  * Pros: Follows OOP principles.","lastModifiedDate":"2023-11-12"},{"lineNumber":427,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":428,"author":{"gitId":"jack1e0"},"content":"  * Cons: Changes will need to be propagated in Command Usage and Details format to all Commands individually.","lastModifiedDate":"2023-11-12"},{"lineNumber":429,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":430,"author":{"gitId":"jack1e0"},"content":"* **Alternative 2: Store all Command Details in a separate class.**","lastModifiedDate":"2023-11-12"},{"lineNumber":431,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":432,"author":{"gitId":"yarnmengnus"},"content":"  * Pros: Centralised area to view all Messages.","lastModifiedDate":"2023-11-11"},{"lineNumber":433,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":434,"author":{"gitId":"jack1e0"},"content":"  * Cons: Does not follow OOP principles. Future implementations that tap on these Details will take longer to implement.","lastModifiedDate":"2023-11-12"},{"lineNumber":435,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":436,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":437,"author":{"gitId":"yarnmengnus"},"content":"## Displaying statistics","lastModifiedDate":"2023-11-11"},{"lineNumber":438,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":439,"author":{"gitId":"yarnmengnus"},"content":"The statistics mechanism requires support from `Model`, which will provide `StatsCommand` the required statistics. Currently, this is done using a public getter `getCompletionRate()`. ","lastModifiedDate":"2023-11-11"},{"lineNumber":440,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":441,"author":{"gitId":"jack1e0"},"content":"When `StatsCommand` executes `execute()`, it calls this getter and returns a new `CommandResult` containing a formatted `String`, with the statistics retrieved.","lastModifiedDate":"2023-11-12"},{"lineNumber":442,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":443,"author":{"gitId":"yarnmengnus"},"content":"The following sequence diagram shows how the stats command works:","lastModifiedDate":"2023-11-11"},{"lineNumber":444,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":445,"author":{"gitId":"yarnmengnus"},"content":"![StatsSequenceDiagram](images/StatsSequenceDiagram.png)","lastModifiedDate":"2023-11-11"},{"lineNumber":446,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":447,"author":{"gitId":"yarnmengnus"},"content":"Here\u0027s a breakdown of the sequence:","lastModifiedDate":"2023-11-11"},{"lineNumber":448,"author":{"gitId":"yarnmengnus"},"content":"1. The `LogicManager` receives the command \"stats\" from the user.","lastModifiedDate":"2023-11-11"},{"lineNumber":449,"author":{"gitId":"yarnmengnus"},"content":"1. The `ProfPlanParser` parses the command and creates a `StatsCommand`.","lastModifiedDate":"2023-11-11"},{"lineNumber":450,"author":{"gitId":"yarnmengnus"},"content":"1. The `StatsCommand` is executed by `LogicManager`.","lastModifiedDate":"2023-11-11"},{"lineNumber":451,"author":{"gitId":"yarnmengnus"},"content":"1. The getter, `getCompletionRate()`, is called on `Model`. ","lastModifiedDate":"2023-11-11"},{"lineNumber":452,"author":{"gitId":"yarnmengnus"},"content":"1. `Model` returns a `double` containing the completion rate.","lastModifiedDate":"2023-11-11"},{"lineNumber":453,"author":{"gitId":"yarnmengnus"},"content":"1. A `CommandResult` is created and formatted to provide feedback to the user.","lastModifiedDate":"2023-11-11"},{"lineNumber":454,"author":{"gitId":"yarnmengnus"},"content":"1. The result is returned to the `LogicManager`.","lastModifiedDate":"2023-11-11"},{"lineNumber":455,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":456,"author":{"gitId":"yarnmengnus"},"content":"### Design considerations:","lastModifiedDate":"2023-11-11"},{"lineNumber":457,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":458,"author":{"gitId":"yarnmengnus"},"content":"**Aspect: How to retrieve statistics:**","lastModifiedDate":"2023-11-11"},{"lineNumber":459,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":460,"author":{"gitId":"yarnmengnus"},"content":"* **Alternative 1 (current choice): Use a public getter in Model.**","lastModifiedDate":"2023-11-11"},{"lineNumber":461,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":462,"author":{"gitId":"yarnmengnus"},"content":"  * Pros: Simple and readable.","lastModifiedDate":"2023-11-11"},{"lineNumber":463,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":464,"author":{"gitId":"yarnmengnus"},"content":"  * Cons: Exposes more of Model, which may result in unintended use by developers.","lastModifiedDate":"2023-11-11"},{"lineNumber":465,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":466,"author":{"gitId":"jack1e0"},"content":"* **Alternative 2: Retrieve a copy of the task list and calculate statistics as such.**","lastModifiedDate":"2023-11-12"},{"lineNumber":467,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":468,"author":{"gitId":"yarnmengnus"},"content":"  * Pros: List is not mutated. All calculations of Statistics is centralised under StatsCommand.","lastModifiedDate":"2023-11-11"},{"lineNumber":469,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":470,"author":{"gitId":"jack1e0"},"content":"  * Cons: Does not follow OOP principles. Operations regarding the list should be handled by the list.","lastModifiedDate":"2023-11-12"},{"lineNumber":471,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":472,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":473,"author":{"gitId":"jack1e0"},"content":"## \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2023-11-12"},{"lineNumber":474,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":475,"author":{"gitId":"jack1e0"},"content":"### Proposed Implementation","lastModifiedDate":"2023-11-12"},{"lineNumber":476,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":477,"author":{"gitId":"jack1e0"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedProfPlan`. It extends `ProfPlan` with an undo/redo history, stored internally as an `profPlanStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2023-11-12"},{"lineNumber":478,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":479,"author":{"gitId":"jack1e0"},"content":"* `VersionedProfPlan#commit()` — Saves the current tasklist state in its history.","lastModifiedDate":"2023-11-12"},{"lineNumber":480,"author":{"gitId":"jack1e0"},"content":"* `VersionedProfPlan#undo()` — Restores the previous tasklist state from its history.","lastModifiedDate":"2023-11-12"},{"lineNumber":481,"author":{"gitId":"jack1e0"},"content":"* `VersionedProfPlan#redo()` — Restores a previously undone tasklist state from its history.","lastModifiedDate":"2023-11-12"},{"lineNumber":482,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":483,"author":{"gitId":"jack1e0"},"content":"These operations are exposed in the `Model` interface as `Model#commitProfPlan()`, `Model#undoProfPlan()` and `Model#redoProfPlan()` respectively.","lastModifiedDate":"2023-11-12"},{"lineNumber":484,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":485,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":486,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":487,"author":{"gitId":"jack1e0"},"content":"Step 1. The user launches the application for the first time. The `VersionedProfPlan` will be initialized with the initial task list state, and the `currentStatePointer` pointing to that single task list state.","lastModifiedDate":"2023-11-12"},{"lineNumber":488,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":489,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":490,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":491,"author":{"gitId":"jack1e0"},"content":"Step 2. The user executes `delete 5` command to delete the 5th task in the tasklist. The `delete` command calls `Model#commitProfPlan()`, causing the modified state of the task list after the `delete 5` command executes to be saved in the `profPlanStateList`, and the `currentStatePointer` is shifted to the newly inserted tasklist state.","lastModifiedDate":"2023-11-12"},{"lineNumber":492,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":493,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":494,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":495,"author":{"gitId":"jack1e0"},"content":"Step 3. The user executes `add n/Grade assignment …​` to add a new task. The `add` command also calls `Model#commitProfPlan()`, causing another modified tasklist state to be saved into the `ProfPlanStateList`.","lastModifiedDate":"2023-11-12"},{"lineNumber":496,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":497,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":498,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":499,"author":{"gitId":"jack1e0"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitProfPlan()`, so the tasklist state will not be saved into the `profPlanStateList`.","lastModifiedDate":"2023-11-12"},{"lineNumber":500,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":501,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":502,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":503,"author":{"gitId":"jack1e0"},"content":"Step 4. The user now decides that adding the task was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoProfPlan()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous tasklist state, and restores the tasklist to that state.","lastModifiedDate":"2023-11-12"},{"lineNumber":504,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":505,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":506,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":507,"author":{"gitId":"jack1e0"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial ProfPlan state, then there are no previous ProfPlan states to restore. The `undo` command uses `Model#canUndoProfPlan()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the undo.","lastModifiedDate":"2023-11-12"},{"lineNumber":508,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":509,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":510,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":511,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":512,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":513,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":514,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":515,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":516,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":517,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":518,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":519,"author":{"gitId":"jack1e0"},"content":"The `redo` command does the opposite — it calls `Model#redoProfPlan()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the tasklist to that state.","lastModifiedDate":"2023-11-12"},{"lineNumber":520,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":521,"author":{"gitId":"jack1e0"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `profPlanStateList.size() - 1`, pointing to the latest tasklist state, then there are no undone ProfPlan states to restore. The `redo` command uses `Model#canRedoProfPlan()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2023-11-12"},{"lineNumber":522,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":523,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":524,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":525,"author":{"gitId":"jack1e0"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the tasklist, such as `list`, will usually not call `Model#commitProfPlan()`, `Model#undoProfPlan()` or `Model#redoProfPlan()`. Thus, the `profPlanStateList` remains unchanged.","lastModifiedDate":"2023-11-12"},{"lineNumber":526,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":527,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":528,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":529,"author":{"gitId":"jack1e0"},"content":"Step 6. The user executes `clear`, which calls `Model#commitProfPlan()`. Since the `currentStatePointer` is not pointing at the end of the `profPlanStateList`, all tasklist states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/Grade assignment …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2023-11-12"},{"lineNumber":530,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":531,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":532,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":533,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":534,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":535,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":536,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":537,"author":{"gitId":"jack1e0"},"content":"### Design considerations:","lastModifiedDate":"2023-11-12"},{"lineNumber":538,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":539,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":540,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":541,"author":{"gitId":"eyelessrhyme7"},"content":"* **Alternative 1 (current choice):** Saves the entire tasklist.","lastModifiedDate":"2023-10-17"},{"lineNumber":542,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":543,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":544,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":545,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":546,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":547,"author":{"gitId":"newway1814"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the task being deleted).","lastModifiedDate":"2023-10-16"},{"lineNumber":548,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":549,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":550,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":551,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":552,"author":{"gitId":"jack1e0"},"content":"## \\[Proposed\\] Task Archiving feature","lastModifiedDate":"2023-11-12"},{"lineNumber":553,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":554,"author":{"gitId":"jack1e0"},"content":"### Proposed Implementation","lastModifiedDate":"2023-11-12"},{"lineNumber":555,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":556,"author":{"gitId":"jack1e0"},"content":"The proposed task archiving function makes use of the `ArchivedProfPlan` class. It extends `ProfPlan`, storing a separate list of tasks that are archived.","lastModifiedDate":"2023-11-12"},{"lineNumber":557,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":558,"author":{"gitId":"jack1e0"},"content":"In addition, the `ModelManager`, which implements `Model`, has to include `ArchivedProfPlan`, in addition to `ProfPlan`, as one of its fields. ","lastModifiedDate":"2023-11-12"},{"lineNumber":559,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":560,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":561,"author":{"gitId":"jack1e0"},"content":"#### 1. Archiving tasks","lastModifiedDate":"2023-11-12"},{"lineNumber":562,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":563,"author":{"gitId":"jack1e0"},"content":"This is supported by the `ArchiveCommand` that extends `Command`, and implements this main operation:","lastModifiedDate":"2023-11-12"},{"lineNumber":564,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":565,"author":{"gitId":"jack1e0"},"content":"* `ArchiveCommand#execute(Model model)` — Archives the selected task, i.e. deleting it from ProfPlan and adding it to ArchivedProfPlan.","lastModifiedDate":"2023-11-12"},{"lineNumber":566,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":567,"author":{"gitId":"jack1e0"},"content":"This operation invodes a method in the `Model` interface, namely `Model#archiveTask(Task target)`.","lastModifiedDate":"2023-11-12"},{"lineNumber":568,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":569,"author":{"gitId":"jack1e0"},"content":"To parse the Archive Command, there is the `ArchiveCommandParser` that implements `Parser`, which supports this main operation:","lastModifiedDate":"2023-11-12"},{"lineNumber":570,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":571,"author":{"gitId":"jack1e0"},"content":"* `ArchiveCommandParser#parse(String args)` — Parses the user input to return an `ArchiveCommand`.","lastModifiedDate":"2023-11-12"},{"lineNumber":572,"author":{"gitId":"jack1e0"},"content":"  * Valid arguments: Integers (task index), or \"all\"","lastModifiedDate":"2023-11-12"},{"lineNumber":573,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":574,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":575,"author":{"gitId":"jack1e0"},"content":"The sequence diagram below shows how archiving a task works.","lastModifiedDate":"2023-11-12"},{"lineNumber":576,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":577,"author":{"gitId":"jack1e0"},"content":"![ArchiveSequenceDiagram](images/ArchiveSequenceDiagram.png)","lastModifiedDate":"2023-11-12"},{"lineNumber":578,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":579,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":580,"author":{"gitId":"jack1e0"},"content":"#### 2. List archived tasks","lastModifiedDate":"2023-11-12"},{"lineNumber":581,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":582,"author":{"gitId":"jack1e0"},"content":"This is supported by the `ListArchivesCommand` that extends `Command`, and implements this main operation:","lastModifiedDate":"2023-11-12"},{"lineNumber":583,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":584,"author":{"gitId":"jack1e0"},"content":"* `ListArchivesCommand#execute(Model model)` — Displays all archived tasks.","lastModifiedDate":"2023-11-12"},{"lineNumber":585,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":586,"author":{"gitId":"jack1e0"},"content":"This operation invodes a method in the `Model` interface, namely `Model#getArchivedTasks()`. ","lastModifiedDate":"2023-11-12"},{"lineNumber":587,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":588,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":589,"author":{"gitId":"jack1e0"},"content":"The sequence diagram below shows how displaying archived tasks works.","lastModifiedDate":"2023-11-12"},{"lineNumber":590,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":591,"author":{"gitId":"jack1e0"},"content":"![ListArchivesSequenceDiagram](images/ListArchivesSequenceDiagram.png)","lastModifiedDate":"2023-11-12"},{"lineNumber":592,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":593,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":594,"author":{"gitId":"jack1e0"},"content":"#### 3. Delete archived tasks","lastModifiedDate":"2023-11-12"},{"lineNumber":595,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":596,"author":{"gitId":"jack1e0"},"content":"This uses similar implementation as the delete function on ProfPlan, but acting on ArchivedProfPlan instead.","lastModifiedDate":"2023-11-12"},{"lineNumber":597,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":598,"author":{"gitId":"jack1e0"},"content":"It is supported by the `DeleteArchiveCommand` that extends `Command`, and implements this main operation:","lastModifiedDate":"2023-11-12"},{"lineNumber":599,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":600,"author":{"gitId":"jack1e0"},"content":"* `DeleteArchiveCommand#execute(Model model)` — Deletes the selected task from ArchivedProfPlan.","lastModifiedDate":"2023-11-12"},{"lineNumber":601,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":602,"author":{"gitId":"jack1e0"},"content":"This operation invodes a method in the `Model` interface, namely `Model#deleteArchive(Task target)`.","lastModifiedDate":"2023-11-12"},{"lineNumber":603,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":604,"author":{"gitId":"jack1e0"},"content":"To parse the DeleteArchive Command, there is the `DeleteArchiveCommandParser` that implements `Parser`, which supports this main operation:","lastModifiedDate":"2023-11-12"},{"lineNumber":605,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":606,"author":{"gitId":"jack1e0"},"content":"* `DeleteArchiveCommandParser#parse(String args)` — Parses the user input to return an `DeleteArchiveCommand`.","lastModifiedDate":"2023-11-12"},{"lineNumber":607,"author":{"gitId":"jack1e0"},"content":"  * Valid arguments: Integers (task index), or \"all\"","lastModifiedDate":"2023-11-12"},{"lineNumber":608,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":609,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":610,"author":{"gitId":"jack1e0"},"content":"#### 4. Restore archived tasks","lastModifiedDate":"2023-11-12"},{"lineNumber":611,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":612,"author":{"gitId":"jack1e0"},"content":"This uses similar implementation as the archive function, but reversing ProfPlan and ArchivedProfPlan.","lastModifiedDate":"2023-11-12"},{"lineNumber":613,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":614,"author":{"gitId":"jack1e0"},"content":"It is supported by the `RestoreArchiveCommand` that extends `Command`, and implements this main operation:","lastModifiedDate":"2023-11-12"},{"lineNumber":615,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":616,"author":{"gitId":"jack1e0"},"content":"* `RestoreArchiveCommand#execute(Model model)` — Restores the selected archived task, i.e. deleting it from ArchivedProfPlan and adding it to ProfPlan.","lastModifiedDate":"2023-11-12"},{"lineNumber":617,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":618,"author":{"gitId":"jack1e0"},"content":"This operation invodes a method in the `Model` interface, namely `Model#restoreArchiveTask(Task target)`.","lastModifiedDate":"2023-11-12"},{"lineNumber":619,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":620,"author":{"gitId":"jack1e0"},"content":"To parse the Archive Command, there is the `RestoreArchiveCommandParser` that implements `Parser`, which supports this main operation:","lastModifiedDate":"2023-11-12"},{"lineNumber":621,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":622,"author":{"gitId":"jack1e0"},"content":"* `RestoreArchiveCommandParser#parse(String args)` — Parses the user input to return an `RestoreArchiveCommand`.","lastModifiedDate":"2023-11-12"},{"lineNumber":623,"author":{"gitId":"jack1e0"},"content":"  * Valid arguments: Integers (task index), or \"all\"","lastModifiedDate":"2023-11-12"},{"lineNumber":624,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":625,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":626,"author":{"gitId":"jack1e0"},"content":"### Design considerations:","lastModifiedDate":"2023-11-12"},{"lineNumber":627,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":628,"author":{"gitId":"jack1e0"},"content":"**Aspect: How to store archived tasks:**","lastModifiedDate":"2023-11-12"},{"lineNumber":629,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":630,"author":{"gitId":"jack1e0"},"content":"* **Alternative 1 (current choice):** Saves archived tasks in a separate tasklist from the main ProfPlan, named ArchivedProfPlan.","lastModifiedDate":"2023-11-12"},{"lineNumber":631,"author":{"gitId":"jack1e0"},"content":"  * Pros:","lastModifiedDate":"2023-11-12"},{"lineNumber":632,"author":{"gitId":"jack1e0"},"content":"    * Better performance if many tasks are archived, and methods invoked on ProfPlan will not affect tasks in ArchivedProfPlan.","lastModifiedDate":"2023-11-12"},{"lineNumber":633,"author":{"gitId":"jack1e0"},"content":"    * Clear segregation between archived and normal tasks.","lastModifiedDate":"2023-11-12"},{"lineNumber":634,"author":{"gitId":"jack1e0"},"content":"  * Cons: Harder to implement.","lastModifiedDate":"2023-11-12"},{"lineNumber":635,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":636,"author":{"gitId":"jack1e0"},"content":"* **Alternative 2:** Each task have an archive flag, which indicates whether they are archived. Archived tasks are not shown in the main ProfPlan.","lastModifiedDate":"2023-11-12"},{"lineNumber":637,"author":{"gitId":"jack1e0"},"content":"  * Pros: Easier to implement as it is similar to tagging tasks.","lastModifiedDate":"2023-11-12"},{"lineNumber":638,"author":{"gitId":"jack1e0"},"content":"  * Cons: Performance issues in the main ProfPlan if many tasks are archived.","lastModifiedDate":"2023-11-12"},{"lineNumber":639,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":640,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":641,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":642,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":643,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":644,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":645,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":646,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":647,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":648,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":649,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":650,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":651,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":652,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":653,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":654,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":655,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":656,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":657,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":658,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":659,"author":{"gitId":"jack1e0"},"content":"* needs to manage a significant number of tasks","lastModifiedDate":"2023-11-12"},{"lineNumber":660,"author":{"gitId":"jack1e0"},"content":"* prefer to organise and classify tasks","lastModifiedDate":"2023-11-12"},{"lineNumber":661,"author":{"gitId":"jack1e0"},"content":"* want to visualise relationships between tasks","lastModifiedDate":"2023-11-12"},{"lineNumber":662,"author":{"gitId":"-"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2020-05-23"},{"lineNumber":663,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2020-05-23"},{"lineNumber":664,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26"},{"lineNumber":665,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23"},{"lineNumber":666,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":667,"author":{"gitId":"eyelessrhyme7"},"content":"**Value proposition**: Professors often need to plan and organise their course modules, including lecture materials, and research. ProfPlan can help them create and manage their academic tasks seamlessly through the CLI, which is optimised and helps in faster task management. It is tailored to professors’ requirements and task categories, helping them prioritise.","lastModifiedDate":"2023-10-02"},{"lineNumber":668,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":669,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":670,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":671,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":672,"author":{"gitId":"jack1e0"},"content":"**Priorities:**","lastModifiedDate":"2023-11-12"},{"lineNumber":673,"author":{"gitId":"jack1e0"},"content":"* High (must have) - `* * *`","lastModifiedDate":"2023-11-12"},{"lineNumber":674,"author":{"gitId":"jack1e0"},"content":"* Medium (nice to have) - `* *`","lastModifiedDate":"2023-11-12"},{"lineNumber":675,"author":{"gitId":"jack1e0"},"content":"* Low (unlikely to have) - `*`","lastModifiedDate":"2023-11-12"},{"lineNumber":676,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":677,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":678,"author":{"gitId":"kiatkat"},"content":"| Priority | As a …    | I want to …                                                 | So that I can…                          |","lastModifiedDate":"2023-10-02"},{"lineNumber":679,"author":{"gitId":"kiatkat"},"content":"|----------|-----------|-------------------------------------------------------------|-----------------------------------------|","lastModifiedDate":"2023-10-02"},{"lineNumber":680,"author":{"gitId":"kiatkat"},"content":"| `* * *`  | professor | be able to create a new task                                | keep track of them in a list            |","lastModifiedDate":"2023-10-02"},{"lineNumber":681,"author":{"gitId":"kiatkat"},"content":"| `* * *`  | professor | assign priorities to tasks in my list                       | gauge task urgency                      |","lastModifiedDate":"2023-10-02"},{"lineNumber":682,"author":{"gitId":"kiatkat"},"content":"| `* * *`  | professor | categorise/tag my tasks                                     | segregate and classify tasks            |","lastModifiedDate":"2023-10-02"},{"lineNumber":683,"author":{"gitId":"kiatkat"},"content":"| `* * *`  | professor | mark tasks as done/undone                                   | keep track of what has been completed   |","lastModifiedDate":"2023-10-02"},{"lineNumber":684,"author":{"gitId":"kiatkat"},"content":"| `* * *`  | professor | delete tasks                                                | clear up clutter                        |","lastModifiedDate":"2023-10-02"},{"lineNumber":685,"author":{"gitId":"kiatkat"},"content":"| `* *`    | professor | filter tasks by due date                                    | manage deadlines effectively            |","lastModifiedDate":"2023-10-02"},{"lineNumber":686,"author":{"gitId":"kiatkat"},"content":"| `* *`    | professor | search for tasks                                            | find the task I want to work on quickly |","lastModifiedDate":"2023-10-02"},{"lineNumber":687,"author":{"gitId":"kiatkat"},"content":"| `*`      | professor | attach reference materials (filepath) or links to each task | access reference material easily        |","lastModifiedDate":"2023-10-02"},{"lineNumber":688,"author":{"gitId":"kiatkat"},"content":"| `*`      | professor | create subtasks within the task list                        | have better organisation                |","lastModifiedDate":"2023-10-02"},{"lineNumber":689,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":690,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":691,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":692,"author":{"gitId":"kiatkat"},"content":"For all use cases below, the **System** is `ProfPlan` and the **Actor** is the `user`, unless specified otherwise.","lastModifiedDate":"2023-10-02"},{"lineNumber":693,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":694,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":695,"author":{"gitId":"eyelessrhyme7"},"content":"**Use Case: Create a New Task**","lastModifiedDate":"2023-10-02"},{"lineNumber":696,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":697,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":698,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":699,"author":{"gitId":"eyelessrhyme7"},"content":"1. User requests to create a new task with specified details.","lastModifiedDate":"2023-10-02"},{"lineNumber":700,"author":{"gitId":"jack1e0"},"content":"2. ProfPlan validates the input format for the given fields.","lastModifiedDate":"2023-11-12"},{"lineNumber":701,"author":{"gitId":"eyelessrhyme7"},"content":"3. ProfPlan creates the new task and adds it to the task list.","lastModifiedDate":"2023-10-02"},{"lineNumber":702,"author":{"gitId":"eyelessrhyme7"},"content":"4. ProfPlan displays a confirmation message with the updated task list.","lastModifiedDate":"2023-10-02"},{"lineNumber":703,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":704,"author":{"gitId":"-"},"content":"   Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":705,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":706,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":707,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":708,"author":{"gitId":"jack1e0"},"content":"* **2a.** User enters a field with invalid format.","lastModifiedDate":"2023-11-12"},{"lineNumber":709,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":710,"author":{"gitId":"eyelessrhyme7"},"content":"    * **2a1.** ProfPlan displays an error message and provides guidance on the correct format.","lastModifiedDate":"2023-10-02"},{"lineNumber":711,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":712,"author":{"gitId":"eyelessrhyme7"},"content":"      *Use case ends.*","lastModifiedDate":"2023-10-02"},{"lineNumber":713,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":714,"author":{"gitId":"eyelessrhyme7"},"content":"* **3a.** ProfPlan encounters an internal error while creating the task.","lastModifiedDate":"2023-10-02"},{"lineNumber":715,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":716,"author":{"gitId":"eyelessrhyme7"},"content":"    * **3a1.** ProfPlan displays an error message indicating the task creation failed.","lastModifiedDate":"2023-10-02"},{"lineNumber":717,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":718,"author":{"gitId":"eyelessrhyme7"},"content":"      *Use case ends.*","lastModifiedDate":"2023-10-02"},{"lineNumber":719,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":720,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":721,"author":{"gitId":"jack1e0"},"content":"**Use Case: Edit a Task**","lastModifiedDate":"2023-11-12"},{"lineNumber":722,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":723,"author":{"gitId":"kiatkat"},"content":"**MSS**","lastModifiedDate":"2023-10-02"},{"lineNumber":724,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":725,"author":{"gitId":"jack1e0"},"content":"1. User requests to edit a task.","lastModifiedDate":"2023-11-12"},{"lineNumber":726,"author":{"gitId":"jack1e0"},"content":"2. ProfPlan validates the input format for the task number and the specified field(s).","lastModifiedDate":"2023-11-12"},{"lineNumber":727,"author":{"gitId":"jack1e0"},"content":"3. ProfPlan assigns new value(s) to the specified field(s) of the task.","lastModifiedDate":"2023-11-12"},{"lineNumber":728,"author":{"gitId":"jack1e0"},"content":"4. ProfPlan displays a confirmation message with the updated task.","lastModifiedDate":"2023-11-12"},{"lineNumber":729,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":730,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":731,"author":{"gitId":"kiatkat"},"content":"   Use case ends.","lastModifiedDate":"2023-10-02"},{"lineNumber":732,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":733,"author":{"gitId":"kiatkat"},"content":"**Extensions**","lastModifiedDate":"2023-10-02"},{"lineNumber":734,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":735,"author":{"gitId":"jack1e0"},"content":"* 2a. User specifies a task number that is outside the list indices or provides an invalid input.","lastModifiedDate":"2023-11-12"},{"lineNumber":736,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":737,"author":{"gitId":"jack1e0"},"content":"    * 2a1. ProfPlan displays an error message to indicate invalid input.","lastModifiedDate":"2023-11-12"},{"lineNumber":738,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":739,"author":{"gitId":"kiatkat"},"content":"      Use case ends.","lastModifiedDate":"2023-10-02"},{"lineNumber":740,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":741,"author":{"gitId":"jack1e0"},"content":"* 2b. User requests to edit a task when there are no tasks in the list.","lastModifiedDate":"2023-11-12"},{"lineNumber":742,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":743,"author":{"gitId":"jack1e0"},"content":"    * 2b1. ProfPlan displays an error message to indicate that there are no tasks.","lastModifiedDate":"2023-11-12"},{"lineNumber":744,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":745,"author":{"gitId":"kiatkat"},"content":"      Use case ends.","lastModifiedDate":"2023-10-02"},{"lineNumber":746,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":747,"author":{"gitId":"jack1e0"},"content":"* 3a. ProfPlan encounters an internal error while updating new values.","lastModifiedDate":"2023-11-12"},{"lineNumber":748,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":749,"author":{"gitId":"jack1e0"},"content":"    * 3a1. ProfPlan displays an error message to indicate edit task failed.","lastModifiedDate":"2023-11-12"},{"lineNumber":750,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":751,"author":{"gitId":"kiatkat"},"content":"      Use case ends.","lastModifiedDate":"2023-10-02"},{"lineNumber":752,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":753,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":754,"author":{"gitId":"jack1e0"},"content":"**Use case: Find a Task**","lastModifiedDate":"2023-11-12"},{"lineNumber":755,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":756,"author":{"gitId":"eyelessrhyme7"},"content":"**MSS**","lastModifiedDate":"2023-10-02"},{"lineNumber":757,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":758,"author":{"gitId":"eyelessrhyme7"},"content":"1. User requests to find tasks matching certain search term(s).","lastModifiedDate":"2023-10-02"},{"lineNumber":759,"author":{"gitId":"eyelessrhyme7"},"content":"2. ProfPlan displays a list of tasks that contain the search term(s).","lastModifiedDate":"2023-10-02"},{"lineNumber":760,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":761,"author":{"gitId":"eyelessrhyme7"},"content":"   Use case ends.","lastModifiedDate":"2023-10-02"},{"lineNumber":762,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":763,"author":{"gitId":"eyelessrhyme7"},"content":"**Extensions**","lastModifiedDate":"2023-10-02"},{"lineNumber":764,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":765,"author":{"gitId":"eyelessrhyme7"},"content":"* 2a. There are no tasks that match the search term(s).","lastModifiedDate":"2023-10-02"},{"lineNumber":766,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":767,"author":{"gitId":"eyelessrhyme7"},"content":"  * 2a1. ProfPlan displays an empty list, and informs the user that the search failed to find matches.","lastModifiedDate":"2023-10-02"},{"lineNumber":768,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":769,"author":{"gitId":"eyelessrhyme7"},"content":"  *Use case ends.*","lastModifiedDate":"2023-10-02"},{"lineNumber":770,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":771,"author":{"gitId":"newway1814"},"content":"**Use Case: Mark Task as Done/Undone**","lastModifiedDate":"2023-10-02"},{"lineNumber":772,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":773,"author":{"gitId":"jack1e0"},"content":"*Preconditions: There is at least one task in the task list.*","lastModifiedDate":"2023-11-12"},{"lineNumber":774,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":775,"author":{"gitId":"newway1814"},"content":"**MSS**","lastModifiedDate":"2023-10-02"},{"lineNumber":776,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":777,"author":{"gitId":"newway1814"},"content":"1. User requests to list tasks.","lastModifiedDate":"2023-10-02"},{"lineNumber":778,"author":{"gitId":"newway1814"},"content":"2. ProfPlan shows a list of tasks.","lastModifiedDate":"2023-10-02"},{"lineNumber":779,"author":{"gitId":"newway1814"},"content":"3. User selects a task to mark as done or undone by specifying its number in the list.","lastModifiedDate":"2023-10-02"},{"lineNumber":780,"author":{"gitId":"newway1814"},"content":"4. ProfPlan updates the task\u0027s completion status accordingly.","lastModifiedDate":"2023-10-02"},{"lineNumber":781,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":782,"author":{"gitId":"newway1814"},"content":"   Use case ends.","lastModifiedDate":"2023-10-02"},{"lineNumber":783,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":784,"author":{"gitId":"newway1814"},"content":"**Extensions**","lastModifiedDate":"2023-10-02"},{"lineNumber":785,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":786,"author":{"gitId":"eyelessrhyme7"},"content":"* 3a. User specifies a task number that is outside the list indices or provides an invalid input.","lastModifiedDate":"2023-10-02"},{"lineNumber":787,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":788,"author":{"gitId":"eyelessrhyme7"},"content":"    * 3a1. ProfPlan displays an error message.","lastModifiedDate":"2023-10-02"},{"lineNumber":789,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":790,"author":{"gitId":"newway1814"},"content":"      Use case ends.","lastModifiedDate":"2023-10-02"},{"lineNumber":791,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":792,"author":{"gitId":"eyelessrhyme7"},"content":"* 3b. User attempts to mark a task as done/undone when there are no tasks in the list.","lastModifiedDate":"2023-10-02"},{"lineNumber":793,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":794,"author":{"gitId":"eyelessrhyme7"},"content":"    * 3b1. ProfPlan displays an error message.","lastModifiedDate":"2023-10-02"},{"lineNumber":795,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":796,"author":{"gitId":"newway1814"},"content":"      Use case ends.","lastModifiedDate":"2023-10-02"},{"lineNumber":797,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":798,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":799,"author":{"gitId":"newway1814"},"content":"**Use Case: Delete Task/Delete All Tasks**","lastModifiedDate":"2023-10-02"},{"lineNumber":800,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":801,"author":{"gitId":"jack1e0"},"content":"*Preconditions: There is at least one task in the task list.*","lastModifiedDate":"2023-11-12"},{"lineNumber":802,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":803,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":804,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":805,"author":{"gitId":"newway1814"},"content":"1. User requests to list tasks.","lastModifiedDate":"2023-10-02"},{"lineNumber":806,"author":{"gitId":"newway1814"},"content":"2. ProfPlan shows a list of tasks.","lastModifiedDate":"2023-10-02"},{"lineNumber":807,"author":{"gitId":"newway1814"},"content":"3. User chooses to delete a specific task by specifying its number in the list or requests to delete all tasks.","lastModifiedDate":"2023-10-02"},{"lineNumber":808,"author":{"gitId":"newway1814"},"content":"4. ProfPlan performs the deletion as per the user\u0027s request.","lastModifiedDate":"2023-10-02"},{"lineNumber":809,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":810,"author":{"gitId":"-"},"content":"   Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":811,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":812,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":813,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":814,"author":{"gitId":"eyelessrhyme7"},"content":"* 3a. User specifies a task number that is outside the list indices or provides an invalid input.","lastModifiedDate":"2023-10-02"},{"lineNumber":815,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":816,"author":{"gitId":"eyelessrhyme7"},"content":"    * 3a1. ProfPlan displays an error message.","lastModifiedDate":"2023-10-02"},{"lineNumber":817,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":818,"author":{"gitId":"-"},"content":"      Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":819,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":820,"author":{"gitId":"eyelessrhyme7"},"content":"* 3b. User requests to delete a task when there are no tasks in the list.","lastModifiedDate":"2023-10-02"},{"lineNumber":821,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":822,"author":{"gitId":"eyelessrhyme7"},"content":"    * 3b1. ProfPlan displays an error message.","lastModifiedDate":"2023-10-02"},{"lineNumber":823,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":824,"author":{"gitId":"newway1814"},"content":"      Use case ends.","lastModifiedDate":"2023-10-02"},{"lineNumber":825,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":826,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":827,"author":{"gitId":"jack1e0"},"content":"**Use Case: Filter Tasks based on Due Date**","lastModifiedDate":"2023-11-12"},{"lineNumber":828,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":829,"author":{"gitId":"jack1e0"},"content":"**MSS**","lastModifiedDate":"2023-10-03"},{"lineNumber":830,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":831,"author":{"gitId":"jack1e0"},"content":"1. User requests to filter task based on due date.","lastModifiedDate":"2023-11-12"},{"lineNumber":832,"author":{"gitId":"jack1e0"},"content":"2. ProfPlan validates the input format for the date.","lastModifiedDate":"2023-10-03"},{"lineNumber":833,"author":{"gitId":"jack1e0"},"content":"3. ProfPlan performs the filter and display tasks that fall before and on the specified date.","lastModifiedDate":"2023-11-12"},{"lineNumber":834,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":835,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":836,"author":{"gitId":"jack1e0"},"content":"   Use case ends.","lastModifiedDate":"2023-10-03"},{"lineNumber":837,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":838,"author":{"gitId":"jack1e0"},"content":"**Extensions**","lastModifiedDate":"2023-10-03"},{"lineNumber":839,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":840,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":841,"author":{"gitId":"jack1e0"},"content":"* 2a. User provides an invalid date input.","lastModifiedDate":"2023-10-03"},{"lineNumber":842,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":843,"author":{"gitId":"jack1e0"},"content":"    * 2a1. ProfPlan displays an error message to indicate invalid input.","lastModifiedDate":"2023-10-03"},{"lineNumber":844,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":845,"author":{"gitId":"jack1e0"},"content":"      Use case ends.","lastModifiedDate":"2023-10-03"},{"lineNumber":846,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":847,"author":{"gitId":"jack1e0"},"content":"* 3a. User requests to filter tasks when there are no tasks in the list.","lastModifiedDate":"2023-10-03"},{"lineNumber":848,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":849,"author":{"gitId":"jack1e0"},"content":"    * 3a1. ProfPlan displays an empty list.","lastModifiedDate":"2023-11-12"},{"lineNumber":850,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":851,"author":{"gitId":"jack1e0"},"content":"      Use case ends.","lastModifiedDate":"2023-10-03"},{"lineNumber":852,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":853,"author":{"gitId":"jack1e0"},"content":"* 3b. There are tasks in the list but no tasks before the specified date.","lastModifiedDate":"2023-10-03"},{"lineNumber":854,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":855,"author":{"gitId":"jack1e0"},"content":"    * 3b1. ProfPlan displays an empty list.","lastModifiedDate":"2023-11-12"},{"lineNumber":856,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":857,"author":{"gitId":"yarnmengnus"},"content":"      Use case ends.","lastModifiedDate":"2023-10-03"},{"lineNumber":858,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":859,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":860,"author":{"gitId":"yarnmengnus"},"content":"**Use Case: Attaching a link to a Task**","lastModifiedDate":"2023-10-03"},{"lineNumber":861,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":862,"author":{"gitId":"jack1e0"},"content":"*Preconditions: There is at least one task in the task list.*","lastModifiedDate":"2023-11-12"},{"lineNumber":863,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":864,"author":{"gitId":"yarnmengnus"},"content":"**MSS**","lastModifiedDate":"2023-10-03"},{"lineNumber":865,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":866,"author":{"gitId":"yarnmengnus"},"content":"1. User requests to list tasks.","lastModifiedDate":"2023-10-03"},{"lineNumber":867,"author":{"gitId":"yarnmengnus"},"content":"2. ProfPlan shows a list of tasks.","lastModifiedDate":"2023-10-03"},{"lineNumber":868,"author":{"gitId":"yarnmengnus"},"content":"3. User requests to attach a link to a task.","lastModifiedDate":"2023-10-03"},{"lineNumber":869,"author":{"gitId":"yarnmengnus"},"content":"4. ProfPlan attaches the link as per the user\u0027s request.","lastModifiedDate":"2023-10-03"},{"lineNumber":870,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":871,"author":{"gitId":"yarnmengnus"},"content":"* 3a. User specifies a task number that is outside the list indices or provides an invalid input.","lastModifiedDate":"2023-10-03"},{"lineNumber":872,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":873,"author":{"gitId":"yarnmengnus"},"content":"    * 3a1. ProfPlan displays an error message.","lastModifiedDate":"2023-10-03"},{"lineNumber":874,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":875,"author":{"gitId":"yarnmengnus"},"content":"      Use case ends.","lastModifiedDate":"2023-10-03"},{"lineNumber":876,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":877,"author":{"gitId":"yarnmengnus"},"content":"* 3b. User requests to attach a link to a task when there are no tasks in the list.","lastModifiedDate":"2023-10-03"},{"lineNumber":878,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":879,"author":{"gitId":"yarnmengnus"},"content":"    * 3b1. ProfPlan displays an error message.","lastModifiedDate":"2023-10-03"},{"lineNumber":880,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":881,"author":{"gitId":"yarnmengnus"},"content":"      Use case ends.","lastModifiedDate":"2023-10-03"},{"lineNumber":882,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":883,"author":{"gitId":"jack1e0"},"content":"* 3c. User requests to attach an invalid link to a task.","lastModifiedDate":"2023-11-12"},{"lineNumber":884,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":885,"author":{"gitId":"yarnmengnus"},"content":"    * 3c1. ProfPlan displays an error message.","lastModifiedDate":"2023-10-03"},{"lineNumber":886,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":887,"author":{"gitId":"yarnmengnus"},"content":"      Use case ends.","lastModifiedDate":"2023-10-03"},{"lineNumber":888,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":889,"author":{"gitId":"kiatkat"},"content":"**Use Case: Changing a setting**","lastModifiedDate":"2023-11-12"},{"lineNumber":890,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":891,"author":{"gitId":"kiatkat"},"content":"**MSS**","lastModifiedDate":"2023-11-12"},{"lineNumber":892,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":893,"author":{"gitId":"kiatkat"},"content":"1. User requests to update a setting with a new value.","lastModifiedDate":"2023-11-12"},{"lineNumber":894,"author":{"gitId":"kiatkat"},"content":"2. ProfPlan updates the specified setting with the provided value.","lastModifiedDate":"2023-11-12"},{"lineNumber":895,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":896,"author":{"gitId":"kiatkat"},"content":"   Use case ends.","lastModifiedDate":"2023-11-12"},{"lineNumber":897,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":898,"author":{"gitId":"kiatkat"},"content":"**Extensions:**","lastModifiedDate":"2023-11-12"},{"lineNumber":899,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":900,"author":{"gitId":"kiatkat"},"content":"* 1a. User specifies a nonexistent setting, or an invalid value.","lastModifiedDate":"2023-11-12"},{"lineNumber":901,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":902,"author":{"gitId":"kiatkat"},"content":"  * 1a1. ProfPlan displays an error message.","lastModifiedDate":"2023-11-12"},{"lineNumber":903,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":904,"author":{"gitId":"kiatkat"},"content":"    Use case ends.","lastModifiedDate":"2023-11-12"},{"lineNumber":905,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":906,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":907,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":908,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":909,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":910,"author":{"gitId":"newway1814"},"content":"#### Performance","lastModifiedDate":"2023-10-02"},{"lineNumber":911,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":912,"author":{"gitId":"newway1814"},"content":"- **Response Time:** ProfPlan shall respond to user commands within 2 seconds under normal system load conditions. This response time includes task creation, task modification, and task retrieval operations.","lastModifiedDate":"2023-10-02"},{"lineNumber":913,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":914,"author":{"gitId":"newway1814"},"content":"- **Scalability:** The application should be able to handle a growing number of tasks and users efficiently. It should scale gracefully without significant performance degradation.","lastModifiedDate":"2023-10-02"},{"lineNumber":915,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":916,"author":{"gitId":"newway1814"},"content":"#### Reliability","lastModifiedDate":"2023-10-02"},{"lineNumber":917,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":918,"author":{"gitId":"newway1814"},"content":"- **Availability:** ProfPlan should be available for use 24/7, with planned maintenance windows communicated to users in advance. The application should have an uptime of at least 99.5%.","lastModifiedDate":"2023-10-02"},{"lineNumber":919,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":920,"author":{"gitId":"newway1814"},"content":"- **Error Handling:** The application should provide informative error messages to users when they input incorrect or invalid commands. It should gracefully handle errors and exceptions without crashing.","lastModifiedDate":"2023-10-02"},{"lineNumber":921,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":922,"author":{"gitId":"newway1814"},"content":"#### Security","lastModifiedDate":"2023-10-02"},{"lineNumber":923,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":924,"author":{"gitId":"newway1814"},"content":"- **Data Protection:** ProfPlan should ensure the security and confidentiality of user data. User passwords and sensitive information should be stored securely using industry-standard encryption techniques.","lastModifiedDate":"2023-10-02"},{"lineNumber":925,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":926,"author":{"gitId":"newway1814"},"content":"- **Authentication:** Users should be required to log in with a valid username and password to access their task lists. Unauthorized access to user data should be prevented.","lastModifiedDate":"2023-10-02"},{"lineNumber":927,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":928,"author":{"gitId":"newway1814"},"content":"#### Compatibility","lastModifiedDate":"2023-10-02"},{"lineNumber":929,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":930,"author":{"gitId":"newway1814"},"content":"- **Java Version:** ProfPlan should be compatible with Java JDK 11 or higher to ensure optimal performance and support for the latest features and security updates.","lastModifiedDate":"2023-10-02"},{"lineNumber":931,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":932,"author":{"gitId":"newway1814"},"content":"#### Usability","lastModifiedDate":"2023-10-02"},{"lineNumber":933,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":934,"author":{"gitId":"newway1814"},"content":"- **User-Friendly Interface:** The CLI interface should be intuitive and easy to use, with clear and concise prompts, error messages, and help documentation.","lastModifiedDate":"2023-10-02"},{"lineNumber":935,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":936,"author":{"gitId":"newway1814"},"content":"- **Accessibility:** The application should be designed to be accessible to users with disabilities, following best practices for accessibility standards.","lastModifiedDate":"2023-10-02"},{"lineNumber":937,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":938,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":939,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":940,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":941,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":942,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2020-05-23"},{"lineNumber":943,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":944,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":945,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":946,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":947,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":948,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":949,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":950,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":951,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":952,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":953,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":954,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":955,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":956,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":957,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":958,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":959,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":960,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":961,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":962,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":963,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":964,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":965,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":966,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":967,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":968,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":969,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":970,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":971,"author":{"gitId":"newway1814"},"content":"### Deleting a task","lastModifiedDate":"2023-10-16"},{"lineNumber":972,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":973,"author":{"gitId":"newway1814"},"content":"1. Deleting a task while all tasks are being shown","lastModifiedDate":"2023-10-16"},{"lineNumber":974,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":975,"author":{"gitId":"newway1814"},"content":"   1. Prerequisites: List all tasks using the `list` command. Multiple tasks in the list.","lastModifiedDate":"2023-10-16"},{"lineNumber":976,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":977,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":978,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":979,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":980,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":981,"author":{"gitId":"newway1814"},"content":"      Expected: No task is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2023-10-16"},{"lineNumber":982,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":983,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":984,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":985,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":986,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":987,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":988,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":989,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":990,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":991,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"yarnmengnus":80,"jack1e0":285,"kiatkat":47,"eyelessrhyme7":121,"-":324,"newway1814":134}},{"path":"docs/SettingUp.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Setting up and getting started","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"## Setting up the project in your computer","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2020-06-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Follow the steps in the following guide precisely. Things will not work out if you deviate in some steps.","lastModifiedDate":"2020-06-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"First, **fork** this repo, and **clone** the fork into your computer.","lastModifiedDate":"2020-06-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"If you plan to use Intellij IDEA (highly recommended):","lastModifiedDate":"2020-06-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"1. **Configure the JDK**: Follow the guide [_[se-edu/guides] IDEA: Configuring the JDK_](https://se-education.org/guides/tutorials/intellijJdk.html) to to ensure Intellij is configured to use **JDK 11**.","lastModifiedDate":"2020-06-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"1. **Import the project as a Gradle project**: Follow the guide [_[se-edu/guides] IDEA: Importing a Gradle project_](https://se-education.org/guides/tutorials/intellijImportGradleProject.html) to import the project into IDEA.\u003cbr\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  :exclamation: Note: Importing a Gradle project is slightly different from importing a normal Java project.","lastModifiedDate":"2020-06-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"1. **Verify the setup**:","lastModifiedDate":"2020-06-07"},{"lineNumber":26,"author":{"gitId":"kiatkat"},"content":"   1. Run the `profplan.Main` and try a few commands.","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"   1. [Run the tests](Testing.md) to ensure they all pass.","lastModifiedDate":"2020-06-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"## Before writing code","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"1. **Configure the coding style**","lastModifiedDate":"2020-06-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"   If using IDEA, follow the guide [_[se-edu/guides] IDEA: Configuring the code style_](https://se-education.org/guides/tutorials/intellijCodeStyle.html) to set up IDEA\u0027s coding style to match ours.","lastModifiedDate":"2020-09-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"   Optionally, you can follow the guide [_[se-edu/guides] Using Checkstyle_](https://se-education.org/guides/tutorials/checkstyle.html) to find how to use the CheckStyle within IDEA e.g., to report problems _as_ you write code.","lastModifiedDate":"2020-06-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"1. **Set up CI**","lastModifiedDate":"2020-06-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"   This project comes with a GitHub Actions config files (in `.github/workflows` folder). When GitHub detects those files, it will run the CI for your project automatically at each push to the `master` branch or to any PR. No set up required.","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"1. **Learn the design**","lastModifiedDate":"2020-06-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"   When you are ready to start coding, we recommend that you get some sense of the overall design by reading about [AddressBook’s architecture](DeveloperGuide.md#architecture).","lastModifiedDate":"2020-06-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"1. **Do the tutorials**","lastModifiedDate":"2020-06-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"   These tutorials will help you get acquainted with the codebase.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"   * [Tracing code](tutorials/TracingCode.md)","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"   * [Adding a new command](tutorials/AddRemark.md)","lastModifiedDate":"2020-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"   * [Removing fields](tutorials/RemovingFields.md)","lastModifiedDate":"2021-08-01"}],"authorContributionMap":{"kiatkat":1,"-":54}},{"path":"docs/Testing.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Testing guide","lastModifiedDate":"2020-06-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"## Running tests","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"There are two ways to run tests.","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"* **Method 1: Using IntelliJ JUnit test runner**","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  * To run all tests, right-click on the `src/test/java` folder and choose `Run \u0027All Tests\u0027`","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  * To run a subset of tests, you can right-click on a test package,","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    test class, or a test and choose `Run \u0027ABC\u0027`","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* **Method 2: Using Gradle**","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  * Open a console and run the command `gradlew clean test` (Mac/Linux: `./gradlew clean test`)","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-secondary\"\u003e:link: **Link**: Read [this Gradle Tutorial from the se-edu/guides](https://se-education.org/guides/tutorials/gradle.html) to learn more about using Gradle.","lastModifiedDate":"2020-06-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"## Types of tests","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"This project has three types of tests:","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"1. *Unit tests* targeting the lowest level methods/classes.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"   e.g. `seedu.address.commons.StringUtilTest`","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"1. *Integration tests* that are checking the integration of multiple code units (those code units are assumed to be working).\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"kiatkat"},"content":"   e.g. `storage.profplan.StorageManagerTest`","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"1. Hybrids of unit and integration tests. These test are checking multiple code units as well as how the are connected together.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"kiatkat"},"content":"   e.g. `logic.profplan.LogicManagerTest`","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"kiatkat":2,"-":34}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":5,"author":{"gitId":"yarnmengnus"},"content":"\u003cstyle\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":6,"author":{"gitId":"yarnmengnus"},"content":"  .alert-primary{","lastModifiedDate":"2023-10-27"},{"lineNumber":7,"author":{"gitId":"yarnmengnus"},"content":"      background-color: #d6e6ff;","lastModifiedDate":"2023-10-27"},{"lineNumber":8,"author":{"gitId":"yarnmengnus"},"content":"      padding: 0.75rem 1.25rem;","lastModifiedDate":"2023-10-27"},{"lineNumber":9,"author":{"gitId":"yarnmengnus"},"content":"      color: #073984;","lastModifiedDate":"2023-10-27"},{"lineNumber":10,"author":{"gitId":"yarnmengnus"},"content":"      border-radius: 0.25rem;","lastModifiedDate":"2023-10-27"},{"lineNumber":11,"author":{"gitId":"yarnmengnus"},"content":"  }","lastModifiedDate":"2023-10-27"},{"lineNumber":12,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":13,"author":{"gitId":"yarnmengnus"},"content":"  .Warning{","lastModifiedDate":"2023-10-27"},{"lineNumber":14,"author":{"gitId":"yarnmengnus"},"content":"      background-color: #fff3cd;","lastModifiedDate":"2023-10-27"},{"lineNumber":15,"author":{"gitId":"yarnmengnus"},"content":"      padding: 0.75rem 1.25rem;","lastModifiedDate":"2023-10-27"},{"lineNumber":16,"author":{"gitId":"yarnmengnus"},"content":"      color: #856404;","lastModifiedDate":"2023-10-27"},{"lineNumber":17,"author":{"gitId":"yarnmengnus"},"content":"      border-radius: 0.25rem;","lastModifiedDate":"2023-10-27"},{"lineNumber":18,"author":{"gitId":"yarnmengnus"},"content":"  }","lastModifiedDate":"2023-10-27"},{"lineNumber":19,"author":{"gitId":"yarnmengnus"},"content":"\u003c/style\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"yarnmengnus"},"content":"# \u003ccenter\u003eUser Guide - ProfPlan\u003c/center\u003e","lastModifiedDate":"2023-11-11"},{"lineNumber":22,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":23,"author":{"gitId":"eyelessrhyme7"},"content":"\u003cdiv markdown \u003d \"block\" align\u003d\"center\"\u003e","lastModifiedDate":"2023-11-11"},{"lineNumber":24,"author":{"gitId":"yarnmengnus"},"content":"![TeamProfPlan](images/profplan_32.png)","lastModifiedDate":"2023-11-11"},{"lineNumber":25,"author":{"gitId":"yarnmengnus"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-11-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"eyelessrhyme7"},"content":"## Overview","lastModifiedDate":"2023-11-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"yarnmengnus"},"content":"We believe that no Computer Science (CS) professor should have to wrestle and wrangle with redundant features and complicated interfaces. Built upon hours of research, ProfPlan offers a fast, efficient and seamless user experience for you to resolve your schedules in minimal time.","lastModifiedDate":"2023-11-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":31,"author":{"gitId":"yarnmengnus"},"content":"ProfPlan is a **desktop app for managing tasks, optimized for use via a Command Line Interface** (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast, ProfPlan can get your contact management tasks done faster than traditional GUI apps.","lastModifiedDate":"2023-11-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"yarnmengnus"},"content":"## What It Does","lastModifiedDate":"2023-10-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":35,"author":{"gitId":"yarnmengnus"},"content":"ProfPlan can help you manage tasks seamlessly. Create, edit, delete tasks with ease. Our specialised tasks help you assign priorities, deadlines, status and much more to enhance your task management experience.","lastModifiedDate":"2023-10-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"eyelessrhyme7"},"content":"Our **\u003ci\u003esmart recommendation\u003c/i\u003e** and **\u003ci\u003evisualisation\u003c/i\u003e** features help you decide what to do next, and rank tasks based on several factors. You can also manage **\u003ci\u003erecurring tasks\u003c/i\u003e** smoothly using ProfPlan’s recurring task functionality.","lastModifiedDate":"2023-11-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"yarnmengnus"},"content":"## Target Users","lastModifiedDate":"2023-10-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":41,"author":{"gitId":"yarnmengnus"},"content":"This product is specifically designed for **CS professors** who prefer **CLI** over GUI and have a **variety of tasks** such as module management (lecture, assessments, readings), research tracking (deadlines, publications, collaborations, papers), admin tasks (department, paperwork, meetings, budget) and so on.","lastModifiedDate":"2023-10-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"yarnmengnus"},"content":"## Team Behind ProfPlan","lastModifiedDate":"2023-10-27"},{"lineNumber":44,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":45,"author":{"gitId":"yarnmengnus"},"content":"![TeamProfPlan](images/TeamProfPlan.png)","lastModifiedDate":"2023-10-27"},{"lineNumber":46,"author":{"gitId":"yarnmengnus"},"content":"Contact us using this [Google Form](https://forms.gle/Dzb12Re4MYJxzf8w6) to connect with us, leave feedback, and more!","lastModifiedDate":"2023-11-11"},{"lineNumber":47,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":48,"author":{"gitId":"yarnmengnus"},"content":"---","lastModifiedDate":"2023-11-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"yarnmengnus"},"content":"## Contents","lastModifiedDate":"2023-10-27"},{"lineNumber":51,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":52,"author":{"gitId":"yarnmengnus"},"content":"- [Overview](#overview)","lastModifiedDate":"2023-11-11"},{"lineNumber":53,"author":{"gitId":"yarnmengnus"},"content":"- [A Task in ProfPlan](#a-task-in-profplan)","lastModifiedDate":"2023-11-11"},{"lineNumber":54,"author":{"gitId":"kiatkat"},"content":"- [What can ProfPlan do for you?](#what-can-profplan-do-for-you)","lastModifiedDate":"2023-11-12"},{"lineNumber":55,"author":{"gitId":"yarnmengnus"},"content":"- [Quick Start](#quick-start)","lastModifiedDate":"2023-11-11"},{"lineNumber":56,"author":{"gitId":"yarnmengnus"},"content":"- [Basic Features](#basic-features)","lastModifiedDate":"2023-11-11"},{"lineNumber":57,"author":{"gitId":"yarnmengnus"},"content":"  1. [Viewing help : help](#viewing-help--help) \u003cbr\u003e","lastModifiedDate":"2023-11-11"},{"lineNumber":58,"author":{"gitId":"yarnmengnus"},"content":"        a. [Viewing help for a specific command](#a-viewing-help-for-a-specific-command)","lastModifiedDate":"2023-11-11"},{"lineNumber":59,"author":{"gitId":"yarnmengnus"},"content":"  1. [Create a new task : add](#create-a-new-task--add)","lastModifiedDate":"2023-10-27"},{"lineNumber":60,"author":{"gitId":"yarnmengnus"},"content":"  1. [Edit existing tasks : edit](#edit-existing-tasks--edit)","lastModifiedDate":"2023-10-27"},{"lineNumber":61,"author":{"gitId":"yarnmengnus"},"content":"  1. [Delete tasks and delete all tasks : delete](#delete-tasks-and-delete-all-tasks--delete)","lastModifiedDate":"2023-10-27"},{"lineNumber":62,"author":{"gitId":"yarnmengnus"},"content":"  1. [List all Tasks : list](#list-all-tasks--list)","lastModifiedDate":"2023-10-27"},{"lineNumber":63,"author":{"gitId":"yarnmengnus"},"content":"  1. [List Tasks due within week : list week](#list-tasks-within-a-week-from-now-list_week)","lastModifiedDate":"2023-11-11"},{"lineNumber":64,"author":{"gitId":"yarnmengnus"},"content":"  1. [List Tasks due within month: list month](#list-tasks-within-a-month-from-now-list_month)","lastModifiedDate":"2023-11-11"},{"lineNumber":65,"author":{"gitId":"yarnmengnus"},"content":"  1. [Locating Tasks by name: find](#locating-tasks-by-name-find)","lastModifiedDate":"2023-10-27"},{"lineNumber":66,"author":{"gitId":"eyelessrhyme7"},"content":"  1. [Setting Configurations](#configuring-settings--set)","lastModifiedDate":"2023-11-11"},{"lineNumber":67,"author":{"gitId":"yarnmengnus"},"content":"  1. [Editing the data file](#editing-the-data-file)","lastModifiedDate":"2023-10-27"},{"lineNumber":68,"author":{"gitId":"yarnmengnus"},"content":"  1. [Saving the data](#saving-the-data)","lastModifiedDate":"2023-10-27"},{"lineNumber":69,"author":{"gitId":"yarnmengnus"},"content":"  1. [Exiting the program : exit](#exiting-the-program--exit)","lastModifiedDate":"2023-10-27"},{"lineNumber":70,"author":{"gitId":"yarnmengnus"},"content":"- [Task Management Features](#task-management-features)","lastModifiedDate":"2023-11-11"},{"lineNumber":71,"author":{"gitId":"eyelessrhyme7"},"content":"  1. [Parameters](#parameters)","lastModifiedDate":"2023-11-11"},{"lineNumber":72,"author":{"gitId":"eyelessrhyme7"},"content":"     1. [Description](#description)","lastModifiedDate":"2023-11-11"},{"lineNumber":73,"author":{"gitId":"eyelessrhyme7"},"content":"     1. [Priority](#priority)","lastModifiedDate":"2023-11-11"},{"lineNumber":74,"author":{"gitId":"eyelessrhyme7"},"content":"     1. [Status](#status)","lastModifiedDate":"2023-11-11"},{"lineNumber":75,"author":{"gitId":"yarnmengnus"},"content":"     1. [Due Date](#due-date)","lastModifiedDate":"2023-11-11"},{"lineNumber":76,"author":{"gitId":"eyelessrhyme7"},"content":"     1. [Tags](#tags)","lastModifiedDate":"2023-11-11"},{"lineNumber":77,"author":{"gitId":"eyelessrhyme7"},"content":"     1. [Link](#link)","lastModifiedDate":"2023-11-11"},{"lineNumber":78,"author":{"gitId":"eyelessrhyme7"},"content":"     1. [Recurrence](#recurrence)","lastModifiedDate":"2023-11-11"},{"lineNumber":79,"author":{"gitId":"eyelessrhyme7"},"content":"  1. [Management Commands](#management-commands)","lastModifiedDate":"2023-11-11"},{"lineNumber":80,"author":{"gitId":"yarnmengnus"},"content":"     1. [Mark task as done/undone : mark / unmark](#mark-task-as-doneundone--mark--unmark)","lastModifiedDate":"2023-10-27"},{"lineNumber":81,"author":{"gitId":"yarnmengnus"},"content":"     1. [Filter tasks : filter](#filter-tasks--filter)","lastModifiedDate":"2023-10-27"},{"lineNumber":82,"author":{"gitId":"eyelessrhyme7"},"content":"        \u003col type\u003d\"i\"\u003e","lastModifiedDate":"2023-11-11"},{"lineNumber":83,"author":{"gitId":"yarnmengnus"},"content":"        \u003cli\u003e\u003ca href\u003d\"#a-due-date\"\u003eDue Date\u003c/a\u003e\u003c/li\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":84,"author":{"gitId":"yarnmengnus"},"content":"        \u003cli\u003e\u003ca href\u003d\"#b-priority\"\u003ePriority\u003c/a\u003e\u003c/li\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":85,"author":{"gitId":"yarnmengnus"},"content":"        \u003cli\u003e\u003ca href\u003d\"#c-status\"\u003eStatus\u003c/a\u003e\u003c/li\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":86,"author":{"gitId":"eyelessrhyme7"},"content":"        \u003cli\u003e\u003ca href\u003d\"#d-recurrence\"\u003eRecurrence\u003c/a\u003e\u003c/li\u003e","lastModifiedDate":"2023-11-11"},{"lineNumber":87,"author":{"gitId":"yarnmengnus"},"content":"        \u003c/ol\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":88,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":89,"author":{"gitId":"yarnmengnus"},"content":"- [Advanced Features](#advanced-features)","lastModifiedDate":"2023-11-11"},{"lineNumber":90,"author":{"gitId":"eyelessrhyme7"},"content":"  1. [Recommend next task](#recommend-next-task-)","lastModifiedDate":"2023-11-11"},{"lineNumber":91,"author":{"gitId":"eyelessrhyme7"},"content":"  1. [Urgency-Importance Matrix: Visualise tasks](#visualise-important-and-urgent-tasks-)","lastModifiedDate":"2023-11-11"},{"lineNumber":92,"author":{"gitId":"yarnmengnus"},"content":"  1. [Create A Recurring task](#create-a-recurring-task)","lastModifiedDate":"2023-11-11"},{"lineNumber":93,"author":{"gitId":"jack1e0"},"content":"  1. [Sort Tasks based on Priority and DueDate](#sort-tasks-based-on-priority-)","lastModifiedDate":"2023-11-11"},{"lineNumber":94,"author":{"gitId":"yarnmengnus"},"content":"  1. [View Task statistics](#view-task-statistics-stats)","lastModifiedDate":"2023-11-11"},{"lineNumber":95,"author":{"gitId":"eyelessrhyme7"},"content":"- [FAQ](#faq)","lastModifiedDate":"2023-11-12"},{"lineNumber":96,"author":{"gitId":"eyelessrhyme7"},"content":"- [Known Issues](#known-issues)","lastModifiedDate":"2023-11-12"},{"lineNumber":97,"author":{"gitId":"yarnmengnus"},"content":"- [Supported flags](#supported-flags)","lastModifiedDate":"2023-11-11"},{"lineNumber":98,"author":{"gitId":"yarnmengnus"},"content":"- [Command summary](#command-summary)","lastModifiedDate":"2023-11-11"},{"lineNumber":99,"author":{"gitId":"yarnmengnus"},"content":"- [Supported Setting Parameters](#supported-setting-parameters)","lastModifiedDate":"2023-11-11"},{"lineNumber":100,"author":{"gitId":"yarnmengnus"},"content":"- [Glossary](#glossary)","lastModifiedDate":"2023-11-11"},{"lineNumber":101,"author":{"gitId":"yarnmengnus"},"content":"- [Contact Us for Feedback \u0026 More](#contact-us-for-feedback--more)","lastModifiedDate":"2023-11-11"},{"lineNumber":102,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":103,"author":{"gitId":"yarnmengnus"},"content":"---","lastModifiedDate":"2023-11-11"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"eyelessrhyme7"},"content":"## A Task in ProfPlan","lastModifiedDate":"2023-11-11"},{"lineNumber":106,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":107,"author":{"gitId":"eyelessrhyme7"},"content":"Your central interaction with ProfPlan is through the creation and management of Tasks.","lastModifiedDate":"2023-11-11"},{"lineNumber":108,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":109,"author":{"gitId":"yarnmengnus"},"content":"---","lastModifiedDate":"2023-11-11"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"kiatkat"},"content":"## What can ProfPlan do for you?","lastModifiedDate":"2023-11-12"},{"lineNumber":112,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":113,"author":{"gitId":"yarnmengnus"},"content":"Your central interaction with ProfPlan is through the creation and management of Tasks.","lastModifiedDate":"2023-10-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"yarnmengnus"},"content":":question: So, what is a Task in ProfPlan?","lastModifiedDate":"2023-10-27"},{"lineNumber":116,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":117,"author":{"gitId":"yarnmengnus"},"content":"A Task contains all the information relevant to a piece of work that needs to be done. This work could be anything: academia-related, like research projects and papers, teaching-related, like grading and lecturing, or even personal tasks, like a daily brew of coffee.","lastModifiedDate":"2023-10-27"},{"lineNumber":118,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":119,"author":{"gitId":"yarnmengnus"},"content":":question: What information does a Task contain?","lastModifiedDate":"2023-10-27"},{"lineNumber":120,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":121,"author":{"gitId":"yarnmengnus"},"content":"A Task must contain, minimally, a \u003cins\u003eName\u003c/ins\u003e. Optionally, you may also choose to add a \u003cins\u003ePriority\u003c/ins\u003e, a \u003cins\u003eLink\u003c/ins\u003e, a \u003cins\u003eDue Date\u003c/ins\u003e, and/or a \u003cins\u003eDescription\u003c/ins\u003e to it. Refer to the add and edit commands below for details on how to achieve this.","lastModifiedDate":"2023-10-27"},{"lineNumber":122,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":123,"author":{"gitId":"yarnmengnus"},"content":":question: What are all those underlined terms?","lastModifiedDate":"2023-10-27"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":125,"author":{"gitId":"yarnmengnus"},"content":"These are the various attributes of a Task:","lastModifiedDate":"2023-10-27"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":127,"author":{"gitId":"yarnmengnus"},"content":"- \u003cins\u003eName\u003c/ins\u003e: A short summary of the work. Consider this akin to the title of a book, or an abstract of a paper - concise, yet descriptive.","lastModifiedDate":"2023-11-11"},{"lineNumber":128,"author":{"gitId":"yarnmengnus"},"content":"- \u003cins\u003ePriority\u003c/ins\u003e: An integer from 1 to 10, indicative of the importance of the task. The higher the number, the more important the task.","lastModifiedDate":"2023-11-11"},{"lineNumber":129,"author":{"gitId":"yarnmengnus"},"content":"- \u003cins\u003eStatus\u003c/ins\u003e: Represents the current completion state of a task. (Done or Undone)","lastModifiedDate":"2023-11-11"},{"lineNumber":130,"author":{"gitId":"yarnmengnus"},"content":"- \u003cins\u003eLink\u003c/ins\u003e: A field to store reference material.","lastModifiedDate":"2023-11-11"},{"lineNumber":131,"author":{"gitId":"yarnmengnus"},"content":"- \u003cins\u003eDue Date\u003c/ins\u003e: The date by which the task should be completed by. Presented in the dd-MM-yyyy format.","lastModifiedDate":"2023-11-11"},{"lineNumber":132,"author":{"gitId":"yarnmengnus"},"content":"- \u003cins\u003eDescription\u003c/ins\u003e: Further details about the task. Any information that is too long to be put into the name should go here.","lastModifiedDate":"2023-11-11"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":134,"author":{"gitId":"yarnmengnus"},"content":":question: What else can I do with Tasks?","lastModifiedDate":"2023-10-27"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":136,"author":{"gitId":"yarnmengnus"},"content":"Just like on a checklist, Tasks can be [marked](#mark-task-as-doneundone--mark--unmark) as done or undone, or you can create associations between tasks by [setting](#set-other-tasks-as-parent--set) a Task as a parent of another. To better navigate your Task list, you may also [filter](#filter-tasks--filter) or [search](#locating-tasks-by-name-find) for Tasks.","lastModifiedDate":"2023-10-27"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"yarnmengnus"},"content":":question: What really makes ProfPlan standout?","lastModifiedDate":"2023-10-27"},{"lineNumber":139,"author":{"gitId":"yarnmengnus"},"content":"This is but the tip of the iceberg of the things you can do working with ProfPlan.","lastModifiedDate":"2023-10-27"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":141,"author":{"gitId":"yarnmengnus"},"content":"ProfPlan allows you to create recurring tasks with frequency of a day, week or month. With automatically shifting deadlines, you never have to spend time setting up repetitive tasks again.","lastModifiedDate":"2023-10-27"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":143,"author":{"gitId":"yarnmengnus"},"content":"Puzzled about which task to do next? Worry not, ProfPlan has you covered.","lastModifiedDate":"2023-10-27"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":145,"author":{"gitId":"yarnmengnus"},"content":"To explore more, visit [this section](#advanced-features) for more advanced tips.","lastModifiedDate":"2023-10-27"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":147,"author":{"gitId":"yarnmengnus"},"content":"---","lastModifiedDate":"2023-11-11"},{"lineNumber":148,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":149,"author":{"gitId":"yarnmengnus"},"content":"## Quick start","lastModifiedDate":"2023-10-27"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":151,"author":{"gitId":"yarnmengnus"},"content":"1. Ensure you have `Java 11` or above installed in your Computer.","lastModifiedDate":"2023-10-27"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":153,"author":{"gitId":"yarnmengnus"},"content":"1. Download the latest `profplan.jar` from [here](https://github.com/AY2324S1-CS2103T-W15-1/tp/releases).","lastModifiedDate":"2023-10-27"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":155,"author":{"gitId":"yarnmengnus"},"content":"1. Copy the file to the folder you want to use as the home folder for your ProfPlan.","lastModifiedDate":"2023-10-27"},{"lineNumber":156,"author":{"gitId":"yarnmengnus"},"content":"1. Open a command terminal, `cd` into the folder you put the jar file in, and use the `java -jar profplan.jar` command to run the application.\u003cbr\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":157,"author":{"gitId":"yarnmengnus"},"content":"   A GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.","lastModifiedDate":"2023-10-27"},{"lineNumber":158,"author":{"gitId":"eyelessrhyme7"},"content":"   ![NewLaunch](images/Ui.png)","lastModifiedDate":"2023-11-03"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"yarnmengnus"},"content":"1. Type the command in the command box and press Enter to execute it. e.g. typing `help` and pressing Enter will open the help window.","lastModifiedDate":"2023-10-27"},{"lineNumber":161,"author":{"gitId":"yarnmengnus"},"content":"   Some example commands you can try:","lastModifiedDate":"2023-10-27"},{"lineNumber":162,"author":{"gitId":"eyelessrhyme7"},"content":"   - `list` : Lists all tasks.","lastModifiedDate":"2023-11-11"},{"lineNumber":163,"author":{"gitId":"eyelessrhyme7"},"content":"   - `add n/submit application p/2 d/01-01-2023 t/quiz t/graded l/www.quiz.com des/for mod cs0000` : Adds a task named `submit application` to ProfPlan.","lastModifiedDate":"2023-11-11"},{"lineNumber":164,"author":{"gitId":"eyelessrhyme7"},"content":"   - `delete 3` : Deletes the 3rd task shown in the current list.","lastModifiedDate":"2023-11-11"},{"lineNumber":165,"author":{"gitId":"eyelessrhyme7"},"content":"   - `delete all` : Deletes all tasks. \\* `exit` : Exits the app.","lastModifiedDate":"2023-11-11"},{"lineNumber":166,"author":{"gitId":"yarnmengnus"},"content":"1. Refer to the [Features](#basic-features) below for details of each command.","lastModifiedDate":"2023-10-27"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"yarnmengnus"},"content":"---","lastModifiedDate":"2023-11-11"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"yarnmengnus"},"content":"## Before you start","lastModifiedDate":"2023-10-27"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":172,"author":{"gitId":"yarnmengnus"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":173,"author":{"gitId":"yarnmengnus"},"content":":blue_book: Notes about the command format:","lastModifiedDate":"2023-10-27"},{"lineNumber":174,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":175,"author":{"gitId":"yarnmengnus"},"content":"- Words in square brackets are the parameters you should supply to ProfPlan.","lastModifiedDate":"2023-11-11"},{"lineNumber":176,"author":{"gitId":"yarnmengnus"},"content":"  - Example: `task [taskToDo] /by [deadline]`","lastModifiedDate":"2023-11-11"},{"lineNumber":177,"author":{"gitId":"yarnmengnus"},"content":"- Commands specified under **Compulsory Commands** are mandatory for the function to run. The rest are optional.","lastModifiedDate":"2023-11-11"},{"lineNumber":178,"author":{"gitId":"yarnmengnus"},"content":"- Items with `…` after them can accept multiple parameters.","lastModifiedDate":"2023-11-11"},{"lineNumber":179,"author":{"gitId":"yarnmengnus"},"content":"  - Example: `find [keywords…]`","lastModifiedDate":"2023-11-11"},{"lineNumber":180,"author":{"gitId":"yarnmengnus"},"content":"- If you are using a PDF version of this document, be careful when copying and pasting commands that span multiple lines, as space characters surrounding line-breaks may be omitted when copied over to the application.","lastModifiedDate":"2023-11-11"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"yarnmengnus"},"content":"## Basic Features","lastModifiedDate":"2023-10-27"},{"lineNumber":185,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":186,"author":{"gitId":"yarnmengnus"},"content":"Simple yet essential features for you to get started.","lastModifiedDate":"2023-10-27"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"### Viewing help : `help`","lastModifiedDate":"2023-11-11"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":190,"author":{"gitId":"yarnmengnus"},"content":"#### Viewing help for all commands:","lastModifiedDate":"2023-11-11"},{"lineNumber":191,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":192,"author":{"gitId":"yarnmengnus"},"content":"\u0026emsp;Shows the list of usage of all commands. \u003cbr\u003e","lastModifiedDate":"2023-11-11"},{"lineNumber":193,"author":{"gitId":"yarnmengnus"},"content":"\u0026emsp;**Command Format:** `help` \u003cbr\u003e","lastModifiedDate":"2023-11-11"},{"lineNumber":194,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":195,"author":{"gitId":"eyelessrhyme7"},"content":"#### a. Viewing help for a specific command:","lastModifiedDate":"2023-11-11"},{"lineNumber":196,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":197,"author":{"gitId":"eyelessrhyme7"},"content":"\u0026emsp;Shows the description and usage of the command you specified. \u003cbr\u003e","lastModifiedDate":"2023-11-11"},{"lineNumber":198,"author":{"gitId":"yarnmengnus"},"content":"\u0026emsp;**Command Format:** `help [commandName]` \u003cbr\u003e","lastModifiedDate":"2023-11-11"},{"lineNumber":199,"author":{"gitId":"yarnmengnus"},"content":"**\u0026emsp;Acceptable Values for each Parameter:**\u003cbr\u003e","lastModifiedDate":"2023-11-11"},{"lineNumber":200,"author":{"gitId":"yarnmengnus"},"content":"\u0026emsp;\u0026emsp;`[taskName]` - String of len \u003e 0\u003cbr\u003e","lastModifiedDate":"2023-11-11"},{"lineNumber":201,"author":{"gitId":"eyelessrhyme7"},"content":"\u0026emsp;**Example Command:** `help add`","lastModifiedDate":"2023-11-11"},{"lineNumber":202,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":203,"author":{"gitId":"yarnmengnus"},"content":"### Create a new task : `add`","lastModifiedDate":"2023-10-27"},{"lineNumber":204,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":205,"author":{"gitId":"yarnmengnus"},"content":"Creates a new task and adds it to your task list. You may specify the name and deadline for the task when creating it.\u003cbr\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":206,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":207,"author":{"gitId":"jack1e0"},"content":"**Command Format:** `add n/[taskName] p/[priority] d/[dueDate] recur/[recur] t/[tag...] l/[link] des/[description]` \u003cbr\u003e","lastModifiedDate":"2023-11-11"},{"lineNumber":208,"author":{"gitId":"yarnmengnus"},"content":"**Compulsory Parameters:** `[taskname]`, `[priority]`, `[dueDate]`","lastModifiedDate":"2023-11-11"},{"lineNumber":209,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":210,"author":{"gitId":"yarnmengnus"},"content":"**Acceptable Values for each Parameter:**\u003cbr\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":211,"author":{"gitId":"jack1e0"},"content":"\u0026emsp;`[taskName]` - String of len \u003e 0 \u003cbr\u003e","lastModifiedDate":"2023-11-08"},{"lineNumber":212,"author":{"gitId":"jack1e0"},"content":"\u0026emsp;`[priority]` - Integer between 1 and 10 \u003cbr\u003e","lastModifiedDate":"2023-11-08"},{"lineNumber":213,"author":{"gitId":"jack1e0"},"content":"\u0026emsp;`[dueDate]` - Format: dd-MM-yyyy \u003cbr\u003e","lastModifiedDate":"2023-11-08"},{"lineNumber":214,"author":{"gitId":"eyelessrhyme7"},"content":"\u0026emsp;`[recur]` - \u0027daily\u0027, \u0027weekly\u0027, \u0027monthly\u0027, \u0027semesterly\u0027 (short forms also work: \u0027d\u0027, \u0027w\u0027, \u0027m\u0027, \u0027s\u0027) \u003cbr\u003e","lastModifiedDate":"2023-11-11"},{"lineNumber":215,"author":{"gitId":"jack1e0"},"content":"\u0026emsp;`[tag]` - String of len \u003e 0 \u003cbr\u003e","lastModifiedDate":"2023-11-08"},{"lineNumber":216,"author":{"gitId":"yarnmengnus"},"content":"\u0026emsp;`[link]` - String of len \u003e 0 \u003cbr\u003e","lastModifiedDate":"2023-11-11"},{"lineNumber":217,"author":{"gitId":"jack1e0"},"content":"\u0026emsp;`[description]` - String of len \u003e 0\u003cbr\u003e","lastModifiedDate":"2023-11-08"},{"lineNumber":218,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":219,"author":{"gitId":"jack1e0"},"content":"**Example Commands:** `add n/submit quiz p/2 d/01-01-2023 recur/weekly t/quiz t/graded l/www.quiz.com des/for mod cs0000`\u003cbr\u003e","lastModifiedDate":"2023-11-08"},{"lineNumber":220,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":221,"author":{"gitId":"yarnmengnus"},"content":"**Precise Expected Outputs when the command succeeds:**","lastModifiedDate":"2023-10-27"},{"lineNumber":222,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":223,"author":{"gitId":"yarnmengnus"},"content":"```","lastModifiedDate":"2023-10-27"},{"lineNumber":224,"author":{"gitId":"eyelessrhyme7"},"content":"New task added: Draft assignments; Priority: 1; Status: undone; Tags: [assignment][grade]; DueDate: 01-01-2023; Link: www.example.com","lastModifiedDate":"2023-11-13"},{"lineNumber":225,"author":{"gitId":"yarnmengnus"},"content":"```","lastModifiedDate":"2023-10-27"},{"lineNumber":226,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":227,"author":{"gitId":"yarnmengnus"},"content":"**Precise Expected Outputs when the command fails:**","lastModifiedDate":"2023-10-27"},{"lineNumber":228,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":229,"author":{"gitId":"yarnmengnus"},"content":"```","lastModifiedDate":"2023-10-27"},{"lineNumber":230,"author":{"gitId":"jack1e0"},"content":"Invalid command format! ","lastModifiedDate":"2023-11-08"},{"lineNumber":231,"author":{"gitId":"jack1e0"},"content":"add: Adds a task to the task list.","lastModifiedDate":"2023-11-08"},{"lineNumber":232,"author":{"gitId":"eyelessrhyme7"},"content":"Compulsory Parameters: n/[name] p/[priority] d/[dueDate] ","lastModifiedDate":"2023-11-11"},{"lineNumber":233,"author":{"gitId":"eyelessrhyme7"},"content":"Optional Parameters: recur/[recur] t/[tag...] l/[link] des/[description]","lastModifiedDate":"2023-11-11"},{"lineNumber":234,"author":{"gitId":"jack1e0"},"content":"Example: add n/Grade assignments p/1 t/assignment t/grade d/01-01-2023 l/www.example.com","lastModifiedDate":"2023-11-08"},{"lineNumber":235,"author":{"gitId":"yarnmengnus"},"content":"```","lastModifiedDate":"2023-10-27"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":237,"author":{"gitId":"yarnmengnus"},"content":"### Edit existing tasks : `edit`","lastModifiedDate":"2023-10-27"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":239,"author":{"gitId":"jack1e0"},"content":"Edit the aspects of selected existing task, as specified by the user.","lastModifiedDate":"2023-10-03"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":241,"author":{"gitId":"jack1e0"},"content":"**Command Format:** `edit [index] [prefix]/[newValue]` \u003cbr\u003e","lastModifiedDate":"2023-11-08"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":243,"author":{"gitId":"yarnmengnus"},"content":"**Acceptable Values for each Parameter:** \u003cbr\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":244,"author":{"gitId":"yarnmengnus"},"content":"\u0026emsp;`[index]` - integer \u003cbr\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":245,"author":{"gitId":"yarnmengnus"},"content":"\u0026emsp;`[taskName]` - String of len \u003e 0 \u003cbr\u003e","lastModifiedDate":"2023-11-11"},{"lineNumber":246,"author":{"gitId":"yarnmengnus"},"content":"\u0026emsp;`[priority]` - Integer between 1 and 10 \u003cbr\u003e","lastModifiedDate":"2023-11-11"},{"lineNumber":247,"author":{"gitId":"yarnmengnus"},"content":"\u0026emsp;`[dueDate]` - Format: dd-MM-yyyy \u003cbr\u003e","lastModifiedDate":"2023-11-11"},{"lineNumber":248,"author":{"gitId":"yarnmengnus"},"content":"\u0026emsp;`[tag]` - String of len \u003e 0 \u003cbr\u003e","lastModifiedDate":"2023-11-11"},{"lineNumber":249,"author":{"gitId":"yarnmengnus"},"content":"\u0026emsp;`[link]` - String of len \u003e 0 \u003cbr\u003e","lastModifiedDate":"2023-11-11"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":251,"author":{"gitId":"jack1e0"},"content":"**Example Commands:** `edit 2 n/Updated task p/3 d/01-01-2023 t/newTag l/www.newlink.com` \u003cbr\u003e","lastModifiedDate":"2023-11-08"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":253,"author":{"gitId":"jack1e0"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2023-11-08"},{"lineNumber":254,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":255,"author":{"gitId":"eyelessrhyme7"},"content":":blue_book: Note that:","lastModifiedDate":"2023-11-11"},{"lineNumber":256,"author":{"gitId":"yarnmengnus"},"content":"- Inputting `t/` will result in all tags being erased. \u003cbr\u003e","lastModifiedDate":"2023-11-11"},{"lineNumber":257,"author":{"gitId":"yarnmengnus"},"content":"- Recurrence cannot be edited. \u003cbr\u003e","lastModifiedDate":"2023-11-11"},{"lineNumber":258,"author":{"gitId":"yarnmengnus"},"content":"- To edit description, use `description [index] des/[description]`","lastModifiedDate":"2023-11-11"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":260,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-11-08"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":262,"author":{"gitId":"jack1e0"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-11-08"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":264,"author":{"gitId":"yarnmengnus"},"content":"**Precise Expected Outputs when the command succeeds:**","lastModifiedDate":"2023-10-27"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":266,"author":{"gitId":"yarnmengnus"},"content":"```","lastModifiedDate":"2023-10-27"},{"lineNumber":267,"author":{"gitId":"eyelessrhyme7"},"content":"Edited Task: Grant Application; Priority: 10; Status: undone; Tags: [grant][research]; DueDate: 20-12-2023; Link: -","lastModifiedDate":"2023-11-13"},{"lineNumber":268,"author":{"gitId":"yarnmengnus"},"content":"```","lastModifiedDate":"2023-10-27"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":270,"author":{"gitId":"yarnmengnus"},"content":"**Precise Expected Outputs when the command fails:**","lastModifiedDate":"2023-10-27"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":272,"author":{"gitId":"yarnmengnus"},"content":"```","lastModifiedDate":"2023-10-27"},{"lineNumber":273,"author":{"gitId":"jack1e0"},"content":"Invalid command format! ","lastModifiedDate":"2023-11-08"},{"lineNumber":274,"author":{"gitId":"eyelessrhyme7"},"content":"edit: Edits the details of the task identified by the index number used in the displayed task list. ","lastModifiedDate":"2023-11-11"},{"lineNumber":275,"author":{"gitId":"eyelessrhyme7"},"content":"Existing values will be overwritten by the input values.","lastModifiedDate":"2023-11-11"},{"lineNumber":276,"author":{"gitId":"eyelessrhyme7"},"content":"Parameters: [index] n/[name] p/[priority] d/[dueDate] t/[tag...] l/[link] ","lastModifiedDate":"2023-11-11"},{"lineNumber":277,"author":{"gitId":"jack1e0"},"content":"Example: edit 1 p/4","lastModifiedDate":"2023-11-08"},{"lineNumber":278,"author":{"gitId":"yarnmengnus"},"content":"```","lastModifiedDate":"2023-10-27"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":280,"author":{"gitId":"yarnmengnus"},"content":"### Delete tasks and delete all tasks : `delete`","lastModifiedDate":"2023-10-27"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":282,"author":{"gitId":"yarnmengnus"},"content":"The Delete Task feature allows you to remove a specific task from your task list when it is no longer relevant or even remove all the tasks if required.","lastModifiedDate":"2023-10-27"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":284,"author":{"gitId":"newway1814"},"content":"**Command Format:** `delete [taskNumber]` \u003cbr\u003e","lastModifiedDate":"2023-11-08"},{"lineNumber":285,"author":{"gitId":"yarnmengnus"},"content":"**Command Format:** `delete all` or `clear` (for delete all)\u003cbr\u003e","lastModifiedDate":"2023-11-11"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":287,"author":{"gitId":"yarnmengnus"},"content":"**Example Commands:** \u003cbr\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":288,"author":{"gitId":"yarnmengnus"},"content":"\u0026emsp; `delete 2` (To delete a task present at index number 2) \u003cbr\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":289,"author":{"gitId":"yarnmengnus"},"content":"\u0026emsp; `delete all` (To delete all the tasks present in the list) \u003cbr\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":290,"author":{"gitId":"yarnmengnus"},"content":"\u0026emsp; `clear` (To delete all the tasks present in the list) \u003cbr\u003e","lastModifiedDate":"2023-11-11"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":292,"author":{"gitId":"yarnmengnus"},"content":"**Acceptable Values for each Parameter:** \u003cbr\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":293,"author":{"gitId":"yarnmengnus"},"content":"\u0026emsp; `[taskNumber]` - Integer, that is a valid task number in the list \u003cbr\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":294,"author":{"gitId":"yarnmengnus"},"content":"\u0026emsp; `“all”` - A keyword (type String) to delete all the tasks present in the list. \u003cbr\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":296,"author":{"gitId":"yarnmengnus"},"content":"**Precise Expected Outputs when the command succeeds:** \u003cbr\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":298,"author":{"gitId":"yarnmengnus"},"content":"(For Deleting a particular Task)","lastModifiedDate":"2023-10-27"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":300,"author":{"gitId":"yarnmengnus"},"content":"```","lastModifiedDate":"2023-10-27"},{"lineNumber":301,"author":{"gitId":"eyelessrhyme7"},"content":"Deleted Task: Grant Application; Priority: 10; Status: undone; Tags: [grant][research]; DueDate: 20-12-2023; Link: -","lastModifiedDate":"2023-11-13"},{"lineNumber":302,"author":{"gitId":"yarnmengnus"},"content":"```","lastModifiedDate":"2023-10-27"},{"lineNumber":303,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":304,"author":{"gitId":"yarnmengnus"},"content":"(For Deleting all the Tasks in the list)","lastModifiedDate":"2023-10-27"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":306,"author":{"gitId":"yarnmengnus"},"content":"```","lastModifiedDate":"2023-10-27"},{"lineNumber":307,"author":{"gitId":"newway1814"},"content":"All Tasks Deleted Successfully Prof!","lastModifiedDate":"2023-11-08"},{"lineNumber":308,"author":{"gitId":"yarnmengnus"},"content":"```","lastModifiedDate":"2023-10-27"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":310,"author":{"gitId":"yarnmengnus"},"content":"**Precise Expected Outputs when the command fails:** \u003cbr\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":311,"author":{"gitId":"yarnmengnus"},"content":"(If provided with an invalid tasknumber which is not in the list or even a negative index number","lastModifiedDate":"2023-10-27"},{"lineNumber":312,"author":{"gitId":"yarnmengnus"},"content":"the following message will be printed)","lastModifiedDate":"2023-10-27"},{"lineNumber":313,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":314,"author":{"gitId":"yarnmengnus"},"content":"```","lastModifiedDate":"2023-10-27"},{"lineNumber":315,"author":{"gitId":"eyelessrhyme7"},"content":"The task index provided is invalid.","lastModifiedDate":"2023-11-11"},{"lineNumber":316,"author":{"gitId":"newway1814"},"content":"```","lastModifiedDate":"2023-11-08"},{"lineNumber":317,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":318,"author":{"gitId":"newway1814"},"content":"**Precise Expected Outputs when the command fails: (for delete all command)** \u003cbr\u003e","lastModifiedDate":"2023-11-08"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":320,"author":{"gitId":"newway1814"},"content":"```","lastModifiedDate":"2023-11-08"},{"lineNumber":321,"author":{"gitId":"newway1814"},"content":"Can not delete all tasks in empty Task List","lastModifiedDate":"2023-11-08"},{"lineNumber":322,"author":{"gitId":"yarnmengnus"},"content":"```","lastModifiedDate":"2023-10-27"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":324,"author":{"gitId":"yarnmengnus"},"content":"### List all Tasks : `list`","lastModifiedDate":"2023-10-27"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":326,"author":{"gitId":"eyelessrhyme7"},"content":"Shows a list of all tasks in ProfPlan. Displays done and undone tasks. \u003cbr\u003e","lastModifiedDate":"2023-11-11"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":328,"author":{"gitId":"yarnmengnus"},"content":"**Command Format:** `list` \u003cbr\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":329,"author":{"gitId":"yarnmengnus"},"content":"**Precise Expected Outputs when the command succeeds:** \u003cbr\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":331,"author":{"gitId":"jack1e0"},"content":"```","lastModifiedDate":"2023-11-03"},{"lineNumber":332,"author":{"gitId":"eyelessrhyme7"},"content":"Listed all tasks","lastModifiedDate":"2023-11-11"},{"lineNumber":333,"author":{"gitId":"jack1e0"},"content":"```","lastModifiedDate":"2023-11-03"},{"lineNumber":334,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":335,"author":{"gitId":"jack1e0"},"content":"### List Tasks within a week from now: `list_week`","lastModifiedDate":"2023-11-03"},{"lineNumber":336,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":337,"author":{"gitId":"eyelessrhyme7"},"content":"Shows a list of tasks within a week from now in ProfPlan. Displays done and undone tasks. \u003cbr\u003e","lastModifiedDate":"2023-11-11"},{"lineNumber":338,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":339,"author":{"gitId":"jack1e0"},"content":"**Command Format:** `list_week` \u003cbr\u003e","lastModifiedDate":"2023-11-03"},{"lineNumber":340,"author":{"gitId":"jack1e0"},"content":"**Precise Expected Outputs when the command succeeds:** \u003cbr\u003e","lastModifiedDate":"2023-11-03"},{"lineNumber":341,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":342,"author":{"gitId":"jack1e0"},"content":"```","lastModifiedDate":"2023-11-03"},{"lineNumber":343,"author":{"gitId":"jack1e0"},"content":"Here are your tasks within a week Prof!","lastModifiedDate":"2023-11-03"},{"lineNumber":344,"author":{"gitId":"jack1e0"},"content":"```","lastModifiedDate":"2023-11-03"},{"lineNumber":345,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":346,"author":{"gitId":"jack1e0"},"content":"### List Tasks within a month from now: `list_month`","lastModifiedDate":"2023-11-03"},{"lineNumber":347,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":348,"author":{"gitId":"eyelessrhyme7"},"content":"Shows a list of tasks within a month from now in ProfPlan. Displays done and undone tasks. \u003cbr\u003e","lastModifiedDate":"2023-11-11"},{"lineNumber":349,"author":{"gitId":"jack1e0"},"content":"**Command Format:** `list_month` \u003cbr\u003e","lastModifiedDate":"2023-11-08"},{"lineNumber":350,"author":{"gitId":"jack1e0"},"content":"**Precise Expected Outputs when the command succeeds:** \u003cbr\u003e","lastModifiedDate":"2023-11-03"},{"lineNumber":351,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":352,"author":{"gitId":"jack1e0"},"content":"```","lastModifiedDate":"2023-11-03"},{"lineNumber":353,"author":{"gitId":"jack1e0"},"content":"Here are your tasks within a month Prof!","lastModifiedDate":"2023-11-03"},{"lineNumber":354,"author":{"gitId":"jack1e0"},"content":"```","lastModifiedDate":"2023-11-03"},{"lineNumber":355,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":356,"author":{"gitId":"yarnmengnus"},"content":"### Locating Tasks by name: `find`","lastModifiedDate":"2023-10-27"},{"lineNumber":357,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":358,"author":{"gitId":"kiatkat"},"content":"Finding a task is user-friendly and efficient. It\u0027s case-insensitive, allowing \"task\" to match \"Task.\" Keyword order is","lastModifiedDate":"2023-11-03"},{"lineNumber":359,"author":{"gitId":"kiatkat"},"content":"flexible,","lastModifiedDate":"2023-11-03"},{"lineNumber":360,"author":{"gitId":"kiatkat"},"content":"and only the task name is considered. Full words are matched, so \"Tas\" won\u0027t match \"Task.\" The search operates on an OR logic, returning tasks matching at least one keyword. This ensures a simple and effective task-finding process. \u003cbr\u003e","lastModifiedDate":"2023-11-03"},{"lineNumber":361,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":362,"author":{"gitId":"yarnmengnus"},"content":"**Command Format:** `find [keywords]...` \u003cbr\u003e","lastModifiedDate":"2023-11-11"},{"lineNumber":363,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":364,"author":{"gitId":"yarnmengnus"},"content":"**Acceptable Values for each Parameter:** \u003cbr\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":365,"author":{"gitId":"yarnmengnus"},"content":"\u0026emsp;`[TaskName]` - A task name that matches in the Task list. \u003cbr\u003e","lastModifiedDate":"2023-11-11"},{"lineNumber":366,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":367,"author":{"gitId":"yarnmengnus"},"content":"**Example Commands:** \u003cbr\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":368,"author":{"gitId":"yarnmengnus"},"content":"\u0026emsp;`find quiz` (returns quiz grading task and make a quiz) \u003cbr\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":369,"author":{"gitId":"yarnmengnus"},"content":"\u0026emsp;`find project` (returns project grading) \u003cbr\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":370,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":371,"author":{"gitId":"yarnmengnus"},"content":"**Precise Expected Outputs when the command succeeds:** \u003cbr\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":372,"author":{"gitId":"yarnmengnus"},"content":"(For Finding a particular Task)","lastModifiedDate":"2023-10-27"},{"lineNumber":373,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":374,"author":{"gitId":"yarnmengnus"},"content":"```","lastModifiedDate":"2023-10-27"},{"lineNumber":375,"author":{"gitId":"eyelessrhyme7"},"content":"3 tasks listed!","lastModifiedDate":"2023-11-11"},{"lineNumber":376,"author":{"gitId":"yarnmengnus"},"content":"```","lastModifiedDate":"2023-10-27"},{"lineNumber":377,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":378,"author":{"gitId":"yarnmengnus"},"content":"**Precise Expected Outputs when the command fails:** \u003cbr\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":379,"author":{"gitId":"eyelessrhyme7"},"content":"(If provided with an invalid taskNumber which is not in the list or even a negative index number","lastModifiedDate":"2023-11-11"},{"lineNumber":380,"author":{"gitId":"yarnmengnus"},"content":"the following message will be printed)","lastModifiedDate":"2023-10-27"},{"lineNumber":381,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":382,"author":{"gitId":"yarnmengnus"},"content":"```","lastModifiedDate":"2023-10-27"},{"lineNumber":383,"author":{"gitId":"eyelessrhyme7"},"content":"0 tasks listed!","lastModifiedDate":"2023-11-11"},{"lineNumber":384,"author":{"gitId":"yarnmengnus"},"content":"```","lastModifiedDate":"2023-10-27"},{"lineNumber":385,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":386,"author":{"gitId":"eyelessrhyme7"},"content":"### Configuring Settings : `set`","lastModifiedDate":"2023-11-11"},{"lineNumber":387,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":388,"author":{"gitId":"eyelessrhyme7"},"content":"Allows you to configure certain parameters as you see fit. \u003cbr\u003e","lastModifiedDate":"2023-11-11"},{"lineNumber":389,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":390,"author":{"gitId":"jack1e0"},"content":"**Command Format:** `set [parameterName] [value]`","lastModifiedDate":"2023-11-11"},{"lineNumber":391,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":392,"author":{"gitId":"eyelessrhyme7"},"content":"For a list of the currently supported parameters, click [here](#supported-setting-parameters).","lastModifiedDate":"2023-11-11"},{"lineNumber":393,"author":{"gitId":"eyelessrhyme7"},"content":"To make ProfPlan more customizable, we are looking to add more in the future, so stay tuned!","lastModifiedDate":"2023-11-11"},{"lineNumber":394,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":395,"author":{"gitId":"-"},"content":"### Editing the data file","lastModifiedDate":"2023-10-27"},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":397,"author":{"gitId":"yarnmengnus"},"content":"ProfPlan data is saved automatically as a JSON file `[JAR file location]/data/profplan.json`. Advanced users are welcome to update data directly by editing that data file","lastModifiedDate":"2023-10-27"},{"lineNumber":398,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":399,"author":{"gitId":"yarnmengnus"},"content":"\u003cdiv markdown \u003d \u0027block\u0027 class \u003d \u0027Warning\u0027 \u003e :warning: Caution: If your changes to the data file makes its format invalid, ProfPlan will discard all data and start with an empty data file at the next run. Hence, it is recommended to take a backup of the file before editing it","lastModifiedDate":"2023-10-27"},{"lineNumber":400,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":401,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":402,"author":{"gitId":"yarnmengnus"},"content":"### Saving the data","lastModifiedDate":"2023-10-27"},{"lineNumber":403,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":404,"author":{"gitId":"yarnmengnus"},"content":"ProfPlan data is saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2023-10-27"},{"lineNumber":405,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":406,"author":{"gitId":"kiatkat"},"content":"### Exiting the program : `exit`","lastModifiedDate":"2023-11-03"},{"lineNumber":407,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":408,"author":{"gitId":"kiatkat"},"content":"Exits the program. \u003cbr\u003e","lastModifiedDate":"2023-11-03"},{"lineNumber":409,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":410,"author":{"gitId":"jack1e0"},"content":"**Command Format:** `exit`","lastModifiedDate":"2023-11-11"},{"lineNumber":411,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":412,"author":{"gitId":"eyelessrhyme7"},"content":"## Task Management Features","lastModifiedDate":"2023-11-11"},{"lineNumber":413,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":414,"author":{"gitId":"eyelessrhyme7"},"content":"Recommended features for you to get more out of ProfPlan","lastModifiedDate":"2023-11-11"},{"lineNumber":415,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":416,"author":{"gitId":"eyelessrhyme7"},"content":"## Parameters","lastModifiedDate":"2023-11-11"},{"lineNumber":417,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":418,"author":{"gitId":"eyelessrhyme7"},"content":"### Description","lastModifiedDate":"2023-11-11"},{"lineNumber":419,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":420,"author":{"gitId":"eyelessrhyme7"},"content":"You can insert a description for each task, to note down additional details. \u003cbr\u003e","lastModifiedDate":"2023-11-11"},{"lineNumber":421,"author":{"gitId":"eyelessrhyme7"},"content":"**Valid format:** `des/[description]` \u003cbr\u003e","lastModifiedDate":"2023-11-11"},{"lineNumber":422,"author":{"gitId":"yarnmengnus"},"content":"**Acceptable Parameter Values**: `description`: Any text input.","lastModifiedDate":"2023-11-11"},{"lineNumber":423,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":424,"author":{"gitId":"eyelessrhyme7"},"content":"### Priority","lastModifiedDate":"2023-11-11"},{"lineNumber":425,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":426,"author":{"gitId":"yarnmengnus"},"content":"All tasks must have a priority level specified on creation, which can also be edited. \u003cbr\u003e","lastModifiedDate":"2023-11-11"},{"lineNumber":427,"author":{"gitId":"yarnmengnus"},"content":"**Valid format:** `p/[priority]` \u003cbr\u003e","lastModifiedDate":"2023-11-11"},{"lineNumber":428,"author":{"gitId":"yarnmengnus"},"content":"**Acceptable Parameter Values**: `priority`: Integer from 1 to 10, inclusive.","lastModifiedDate":"2023-11-11"},{"lineNumber":429,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":430,"author":{"gitId":"eyelessrhyme7"},"content":"### Status","lastModifiedDate":"2023-11-11"},{"lineNumber":431,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":432,"author":{"gitId":"eyelessrhyme7"},"content":"Indicates the current completion state of a task. It is crucial for tracking the progress and managing the workload.","lastModifiedDate":"2023-11-11"},{"lineNumber":433,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":434,"author":{"gitId":"yarnmengnus"},"content":"- **Valid States**:","lastModifiedDate":"2023-11-11"},{"lineNumber":435,"author":{"gitId":"yarnmengnus"},"content":"  - `done`: This status is set when all objectives of the task are met and no further action is required.","lastModifiedDate":"2023-11-11"},{"lineNumber":436,"author":{"gitId":"yarnmengnus"},"content":"  - `undone`: This status is used for tasks that are still in progress or have not been started. It helps in identifying tasks that need attention.","lastModifiedDate":"2023-11-11"},{"lineNumber":437,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":438,"author":{"gitId":"yarnmengnus"},"content":"Note: Status is set as undone by default as soon as a task is added. This parameter is not available to be directly set on the creation of a task.","lastModifiedDate":"2023-11-11"},{"lineNumber":439,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":440,"author":{"gitId":"eyelessrhyme7"},"content":"### Due Date","lastModifiedDate":"2023-11-11"},{"lineNumber":441,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":442,"author":{"gitId":"eyelessrhyme7"},"content":"All tasks must have a due date specified on creation, which can also be edited. If user inputs impossible dates (eg. 30-02-2023), the date is autocorrected to last date of the month. \u003cbr\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":443,"author":{"gitId":"yarnmengnus"},"content":"**Valid format:** `d/[dueDate]` \u003cbr\u003e","lastModifiedDate":"2023-11-11"},{"lineNumber":444,"author":{"gitId":"yarnmengnus"},"content":"**Acceptable Parameter Values**: `dueDate`: A date of the format dd-MM-yyyy.","lastModifiedDate":"2023-11-11"},{"lineNumber":445,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":446,"author":{"gitId":"eyelessrhyme7"},"content":"### Tags","lastModifiedDate":"2023-11-11"},{"lineNumber":447,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":448,"author":{"gitId":"eyelessrhyme7"},"content":"You can assign tags to a task, to further segregate and classify them.\u003cbr\u003e","lastModifiedDate":"2023-11-11"},{"lineNumber":449,"author":{"gitId":"yarnmengnus"},"content":"**Valid format:** `t/[tag]` \u003cbr\u003e","lastModifiedDate":"2023-11-11"},{"lineNumber":450,"author":{"gitId":"yarnmengnus"},"content":"**Acceptable Parameter Values**: `tag`: Any alphanumeric value, without spaces.","lastModifiedDate":"2023-11-11"},{"lineNumber":451,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":452,"author":{"gitId":"eyelessrhyme7"},"content":"### Link","lastModifiedDate":"2023-11-11"},{"lineNumber":453,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":454,"author":{"gitId":"eyelessrhyme7"},"content":"You can assign a link to a task, to access the reference easily. \u003cbr\u003e","lastModifiedDate":"2023-11-11"},{"lineNumber":455,"author":{"gitId":"yarnmengnus"},"content":"**Valid format:** `l/[link]` \u003cbr\u003e","lastModifiedDate":"2023-11-11"},{"lineNumber":456,"author":{"gitId":"yarnmengnus"},"content":"**Acceptable Parameter Values**: `link`: Any text input.","lastModifiedDate":"2023-11-11"},{"lineNumber":457,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":458,"author":{"gitId":"eyelessrhyme7"},"content":"### Recurrence","lastModifiedDate":"2023-11-11"},{"lineNumber":459,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":460,"author":{"gitId":"jack1e0"},"content":"You can specify whether the task recurs on a daily, weekly, monthly, or semesterly basis.\u003cbr\u003e","lastModifiedDate":"2023-11-11"},{"lineNumber":461,"author":{"gitId":"jack1e0"},"content":"If a task does recur, marking the task as `done` will refresh its due date, and its Status will always be `undone`.\u003cbr\u003e","lastModifiedDate":"2023-11-11"},{"lineNumber":462,"author":{"gitId":"jack1e0"},"content":"Tasks with unassigned recurrence will not recur.\u003cbr\u003e","lastModifiedDate":"2023-11-11"},{"lineNumber":463,"author":{"gitId":"yarnmengnus"},"content":"**Valid format:** `recur/[recurrenceType]` \u003cbr\u003e","lastModifiedDate":"2023-11-11"},{"lineNumber":464,"author":{"gitId":"yarnmengnus"},"content":"**Acceptable Parameter Values**: `recurrenceType`: Any of the following words, case-insensitive: `daily`, `weekly`, `monthly`, `semesterly`. Alternatively, any of the short-forms `d`, `w`, `m`, `s`, also case-insensitive.","lastModifiedDate":"2023-11-11"},{"lineNumber":465,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":466,"author":{"gitId":"eyelessrhyme7"},"content":"### Management Commands","lastModifiedDate":"2023-11-11"},{"lineNumber":467,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":468,"author":{"gitId":"yarnmengnus"},"content":"### Mark task as done / undone : `mark / unmark`","lastModifiedDate":"2023-10-27"},{"lineNumber":469,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":470,"author":{"gitId":"yarnmengnus"},"content":"**What it does:** \u003cbr\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":471,"author":{"gitId":"eyelessrhyme7"},"content":"Allows you to easily track the completion status of your tasks. You can mark a task as done when you have completed it, and mark it as undone if you need to revisit or revise the same task. \u003cbr\u003e","lastModifiedDate":"2023-11-11"},{"lineNumber":472,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":473,"author":{"gitId":"yarnmengnus"},"content":"**Command Format:** \u003cbr\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":474,"author":{"gitId":"eyelessrhyme7"},"content":"\u0026emsp;To mark Task as done: `mark [taskNumber]` \u003cbr\u003e","lastModifiedDate":"2023-11-11"},{"lineNumber":475,"author":{"gitId":"eyelessrhyme7"},"content":"\u0026emsp;To mark Task as undone: `unmark [taskNumber]` \u003cbr\u003e","lastModifiedDate":"2023-11-11"},{"lineNumber":476,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":477,"author":{"gitId":"yarnmengnus"},"content":"**Acceptable Values for each Parameter:** \u003cbr\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":478,"author":{"gitId":"eyelessrhyme7"},"content":"\u0026emsp;`[taskNumber]` - Integer representing the task number in your task list (1, 2, 3, ...) \u003cbr\u003e","lastModifiedDate":"2023-11-11"},{"lineNumber":479,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":480,"author":{"gitId":"yarnmengnus"},"content":"**Example Commands:** \u003cbr\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":481,"author":{"gitId":"yarnmengnus"},"content":"\u0026emsp;`mark 5` \u003cbr\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":482,"author":{"gitId":"yarnmengnus"},"content":"\u0026emsp;`unmark 4` \u003cbr\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":483,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":484,"author":{"gitId":"yarnmengnus"},"content":"**Precise Expected Outputs when marking a task as done:** \u003cbr\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":485,"author":{"gitId":"yarnmengnus"},"content":"When you mark Task as done, you will receive the following confirmation message:","lastModifiedDate":"2023-10-27"},{"lineNumber":486,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":487,"author":{"gitId":"yarnmengnus"},"content":"```","lastModifiedDate":"2023-10-27"},{"lineNumber":488,"author":{"gitId":"eyelessrhyme7"},"content":"Task successfully marked as done, Prof! Here is your updated task list","lastModifiedDate":"2023-11-11"},{"lineNumber":489,"author":{"gitId":"yarnmengnus"},"content":"```","lastModifiedDate":"2023-10-27"},{"lineNumber":490,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":491,"author":{"gitId":"yarnmengnus"},"content":"**Precise Expected Outputs when marking a task as undone:** \u003cbr\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":492,"author":{"gitId":"yarnmengnus"},"content":"When you mark a task as undone, you\u0027ll receive the following confirmation message:","lastModifiedDate":"2023-10-27"},{"lineNumber":493,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":494,"author":{"gitId":"yarnmengnus"},"content":"```","lastModifiedDate":"2023-10-27"},{"lineNumber":495,"author":{"gitId":"eyelessrhyme7"},"content":"Task successfully marked as undone, Prof! Here is your updated task list","lastModifiedDate":"2023-11-11"},{"lineNumber":496,"author":{"gitId":"yarnmengnus"},"content":"```","lastModifiedDate":"2023-10-27"},{"lineNumber":497,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":498,"author":{"gitId":"yarnmengnus"},"content":"**Precise Expected Outputs when the command fails:** \u003cbr\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":499,"author":{"gitId":"yarnmengnus"},"content":"If you provide an invalid task number (e.g., a task number that does not exist in your task list),","lastModifiedDate":"2023-10-27"},{"lineNumber":500,"author":{"gitId":"newway1814"},"content":"you will receive the following error message: (both for mark and unmark command)","lastModifiedDate":"2023-11-08"},{"lineNumber":501,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":502,"author":{"gitId":"yarnmengnus"},"content":"```","lastModifiedDate":"2023-10-27"},{"lineNumber":503,"author":{"gitId":"newway1814"},"content":"Task not found please enter a valid Task Number.","lastModifiedDate":"2023-11-08"},{"lineNumber":504,"author":{"gitId":"yarnmengnus"},"content":"```","lastModifiedDate":"2023-10-27"},{"lineNumber":505,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":506,"author":{"gitId":"yarnmengnus"},"content":"### Filter tasks : `filter`","lastModifiedDate":"2023-10-27"},{"lineNumber":507,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":508,"author":{"gitId":"yarnmengnus"},"content":"#### a. Due Date:","lastModifiedDate":"2023-10-27"},{"lineNumber":509,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":510,"author":{"gitId":"yarnmengnus"},"content":"\u0026emsp;**What it does:**\u003cbr\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":511,"author":{"gitId":"yarnmengnus"},"content":"\u0026emsp;\u0026emsp;All tasks that fall before the given due date is displayed\u003cbr\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":512,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":513,"author":{"gitId":"yarnmengnus"},"content":"\u0026emsp;**Command Format:** `filter d/[date]` \u003cbr\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":514,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":515,"author":{"gitId":"yarnmengnus"},"content":"\u0026emsp;**Acceptable Values for each Parameter:** \u003cbr\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":516,"author":{"gitId":"yarnmengnus"},"content":"\u0026emsp;\u0026emsp;`[date]` - In dd-MM-yyyy format. \u003cbr\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":517,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":518,"author":{"gitId":"jack1e0"},"content":"\u0026emsp;**Example Commands:** `filter d/01-01-2023`\u003cbr\u003e","lastModifiedDate":"2023-11-11"},{"lineNumber":519,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":520,"author":{"gitId":"jack1e0"},"content":"\u0026emsp;**Precise Expected Outputs when the command succeeds:**","lastModifiedDate":"2023-11-11"},{"lineNumber":521,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":522,"author":{"gitId":"yarnmengnus"},"content":"```","lastModifiedDate":"2023-10-27"},{"lineNumber":523,"author":{"gitId":"jack1e0"},"content":"Here are your tasks that are:","lastModifiedDate":"2023-11-03"},{"lineNumber":524,"author":{"gitId":"eyelessrhyme7"},"content":"Due before: 13-12-2023","lastModifiedDate":"2023-11-13"},{"lineNumber":525,"author":{"gitId":"yarnmengnus"},"content":"```","lastModifiedDate":"2023-10-27"},{"lineNumber":526,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":527,"author":{"gitId":"yarnmengnus"},"content":"#### b. Priority","lastModifiedDate":"2023-10-27"},{"lineNumber":528,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":529,"author":{"gitId":"yarnmengnus"},"content":"\u0026emsp;**What it does:** \u003cbr\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":530,"author":{"gitId":"yarnmengnus"},"content":"\u0026emsp;\u0026emsp;All tasks of the given priority is displayed. \u003cbr\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":531,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":532,"author":{"gitId":"yarnmengnus"},"content":"\u0026emsp;**Command Format:** `filter p/[priority]` \u003cbr\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":533,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":534,"author":{"gitId":"yarnmengnus"},"content":"\u0026emsp;**Acceptable Values for each Parameter:** \u003cbr\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":535,"author":{"gitId":"yarnmengnus"},"content":"\u0026emsp;\u0026emsp;`[priority]` - Integer from 1 to 10 inclusive. \u003cbr\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":536,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":537,"author":{"gitId":"jack1e0"},"content":"\u0026emsp;**Example Commands:** `filter p/3` \u003cbr\u003e","lastModifiedDate":"2023-11-11"},{"lineNumber":538,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":539,"author":{"gitId":"jack1e0"},"content":"\u0026emsp;**Precise Expected Outputs when the command succeeds:**","lastModifiedDate":"2023-11-11"},{"lineNumber":540,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":541,"author":{"gitId":"yarnmengnus"},"content":"```","lastModifiedDate":"2023-10-27"},{"lineNumber":542,"author":{"gitId":"jack1e0"},"content":"Here are your tasks that are:","lastModifiedDate":"2023-11-03"},{"lineNumber":543,"author":{"gitId":"jack1e0"},"content":"Priority: 3","lastModifiedDate":"2023-11-11"},{"lineNumber":544,"author":{"gitId":"yarnmengnus"},"content":"```","lastModifiedDate":"2023-10-27"},{"lineNumber":545,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":546,"author":{"gitId":"yarnmengnus"},"content":"#### c. Status","lastModifiedDate":"2023-10-27"},{"lineNumber":547,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":548,"author":{"gitId":"yarnmengnus"},"content":"\u0026emsp;**What it does:** \u003cbr\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":549,"author":{"gitId":"yarnmengnus"},"content":"\u0026emsp;All tasks of the given status is displayed.","lastModifiedDate":"2023-10-27"},{"lineNumber":550,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":551,"author":{"gitId":"yarnmengnus"},"content":"\u0026emsp;**Command Format:** `filter s/[status]` \u003cbr\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":552,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":553,"author":{"gitId":"yarnmengnus"},"content":"\u0026emsp;**Acceptable Values for each Parameter:** \u003cbr\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":554,"author":{"gitId":"yarnmengnus"},"content":"\u0026emsp;\u0026emsp;`[status]`- done or undone \u003cbr\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":555,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":556,"author":{"gitId":"jack1e0"},"content":"\u0026emsp;**Example Commands:** `filter s/done` \u003cbr\u003e","lastModifiedDate":"2023-11-11"},{"lineNumber":557,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":558,"author":{"gitId":"jack1e0"},"content":"\u0026emsp;**Precise Expected Outputs when the command succeeds:**","lastModifiedDate":"2023-11-11"},{"lineNumber":559,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":560,"author":{"gitId":"yarnmengnus"},"content":"```","lastModifiedDate":"2023-10-27"},{"lineNumber":561,"author":{"gitId":"jack1e0"},"content":"Here are your tasks that are:","lastModifiedDate":"2023-11-03"},{"lineNumber":562,"author":{"gitId":"jack1e0"},"content":"Status: done","lastModifiedDate":"2023-11-11"},{"lineNumber":563,"author":{"gitId":"yarnmengnus"},"content":"```","lastModifiedDate":"2023-10-27"},{"lineNumber":564,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":565,"author":{"gitId":"jack1e0"},"content":"#### d. Recurrence","lastModifiedDate":"2023-11-03"},{"lineNumber":566,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":567,"author":{"gitId":"jack1e0"},"content":"\u0026emsp;**What it does:** \u003cbr\u003e","lastModifiedDate":"2023-11-03"},{"lineNumber":568,"author":{"gitId":"jack1e0"},"content":"\u0026emsp;All tasks of the given recurring type is displayed.","lastModifiedDate":"2023-11-03"},{"lineNumber":569,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":570,"author":{"gitId":"jack1e0"},"content":"\u0026emsp;**Command Format:** `filter recur/[recurringType]` \u003cbr\u003e","lastModifiedDate":"2023-11-03"},{"lineNumber":571,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":572,"author":{"gitId":"jack1e0"},"content":"\u0026emsp;**Acceptable Values for each Parameter:** \u003cbr\u003e","lastModifiedDate":"2023-11-03"},{"lineNumber":573,"author":{"gitId":"jack1e0"},"content":"\u0026emsp;\u0026emsp;`[recurringType]`- none, daily, weekly, monthly, semesterly \u003cbr\u003e","lastModifiedDate":"2023-11-03"},{"lineNumber":574,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":575,"author":{"gitId":"jack1e0"},"content":"\u0026emsp;**Example Commands:** `filter recur/weekly` \u003cbr\u003e","lastModifiedDate":"2023-11-11"},{"lineNumber":576,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":577,"author":{"gitId":"jack1e0"},"content":"\u0026emsp;**Precise Expected Outputs when the command succeeds:**","lastModifiedDate":"2023-11-11"},{"lineNumber":578,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":579,"author":{"gitId":"yarnmengnus"},"content":"```","lastModifiedDate":"2023-10-27"},{"lineNumber":580,"author":{"gitId":"jack1e0"},"content":"Here are your tasks that are:","lastModifiedDate":"2023-11-03"},{"lineNumber":581,"author":{"gitId":"jack1e0"},"content":"Recurring: WEEKLY","lastModifiedDate":"2023-11-11"},{"lineNumber":582,"author":{"gitId":"yarnmengnus"},"content":"```","lastModifiedDate":"2023-10-27"},{"lineNumber":583,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":584,"author":{"gitId":"jack1e0"},"content":"#### e. Combination of the above","lastModifiedDate":"2023-11-03"},{"lineNumber":585,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":586,"author":{"gitId":"jack1e0"},"content":"\u0026emsp;**What it does:** \u003cbr\u003e","lastModifiedDate":"2023-11-03"},{"lineNumber":587,"author":{"gitId":"jack1e0"},"content":"\u0026emsp;All tasks meeting the specified criteria is displayed.","lastModifiedDate":"2023-11-03"},{"lineNumber":588,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":589,"author":{"gitId":"yarnmengnus"},"content":"\u0026emsp;**Command Format:** `filter d/[dueDate] p/[priority] s[status] recur/[recurringType]` \u003cbr\u003e","lastModifiedDate":"2023-11-11"},{"lineNumber":590,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":591,"author":{"gitId":"jack1e0"},"content":"\u0026emsp;**Example Commands:** `filter p/3 recur/weekly` \u003cbr\u003e","lastModifiedDate":"2023-11-03"},{"lineNumber":592,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":593,"author":{"gitId":"jack1e0"},"content":"\u0026emsp;**Precise Expected Outputs when the command succeeds:**","lastModifiedDate":"2023-11-11"},{"lineNumber":594,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":595,"author":{"gitId":"yarnmengnus"},"content":"```","lastModifiedDate":"2023-10-27"},{"lineNumber":596,"author":{"gitId":"jack1e0"},"content":"Here are your tasks that are:","lastModifiedDate":"2023-11-03"},{"lineNumber":597,"author":{"gitId":"jack1e0"},"content":"Priority: 3","lastModifiedDate":"2023-11-11"},{"lineNumber":598,"author":{"gitId":"jack1e0"},"content":"Recurring: WEEKLY","lastModifiedDate":"2023-11-11"},{"lineNumber":599,"author":{"gitId":"yarnmengnus"},"content":"```","lastModifiedDate":"2023-10-27"},{"lineNumber":600,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":601,"author":{"gitId":"jack1e0"},"content":"\u0026emsp;**Precise Expected Outputs when the command fails:**","lastModifiedDate":"2023-11-11"},{"lineNumber":602,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":603,"author":{"gitId":"yarnmengnus"},"content":"```","lastModifiedDate":"2023-10-27"},{"lineNumber":604,"author":{"gitId":"yarnmengnus"},"content":"Invalid command format! ","lastModifiedDate":"2023-10-27"},{"lineNumber":605,"author":{"gitId":"jack1e0"},"content":"filter: Filters for tasks with one or more criteria and displays them as a list with index numbers.","lastModifiedDate":"2023-11-03"},{"lineNumber":606,"author":{"gitId":"eyelessrhyme7"},"content":"Parameters: d/[dueDate] p/[priority] recur/[recur] s/[status]","lastModifiedDate":"2023-11-11"},{"lineNumber":607,"author":{"gitId":"jack1e0"},"content":"Example: filter d/01-01-2024 s/done","lastModifiedDate":"2023-11-03"},{"lineNumber":608,"author":{"gitId":"yarnmengnus"},"content":"```","lastModifiedDate":"2023-10-27"},{"lineNumber":609,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":610,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":611,"author":{"gitId":"yarnmengnus"},"content":"## Advanced Features","lastModifiedDate":"2023-10-27"},{"lineNumber":612,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":613,"author":{"gitId":"yarnmengnus"},"content":"Psst! Were the features mentioned in the introduction not quite enough to satiate your craving for productivity? Fret not! ProfPlan comes with novel capabilities that will reinvent the way you approach tasks! Before we end this guide, we’ll show you some ways our veteran users use ProfPlan to make themselves more productive than ever before!","lastModifiedDate":"2023-11-11"},{"lineNumber":614,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":615,"author":{"gitId":"yarnmengnus"},"content":"### Recommend next task :","lastModifiedDate":"2023-10-27"},{"lineNumber":616,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":617,"author":{"gitId":"yarnmengnus"},"content":"Ever felt overwhelmed by a mountain of work, and lost on what to do next? Many tasks, each with slightly different deadlines and priorities, can come together to overload our capacities for good planning, and make it impossible for us to choose the optimal task to work on next.\u003cbr\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":618,"author":{"gitId":"yarnmengnus"},"content":"With our customised algorithm, ProfPlan takes this cognitive load off your shoulders. Simply use the command do_next, and ProfPlan will identify the ideal task for you to work on next!\u003cbr\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":619,"author":{"gitId":"eyelessrhyme7"},"content":"**Valid Format:** `do_next` \u003cbr\u003e","lastModifiedDate":"2023-11-03"},{"lineNumber":620,"author":{"gitId":"eyelessrhyme7"},"content":"**Expected Output:** \u003cbr\u003e","lastModifiedDate":"2023-11-03"},{"lineNumber":621,"author":{"gitId":"eyelessrhyme7"},"content":"```","lastModifiedDate":"2023-11-11"},{"lineNumber":622,"author":{"gitId":"eyelessrhyme7"},"content":"Here is the next task you need to do Prof:","lastModifiedDate":"2023-11-11"},{"lineNumber":623,"author":{"gitId":"eyelessrhyme7"},"content":"Grade assignments, Priority: 10, DueDate: 02-11-2023","lastModifiedDate":"2023-11-11"},{"lineNumber":624,"author":{"gitId":"eyelessrhyme7"},"content":"```","lastModifiedDate":"2023-11-11"},{"lineNumber":625,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":626,"author":{"gitId":"yarnmengnus"},"content":"### Visualise important and urgent tasks :","lastModifiedDate":"2023-10-27"},{"lineNumber":627,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":628,"author":{"gitId":"eyelessrhyme7"},"content":"Sometimes, we might have 20, 30, 40 or more tasks in our lists!","lastModifiedDate":"2023-11-03"},{"lineNumber":629,"author":{"gitId":"eyelessrhyme7"},"content":"It can be extremely difficult to prioritize and visualize them based on what to do next.","lastModifiedDate":"2023-11-03"},{"lineNumber":630,"author":{"gitId":"eyelessrhyme7"},"content":"Fret not! With the Urgency-Priority Matrix, you can constantly visualize your tasks with ease.\u003cbr\u003e","lastModifiedDate":"2023-11-03"},{"lineNumber":631,"author":{"gitId":"eyelessrhyme7"},"content":"The matrix is updated automatically whenever there\u0027s any change to your taskList.\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2023-11-03"},{"lineNumber":632,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":633,"author":{"gitId":"yarnmengnus"},"content":"The columns represent the different Urgency Levels (How close the deadline is): `1-10`\u003cbr\u003e","lastModifiedDate":"2023-11-11"},{"lineNumber":634,"author":{"gitId":"yarnmengnus"},"content":"The rows represent the different Priority Levels (How important the task is): `1-10`","lastModifiedDate":"2023-11-11"},{"lineNumber":635,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":636,"author":{"gitId":"yarnmengnus"},"content":"The higher the urgency and the priority, the task will appear further towards the top right of the matrix.","lastModifiedDate":"2023-11-11"},{"lineNumber":637,"author":{"gitId":"yarnmengnus"},"content":"The task(s) in the top right of the matrix should be done first.","lastModifiedDate":"2023-11-11"},{"lineNumber":638,"author":{"gitId":"eyelessrhyme7"},"content":"![img.png](matrix.png)","lastModifiedDate":"2023-11-03"},{"lineNumber":639,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":640,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":641,"author":{"gitId":"yarnmengnus"},"content":"### Create A Recurring Task","lastModifiedDate":"2023-11-11"},{"lineNumber":642,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":643,"author":{"gitId":"jack1e0"},"content":"You can specify whether the task recurs on a daily, weekly, monthly, or semesterly basis.\u003cbr\u003e","lastModifiedDate":"2023-11-11"},{"lineNumber":644,"author":{"gitId":"jack1e0"},"content":"If a task does recur, marking the task as `done` will refresh its due date, and its Status will always be `undone`.\u003cbr\u003e","lastModifiedDate":"2023-11-11"},{"lineNumber":645,"author":{"gitId":"jack1e0"},"content":"Tasks with unassigned recurrence will not recur.\u003cbr\u003e","lastModifiedDate":"2023-11-11"},{"lineNumber":646,"author":{"gitId":"yarnmengnus"},"content":"**Valid format:** `recur/[recurrenceType]` \u003cbr\u003e","lastModifiedDate":"2023-11-11"},{"lineNumber":647,"author":{"gitId":"yarnmengnus"},"content":"**Acceptable Parameter Values**: `recurrenceType`: Any of the following words, case-insensitive: `daily`, `weekly`, `monthly`, `semesterly`. Alternatively, any of the short-forms `d`, `w`, `m`, `s`, also case-insensitive.","lastModifiedDate":"2023-11-11"},{"lineNumber":648,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":649,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":650,"author":{"gitId":"jack1e0"},"content":"### Sort Tasks based on Priority :","lastModifiedDate":"2023-11-08"},{"lineNumber":651,"author":{"gitId":"jack1e0"},"content":"ProfPlan arranges your tasks in decreasing order of priority. It\u0027s like a wizard\u0027s duel, with the mightiest spells taking the center stage. The high-priority tasks take their rightful place at the top of the list, ready to be conquered. \u003cbr\u003e","lastModifiedDate":"2023-11-11"},{"lineNumber":652,"author":{"gitId":"newway1814"},"content":"**Valid Format:** `sort_priority` \u003cbr\u003e","lastModifiedDate":"2023-11-08"},{"lineNumber":653,"author":{"gitId":"newway1814"},"content":"**Expected Output:**","lastModifiedDate":"2023-11-08"},{"lineNumber":654,"author":{"gitId":"jack1e0"},"content":"` Here is your task list Prof, sorted based on priority!` \u003cbr\u003e","lastModifiedDate":"2023-11-11"},{"lineNumber":655,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":656,"author":{"gitId":"newway1814"},"content":"**Note:** ProfPlan will sort the tasks that is displayed in the UI at the time when the command is run.","lastModifiedDate":"2023-11-13"},{"lineNumber":657,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":658,"author":{"gitId":"jack1e0"},"content":"### Sort Tasks based on DueDate:","lastModifiedDate":"2023-11-11"},{"lineNumber":659,"author":{"gitId":"jack1e0"},"content":"TaskMagic weaves its duedate magic. It sorts your tasks by nearest due date. This means the tasks with the nearest due dates are revealed like shining stars, beckoning you to attend to them next. \u003cbr\u003e","lastModifiedDate":"2023-11-11"},{"lineNumber":660,"author":{"gitId":"newway1814"},"content":"**Valid Format:** `sort_duedate` \u003cbr\u003e","lastModifiedDate":"2023-11-08"},{"lineNumber":661,"author":{"gitId":"newway1814"},"content":"**Expected Output:**","lastModifiedDate":"2023-11-08"},{"lineNumber":662,"author":{"gitId":"jack1e0"},"content":"` Here is your task list Prof, sorted based on nearest due date!` \u003cbr\u003e","lastModifiedDate":"2023-11-11"},{"lineNumber":663,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":664,"author":{"gitId":"newway1814"},"content":"**Note:** ProfPlan will sort the tasks that is displayed in the UI at the time when the command is run.","lastModifiedDate":"2023-11-13"},{"lineNumber":665,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":666,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":667,"author":{"gitId":"yarnmengnus"},"content":"### View Task statistics: `stats`","lastModifiedDate":"2023-11-11"},{"lineNumber":668,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":669,"author":{"gitId":"eyelessrhyme7"},"content":"Retrieves a list of statistics about your tasks in ProfPlan. As of now, Completion Rate of Tasks is available.","lastModifiedDate":"2023-11-11"},{"lineNumber":670,"author":{"gitId":"eyelessrhyme7"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-11-11"},{"lineNumber":671,"author":{"gitId":"jack1e0"},"content":"**Valid Format:** `stats`","lastModifiedDate":"2023-11-11"},{"lineNumber":672,"author":{"gitId":"eyelessrhyme7"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-11-11"},{"lineNumber":673,"author":{"gitId":"eyelessrhyme7"},"content":"**Precise Expected Outputs when the command succeeds:**","lastModifiedDate":"2023-11-11"},{"lineNumber":674,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":675,"author":{"gitId":"eyelessrhyme7"},"content":"```","lastModifiedDate":"2023-11-11"},{"lineNumber":676,"author":{"gitId":"yarnmengnus"},"content":"Here are your statistics Prof!","lastModifiedDate":"2023-11-11"},{"lineNumber":677,"author":{"gitId":"eyelessrhyme7"},"content":"Completion Rate: 38.5%","lastModifiedDate":"2023-11-11"},{"lineNumber":678,"author":{"gitId":"eyelessrhyme7"},"content":"```","lastModifiedDate":"2023-11-11"},{"lineNumber":679,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":680,"author":{"gitId":"yarnmengnus"},"content":"---","lastModifiedDate":"2023-11-11"},{"lineNumber":681,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":682,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":683,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":684,"author":{"gitId":"kiatkat"},"content":"**Q**: How do I transfer my data to another computer?\u003cbr\u003e","lastModifiedDate":"2023-10-02"},{"lineNumber":685,"author":{"gitId":"kiatkat"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that","lastModifiedDate":"2023-10-02"},{"lineNumber":686,"author":{"gitId":"kiatkat"},"content":"contains the data in the previous ProfPlan home folder.","lastModifiedDate":"2023-10-02"},{"lineNumber":687,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":688,"author":{"gitId":"yarnmengnus"},"content":"---","lastModifiedDate":"2023-11-11"},{"lineNumber":689,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":690,"author":{"gitId":"-"},"content":"## Known issues","lastModifiedDate":"2023-09-08"},{"lineNumber":691,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":692,"author":{"gitId":"-"},"content":"1. **When using multiple screens**, if you move the application to a secondary screen, and later switch to using only the primary screen, the GUI will open off-screen. The remedy is to delete the `preferences.json` file created by the application before running the application again.","lastModifiedDate":"2023-09-08"},{"lineNumber":693,"author":{"gitId":"yarnmengnus"},"content":"1. **When scrolling through Urgency-Priority Matrix**, if you scroll too quickly, the cells take some time to render and display the tasks.","lastModifiedDate":"2023-11-11"},{"lineNumber":694,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":695,"author":{"gitId":"yarnmengnus"},"content":"---","lastModifiedDate":"2023-11-11"},{"lineNumber":696,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":697,"author":{"gitId":"yarnmengnus"},"content":"## Supported flags","lastModifiedDate":"2023-10-27"},{"lineNumber":698,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":699,"author":{"gitId":"yarnmengnus"},"content":"| **Name of flag**                        | **Flag in command** |                **Description** |","lastModifiedDate":"2023-10-27"},{"lineNumber":700,"author":{"gitId":"eyelessrhyme7"},"content":"|-----------------------------------------| ------------------- | ------------------------------ |","lastModifiedDate":"2023-11-11"},{"lineNumber":701,"author":{"gitId":"jack1e0"},"content":"| Name                                    |         n/          |           The name of the task |","lastModifiedDate":"2023-11-03"},{"lineNumber":702,"author":{"gitId":"jack1e0"},"content":"| Due Date                                |         d/          |       The due date of the task |","lastModifiedDate":"2023-11-03"},{"lineNumber":703,"author":{"gitId":"jack1e0"},"content":"| Priority                                |         p/          |       The priority of the task |","lastModifiedDate":"2023-11-03"},{"lineNumber":704,"author":{"gitId":"jack1e0"},"content":"| Tag                                     |         t/          | The tag that the task is under |","lastModifiedDate":"2023-11-03"},{"lineNumber":705,"author":{"gitId":"jack1e0"},"content":"| Link                                    |         l/          |           The link of the task |","lastModifiedDate":"2023-11-03"},{"lineNumber":706,"author":{"gitId":"eyelessrhyme7"},"content":"| Recur (not editable)                    |       recur/        | The recurring type of the task |","lastModifiedDate":"2023-11-11"},{"lineNumber":707,"author":{"gitId":"eyelessrhyme7"},"content":"| Description (not editable through `edit`) |        des/         |    The description of the task |","lastModifiedDate":"2023-11-11"},{"lineNumber":708,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":709,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":710,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":711,"author":{"gitId":"yarnmengnus"},"content":"| **Action**        | **Format, Examples**                                                                                                                           |","lastModifiedDate":"2023-10-27"},{"lineNumber":712,"author":{"gitId":"yarnmengnus"},"content":"| ----------------- | ---------------------------------------------------------------------------------------------------------------------------------------------- |","lastModifiedDate":"2023-11-11"},{"lineNumber":713,"author":{"gitId":"jack1e0"},"content":"| **Add**           | `add n/[taskName] p/[priority] d/[dueDate] recur[recur] t/[tags...] l/[link] des/[description]`, e.g. `add n/Task p/1 d/01-01-2023 recur/weekly` |","lastModifiedDate":"2023-11-11"},{"lineNumber":714,"author":{"gitId":"jack1e0"},"content":"| **Edit**          | `edit [INDEX] n/[name] p/[priority] d/[dueDate] t/[tags...] l/[link]`, e.g. `edit 1 n/Task p/1 d/01-01-2023`                                   |","lastModifiedDate":"2023-11-08"},{"lineNumber":715,"author":{"gitId":"kiatkat"},"content":"| **Find**          | `find [keywords...]`, e.g. `find canvas quiz`                                                                                                  |","lastModifiedDate":"2023-10-02"},{"lineNumber":716,"author":{"gitId":"jack1e0"},"content":"| **List Week**     | `list_week`                                                                                                                                    |","lastModifiedDate":"2023-11-03"},{"lineNumber":717,"author":{"gitId":"jack1e0"},"content":"| **List Month**    | `list_month`                                                                                                                                   |","lastModifiedDate":"2023-11-03"},{"lineNumber":718,"author":{"gitId":"jack1e0"},"content":"| **Mark**          | `mark [INDEX]`, e.g. `mark 2`                                                                                                                  |","lastModifiedDate":"2023-11-03"},{"lineNumber":719,"author":{"gitId":"jack1e0"},"content":"| **Unmark**        | `unmark [INDEX]`, e.g. `unmark 2`                                                                                                              |","lastModifiedDate":"2023-11-03"},{"lineNumber":720,"author":{"gitId":"jack1e0"},"content":"| **Delete**        | `delete [INDEX]`, e.g. `delete 2`                                                                                                              |","lastModifiedDate":"2023-11-03"},{"lineNumber":721,"author":{"gitId":"newway1814"},"content":"| **Delete All**    | `delete all`                                                                                                                                   |","lastModifiedDate":"2023-11-11"},{"lineNumber":722,"author":{"gitId":"jack1e0"},"content":"| **Sort Priority** | `sort_priority`                                                                                                                                |","lastModifiedDate":"2023-11-03"},{"lineNumber":723,"author":{"gitId":"jack1e0"},"content":"| **Sort Duedate**  | `sort_duedate`                                                                                                                                 |","lastModifiedDate":"2023-11-03"},{"lineNumber":724,"author":{"gitId":"jack1e0"},"content":"| **Filter**        | `filter d/[duedate] s/[status]...`, e.g. `filter s/done p/4`                                                                                   |","lastModifiedDate":"2023-11-03"},{"lineNumber":725,"author":{"gitId":"jack1e0"},"content":"| **Help**          | `help`                                                                                                                                         |","lastModifiedDate":"2023-11-03"},{"lineNumber":726,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":727,"author":{"gitId":"kiatkat"},"content":"## Supported Setting Parameters","lastModifiedDate":"2023-11-03"},{"lineNumber":728,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":729,"author":{"gitId":"kiatkat"},"content":"| **Parameter**    | **Description**                   | **Valid values**         | **Default value** |","lastModifiedDate":"2023-11-03"},{"lineNumber":730,"author":{"gitId":"yarnmengnus"},"content":"| ---------------- | --------------------------------- | ------------------------ | ----------------- |","lastModifiedDate":"2023-11-11"},{"lineNumber":731,"author":{"gitId":"kiatkat"},"content":"| **semesterDays** | The number of days in a semester. | Any non-negative integer | 180               |","lastModifiedDate":"2023-11-03"},{"lineNumber":732,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":733,"author":{"gitId":"yarnmengnus"},"content":"## Glossary","lastModifiedDate":"2023-10-27"},{"lineNumber":734,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":735,"author":{"gitId":"yarnmengnus"},"content":"| **Word**     | **Definition**                                                                            |","lastModifiedDate":"2023-10-27"},{"lineNumber":736,"author":{"gitId":"yarnmengnus"},"content":"| ------------ | ----------------------------------------------------------------------------------------- |","lastModifiedDate":"2023-11-11"},{"lineNumber":737,"author":{"gitId":"yarnmengnus"},"content":"| **Syntax**   | The way that you should format your commands \u003cbr\u003e such that ProfPlan can understand them. |","lastModifiedDate":"2023-10-27"},{"lineNumber":738,"author":{"gitId":"jack1e0"},"content":"| **Status**   | Whether a task is done or undone                                                          |","lastModifiedDate":"2023-11-03"},{"lineNumber":739,"author":{"gitId":"jack1e0"},"content":"| **Priority** | Importance of a task (different from due date)                                            |","lastModifiedDate":"2023-11-03"},{"lineNumber":740,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":741,"author":{"gitId":"yarnmengnus"},"content":"## Contact Us for Feedback \u0026 More!","lastModifiedDate":"2023-10-27"},{"lineNumber":742,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":743,"author":{"gitId":"yarnmengnus"},"content":"We\u0027re delighted to hear from you! At ProfPlan, we value your thoughts, inquiries, and suggestions. Your feedback helps us continually improve and provide you with the best possible experience. Whether you have a question, need assistance, or want to share your insights, we\u0027re here to assist.","lastModifiedDate":"2023-10-27"},{"lineNumber":744,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":745,"author":{"gitId":"yarnmengnus"},"content":"Kindly fill in the form below and we will get back to you as soon as possible.","lastModifiedDate":"2023-10-27"},{"lineNumber":746,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":747,"author":{"gitId":"eyelessrhyme7"},"content":"[Form Link](https://forms.gle/Dzb12Re4MYJxzf8w6)","lastModifiedDate":"2023-11-13"}],"authorContributionMap":{"yarnmengnus":374,"jack1e0":124,"kiatkat":21,"eyelessrhyme7":111,"-":96,"newway1814":21}},{"path":"docs/_sass/minima/_base.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"html {","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  font-size: $base-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Reset some basic elements","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"body, h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"p, blockquote, pre, hr,","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"dl, dd, ol, ul, figure {","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  margin: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  padding: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Basic styling","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"body {","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  font: $base-font-weight #{$base-font-size}/#{$base-line-height} $base-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  background-color: $background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  -webkit-text-size-adjust: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  -webkit-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     -moz-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"       -o-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  font-kerning: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  display: flex;","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  min-height: 100vh;","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  flex-direction: column;","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  overflow-wrap: break-word;","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":" * Set `margin-bottom` to maintain vertical rhythm","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"p, blockquote, pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"ul, ol, dl, figure,","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"%vertical-rhythm {","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"hr {","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  margin-top: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":" * `main` element","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"main {","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  display: block; /* Default value of `display` of `main` element is \u0027inline\u0027 in IE 11. */","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":" * Images","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"img {","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  max-width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  vertical-align: middle;","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":" * Figures","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"figure \u003e img {","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"figcaption {","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  font-size: $small-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":" * Lists","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"ul, ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  margin-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"li {","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  \u003e ul,","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"  \u003e ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":" * Headings","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6 {","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  font-weight: $base-font-weight;","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":" * Links","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"a {","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"  color: $link-base-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  \u0026:visited {","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    color: $link-visited-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"  \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"  .social-media-list \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    .username {","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"      text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":" * Blockquotes","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"blockquote {","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"  color: $brand-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  border-left: 4px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"  @include relative-font-size(1.125);","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"  font-style: italic;","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"  \u003e :last-child {","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"  i, em {","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    font-style: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * Code formatting","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"  font-family: $code-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"  font-size: 0.9375em;","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"  border: 1px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"  background-color: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"  padding: 1px 5px;","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"pre {","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"  padding: 8px 12px;","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"  overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"  \u003e code {","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    border: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    padding-right: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    padding-left: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":".highlight {","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"  background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"  @extend %vertical-rhythm;","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"  .highlighter-rouge \u0026 {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":" * Wrapper","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":".wrapper {","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"  max-width: calc(#{$content-width} - (#{$spacing-unit}));","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"  margin-right: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"  margin-left: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"  padding-right: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"  @extend %clearfix;","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"  @media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    max-width: calc(#{$content-width} - (#{$spacing-unit} * 2));","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    padding-right: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    padding-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":" * Clearfix","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"%clearfix:after {","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"  content: \"\";","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"  display: table;","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"  clear: both;","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":" * Icons","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":".orange {","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  color: #f66a0a;","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":".grey {","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"  color: #828282;","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":" * Tables","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"table {","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"  text-align: $table-text-align;","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"  color: $table-text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"  border-collapse: collapse;","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"  tr {","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    \u0026:nth-child(even) {","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"      background-color: $table-zebra-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"  th, td {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    padding: ($spacing-unit / 3) ($spacing-unit / 2);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"  th {","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    background-color: $table-header-bg-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    border: 1px solid $table-header-border;","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"  td {","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"  @include media-query($on-laptop) {","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -webkit-overflow-scrolling: touch;","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            -ms-overflow-style: -ms-autohiding-scrollbar;","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-11"},{"lineNumber":274,"author":{"gitId":"-"},"content":"@media print {","lastModifiedDate":"2021-01-12"},{"lineNumber":275,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-11"},{"lineNumber":276,"author":{"gitId":"-"},"content":"  * Prevents page break from cutting through content when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":277,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-11"},{"lineNumber":278,"author":{"gitId":"-"},"content":"  body {","lastModifiedDate":"2021-01-11"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2021-01-11"},{"lineNumber":280,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":281,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-12"},{"lineNumber":282,"author":{"gitId":"-"},"content":"  * Replaces the top navigation menu with the project name when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":283,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-12"},{"lineNumber":284,"author":{"gitId":"-"},"content":"  .site-header .wrapper {","lastModifiedDate":"2021-01-12"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    display: none;","lastModifiedDate":"2021-01-12"},{"lineNumber":286,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":287,"author":{"gitId":"-"},"content":"  .site-header {","lastModifiedDate":"2021-01-12"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    text-align: center;","lastModifiedDate":"2021-01-12"},{"lineNumber":289,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":290,"author":{"gitId":"-"},"content":"  .site-header:before {","lastModifiedDate":"2021-01-12"},{"lineNumber":291,"author":{"gitId":"eyelessrhyme7"},"content":"    content: \"ProfPlan\";","lastModifiedDate":"2023-10-02"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    font-size: 32px;","lastModifiedDate":"2021-01-12"},{"lineNumber":293,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-01-12"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-12"}],"authorContributionMap":{"eyelessrhyme7":1,"-":294}},{"path":"docs/diagrams/ArchitectureSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2023-07-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"Actor User as user USER_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Participant \":UI\" as ui UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Participant \":Logic\" as logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Participant \":Model\" as model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Participant \":Storage\" as storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"user -[USER_COLOR]\u003e ui : \"delete 1\"","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"activate ui UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"ui -[UI_COLOR]\u003e logic : execute(\"delete 1\")","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"activate logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"newway1814"},"content":"logic -[LOGIC_COLOR]\u003e model : deleteTask(p)","lastModifiedDate":"2023-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"activate model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"model -[MODEL_COLOR]-\u003e logic","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"deactivate model","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"newway1814"},"content":"logic -[LOGIC_COLOR]\u003e storage : saveProfPlan(profPlan)","lastModifiedDate":"2023-11-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"storage -[STORAGE_COLOR]\u003e storage : Save to file","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e storage","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e logic","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"logic --[LOGIC_COLOR]\u003e ui","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"deactivate logic","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"ui--[UI_COLOR]\u003e user","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"deactivate ui","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":37,"newway1814":2}},{"path":"docs/diagrams/ArchiveSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jack1e0"},"content":"@startuml","lastModifiedDate":"2023-11-12"},{"lineNumber":2,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":3,"author":{"gitId":"jack1e0"},"content":"!include style.puml","lastModifiedDate":"2023-11-12"},{"lineNumber":4,"author":{"gitId":"jack1e0"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2023-11-12"},{"lineNumber":5,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":6,"author":{"gitId":"jack1e0"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2023-11-12"},{"lineNumber":7,"author":{"gitId":"jack1e0"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2023-11-12"},{"lineNumber":8,"author":{"gitId":"jack1e0"},"content":"participant \":ProfPlanParser\" as ProfPlanParser LOGIC_COLOR","lastModifiedDate":"2023-11-12"},{"lineNumber":9,"author":{"gitId":"jack1e0"},"content":"participant \":ArchiveCommandParser\" as ArchiveCommandParser LOGIC_COLOR","lastModifiedDate":"2023-11-12"},{"lineNumber":10,"author":{"gitId":"jack1e0"},"content":"participant \"d:ArchiveCommand\" as ArchiveCommand LOGIC_COLOR","lastModifiedDate":"2023-11-12"},{"lineNumber":11,"author":{"gitId":"jack1e0"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2023-11-12"},{"lineNumber":12,"author":{"gitId":"jack1e0"},"content":"end box","lastModifiedDate":"2023-11-12"},{"lineNumber":13,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":14,"author":{"gitId":"jack1e0"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2023-11-12"},{"lineNumber":15,"author":{"gitId":"jack1e0"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2023-11-12"},{"lineNumber":16,"author":{"gitId":"jack1e0"},"content":"end box","lastModifiedDate":"2023-11-12"},{"lineNumber":17,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":18,"author":{"gitId":"jack1e0"},"content":"[-\u003e LogicManager : execute(\"archive 1\")","lastModifiedDate":"2023-11-12"},{"lineNumber":19,"author":{"gitId":"jack1e0"},"content":"activate LogicManager","lastModifiedDate":"2023-11-12"},{"lineNumber":20,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":21,"author":{"gitId":"jack1e0"},"content":"LogicManager -\u003e ProfPlanParser : parseCommand(\"archive 1\")","lastModifiedDate":"2023-11-12"},{"lineNumber":22,"author":{"gitId":"jack1e0"},"content":"activate ProfPlanParser","lastModifiedDate":"2023-11-12"},{"lineNumber":23,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":24,"author":{"gitId":"jack1e0"},"content":"create ArchiveCommandParser","lastModifiedDate":"2023-11-12"},{"lineNumber":25,"author":{"gitId":"jack1e0"},"content":"ProfPlanParser -\u003e ArchiveCommandParser","lastModifiedDate":"2023-11-12"},{"lineNumber":26,"author":{"gitId":"jack1e0"},"content":"activate ArchiveCommandParser","lastModifiedDate":"2023-11-12"},{"lineNumber":27,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":28,"author":{"gitId":"jack1e0"},"content":"ArchiveCommandParser --\u003e ProfPlanParser","lastModifiedDate":"2023-11-12"},{"lineNumber":29,"author":{"gitId":"jack1e0"},"content":"deactivate ArchiveCommandParser","lastModifiedDate":"2023-11-12"},{"lineNumber":30,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":31,"author":{"gitId":"jack1e0"},"content":"ProfPlanParser -\u003e ArchiveCommandParser : parse(\"1\")","lastModifiedDate":"2023-11-12"},{"lineNumber":32,"author":{"gitId":"jack1e0"},"content":"activate ArchiveCommandParser","lastModifiedDate":"2023-11-12"},{"lineNumber":33,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":34,"author":{"gitId":"jack1e0"},"content":"create ArchiveCommand","lastModifiedDate":"2023-11-12"},{"lineNumber":35,"author":{"gitId":"jack1e0"},"content":"ArchiveCommandParser -\u003e ArchiveCommand","lastModifiedDate":"2023-11-12"},{"lineNumber":36,"author":{"gitId":"jack1e0"},"content":"activate ArchiveCommand","lastModifiedDate":"2023-11-12"},{"lineNumber":37,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":38,"author":{"gitId":"jack1e0"},"content":"ArchiveCommand --\u003e ArchiveCommandParser : d","lastModifiedDate":"2023-11-12"},{"lineNumber":39,"author":{"gitId":"jack1e0"},"content":"deactivate ArchiveCommand","lastModifiedDate":"2023-11-12"},{"lineNumber":40,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":41,"author":{"gitId":"jack1e0"},"content":"ArchiveCommandParser --\u003e ProfPlanParser : d","lastModifiedDate":"2023-11-12"},{"lineNumber":42,"author":{"gitId":"jack1e0"},"content":"deactivate ArchiveCommandParser","lastModifiedDate":"2023-11-12"},{"lineNumber":43,"author":{"gitId":"jack1e0"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2023-11-12"},{"lineNumber":44,"author":{"gitId":"jack1e0"},"content":"ArchiveCommandParser -[hidden]-\u003e ProfPlanParser","lastModifiedDate":"2023-11-12"},{"lineNumber":45,"author":{"gitId":"jack1e0"},"content":"destroy ArchiveCommandParser","lastModifiedDate":"2023-11-12"},{"lineNumber":46,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":47,"author":{"gitId":"jack1e0"},"content":"ProfPlanParser --\u003e LogicManager : d","lastModifiedDate":"2023-11-12"},{"lineNumber":48,"author":{"gitId":"jack1e0"},"content":"deactivate ProfPlanParser","lastModifiedDate":"2023-11-12"},{"lineNumber":49,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":50,"author":{"gitId":"jack1e0"},"content":"LogicManager -\u003e ArchiveCommand : execute()","lastModifiedDate":"2023-11-12"},{"lineNumber":51,"author":{"gitId":"jack1e0"},"content":"activate ArchiveCommand","lastModifiedDate":"2023-11-12"},{"lineNumber":52,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":53,"author":{"gitId":"jack1e0"},"content":"ArchiveCommand -\u003e Model : archiveTask(1)","lastModifiedDate":"2023-11-12"},{"lineNumber":54,"author":{"gitId":"jack1e0"},"content":"activate Model","lastModifiedDate":"2023-11-12"},{"lineNumber":55,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":56,"author":{"gitId":"jack1e0"},"content":"Model --\u003e ArchiveCommand","lastModifiedDate":"2023-11-12"},{"lineNumber":57,"author":{"gitId":"jack1e0"},"content":"deactivate Model","lastModifiedDate":"2023-11-12"},{"lineNumber":58,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":59,"author":{"gitId":"jack1e0"},"content":"create CommandResult","lastModifiedDate":"2023-11-12"},{"lineNumber":60,"author":{"gitId":"jack1e0"},"content":"ArchiveCommand -\u003e CommandResult","lastModifiedDate":"2023-11-12"},{"lineNumber":61,"author":{"gitId":"jack1e0"},"content":"activate CommandResult","lastModifiedDate":"2023-11-12"},{"lineNumber":62,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":63,"author":{"gitId":"jack1e0"},"content":"CommandResult --\u003e ArchiveCommand","lastModifiedDate":"2023-11-12"},{"lineNumber":64,"author":{"gitId":"jack1e0"},"content":"deactivate CommandResult","lastModifiedDate":"2023-11-12"},{"lineNumber":65,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":66,"author":{"gitId":"jack1e0"},"content":"ArchiveCommand --\u003e LogicManager : result","lastModifiedDate":"2023-11-12"},{"lineNumber":67,"author":{"gitId":"jack1e0"},"content":"deactivate ArchiveCommand","lastModifiedDate":"2023-11-12"},{"lineNumber":68,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":69,"author":{"gitId":"jack1e0"},"content":"[\u003c--LogicManager","lastModifiedDate":"2023-11-12"},{"lineNumber":70,"author":{"gitId":"jack1e0"},"content":"deactivate LogicManager","lastModifiedDate":"2023-11-12"},{"lineNumber":71,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":72,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":73,"author":{"gitId":"jack1e0"},"content":"@enduml","lastModifiedDate":"2023-11-12"}],"authorContributionMap":{"jack1e0":73}},{"path":"docs/diagrams/BetterModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"newway1814"},"content":"ProfPlan *-right-\u003e \"1\" UniqueTaskList","lastModifiedDate":"2023-11-09"},{"lineNumber":8,"author":{"gitId":"newway1814"},"content":"ProfPlan *-right-\u003e \"1\" UniqueTagList","lastModifiedDate":"2023-11-09"},{"lineNumber":9,"author":{"gitId":"newway1814"},"content":"UniqueTagList -[hidden]down- UniqueTaskList","lastModifiedDate":"2023-10-16"},{"lineNumber":10,"author":{"gitId":"newway1814"},"content":"UniqueTagList -[hidden]down- UniqueTaskList","lastModifiedDate":"2023-10-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"UniqueTagList -right-\u003e \"*\" Tag","lastModifiedDate":"2023-01-01"},{"lineNumber":13,"author":{"gitId":"newway1814"},"content":"UniqueTaskList -right-\u003e Task","lastModifiedDate":"2023-10-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"newway1814"},"content":"Task -up-\u003e \"*\" Tag","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":18,"author":{"gitId":"newway1814"},"content":"Task *-- Name","lastModifiedDate":"2023-11-09"},{"lineNumber":19,"author":{"gitId":"newway1814"},"content":"Task *-- Priority","lastModifiedDate":"2023-11-09"},{"lineNumber":20,"author":{"gitId":"newway1814"},"content":"Task *-- RecurringType","lastModifiedDate":"2023-11-09"},{"lineNumber":21,"author":{"gitId":"newway1814"},"content":"Task *-- Link","lastModifiedDate":"2023-11-09"},{"lineNumber":22,"author":{"gitId":"newway1814"},"content":"Task *-- Status","lastModifiedDate":"2023-11-09"},{"lineNumber":23,"author":{"gitId":"newway1814"},"content":"Task *-- DueDate","lastModifiedDate":"2023-11-09"},{"lineNumber":24,"author":{"gitId":"newway1814"},"content":"Task *-- Description","lastModifiedDate":"2023-11-09"},{"lineNumber":25,"author":{"gitId":"newway1814"},"content":"Task *-- \"*\" Tag","lastModifiedDate":"2023-11-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":11,"newway1814":15}},{"path":"docs/diagrams/CommitActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"skin rose","lastModifiedDate":"2023-07-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ActivityFontSize 15","lastModifiedDate":"2023-07-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ArrowFontSize 12","lastModifiedDate":"2023-07-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"start","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":":User executes command;","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u0027Since the beta syntax does not support placing the condition outside the","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u0027diamond we place it as the true branch instead.","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"jack1e0"},"content":"if () then ([command commits ProfPlan])","lastModifiedDate":"2023-11-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    :Purge redundant states;","lastModifiedDate":"2020-12-12"},{"lineNumber":13,"author":{"gitId":"newway1814"},"content":"    :Save ProfPlan to","lastModifiedDate":"2023-11-09"},{"lineNumber":14,"author":{"gitId":"newway1814"},"content":"    profPlanStateList;","lastModifiedDate":"2023-11-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"else ([else])","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"endif","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"stop","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"jack1e0":1,"-":15,"newway1814":2}},{"path":"docs/diagrams/DeleteSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2023-07-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"newway1814"},"content":"participant \":ProfPlanParser\" as ProfPlanParser LOGIC_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"participant \":DeleteCommandParser\" as DeleteCommandParser LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"participant \"d:DeleteCommand\" as DeleteCommand LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"[-\u003e LogicManager : execute(\"delete 1\")","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"activate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"newway1814"},"content":"LogicManager -\u003e ProfPlanParser : parseCommand(\"delete 1\")","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"newway1814"},"content":"activate ProfPlanParser","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"create DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"newway1814"},"content":"ProfPlanParser -\u003e DeleteCommandParser","lastModifiedDate":"2023-10-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"activate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"newway1814"},"content":"DeleteCommandParser --\u003e ProfPlanParser","lastModifiedDate":"2023-10-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"deactivate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"newway1814"},"content":"ProfPlanParser -\u003e DeleteCommandParser : parse(\"1\")","lastModifiedDate":"2023-10-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"activate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"create DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"DeleteCommandParser -\u003e DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"activate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"DeleteCommand --\u003e DeleteCommandParser : d","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"deactivate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":40,"author":{"gitId":"newway1814"},"content":"DeleteCommandParser --\u003e ProfPlanParser : d","lastModifiedDate":"2023-10-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"deactivate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"newway1814"},"content":"DeleteCommandParser -[hidden]-\u003e ProfPlanParser","lastModifiedDate":"2023-10-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"destroy DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"newway1814"},"content":"ProfPlanParser --\u003e LogicManager : d","lastModifiedDate":"2023-10-26"},{"lineNumber":47,"author":{"gitId":"newway1814"},"content":"deactivate ProfPlanParser","lastModifiedDate":"2023-10-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"LogicManager -\u003e DeleteCommand : execute()","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"activate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"newway1814"},"content":"DeleteCommand -\u003e Model : deleteTask(1)","lastModifiedDate":"2023-10-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"activate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"Model --\u003e DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"deactivate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"create CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"DeleteCommand -\u003e CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"activate CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"CommandResult --\u003e DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"deactivate CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"DeleteCommand --\u003e LogicManager : result","lastModifiedDate":"2019-07-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"deactivate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"[\u003c--LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"deactivate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":59,"newway1814":11}},{"path":"docs/diagrams/FilterCommandClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jack1e0"},"content":"@startuml","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":3,"author":{"gitId":"jack1e0"},"content":"class FilterCommandParser {","lastModifiedDate":"2023-10-27"},{"lineNumber":4,"author":{"gitId":"jack1e0"},"content":"  + parse: FilterCommand","lastModifiedDate":"2023-10-27"},{"lineNumber":5,"author":{"gitId":"jack1e0"},"content":"}","lastModifiedDate":"2023-10-27"},{"lineNumber":6,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":7,"author":{"gitId":"jack1e0"},"content":"class FilterCommand {","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"jack1e0"},"content":"  - COMMAND_WORD: String","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"jack1e0"},"content":"  - MESSAGE_USAGE: String","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"jack1e0"},"content":"  - MESSAGE_DETAILS: String","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"jack1e0"},"content":"  - messageSuccess: String","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"jack1e0"},"content":"  + FilterCommand(predicate: Predicate)","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"jack1e0"},"content":"  + execute(model: Model): CommandResult","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"jack1e0"},"content":"  + equals(other: Object): boolean","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"jack1e0"},"content":"  + toString(): String","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"jack1e0"},"content":"  + getSuccessMessage(): String","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"jack1e0"},"content":"}","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"jack1e0"},"content":"class TaskDueDatePredicate","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"jack1e0"},"content":"class TaskPriorityPredicate","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"jack1e0"},"content":"class TaskStatusPredicate","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"jack1e0"},"content":"class TaskRecurringTypePredicate","lastModifiedDate":"2023-11-12"},{"lineNumber":23,"author":{"gitId":"jack1e0"},"content":"class CombinedPredicate","lastModifiedDate":"2023-11-12"},{"lineNumber":24,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":25,"author":{"gitId":"jack1e0"},"content":"class \"\u003c\u003cinterface\u003e\u003e\\nPredicate\" as Predicate","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":27,"author":{"gitId":"jack1e0"},"content":"FilterCommand \u003c.. Predicate","lastModifiedDate":"2023-10-26"},{"lineNumber":28,"author":{"gitId":"jack1e0"},"content":"Predicate \u003c-- TaskDueDatePredicate","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"jack1e0"},"content":"Predicate \u003c-- TaskPriorityPredicate","lastModifiedDate":"2023-10-26"},{"lineNumber":30,"author":{"gitId":"jack1e0"},"content":"Predicate \u003c-- TaskStatusPredicate","lastModifiedDate":"2023-10-26"},{"lineNumber":31,"author":{"gitId":"jack1e0"},"content":"Predicate \u003c-- TaskRecurringTypePredicate","lastModifiedDate":"2023-11-12"},{"lineNumber":32,"author":{"gitId":"jack1e0"},"content":"Predicate \u003c-- CombinedPredicate","lastModifiedDate":"2023-11-12"},{"lineNumber":33,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":34,"author":{"gitId":"jack1e0"},"content":"FilterCommandParser \u003c.. TaskDueDatePredicate","lastModifiedDate":"2023-11-12"},{"lineNumber":35,"author":{"gitId":"jack1e0"},"content":"FilterCommandParser \u003c.. TaskPriorityPredicate","lastModifiedDate":"2023-11-12"},{"lineNumber":36,"author":{"gitId":"jack1e0"},"content":"FilterCommandParser \u003c.. TaskStatusPredicate","lastModifiedDate":"2023-11-12"},{"lineNumber":37,"author":{"gitId":"jack1e0"},"content":"FilterCommandParser \u003c.. TaskRecurringTypePredicate","lastModifiedDate":"2023-11-12"},{"lineNumber":38,"author":{"gitId":"jack1e0"},"content":"FilterCommandParser \u003c.. CombinedPredicate","lastModifiedDate":"2023-11-12"},{"lineNumber":39,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":40,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":41,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":42,"author":{"gitId":"jack1e0"},"content":"FilterCommandParser .left.\u003e FilterCommand : parse \u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":43,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":44,"author":{"gitId":"jack1e0"},"content":"@enduml","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"jack1e0":44}},{"path":"docs/diagrams/ListArchivesSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jack1e0"},"content":"@startuml","lastModifiedDate":"2023-11-12"},{"lineNumber":2,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":3,"author":{"gitId":"jack1e0"},"content":"!include style.puml","lastModifiedDate":"2023-11-12"},{"lineNumber":4,"author":{"gitId":"jack1e0"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2023-11-12"},{"lineNumber":5,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":6,"author":{"gitId":"jack1e0"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2023-11-12"},{"lineNumber":7,"author":{"gitId":"jack1e0"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2023-11-12"},{"lineNumber":8,"author":{"gitId":"jack1e0"},"content":"participant \":ProfPlanParser\" as ProfPlanParser LOGIC_COLOR","lastModifiedDate":"2023-11-12"},{"lineNumber":9,"author":{"gitId":"jack1e0"},"content":"participant \"d:ListArchivesCommand\" as ListArchivesCommand LOGIC_COLOR","lastModifiedDate":"2023-11-12"},{"lineNumber":10,"author":{"gitId":"jack1e0"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2023-11-12"},{"lineNumber":11,"author":{"gitId":"jack1e0"},"content":"end box","lastModifiedDate":"2023-11-12"},{"lineNumber":12,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":13,"author":{"gitId":"jack1e0"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2023-11-12"},{"lineNumber":14,"author":{"gitId":"jack1e0"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2023-11-12"},{"lineNumber":15,"author":{"gitId":"jack1e0"},"content":"end box","lastModifiedDate":"2023-11-12"},{"lineNumber":16,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":17,"author":{"gitId":"jack1e0"},"content":"[-\u003e LogicManager : execute(\"list archives\")","lastModifiedDate":"2023-11-12"},{"lineNumber":18,"author":{"gitId":"jack1e0"},"content":"activate LogicManager","lastModifiedDate":"2023-11-12"},{"lineNumber":19,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":20,"author":{"gitId":"jack1e0"},"content":"LogicManager -\u003e ProfPlanParser : parseCommand(\"list archives\")","lastModifiedDate":"2023-11-12"},{"lineNumber":21,"author":{"gitId":"jack1e0"},"content":"activate ProfPlanParser","lastModifiedDate":"2023-11-12"},{"lineNumber":22,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":23,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":24,"author":{"gitId":"jack1e0"},"content":"create ListArchivesCommand","lastModifiedDate":"2023-11-12"},{"lineNumber":25,"author":{"gitId":"jack1e0"},"content":"ProfPlanParser -\u003e ListArchivesCommand","lastModifiedDate":"2023-11-12"},{"lineNumber":26,"author":{"gitId":"jack1e0"},"content":"activate ListArchivesCommand","lastModifiedDate":"2023-11-12"},{"lineNumber":27,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":28,"author":{"gitId":"jack1e0"},"content":"ListArchivesCommand --\u003e ProfPlanParser : d","lastModifiedDate":"2023-11-12"},{"lineNumber":29,"author":{"gitId":"jack1e0"},"content":"deactivate ListArchivesCommand","lastModifiedDate":"2023-11-12"},{"lineNumber":30,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":31,"author":{"gitId":"jack1e0"},"content":"ProfPlanParser --\u003e LogicManager : d","lastModifiedDate":"2023-11-12"},{"lineNumber":32,"author":{"gitId":"jack1e0"},"content":"deactivate ProfPlanParser","lastModifiedDate":"2023-11-12"},{"lineNumber":33,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":34,"author":{"gitId":"jack1e0"},"content":"LogicManager -\u003e ListArchivesCommand : execute()","lastModifiedDate":"2023-11-12"},{"lineNumber":35,"author":{"gitId":"jack1e0"},"content":"activate ListArchivesCommand","lastModifiedDate":"2023-11-12"},{"lineNumber":36,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":37,"author":{"gitId":"jack1e0"},"content":"ListArchivesCommand -\u003e Model : listArchives()","lastModifiedDate":"2023-11-12"},{"lineNumber":38,"author":{"gitId":"jack1e0"},"content":"activate Model","lastModifiedDate":"2023-11-12"},{"lineNumber":39,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":40,"author":{"gitId":"jack1e0"},"content":"Model --\u003e ListArchivesCommand","lastModifiedDate":"2023-11-12"},{"lineNumber":41,"author":{"gitId":"jack1e0"},"content":"deactivate Model","lastModifiedDate":"2023-11-12"},{"lineNumber":42,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":43,"author":{"gitId":"jack1e0"},"content":"create CommandResult","lastModifiedDate":"2023-11-12"},{"lineNumber":44,"author":{"gitId":"jack1e0"},"content":"ListArchivesCommand -\u003e CommandResult","lastModifiedDate":"2023-11-12"},{"lineNumber":45,"author":{"gitId":"jack1e0"},"content":"activate CommandResult","lastModifiedDate":"2023-11-12"},{"lineNumber":46,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":47,"author":{"gitId":"jack1e0"},"content":"CommandResult --\u003e ListArchivesCommand","lastModifiedDate":"2023-11-12"},{"lineNumber":48,"author":{"gitId":"jack1e0"},"content":"deactivate CommandResult","lastModifiedDate":"2023-11-12"},{"lineNumber":49,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":50,"author":{"gitId":"jack1e0"},"content":"ListArchivesCommand --\u003e LogicManager : result","lastModifiedDate":"2023-11-12"},{"lineNumber":51,"author":{"gitId":"jack1e0"},"content":"deactivate ListArchivesCommand","lastModifiedDate":"2023-11-12"},{"lineNumber":52,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":53,"author":{"gitId":"jack1e0"},"content":"[\u003c--LogicManager","lastModifiedDate":"2023-11-12"},{"lineNumber":54,"author":{"gitId":"jack1e0"},"content":"deactivate LogicManager","lastModifiedDate":"2023-11-12"},{"lineNumber":55,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":56,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":57,"author":{"gitId":"jack1e0"},"content":"@enduml","lastModifiedDate":"2023-11-12"}],"authorContributionMap":{"jack1e0":57}},{"path":"docs/diagrams/LogicClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor LOGIC_COLOR_T4","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package Logic as LogicPackage {","lastModifiedDate":"2023-07-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"kiatkat"},"content":"Class ProfPlanParser","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class XYZCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nCommand\" as Command","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nLogic\" as Logic","lastModifiedDate":"2022-01-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"package Model {","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Class HiddenModel #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"package Storage {","lastModifiedDate":"2021-03-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-03-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"LogicManager .right.|\u003e Logic","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"newway1814"},"content":"LogicManager -right-\u003e\"1\" ProfPlanParser","lastModifiedDate":"2023-10-26"},{"lineNumber":31,"author":{"gitId":"newway1814"},"content":"ProfPlanParser ..\u003e XYZCommand : creates \u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"XYZCommand -up-|\u003e Command","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"LogicManager .left.\u003e Command : executes \u003e","lastModifiedDate":"2019-07-30"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"LogicManager --\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"LogicManager --\u003e Storage","lastModifiedDate":"2021-03-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"Storage --[hidden] Model","lastModifiedDate":"2021-03-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"Command .[hidden]up.\u003e Storage","lastModifiedDate":"2021-03-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"Command .right.\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"note right of XYZCommand: XYZCommand \u003d AddCommand, \\nFindCommand, etc","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"Logic ..\u003e CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"LogicManager .down.\u003e CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"Command .up.\u003e CommandResult : produces \u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"kiatkat":1,"-":43,"newway1814":2}},{"path":"docs/diagrams/MarkCommandClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"newway1814"},"content":"@startuml MarkCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"newway1814"},"content":"!define classFontStyle bold","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"newway1814"},"content":"skinparam class {","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"newway1814"},"content":"  FontStyle classFontStyle","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"newway1814"},"content":"}","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"newway1814"},"content":"class MarkCommand {","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"newway1814"},"content":"  - COMMAND_WORD: String","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"newway1814"},"content":"  - MESSAGE_USAGE: String","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"newway1814"},"content":"  - MESSAGE_SUCCESS: String","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"newway1814"},"content":"  - MESSAGE_INVALID_NUMBER: String","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"newway1814"},"content":"  - MESSAGE_ALREADY_DONE: String","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"newway1814"},"content":"  - taskNumber: int","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"newway1814"},"content":"  + MarkCommand(number: int)","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"newway1814"},"content":"  + execute(model: Model): CommandResult","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"newway1814"},"content":"  + equals(other: Object): boolean","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"newway1814"},"content":"  + toString(): String","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"newway1814"},"content":"}","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"newway1814"},"content":"@enduml","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"newway1814":23}},{"path":"docs/diagrams/MarkcommandSequencediagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"newway1814"},"content":"@startuml","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"newway1814"},"content":"!include style.puml","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"newway1814"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"newway1814"},"content":"box Logic #BADA55","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"newway1814"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"newway1814"},"content":"participant \":ProfPlanParser\" as ProfPlanParser LOGIC_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"newway1814"},"content":"participant \":MarkCommandParser\" as MarkCommandParser LOGIC_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"newway1814"},"content":"participant \"d:MarkCommand\" as MarkCommand LOGIC_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"newway1814"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"newway1814"},"content":"end box","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"newway1814"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"newway1814"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"newway1814"},"content":"end box","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"newway1814"},"content":"[-\u003e LogicManager : execute(\"mark 1\")","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"newway1814"},"content":"activate LogicManager","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"newway1814"},"content":"LogicManager -\u003e ProfPlanParser : parseCommand(\"mark 1\")","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"newway1814"},"content":"activate ProfPlanParser","lastModifiedDate":"2023-10-26"},{"lineNumber":25,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"newway1814"},"content":"create MarkCommandParser","lastModifiedDate":"2023-10-26"},{"lineNumber":27,"author":{"gitId":"newway1814"},"content":"ProfPlanParser -\u003e MarkCommandParser","lastModifiedDate":"2023-10-26"},{"lineNumber":28,"author":{"gitId":"newway1814"},"content":"activate MarkCommandParser","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":30,"author":{"gitId":"newway1814"},"content":"MarkCommandParser --\u003e ProfPlanParser","lastModifiedDate":"2023-10-26"},{"lineNumber":31,"author":{"gitId":"newway1814"},"content":"deactivate MarkCommandParser","lastModifiedDate":"2023-10-26"},{"lineNumber":32,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":33,"author":{"gitId":"newway1814"},"content":"ProfPlanParser -\u003e MarkCommandParser : parse(\"1\")","lastModifiedDate":"2023-10-26"},{"lineNumber":34,"author":{"gitId":"newway1814"},"content":"activate MarkCommandParser","lastModifiedDate":"2023-10-26"},{"lineNumber":35,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":36,"author":{"gitId":"newway1814"},"content":"create MarkCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":37,"author":{"gitId":"newway1814"},"content":"MarkCommandParser -\u003e MarkCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":38,"author":{"gitId":"newway1814"},"content":"activate MarkCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":39,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":40,"author":{"gitId":"newway1814"},"content":"MarkCommand --\u003e MarkCommandParser : d","lastModifiedDate":"2023-10-26"},{"lineNumber":41,"author":{"gitId":"newway1814"},"content":"deactivate MarkCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":42,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":43,"author":{"gitId":"newway1814"},"content":"MarkCommandParser --\u003e ProfPlanParser : d","lastModifiedDate":"2023-10-26"},{"lineNumber":44,"author":{"gitId":"newway1814"},"content":"deactivate MarkCommandParser","lastModifiedDate":"2023-10-26"},{"lineNumber":45,"author":{"gitId":"newway1814"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2023-10-26"},{"lineNumber":46,"author":{"gitId":"newway1814"},"content":"MarkCommandParser -[hidden]-\u003e ProfPlanParser","lastModifiedDate":"2023-10-26"},{"lineNumber":47,"author":{"gitId":"newway1814"},"content":"destroy MarkCommandParser","lastModifiedDate":"2023-10-26"},{"lineNumber":48,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":49,"author":{"gitId":"newway1814"},"content":"ProfPlanParser --\u003e LogicManager : d","lastModifiedDate":"2023-10-26"},{"lineNumber":50,"author":{"gitId":"newway1814"},"content":"deactivate ProfPlanParser","lastModifiedDate":"2023-10-26"},{"lineNumber":51,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":52,"author":{"gitId":"newway1814"},"content":"LogicManager -\u003e MarkCommand : execute()","lastModifiedDate":"2023-10-26"},{"lineNumber":53,"author":{"gitId":"newway1814"},"content":"activate MarkCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":54,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":55,"author":{"gitId":"newway1814"},"content":"MarkCommand -\u003e Model : markTask(1)","lastModifiedDate":"2023-10-26"},{"lineNumber":56,"author":{"gitId":"newway1814"},"content":"activate Model","lastModifiedDate":"2023-10-26"},{"lineNumber":57,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":58,"author":{"gitId":"newway1814"},"content":"Model --\u003e MarkCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":59,"author":{"gitId":"newway1814"},"content":"deactivate Model","lastModifiedDate":"2023-10-26"},{"lineNumber":60,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":61,"author":{"gitId":"newway1814"},"content":"create CommandResult","lastModifiedDate":"2023-10-26"},{"lineNumber":62,"author":{"gitId":"newway1814"},"content":"MarkCommand -\u003e CommandResult","lastModifiedDate":"2023-10-26"},{"lineNumber":63,"author":{"gitId":"newway1814"},"content":"activate CommandResult","lastModifiedDate":"2023-10-26"},{"lineNumber":64,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":65,"author":{"gitId":"newway1814"},"content":"CommandResult --\u003e MarkCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":66,"author":{"gitId":"newway1814"},"content":"deactivate CommandResult","lastModifiedDate":"2023-10-26"},{"lineNumber":67,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":68,"author":{"gitId":"newway1814"},"content":"MarkCommand --\u003e LogicManager : result","lastModifiedDate":"2023-10-26"},{"lineNumber":69,"author":{"gitId":"newway1814"},"content":"deactivate MarkCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":70,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":71,"author":{"gitId":"newway1814"},"content":"[\u003c--LogicManager","lastModifiedDate":"2023-10-26"},{"lineNumber":72,"author":{"gitId":"newway1814"},"content":"deactivate LogicManager","lastModifiedDate":"2023-10-26"},{"lineNumber":73,"author":{"gitId":"newway1814"},"content":"@enduml","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"newway1814":73}},{"path":"docs/diagrams/ModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"newway1814"},"content":"!define MODEL_COLOR #0055CC","lastModifiedDate":"2023-11-10"},{"lineNumber":3,"author":{"gitId":"newway1814"},"content":"!define BACKGROUND_COLOR #D0E4FF","lastModifiedDate":"2023-11-10"},{"lineNumber":4,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"newway1814"},"content":"skinparam classBackgroundColor BACKGROUND_COLOR","lastModifiedDate":"2023-11-10"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Package Model as ModelPackage \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2023-07-27"},{"lineNumber":10,"author":{"gitId":"kiatkat"},"content":"    Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyProfPlan\" as ReadOnlyProfPlan","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyUserPrefs\" as ReadOnlyUserPrefs","lastModifiedDate":"2022-01-03"},{"lineNumber":12,"author":{"gitId":"kiatkat"},"content":"    Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyUserConfigs\" as ReadOnlyUserConfigs","lastModifiedDate":"2023-11-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    Class \"\u003c\u003cinterface\u003e\u003e\\nModel\" as Model","lastModifiedDate":"2022-01-03"},{"lineNumber":14,"author":{"gitId":"kiatkat"},"content":"    Class ProfPlan","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    Class ModelManager","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    Class UserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"kiatkat"},"content":"    Class UserConfigs","lastModifiedDate":"2023-11-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":19,"author":{"gitId":"newway1814"},"content":"    Class UniqueTaskList","lastModifiedDate":"2023-10-16"},{"lineNumber":20,"author":{"gitId":"newway1814"},"content":"    Class Task {","lastModifiedDate":"2023-11-09"},{"lineNumber":21,"author":{"gitId":"newway1814"},"content":"        - Name name","lastModifiedDate":"2023-11-09"},{"lineNumber":22,"author":{"gitId":"newway1814"},"content":"        - Priority priority","lastModifiedDate":"2023-11-09"},{"lineNumber":23,"author":{"gitId":"newway1814"},"content":"        - RecurringType recurringType","lastModifiedDate":"2023-11-09"},{"lineNumber":24,"author":{"gitId":"newway1814"},"content":"        - Link link","lastModifiedDate":"2023-11-09"},{"lineNumber":25,"author":{"gitId":"newway1814"},"content":"        - Status status","lastModifiedDate":"2023-11-09"},{"lineNumber":26,"author":{"gitId":"newway1814"},"content":"        - DueDate dueDate","lastModifiedDate":"2023-11-09"},{"lineNumber":27,"author":{"gitId":"newway1814"},"content":"        - Description description","lastModifiedDate":"2023-11-09"},{"lineNumber":28,"author":{"gitId":"newway1814"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":29,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    Class Name","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"newway1814"},"content":"    Class Priority","lastModifiedDate":"2023-11-09"},{"lineNumber":32,"author":{"gitId":"newway1814"},"content":"    Class RecurringType","lastModifiedDate":"2023-11-09"},{"lineNumber":33,"author":{"gitId":"newway1814"},"content":"    Class Link","lastModifiedDate":"2023-11-09"},{"lineNumber":34,"author":{"gitId":"newway1814"},"content":"    Class Status","lastModifiedDate":"2023-11-09"},{"lineNumber":35,"author":{"gitId":"newway1814"},"content":"    Class DueDate","lastModifiedDate":"2023-11-09"},{"lineNumber":36,"author":{"gitId":"newway1814"},"content":"    Class Description","lastModifiedDate":"2023-11-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    Class Tag","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"newway1814"},"content":"ReadOnlyProfPlan \u003c|.. ProfPlan","lastModifiedDate":"2023-11-09"},{"lineNumber":42,"author":{"gitId":"newway1814"},"content":"Model \u003c|.. ModelManager","lastModifiedDate":"2023-11-09"},{"lineNumber":43,"author":{"gitId":"newway1814"},"content":"ReadOnlyUserPrefs \u003c|.. UserPrefs","lastModifiedDate":"2023-11-09"},{"lineNumber":44,"author":{"gitId":"kiatkat"},"content":"ReadOnlyUserConfigs \u003c|.. UserConfigs","lastModifiedDate":"2023-11-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":46,"author":{"gitId":"kiatkat"},"content":"ModelManager -left-\u003e \"1\" ProfPlan","lastModifiedDate":"2023-10-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"ModelManager -right-\u003e \"1\" UserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":48,"author":{"gitId":"kiatkat"},"content":"ModelManager -right-\u003e \"1\" UserConfigs","lastModifiedDate":"2023-11-12"},{"lineNumber":49,"author":{"gitId":"newway1814"},"content":"ModelManager --\u003e \"~* filtered\" Task","lastModifiedDate":"2023-11-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"newway1814"},"content":"ProfPlan *--\u003e \"1\" UniqueTaskList","lastModifiedDate":"2023-10-16"},{"lineNumber":52,"author":{"gitId":"newway1814"},"content":"UniqueTaskList --\u003e \"~* all  \" Task","lastModifiedDate":"2023-10-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"newway1814"},"content":"Task *-- Name","lastModifiedDate":"2023-11-09"},{"lineNumber":55,"author":{"gitId":"newway1814"},"content":"Task *-- Priority","lastModifiedDate":"2023-11-09"},{"lineNumber":56,"author":{"gitId":"newway1814"},"content":"Task *-- RecurringType","lastModifiedDate":"2023-11-09"},{"lineNumber":57,"author":{"gitId":"newway1814"},"content":"Task *-- Link","lastModifiedDate":"2023-11-09"},{"lineNumber":58,"author":{"gitId":"newway1814"},"content":"Task *-- Status","lastModifiedDate":"2023-11-09"},{"lineNumber":59,"author":{"gitId":"newway1814"},"content":"Task *-- DueDate","lastModifiedDate":"2023-11-09"},{"lineNumber":60,"author":{"gitId":"newway1814"},"content":"Task *-- Description","lastModifiedDate":"2023-11-09"},{"lineNumber":61,"author":{"gitId":"newway1814"},"content":"Task *-- \"*\" Tag","lastModifiedDate":"2023-11-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"kiatkat":7,"-":21,"newway1814":35}},{"path":"docs/diagrams/ParserClasses.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2021-07-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2021-07-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2021-07-31"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor LOGIC_COLOR_T4","lastModifiedDate":"2021-07-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor LOGIC_COLOR","lastModifiedDate":"2021-07-31"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nCommand\" as Command","lastModifiedDate":"2021-07-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Class XYZCommand","lastModifiedDate":"2021-07-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"package \"Parser classes\"{","lastModifiedDate":"2021-07-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nParser\" as Parser","lastModifiedDate":"2022-01-03"},{"lineNumber":12,"author":{"gitId":"newway1814"},"content":"Class ProfPlanParser","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class XYZCommandParser","lastModifiedDate":"2021-07-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class CliSyntax","lastModifiedDate":"2021-07-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class ParserUtil","lastModifiedDate":"2021-07-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class ArgumentMultimap","lastModifiedDate":"2021-07-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class ArgumentTokenizer","lastModifiedDate":"2021-07-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class Prefix","lastModifiedDate":"2021-07-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2021-07-31"},{"lineNumber":22,"author":{"gitId":"newway1814"},"content":"HiddenOutside ..\u003e ProfPlanParser","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"newway1814"},"content":"ProfPlanParser .down.\u003e XYZCommandParser: creates \u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e XYZCommand : creates \u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"newway1814"},"content":"ProfPlanParser ..\u003e Command : returns \u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"XYZCommandParser .up.|\u003e Parser","lastModifiedDate":"2021-07-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e ArgumentMultimap","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e ArgumentTokenizer","lastModifiedDate":"2021-07-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"ArgumentTokenizer .left.\u003e ArgumentMultimap","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e CliSyntax","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"CliSyntax ..\u003e Prefix","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e ParserUtil","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"ParserUtil .down.\u003e Prefix","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"ArgumentTokenizer .down.\u003e Prefix","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"XYZCommand -up-|\u003e Command","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2021-07-31"}],"authorContributionMap":{"-":34,"newway1814":4}},{"path":"docs/diagrams/StorageClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package Storage as StoragePackage {","lastModifiedDate":"2023-07-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"package \"UserPrefs Storage\" #F4F6F6{","lastModifiedDate":"2021-07-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nUserPrefsStorage\" as UserPrefsStorage","lastModifiedDate":"2022-01-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class JsonUserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nStorage\" as Storage","lastModifiedDate":"2022-01-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class StorageManager","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":17,"author":{"gitId":"jack1e0"},"content":"package \"ProfPlan Storage\" #F4F6F6{","lastModifiedDate":"2023-11-12"},{"lineNumber":18,"author":{"gitId":"jack1e0"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nProfPlanStorage\" as ProfPlanStorage","lastModifiedDate":"2023-11-12"},{"lineNumber":19,"author":{"gitId":"jack1e0"},"content":"Class JsonProfPlanStorage","lastModifiedDate":"2023-11-12"},{"lineNumber":20,"author":{"gitId":"jack1e0"},"content":"Class JsonSerializableProfPlan","lastModifiedDate":"2023-11-12"},{"lineNumber":21,"author":{"gitId":"newway1814"},"content":"Class JsonAdaptedTask","lastModifiedDate":"2023-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Class JsonAdaptedTag","lastModifiedDate":"2021-07-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Storage","lastModifiedDate":"2021-07-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"StorageManager .up.|\u003e Storage","lastModifiedDate":"2021-07-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"StorageManager -up-\u003e \"1\" UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"jack1e0"},"content":"StorageManager -up-\u003e \"1\" ProfPlanStorage","lastModifiedDate":"2023-11-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"Storage -left-|\u003e UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"jack1e0"},"content":"Storage -right-|\u003e ProfPlanStorage","lastModifiedDate":"2023-11-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"JsonUserPrefsStorage .up.|\u003e UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"jack1e0"},"content":"JsonProfPlanStorage .up.|\u003e ProfPlanStorage","lastModifiedDate":"2023-11-12"},{"lineNumber":39,"author":{"gitId":"jack1e0"},"content":"JsonProfPlanStorage ..\u003e JsonSerializableProfPlan","lastModifiedDate":"2023-11-12"},{"lineNumber":40,"author":{"gitId":"jack1e0"},"content":"JsonSerializableProfPlan --\u003e \"*\" JsonAdaptedTask","lastModifiedDate":"2023-11-12"},{"lineNumber":41,"author":{"gitId":"newway1814"},"content":"JsonAdaptedTask --\u003e \"*\" JsonAdaptedTag","lastModifiedDate":"2023-10-16"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":43,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"jack1e0":9,"-":32,"newway1814":2}},{"path":"docs/diagrams/UiClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor UI_COLOR_T4","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package UI \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nUi\" as Ui","lastModifiedDate":"2022-01-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nUiPart\" as UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class UiManager","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class MainWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class HelpWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"newway1814"},"content":"Class TaskListPanel","lastModifiedDate":"2023-10-16"},{"lineNumber":15,"author":{"gitId":"newway1814"},"content":"Class TaskCard","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class StatusBarFooter","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"package Model \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class HiddenModel #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"package Logic \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"Class HiddenLogic #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"UiManager .left.|\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"UiManager -down-\u003e \"1\" MainWindow","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e  \"1\" CommandBox","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" ResultDisplay","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"newway1814"},"content":"MainWindow *-down-\u003e \"1\" TaskListPanel","lastModifiedDate":"2023-10-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" StatusBarFooter","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"MainWindow --\u003e \"0..1\" HelpWindow","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"newway1814"},"content":"TaskListPanel -down-\u003e \"*\" TaskCard","lastModifiedDate":"2023-10-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"MainWindow -left-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"ResultDisplay --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"CommandBox --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"newway1814"},"content":"TaskListPanel --|\u003e UiPart","lastModifiedDate":"2023-10-16"},{"lineNumber":46,"author":{"gitId":"newway1814"},"content":"TaskCard --|\u003e UiPart","lastModifiedDate":"2023-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"StatusBarFooter --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"HelpWindow --|\u003e UiPart","lastModifiedDate":"2021-07-31"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"newway1814"},"content":"TaskCard ..\u003e Model","lastModifiedDate":"2023-10-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"UiManager -right-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"MainWindow -left-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"newway1814"},"content":"TaskListPanel -[hidden]left- HelpWindow","lastModifiedDate":"2023-10-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"HelpWindow -[hidden]left- CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"CommandBox -[hidden]left- ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"ResultDisplay -[hidden]left- StatusBarFooter","lastModifiedDate":"2019-07-30"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"MainWindow -[hidden]-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":52,"newway1814":8}},{"path":"docs/diagrams/UndoRedoState0.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam ClassBackgroundColor #FFFFAA","lastModifiedDate":"2023-07-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"title Initial state","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"package States {","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"jack1e0"},"content":"    class State1 as \"\u003cu\u003epp0:ProfPlan\u003c/u\u003e\"","lastModifiedDate":"2023-11-12"},{"lineNumber":11,"author":{"gitId":"jack1e0"},"content":"    class State2 as \"\u003cu\u003epp1:ProfPlan\u003c/u\u003e\"","lastModifiedDate":"2023-11-12"},{"lineNumber":12,"author":{"gitId":"jack1e0"},"content":"    class State3 as \"\u003cu\u003epp2:ProfPlan\u003c/u\u003e\"","lastModifiedDate":"2023-11-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"State2 -[hidden]right-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"hide State2","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"hide State3","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"class Pointer as \"Current State\" #FFFFFF","lastModifiedDate":"2023-07-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Pointer -up-\u003e State1","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"jack1e0":3,"-":18}},{"path":"docs/diagrams/UndoRedoState1.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam ClassBackgroundColor #FFFFAA","lastModifiedDate":"2023-07-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"title After command \"delete 5\"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"package States \u003c\u003crectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"jack1e0"},"content":"    class State1 as \"\u003cu\u003epp0:ProfPlan\u003c/u\u003e\"","lastModifiedDate":"2023-11-12"},{"lineNumber":11,"author":{"gitId":"jack1e0"},"content":"    class State2 as \"\u003cu\u003epp1:ProfPlan\u003c/u\u003e\"","lastModifiedDate":"2023-11-12"},{"lineNumber":12,"author":{"gitId":"jack1e0"},"content":"    class State3 as \"\u003cu\u003epp2:ProfPlan\u003c/u\u003e\"","lastModifiedDate":"2023-11-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"State2 -[hidden]right-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"hide State3","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"class Pointer as \"Current State\" #FFFFFF","lastModifiedDate":"2023-07-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Pointer -up-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"jack1e0":3,"-":20}},{"path":"docs/diagrams/UndoRedoState2.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam ClassBackgroundColor #FFFFAA","lastModifiedDate":"2023-07-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"title After command \"add n/David\"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"package States \u003c\u003crectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"jack1e0"},"content":"    class State1 as \"\u003cu\u003epp0:ProfPlan\u003c/u\u003e\"","lastModifiedDate":"2023-11-12"},{"lineNumber":11,"author":{"gitId":"jack1e0"},"content":"    class State2 as \"\u003cu\u003epp1:ProfPlan\u003c/u\u003e\"","lastModifiedDate":"2023-11-12"},{"lineNumber":12,"author":{"gitId":"jack1e0"},"content":"    class State3 as \"\u003cu\u003epp2:ProfPlan\u003c/u\u003e\"","lastModifiedDate":"2023-11-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"State2 -[hidden]right-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"class Pointer as \"Current State\" #FFFFFF","lastModifiedDate":"2023-07-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Pointer -up-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"jack1e0":3,"-":18}},{"path":"docs/diagrams/UndoRedoState3.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam ClassBackgroundColor #FFFFAA","lastModifiedDate":"2023-07-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"title After command \"undo\"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"package States \u003c\u003crectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"jack1e0"},"content":"    class State1 as \"\u003cu\u003epp0:ProfPlan\u003c/u\u003e\"","lastModifiedDate":"2023-11-12"},{"lineNumber":11,"author":{"gitId":"jack1e0"},"content":"    class State2 as \"\u003cu\u003epp1:ProfPlan\u003c/u\u003e\"","lastModifiedDate":"2023-11-12"},{"lineNumber":12,"author":{"gitId":"jack1e0"},"content":"    class State3 as \"\u003cu\u003epp2:ProfPlan\u003c/u\u003e\"","lastModifiedDate":"2023-11-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"State2 -[hidden]right-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"class Pointer as \"Current State\" #FFFFFF","lastModifiedDate":"2023-07-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Pointer -up-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"jack1e0":3,"-":18}},{"path":"docs/diagrams/UndoRedoState4.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam ClassBackgroundColor #FFFFAA","lastModifiedDate":"2023-07-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"title After command \"list\"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"package States \u003c\u003crectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"jack1e0"},"content":"    class State1 as \"\u003cu\u003epp0:ProfPlan\u003c/u\u003e\"","lastModifiedDate":"2023-11-12"},{"lineNumber":11,"author":{"gitId":"jack1e0"},"content":"    class State2 as \"\u003cu\u003epp1:ProfPlan\u003c/u\u003e\"","lastModifiedDate":"2023-11-12"},{"lineNumber":12,"author":{"gitId":"jack1e0"},"content":"    class State3 as \"\u003cu\u003epp2:ProfPlan\u003c/u\u003e\"","lastModifiedDate":"2023-11-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"State2 -[hidden]right-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"class Pointer as \"Current State\" #FFFFFF","lastModifiedDate":"2023-07-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Pointer -up-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"jack1e0":3,"-":18}},{"path":"docs/diagrams/UndoRedoState5.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam ClassBackgroundColor #FFFFAA","lastModifiedDate":"2023-07-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"title After command \"clear\"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"package States \u003c\u003crectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"jack1e0"},"content":"    class State1 as \"\u003cu\u003epp0:ProfPlan\u003c/u\u003e\"","lastModifiedDate":"2023-11-12"},{"lineNumber":11,"author":{"gitId":"jack1e0"},"content":"    class State2 as \"\u003cu\u003epp1:ProfPlan\u003c/u\u003e\"","lastModifiedDate":"2023-11-12"},{"lineNumber":12,"author":{"gitId":"jack1e0"},"content":"    class State3 as \"\u003cu\u003epp3:ProfPlan\u003c/u\u003e\"","lastModifiedDate":"2023-11-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"State2 -[hidden]right-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"class Pointer as \"Current State\" #FFFFFF","lastModifiedDate":"2023-07-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Pointer -up-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"jack1e0"},"content":"note right on link: State pp2 deleted.","lastModifiedDate":"2023-11-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"jack1e0":4,"-":18}},{"path":"docs/diagrams/UndoSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2023-07-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"newway1814"},"content":"participant \":ProfPlanParser\" as ProfPlanParser LOGIC_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"participant \"u:UndoCommand\" as UndoCommand LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"jack1e0"},"content":"participant \":VersionedProfPlan\" as VersionedProfPlan MODEL_COLOR","lastModifiedDate":"2023-11-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"[-\u003e LogicManager : execute(undo)","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"activate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"newway1814"},"content":"LogicManager -\u003e ProfPlanParser : parseCommand(undo)","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"newway1814"},"content":"activate ProfPlanParser","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"create UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"newway1814"},"content":"ProfPlanParser -\u003e UndoCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"activate UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"newway1814"},"content":"UndoCommand --\u003e ProfPlanParser","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"deactivate UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"newway1814"},"content":"ProfPlanParser --\u003e LogicManager : u","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"newway1814"},"content":"deactivate ProfPlanParser","lastModifiedDate":"2023-10-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"LogicManager -\u003e UndoCommand : execute()","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"activate UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"jack1e0"},"content":"UndoCommand -\u003e Model : undoProfPlan()","lastModifiedDate":"2023-11-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"activate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"jack1e0"},"content":"Model -\u003e VersionedProfPlan : undo()","lastModifiedDate":"2023-11-12"},{"lineNumber":38,"author":{"gitId":"jack1e0"},"content":"activate VersionedProfPlan","lastModifiedDate":"2023-11-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":40,"author":{"gitId":"jack1e0"},"content":"VersionedProfPlan -\u003e VersionedProfPlan :resetData(ReadOnlyProfPlan)","lastModifiedDate":"2023-11-12"},{"lineNumber":41,"author":{"gitId":"jack1e0"},"content":"VersionedProfPlan --\u003e Model :","lastModifiedDate":"2023-11-12"},{"lineNumber":42,"author":{"gitId":"jack1e0"},"content":"deactivate VersionedProfPlan","lastModifiedDate":"2023-11-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"Model --\u003e UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"deactivate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"UndoCommand --\u003e LogicManager : result","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"deactivate UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"UndoCommand -[hidden]-\u003e LogicManager : result","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"destroy UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"[\u003c--LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"deactivate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"jack1e0":7,"-":40,"newway1814":7}},{"path":"docs/diagrams/UnmarkCommandClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"newway1814"},"content":"@startuml UnmarkCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"newway1814"},"content":"!define classBackgroundColor #ff023134","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"newway1814"},"content":"!define classFontStyle bold","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"newway1814"},"content":"skinparam class {","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"newway1814"},"content":"  BackgroundColor classBackgroundColor","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"newway1814"},"content":"  FontStyle classFontStyle","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"newway1814"},"content":"}","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"newway1814"},"content":"class UnmarkCommand {","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"newway1814"},"content":"  - COMMAND_WORD: String","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"newway1814"},"content":"  - MESSAGE_USAGE: String","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"newway1814"},"content":"  - MESSAGE_SUCCESS: String","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"newway1814"},"content":"  - MESSAGE_INVALID_NUMBER: String","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"newway1814"},"content":"  - MESSAGE_ALREADY_UNDONE: String","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"newway1814"},"content":"  - taskNumber: int","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"newway1814"},"content":"  + UnmarkCommand(number: int)","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"newway1814"},"content":"  + execute(model: Model): CommandResult","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"newway1814"},"content":"  + equals(other: Object): boolean","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"newway1814"},"content":"  + toString(): String","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"newway1814"},"content":"}","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"newway1814"},"content":"@enduml","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"newway1814":23}},{"path":"docs/diagrams/tracing/LogicSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-06-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include ../style.puml","lastModifiedDate":"2019-06-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2023-07-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-06-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"Participant \":LogicManager\" as logic LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":6,"author":{"gitId":"newway1814"},"content":"Participant \":ProfPlanParser\" as abp LOGIC_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Participant \":EditCommandParser\" as ecp LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Participant \"command:EditCommand\" as ec LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"[-\u003e logic : execute","lastModifiedDate":"2019-06-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"activate logic","lastModifiedDate":"2019-06-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"logic -\u003e abp ++: parseCommand(commandText)","lastModifiedDate":"2019-06-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"create ecp","lastModifiedDate":"2019-06-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"abp -\u003e ecp","lastModifiedDate":"2019-06-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"abp -\u003e ecp ++: parse(arguments)","lastModifiedDate":"2019-06-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"create ec","lastModifiedDate":"2019-06-17"},{"lineNumber":17,"author":{"gitId":"newway1814"},"content":"ecp -\u003e ec ++: index, editTaskDescriptor","lastModifiedDate":"2023-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"ec --\u003e ecp --","lastModifiedDate":"2019-06-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"ecp --\u003e abp --: command","lastModifiedDate":"2019-06-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"abp --\u003e logic --: command","lastModifiedDate":"2019-06-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-06-17"},{"lineNumber":22,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-06-17"}],"authorContributionMap":{"-":20,"newway1814":2}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"newway1814"},"content":"title: ProfPlan","lastModifiedDate":"2023-11-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"[![CI Status](https://github.com/se-edu/addressbook-level3/workflows/Java%20CI/badge.svg)](https://github.com/se-edu/addressbook-level3/actions)","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"[![codecov](https://codecov.io/gh/se-edu/addressbook-level3/branch/master/graph/badge.svg)](https://codecov.io/gh/se-edu/addressbook-level3)","lastModifiedDate":"2020-08-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"kiatkat"},"content":"**ProfPlan is a desktop application for managing your contact details.** While it has a GUI, most of the user interactions","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"kiatkat"},"content":"happen using a CLI (Command Line Interface).","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"kiatkat"},"content":"* If you are interested in using ProfPlan, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"kiatkat"},"content":"* If you are interested about developing ProfPlan, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"kiatkat":4,"-":15,"newway1814":1}},{"path":"docs/team/eyelessrhyme7.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"eyelessrhyme7"},"content":"# Project Portfolio Page (PPP) - Raman Gupta","lastModifiedDate":"2023-10-02"},{"lineNumber":2,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":3,"author":{"gitId":"eyelessrhyme7"},"content":"## Overview","lastModifiedDate":"2023-10-02"},{"lineNumber":4,"author":{"gitId":"eyelessrhyme7"},"content":"ProfPlan is a CLI-based task management tool tailored to university professors, offering features like task prioritization, categorization, research tracking, and team coordination to enhance productivity and organization in academia.","lastModifiedDate":"2023-10-02"},{"lineNumber":5,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":6,"author":{"gitId":"eyelessrhyme7"},"content":"## Summary of Contributions","lastModifiedDate":"2023-10-02"},{"lineNumber":7,"author":{"gitId":"eyelessrhyme7"},"content":"### Code contributed","lastModifiedDate":"2023-10-02"},{"lineNumber":8,"author":{"gitId":"eyelessrhyme7"},"content":"- **[Link to my code on tP Code Dashboard](https://nus-cs2103-ay2324s1.github.io/tp-dashboard/?search\u003deyelessrhyme7\u0026breakdown\u003dtrue)**.","lastModifiedDate":"2023-10-02"},{"lineNumber":9,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":10,"author":{"gitId":"eyelessrhyme7"},"content":"### Enhancements implemented","lastModifiedDate":"2023-10-02"},{"lineNumber":11,"author":{"gitId":"eyelessrhyme7"},"content":"- Changed the README.md to reflect the ProfPlan project.","lastModifiedDate":"2023-10-02"},{"lineNumber":12,"author":{"gitId":"eyelessrhyme7"},"content":"- Developed the add-task command, the base command to add tasks.","lastModifiedDate":"2023-11-03"},{"lineNumber":13,"author":{"gitId":"eyelessrhyme7"},"content":"- Developed the priority feature, based of which do_next and matrix is implemented.","lastModifiedDate":"2023-11-03"},{"lineNumber":14,"author":{"gitId":"eyelessrhyme7"},"content":"- Developed the do_next command, which generates smart task recommendation on what to do next.","lastModifiedDate":"2023-11-03"},{"lineNumber":15,"author":{"gitId":"eyelessrhyme7"},"content":"- Co-developed the Urgency-Priority Matrix functionality, specifically the backend.","lastModifiedDate":"2023-11-03"},{"lineNumber":16,"author":{"gitId":"eyelessrhyme7"},"content":"- Added matrix UI refinements.","lastModifiedDate":"2023-11-03"},{"lineNumber":17,"author":{"gitId":"eyelessrhyme7"},"content":"- Designed the taskCard UI component.","lastModifiedDate":"2023-11-03"},{"lineNumber":18,"author":{"gitId":"eyelessrhyme7"},"content":"- Added Product UI changes and enhanced design.","lastModifiedDate":"2023-11-03"},{"lineNumber":19,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":20,"author":{"gitId":"eyelessrhyme7"},"content":"### Contributions to the User Guide","lastModifiedDate":"2023-10-02"},{"lineNumber":21,"author":{"gitId":"eyelessrhyme7"},"content":"- Developed the UI Mockups for all team members to adapt to their features.","lastModifiedDate":"2023-10-02"},{"lineNumber":22,"author":{"gitId":"eyelessrhyme7"},"content":"- Created the \"Adding a Task\" section of the User Guide.","lastModifiedDate":"2023-10-02"},{"lineNumber":23,"author":{"gitId":"eyelessrhyme7"},"content":"- Created the \"Assigning Priority to a Task\" feature of the User Guide.","lastModifiedDate":"2023-10-02"},{"lineNumber":24,"author":{"gitId":"eyelessrhyme7"},"content":"- Created the \"Generating Task Recommendation\" feature of the User Guide.","lastModifiedDate":"2023-11-03"},{"lineNumber":25,"author":{"gitId":"eyelessrhyme7"},"content":"- Created the \"Urgency-Priority Matrix\" feature of the User Guide.","lastModifiedDate":"2023-11-03"},{"lineNumber":26,"author":{"gitId":"eyelessrhyme7"},"content":"- Created the \"Command List\" part of the UG for PE-Dry Run testing.","lastModifiedDate":"2023-11-03"},{"lineNumber":27,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":28,"author":{"gitId":"eyelessrhyme7"},"content":"### Contributions to the Developer Guide","lastModifiedDate":"2023-10-02"},{"lineNumber":29,"author":{"gitId":"eyelessrhyme7"},"content":"- [Specify which sections of the Developer Guide you contributed to. Mention any UML diagrams you added/updated.]","lastModifiedDate":"2023-10-02"},{"lineNumber":30,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":31,"author":{"gitId":"eyelessrhyme7"},"content":"### Contributions to team-based tasks","lastModifiedDate":"2023-10-02"},{"lineNumber":32,"author":{"gitId":"eyelessrhyme7"},"content":"- Set up all meetings and independently led discussion on approach \u0026 implementation.","lastModifiedDate":"2023-11-03"},{"lineNumber":33,"author":{"gitId":"eyelessrhyme7"},"content":"- Responsible for merging almost ALL the PRs to the master branch. ","lastModifiedDate":"2023-11-03"},{"lineNumber":34,"author":{"gitId":"eyelessrhyme7"},"content":"- Tested all release versions before wrapping up milestones.","lastModifiedDate":"2023-11-03"},{"lineNumber":35,"author":{"gitId":"eyelessrhyme7"},"content":"- Released v1.1, v1.2, v1.3.Trial and v1.3.","lastModifiedDate":"2023-11-03"},{"lineNumber":36,"author":{"gitId":"eyelessrhyme7"},"content":"- Fixed severe bugs in v1.2, v1.3.Trial and v1.3 before release.","lastModifiedDate":"2023-11-03"},{"lineNumber":37,"author":{"gitId":"eyelessrhyme7"},"content":"- Fixed severe command bugs, date bugs and math errors (division by 0) in v1.3.","lastModifiedDate":"2023-11-03"},{"lineNumber":38,"author":{"gitId":"eyelessrhyme7"},"content":"- Created the structure for the User Guide.","lastModifiedDate":"2023-11-03"},{"lineNumber":39,"author":{"gitId":"eyelessrhyme7"},"content":"- Created the structure for the product demo and pitch in CS2101.","lastModifiedDate":"2023-11-03"},{"lineNumber":40,"author":{"gitId":"eyelessrhyme7"},"content":"- Collated and submitted the User Guide. Designed UI mockups for the UG.","lastModifiedDate":"2023-10-02"},{"lineNumber":41,"author":{"gitId":"eyelessrhyme7"},"content":"- Created the Team Organization.","lastModifiedDate":"2023-11-03"},{"lineNumber":42,"author":{"gitId":"eyelessrhyme7"},"content":"- Forked the tp repo to the Team Organization.","lastModifiedDate":"2023-11-03"},{"lineNumber":43,"author":{"gitId":"eyelessrhyme7"},"content":"- Updated site-wide settings.","lastModifiedDate":"2023-11-03"},{"lineNumber":44,"author":{"gitId":"eyelessrhyme7"},"content":"- Contributed to morphing of addressbook to profplan.","lastModifiedDate":"2023-11-03"},{"lineNumber":45,"author":{"gitId":"eyelessrhyme7"},"content":"- Morphed add-person to add-task, contributing to morphing of addressbook.","lastModifiedDate":"2023-11-03"},{"lineNumber":46,"author":{"gitId":"eyelessrhyme7"},"content":"- Updated the index.md page.","lastModifiedDate":"2023-11-03"},{"lineNumber":47,"author":{"gitId":"eyelessrhyme7"},"content":"- Redesigned the UI Color Scheme.","lastModifiedDate":"2023-11-03"},{"lineNumber":48,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":49,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":50,"author":{"gitId":"eyelessrhyme7"},"content":"### Review/mentoring contributions","lastModifiedDate":"2023-10-02"},{"lineNumber":51,"author":{"gitId":"eyelessrhyme7"},"content":"- [Provide links to Pull Requests (PRs) you reviewed or instances of helping team members.]","lastModifiedDate":"2023-10-02"},{"lineNumber":52,"author":{"gitId":"eyelessrhyme7"},"content":"- ","lastModifiedDate":"2023-11-03"},{"lineNumber":53,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":54,"author":{"gitId":"eyelessrhyme7"},"content":"### Contributions beyond the project team","lastModifiedDate":"2023-10-02"},{"lineNumber":55,"author":{"gitId":"eyelessrhyme7"},"content":"- Evidence of helping others","lastModifiedDate":"2023-10-02"},{"lineNumber":56,"author":{"gitId":"eyelessrhyme7"},"content":"    - [Share evidence of how you helped others, such as responses in the forum or bugs reported in other team\u0027s products.]","lastModifiedDate":"2023-10-02"},{"lineNumber":57,"author":{"gitId":"eyelessrhyme7"},"content":"- Evidence of technical leadership","lastModifiedDate":"2023-10-02"},{"lineNumber":58,"author":{"gitId":"eyelessrhyme7"},"content":"    - [Provide examples of sharing useful information in the forum or other leadership activities.]","lastModifiedDate":"2023-10-02"},{"lineNumber":59,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":60,"author":{"gitId":"eyelessrhyme7"},"content":"## Contributions to the Developer Guide (Extracts)","lastModifiedDate":"2023-10-02"},{"lineNumber":61,"author":{"gitId":"eyelessrhyme7"},"content":"- [Reproduce the parts in the Developer Guide that you wrote or contributed to. Alternatively, show the diagrams you contributed.]","lastModifiedDate":"2023-10-02"},{"lineNumber":62,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":63,"author":{"gitId":"eyelessrhyme7"},"content":"## Contributions to the User Guide (Extracts)","lastModifiedDate":"2023-10-02"},{"lineNumber":64,"author":{"gitId":"eyelessrhyme7"},"content":"- [Reproduce the parts in the User Guide that you wrote or contributed to.]","lastModifiedDate":"2023-10-02"}],"authorContributionMap":{"kiatkat":1,"eyelessrhyme7":63}},{"path":"docs/team/jack1e0.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jack1e0"},"content":"---","lastModifiedDate":"2023-10-02"},{"lineNumber":2,"author":{"gitId":"jack1e0"},"content":"layout: page","lastModifiedDate":"2023-10-02"},{"lineNumber":3,"author":{"gitId":"jack1e0"},"content":"title: Guo Jiaqi Jackie\u0027s Project Portfolio Page","lastModifiedDate":"2023-10-02"},{"lineNumber":4,"author":{"gitId":"jack1e0"},"content":"---","lastModifiedDate":"2023-10-02"},{"lineNumber":5,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":6,"author":{"gitId":"jack1e0"},"content":"### Project: ProfPlan","lastModifiedDate":"2023-10-02"},{"lineNumber":7,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":8,"author":{"gitId":"jack1e0"},"content":"ProfPlan is a desktop productivity application written in Java, used for task management and organization. The user","lastModifiedDate":"2023-10-02"},{"lineNumber":9,"author":{"gitId":"jack1e0"},"content":"interacts with it using a CLI, and it has a GUI created with JavaFX.","lastModifiedDate":"2023-10-02"},{"lineNumber":10,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":11,"author":{"gitId":"jack1e0"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-10-02"},{"lineNumber":12,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":13,"author":{"gitId":"jack1e0"},"content":"* **New Feature 1**: `Coming soon`","lastModifiedDate":"2023-10-02"},{"lineNumber":14,"author":{"gitId":"jack1e0"},"content":"  * What it does:","lastModifiedDate":"2023-10-02"},{"lineNumber":15,"author":{"gitId":"jack1e0"},"content":"  * Justification:","lastModifiedDate":"2023-10-02"},{"lineNumber":16,"author":{"gitId":"jack1e0"},"content":"  * Highlights:","lastModifiedDate":"2023-10-02"},{"lineNumber":17,"author":{"gitId":"jack1e0"},"content":"  * Credits:","lastModifiedDate":"2023-10-02"},{"lineNumber":18,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":19,"author":{"gitId":"jack1e0"},"content":"* **New Feature 2**: `Coming soon`","lastModifiedDate":"2023-10-02"},{"lineNumber":20,"author":{"gitId":"jack1e0"},"content":"  * What it does:","lastModifiedDate":"2023-10-02"},{"lineNumber":21,"author":{"gitId":"jack1e0"},"content":"  * Justification:","lastModifiedDate":"2023-10-02"},{"lineNumber":22,"author":{"gitId":"jack1e0"},"content":"  * Highlights:","lastModifiedDate":"2023-10-02"},{"lineNumber":23,"author":{"gitId":"jack1e0"},"content":"  * Credits:","lastModifiedDate":"2023-10-02"},{"lineNumber":24,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":25,"author":{"gitId":"jack1e0"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2324s1.github.io/tp-dashboard/?search\u003djack1e0\u0026breakdown\u003dfalse)","lastModifiedDate":"2023-10-02"},{"lineNumber":26,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":27,"author":{"gitId":"jack1e0"},"content":"* **Project management**:","lastModifiedDate":"2023-10-02"},{"lineNumber":28,"author":{"gitId":"jack1e0"},"content":"  * `Coming soon`","lastModifiedDate":"2023-10-02"},{"lineNumber":29,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":30,"author":{"gitId":"jack1e0"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-10-02"},{"lineNumber":31,"author":{"gitId":"jack1e0"},"content":"  * `Coming soon`","lastModifiedDate":"2023-10-02"},{"lineNumber":32,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":33,"author":{"gitId":"jack1e0"},"content":"* **Documentation**:","lastModifiedDate":"2023-10-02"},{"lineNumber":34,"author":{"gitId":"jack1e0"},"content":"  * User Guide:","lastModifiedDate":"2023-10-02"},{"lineNumber":35,"author":{"gitId":"jack1e0"},"content":"    * Added documentation for the features `edit` and `filter` [\\#72]()","lastModifiedDate":"2023-10-02"},{"lineNumber":36,"author":{"gitId":"jack1e0"},"content":"  * Developer Guide:","lastModifiedDate":"2023-10-02"},{"lineNumber":37,"author":{"gitId":"jack1e0"},"content":"    * Added implementation details of the `edit` and `filter` features.","lastModifiedDate":"2023-10-02"},{"lineNumber":38,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":39,"author":{"gitId":"jack1e0"},"content":"* **Community**:","lastModifiedDate":"2023-10-02"},{"lineNumber":40,"author":{"gitId":"jack1e0"},"content":"  * PRs reviewed (with non-trivial review comments): `Coming soon`","lastModifiedDate":"2023-10-02"},{"lineNumber":41,"author":{"gitId":"jack1e0"},"content":"  * Contributed to forum discussions (examples: `Coming soon`)","lastModifiedDate":"2023-10-02"},{"lineNumber":42,"author":{"gitId":"jack1e0"},"content":"  * Reported bugs and suggestions for other teams in the class (examples: `Coming soon`)","lastModifiedDate":"2023-10-02"},{"lineNumber":43,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":44,"author":{"gitId":"jack1e0"},"content":"* **Tools**:","lastModifiedDate":"2023-10-02"},{"lineNumber":45,"author":{"gitId":"jack1e0"},"content":"  * `Coming soon`","lastModifiedDate":"2023-10-02"},{"lineNumber":46,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":47,"author":{"gitId":"jack1e0"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2023-10-02"}],"authorContributionMap":{"jack1e0":47}},{"path":"docs/team/kiatkat.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"kiatkat"},"content":"---","lastModifiedDate":"2023-10-02"},{"lineNumber":2,"author":{"gitId":"kiatkat"},"content":"layout: page","lastModifiedDate":"2023-10-02"},{"lineNumber":3,"author":{"gitId":"kiatkat"},"content":"title: Kiat Win\u0027s Project Portfolio Page","lastModifiedDate":"2023-10-02"},{"lineNumber":4,"author":{"gitId":"kiatkat"},"content":"---","lastModifiedDate":"2023-10-02"},{"lineNumber":5,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":6,"author":{"gitId":"kiatkat"},"content":"## Project: ProfPlan","lastModifiedDate":"2023-11-12"},{"lineNumber":7,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":8,"author":{"gitId":"kiatkat"},"content":"ProfPlan is a desktop productivity application written in Java, used for task management and organization. The user","lastModifiedDate":"2023-10-02"},{"lineNumber":9,"author":{"gitId":"kiatkat"},"content":"interacts with it using a CLI, and it has a GUI created with JavaFX.","lastModifiedDate":"2023-10-02"},{"lineNumber":10,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":11,"author":{"gitId":"kiatkat"},"content":"Listed below are my contributions to the project, with the relevant pull requests linked where possible.","lastModifiedDate":"2023-11-12"},{"lineNumber":12,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":13,"author":{"gitId":"kiatkat"},"content":"**Code contributed**: [RepoSense link](https://nus-cs2103-ay2324s1.github.io/tp-dashboard/?search\u003dkiatkat\u0026breakdown\u003dtrue)","lastModifiedDate":"2023-11-12"},{"lineNumber":14,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":15,"author":{"gitId":"kiatkat"},"content":"### New Features","lastModifiedDate":"2023-11-12"},{"lineNumber":16,"author":{"gitId":"kiatkat"},"content":"* Added the ability to create recurring tasks. [#130](https://github.com/AY2324S1-CS2103T-W15-1/tp/pull/130)","lastModifiedDate":"2023-11-12"},{"lineNumber":17,"author":{"gitId":"kiatkat"},"content":"  * What it does: Allows the user to denote a task as a recurring task, a new type of task that is never entirely ","lastModifiedDate":"2023-11-12"},{"lineNumber":18,"author":{"gitId":"kiatkat"},"content":"    completed. Rather, marking this type of task as done will push its due date into the future by an amount ","lastModifiedDate":"2023-11-12"},{"lineNumber":19,"author":{"gitId":"kiatkat"},"content":"    depending on its type.","lastModifiedDate":"2023-11-12"},{"lineNumber":20,"author":{"gitId":"kiatkat"},"content":"  * Justification: This feature better reflects the needs of most users, as a large number of tasks are cyclical in ","lastModifiedDate":"2023-11-12"},{"lineNumber":21,"author":{"gitId":"kiatkat"},"content":"    nature and repeat on a periodic basis. The application can then better model these tasks and provide a more ","lastModifiedDate":"2023-11-12"},{"lineNumber":22,"author":{"gitId":"kiatkat"},"content":"    natural means for the user to manage them.","lastModifiedDate":"2023-11-12"},{"lineNumber":23,"author":{"gitId":"kiatkat"},"content":"  * Highlights: This enhancement directly affects the `add` command, adding directly onto its implementation. A ","lastModifiedDate":"2023-11-12"},{"lineNumber":24,"author":{"gitId":"kiatkat"},"content":"    thorough consideration of design options was necessary to determine a solution which could seamlessly integrate ","lastModifiedDate":"2023-11-12"},{"lineNumber":25,"author":{"gitId":"kiatkat"},"content":"    with the `add` command and which had minimal overhead, while still providing extensibility and flexibility to ","lastModifiedDate":"2023-11-12"},{"lineNumber":26,"author":{"gitId":"kiatkat"},"content":"    its own usage.","lastModifiedDate":"2023-11-12"},{"lineNumber":27,"author":{"gitId":"kiatkat"},"content":"  * Credits: Code written for this feature is original.","lastModifiedDate":"2023-11-12"},{"lineNumber":28,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":29,"author":{"gitId":"kiatkat"},"content":"* Added the ability for the user to change some defined settings to customize their experience. [#138](https://github.com/AY2324S1-CS2103T-W15-1/tp/pull/138)","lastModifiedDate":"2023-11-12"},{"lineNumber":30,"author":{"gitId":"kiatkat"},"content":"  * What it does: Allows the user to change certain global parameters that affect the behaviour of other commands ","lastModifiedDate":"2023-11-12"},{"lineNumber":31,"author":{"gitId":"kiatkat"},"content":"    via the `set` command.","lastModifiedDate":"2023-11-12"},{"lineNumber":32,"author":{"gitId":"kiatkat"},"content":"  * Justification: Different users may desire different parameters for some commands, and wish to customize the ","lastModifiedDate":"2023-11-12"},{"lineNumber":33,"author":{"gitId":"kiatkat"},"content":"    application to suit their unique needs.","lastModifiedDate":"2023-11-12"},{"lineNumber":34,"author":{"gitId":"kiatkat"},"content":"  * Highlights: This feature required changes across the codebase in multiple regions of the architecture. A ","lastModifiedDate":"2023-11-12"},{"lineNumber":35,"author":{"gitId":"kiatkat"},"content":"    `settings.json` file must be created to maintain these user configurations through sessions, and so various ","lastModifiedDate":"2023-11-12"},{"lineNumber":36,"author":{"gitId":"kiatkat"},"content":"    infrastructure must be set up to properly store and read from this file. Furthermore, the user has to be able to ","lastModifiedDate":"2023-11-12"},{"lineNumber":37,"author":{"gitId":"kiatkat"},"content":"    modify the values in this file, and any command must be able to read these settings. Careful thought had to be ","lastModifiedDate":"2023-11-12"},{"lineNumber":38,"author":{"gitId":"kiatkat"},"content":"    given to the structure and design of this system to reduce dependencies across the codebase.","lastModifiedDate":"2023-11-12"},{"lineNumber":39,"author":{"gitId":"kiatkat"},"content":"  * Credits: The design of the `UserConfigs` system is similar to AB3\u0027s `UserPrefs` in the interest of consistency. ","lastModifiedDate":"2023-11-12"},{"lineNumber":40,"author":{"gitId":"kiatkat"},"content":"    However, `UserConfigs` and its related classes are independent of the existing systems, and all such code ","lastModifiedDate":"2023-11-12"},{"lineNumber":41,"author":{"gitId":"kiatkat"},"content":"    written is otherwise original.","lastModifiedDate":"2023-11-12"},{"lineNumber":42,"author":{"gitId":"kiatkat"},"content":"  * Note: The `set` feature initially implemented (pre-v1.3) is a different feature from the current `set` feature, ","lastModifiedDate":"2023-11-12"},{"lineNumber":43,"author":{"gitId":"kiatkat"},"content":"    and it has since been removed. As I was responsible for both of these features, past pull requests may mention ","lastModifiedDate":"2023-11-12"},{"lineNumber":44,"author":{"gitId":"kiatkat"},"content":"    this dated `set` feature. All further mentions of `set` in this document are meant to refer to the current ","lastModifiedDate":"2023-11-12"},{"lineNumber":45,"author":{"gitId":"kiatkat"},"content":"    implementation (settings) as described above.","lastModifiedDate":"2023-11-12"},{"lineNumber":46,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":47,"author":{"gitId":"kiatkat"},"content":"### Project management and team-based tasks","lastModifiedDate":"2023-11-12"},{"lineNumber":48,"author":{"gitId":"kiatkat"},"content":"* Responsible for creating and setting deadlines for all milestones","lastModifiedDate":"2023-11-12"},{"lineNumber":49,"author":{"gitId":"kiatkat"},"content":"* Performed most of the renaming required for the initial morph of AB3 into ProfPlan","lastModifiedDate":"2023-11-12"},{"lineNumber":50,"author":{"gitId":"kiatkat"},"content":"* Responsible for removing redundancies and cleaning up the codebase [#121](https://github.com/AY2324S1-CS2103T-W15-1/tp/pull/121)","lastModifiedDate":"2023-11-12"},{"lineNumber":51,"author":{"gitId":"kiatkat"},"content":"  [#137](https://github.com/AY2324S1-CS2103T-W15-1/tp/pull/137)","lastModifiedDate":"2023-11-12"},{"lineNumber":52,"author":{"gitId":"kiatkat"},"content":"* Consolidated features to be implemented at the beginning of the project and divided work into issues for delegation","lastModifiedDate":"2023-11-12"},{"lineNumber":53,"author":{"gitId":"kiatkat"},"content":"* Responsible for the creation and enforcement of early milestones for `v1.2` and `v1.3` to prevent deadline overrun","lastModifiedDate":"2023-11-12"},{"lineNumber":54,"author":{"gitId":"kiatkat"},"content":"* Contributed to all team planning, scoping out the breadth and depth of features to be implemented","lastModifiedDate":"2023-11-12"},{"lineNumber":55,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":56,"author":{"gitId":"kiatkat"},"content":"### Enhancements to existing features","lastModifiedDate":"2023-11-12"},{"lineNumber":57,"author":{"gitId":"kiatkat"},"content":"* Updated the `find` feature to new specifications: [#77](https://github.com/AY2324S1-CS2103T-W15-1/tp/pull/77)","lastModifiedDate":"2023-11-12"},{"lineNumber":58,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":59,"author":{"gitId":"kiatkat"},"content":"### Documentation","lastModifiedDate":"2023-11-12"},{"lineNumber":60,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":61,"author":{"gitId":"kiatkat"},"content":"#### User Guide","lastModifiedDate":"2023-11-12"},{"lineNumber":62,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":63,"author":{"gitId":"kiatkat"},"content":"* Added documentation for the features `find` and `set` [#22](https://github.com/AY2324S1-CS2103T-W15-1/tp/issues/22)","lastModifiedDate":"2023-10-02"},{"lineNumber":64,"author":{"gitId":"kiatkat"},"content":"* Added documentation for the `recur/` flag and all corresponding mentions of recurring tasks","lastModifiedDate":"2023-11-12"},{"lineNumber":65,"author":{"gitId":"kiatkat"},"content":"* Added documentation for supported setting parameters","lastModifiedDate":"2023-11-12"},{"lineNumber":66,"author":{"gitId":"kiatkat"},"content":"* Added information on the acceptable values for the parameters that the user can input","lastModifiedDate":"2023-11-12"},{"lineNumber":67,"author":{"gitId":"kiatkat"},"content":"* Wrote the introductory section, \"What can ProfPlan do for you?\"","lastModifiedDate":"2023-11-12"},{"lineNumber":68,"author":{"gitId":"kiatkat"},"content":"* Contributed to the preambles of some sections under \"Advanced Features\"","lastModifiedDate":"2023-11-12"},{"lineNumber":69,"author":{"gitId":"kiatkat"},"content":"* Made some tweaks to fix language errors","lastModifiedDate":"2023-11-12"},{"lineNumber":70,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":71,"author":{"gitId":"kiatkat"},"content":"#### Developer Guide","lastModifiedDate":"2023-11-12"},{"lineNumber":72,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":73,"author":{"gitId":"kiatkat"},"content":"* Modified UML diagrams to reflect the addition of the `UserConfigs` system","lastModifiedDate":"2023-11-12"},{"lineNumber":74,"author":{"gitId":"kiatkat"},"content":"* Added use cases specific to `find` and `set`","lastModifiedDate":"2023-11-12"},{"lineNumber":75,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":76,"author":{"gitId":"kiatkat"},"content":"### Community","lastModifiedDate":"2023-11-12"},{"lineNumber":77,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":78,"author":{"gitId":"kiatkat"},"content":"* Reviewed PRs (examples: [#104](https://github.com/AY2324S1-CS2103T-W15-1/tp/pull/104), [#133](https://github.com/AY2324S1-CS2103T-W15-1/tp/pull/133))","lastModifiedDate":"2023-11-12"},{"lineNumber":79,"author":{"gitId":"kiatkat"},"content":"* Reported bugs and suggestions for other teams in the class (examples can be found in the [PE-D](https://github.com/kiatkat/ped/issues))","lastModifiedDate":"2023-11-12"}],"authorContributionMap":{"kiatkat":79}},{"path":"docs/team/newway1814.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"newway1814"},"content":"---","lastModifiedDate":"2023-11-13"},{"lineNumber":2,"author":{"gitId":"newway1814"},"content":"layout: page","lastModifiedDate":"2023-11-13"},{"lineNumber":3,"author":{"gitId":"newway1814"},"content":"title: Tejas Gandhi\u0027s Project Portfolio Page","lastModifiedDate":"2023-11-13"},{"lineNumber":4,"author":{"gitId":"newway1814"},"content":"---","lastModifiedDate":"2023-11-13"},{"lineNumber":5,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":6,"author":{"gitId":"newway1814"},"content":"## Overview","lastModifiedDate":"2023-11-09"},{"lineNumber":7,"author":{"gitId":"newway1814"},"content":"ProfPlan is a CLI-based task management tool tailored to university professors, offering features like task prioritization, categorization, research tracking, and team coordination to enhance productivity and organization in academia.","lastModifiedDate":"2023-11-09"},{"lineNumber":8,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":9,"author":{"gitId":"newway1814"},"content":"## Summary of Contributions","lastModifiedDate":"2023-11-09"},{"lineNumber":10,"author":{"gitId":"newway1814"},"content":"### Code contributed","lastModifiedDate":"2023-11-09"},{"lineNumber":11,"author":{"gitId":"newway1814"},"content":"- **[Link to my code on tP Code Dashboard](https://nus-cs2103-ay2324s1.github.io/tp-dashboard/?search\u003dnewway1814\u0026breakdown\u003dtrue)**.","lastModifiedDate":"2023-11-09"},{"lineNumber":12,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":13,"author":{"gitId":"newway1814"},"content":"### Enhancements implemented Summary","lastModifiedDate":"2023-11-09"},{"lineNumber":14,"author":{"gitId":"newway1814"},"content":"- Changed all the Person instances in the Code base to Task.","lastModifiedDate":"2023-11-09"},{"lineNumber":15,"author":{"gitId":"newway1814"},"content":"- Refactored the left over instances of AddressBook to profPlan.","lastModifiedDate":"2023-11-09"},{"lineNumber":16,"author":{"gitId":"newway1814"},"content":"- Developed the Mark command feature, the main command to mark a task as done.","lastModifiedDate":"2023-11-09"},{"lineNumber":17,"author":{"gitId":"newway1814"},"content":"- Developed the Unmark command feature, the main command to unmark the task from done to undone.","lastModifiedDate":"2023-11-09"},{"lineNumber":18,"author":{"gitId":"newway1814"},"content":"- Developed the delete all command, to delete all the tasks.","lastModifiedDate":"2023-11-09"},{"lineNumber":19,"author":{"gitId":"newway1814"},"content":"- Developed sort_priority command, to sort the tasks based on decreasing order of the priority.","lastModifiedDate":"2023-11-09"},{"lineNumber":20,"author":{"gitId":"newway1814"},"content":"- Developed sort_duedate command, to sort the tasks based on nearest duedate.","lastModifiedDate":"2023-11-09"},{"lineNumber":21,"author":{"gitId":"newway1814"},"content":"- Co-developed the Urgency-Priority Matrix functionality, Focussed on frontend while also implemented the algorithm at the backend.","lastModifiedDate":"2023-11-09"},{"lineNumber":22,"author":{"gitId":"newway1814"},"content":"- Helped in choosing the colour scheme for the UI.","lastModifiedDate":"2023-11-09"},{"lineNumber":23,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":24,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":25,"author":{"gitId":"newway1814"},"content":"### Contributions to the User Guide","lastModifiedDate":"2023-11-09"},{"lineNumber":26,"author":{"gitId":"newway1814"},"content":"- Added the description of ProfPlan.","lastModifiedDate":"2023-11-09"},{"lineNumber":27,"author":{"gitId":"newway1814"},"content":"- Created the \"delete and delete all tasks\" section of the User Guide.","lastModifiedDate":"2023-11-09"},{"lineNumber":28,"author":{"gitId":"newway1814"},"content":"- Edited the \"list\" section to make it adaptable to ProfPlan.","lastModifiedDate":"2023-11-09"},{"lineNumber":29,"author":{"gitId":"newway1814"},"content":"- Created the \"Mark Task as Done\" feature of the User Guide.","lastModifiedDate":"2023-11-09"},{"lineNumber":30,"author":{"gitId":"newway1814"},"content":"- Created the \"Unmark a Task\" feature of the User Guide.","lastModifiedDate":"2023-11-09"},{"lineNumber":31,"author":{"gitId":"newway1814"},"content":"- Collated the \"Mark task as Done\" and \"Unmark a Task\" feature together.","lastModifiedDate":"2023-11-09"},{"lineNumber":32,"author":{"gitId":"newway1814"},"content":"- Created the \"Sort Tasks based on priority\" feature of the User Guide.","lastModifiedDate":"2023-11-09"},{"lineNumber":33,"author":{"gitId":"newway1814"},"content":"- Created the \"Sort Tasks according to deadline\" feature of the User Guide.","lastModifiedDate":"2023-11-09"},{"lineNumber":34,"author":{"gitId":"newway1814"},"content":"- Updated the \"Urgency-Priority Matrix\" feature of the User Guide.","lastModifiedDate":"2023-11-09"},{"lineNumber":35,"author":{"gitId":"newway1814"},"content":"- Created the \"Contact Us\" section of the User Guide.","lastModifiedDate":"2023-11-09"},{"lineNumber":36,"author":{"gitId":"newway1814"},"content":"- Created the \"Feedback\" section of the User Guide.","lastModifiedDate":"2023-11-09"},{"lineNumber":37,"author":{"gitId":"newway1814"},"content":"- Added the form link for feedback/issues/Contact-Us in the User Guide.","lastModifiedDate":"2023-11-13"},{"lineNumber":38,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":39,"author":{"gitId":"newway1814"},"content":"### Contributions to the Developer Guide","lastModifiedDate":"2023-11-09"},{"lineNumber":40,"author":{"gitId":"newway1814"},"content":"- Updated the Delete command section of the Developer Guide","lastModifiedDate":"2023-11-09"},{"lineNumber":41,"author":{"gitId":"newway1814"},"content":"- Updated the Model sequence diagram to make it fit to our implementation.","lastModifiedDate":"2023-11-09"},{"lineNumber":42,"author":{"gitId":"newway1814"},"content":"- Updated the UI class diagram to make it fit to our implementation.","lastModifiedDate":"2023-11-09"},{"lineNumber":43,"author":{"gitId":"newway1814"},"content":"- Updated the Logic class diagram to make it fit to our implementation.","lastModifiedDate":"2023-11-09"},{"lineNumber":44,"author":{"gitId":"newway1814"},"content":"- Updated the Delete Command sequence diagram to make it fit to our implementation.","lastModifiedDate":"2023-11-09"},{"lineNumber":45,"author":{"gitId":"newway1814"},"content":"- Added the Model Uml diagram with clear colours to represent the Model implementation.","lastModifiedDate":"2023-11-09"},{"lineNumber":46,"author":{"gitId":"newway1814"},"content":"- Added the Mark Command feature section the Developer Guide.","lastModifiedDate":"2023-11-09"},{"lineNumber":47,"author":{"gitId":"newway1814"},"content":"- Added the Mark Command Sequence Diagram depicting the logical flow.","lastModifiedDate":"2023-11-09"},{"lineNumber":48,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":49,"author":{"gitId":"newway1814"},"content":"### Contributions to team-based tasks","lastModifiedDate":"2023-11-09"},{"lineNumber":50,"author":{"gitId":"newway1814"},"content":"- Set up few weekly meetings and lead some discussions based on the flow of the project.","lastModifiedDate":"2023-11-09"},{"lineNumber":51,"author":{"gitId":"newway1814"},"content":"- Responsible for merging few PRs to the master branch.","lastModifiedDate":"2023-11-09"},{"lineNumber":52,"author":{"gitId":"newway1814"},"content":"- Tested all release versions before wrapping up milestones.","lastModifiedDate":"2023-11-09"},{"lineNumber":53,"author":{"gitId":"newway1814"},"content":"- Responsible for releasing v1.2 trial jar file.","lastModifiedDate":"2023-11-09"},{"lineNumber":54,"author":{"gitId":"newway1814"},"content":"- Responsible for assigning most Issues created on our team repo.  ","lastModifiedDate":"2023-11-09"},{"lineNumber":55,"author":{"gitId":"newway1814"},"content":"- Helped Teammates in fixing severe bugs.","lastModifiedDate":"2023-11-09"},{"lineNumber":56,"author":{"gitId":"newway1814"},"content":"- Responisble for assigning reviewers for most PR\u0027s","lastModifiedDate":"2023-11-09"},{"lineNumber":57,"author":{"gitId":"newway1814"},"content":"- Fixed severe command bugs.","lastModifiedDate":"2023-11-09"},{"lineNumber":58,"author":{"gitId":"newway1814"},"content":"- Initiated the creation of jekyll docs for User Guide.","lastModifiedDate":"2023-11-09"},{"lineNumber":59,"author":{"gitId":"newway1814"},"content":"- Contributed to morphing of addressbook to profplan.","lastModifiedDate":"2023-11-09"},{"lineNumber":60,"author":{"gitId":"newway1814"},"content":"- Morphed add-person to add-task, contributing to morphing of addressbook.","lastModifiedDate":"2023-11-09"},{"lineNumber":61,"author":{"gitId":"newway1814"},"content":"- Helped in giving inputs regarding the UI Color Scheme.","lastModifiedDate":"2023-11-09"},{"lineNumber":62,"author":{"gitId":"newway1814"},"content":"- Gave constant updates regarding the project flow and timeline on the telegram group of our team.","lastModifiedDate":"2023-11-09"},{"lineNumber":63,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":64,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":65,"author":{"gitId":"newway1814"},"content":"### Review/mentoring contributions","lastModifiedDate":"2023-11-09"},{"lineNumber":66,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":67,"author":{"gitId":"newway1814"},"content":"  * PRs reviewed : [#73](https://github.com/AY2324S1-CS2103T-W15-1/tp/pull/73),","lastModifiedDate":"2023-11-09"},{"lineNumber":68,"author":{"gitId":"newway1814"},"content":"    [#74](https://github.com/AY2324S1-CS2103T-W15-1/tp/pull/74),","lastModifiedDate":"2023-11-09"},{"lineNumber":69,"author":{"gitId":"newway1814"},"content":"    [#75](https://github.com/AY2324S1-CS2103T-W15-1/tp/pull/75),","lastModifiedDate":"2023-11-09"},{"lineNumber":70,"author":{"gitId":"newway1814"},"content":"    [#77](https://github.com/AY2324S1-CS2103T-W15-1/tp/pull/77),","lastModifiedDate":"2023-11-09"},{"lineNumber":71,"author":{"gitId":"newway1814"},"content":"    [#100](https://github.com/AY2324S1-CS2103T-W15-1/tp/pull/100),","lastModifiedDate":"2023-11-09"},{"lineNumber":72,"author":{"gitId":"newway1814"},"content":"    [#102](https://github.com/AY2324S1-CS2103T-W15-1/tp/pull/102),","lastModifiedDate":"2023-11-09"},{"lineNumber":73,"author":{"gitId":"newway1814"},"content":"    [#105](https://github.com/AY2324S1-CS2103T-W15-1/tp/pull/105),","lastModifiedDate":"2023-11-09"},{"lineNumber":74,"author":{"gitId":"newway1814"},"content":"    [#106](https://github.com/AY2324S1-CS2103T-W15-1/tp/pull/106),","lastModifiedDate":"2023-11-09"},{"lineNumber":75,"author":{"gitId":"newway1814"},"content":"    [#107](https://github.com/AY2324S1-CS2103T-W15-1/tp/pull/107),","lastModifiedDate":"2023-11-09"},{"lineNumber":76,"author":{"gitId":"newway1814"},"content":"    [#110](https://github.com/AY2324S1-CS2103T-W15-1/tp/pull/110),","lastModifiedDate":"2023-11-09"},{"lineNumber":77,"author":{"gitId":"newway1814"},"content":"    [#113](https://github.com/AY2324S1-CS2103T-W15-1/tp/pull/113),","lastModifiedDate":"2023-11-09"},{"lineNumber":78,"author":{"gitId":"newway1814"},"content":"    [#118](https://github.com/AY2324S1-CS2103T-W15-1/tp/pull/118),","lastModifiedDate":"2023-11-09"},{"lineNumber":79,"author":{"gitId":"newway1814"},"content":"    [#121](https://github.com/AY2324S1-CS2103T-W15-1/tp/pull/121),","lastModifiedDate":"2023-11-09"},{"lineNumber":80,"author":{"gitId":"newway1814"},"content":"    [#130](https://github.com/AY2324S1-CS2103T-W15-1/tp/pull/130),","lastModifiedDate":"2023-11-09"},{"lineNumber":81,"author":{"gitId":"newway1814"},"content":"    [#137](https://github.com/AY2324S1-CS2103T-W15-1/tp/pull/137),","lastModifiedDate":"2023-11-09"},{"lineNumber":82,"author":{"gitId":"newway1814"},"content":"    [#138](https://github.com/AY2324S1-CS2103T-W15-1/tp/pull/138),","lastModifiedDate":"2023-11-09"},{"lineNumber":83,"author":{"gitId":"newway1814"},"content":"    [#140](https://github.com/AY2324S1-CS2103T-W15-1/tp/pull/140),","lastModifiedDate":"2023-11-09"},{"lineNumber":84,"author":{"gitId":"newway1814"},"content":"    [#143](https://github.com/AY2324S1-CS2103T-W15-1/tp/pull/143),","lastModifiedDate":"2023-11-09"},{"lineNumber":85,"author":{"gitId":"newway1814"},"content":"    [#144](https://github.com/AY2324S1-CS2103T-W15-1/tp/pull/144),","lastModifiedDate":"2023-11-09"},{"lineNumber":86,"author":{"gitId":"newway1814"},"content":"    [#146](https://github.com/AY2324S1-CS2103T-W15-1/tp/pull/146),","lastModifiedDate":"2023-11-09"},{"lineNumber":87,"author":{"gitId":"newway1814"},"content":"    [#149](https://github.com/AY2324S1-CS2103T-W15-1/tp/pull/149)","lastModifiedDate":"2023-11-09"},{"lineNumber":88,"author":{"gitId":"newway1814"},"content":"  * Effectively reviewed 20+ PR\u0027s.","lastModifiedDate":"2023-11-09"},{"lineNumber":89,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":90,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":91,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":92,"author":{"gitId":"newway1814"},"content":"### Contributions beyond the project team (community)","lastModifiedDate":"2023-11-09"},{"lineNumber":93,"author":{"gitId":"newway1814"},"content":"- Evidence of helping others","lastModifiedDate":"2023-11-09"},{"lineNumber":94,"author":{"gitId":"newway1814"},"content":"  - Successfully reported 9 bugs in another team\u0027s project [#1](https://github.com/newway1814/ped/issues/1),","lastModifiedDate":"2023-11-09"},{"lineNumber":95,"author":{"gitId":"newway1814"},"content":"    [#2](https://github.com/newway1814/ped/issues/2), [#3](https://github.com/newway1814/ped/issues/3),","lastModifiedDate":"2023-11-09"},{"lineNumber":96,"author":{"gitId":"newway1814"},"content":"  [#4](https://github.com/newway1814/ped/issues/4), [#5](https://github.com/newway1814/ped/issues/5), ","lastModifiedDate":"2023-11-09"},{"lineNumber":97,"author":{"gitId":"newway1814"},"content":"  [#6](https://github.com/newway1814/ped/issues/6), [#7](https://github.com/newway1814/ped/issues/7),","lastModifiedDate":"2023-11-09"},{"lineNumber":98,"author":{"gitId":"newway1814"},"content":"  [#8](https://github.com/newway1814/ped/issues/8), [#9](https://github.com/newway1814/ped/issues/9)","lastModifiedDate":"2023-11-09"},{"lineNumber":99,"author":{"gitId":"newway1814"},"content":"- Evidence of my participation in forum discussions","lastModifiedDate":"2023-11-09"},{"lineNumber":100,"author":{"gitId":"newway1814"},"content":"  - Here are some issues from the forum: [#187](https://github.com/nus-cs2103-AY2324S1/forum/issues/187), [#200](https://github.com/nus-cs2103-AY2324S1/forum/issues/200),","lastModifiedDate":"2023-11-09"},{"lineNumber":101,"author":{"gitId":"newway1814"},"content":"    [#267](https://github.com/nus-cs2103-AY2324S1/forum/issues/267)","lastModifiedDate":"2023-11-09"},{"lineNumber":102,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":103,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-02"}],"authorContributionMap":{"newway1814":103}},{"path":"docs/team/yarnmengnus.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2023-10-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2023-10-02"},{"lineNumber":3,"author":{"gitId":"yarnmengnus"},"content":"title: Yarn Meng\u0027s Project Portfolio Page","lastModifiedDate":"2023-10-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2023-10-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":6,"author":{"gitId":"yarnmengnus"},"content":"### Project: ProfPlan","lastModifiedDate":"2023-10-02"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":8,"author":{"gitId":"yarnmengnus"},"content":"ProfPlan is a desktop productivity application written in Java, used for task management and organization. The user","lastModifiedDate":"2023-10-02"},{"lineNumber":9,"author":{"gitId":"yarnmengnus"},"content":"interacts with it using a CLI, and it has a GUI created with JavaFX.","lastModifiedDate":"2023-10-02"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-10-02"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":13,"author":{"gitId":"-"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2023-10-02"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2023-10-02"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2023-10-02"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2023-10-02"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2023-10-02"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2023-10-02"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":21,"author":{"gitId":"yarnmengnus"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2324s1.github.io/tp-dashboard/?search\u003dyarnmengnus\u0026breakdown\u003dtrue)","lastModifiedDate":"2023-10-02"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":23,"author":{"gitId":"-"},"content":"* **Project management**:","lastModifiedDate":"2023-10-02"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2023-10-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":26,"author":{"gitId":"-"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-10-02"},{"lineNumber":27,"author":{"gitId":"-"},"content":"  * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2023-10-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"  * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2023-10-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"* **Documentation**:","lastModifiedDate":"2023-10-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  * User Guide:","lastModifiedDate":"2023-10-02"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2023-10-02"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2023-10-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  * Developer Guide:","lastModifiedDate":"2023-10-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    * Added implementation details of the `delete` feature.","lastModifiedDate":"2023-10-02"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":37,"author":{"gitId":"-"},"content":"* **Community**:","lastModifiedDate":"2023-10-02"},{"lineNumber":38,"author":{"gitId":"-"},"content":"  * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2023-10-02"},{"lineNumber":39,"author":{"gitId":"-"},"content":"  * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2023-10-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"  * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2023-10-02"},{"lineNumber":41,"author":{"gitId":"-"},"content":"  * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2023-10-02"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":43,"author":{"gitId":"-"},"content":"* **Tools**:","lastModifiedDate":"2023-10-02"},{"lineNumber":44,"author":{"gitId":"-"},"content":"  * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2023-10-02"},{"lineNumber":45,"author":{"gitId":"-"},"content":"  * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2023-10-02"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2023-10-02"}],"authorContributionMap":{"yarnmengnus":5,"-":42}},{"path":"docs/tutorials/AddRemark.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Adding a command\"","lastModifiedDate":"2020-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Let\u0027s walk you through the implementation of a new command — `remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":8,"author":{"gitId":"eyelessrhyme7"},"content":"This command allows users of the AddressBook application to add optional remarks to people in their task list and edit it if required. The command should have the following format:","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"`remark INDEX r/REMARK` (e.g., `remark 2 r/Likes baseball`)","lastModifiedDate":"2020-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"We’ll assume that you have already set up the development environment as outlined in the Developer’s Guide.","lastModifiedDate":"2020-07-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Create a new `remark` command","lastModifiedDate":"2020-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Looking in the `logic.command` package, you will notice that each existing command have their own class. All the commands inherit from the abstract class `Command` which means that they must override `execute()`. Each `Command` returns an instance of `CommandResult` upon success and `CommandResult#feedbackToUser` is printed to the `ResultDisplay`.","lastModifiedDate":"2020-07-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Let’s start by creating a new `RemarkCommand` class in the `src/main/java/seedu/address/logic/command` directory.","lastModifiedDate":"2020-07-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"For now, let’s keep `RemarkCommand` as simple as possible and print some output. We accomplish that by returning a `CommandResult` with an accompanying message.","lastModifiedDate":"2020-07-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2020-07-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":28,"author":{"gitId":"kiatkat"},"content":"import model.profplan.Model;","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":31,"author":{"gitId":"eyelessrhyme7"},"content":" * Changes the remark of an existing task in the task list.","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"remark\";","lastModifiedDate":"2020-07-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2020-07-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return new CommandResult(\"Hello from remark\");","lastModifiedDate":"2020-07-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"### Hook `RemarkCommand` into the application","lastModifiedDate":"2020-07-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":46,"author":{"gitId":"newway1814"},"content":"Now that we have our `RemarkCommand` ready to be executed, we need to update `ProfPlanParser#parseCommand()` to recognize the `remark` keyword. Add the new command to the `switch` block by creating a new `case` that returns a new instance of `RemarkCommand`.","lastModifiedDate":"2023-10-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"You can refer to the changes in this [diff](https://github.com/se-edu/addressbook-level3/commit/35eb7286f18a029d39cb7a29df8f172a001e4fd8#diff-399c284cb892c20b7c04a69116fcff6ccc0666c5230a1db8e4a9145def8fa4ee).","lastModifiedDate":"2022-01-02"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"### Run the application","lastModifiedDate":"2020-07-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"Run `Main#main` and try out your new `RemarkCommand`. If everything went well, you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"![Output displayed](../images/add-remark/RemarkHello.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"## Change `RemarkCommand` to throw an exception","lastModifiedDate":"2020-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"While we have successfully printed a message to `ResultDisplay`, the command does not do what it is supposed to do. Let’s change the command to throw a `CommandException` to accurately reflect that our command is still a work in progress.","lastModifiedDate":"2020-12-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"![The relationship between RemarkCommand and Command](../images/add-remark/RemarkCommandClass.png)","lastModifiedDate":"2023-09-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"Following the convention in other commands, we add relevant messages as constants and use them.","lastModifiedDate":"2020-07-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-08-01"},{"lineNumber":68,"author":{"gitId":"newway1814"},"content":"            + \": Edits the remark of the task identified \"","lastModifiedDate":"2023-10-16"},{"lineNumber":69,"author":{"gitId":"newway1814"},"content":"            + \"by the index number used in the last task listing. \"","lastModifiedDate":"2023-10-16"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            + \"Existing remark will be overwritten by the input.\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2020-07-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            + \"r/ [REMARK]\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2020-07-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            + \"r/ Likes to swim.\";","lastModifiedDate":"2020-07-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_IMPLEMENTED_YET \u003d","lastModifiedDate":"2021-08-01"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            \"Remark command not implemented yet\";","lastModifiedDate":"2021-08-01"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        throw new CommandException(MESSAGE_NOT_IMPLEMENTED_YET);","lastModifiedDate":"2020-07-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"## Enhancing `RemarkCommand`","lastModifiedDate":"2020-07-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` to parse input from the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"### Make the command accept parameters","lastModifiedDate":"2020-07-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"We start by modifying the constructor of `RemarkCommand` to accept an `Index` and a `String`. While we are at it, let’s change the error message to echo the values. While this is not a replacement for tests, it is an obvious way to tell if our code is functioning as intended.","lastModifiedDate":"2020-07-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":94,"author":{"gitId":"kiatkat"},"content":"import static util.commons.profplan.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-10-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ARGUMENTS \u003d \"Index: %1$d, Remark: %2$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private final String remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":104,"author":{"gitId":"newway1814"},"content":"     * @param index of the task in the filtered task list to edit the remark","lastModifiedDate":"2023-10-16"},{"lineNumber":105,"author":{"gitId":"newway1814"},"content":"     * @param remark of the task to be updated to","lastModifiedDate":"2023-10-16"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public RemarkCommand(Index index, String remark) {","lastModifiedDate":"2020-07-29"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        requireAllNonNull(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2020-07-29"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        throw new CommandException(","lastModifiedDate":"2021-08-01"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_ARGUMENTS, index.getOneBased(), remark));","lastModifiedDate":"2021-08-01"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2020-07-29"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2020-07-29"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2020-07-29"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2020-07-29"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        if (!(other instanceof RemarkCommand)) {","lastModifiedDate":"2020-07-29"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2020-07-29"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        RemarkCommand e \u003d (RemarkCommand) other;","lastModifiedDate":"2020-07-29"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2020-07-29"},{"lineNumber":132,"author":{"gitId":"-"},"content":"                \u0026\u0026 remark.equals(e.remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":135,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":137,"author":{"gitId":"-"},"content":"Your code should look something like [this](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-a8e35af8f9c251525063fae36c9852922a7e7195763018eacec60f3a4d87c594) after you are done.","lastModifiedDate":"2022-01-02"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":139,"author":{"gitId":"-"},"content":"### Parse user input","lastModifiedDate":"2020-07-29"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":141,"author":{"gitId":"-"},"content":"Now let’s move on to writing a parser that will extract the index and remark from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":143,"author":{"gitId":"-"},"content":"Create a `RemarkCommandParser` class in the `seedu.address.logic.parser` package. The class must extend the `Parser` interface.","lastModifiedDate":"2020-07-29"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":145,"author":{"gitId":"-"},"content":"![The relationship between Parser and RemarkCommandParser](../images/add-remark/RemarkCommandParserClass.png)","lastModifiedDate":"2023-09-12"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":147,"author":{"gitId":"-"},"content":"Thankfully, `ArgumentTokenizer#tokenize()` makes it trivial to parse user input. Let’s take a look at the JavaDoc provided for the function to understand what it does.","lastModifiedDate":"2020-07-29"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":149,"author":{"gitId":"-"},"content":"**`ArgumentTokenizer.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":151,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":152,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":153,"author":{"gitId":"-"},"content":" * Tokenizes an arguments string and returns an {@code ArgumentMultimap}","lastModifiedDate":"2020-07-29"},{"lineNumber":154,"author":{"gitId":"-"},"content":" * object that maps prefixes to their respective argument values. Only the","lastModifiedDate":"2020-07-29"},{"lineNumber":155,"author":{"gitId":"-"},"content":" * given prefixes will be recognized in the arguments string.","lastModifiedDate":"2020-07-29"},{"lineNumber":156,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2020-07-29"},{"lineNumber":157,"author":{"gitId":"-"},"content":" * @param argsString Arguments string of the form:","lastModifiedDate":"2020-07-29"},{"lineNumber":158,"author":{"gitId":"-"},"content":" * {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2020-07-29"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2020-07-29"},{"lineNumber":160,"author":{"gitId":"-"},"content":" * @return           ArgumentMultimap object that maps prefixes to their","lastModifiedDate":"2020-07-29"},{"lineNumber":161,"author":{"gitId":"-"},"content":" * arguments","lastModifiedDate":"2020-07-29"},{"lineNumber":162,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":163,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":165,"author":{"gitId":"-"},"content":"We can tell `ArgumentTokenizer#tokenize()` to look out for our new prefix `r/` and it will return us an instance of `ArgumentMultimap`. Now let’s find out what we need to do in order to obtain the Index and String that we need. Let’s look through `ArgumentMultimap` :","lastModifiedDate":"2020-07-29"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":167,"author":{"gitId":"-"},"content":"**`ArgumentMultimap.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":169,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":170,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":171,"author":{"gitId":"-"},"content":" * Returns the last value of {@code prefix}.","lastModifiedDate":"2020-07-29"},{"lineNumber":172,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":173,"author":{"gitId":"-"},"content":"public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2020-07-29"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2020-07-29"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    return values.isEmpty() ? Optional.empty() :","lastModifiedDate":"2020-07-29"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2020-07-29"},{"lineNumber":177,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":178,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":180,"author":{"gitId":"-"},"content":"This appears to be what we need to get a String of the remark. But what about the Index? Let\u0027s take a quick peek at existing `Command` that uses an index to see how it is done.","lastModifiedDate":"2020-07-29"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":182,"author":{"gitId":"-"},"content":"**`DeleteCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":184,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":185,"author":{"gitId":"-"},"content":"Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":186,"author":{"gitId":"-"},"content":"return new DeleteCommand(index);","lastModifiedDate":"2020-07-29"},{"lineNumber":187,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":189,"author":{"gitId":"-"},"content":"There appears to be another utility class that obtains an `Index` from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":191,"author":{"gitId":"-"},"content":"Now that we have the know-how to extract the data that we need from the user’s input, we can parse the user command and create a new instance of `RemarkCommand`, as given below.","lastModifiedDate":"2020-07-29"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":193,"author":{"gitId":"-"},"content":"**`RemarkCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":195,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":196,"author":{"gitId":"-"},"content":"public RemarkCommand parse(String args) throws ParseException {","lastModifiedDate":"2020-07-29"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    requireNonNull(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2020-07-29"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        PREFIX_REMARK);","lastModifiedDate":"2020-07-29"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    try {","lastModifiedDate":"2020-07-29"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2020-07-29"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    } catch (IllegalValueException ive) {","lastModifiedDate":"2020-07-29"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2020-07-29"},{"lineNumber":206,"author":{"gitId":"-"},"content":"            RemarkCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2020-07-29"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    String remark \u003d argMultimap.getValue(PREFIX_REMARK).orElse(\"\");","lastModifiedDate":"2020-07-29"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    return new RemarkCommand(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":212,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":213,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":215,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":217,"author":{"gitId":"newway1814"},"content":":information_source: Don’t forget to update `ProfPlanParser` to use our new `RemarkCommandParser`!","lastModifiedDate":"2023-10-26"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":219,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":221,"author":{"gitId":"-"},"content":"If you are stuck, check out the sample","lastModifiedDate":"2020-07-29"},{"lineNumber":222,"author":{"gitId":"-"},"content":"[here](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-8bf239e8e9529369b577701303ddd96af93178b4ed6735f91c2d8488b20c6b4a).","lastModifiedDate":"2022-01-02"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":224,"author":{"gitId":"-"},"content":"## Add `Remark` to the model","lastModifiedDate":"2020-07-29"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":226,"author":{"gitId":"newway1814"},"content":"Now that we have all the information that we need, let’s lay the groundwork for propagating the remarks added into the in-memory storage of task data. We achieve that by working with the `Task` model. Each field in a Task is implemented as a separate class (e.g. a `Name` object represents the task’s name). That means we should add a `Remark` class so that we can use a `Remark` object to represent a remark given to a task.","lastModifiedDate":"2023-10-16"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":228,"author":{"gitId":"-"},"content":"### Add a new `Remark` class","lastModifiedDate":"2020-07-29"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":230,"author":{"gitId":"newway1814"},"content":"Create a new `Remark` in `seedu.address.model.task`. Since a `Remark` is a field that is similar to `Address`, we can reuse a significant bit of code.","lastModifiedDate":"2023-10-16"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":232,"author":{"gitId":"-"},"content":"A copy-paste and search-replace later, you should have something like [this](https://github.com/se-edu/addressbook-level3/commit/4516e099699baa9e2d51801bd26f016d812dedcc#diff-41bb13c581e280c686198251ad6cc337cd5e27032772f06ed9bf7f1440995ece). Note how `Remark` has no constrains and thus does not require input","lastModifiedDate":"2022-01-02"},{"lineNumber":233,"author":{"gitId":"-"},"content":"validation.","lastModifiedDate":"2020-07-29"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":235,"author":{"gitId":"-"},"content":"### Make use of `Remark`","lastModifiedDate":"2020-07-29"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":237,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` and `RemarkCommandParser` to use the new `Remark` class instead of plain `String`. These should be relatively simple changes.","lastModifiedDate":"2020-07-29"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":239,"author":{"gitId":"-"},"content":"## Add a placeholder element for remark to the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":241,"author":{"gitId":"newway1814"},"content":"Without getting too deep into `fxml`, let’s go on a 5 minute adventure to get some placeholder text to show up for each task.","lastModifiedDate":"2023-10-16"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":243,"author":{"gitId":"newway1814"},"content":"Simply add the following to [`ui.profplan.TaskCard`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-639834f1e05afe2276a86372adf0fe5f69314642c2d93cfa543d614ce5a76688).","lastModifiedDate":"2023-10-16"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":245,"author":{"gitId":"newway1814"},"content":"**`TaskCard.java`:**","lastModifiedDate":"2023-10-16"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":247,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":248,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-07-29"},{"lineNumber":249,"author":{"gitId":"-"},"content":"private Label remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":250,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":253,"author":{"gitId":"-"},"content":"`@FXML` is an annotation that marks a private or protected field and makes it accessible to FXML. It might sound like Greek to you right now, don’t worry — we will get back to it later.","lastModifiedDate":"2020-07-29"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":255,"author":{"gitId":"newway1814"},"content":"Then insert the following into [`main/resources/view/TaskListCard.fxml`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-d44c4f51c24f6253c277a2bb9bc440b8064d9c15ad7cb7ceda280bca032efce9).","lastModifiedDate":"2023-10-16"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":257,"author":{"gitId":"newway1814"},"content":"**`TaskListCard.fxml`:**","lastModifiedDate":"2023-10-16"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":259,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-07-29"},{"lineNumber":260,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"remark\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$remark\" /\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":261,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":263,"author":{"gitId":"-"},"content":"That’s it! Fire up the application again and you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":265,"author":{"gitId":"-"},"content":"![$remark shows up in each entry](../images/add-remark/$Remark.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":267,"author":{"gitId":"newway1814"},"content":"## Modify `Task` to support a `Remark` field","lastModifiedDate":"2023-10-16"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":269,"author":{"gitId":"newway1814"},"content":"Since `TaskCard` displays data from a `Task`, we need to update `Task` to get our `Remark` displayed!","lastModifiedDate":"2023-10-16"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":271,"author":{"gitId":"newway1814"},"content":"### Modify `Task`","lastModifiedDate":"2023-10-16"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":273,"author":{"gitId":"newway1814"},"content":"We change the constructor of `Task` to take a `Remark`. We will also need to define new fields and accessors accordingly to store our new addition.","lastModifiedDate":"2023-10-16"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":275,"author":{"gitId":"newway1814"},"content":"### Update other usages of `Task`","lastModifiedDate":"2023-10-16"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":277,"author":{"gitId":"newway1814"},"content":"Unfortunately, a change to `Task` will cause other commands to break, you will have to modify these commands to use the updated `Task`!","lastModifiedDate":"2023-10-16"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":279,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":281,"author":{"gitId":"newway1814"},"content":":bulb: Use the `Find Usages` feature in IntelliJ IDEA on the `Task` class to find these commands.","lastModifiedDate":"2023-10-16"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":283,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":285,"author":{"gitId":"-"},"content":"Refer to [this commit](https://github.com/se-edu/addressbook-level3/commit/ce998c37e65b92d35c91d28c7822cd139c2c0a5c) and check that you have got everything in order!","lastModifiedDate":"2020-07-29"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":288,"author":{"gitId":"-"},"content":"## Updating Storage","lastModifiedDate":"2020-07-29"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":290,"author":{"gitId":"newway1814"},"content":"AddressBook stores data by serializing `JsonAdaptedTask` into `json` with the help of an external library — Jackson. Let’s update `JsonAdaptedTask` to work with our new `Task`!","lastModifiedDate":"2023-10-16"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":292,"author":{"gitId":"-"},"content":"While the changes to code may be minimal, the test data will have to be updated as well.","lastModifiedDate":"2020-07-29"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":294,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":296,"author":{"gitId":"eyelessrhyme7"},"content":":exclamation: You must delete AddressBook’s storage file located at `/data/addressbook.json` before running it! Not doing so will cause AddressBook to default to an empty task list!","lastModifiedDate":"2023-10-17"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":298,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":300,"author":{"gitId":"-"},"content":"Check out [this commit](https://github.com/se-edu/addressbook-level3/commit/556cbd0e03ff224d7a68afba171ad2eb0ce56bbf)","lastModifiedDate":"2020-07-29"},{"lineNumber":301,"author":{"gitId":"-"},"content":"to see what the changes entail.","lastModifiedDate":"2020-07-29"},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":303,"author":{"gitId":"-"},"content":"## Finalizing the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":305,"author":{"gitId":"newway1814"},"content":"Now that we have finalized the `Task` class and its dependencies, we can now bind the `Remark` field to the UI.","lastModifiedDate":"2023-10-16"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":307,"author":{"gitId":"-"},"content":"Just add [this one line of code!](https://github.com/se-edu/addressbook-level3/commit/5b98fee11b6b3f5749b6b943c4f3bd3aa049b692)","lastModifiedDate":"2020-07-29"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":309,"author":{"gitId":"newway1814"},"content":"**`TaskCard.java`:**","lastModifiedDate":"2023-10-16"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":311,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":312,"author":{"gitId":"newway1814"},"content":"public TaskCard(Task task, int displayedIndex) {","lastModifiedDate":"2023-10-16"},{"lineNumber":313,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":314,"author":{"gitId":"newway1814"},"content":"    remark.setText(task.getRemark().value);","lastModifiedDate":"2023-10-16"},{"lineNumber":315,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":316,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":317,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":318,"author":{"gitId":"-"},"content":"![The remark label is bound properly!](../images/add-remark/RemarkBound.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":320,"author":{"gitId":"-"},"content":"## Putting everything together","lastModifiedDate":"2020-07-29"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":322,"author":{"gitId":"-"},"content":"After the previous step, we notice a peculiar regression — we went from displaying something to nothing at all. However, this is expected behavior as we are yet to update the `RemarkCommand` to make use of the code we\u0027ve been adding in the last few steps.","lastModifiedDate":"2020-07-29"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":324,"author":{"gitId":"-"},"content":"### Update `RemarkCommand` and `RemarkCommandParser`","lastModifiedDate":"2020-07-29"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":326,"author":{"gitId":"newway1814"},"content":"In this last step, we modify `RemarkCommand#execute()` to change the `Remark` of a `Task`. Since all fields in a `Task` are immutable, we create a new instance of a `Task` with the values that we want and","lastModifiedDate":"2023-10-16"},{"lineNumber":327,"author":{"gitId":"newway1814"},"content":"save it with `Model#setTask()`.","lastModifiedDate":"2023-10-16"},{"lineNumber":328,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":329,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":331,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":332,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":333,"author":{"gitId":"newway1814"},"content":"    public static final String MESSAGE_ADD_REMARK_SUCCESS \u003d \"Added remark to Task: %1$s\";","lastModifiedDate":"2023-10-16"},{"lineNumber":334,"author":{"gitId":"newway1814"},"content":"    public static final String MESSAGE_DELETE_REMARK_SUCCESS \u003d \"Removed remark from Task: %1$s\";","lastModifiedDate":"2023-10-16"},{"lineNumber":335,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":337,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":338,"author":{"gitId":"newway1814"},"content":"        List\u003cTask\u003e lastShownList \u003d model.getFilteredTaskList();","lastModifiedDate":"2023-10-16"},{"lineNumber":339,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":340,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2020-07-29"},{"lineNumber":341,"author":{"gitId":"newway1814"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-16"},{"lineNumber":342,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":343,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":344,"author":{"gitId":"newway1814"},"content":"        Task taskToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2023-10-16"},{"lineNumber":345,"author":{"gitId":"newway1814"},"content":"        Task editedTask \u003d new Task(","lastModifiedDate":"2023-10-16"},{"lineNumber":346,"author":{"gitId":"eyelessrhyme7"},"content":"                taskToEdit.getName(), taskToEdit.get(), taskToEdit.getEmail(),","lastModifiedDate":"2023-10-17"},{"lineNumber":347,"author":{"gitId":"newway1814"},"content":"                taskToEdit.getAddress(), remark, taskToEdit.getTags());","lastModifiedDate":"2023-10-16"},{"lineNumber":348,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":349,"author":{"gitId":"newway1814"},"content":"        model.setTask(taskToEdit, editedTask);","lastModifiedDate":"2023-10-16"},{"lineNumber":350,"author":{"gitId":"newway1814"},"content":"        model.updateFilteredTaskList(PREDICATE_SHOW_ALL_TASKS);","lastModifiedDate":"2023-10-16"},{"lineNumber":351,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":352,"author":{"gitId":"newway1814"},"content":"        return new CommandResult(generateSuccessMessage(editedTask));","lastModifiedDate":"2023-10-16"},{"lineNumber":353,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":354,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":355,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":356,"author":{"gitId":"-"},"content":"     * Generates a command execution success message based on whether","lastModifiedDate":"2021-08-01"},{"lineNumber":357,"author":{"gitId":"-"},"content":"     * the remark is added to or removed from","lastModifiedDate":"2021-08-01"},{"lineNumber":358,"author":{"gitId":"newway1814"},"content":"     * {@code taskToEdit}.","lastModifiedDate":"2023-10-16"},{"lineNumber":359,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":360,"author":{"gitId":"newway1814"},"content":"    private String generateSuccessMessage(Task taskToEdit) {","lastModifiedDate":"2023-10-16"},{"lineNumber":361,"author":{"gitId":"-"},"content":"        String message \u003d !remark.value.isEmpty() ? MESSAGE_ADD_REMARK_SUCCESS : MESSAGE_DELETE_REMARK_SUCCESS;","lastModifiedDate":"2020-07-29"},{"lineNumber":362,"author":{"gitId":"newway1814"},"content":"        return String.format(message, taskToEdit);","lastModifiedDate":"2023-10-16"},{"lineNumber":363,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":364,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":365,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":366,"author":{"gitId":"-"},"content":"![Congratulations!](../images/add-remark/RemarkComplete.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":368,"author":{"gitId":"-"},"content":"## Writing tests","lastModifiedDate":"2020-07-29"},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":370,"author":{"gitId":"-"},"content":"Tests are crucial to ensuring that bugs don’t slip into the codebase unnoticed. This is especially true for large code bases where a change might lead to unintended behavior.","lastModifiedDate":"2020-07-29"},{"lineNumber":371,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":372,"author":{"gitId":"-"},"content":"Let’s verify the correctness of our code by writing some tests!","lastModifiedDate":"2020-07-29"},{"lineNumber":373,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":374,"author":{"gitId":"-"},"content":"Of course you can simply add the test cases manually, like you\u0027ve been doing all along this tutorial. The result would be like the test cases in [here](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-ff58f7c10338b34f76645df49b71ecb2bafaf7611b20e7ff59ebc98475538a01). Alternatively, you can get the help of IntelliJ to generate the skeletons of the test cases, as explained in the next section.","lastModifiedDate":"2022-01-02"},{"lineNumber":375,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":376,"author":{"gitId":"-"},"content":"### Automatically generating tests","lastModifiedDate":"2020-07-29"},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":378,"author":{"gitId":"-"},"content":"The goal is to write effective and efficient tests to ensure that `RemarkCommand#execute()` behaves as expected.","lastModifiedDate":"2020-07-29"},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":380,"author":{"gitId":"-"},"content":"The convention for test names is `methodName_testScenario_expectedResult`. An example would be","lastModifiedDate":"2020-07-29"},{"lineNumber":381,"author":{"gitId":"-"},"content":"`execute_filteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":382,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":383,"author":{"gitId":"-"},"content":"Let’s create a test for `RemarkCommand#execute()` to test that adding a remark works. On `IntelliJ IDEA` you can bring up the context menu and choose to `Go To` \\\u003e `Test` or use the appropriate keyboard shortcut.","lastModifiedDate":"2020-07-29"},{"lineNumber":384,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":385,"author":{"gitId":"-"},"content":"![Using the context menu to jump to tests](../images/add-remark/ContextMenu.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":386,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":387,"author":{"gitId":"-"},"content":"Then, create a test for the `execute` method.","lastModifiedDate":"2020-07-29"},{"lineNumber":388,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":389,"author":{"gitId":"-"},"content":"![Creating a test for `execute`.](../images/add-remark/CreateTest.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":391,"author":{"gitId":"-"},"content":"Following convention, let’s change the name of the generated method to `execute_addRemarkUnfilteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":392,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":393,"author":{"gitId":"-"},"content":"Let’s use the utility functions provided in `CommandTestUtil`. The functions ensure that commands produce the expected `CommandResult` and output the correct message. In this case, `CommandTestUtil#assertCommandSuccess` is the best fit as we are testing that a `RemarkCommand` will successfully add a `Remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":394,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":395,"author":{"gitId":"-"},"content":"You should end up with a test that looks something like [this](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-ff58f7c10338b34f76645df49b71ecb2bafaf7611b20e7ff59ebc98475538a01R36-R49).","lastModifiedDate":"2022-01-02"},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":397,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-07-29"},{"lineNumber":398,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":399,"author":{"gitId":"-"},"content":"This concludes the tutorial for adding a new `Command` to AddressBook.","lastModifiedDate":"2020-07-29"}],"authorContributionMap":{"kiatkat":2,"eyelessrhyme7":4,"-":353,"newway1814":40}},{"path":"docs/tutorials/RemovingFields.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Removing Fields\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e —  Antoine de Saint-Exupery","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"When working on an existing code base, you will most likely find that some features that are no longer necessary.","lastModifiedDate":"2021-08-01"},{"lineNumber":11,"author":{"gitId":"newway1814"},"content":"This tutorial aims to give you some practice on such a code \u0027removal\u0027 activity by removing the `address` field from `Task` class.","lastModifiedDate":"2023-10-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-success\"\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"**If you have done the [Add `remark` command tutorial](AddRemark.html)  already**, you should know where the code had to be updated to add the field `remark`. From that experience, you can deduce where the code needs to be changed to _remove_ that field too. The removing of the `address` field can be done similarly.","lastModifiedDate":"2021-08-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"However, if you have no such prior knowledge, removing a field can take a quite a bit of detective work. This tutorial takes you through that process. **At least have a read even if you don\u0027t actually do the steps yourself.**","lastModifiedDate":"2021-08-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"## Safely deleting `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"IntelliJ IDEA provides a refactoring tool that can identify *most* parts of a removal easily. Let’s try to use it as much as we can.","lastModifiedDate":"2021-08-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Assisted refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"newway1814"},"content":"The `address` field in `Task` is actually an instance of the `task.model.profplan.Address` class. Since removing the `Address` class will break the application, we start by identifying `Address`\u0027s usages. This allows us to see code that depends on `Address` to function properly and edit them on a case-by-case basis. Right-click the `Address` class and select `Refactor` \\\u003e `Safe Delete` through the menu.","lastModifiedDate":"2023-10-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"* :bulb: To make things simpler, you can unselect the options `Search in comments and strings` and `Search for text occurrences`","lastModifiedDate":"2021-08-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"![Usages detected](../images/remove/UnsafeDelete.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"Choose to `View Usages` and you should be presented with a list of `Safe Delete Conflicts`. These conflicts describe locations in which the `Address` class is used.","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"![List of conflicts](../images/remove/SafeDeleteConflicts.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"newway1814"},"content":"Remove usages of `Address` by performing `Safe Delete`s on each entry i.e., double-click on the entry (which takes you to the code in concern, right-click on that entity, and choose `Refactor` -\u003e `Safe delete` as before). You will need to exercise discretion when removing usages of `Address`. Functions like `ParserUtil#parseAddress()` can be safely removed but its usages must be removed as well. Other usages like in `EditTaskDescriptor` may require more careful inspection.","lastModifiedDate":"2023-10-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"newway1814"},"content":"Let’s try removing references to `Address` in `EditTaskDescriptor`.","lastModifiedDate":"2023-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"newway1814"},"content":"1. Safe delete the field `address` in `EditTaskDescriptor`.","lastModifiedDate":"2023-10-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"1. Select `Yes` when prompted to remove getters and setters.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"1. Select `View Usages` again.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"   ![UnsafeDeleteOnField](../images/remove/UnsafeDeleteOnField.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"1. Remove the usages of `address` and select `Do refactor` when you are done.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"newway1814"},"content":"   :bulb: **Tip:** Removing usages may result in errors. Exercise discretion and fix them. For example, removing the `address` field from the `Task` class will require you to modify its constructor.","lastModifiedDate":"2023-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"1. Repeat the steps for the remaining usages of `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"After you are done, verify that the application still works by compiling and running it again.","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"### Manual refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"Unfortunately, there are usages of `Address` that IntelliJ IDEA cannot identify. You can find them by searching for instances of the word `address` in your code (`Edit` \\\u003e `Find` \\\u003e `Find in path`).","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"newway1814"},"content":"Places of interest to look out for would be resources used by the application. `main/resources` contains images and `fxml` files used by the application and `test/resources` contains test data. For example, there is a `$address` in each `TaskCard` that has not been removed nor identified.","lastModifiedDate":"2023-10-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"![$address](../images/remove/$address.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"newway1814"},"content":"A quick look at the `TaskCard` class and its `fxml` file quickly reveals why it slipped past the automated refactoring.","lastModifiedDate":"2023-10-16"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"newway1814"},"content":"**`TaskCard.java`**","lastModifiedDate":"2023-10-16"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"private Label address;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"newway1814"},"content":"**`TaskCard.fxml`**","lastModifiedDate":"2023-10-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"eyelessrhyme7"},"content":"\u003cLabel fx:id\u003d\"\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$priority\" /\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":86,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"After removing the `Label`, we can proceed to formally test our code. If everything went well, you should have most of your tests pass. Fix any remaining errors until the tests all pass.","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"## Tidying up","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"At this point, your application is working as intended and all your tests are passing. What’s left to do is to clean up references to `Address` in test data and documentation.","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"In `src/test/data/`, data meant for testing purposes are stored. While keeping the `address` field in the json files does not cause the tests to fail, it is not good practice to let cruft from old features accumulate.","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"newway1814"},"content":"**`invalidTaskAddressBook.json`:**","lastModifiedDate":"2023-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"```json","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"newway1814"},"content":"  \"tasks\": [ {","lastModifiedDate":"2023-10-16"},{"lineNumber":104,"author":{"gitId":"newway1814"},"content":"    \"name\": \"Task with invalid name field: Ha!ns Mu@ster\",","lastModifiedDate":"2023-10-16"},{"lineNumber":105,"author":{"gitId":"eyelessrhyme7"},"content":"    \"priority\": \"9482424\",","lastModifiedDate":"2023-10-17"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    \"email\": \"hans@example.com\",","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    \"address\": \"4th street\"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"You can go through each individual `json` file and manually remove the `address` field.","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"eyelessrhyme7":2,"-":97,"newway1814":13}},{"path":"docs/tutorials/TracingCode.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Tracing code\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Indeed, the ratio of time spent reading versus writing is well over 10 to 1. We are constantly reading old code as part of the effort to write new code. …​\\[Therefore,\\] making it easy to read makes it easier to write.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e —  Robert C. Martin Clean Code: A Handbook of Agile Software Craftsmanship","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"When trying to understand an unfamiliar code base, one common strategy used is to trace some representative execution path through the code base. One easy way to trace an execution path is to use a debugger to step through the code. In this tutorial, you will be using the IntelliJ IDEA’s debugger to trace the execution path of a specific user command.","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Before we start","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Before we jump into the code, it is useful to get an idea of the overall structure and the high-level behavior of the application. This is provided in the \u0027Architecture\u0027 section of the developer guide. In particular, the architecture diagram (reproduced below), tells us that the App consists of several components.","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"![ArchitectureDiagram](../images/ArchitectureDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"It also has a sequence diagram (reproduced below) that tells us how a command propagates through the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ArchitectureSequenceDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"Note how the diagram shows only the execution flows _between_ the main components. That is, it does not show details of the execution path *inside* each component. By hiding those details, the diagram aims to inform the reader about the overall execution path of a command without overwhelming the reader with too much details. In this tutorial, you aim to find those omitted details so that you get a more in-depth understanding of how the code works.","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Before we proceed, ensure that you have done the following:","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"1. Read the [*Architecture* section of the DG](../DeveloperGuide.md#architecture)","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"1. Set up the project in Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"1. Learn basic debugging features of Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"   * If you are using a different IDE, we\u0027ll leave it to you to figure out the equivalent feature to use in your IDE.","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"   * If you are not using an IDE, we\u0027ll let you figure out how to achieve the same using your coding toolchain.","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"## Setting a breakpoint","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"As you know, the first step of debugging is to put in a breakpoint where you want the debugger to pause the execution. For example, if you are trying to understand how the App starts up, you would put a breakpoint in the first statement of the `main` method.","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"In our case, we would want to begin the tracing at the very point where the App start processing user input (i.e., somewhere in the UI component), and then trace through how the execution proceeds through the UI component. However, the execution path through a GUI is often somewhat obscure due to various *event-driven mechanisms* used by GUI frameworks, which happens to be the case here too. Therefore, let us put the breakpoint where the `UI` transfers control to the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ArchitectureSequenceDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":42,"author":{"gitId":"kiatkat"},"content":"According to the sequence diagram you saw earlier (and repeated above for reference), the `UI` component yields control to the `Logic` component through a method named `execute`. Searching through the code base for an `execute()` method that belongs to the `Logic` component yields a promising candidate in `logic.profplan.Logic`.","lastModifiedDate":"2023-10-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":44,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/tracing/searchResultsForExecuteMethod.png\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":48,"author":{"gitId":"-"},"content":":bulb: **Intellij Tip:** The [\u0027**Search Everywhere**\u0027 feature](https://www.jetbrains.com/help/idea/searching-everywhere.html) can be used here. In particular, the \u0027**Find Symbol**\u0027 (\u0027Symbol\u0027 here refers to methods, variables, classes etc.) variant of that feature is quite useful here as we are looking for a _method_ named `execute`, not simply the text `execute`.","lastModifiedDate":"2021-07-31"},{"lineNumber":49,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":51,"author":{"gitId":"kiatkat"},"content":"A quick look at the `logic.profplan.Logic` (an extract given below) confirms that this indeed might be what we’re looking for.","lastModifiedDate":"2023-10-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":53,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2021-07-31"},{"lineNumber":54,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2021-07-31"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-07-31"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2021-07-31"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2021-07-31"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2021-07-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"But apparently, this is an interface, not a concrete implementation.","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"That should be fine because the [Architecture section of the Developer Guide](../DeveloperGuide.html#architecture) tells us that components interact through interfaces. Here\u0027s the relevant diagram:","lastModifiedDate":"2021-07-31"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":70,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":72,"author":{"gitId":"-"},"content":"Next, let\u0027s find out which statement(s) in the `UI` code is calling this method, thus transferring control from the `UI` to the `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":74,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":76,"author":{"gitId":"-"},"content":":bulb: **Intellij Tip:** The [\u0027**Find Usages**\u0027 feature](https://www.jetbrains.com/help/idea/find-highlight-usages.html#find-usages) can find from which parts of the code a class/method/variable is being used.","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"![`Find Usages` tool window. `Edit` \\\u003e `Find` \\\u003e `Find Usages`.](../images/tracing/FindUsages.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"Bingo\\! `MainWindow#executeCommand()` seems to be exactly what we’re looking for\\!","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"Now let’s set the breakpoint. First, double-click the item to reach the corresponding code. Once there, click on the left gutter to set a breakpoint, as shown below.","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":" ![LeftGutter](../images/tracing/LeftGutter.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"## Tracing the execution path","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"eyelessrhyme7"},"content":"Recall from the User Guide that the `edit` command has the format: `edit INDEX [n/NAME] [p/PRIORITY] [e/EMAIL] [a/ADDRESS] [t/TAG]…​` For this tutorial we will be issuing the command `edit 1 n/Alice Yeoh`.","lastModifiedDate":"2023-10-17"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":":bulb: **Tip:** Over the course of the debugging session, you will encounter every major component in the application. Try to keep track of what happens inside the component and where the execution transfers to another component.","lastModifiedDate":"2021-07-31"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"1. To start the debugging session, simply `Run` \\\u003e `Debug Main`","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"1. When the GUI appears, enter `edit 1 n/Alice Yeoh` into the command box and press `Enter`.","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. The Debugger tool window should show up and show something like this:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"   ![DebuggerStep1](../images/tracing/DebuggerStep1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"1. Use the _Show execution point_ feature to jump to the line of code that we stopped at:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"   ![ShowExecutionPoint](../images/tracing/ShowExecutionPoint.png)\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":104,"author":{"gitId":"-"},"content":"   `CommandResult commandResult \u003d logic.execute(commandText);` is the line that you end up at (i.e., the place where we put the breakpoint).","lastModifiedDate":"2021-07-31"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"1. We are interested in the `logic.execute(commandText)` portion of that line so let’s _Step in_ into that method call:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    ![StepInto](../images/tracing/StepInto.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"1. We end up in `LogicManager#execute()` (not `Logic#execute` -- but this is expected because we know the `execute()` method in the `Logic` interface is actually implemented by the `LogicManager` class). Let’s take a look at the body of the method. Given below is the same code, with additional explanatory comments.","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"   **LogicManager\\#execute().**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"   public CommandResult execute(String commandText)","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"           throws CommandException, ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        //Logging, safe to ignore","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        //Parse user input from String to a Command","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"newway1814"},"content":"        Command command \u003d ProfPlanParser.parseCommand(commandText);","lastModifiedDate":"2023-10-26"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        //Executes the Command and stores the result","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            //We can deduce that the previous line of code modifies model in some way","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            // since it\u0027s being stored here.","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"1. `LogicManager#execute()` appears to delegate most of the heavy lifting to other components. Let’s take a closer look at each one.","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"1. _Step over_ the logging code since it is of no interest to us now.","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"   ![StepOver](../images/tracing/StepOver.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"newway1814"},"content":"1. _Step into_ the line where user input in parsed from a String to a Command, which should bring you to the `ProfPlanParser#parseCommand()` method (partial code given below):","lastModifiedDate":"2023-10-26"},{"lineNumber":145,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"   public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"       final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"       final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"1. _Step over_ the statements in that method until you reach the `switch` statement. The \u0027Variables\u0027 window now shows the value of both `commandWord` and `arguments`:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    ![Variables](../images/tracing/Variables.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"1. We see that the value of `commandWord` is now `edit` but `arguments` is still not processed in any meaningful way.","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"1. Stepping through the `switch` block, we end up at a call to `EditCommandParser().parse()` as expected (because the command we typed is an edit command).","lastModifiedDate":"2021-07-31"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    case EditCommand.COMMAND_WORD:","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        return new EditCommandParser().parse(arguments);","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"1. Let’s see what `EditCommandParser#parse()` does by stepping into it. You might have to click the \u0027step into\u0027 button multiple times here because there are two method calls in that statement: `EditCommandParser()` and `parse()`.","lastModifiedDate":"2021-07-31"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Intellij Tip:** Sometimes, you might end up stepping into functions that are not of interest. Simply use the `step out` button to get out of them!","lastModifiedDate":"2021-07-31"},{"lineNumber":170,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"1. Stepping through the method shows that it calls `ArgumentTokenizer#tokenize()` and `ParserUtil#parseIndex()` to obtain the arguments and index required.","lastModifiedDate":"2021-07-31"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":174,"author":{"gitId":"newway1814"},"content":"1. The rest of the method seems to exhaustively check for the existence of each possible parameter of the `edit` command and store any possible changes in an `EditTaskDescriptor`. Recall that we can verify the contents of `editTaskDesciptor` through the \u0027Variables\u0027 window.\u003cbr\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":175,"author":{"gitId":"-"},"content":"   ![EditCommand](../images/tracing/EditCommand.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"1. As you just traced through some code involved in parsing a command, you can take a look at this class diagram to see where the various parsing-related classes you encountered fit into the design of the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":178,"author":{"gitId":"-"},"content":"   \u003cimg src\u003d\"../images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":180,"author":{"gitId":"-"},"content":"1. Let’s continue stepping through until we return to `LogicManager#execute()`.","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    The sequence diagram below shows the details of the execution path through the Logic component. Does the execution path you traced in the code so far match the diagram?\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    ![Tracing an `edit` command through the Logic component](../images/tracing/LogicSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"1. Now, step over until you read the statement that calls the `execute()` method of the `EditCommand` object received, and step into that `execute()` method (partial code given below):","lastModifiedDate":"2021-07-31"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"   **`EditCommand#execute()`:**","lastModifiedDate":"2021-07-31"},{"lineNumber":188,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"   public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"newway1814"},"content":"       Task taskToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2023-10-16"},{"lineNumber":193,"author":{"gitId":"newway1814"},"content":"       Task editedTask \u003d createEditedTask(taskToEdit, editTaskDescriptor);","lastModifiedDate":"2023-10-16"},{"lineNumber":194,"author":{"gitId":"newway1814"},"content":"       if (!taskToEdit.isSameTask(editedTask) \u0026\u0026 model.hasTask(editedTask)) {","lastModifiedDate":"2023-10-16"},{"lineNumber":195,"author":{"gitId":"newway1814"},"content":"           throw new CommandException(MESSAGE_DUPLICATE_TASK);","lastModifiedDate":"2023-10-16"},{"lineNumber":196,"author":{"gitId":"-"},"content":"       }","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"newway1814"},"content":"       model.setTask(taskToEdit, editedTask);","lastModifiedDate":"2023-10-16"},{"lineNumber":198,"author":{"gitId":"newway1814"},"content":"       model.updateFilteredTaskList(PREDICATE_SHOW_ALL_TASKS);","lastModifiedDate":"2023-10-16"},{"lineNumber":199,"author":{"gitId":"newway1814"},"content":"       return new CommandResult(String.format(MESSAGE_EDIT_TASK_SUCCESS, editedTask));","lastModifiedDate":"2023-10-16"},{"lineNumber":200,"author":{"gitId":"-"},"content":"   }","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"1. As suspected, `command#execute()` does indeed make changes to the `model` object. Specifically,","lastModifiedDate":"2021-07-31"},{"lineNumber":204,"author":{"gitId":"newway1814"},"content":"   * it uses the `setTask()` method (defined in the interface `Model` and implemented in `ModelManager` as per the usual pattern) to update the task data.","lastModifiedDate":"2023-10-16"},{"lineNumber":205,"author":{"gitId":"newway1814"},"content":"   * it uses the `updateFilteredTaskList` method to ask the `Model` to populate the \u0027filtered list\u0027 with _all_ tasks.\u003cbr\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":206,"author":{"gitId":"newway1814"},"content":"     FYI, The \u0027filtered list\u0027 is the list of tasks resulting from the most recent operation that will be shown to the user immediately after. For the `edit` command, we populate it with all the tasks so that the user can see the edited task along with all other tasks. If this was a `find` command, we would be setting that list to contain the search results instead.\u003cbr\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":207,"author":{"gitId":"newway1814"},"content":"     To provide some context, given below is the class diagram of the `Model` component. See if you can figure out where the \u0027filtered list\u0027 of tasks is being tracked.","lastModifiedDate":"2023-10-16"},{"lineNumber":208,"author":{"gitId":"-"},"content":"     \u003cimg src\u003d\"../images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":209,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Model` component section of the DG](../DeveloperGuide.html#model-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"1. As you step through the rest of the statements in the `EditCommand#execute()` method, you\u0027ll see that it creates a `CommandResult` object (containing information about the result of the execution) and returns it.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":212,"author":{"gitId":"-"},"content":"   Advancing the debugger by one more step should take you back to the middle of the `LogicManager#execute()` method.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"1. Given that you have already seen quite a few classes in the `Logic` component in action, see if you can identify in this partial class diagram some of the classes you\u0027ve encountered so far, and see how they fit into the class structure of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    \u003cimg src\u003d\"../images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":216,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Logic` component section of the DG](../DeveloperGuide.html#logic-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"1. Similar to before, you can step over/into statements in the `LogicManager#execute()` method to examine how the control is transferred to the `Storage` component and what happens inside that component.","lastModifiedDate":"2021-07-31"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":220,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Intellij Tip:** When trying to step into a statement such as `storage.saveAddressBook(model.getAddressBook())` which contains multiple method calls, Intellij will let you choose (by clicking) which one you want to step into.","lastModifiedDate":"2021-07-31"},{"lineNumber":221,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"1.  As you step through the code inside the `Storage` component, you will eventually arrive at the `JsonAddressBook#saveAddressBook()` method which calls the `JsonSerializableAddressBook` constructor, to create an object that can be _serialized_ (i.e., stored in storage medium) in JSON format. That constructor is given below (with added line breaks for easier readability):","lastModifiedDate":"2021-07-31"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    **`JsonSerializableAddressBook` constructor:**","lastModifiedDate":"2021-07-31"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"     * {@code JsonSerializableAddressBook}.","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"newway1814"},"content":"        tasks.addAll(","lastModifiedDate":"2023-10-16"},{"lineNumber":235,"author":{"gitId":"newway1814"},"content":"            source.getTaskList()","lastModifiedDate":"2023-10-16"},{"lineNumber":236,"author":{"gitId":"-"},"content":"                  .stream()","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"newway1814"},"content":"                  .map(JsonAdaptedTask::new)","lastModifiedDate":"2023-10-16"},{"lineNumber":238,"author":{"gitId":"-"},"content":"                  .collect(Collectors.toList()));","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"newway1814"},"content":"1. It appears that a `JsonAdaptedTask` is created for each `Task` and then added to the `JsonSerializableAddressBook`.","lastModifiedDate":"2023-10-16"},{"lineNumber":243,"author":{"gitId":"-"},"content":"   This is because regular Java objects need to go through an _adaptation_ for them to be suitable to be saved in JSON format.","lastModifiedDate":"2021-07-31"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"1. While you are stepping through the classes in the `Storage` component, here is the component\u0027s class diagram to help you understand how those classes fit into the structure of the component.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":246,"author":{"gitId":"-"},"content":"   \u003cimg src\u003d\"../images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":247,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Storage` component section of the DG](../DeveloperGuide.html#storage-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"1. We can continue to step through until you reach the end of the `LogicManager#execute()` method and return to the `MainWindow#executeCommand()` method (the place where we put the original breakpoint).","lastModifiedDate":"2021-07-31"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"1. Stepping into `resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());`, we end up in:","lastModifiedDate":"2021-07-31"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    **`ResultDisplay#setFeedbackToUser()`**","lastModifiedDate":"2021-07-31"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"1. Finally, you can step through until you reach the end of`MainWindow#executeCommand()`.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":262,"author":{"gitId":"-"},"content":"   :bulb: This may be a good time to read through the [`UI` component section of the DG](../DeveloperGuide.html#ui-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"In this tutorial, we traced a valid edit command from raw user input to the result being displayed to the user. From this tutorial, you learned more about how the various components work together to produce a response to a user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"Here are some quick questions you can try to answer based on your execution path tracing. In some cases, you can do further tracing for the given commands to find exactly what happens.","lastModifiedDate":"2021-07-31"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"1.  In this tutorial, we traced the \"happy path\" (i.e., no errors). What","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"    do you think will happen if we traced the following commands","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"    instead? What exceptions do you think will be thrown (if any), where","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    will the exceptions be thrown and where will they be handled?","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"    1.  `redit 1 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    2.  `edit 0 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    3.  `edit 1 n/Alex Yeoh`","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"-"},"content":"    4.  `edit 1`","lastModifiedDate":"2020-05-23"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"-"},"content":"    5.  `edit 1 n/アリス ユー`","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":286,"author":{"gitId":"-"},"content":"    6.  `edit 1 t/one t/two t/three t/one`","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":288,"author":{"gitId":"-"},"content":"2.  What components will you have to modify to perform the following","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    enhancements to the application?","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"-"},"content":"    1.  Make command words case-insensitive","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"-"},"content":"    2.  Allow `delete` to remove more than one index at a time","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"eyelessrhyme7"},"content":"    3.  Save the task list in the CSV format instead","lastModifiedDate":"2023-10-17"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"-"},"content":"    4.  Add a new command","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":299,"author":{"gitId":"newway1814"},"content":"    5.  Add a new field to `Task`","lastModifiedDate":"2023-10-16"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":301,"author":{"gitId":"eyelessrhyme7"},"content":"    6.  Add a new entity to the task list","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"kiatkat":2,"eyelessrhyme7":3,"-":277,"newway1814":19}},{"path":"src/main/java/profplan/AppParameters.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kiatkat"},"content":"package profplan;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"kiatkat"},"content":"import profplan.commons.core.LogsCenter;","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"kiatkat"},"content":"import profplan.commons.util.FileUtil;","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"kiatkat"},"content":"import profplan.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Represents the parsed command-line parameters given to the application.","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class AppParameters {","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(AppParameters.class);","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private Path configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public Path getConfigPath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        return configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setConfigPath(Path configPath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.configPath \u003d configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Parses the application command-line parameters.","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static AppParameters parse(Application.Parameters parameters) {","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d new AppParameters();","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        Map\u003cString, String\u003e namedParameters \u003d parameters.getNamed();","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        String configPathParameter \u003d namedParameters.get(\"config\");","lastModifiedDate":"2018-04-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (configPathParameter !\u003d null \u0026\u0026 !FileUtil.isValidPath(configPathParameter)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            logger.warning(\"Invalid config path \" + configPathParameter + \". Using default config path.\");","lastModifiedDate":"2018-04-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            configPathParameter \u003d null;","lastModifiedDate":"2018-04-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        appParameters.setConfigPath(configPathParameter !\u003d null ? Paths.get(configPathParameter) : null);","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return appParameters;","lastModifiedDate":"2018-04-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-04-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        if (!(other instanceof AppParameters)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        AppParameters otherAppParameters \u003d (AppParameters) other;","lastModifiedDate":"2018-04-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return Objects.equals(configPath, otherAppParameters.configPath);","lastModifiedDate":"2023-07-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-04-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return configPath.hashCode();","lastModifiedDate":"2018-04-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                .add(\"configPath\", configPath)","lastModifiedDate":"2019-02-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-04-21"}],"authorContributionMap":{"kiatkat":4,"-":69}},{"path":"src/main/java/profplan/Main.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kiatkat"},"content":"package profplan;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-07-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2019-02-08"},{"lineNumber":6,"author":{"gitId":"kiatkat"},"content":"import profplan.commons.core.LogsCenter;","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2019-02-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * The main entry point to the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * This is a workaround for the following error when MainApp is made the","lastModifiedDate":"2019-02-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * entry point of the application:","lastModifiedDate":"2019-02-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" *     Error: JavaFX runtime components are missing, and are required to run this application","lastModifiedDate":"2019-02-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The reason is that MainApp extends Application. In that case, the","lastModifiedDate":"2019-02-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * LauncherHelper will check for the javafx.graphics module to be present","lastModifiedDate":"2019-02-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * as a named module. We don\u0027t use JavaFX via the module system so it can\u0027t","lastModifiedDate":"2019-02-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * find the javafx.graphics module, and so the launch is aborted.","lastModifiedDate":"2019-02-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * By having a separate main class (Main) that doesn\u0027t extend Application","lastModifiedDate":"2019-02-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * to be the entry point of the application, we avoid this issue.","lastModifiedDate":"2019-02-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2019-02-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class Main {","lastModifiedDate":"2019-02-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static Logger logger \u003d LogsCenter.getLogger(Main.class);","lastModifiedDate":"2023-07-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-02-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // As per https://github.com/openjdk/jfx/blob/master/doc-files/release-notes-16.md","lastModifiedDate":"2023-07-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // JavaFX 16 (or later) runtime logs a warning at startup if JavaFX classes are loaded from","lastModifiedDate":"2023-07-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // the classpath instead of a module.","lastModifiedDate":"2023-07-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // Our application does not use Java modules yet. Even if it did, modules are ignored when","lastModifiedDate":"2023-07-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // packed into a FAT Jar file (as we do), which means this warning will persist even then.","lastModifiedDate":"2023-07-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // The warning however, can be safely ignored. Thus, the following log informs","lastModifiedDate":"2023-07-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // the user (if looking at the log output) that the said warning appearing in the log","lastModifiedDate":"2023-07-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // can be ignored.","lastModifiedDate":"2023-07-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        logger.warning(\"The warning about Unsupported JavaFX configuration below can be ignored.\");","lastModifiedDate":"2023-07-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        Application.launch(MainApp.class, args);","lastModifiedDate":"2019-02-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-02-08"}],"authorContributionMap":{"kiatkat":2,"-":39}},{"path":"src/main/java/profplan/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kiatkat"},"content":"package profplan;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"kiatkat"},"content":"import profplan.commons.core.Config;","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"kiatkat"},"content":"import profplan.commons.core.LogsCenter;","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"kiatkat"},"content":"import profplan.commons.core.Version;","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"kiatkat"},"content":"import profplan.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"kiatkat"},"content":"import profplan.commons.util.ConfigUtil;","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"kiatkat"},"content":"import profplan.commons.util.StringUtil;","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"kiatkat"},"content":"import profplan.logic.Logic;","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"kiatkat"},"content":"import profplan.logic.LogicManager;","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"kiatkat"},"content":"import profplan.model.Model;","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"kiatkat"},"content":"import profplan.model.ModelManager;","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"kiatkat"},"content":"import profplan.model.ProfPlan;","lastModifiedDate":"2023-10-14"},{"lineNumber":21,"author":{"gitId":"kiatkat"},"content":"import profplan.model.ReadOnlyProfPlan;","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"kiatkat"},"content":"import profplan.model.ReadOnlyUserConfigs;","lastModifiedDate":"2023-11-01"},{"lineNumber":23,"author":{"gitId":"kiatkat"},"content":"import profplan.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"kiatkat"},"content":"import profplan.model.UserConfigs;","lastModifiedDate":"2023-11-01"},{"lineNumber":25,"author":{"gitId":"kiatkat"},"content":"import profplan.model.UserPrefs;","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"kiatkat"},"content":"import profplan.model.util.SampleDataUtil;","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"kiatkat"},"content":"import profplan.storage.JsonProfPlanStorage;","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"kiatkat"},"content":"import profplan.storage.JsonUserConfigsStorage;","lastModifiedDate":"2023-11-01"},{"lineNumber":29,"author":{"gitId":"kiatkat"},"content":"import profplan.storage.JsonUserPrefsStorage;","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"kiatkat"},"content":"import profplan.storage.ProfPlanStorage;","lastModifiedDate":"2023-10-14"},{"lineNumber":31,"author":{"gitId":"kiatkat"},"content":"import profplan.storage.Storage;","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"kiatkat"},"content":"import profplan.storage.StorageManager;","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"kiatkat"},"content":"import profplan.storage.UserConfigsStorage;","lastModifiedDate":"2023-11-01"},{"lineNumber":34,"author":{"gitId":"kiatkat"},"content":"import profplan.storage.UserPrefsStorage;","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"kiatkat"},"content":"import profplan.ui.Ui;","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"kiatkat"},"content":"import profplan.ui.UiManager;","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"eyelessrhyme7"},"content":"    public static final Version VERSION \u003d new Version(1, 3, 2, true);","lastModifiedDate":"2023-11-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"kiatkat"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing ProfPlan ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2023-10-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2023-07-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":64,"author":{"gitId":"kiatkat"},"content":"        UserConfigsStorage userConfigsStorage \u003d new JsonUserConfigsStorage(config.getUserConfigsFilePath());","lastModifiedDate":"2023-11-01"},{"lineNumber":65,"author":{"gitId":"kiatkat"},"content":"        UserConfigs userConfigs \u003d initConfigs(userConfigsStorage);","lastModifiedDate":"2023-11-01"},{"lineNumber":66,"author":{"gitId":"kiatkat"},"content":"        ProfPlanStorage profPlanStorage \u003d new JsonProfPlanStorage(userPrefs.getProfPlanFilePath());","lastModifiedDate":"2023-10-13"},{"lineNumber":67,"author":{"gitId":"kiatkat"},"content":"        storage \u003d new StorageManager(profPlanStorage, userPrefsStorage, userConfigsStorage);","lastModifiedDate":"2023-11-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"kiatkat"},"content":"        model \u003d initModelManager(storage, userPrefs, userConfigs);","lastModifiedDate":"2023-11-01"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":77,"author":{"gitId":"eyelessrhyme7"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s task list and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":78,"author":{"gitId":"eyelessrhyme7"},"content":"     * The data from the sample task list will be used instead if {@code storage}\u0027s task list is not found,","lastModifiedDate":"2023-10-17"},{"lineNumber":79,"author":{"gitId":"eyelessrhyme7"},"content":"     * or an empty task list will be used instead if errors occur when reading {@code storage}\u0027s task list.","lastModifiedDate":"2023-10-17"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"kiatkat"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs,","lastModifiedDate":"2023-11-01"},{"lineNumber":82,"author":{"gitId":"kiatkat"},"content":"                                   ReadOnlyUserConfigs userConfigs) {","lastModifiedDate":"2023-11-01"},{"lineNumber":83,"author":{"gitId":"kiatkat"},"content":"        logger.info(\"Using data file : \" + storage.getProfPlanFilePath());","lastModifiedDate":"2023-10-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":85,"author":{"gitId":"jack1e0"},"content":"        Optional\u003cReadOnlyProfPlan\u003e profPlanOptional;","lastModifiedDate":"2023-11-12"},{"lineNumber":86,"author":{"gitId":"kiatkat"},"content":"        ReadOnlyProfPlan initialData;","lastModifiedDate":"2023-10-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"jack1e0"},"content":"            profPlanOptional \u003d storage.readProfPlan();","lastModifiedDate":"2023-11-12"},{"lineNumber":89,"author":{"gitId":"jack1e0"},"content":"            if (!profPlanOptional.isPresent()) {","lastModifiedDate":"2023-11-12"},{"lineNumber":90,"author":{"gitId":"kiatkat"},"content":"                logger.info(\"Creating a new data file \" + storage.getProfPlanFilePath()","lastModifiedDate":"2023-10-13"},{"lineNumber":91,"author":{"gitId":"jack1e0"},"content":"                        + \" populated with a sample ProfPlan.\");","lastModifiedDate":"2023-11-12"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":93,"author":{"gitId":"jack1e0"},"content":"            initialData \u003d profPlanOptional.orElseGet(SampleDataUtil::getSampleProfPlan);","lastModifiedDate":"2023-11-12"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14"},{"lineNumber":95,"author":{"gitId":"kiatkat"},"content":"            logger.warning(\"Data file at \" + storage.getProfPlanFilePath() + \" could not be loaded.\"","lastModifiedDate":"2023-10-13"},{"lineNumber":96,"author":{"gitId":"jack1e0"},"content":"                    + \" Will be starting with an empty ProfPlan.\");","lastModifiedDate":"2023-11-12"},{"lineNumber":97,"author":{"gitId":"kiatkat"},"content":"            initialData \u003d new ProfPlan();","lastModifiedDate":"2023-10-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"kiatkat"},"content":"        return new ModelManager(initialData, userPrefs, userConfigs);","lastModifiedDate":"2023-11-01"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            if (!configOptional.isPresent()) {","lastModifiedDate":"2023-01-03"},{"lineNumber":128,"author":{"gitId":"-"},"content":"                logger.info(\"Creating new config file \" + configFilePathUsed);","lastModifiedDate":"2023-05-15"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-01-03"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" could not be loaded.\"","lastModifiedDate":"2023-06-15"},{"lineNumber":133,"author":{"gitId":"-"},"content":"                    + \" Using default config properties.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        logger.info(\"Using preference file : \" + prefsFilePath);","lastModifiedDate":"2023-05-15"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            if (!prefsOptional.isPresent()) {","lastModifiedDate":"2023-01-03"},{"lineNumber":159,"author":{"gitId":"-"},"content":"                logger.info(\"Creating new preference file \" + prefsFilePath);","lastModifiedDate":"2023-05-15"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-01-03"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            logger.warning(\"Preference file at \" + prefsFilePath + \" could not be loaded.\"","lastModifiedDate":"2023-06-15"},{"lineNumber":164,"author":{"gitId":"-"},"content":"                    + \" Using default preferences.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":170,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":172,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":178,"author":{"gitId":"kiatkat"},"content":"    /**","lastModifiedDate":"2023-11-01"},{"lineNumber":179,"author":{"gitId":"kiatkat"},"content":"     * Returns a {@code UserConfigs} using the file at {@code storage}\u0027s user settings file path,","lastModifiedDate":"2023-11-01"},{"lineNumber":180,"author":{"gitId":"kiatkat"},"content":"     * or a new {@code UserConfigs} with default configuration if errors occur when","lastModifiedDate":"2023-11-01"},{"lineNumber":181,"author":{"gitId":"kiatkat"},"content":"     * reading from the file.","lastModifiedDate":"2023-11-01"},{"lineNumber":182,"author":{"gitId":"kiatkat"},"content":"     */","lastModifiedDate":"2023-11-01"},{"lineNumber":183,"author":{"gitId":"kiatkat"},"content":"    protected UserConfigs initConfigs(UserConfigsStorage storage) {","lastModifiedDate":"2023-11-01"},{"lineNumber":184,"author":{"gitId":"kiatkat"},"content":"        Path configsFilePath \u003d storage.getUserConfigsFilePath();","lastModifiedDate":"2023-11-01"},{"lineNumber":185,"author":{"gitId":"kiatkat"},"content":"        logger.info(\"Using settings file : \" + configsFilePath);","lastModifiedDate":"2023-11-01"},{"lineNumber":186,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":187,"author":{"gitId":"kiatkat"},"content":"        UserConfigs initializedConfigs;","lastModifiedDate":"2023-11-01"},{"lineNumber":188,"author":{"gitId":"kiatkat"},"content":"        try {","lastModifiedDate":"2023-11-01"},{"lineNumber":189,"author":{"gitId":"kiatkat"},"content":"            Optional\u003cUserConfigs\u003e configsOptional \u003d storage.readUserConfigs();","lastModifiedDate":"2023-11-01"},{"lineNumber":190,"author":{"gitId":"kiatkat"},"content":"            if (!configsOptional.isPresent()) {","lastModifiedDate":"2023-11-01"},{"lineNumber":191,"author":{"gitId":"kiatkat"},"content":"                logger.info(\"Creating new config file \" + configsFilePath);","lastModifiedDate":"2023-11-01"},{"lineNumber":192,"author":{"gitId":"kiatkat"},"content":"            }","lastModifiedDate":"2023-11-01"},{"lineNumber":193,"author":{"gitId":"kiatkat"},"content":"            initializedConfigs \u003d configsOptional.orElse(new UserConfigs());","lastModifiedDate":"2023-11-01"},{"lineNumber":194,"author":{"gitId":"kiatkat"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-11-01"},{"lineNumber":195,"author":{"gitId":"kiatkat"},"content":"            logger.warning(\"Settings file at \" + configsFilePath + \" could not be loaded.\"","lastModifiedDate":"2023-11-01"},{"lineNumber":196,"author":{"gitId":"kiatkat"},"content":"                    + \" Using default settings.\");","lastModifiedDate":"2023-11-01"},{"lineNumber":197,"author":{"gitId":"kiatkat"},"content":"            initializedConfigs \u003d new UserConfigs();","lastModifiedDate":"2023-11-01"},{"lineNumber":198,"author":{"gitId":"kiatkat"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":199,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":200,"author":{"gitId":"kiatkat"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2023-11-01"},{"lineNumber":201,"author":{"gitId":"kiatkat"},"content":"        try {","lastModifiedDate":"2023-11-01"},{"lineNumber":202,"author":{"gitId":"kiatkat"},"content":"            storage.saveUserConfigs(initializedConfigs);","lastModifiedDate":"2023-11-01"},{"lineNumber":203,"author":{"gitId":"kiatkat"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-11-01"},{"lineNumber":204,"author":{"gitId":"kiatkat"},"content":"            logger.warning(\"Failed to save settings file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2023-11-01"},{"lineNumber":205,"author":{"gitId":"kiatkat"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":206,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":207,"author":{"gitId":"kiatkat"},"content":"        return initializedConfigs;","lastModifiedDate":"2023-11-01"},{"lineNumber":208,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":209,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":212,"author":{"gitId":"jack1e0"},"content":"        logger.info(\"Starting ProfPlan \" + MainApp.VERSION);","lastModifiedDate":"2023-11-12"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":214,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":218,"author":{"gitId":"kiatkat"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping ProfPlan ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2023-10-29"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":220,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":222,"author":{"gitId":"kiatkat"},"content":"            logger.severe(\"Failed to save user preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2023-11-01"},{"lineNumber":223,"author":{"gitId":"kiatkat"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":224,"author":{"gitId":"kiatkat"},"content":"        try {","lastModifiedDate":"2023-11-01"},{"lineNumber":225,"author":{"gitId":"kiatkat"},"content":"            storage.saveUserConfigs(ModelManager.getUserConfigs());","lastModifiedDate":"2023-11-02"},{"lineNumber":226,"author":{"gitId":"kiatkat"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-11-01"},{"lineNumber":227,"author":{"gitId":"kiatkat"},"content":"            logger.severe(\"Failed to save user configs \" + StringUtil.getDetails(e));","lastModifiedDate":"2023-11-01"},{"lineNumber":228,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":230,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"jack1e0":7,"kiatkat":81,"eyelessrhyme7":4,"-":138}},{"path":"src/main/java/profplan/commons/core/Config.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kiatkat"},"content":"package profplan.commons.core;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2016-09-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"kiatkat"},"content":"import profplan.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Config values used by the app","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class Config {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final Path DEFAULT_CONFIG_FILE \u003d Paths.get(\"config.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    // Config values customizable through config file","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private Level logLevel \u003d Level.INFO;","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private Path userPrefsFilePath \u003d Paths.get(\"preferences.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"kiatkat"},"content":"    private Path userConfigsFilePath \u003d Paths.get(\"settings.json\");","lastModifiedDate":"2023-11-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public Level getLogLevel() {","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        return logLevel;","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setLogLevel(Level logLevel) {","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.logLevel \u003d logLevel;","lastModifiedDate":"2016-09-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return userPrefsFilePath;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void setUserPrefsFilePath(Path userPrefsFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.userPrefsFilePath \u003d userPrefsFilePath;","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"kiatkat"},"content":"    public Path getUserConfigsFilePath() {","lastModifiedDate":"2023-11-01"},{"lineNumber":38,"author":{"gitId":"kiatkat"},"content":"        return userConfigsFilePath;","lastModifiedDate":"2023-11-01"},{"lineNumber":39,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":40,"author":{"gitId":"kiatkat"},"content":"    public void setUserConfigsFilePath(Path userConfigsFilePath) {","lastModifiedDate":"2023-11-01"},{"lineNumber":41,"author":{"gitId":"kiatkat"},"content":"        this.userConfigsFilePath \u003d userConfigsFilePath;","lastModifiedDate":"2023-11-01"},{"lineNumber":42,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        if (!(other instanceof Config)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        Config otherConfig \u003d (Config) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return Objects.equals(logLevel, otherConfig.logLevel)","lastModifiedDate":"2023-07-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(userPrefsFilePath, otherConfig.userPrefsFilePath);","lastModifiedDate":"2023-07-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return Objects.hash(logLevel, userPrefsFilePath);","lastModifiedDate":"2018-12-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                .add(\"logLevel\", logLevel)","lastModifiedDate":"2019-02-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"                .add(\"userPrefsFilePath\", userPrefsFilePath)","lastModifiedDate":"2019-02-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"kiatkat":9,"-":64}},{"path":"src/main/java/profplan/commons/core/GuiSettings.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kiatkat"},"content":"package profplan.commons.core;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.awt.Point;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.io.Serializable;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"kiatkat"},"content":"import profplan.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * A Serializable class that contains the GUI settings.","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Guarantees: immutable.","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class GuiSettings implements Serializable {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private static final double DEFAULT_HEIGHT \u003d 600;","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private static final double DEFAULT_WIDTH \u003d 740;","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final double windowWidth;","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final double windowHeight;","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final Point windowCoordinates;","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the default height, width and position.","lastModifiedDate":"2020-05-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public GuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        windowWidth \u003d DEFAULT_WIDTH;","lastModifiedDate":"2018-08-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        windowHeight \u003d DEFAULT_HEIGHT;","lastModifiedDate":"2018-08-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d null; // null represent no coordinates","lastModifiedDate":"2018-08-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the specified height, width and position.","lastModifiedDate":"2020-05-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public GuiSettings(double windowWidth, double windowHeight, int xPosition, int yPosition) {","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.windowWidth \u003d windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.windowHeight \u003d windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d new Point(xPosition, yPosition);","lastModifiedDate":"2018-08-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public double getWindowWidth() {","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public double getWindowHeight() {","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public Point getWindowCoordinates() {","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return windowCoordinates !\u003d null ? new Point(windowCoordinates) : null;","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        if (!(other instanceof GuiSettings)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        GuiSettings otherGuiSettings \u003d (GuiSettings) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return windowWidth \u003d\u003d otherGuiSettings.windowWidth","lastModifiedDate":"2023-07-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                \u0026\u0026 windowHeight \u003d\u003d otherGuiSettings.windowHeight","lastModifiedDate":"2023-07-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(windowCoordinates, otherGuiSettings.windowCoordinates);","lastModifiedDate":"2023-07-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return Objects.hash(windowWidth, windowHeight, windowCoordinates);","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                .add(\"windowWidth\", windowWidth)","lastModifiedDate":"2019-02-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .add(\"windowHeight\", windowHeight)","lastModifiedDate":"2019-02-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                .add(\"windowCoordinates\", windowCoordinates)","lastModifiedDate":"2019-02-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"kiatkat":2,"-":80}},{"path":"src/main/java/profplan/commons/core/LogsCenter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kiatkat"},"content":"package profplan.commons.core;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-05-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-05-20"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.ConsoleHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.FileHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.logging.SimpleFormatter;","lastModifiedDate":"2017-01-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Configures and manages loggers and handlers, including their logging level","lastModifiedDate":"2016-09-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Named {@link Logger}s can be obtained from this class\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * These loggers have been configured to output messages to the console and a {@code .log} file by default,","lastModifiedDate":"2016-09-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":" *   at the {@code INFO} level. A new {@code .log} file with a new numbering will be created after the log","lastModifiedDate":"2016-09-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":" *   file reaches 5MB big, up to a maximum of 5 files.\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class LogsCenter {","lastModifiedDate":"2016-09-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_COUNT \u003d 5;","lastModifiedDate":"2016-09-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_SIZE_IN_BYTES \u003d (int) (Math.pow(2, 20) * 5); // 5MB","lastModifiedDate":"2016-09-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String LOG_FILE \u003d \"addressbook.log\";","lastModifiedDate":"2016-09-28"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final Logger logger; // logger for this class","lastModifiedDate":"2023-07-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static Logger baseLogger; // to be used as the parent of all other loggers created by this class.","lastModifiedDate":"2023-07-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static Level currentLogLevel \u003d Level.INFO;","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    // This static block ensures essential loggers are created early","lastModifiedDate":"2023-07-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2023-07-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        setBaseLogger();","lastModifiedDate":"2023-07-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        logger \u003d LogsCenter.getLogger(LogsCenter.class);","lastModifiedDate":"2023-07-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Initializes loggers with the log level specified in the {@code config} object. Applies to all loggers created","lastModifiedDate":"2023-07-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * using {@link #getLogger(String)} and {@link #getLogger(Class)} methods except for those that are manually set.","lastModifiedDate":"2023-07-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static void init(Config config) {","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        currentLogLevel \u003d config.getLogLevel();","lastModifiedDate":"2016-09-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        logger.info(\"Log level will be set as: \" + currentLogLevel);","lastModifiedDate":"2023-07-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // set the level of the baseLogger which will be inherited by other loggers","lastModifiedDate":"2023-07-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        baseLogger.setLevel(currentLogLevel);","lastModifiedDate":"2023-07-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Creates a logger with the given name prefixed by the {@code baseLogger}\u0027s name so that the created logger","lastModifiedDate":"2023-07-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * becomes a descendant of the {@code baseLogger}. Furthermore, the returned logger will have the same log handlers","lastModifiedDate":"2023-07-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * as the {@code baseLogger}.","lastModifiedDate":"2023-07-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static Logger getLogger(String name) {","lastModifiedDate":"2016-09-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // Java organizes loggers into a hierarchy based on their names (using \u0027.\u0027 as a separator, similar to how Java","lastModifiedDate":"2023-07-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // packages form a hierarchy). Furthermore, loggers without a level inherit the level of their parent logger.","lastModifiedDate":"2023-07-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // By prefixing names of all loggers with baseLogger\u0027s name + \".\", we make the baseLogger the parent of all","lastModifiedDate":"2023-07-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // loggers. This allows us to change the level of all loggers simply by changing the baseLogger level.","lastModifiedDate":"2023-07-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        Logger logger \u003d Logger.getLogger(baseLogger.getName() + \".\" + name);","lastModifiedDate":"2023-07-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        removeHandlers(logger);","lastModifiedDate":"2016-09-28"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        logger.setUseParentHandlers(true);","lastModifiedDate":"2023-07-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return logger;","lastModifiedDate":"2023-07-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Creates a Logger for the given class name.","lastModifiedDate":"2017-01-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Logger getLogger(Class\u003cT\u003e clazz) {","lastModifiedDate":"2017-01-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        requireNonNull(clazz);","lastModifiedDate":"2023-05-20"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return getLogger(clazz.getSimpleName());","lastModifiedDate":"2017-01-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * Removes all handlers from the {@code logger}.","lastModifiedDate":"2023-07-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    private static void removeHandlers(Logger logger) {","lastModifiedDate":"2016-09-28"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        Arrays.stream(logger.getHandlers())","lastModifiedDate":"2018-01-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                .forEach(logger::removeHandler);","lastModifiedDate":"2018-01-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Creates a logger named \u0027ab3\u0027, containing a {@code ConsoleHandler} and a {@code FileHandler}.","lastModifiedDate":"2023-07-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Sets it as the {@code baseLogger}, to be used as the parent logger of all other loggers.","lastModifiedDate":"2023-07-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private static void setBaseLogger() {","lastModifiedDate":"2023-07-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        baseLogger \u003d Logger.getLogger(\"ab3\");","lastModifiedDate":"2023-07-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        baseLogger.setUseParentHandlers(false);","lastModifiedDate":"2023-07-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        removeHandlers(baseLogger);","lastModifiedDate":"2023-07-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        // Level.ALL is used as the level for the handlers because the baseLogger filters the log messages by level","lastModifiedDate":"2023-07-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // already; there is no need to control log message level of the handlers.","lastModifiedDate":"2023-07-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-19"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // add a ConsoleHandler to log to the console","lastModifiedDate":"2023-07-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        ConsoleHandler consoleHandler \u003d new ConsoleHandler();","lastModifiedDate":"2023-07-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        consoleHandler.setLevel(Level.ALL);","lastModifiedDate":"2023-07-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        baseLogger.addHandler(consoleHandler);","lastModifiedDate":"2023-07-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // add a FileHandler to log to a file","lastModifiedDate":"2023-07-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-09"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            FileHandler fileHandler \u003d new FileHandler(LOG_FILE, MAX_FILE_SIZE_IN_BYTES, MAX_FILE_COUNT, true);","lastModifiedDate":"2023-07-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            fileHandler.setFormatter(new SimpleFormatter());","lastModifiedDate":"2023-07-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            fileHandler.setLevel(Level.ALL);","lastModifiedDate":"2023-07-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            baseLogger.addHandler(fileHandler);","lastModifiedDate":"2023-07-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            logger.warning(\"Error adding file handler for logger.\");","lastModifiedDate":"2016-09-09"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"kiatkat":1,"-":105}},{"path":"src/main/java/profplan/commons/core/Settings.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kiatkat"},"content":"package profplan.commons.core;","lastModifiedDate":"2023-11-01"},{"lineNumber":2,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":3,"author":{"gitId":"kiatkat"},"content":"import java.io.Serializable;","lastModifiedDate":"2023-11-01"},{"lineNumber":4,"author":{"gitId":"kiatkat"},"content":"import java.util.Objects;","lastModifiedDate":"2023-11-01"},{"lineNumber":5,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":6,"author":{"gitId":"kiatkat"},"content":"import profplan.commons.util.ToStringBuilder;","lastModifiedDate":"2023-11-01"},{"lineNumber":7,"author":{"gitId":"kiatkat"},"content":"import profplan.logic.parser.Prefix;","lastModifiedDate":"2023-11-02"},{"lineNumber":8,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":9,"author":{"gitId":"kiatkat"},"content":"/**","lastModifiedDate":"2023-11-01"},{"lineNumber":10,"author":{"gitId":"kiatkat"},"content":" * A Serializable class that contains the general settings.","lastModifiedDate":"2023-11-01"},{"lineNumber":11,"author":{"gitId":"kiatkat"},"content":" * Guarantees: immutable.","lastModifiedDate":"2023-11-01"},{"lineNumber":12,"author":{"gitId":"kiatkat"},"content":" */","lastModifiedDate":"2023-11-01"},{"lineNumber":13,"author":{"gitId":"kiatkat"},"content":"public class Settings implements Serializable {","lastModifiedDate":"2023-11-01"},{"lineNumber":14,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":15,"author":{"gitId":"kiatkat"},"content":"    // array containing all keywords used to specify these fields. contain these keywords in Prefixes.","lastModifiedDate":"2023-11-02"},{"lineNumber":16,"author":{"gitId":"kiatkat"},"content":"    public static final Prefix[] KEYWORDS \u003d {new Prefix(\"semesterDays\")};","lastModifiedDate":"2023-11-02"},{"lineNumber":17,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":18,"author":{"gitId":"kiatkat"},"content":"    // misc.","lastModifiedDate":"2023-11-08"},{"lineNumber":19,"author":{"gitId":"kiatkat"},"content":"    public static final String SEMESTER_DAYS_CONSTRAINTS \u003d \"The parameter semesterDays must be a non-negative integer.\";","lastModifiedDate":"2023-11-08"},{"lineNumber":20,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":21,"author":{"gitId":"kiatkat"},"content":"    // default values","lastModifiedDate":"2023-11-01"},{"lineNumber":22,"author":{"gitId":"kiatkat"},"content":"    private static final int DEFAULT_SEMESTER_DAYS \u003d 180;","lastModifiedDate":"2023-11-01"},{"lineNumber":23,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":24,"author":{"gitId":"kiatkat"},"content":"    // fields","lastModifiedDate":"2023-11-01"},{"lineNumber":25,"author":{"gitId":"kiatkat"},"content":"    private final int semesterDays;","lastModifiedDate":"2023-11-01"},{"lineNumber":26,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":27,"author":{"gitId":"kiatkat"},"content":"    /**","lastModifiedDate":"2023-11-01"},{"lineNumber":28,"author":{"gitId":"kiatkat"},"content":"     * Constructs a {@code Settings} with default settings.","lastModifiedDate":"2023-11-01"},{"lineNumber":29,"author":{"gitId":"kiatkat"},"content":"     */","lastModifiedDate":"2023-11-01"},{"lineNumber":30,"author":{"gitId":"kiatkat"},"content":"    public Settings() {","lastModifiedDate":"2023-11-01"},{"lineNumber":31,"author":{"gitId":"kiatkat"},"content":"        semesterDays \u003d DEFAULT_SEMESTER_DAYS;","lastModifiedDate":"2023-11-01"},{"lineNumber":32,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":33,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":34,"author":{"gitId":"kiatkat"},"content":"    /**","lastModifiedDate":"2023-11-01"},{"lineNumber":35,"author":{"gitId":"kiatkat"},"content":"     * Constructs a {@code Settings} with the specified settings.","lastModifiedDate":"2023-11-01"},{"lineNumber":36,"author":{"gitId":"kiatkat"},"content":"     */","lastModifiedDate":"2023-11-01"},{"lineNumber":37,"author":{"gitId":"kiatkat"},"content":"    public Settings(int semesterDays) {","lastModifiedDate":"2023-11-01"},{"lineNumber":38,"author":{"gitId":"kiatkat"},"content":"        this.semesterDays \u003d semesterDays;","lastModifiedDate":"2023-11-01"},{"lineNumber":39,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":40,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":41,"author":{"gitId":"kiatkat"},"content":"    // getters","lastModifiedDate":"2023-11-01"},{"lineNumber":42,"author":{"gitId":"kiatkat"},"content":"    public int getSemesterDays() {","lastModifiedDate":"2023-11-01"},{"lineNumber":43,"author":{"gitId":"kiatkat"},"content":"        return semesterDays;","lastModifiedDate":"2023-11-01"},{"lineNumber":44,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":45,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":46,"author":{"gitId":"kiatkat"},"content":"    @Override","lastModifiedDate":"2023-11-01"},{"lineNumber":47,"author":{"gitId":"kiatkat"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-11-01"},{"lineNumber":48,"author":{"gitId":"kiatkat"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-11-01"},{"lineNumber":49,"author":{"gitId":"kiatkat"},"content":"            return true;","lastModifiedDate":"2023-11-01"},{"lineNumber":50,"author":{"gitId":"kiatkat"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":51,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":52,"author":{"gitId":"kiatkat"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-11-01"},{"lineNumber":53,"author":{"gitId":"kiatkat"},"content":"        if (!(other instanceof Settings)) {","lastModifiedDate":"2023-11-01"},{"lineNumber":54,"author":{"gitId":"kiatkat"},"content":"            return false;","lastModifiedDate":"2023-11-01"},{"lineNumber":55,"author":{"gitId":"kiatkat"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":56,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":57,"author":{"gitId":"kiatkat"},"content":"        Settings otherSettings \u003d (Settings) other;","lastModifiedDate":"2023-11-01"},{"lineNumber":58,"author":{"gitId":"kiatkat"},"content":"        return this.semesterDays \u003d\u003d otherSettings.semesterDays;","lastModifiedDate":"2023-11-01"},{"lineNumber":59,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":60,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":61,"author":{"gitId":"kiatkat"},"content":"    @Override","lastModifiedDate":"2023-11-01"},{"lineNumber":62,"author":{"gitId":"kiatkat"},"content":"    public int hashCode() {","lastModifiedDate":"2023-11-01"},{"lineNumber":63,"author":{"gitId":"kiatkat"},"content":"        return Objects.hash(semesterDays);","lastModifiedDate":"2023-11-01"},{"lineNumber":64,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":65,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":66,"author":{"gitId":"kiatkat"},"content":"    @Override","lastModifiedDate":"2023-11-01"},{"lineNumber":67,"author":{"gitId":"kiatkat"},"content":"    public String toString() {","lastModifiedDate":"2023-11-01"},{"lineNumber":68,"author":{"gitId":"kiatkat"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-11-01"},{"lineNumber":69,"author":{"gitId":"kiatkat"},"content":"                .add(\"semesterDays\", semesterDays)","lastModifiedDate":"2023-11-01"},{"lineNumber":70,"author":{"gitId":"kiatkat"},"content":"                .toString();","lastModifiedDate":"2023-11-01"},{"lineNumber":71,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":72,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":73,"author":{"gitId":"kiatkat"},"content":"}","lastModifiedDate":"2023-11-01"}],"authorContributionMap":{"kiatkat":73}},{"path":"src/main/java/profplan/commons/core/Version.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kiatkat"},"content":"package profplan.commons.core;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Represents a version with major, minor and patch number","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Version implements Comparable\u003cVersion\u003e {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String VERSION_REGEX \u003d \"V(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)(ea)?\";","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private static final String EXCEPTION_STRING_NOT_VERSION \u003d \"String is not a valid Version. %s\";","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Pattern VERSION_PATTERN \u003d Pattern.compile(VERSION_REGEX);","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final int major;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final int minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final int patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final boolean isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Constructs a {@code Version} with the given version details.","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Version(int major, int minor, int patch, boolean isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.major \u003d major;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.minor \u003d minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.patch \u003d patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.isEarlyAccess \u003d isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public int getMajor() {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return major;","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public int getMinor() {","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public int getPatch() {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean isEarlyAccess() {","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Parses a version number string in the format V1.2.3.","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * @param versionString version number string","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * @return a Version object","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static Version fromString(String versionString) throws IllegalArgumentException {","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Matcher versionMatcher \u003d VERSION_PATTERN.matcher(versionString);","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (!versionMatcher.find()) {","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(String.format(EXCEPTION_STRING_NOT_VERSION, versionString));","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return new Version(Integer.parseInt(versionMatcher.group(1)),","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                Integer.parseInt(versionMatcher.group(2)),","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                Integer.parseInt(versionMatcher.group(3)),","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                versionMatcher.group(4) \u003d\u003d null ? false : true);","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @JsonValue","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return String.format(\"V%d.%d.%d%s\", major, minor, patch, isEarlyAccess ? \"ea\" : \"\");","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public int compareTo(Version other) {","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (major !\u003d other.major) {","lastModifiedDate":"2018-08-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            return major - other.major;","lastModifiedDate":"2018-08-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        if (minor !\u003d other.minor) {","lastModifiedDate":"2018-08-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            return minor - other.minor;","lastModifiedDate":"2018-08-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        if (patch !\u003d other.patch) {","lastModifiedDate":"2018-08-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            return patch - other.patch;","lastModifiedDate":"2018-08-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        if (isEarlyAccess \u003d\u003d other.isEarlyAccess()) {","lastModifiedDate":"2018-08-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            return 0;","lastModifiedDate":"2017-05-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        if (isEarlyAccess) {","lastModifiedDate":"2018-08-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            return -1;","lastModifiedDate":"2017-05-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return 1;","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-07-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        if (!(other instanceof Version)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Version otherVersion \u003d (Version) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        return major \u003d\u003d otherVersion.major","lastModifiedDate":"2023-07-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"                \u0026\u0026 minor \u003d\u003d otherVersion.minor","lastModifiedDate":"2023-07-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"                \u0026\u0026 patch \u003d\u003d otherVersion.patch","lastModifiedDate":"2023-07-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"                \u0026\u0026 isEarlyAccess \u003d\u003d otherVersion.isEarlyAccess;","lastModifiedDate":"2023-07-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        String hash \u003d String.format(\"%03d%03d%03d\", major, minor, patch);","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        if (!isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            hash \u003d \"1\" + hash;","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        return Integer.parseInt(hash);","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"kiatkat":1,"-":120}},{"path":"src/main/java/profplan/commons/core/index/Index.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kiatkat"},"content":"package profplan.commons.core.index;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"kiatkat"},"content":"import profplan.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Represents a zero-based or one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2017-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * {@code Index} should be used right from the start (when parsing in a new user input), so that if the current","lastModifiedDate":"2017-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * component wants to communicate with another component, it can send an {@code Index} to avoid having to know what","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * base the other component is using for its index. However, after receiving the {@code Index}, that component can","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * convert it back to an int if the index will not be passed to a different component again.","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class Index {","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private int zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Index can only be created by calling {@link Index#fromZeroBased(int)} or","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * {@link Index#fromOneBased(int)}.","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private Index(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        if (zeroBasedIndex \u003c 0) {","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            throw new IndexOutOfBoundsException();","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.zeroBasedIndex \u003d zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public int getZeroBased() {","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        return zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public int getOneBased() {","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return zeroBasedIndex + 1;","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a zero-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static Index fromZeroBased(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return new Index(zeroBasedIndex);","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static Index fromOneBased(int oneBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return new Index(oneBasedIndex - 1);","lastModifiedDate":"2017-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        if (!(other instanceof Index)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Index otherIndex \u003d (Index) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return zeroBasedIndex \u003d\u003d otherIndex.zeroBasedIndex;","lastModifiedDate":"2023-07-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this).add(\"zeroBasedIndex\", zeroBasedIndex).toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"kiatkat":2,"-":67}},{"path":"src/main/java/profplan/commons/exceptions/DataLoadingException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kiatkat"},"content":"package profplan.commons.exceptions;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-06-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents an error during loading of data from a file.","lastModifiedDate":"2023-06-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-06-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class DataLoadingException extends Exception {","lastModifiedDate":"2023-06-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    public DataLoadingException(Exception cause) {","lastModifiedDate":"2023-06-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"        super(cause);","lastModifiedDate":"2023-06-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-06-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-06-14"}],"authorContributionMap":{"kiatkat":1,"-":10}},{"path":"src/main/java/profplan/commons/exceptions/IllegalValueException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kiatkat"},"content":"package profplan.commons.exceptions;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Signals that some given data does not fulfill some constraints.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class IllegalValueException extends Exception {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"     * @param message should contain relevant information on the failed constraint(s)","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public IllegalValueException(String message) {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * @param message should contain relevant information on the failed constraint(s)","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * @param cause of the main exception","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public IllegalValueException(String message, Throwable cause) {","lastModifiedDate":"2017-03-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"kiatkat":1,"-":20}},{"path":"src/main/java/profplan/commons/util/AppUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kiatkat"},"content":"package profplan.commons.util;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"kiatkat"},"content":"import profplan.MainApp;","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * A container for App specific utility functions","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class AppUtil {","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Gets an {@code Image} from the specified path.","lastModifiedDate":"2020-05-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        requireNonNull(imagePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Checks that {@code condition} is true. Used for validating arguments to methods.","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws IllegalArgumentException if {@code condition} is false.","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static void checkArgument(Boolean condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        if (!condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException();","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Checks that {@code condition} is true. Used for validating arguments to methods.","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @throws IllegalArgumentException with {@code errorMessage} if {@code condition} is false.","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static void checkArgument(Boolean condition, String errorMessage) {","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (!condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(errorMessage);","lastModifiedDate":"2017-05-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"kiatkat":2,"-":40}},{"path":"src/main/java/profplan/commons/util/CollectionUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kiatkat"},"content":"package profplan.commons.util;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-06-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2016-12-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Utility methods related to Collections","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class CollectionUtil {","lastModifiedDate":"2016-09-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /** @see #requireAllNonNull(Collection) */","lastModifiedDate":"2017-05-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static void requireAllNonNull(Object... items) {","lastModifiedDate":"2017-05-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        requireNonNull(items);","lastModifiedDate":"2017-06-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Stream.of(items).forEach(Objects::requireNonNull);","lastModifiedDate":"2017-05-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Throws NullPointerException if {@code items} or any element of {@code items} is null.","lastModifiedDate":"2017-05-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static void requireAllNonNull(Collection\u003c?\u003e items) {","lastModifiedDate":"2017-05-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        requireNonNull(items);","lastModifiedDate":"2017-06-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        items.forEach(Objects::requireNonNull);","lastModifiedDate":"2017-05-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns true if {@code items} contain any elements that are non-null.","lastModifiedDate":"2017-06-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static boolean isAnyNonNull(Object... items) {","lastModifiedDate":"2017-06-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return items !\u003d null \u0026\u0026 Arrays.stream(items).anyMatch(Objects::nonNull);","lastModifiedDate":"2017-06-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"kiatkat":1,"-":34}},{"path":"src/main/java/profplan/commons/util/ConfigUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kiatkat"},"content":"package profplan.commons.util;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"kiatkat"},"content":"import profplan.commons.core.Config;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"kiatkat"},"content":"import profplan.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-10-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * A class for accessing the Config File.","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ConfigUtil {","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static Optional\u003cConfig\u003e readConfig(Path configFilePath) throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        return JsonUtil.readJsonFile(configFilePath, Config.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static void saveConfig(Config config, Path configFilePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(config, configFilePath);","lastModifiedDate":"2016-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"kiatkat":3,"-":20}},{"path":"src/main/java/profplan/commons/util/FileUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kiatkat"},"content":"package profplan.commons.util;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2016-08-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.InvalidPathException;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Writes and reads files","lastModifiedDate":"2016-10-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class FileUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String CHARSET \u003d \"UTF-8\";","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static boolean isFileExists(Path file) {","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        return Files.exists(file) \u0026\u0026 Files.isRegularFile(file);","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Returns true if {@code path} can be converted into a {@code Path} via {@link Paths#get(String)},","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * otherwise returns false.","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param path A string representing the file path. Cannot be null.","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static boolean isValidPath(String path) {","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            Paths.get(path);","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        } catch (InvalidPathException ipe) {","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2017-08-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws IOException if the file or directory cannot be created.","lastModifiedDate":"2017-08-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static void createIfMissing(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (!isFileExists(file)) {","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            createFile(file);","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2018-04-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static void createFile(Path file) throws IOException {","lastModifiedDate":"2018-04-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (Files.exists(file)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2018-04-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        createParentDirsOfFile(file);","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Files.createFile(file);","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Creates parent directories of file if it has a parent directory","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static void createParentDirsOfFile(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Path parentDir \u003d file.getParent();","lastModifiedDate":"2018-04-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (parentDir !\u003d null) {","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            Files.createDirectories(parentDir);","lastModifiedDate":"2018-04-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Assumes file exists","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static String readFromFile(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return new String(Files.readAllBytes(file), CHARSET);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Writes given string to a file.","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Will create the file if it does not exist yet.","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public static void writeToFile(Path file, String content) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Files.write(file, content.getBytes(CHARSET));","lastModifiedDate":"2018-04-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"kiatkat":1,"-":82}},{"path":"src/main/java/profplan/commons/util/JsonUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kiatkat"},"content":"package profplan.commons.util;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonAutoDetect;","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.PropertyAccessor;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.core.JsonProcessingException;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.DeserializationContext;","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.DeserializationFeature;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.ObjectMapper;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.SerializationFeature;","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.deser.std.FromStringDeserializer;","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.module.SimpleModule;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.ser.std.ToStringSerializer;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":23,"author":{"gitId":"kiatkat"},"content":"import profplan.commons.core.LogsCenter;","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"kiatkat"},"content":"import profplan.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-10-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Converts a Java object instance to JSON and vice versa","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class JsonUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonUtil.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static ObjectMapper objectMapper \u003d new ObjectMapper().findAndRegisterModules()","lastModifiedDate":"2016-10-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            .configure(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS, false)","lastModifiedDate":"2016-10-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            .configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false)","lastModifiedDate":"2016-10-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            .setVisibility(PropertyAccessor.ALL, JsonAutoDetect.Visibility.NONE)","lastModifiedDate":"2016-10-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            .setVisibility(PropertyAccessor.FIELD, JsonAutoDetect.Visibility.ANY)","lastModifiedDate":"2016-10-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            .registerModule(new SimpleModule(\"SimpleModule\")","lastModifiedDate":"2016-10-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                    .addSerializer(Level.class, new ToStringSerializer())","lastModifiedDate":"2016-10-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                    .addDeserializer(Level.class, new LevelDeserializer(Level.class)));","lastModifiedDate":"2016-10-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    static \u003cT\u003e void serializeObjectToJsonFile(Path jsonFile, T objectToSerialize) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        FileUtil.writeToFile(jsonFile, toJsonString(objectToSerialize));","lastModifiedDate":"2016-10-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    static \u003cT\u003e T deserializeObjectFromJsonFile(Path jsonFile, Class\u003cT\u003e classOfObjectToDeserialize)","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return fromJsonString(FileUtil.readFromFile(jsonFile), classOfObjectToDeserialize);","lastModifiedDate":"2016-10-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Returns the JSON object from the given file or {@code Optional.empty()} object if the file is not found.","lastModifiedDate":"2023-06-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * If any values are missing from the file, default values will be used, as long as the file is a valid JSON file.","lastModifiedDate":"2023-06-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-06-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * @param filePath cannot be null.","lastModifiedDate":"2016-10-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @param classOfObjectToDeserialize JSON file has to correspond to the structure in the class given here.","lastModifiedDate":"2023-06-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * @throws DataLoadingException if loading of the JSON file failed.","lastModifiedDate":"2023-06-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Optional\u003cT\u003e readJsonFile(","lastModifiedDate":"2016-10-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            Path filePath, Class\u003cT\u003e classOfObjectToDeserialize) throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (!Files.exists(filePath)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2016-10-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logger.info(\"JSON file \" + filePath + \" found.\");","lastModifiedDate":"2023-01-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        T jsonFile;","lastModifiedDate":"2016-10-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-10-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            jsonFile \u003d deserializeObjectFromJsonFile(filePath, classOfObjectToDeserialize);","lastModifiedDate":"2018-04-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            logger.warning(\"Error reading from jsonFile file \" + filePath + \": \" + e);","lastModifiedDate":"2018-04-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            throw new DataLoadingException(e);","lastModifiedDate":"2023-06-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return Optional.of(jsonFile);","lastModifiedDate":"2016-10-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Saves the Json object to the specified file.","lastModifiedDate":"2016-10-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Overwrites existing file if it exists, creates a new file if it doesn\u0027t.","lastModifiedDate":"2016-10-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * @param jsonFile cannot be null","lastModifiedDate":"2016-10-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @param filePath cannot be null","lastModifiedDate":"2016-10-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * @throws IOException if there was an error during writing to the file","lastModifiedDate":"2016-10-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e void saveJsonFile(T jsonFile, Path filePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        requireNonNull(jsonFile);","lastModifiedDate":"2017-05-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        serializeObjectToJsonFile(filePath, jsonFile);","lastModifiedDate":"2018-04-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * Converts a given string representation of a JSON data to instance of a class","lastModifiedDate":"2016-10-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * @param \u003cT\u003e The generic type to create an instance of","lastModifiedDate":"2016-10-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * @return The instance of T with the specified values in the JSON string","lastModifiedDate":"2016-10-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e T fromJsonString(String json, Class\u003cT\u003e instanceClass) throws IOException {","lastModifiedDate":"2016-10-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        return objectMapper.readValue(json, instanceClass);","lastModifiedDate":"2016-10-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * Converts a given instance of a class into its JSON data string representation","lastModifiedDate":"2016-10-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * @param instance The T object to be converted into the JSON string","lastModifiedDate":"2016-10-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * @param \u003cT\u003e The generic type to create an instance of","lastModifiedDate":"2016-10-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * @return JSON data representation of the given class instance, in string","lastModifiedDate":"2016-10-19"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e String toJsonString(T instance) throws JsonProcessingException {","lastModifiedDate":"2016-10-19"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        return objectMapper.writerWithDefaultPrettyPrinter().writeValueAsString(instance);","lastModifiedDate":"2016-10-19"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * Contains methods that retrieve logging level from serialized string.","lastModifiedDate":"2017-08-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    private static class LevelDeserializer extends FromStringDeserializer\u003cLevel\u003e {","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        protected LevelDeserializer(Class\u003c?\u003e vc) {","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            super(vc);","lastModifiedDate":"2016-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        protected Level _deserialize(String value, DeserializationContext ctxt) {","lastModifiedDate":"2018-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            return getLoggingLevel(value);","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"         * Gets the logging level that matches loggingLevelString","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"         * \u003cp\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"         * Returns null if there are no matches","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        private Level getLoggingLevel(String loggingLevelString) {","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            return Level.parse(loggingLevelString);","lastModifiedDate":"2016-09-09"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        public Class\u003cLevel\u003e handledType() {","lastModifiedDate":"2016-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            return Level.class;","lastModifiedDate":"2016-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"kiatkat":3,"-":141}},{"path":"src/main/java/profplan/commons/util/StringUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kiatkat"},"content":"package profplan.commons.util;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"kiatkat"},"content":"import static profplan.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.StringWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Helper functions for handling strings.","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StringUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Returns true if the {@code sentence} contains the {@code word}.","lastModifiedDate":"2016-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     *   Ignores case, but a full word match is required.","lastModifiedDate":"2016-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     *   \u003cbr\u003eexamples:\u003cpre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"abc\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"DEF\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"AB\") \u003d\u003d false //not a full word match","lastModifiedDate":"2016-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *       \u003c/pre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param sentence cannot be null","lastModifiedDate":"2016-10-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @param word cannot be null, cannot be empty, must be a single word","lastModifiedDate":"2016-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static boolean containsWordIgnoreCase(String sentence, String word) {","lastModifiedDate":"2016-10-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        requireNonNull(sentence);","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(word);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        String preppedWord \u003d word.trim();","lastModifiedDate":"2016-10-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        checkArgument(!preppedWord.isEmpty(), \"Word parameter cannot be empty\");","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        checkArgument(preppedWord.split(\"\\\\s+\").length \u003d\u003d 1, \"Word parameter should be a single word\");","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        String preppedSentence \u003d sentence;","lastModifiedDate":"2016-10-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        String[] wordsInPreppedSentence \u003d preppedSentence.split(\"\\\\s+\");","lastModifiedDate":"2016-10-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return Arrays.stream(wordsInPreppedSentence)","lastModifiedDate":"2018-01-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                .anyMatch(preppedWord::equalsIgnoreCase);","lastModifiedDate":"2018-01-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Returns a detailed message of the t, including the stack trace.","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static String getDetails(Throwable t) {","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        requireNonNull(t);","lastModifiedDate":"2017-05-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        StringWriter sw \u003d new StringWriter();","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        t.printStackTrace(new PrintWriter(sw));","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return t.getMessage() + \"\\n\" + sw.toString();","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Returns true if {@code s} represents a non-zero unsigned integer","lastModifiedDate":"2017-06-02"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * e.g. 1, 2, 3, ..., {@code Integer.MAX_VALUE} \u003cbr\u003e","lastModifiedDate":"2017-06-02"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Will return false for any other non-null string input","lastModifiedDate":"2017-06-02"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * e.g. empty string, \"-1\", \"0\", \"+1\", and \" 2 \" (untrimmed), \"3 0\" (contains whitespace), \"1 a\" (contains letters)","lastModifiedDate":"2017-06-02"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code s} is null.","lastModifiedDate":"2017-06-02"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static boolean isNonZeroUnsignedInteger(String s) {","lastModifiedDate":"2017-06-02"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        requireNonNull(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-06-02"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            int value \u003d Integer.parseInt(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            return value \u003e 0 \u0026\u0026 !s.startsWith(\"+\"); // \"+1\" is successfully parsed by Integer#parseInt(String)","lastModifiedDate":"2017-06-02"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2017-06-02"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-06-02"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-02"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"kiatkat":2,"-":66}},{"path":"src/main/java/profplan/commons/util/ToStringBuilder.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kiatkat"},"content":"package profplan.commons.util;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Builds a string representation of an object that is suitable as the return value of {@link Object#toString()}.","lastModifiedDate":"2019-02-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2019-02-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class ToStringBuilder {","lastModifiedDate":"2019-02-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    private static final String OBJECT_PREFIX \u003d \"{\";","lastModifiedDate":"2019-02-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    private static final String OBJECT_SUFFIX \u003d \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    private static final String FIELD_SEPARATOR \u003d \", \";","lastModifiedDate":"2019-02-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    private static final String FIELD_NAME_VALUE_SEPARATOR \u003d \"\u003d\";","lastModifiedDate":"2019-02-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final StringBuilder stringBuilder \u003d new StringBuilder();","lastModifiedDate":"2019-02-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private boolean hasField;","lastModifiedDate":"2019-02-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-02-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Constructs a {@code ToStringBuilder} whose formatted output will be prefixed with {@code objectName}.","lastModifiedDate":"2019-02-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-02-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public ToStringBuilder(String objectName) {","lastModifiedDate":"2019-02-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        stringBuilder.append(objectName).append(OBJECT_PREFIX);","lastModifiedDate":"2019-02-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-02-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs a {@code ToStringBuilder} whose formatted output will be prefixed with the","lastModifiedDate":"2019-02-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * canonical class name of {@code object}.","lastModifiedDate":"2019-02-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-02-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public ToStringBuilder(Object object) {","lastModifiedDate":"2019-02-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this(object.getClass().getCanonicalName());","lastModifiedDate":"2019-02-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-02-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Adds a field name/value pair to the output string.","lastModifiedDate":"2019-02-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2019-02-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @param fieldName The name of the field.","lastModifiedDate":"2019-02-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @param fieldValue The value of the field.","lastModifiedDate":"2019-02-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @return A reference to this {@code ToStringBuilder} object, allowing method calls to be chained.","lastModifiedDate":"2019-02-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-02-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public ToStringBuilder add(String fieldName, Object fieldValue) {","lastModifiedDate":"2019-02-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (hasField) {","lastModifiedDate":"2019-02-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            stringBuilder.append(FIELD_SEPARATOR);","lastModifiedDate":"2019-02-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-02-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        stringBuilder.append(fieldName).append(FIELD_NAME_VALUE_SEPARATOR).append(fieldValue);","lastModifiedDate":"2019-02-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        hasField \u003d true;","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-02-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Returns the built formatted string representation.","lastModifiedDate":"2019-02-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-02-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return stringBuilder.toString() + OBJECT_SUFFIX;","lastModifiedDate":"2019-02-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-02-23"}],"authorContributionMap":{"kiatkat":1,"-":52}},{"path":"src/main/java/profplan/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kiatkat"},"content":"package profplan.logic;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"kiatkat"},"content":"import profplan.commons.core.GuiSettings;","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"kiatkat"},"content":"import profplan.logic.commands.CommandResult;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"kiatkat"},"content":"import profplan.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"kiatkat"},"content":"import profplan.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"kiatkat"},"content":"import profplan.model.Model;","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"kiatkat"},"content":"import profplan.model.ReadOnlyProfPlan;","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"newway1814"},"content":"import profplan.model.task.Task;","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":28,"author":{"gitId":"jack1e0"},"content":"     * Returns the ProfPlan.","lastModifiedDate":"2023-11-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":30,"author":{"gitId":"kiatkat"},"content":"     * @see Model#getProfPlan()","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":32,"author":{"gitId":"kiatkat"},"content":"    ReadOnlyProfPlan getProfPlan();","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":34,"author":{"gitId":"newway1814"},"content":"    /** Returns an unmodifiable view of the filtered list of tasks */","lastModifiedDate":"2023-10-16"},{"lineNumber":35,"author":{"gitId":"newway1814"},"content":"    ObservableList\u003cTask\u003e getFilteredTaskList();","lastModifiedDate":"2023-10-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"eyelessrhyme7"},"content":"     * Returns the user prefs\u0027 task list file path.","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"kiatkat"},"content":"    Path getProfPlanFilePath();","lastModifiedDate":"2023-10-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"jack1e0":1,"kiatkat":10,"eyelessrhyme7":1,"-":36,"newway1814":3}},{"path":"src/main/java/profplan/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kiatkat"},"content":"package profplan.logic;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.AccessDeniedException;","lastModifiedDate":"2023-06-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"kiatkat"},"content":"import profplan.commons.core.GuiSettings;","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"kiatkat"},"content":"import profplan.commons.core.LogsCenter;","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"kiatkat"},"content":"import profplan.logic.commands.Command;","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"kiatkat"},"content":"import profplan.logic.commands.CommandResult;","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"kiatkat"},"content":"import profplan.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"kiatkat"},"content":"import profplan.logic.parser.ProfPlanParser;","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"kiatkat"},"content":"import profplan.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"kiatkat"},"content":"import profplan.model.Model;","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"kiatkat"},"content":"import profplan.model.ReadOnlyProfPlan;","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"newway1814"},"content":"import profplan.model.task.Task;","lastModifiedDate":"2023-10-16"},{"lineNumber":19,"author":{"gitId":"kiatkat"},"content":"import profplan.storage.Storage;","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_FORMAT \u003d \"Could not save data due to the following error: %s\";","lastModifiedDate":"2023-06-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_PERMISSION_ERROR_FORMAT \u003d","lastModifiedDate":"2023-06-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            \"Could not save data to file %s due to insufficient permissions to write to the file or the folder.\";","lastModifiedDate":"2023-06-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"kiatkat"},"content":"    private final ProfPlanParser profPlanParser;","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"kiatkat"},"content":"        profPlanParser \u003d new ProfPlanParser();","lastModifiedDate":"2023-10-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"kiatkat"},"content":"        Command command \u003d profPlanParser.parseCommand(commandText);","lastModifiedDate":"2023-10-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"kiatkat"},"content":"            storage.saveProfPlan(model.getProfPlan());","lastModifiedDate":"2023-10-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        } catch (AccessDeniedException e) {","lastModifiedDate":"2023-06-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            throw new CommandException(String.format(FILE_OPS_PERMISSION_ERROR_FORMAT, e.getMessage()), e);","lastModifiedDate":"2023-06-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            throw new CommandException(String.format(FILE_OPS_ERROR_FORMAT, ioe.getMessage()), ioe);","lastModifiedDate":"2023-06-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":65,"author":{"gitId":"kiatkat"},"content":"    public ReadOnlyProfPlan getProfPlan() {","lastModifiedDate":"2023-10-13"},{"lineNumber":66,"author":{"gitId":"kiatkat"},"content":"        return model.getProfPlan();","lastModifiedDate":"2023-10-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":70,"author":{"gitId":"newway1814"},"content":"    public ObservableList\u003cTask\u003e getFilteredTaskList() {","lastModifiedDate":"2023-10-16"},{"lineNumber":71,"author":{"gitId":"newway1814"},"content":"        return model.getFilteredTaskList();","lastModifiedDate":"2023-10-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"kiatkat"},"content":"    public Path getProfPlanFilePath() {","lastModifiedDate":"2023-10-13"},{"lineNumber":76,"author":{"gitId":"kiatkat"},"content":"        return model.getProfPlanFilePath();","lastModifiedDate":"2023-10-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"kiatkat":19,"-":66,"newway1814":3}},{"path":"src/main/java/profplan/logic/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kiatkat"},"content":"package profplan.logic;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2023-07-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-07-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-07-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":7,"author":{"gitId":"eyelessrhyme7"},"content":"import profplan.logic.commands.AddCommand;","lastModifiedDate":"2023-11-11"},{"lineNumber":8,"author":{"gitId":"kiatkat"},"content":"import profplan.logic.parser.Prefix;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"newway1814"},"content":"import profplan.model.task.Task;","lastModifiedDate":"2023-10-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"newway1814"},"content":"    public static final String MESSAGE_INVALID_TASK_DISPLAYED_INDEX \u003d \"The task index provided is invalid\";","lastModifiedDate":"2023-10-16"},{"lineNumber":19,"author":{"gitId":"newway1814"},"content":"    public static final String MESSAGE_TASKS_LISTED_OVERVIEW \u003d \"%1$d tasks listed!\";","lastModifiedDate":"2023-10-16"},{"lineNumber":20,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":21,"author":{"gitId":"eyelessrhyme7"},"content":"    public static final String MESSAGE_ADD_COMMAND_INVALID \u003d \"Invalid command format! \\n\"","lastModifiedDate":"2023-11-11"},{"lineNumber":22,"author":{"gitId":"eyelessrhyme7"},"content":"            + \"add: Adds a task to the task list.\\n\"","lastModifiedDate":"2023-11-11"},{"lineNumber":23,"author":{"gitId":"eyelessrhyme7"},"content":"            + \"Compulsory Parameters: n/[name] p/[priority] d/[dueDate] \\n\"","lastModifiedDate":"2023-11-11"},{"lineNumber":24,"author":{"gitId":"eyelessrhyme7"},"content":"            + \"Optional Parameters: recur/[recur] t/[tag...] l/[link] des/[description]\\n\"","lastModifiedDate":"2023-11-11"},{"lineNumber":25,"author":{"gitId":"eyelessrhyme7"},"content":"            + \"Example: add n/Grade assignments p/1 t/assignment t/grade d/01-01-2023 l/www.example.com\";","lastModifiedDate":"2023-11-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_FIELDS \u003d","lastModifiedDate":"2023-07-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                \"Multiple values specified for the following single-valued field(s): \";","lastModifiedDate":"2023-07-14"},{"lineNumber":28,"author":{"gitId":"yarnmengnus"},"content":"    public static final String MESSAGE_INVALID_COMMAND_WORD \u003d \"The command word specified is not a command\";","lastModifiedDate":"2023-10-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-07-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Returns an error message indicating the duplicate prefixes.","lastModifiedDate":"2023-07-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-07-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static String getErrorMessageForDuplicatePrefixes(Prefix... duplicatePrefixes) {","lastModifiedDate":"2023-07-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assert duplicatePrefixes.length \u003e 0;","lastModifiedDate":"2023-07-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Set\u003cString\u003e duplicateFields \u003d","lastModifiedDate":"2023-07-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                Stream.of(duplicatePrefixes).map(Prefix::toString).collect(Collectors.toSet());","lastModifiedDate":"2023-07-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":39,"author":{"gitId":"eyelessrhyme7"},"content":"        return String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_FULL_HELP);","lastModifiedDate":"2023-11-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"newway1814"},"content":"     * Formats the {@code task} for display to the user.","lastModifiedDate":"2023-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"newway1814"},"content":"    public static String format(Task task) {","lastModifiedDate":"2023-10-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2019-02-23"},{"lineNumber":47,"author":{"gitId":"newway1814"},"content":"        builder.append(task.getName())","lastModifiedDate":"2023-10-16"},{"lineNumber":48,"author":{"gitId":"eyelessrhyme7"},"content":"                .append(\"; Priority: \")","lastModifiedDate":"2023-10-17"},{"lineNumber":49,"author":{"gitId":"eyelessrhyme7"},"content":"                .append(task.getPriority())","lastModifiedDate":"2023-10-17"},{"lineNumber":50,"author":{"gitId":"newway1814"},"content":"                .append(\"; Status: \")","lastModifiedDate":"2023-10-30"},{"lineNumber":51,"author":{"gitId":"newway1814"},"content":"                .append(task.getStatus())","lastModifiedDate":"2023-10-30"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                .append(\"; Tags: \");","lastModifiedDate":"2019-02-23"},{"lineNumber":53,"author":{"gitId":"newway1814"},"content":"        task.getTags().forEach(builder::append);","lastModifiedDate":"2023-10-16"},{"lineNumber":54,"author":{"gitId":"jack1e0"},"content":"        builder.append(\"; DueDate: \")","lastModifiedDate":"2023-10-27"},{"lineNumber":55,"author":{"gitId":"jack1e0"},"content":"                .append(task.getDueDate())","lastModifiedDate":"2023-10-27"},{"lineNumber":56,"author":{"gitId":"jack1e0"},"content":"                .append(\"; Link: \")","lastModifiedDate":"2023-10-27"},{"lineNumber":57,"author":{"gitId":"yarnmengnus"},"content":"                .append(task.getLink());","lastModifiedDate":"2023-10-17"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"yarnmengnus":2,"jack1e0":3,"kiatkat":2,"eyelessrhyme7":10,"-":35,"newway1814":9}},{"path":"src/main/java/profplan/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kiatkat"},"content":"package profplan.logic.commands;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"jack1e0"},"content":"import static profplan.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2023-11-02"},{"lineNumber":5,"author":{"gitId":"jack1e0"},"content":"import static profplan.logic.parser.CliSyntax.PREFIX_DUEDATE;","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"yarnmengnus"},"content":"import static profplan.logic.parser.CliSyntax.PREFIX_LINK;","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"kiatkat"},"content":"import static profplan.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"eyelessrhyme7"},"content":"import static profplan.logic.parser.CliSyntax.PREFIX_PRIORITY;","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"jack1e0"},"content":"import static profplan.logic.parser.CliSyntax.PREFIX_RECURRING;","lastModifiedDate":"2023-11-02"},{"lineNumber":10,"author":{"gitId":"kiatkat"},"content":"import static profplan.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"kiatkat"},"content":"import profplan.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"kiatkat"},"content":"import profplan.logic.Messages;","lastModifiedDate":"2023-10-14"},{"lineNumber":14,"author":{"gitId":"kiatkat"},"content":"import profplan.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"kiatkat"},"content":"import profplan.model.Model;","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"newway1814"},"content":"import profplan.model.task.Task;","lastModifiedDate":"2023-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"eyelessrhyme7"},"content":" * Adds a task to the task list.","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"yarnmengnus"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a task to the task list.\";","lastModifiedDate":"2023-11-10"},{"lineNumber":26,"author":{"gitId":"yarnmengnus"},"content":"    public static final String MESSAGE_DETAILS \u003d \"Compulsory Parameters: \"","lastModifiedDate":"2023-11-11"},{"lineNumber":27,"author":{"gitId":"yarnmengnus"},"content":"            + PREFIX_NAME + \"[name] \"","lastModifiedDate":"2023-11-11"},{"lineNumber":28,"author":{"gitId":"yarnmengnus"},"content":"            + PREFIX_PRIORITY + \"[priority] \"","lastModifiedDate":"2023-11-11"},{"lineNumber":29,"author":{"gitId":"yarnmengnus"},"content":"            + PREFIX_DUEDATE + \"[dueDate] \"","lastModifiedDate":"2023-11-11"},{"lineNumber":30,"author":{"gitId":"yarnmengnus"},"content":"            + \"\\nOptional Parameters: \"","lastModifiedDate":"2023-11-11"},{"lineNumber":31,"author":{"gitId":"yarnmengnus"},"content":"            + PREFIX_RECURRING + \"[recur] \"","lastModifiedDate":"2023-11-11"},{"lineNumber":32,"author":{"gitId":"yarnmengnus"},"content":"            + PREFIX_TAG + \"[tag...] \"","lastModifiedDate":"2023-11-11"},{"lineNumber":33,"author":{"gitId":"yarnmengnus"},"content":"            + PREFIX_LINK + \"[link] \"","lastModifiedDate":"2023-11-11"},{"lineNumber":34,"author":{"gitId":"yarnmengnus"},"content":"            + PREFIX_DESCRIPTION + \"[description]\";","lastModifiedDate":"2023-11-11"},{"lineNumber":35,"author":{"gitId":"yarnmengnus"},"content":"    public static final String MESSAGE_EXAMPLE \u003d \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2023-10-30"},{"lineNumber":36,"author":{"gitId":"jack1e0"},"content":"            + PREFIX_NAME + \"Grade assignments \"","lastModifiedDate":"2023-10-26"},{"lineNumber":37,"author":{"gitId":"jack1e0"},"content":"            + PREFIX_PRIORITY + \"1 \"","lastModifiedDate":"2023-10-26"},{"lineNumber":38,"author":{"gitId":"jack1e0"},"content":"            + PREFIX_TAG + \"assignment \"","lastModifiedDate":"2023-10-26"},{"lineNumber":39,"author":{"gitId":"jack1e0"},"content":"            + PREFIX_TAG + \"grade \"","lastModifiedDate":"2023-10-26"},{"lineNumber":40,"author":{"gitId":"jack1e0"},"content":"            + PREFIX_DUEDATE + \"01-01-2023 \"","lastModifiedDate":"2023-10-25"},{"lineNumber":41,"author":{"gitId":"yarnmengnus"},"content":"            + PREFIX_LINK + \"www.example.com\";","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"yarnmengnus"},"content":"    public static final String MESSAGE_FULL_HELP \u003d MESSAGE_USAGE + \"\\n\" + MESSAGE_DETAILS + \"\\n\" + MESSAGE_EXAMPLE;","lastModifiedDate":"2023-11-11"},{"lineNumber":43,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":44,"author":{"gitId":"newway1814"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New task added: %1$s\";","lastModifiedDate":"2023-10-16"},{"lineNumber":45,"author":{"gitId":"eyelessrhyme7"},"content":"    public static final String MESSAGE_DUPLICATE_TASK \u003d \"This task already exists in the task list\";","lastModifiedDate":"2023-10-17"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"newway1814"},"content":"    private final Task toAdd;","lastModifiedDate":"2023-10-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"newway1814"},"content":"     * Creates an AddCommand to add the specified {@code Task}","lastModifiedDate":"2023-10-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"newway1814"},"content":"    public AddCommand(Task task) {","lastModifiedDate":"2023-10-16"},{"lineNumber":53,"author":{"gitId":"newway1814"},"content":"        requireNonNull(task);","lastModifiedDate":"2023-10-16"},{"lineNumber":54,"author":{"gitId":"newway1814"},"content":"        toAdd \u003d task;","lastModifiedDate":"2023-10-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":61,"author":{"gitId":"newway1814"},"content":"        if (model.hasTask(toAdd)) {","lastModifiedDate":"2023-10-16"},{"lineNumber":62,"author":{"gitId":"newway1814"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_TASK);","lastModifiedDate":"2023-10-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":65,"author":{"gitId":"newway1814"},"content":"        model.addTask(toAdd);","lastModifiedDate":"2023-10-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, Messages.format(toAdd)));","lastModifiedDate":"2019-02-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        if (!(other instanceof AddCommand)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        AddCommand otherAddCommand \u003d (AddCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return toAdd.equals(otherAddCommand.toAdd);","lastModifiedDate":"2023-07-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"                .add(\"toAdd\", toAdd)","lastModifiedDate":"2019-02-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"yarnmengnus":15,"jack1e0":8,"kiatkat":7,"eyelessrhyme7":3,"-":47,"newway1814":10}},{"path":"src/main/java/profplan/logic/commands/ClearCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kiatkat"},"content":"package profplan.logic.commands;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"kiatkat"},"content":"import profplan.model.Model;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"kiatkat"},"content":"import profplan.model.ProfPlan;","lastModifiedDate":"2023-10-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"eyelessrhyme7"},"content":" * Clears the tasklist.","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ClearCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"clear\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"yarnmengnus"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \"Clears the entire task list. This is IRREVERSIBLE.\";","lastModifiedDate":"2023-11-11"},{"lineNumber":15,"author":{"gitId":"yarnmengnus"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"All Tasks Deleted Successfully Prof!\";","lastModifiedDate":"2023-11-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":21,"author":{"gitId":"kiatkat"},"content":"        model.setProfPlan(new ProfPlan());","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"yarnmengnus":2,"kiatkat":4,"eyelessrhyme7":1,"-":17}},{"path":"src/main/java/profplan/logic/commands/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kiatkat"},"content":"package profplan.logic.commands;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"kiatkat"},"content":"import profplan.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"kiatkat"},"content":"import profplan.model.Model;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a command with hidden internal logic and the ability to be executed.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public abstract class Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result message.","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * @return feedback message of the operation result for display","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public abstract CommandResult execute(Model model) throws CommandException;","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"kiatkat":3,"-":17}},{"path":"src/main/java/profplan/logic/commands/CommandResult.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kiatkat"},"content":"package profplan.logic.commands;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-12-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"kiatkat"},"content":"import profplan.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Represents the result of a command execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class CommandResult {","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final String feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /** Help information should be shown to the user. */","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final boolean showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /** The application should exit. */","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final boolean exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified fields.","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser, boolean showHelp, boolean exit) {","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.showHelp \u003d showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this.exit \u003d exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser},","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * and other fields set to their default value.","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this(feedbackToUser, false, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public String getFeedbackToUser() {","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public boolean isShowHelp() {","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean isExit() {","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        if (!(other instanceof CommandResult)) {","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        CommandResult otherCommandResult \u003d (CommandResult) other;","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return feedbackToUser.equals(otherCommandResult.feedbackToUser)","lastModifiedDate":"2018-12-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                \u0026\u0026 showHelp \u003d\u003d otherCommandResult.showHelp","lastModifiedDate":"2018-12-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                \u0026\u0026 exit \u003d\u003d otherCommandResult.exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return Objects.hash(feedbackToUser, showHelp, exit);","lastModifiedDate":"2018-12-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                .add(\"feedbackToUser\", feedbackToUser)","lastModifiedDate":"2019-02-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                .add(\"showHelp\", showHelp)","lastModifiedDate":"2019-02-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .add(\"exit\", exit)","lastModifiedDate":"2019-02-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"kiatkat":2,"-":80}},{"path":"src/main/java/profplan/logic/commands/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kiatkat"},"content":"package profplan.logic.commands;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-09-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"kiatkat"},"content":"import profplan.commons.core.index.Index;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"kiatkat"},"content":"import profplan.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"kiatkat"},"content":"import profplan.logic.Messages;","lastModifiedDate":"2023-10-14"},{"lineNumber":10,"author":{"gitId":"kiatkat"},"content":"import profplan.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"kiatkat"},"content":"import profplan.model.Model;","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"newway1814"},"content":"import profplan.model.task.Task;","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"jack1e0"},"content":" * Deletes a task identified using its displayed index from the task list.","lastModifiedDate":"2023-10-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"yarnmengnus"},"content":"            + \": Deletes the task identified by the index number used in the displayed task list.\";","lastModifiedDate":"2023-11-10"},{"lineNumber":23,"author":{"gitId":"yarnmengnus"},"content":"    public static final String MESSAGE_EXAMPLE \u003d \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2023-10-30"},{"lineNumber":24,"author":{"gitId":"yarnmengnus"},"content":"    public static final String MESSAGE_DETAILS \u003d \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2023-10-30"},{"lineNumber":25,"author":{"gitId":"yarnmengnus"},"content":"            + \"Tip: Use \\\"delete all\\\" to delete all tasks. \"","lastModifiedDate":"2023-10-30"},{"lineNumber":26,"author":{"gitId":"yarnmengnus"},"content":"            + \"Be careful, this is IRREVERSIBLE.\";","lastModifiedDate":"2023-11-11"},{"lineNumber":27,"author":{"gitId":"yarnmengnus"},"content":"    public static final String MESSAGE_FULL_HELP \u003d MESSAGE_USAGE + \"\\n\" + MESSAGE_DETAILS + \"\\n\" + MESSAGE_EXAMPLE;","lastModifiedDate":"2023-11-11"},{"lineNumber":28,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"newway1814"},"content":"    public static final String MESSAGE_DELETE_TASK_SUCCESS \u003d \"Deleted Task: %1$s\";","lastModifiedDate":"2023-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"newway1814"},"content":"    public static final String MESSAGE_DELETE_ALL_TASKS_SUCCESS \u003d \"All Tasks Deleted Successfully Prof!\";","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final Index targetIndex;","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public DeleteCommand(Index targetIndex) {","lastModifiedDate":"2017-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2016-09-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"newway1814"},"content":"    public DeleteCommand() {","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"newway1814"},"content":"        this.targetIndex \u003d null;","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"newway1814"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":46,"author":{"gitId":"newway1814"},"content":"        List\u003cTask\u003e lastShownList \u003d model.getFilteredTaskList();","lastModifiedDate":"2023-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":48,"author":{"gitId":"newway1814"},"content":"        if (targetIndex \u003d\u003d null \u0026\u0026 lastShownList.size() !\u003d 0) {","lastModifiedDate":"2023-11-03"},{"lineNumber":49,"author":{"gitId":"newway1814"},"content":"            model.deleteTask();","lastModifiedDate":"2023-10-17"},{"lineNumber":50,"author":{"gitId":"newway1814"},"content":"            return new CommandResult(MESSAGE_DELETE_ALL_TASKS_SUCCESS);","lastModifiedDate":"2023-10-17"},{"lineNumber":51,"author":{"gitId":"newway1814"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":52,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":53,"author":{"gitId":"newway1814"},"content":"        if (targetIndex \u003d\u003d null \u0026\u0026 lastShownList.size() \u003d\u003d 0) {","lastModifiedDate":"2023-11-03"},{"lineNumber":54,"author":{"gitId":"newway1814"},"content":"            return new CommandResult(\"Can not delete all tasks in empty Task List\");","lastModifiedDate":"2023-11-03"},{"lineNumber":55,"author":{"gitId":"newway1814"},"content":"        }","lastModifiedDate":"2023-11-03"},{"lineNumber":56,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":58,"author":{"gitId":"newway1814"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":61,"author":{"gitId":"newway1814"},"content":"        Task taskToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2023-10-16"},{"lineNumber":62,"author":{"gitId":"newway1814"},"content":"        model.deleteTask(taskToDelete);","lastModifiedDate":"2023-10-16"},{"lineNumber":63,"author":{"gitId":"newway1814"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_TASK_SUCCESS, Messages.format(taskToDelete)));","lastModifiedDate":"2023-10-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        if (!(other instanceof DeleteCommand)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        DeleteCommand otherDeleteCommand \u003d (DeleteCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":78,"author":{"gitId":"newway1814"},"content":"        if (targetIndex \u003d\u003d null \u0026\u0026 otherDeleteCommand.targetIndex \u003d\u003d null) {","lastModifiedDate":"2023-10-17"},{"lineNumber":79,"author":{"gitId":"newway1814"},"content":"            return true;","lastModifiedDate":"2023-10-17"},{"lineNumber":80,"author":{"gitId":"newway1814"},"content":"        } else if (targetIndex !\u003d null \u0026\u0026 otherDeleteCommand.targetIndex !\u003d null) {","lastModifiedDate":"2023-10-17"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            return targetIndex.equals(otherDeleteCommand.targetIndex);","lastModifiedDate":"2023-07-13"},{"lineNumber":82,"author":{"gitId":"newway1814"},"content":"        } else {","lastModifiedDate":"2023-10-17"},{"lineNumber":83,"author":{"gitId":"newway1814"},"content":"            return false;","lastModifiedDate":"2023-10-17"},{"lineNumber":84,"author":{"gitId":"newway1814"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"                .add(\"targetIndex\", targetIndex)","lastModifiedDate":"2019-02-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"yarnmengnus":6,"jack1e0":1,"kiatkat":6,"-":51,"newway1814":29}},{"path":"src/main/java/profplan/logic/commands/DescriptionCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kiatkat"},"content":"package profplan.logic.commands;","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"kiatkat"},"content":"import static profplan.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"kiatkat"},"content":"import java.util.List;","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"kiatkat"},"content":"import profplan.commons.core.index.Index;","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"kiatkat"},"content":"import profplan.logic.Messages;","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"kiatkat"},"content":"import profplan.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"kiatkat"},"content":"import profplan.model.Model;","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"kiatkat"},"content":"import profplan.model.task.Description;","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"kiatkat"},"content":"import profplan.model.task.Task;","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"kiatkat"},"content":"/**","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"kiatkat"},"content":" * Adds a description to a Task.","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"kiatkat"},"content":" */","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"kiatkat"},"content":"public class DescriptionCommand extends Command {","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"kiatkat"},"content":"    public static final String COMMAND_WORD \u003d \"description\";","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"kiatkat"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"kiatkat"},"content":"            + \": Edits the description of the task identified \"","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"yarnmengnus"},"content":"            + \"by the index number used in the last task listing.\";","lastModifiedDate":"2023-10-30"},{"lineNumber":24,"author":{"gitId":"yarnmengnus"},"content":"    public static final String MESSAGE_DETAILS \u003d \"Existing description will be overwritten by the input.\\n\"","lastModifiedDate":"2023-10-30"},{"lineNumber":25,"author":{"gitId":"kiatkat"},"content":"            + \"Parameters: [index] (must be a positive integer) \"","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"yarnmengnus"},"content":"            + \"des/ [description]\";","lastModifiedDate":"2023-11-11"},{"lineNumber":27,"author":{"gitId":"yarnmengnus"},"content":"    public static final String MESSAGE_EXAMPLE \u003d \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2023-10-30"},{"lineNumber":28,"author":{"gitId":"kiatkat"},"content":"            + \"des/ Put particular emphasis on recursion.\";","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"yarnmengnus"},"content":"    public static final String MESSAGE_FULL_HELP \u003d MESSAGE_USAGE + \"\\n\" + MESSAGE_DETAILS + \"\\n\" + MESSAGE_EXAMPLE;","lastModifiedDate":"2023-11-11"},{"lineNumber":30,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":31,"author":{"gitId":"kiatkat"},"content":"    public static final String MESSAGE_ADD_DESCRIPTION_SUCCESS \u003d \"Added description to Task %d\";","lastModifiedDate":"2023-10-30"},{"lineNumber":32,"author":{"gitId":"kiatkat"},"content":"    public static final String MESSAGE_DELETE_DESCRIPTION_SUCCESS \u003d \"Removed description from Task: %d\";","lastModifiedDate":"2023-10-30"},{"lineNumber":33,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":34,"author":{"gitId":"kiatkat"},"content":"    private final Index index;","lastModifiedDate":"2023-10-26"},{"lineNumber":35,"author":{"gitId":"kiatkat"},"content":"    private final Description description;","lastModifiedDate":"2023-10-26"},{"lineNumber":36,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":37,"author":{"gitId":"kiatkat"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":38,"author":{"gitId":"kiatkat"},"content":"     * @param index The index of the task to attach the description to.","lastModifiedDate":"2023-10-26"},{"lineNumber":39,"author":{"gitId":"kiatkat"},"content":"     * @param description The description to be added to the task.","lastModifiedDate":"2023-10-26"},{"lineNumber":40,"author":{"gitId":"kiatkat"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":41,"author":{"gitId":"kiatkat"},"content":"    public DescriptionCommand(Index index, Description description) {","lastModifiedDate":"2023-10-26"},{"lineNumber":42,"author":{"gitId":"kiatkat"},"content":"        requireAllNonNull(index, description);","lastModifiedDate":"2023-10-26"},{"lineNumber":43,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":44,"author":{"gitId":"kiatkat"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-10-26"},{"lineNumber":45,"author":{"gitId":"kiatkat"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-10-26"},{"lineNumber":46,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":47,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":48,"author":{"gitId":"kiatkat"},"content":"    @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":49,"author":{"gitId":"kiatkat"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-26"},{"lineNumber":50,"author":{"gitId":"kiatkat"},"content":"        List\u003cTask\u003e lastShownList \u003d model.getFilteredTaskList();","lastModifiedDate":"2023-10-26"},{"lineNumber":51,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":52,"author":{"gitId":"kiatkat"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-10-26"},{"lineNumber":53,"author":{"gitId":"kiatkat"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-26"},{"lineNumber":54,"author":{"gitId":"kiatkat"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":55,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":56,"author":{"gitId":"kiatkat"},"content":"        Task taskToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2023-10-26"},{"lineNumber":57,"author":{"gitId":"kiatkat"},"content":"        Task editedTask \u003d new Task(taskToEdit.getName(), taskToEdit.getPriority(),","lastModifiedDate":"2023-10-29"},{"lineNumber":58,"author":{"gitId":"kiatkat"},"content":"                taskToEdit.getIsRecurring(), taskToEdit.getRecurringType(),","lastModifiedDate":"2023-10-30"},{"lineNumber":59,"author":{"gitId":"kiatkat"},"content":"                taskToEdit.getTags(), taskToEdit.getDueDate(),","lastModifiedDate":"2023-10-29"},{"lineNumber":60,"author":{"gitId":"kiatkat"},"content":"                taskToEdit.getLink(), description);","lastModifiedDate":"2023-11-01"},{"lineNumber":61,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":62,"author":{"gitId":"kiatkat"},"content":"        model.setTask(taskToEdit, editedTask);","lastModifiedDate":"2023-10-26"},{"lineNumber":63,"author":{"gitId":"kiatkat"},"content":"        model.updateFilteredTaskList(Model.PREDICATE_SHOW_ALL_TASKS);","lastModifiedDate":"2023-10-26"},{"lineNumber":64,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":65,"author":{"gitId":"kiatkat"},"content":"        return new CommandResult(generateSuccessMessage(index.getOneBased()));","lastModifiedDate":"2023-10-30"},{"lineNumber":66,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":67,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":68,"author":{"gitId":"kiatkat"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":69,"author":{"gitId":"kiatkat"},"content":"     * Generates a command execution success message based on whether","lastModifiedDate":"2023-10-26"},{"lineNumber":70,"author":{"gitId":"kiatkat"},"content":"     * the description is added to or removed from {@code taskToEdit}.","lastModifiedDate":"2023-10-26"},{"lineNumber":71,"author":{"gitId":"kiatkat"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":72,"author":{"gitId":"kiatkat"},"content":"    private String generateSuccessMessage(int index) {","lastModifiedDate":"2023-10-30"},{"lineNumber":73,"author":{"gitId":"kiatkat"},"content":"        String message \u003d !description.description.isEmpty() ? MESSAGE_ADD_DESCRIPTION_SUCCESS","lastModifiedDate":"2023-10-26"},{"lineNumber":74,"author":{"gitId":"kiatkat"},"content":"                : MESSAGE_DELETE_DESCRIPTION_SUCCESS;","lastModifiedDate":"2023-10-26"},{"lineNumber":75,"author":{"gitId":"kiatkat"},"content":"        return String.format(message, index);","lastModifiedDate":"2023-10-30"},{"lineNumber":76,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":77,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":78,"author":{"gitId":"kiatkat"},"content":"    @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":79,"author":{"gitId":"kiatkat"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-26"},{"lineNumber":80,"author":{"gitId":"kiatkat"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-26"},{"lineNumber":81,"author":{"gitId":"kiatkat"},"content":"            return true;","lastModifiedDate":"2023-10-26"},{"lineNumber":82,"author":{"gitId":"kiatkat"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":83,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":84,"author":{"gitId":"kiatkat"},"content":"        if (!(other instanceof DescriptionCommand)) {","lastModifiedDate":"2023-10-26"},{"lineNumber":85,"author":{"gitId":"kiatkat"},"content":"            return false;","lastModifiedDate":"2023-10-26"},{"lineNumber":86,"author":{"gitId":"kiatkat"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":87,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":88,"author":{"gitId":"kiatkat"},"content":"        DescriptionCommand descriptionCommand \u003d (DescriptionCommand) other;","lastModifiedDate":"2023-10-26"},{"lineNumber":89,"author":{"gitId":"kiatkat"},"content":"        return index.equals(descriptionCommand.index) \u0026\u0026 description.equals(descriptionCommand.description);","lastModifiedDate":"2023-10-26"},{"lineNumber":90,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":91,"author":{"gitId":"kiatkat"},"content":"}","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"yarnmengnus":5,"kiatkat":86}},{"path":"src/main/java/profplan/logic/commands/DoNextCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"eyelessrhyme7"},"content":"package profplan.logic.commands;","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"eyelessrhyme7"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"eyelessrhyme7"},"content":"import profplan.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"eyelessrhyme7"},"content":"import profplan.model.Model;","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"eyelessrhyme7"},"content":"import profplan.model.task.Task;","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"eyelessrhyme7"},"content":"/**","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"eyelessrhyme7"},"content":" * Recommends the prof. which task to do next, based on the priority as well as urgency.","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"eyelessrhyme7"},"content":" */","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"eyelessrhyme7"},"content":"public class DoNextCommand extends Command {","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"eyelessrhyme7"},"content":"    public static final String COMMAND_WORD \u003d \"do_next\";","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"eyelessrhyme7"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Recommends the next task to do.\"","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"eyelessrhyme7"},"content":"            + \"Example: \" + COMMAND_WORD + \"\";","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"yarnmengnus"},"content":"    public static final String MESSAGE_FULL_HELP \u003d MESSAGE_USAGE;","lastModifiedDate":"2023-11-11"},{"lineNumber":19,"author":{"gitId":"eyelessrhyme7"},"content":"    public static final String MESSAGE_SUCCESS \u003d \" Here is the next task you need to do Prof:\";","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"eyelessrhyme7"},"content":"    @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"eyelessrhyme7"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"eyelessrhyme7"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-26"},{"lineNumber":25,"author":{"gitId":"eyelessrhyme7"},"content":"        Task t \u003d model.getDoNextTask();","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"eyelessrhyme7"},"content":"        if (t \u003d\u003d null) {","lastModifiedDate":"2023-11-10"},{"lineNumber":27,"author":{"gitId":"eyelessrhyme7"},"content":"            return new CommandResult(\"No more tasks to do Prof! Skies are clear ahead :)\");","lastModifiedDate":"2023-11-10"},{"lineNumber":28,"author":{"gitId":"eyelessrhyme7"},"content":"        } else {","lastModifiedDate":"2023-11-10"},{"lineNumber":29,"author":{"gitId":"eyelessrhyme7"},"content":"            return new CommandResult(MESSAGE_SUCCESS + \"\\n\" + t.beautifyString());","lastModifiedDate":"2023-10-26"},{"lineNumber":30,"author":{"gitId":"eyelessrhyme7"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":31,"author":{"gitId":"eyelessrhyme7"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":32,"author":{"gitId":"eyelessrhyme7"},"content":"}","lastModifiedDate":"2023-11-10"}],"authorContributionMap":{"yarnmengnus":1,"eyelessrhyme7":31}},{"path":"src/main/java/profplan/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kiatkat"},"content":"package profplan.logic.commands;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"jack1e0"},"content":"import static profplan.logic.parser.CliSyntax.PREFIX_DUEDATE;","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"yarnmengnus"},"content":"import static profplan.logic.parser.CliSyntax.PREFIX_LINK;","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"kiatkat"},"content":"import static profplan.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"eyelessrhyme7"},"content":"import static profplan.logic.parser.CliSyntax.PREFIX_PRIORITY;","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"yarnmengnus"},"content":"import static profplan.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2023-07-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":17,"author":{"gitId":"kiatkat"},"content":"import profplan.commons.core.index.Index;","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"kiatkat"},"content":"import profplan.commons.util.CollectionUtil;","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"kiatkat"},"content":"import profplan.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"kiatkat"},"content":"import profplan.logic.Messages;","lastModifiedDate":"2023-10-14"},{"lineNumber":21,"author":{"gitId":"kiatkat"},"content":"import profplan.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"kiatkat"},"content":"import profplan.model.Model;","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"kiatkat"},"content":"import profplan.model.tag.Tag;","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"jack1e0"},"content":"import profplan.model.task.DueDate;","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"yarnmengnus"},"content":"import profplan.model.task.Link;","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"newway1814"},"content":"import profplan.model.task.Name;","lastModifiedDate":"2023-10-16"},{"lineNumber":27,"author":{"gitId":"eyelessrhyme7"},"content":"import profplan.model.task.Priority;","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"yarnmengnus"},"content":"import profplan.model.task.Task;","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":33,"author":{"gitId":"eyelessrhyme7"},"content":" * Edits the details of an existing task in the task list.","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":39,"author":{"gitId":"newway1814"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the task identified \"","lastModifiedDate":"2023-10-16"},{"lineNumber":40,"author":{"gitId":"yarnmengnus"},"content":"            + \"by the index number used in the displayed task list. \";","lastModifiedDate":"2023-10-30"},{"lineNumber":41,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":42,"author":{"gitId":"yarnmengnus"},"content":"    public static final String MESSAGE_DETAILS \u003d \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2023-10-30"},{"lineNumber":43,"author":{"gitId":"yarnmengnus"},"content":"            + \"Parameters: [index] \"","lastModifiedDate":"2023-11-11"},{"lineNumber":44,"author":{"gitId":"yarnmengnus"},"content":"            + PREFIX_NAME + \"[name] \"","lastModifiedDate":"2023-11-11"},{"lineNumber":45,"author":{"gitId":"yarnmengnus"},"content":"            + PREFIX_PRIORITY + \"[priority] \"","lastModifiedDate":"2023-11-11"},{"lineNumber":46,"author":{"gitId":"yarnmengnus"},"content":"            + PREFIX_DUEDATE + \"[dueDate] \"","lastModifiedDate":"2023-11-11"},{"lineNumber":47,"author":{"gitId":"yarnmengnus"},"content":"            + PREFIX_TAG + \"[tag...] \"","lastModifiedDate":"2023-11-11"},{"lineNumber":48,"author":{"gitId":"yarnmengnus"},"content":"            + PREFIX_LINK + \"[link] \";","lastModifiedDate":"2023-11-11"},{"lineNumber":49,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":50,"author":{"gitId":"yarnmengnus"},"content":"    public static final String MESSAGE_EXAMPLE \u003d \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2023-10-30"},{"lineNumber":51,"author":{"gitId":"jack1e0"},"content":"            + PREFIX_PRIORITY + \"4 \";","lastModifiedDate":"2023-11-02"},{"lineNumber":52,"author":{"gitId":"yarnmengnus"},"content":"    public static final String MESSAGE_FULL_HELP \u003d MESSAGE_USAGE + \"\\n\" + MESSAGE_DETAILS + \"\\n\" + MESSAGE_EXAMPLE;","lastModifiedDate":"2023-11-11"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":54,"author":{"gitId":"newway1814"},"content":"    public static final String MESSAGE_EDIT_TASK_SUCCESS \u003d \"Edited Task: %1$s\";","lastModifiedDate":"2023-10-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":56,"author":{"gitId":"eyelessrhyme7"},"content":"    public static final String MESSAGE_DUPLICATE_TASK \u003d \"This task already exists in the task list.\";","lastModifiedDate":"2023-10-17"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":59,"author":{"gitId":"newway1814"},"content":"    private final EditTaskDescriptor editTaskDescriptor;","lastModifiedDate":"2023-10-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":62,"author":{"gitId":"newway1814"},"content":"     * @param index of the task in the filtered task list to edit","lastModifiedDate":"2023-10-16"},{"lineNumber":63,"author":{"gitId":"newway1814"},"content":"     * @param editTaskDescriptor details to edit the task with","lastModifiedDate":"2023-10-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":65,"author":{"gitId":"newway1814"},"content":"    public EditCommand(Index index, EditTaskDescriptor editTaskDescriptor) {","lastModifiedDate":"2023-10-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":67,"author":{"gitId":"newway1814"},"content":"        requireNonNull(editTaskDescriptor);","lastModifiedDate":"2023-10-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":70,"author":{"gitId":"newway1814"},"content":"        this.editTaskDescriptor \u003d new EditTaskDescriptor(editTaskDescriptor);","lastModifiedDate":"2023-10-16"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":76,"author":{"gitId":"newway1814"},"content":"        List\u003cTask\u003e lastShownList \u003d model.getFilteredTaskList();","lastModifiedDate":"2023-10-16"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"newway1814"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"newway1814"},"content":"        Task taskToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2023-10-16"},{"lineNumber":83,"author":{"gitId":"newway1814"},"content":"        Task editedTask \u003d createEditedTask(taskToEdit, editTaskDescriptor);","lastModifiedDate":"2023-10-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"newway1814"},"content":"        if (!taskToEdit.isSameTask(editedTask) \u0026\u0026 model.hasTask(editedTask)) {","lastModifiedDate":"2023-10-16"},{"lineNumber":86,"author":{"gitId":"newway1814"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_TASK);","lastModifiedDate":"2023-10-16"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":89,"author":{"gitId":"newway1814"},"content":"        model.setTask(taskToEdit, editedTask);","lastModifiedDate":"2023-10-16"},{"lineNumber":90,"author":{"gitId":"newway1814"},"content":"        model.updateFilteredTaskList(Model.PREDICATE_SHOW_ALL_TASKS);","lastModifiedDate":"2023-10-16"},{"lineNumber":91,"author":{"gitId":"newway1814"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_TASK_SUCCESS, Messages.format(editedTask)));","lastModifiedDate":"2023-10-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":95,"author":{"gitId":"newway1814"},"content":"     * Creates and returns a {@code Task} with the details of {@code taskToEdit}","lastModifiedDate":"2023-10-16"},{"lineNumber":96,"author":{"gitId":"newway1814"},"content":"     * edited with {@code editTaskDescriptor}.","lastModifiedDate":"2023-10-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":98,"author":{"gitId":"newway1814"},"content":"    private static Task createEditedTask(Task taskToEdit, EditTaskDescriptor editTaskDescriptor) {","lastModifiedDate":"2023-10-16"},{"lineNumber":99,"author":{"gitId":"newway1814"},"content":"        assert taskToEdit !\u003d null;","lastModifiedDate":"2023-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":101,"author":{"gitId":"newway1814"},"content":"        Name updatedName \u003d editTaskDescriptor.getName().orElse(taskToEdit.getName());","lastModifiedDate":"2023-10-16"},{"lineNumber":102,"author":{"gitId":"eyelessrhyme7"},"content":"        Priority updatedPriority \u003d editTaskDescriptor.getPriority().orElse(taskToEdit.getPriority());","lastModifiedDate":"2023-10-17"},{"lineNumber":103,"author":{"gitId":"yarnmengnus"},"content":"        Link updatedLink \u003d editTaskDescriptor.getLink().orElse(taskToEdit.getLink());","lastModifiedDate":"2023-10-17"},{"lineNumber":104,"author":{"gitId":"newway1814"},"content":"        Set\u003cTag\u003e updatedTags \u003d editTaskDescriptor.getTags().orElse(taskToEdit.getTags());","lastModifiedDate":"2023-10-16"},{"lineNumber":105,"author":{"gitId":"jack1e0"},"content":"        DueDate updatedDueDate \u003d editTaskDescriptor.getDueDate().orElse(taskToEdit.getDueDate());","lastModifiedDate":"2023-10-17"},{"lineNumber":106,"author":{"gitId":"kiatkat"},"content":"        return new Task(updatedName, updatedPriority, taskToEdit.getIsRecurring(),","lastModifiedDate":"2023-10-30"},{"lineNumber":107,"author":{"gitId":"kiatkat"},"content":"                taskToEdit.getRecurringType(), updatedTags,","lastModifiedDate":"2023-10-30"},{"lineNumber":108,"author":{"gitId":"kiatkat"},"content":"                        updatedDueDate, updatedLink, taskToEdit.getDescription());","lastModifiedDate":"2023-11-01"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        EditCommand otherEditCommand \u003d (EditCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        return index.equals(otherEditCommand.index)","lastModifiedDate":"2023-07-13"},{"lineNumber":124,"author":{"gitId":"newway1814"},"content":"                \u0026\u0026 editTaskDescriptor.equals(otherEditCommand.editTaskDescriptor);","lastModifiedDate":"2023-10-16"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"                .add(\"index\", index)","lastModifiedDate":"2019-02-23"},{"lineNumber":131,"author":{"gitId":"newway1814"},"content":"                .add(\"editTaskDescriptor\", editTaskDescriptor)","lastModifiedDate":"2023-10-16"},{"lineNumber":132,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":136,"author":{"gitId":"newway1814"},"content":"     * Stores the details to edit the task with. Each non-empty field value will replace the","lastModifiedDate":"2023-10-16"},{"lineNumber":137,"author":{"gitId":"newway1814"},"content":"     * corresponding field value of the task.","lastModifiedDate":"2023-10-16"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":139,"author":{"gitId":"newway1814"},"content":"    public static class EditTaskDescriptor {","lastModifiedDate":"2023-10-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":141,"author":{"gitId":"eyelessrhyme7"},"content":"        private Priority priority;","lastModifiedDate":"2023-10-17"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-06-21"},{"lineNumber":143,"author":{"gitId":"jack1e0"},"content":"        private DueDate dueDate;","lastModifiedDate":"2023-10-17"},{"lineNumber":144,"author":{"gitId":"yarnmengnus"},"content":"        private Link link;","lastModifiedDate":"2023-10-17"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":146,"author":{"gitId":"newway1814"},"content":"        public EditTaskDescriptor() {}","lastModifiedDate":"2023-10-16"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":149,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":150,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":151,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":152,"author":{"gitId":"newway1814"},"content":"        public EditTaskDescriptor(EditTaskDescriptor toCopy) {","lastModifiedDate":"2023-10-16"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":154,"author":{"gitId":"eyelessrhyme7"},"content":"            setPriority(toCopy.priority);","lastModifiedDate":"2023-10-17"},{"lineNumber":155,"author":{"gitId":"yarnmengnus"},"content":"            setLink(toCopy.link);","lastModifiedDate":"2023-10-17"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2018-01-11"},{"lineNumber":157,"author":{"gitId":"jack1e0"},"content":"            setDueDate(toCopy.dueDate);","lastModifiedDate":"2023-10-17"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":161,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":162,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":164,"author":{"gitId":"kiatkat"},"content":"            return CollectionUtil.isAnyNonNull(name, priority, tags, dueDate, link);","lastModifiedDate":"2023-10-29"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":172,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":175,"author":{"gitId":"eyelessrhyme7"},"content":"        public void setPriority(Priority priority) {","lastModifiedDate":"2023-10-17"},{"lineNumber":176,"author":{"gitId":"eyelessrhyme7"},"content":"            this.priority \u003d priority;","lastModifiedDate":"2023-10-17"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":179,"author":{"gitId":"eyelessrhyme7"},"content":"        public Optional\u003cPriority\u003e getPriority() {","lastModifiedDate":"2023-10-17"},{"lineNumber":180,"author":{"gitId":"eyelessrhyme7"},"content":"            return Optional.ofNullable(priority);","lastModifiedDate":"2023-10-17"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":184,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2018-01-11"},{"lineNumber":185,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":186,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-06-21"},{"lineNumber":188,"author":{"gitId":"-"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2018-01-11"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":192,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2018-01-11"},{"lineNumber":193,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":194,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2018-01-11"},{"lineNumber":195,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":197,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2018-01-11"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":199,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":200,"author":{"gitId":"jack1e0"},"content":"        public void setDueDate(DueDate date) {","lastModifiedDate":"2023-10-17"},{"lineNumber":201,"author":{"gitId":"jack1e0"},"content":"            this.dueDate \u003d date;","lastModifiedDate":"2023-10-17"},{"lineNumber":202,"author":{"gitId":"jack1e0"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":203,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":204,"author":{"gitId":"jack1e0"},"content":"        public Optional\u003cDueDate\u003e getDueDate() {","lastModifiedDate":"2023-10-17"},{"lineNumber":205,"author":{"gitId":"jack1e0"},"content":"            return Optional.ofNullable(dueDate);","lastModifiedDate":"2023-10-17"},{"lineNumber":206,"author":{"gitId":"kiatkat"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":208,"author":{"gitId":"yarnmengnus"},"content":"        public void setLink(Link link) {","lastModifiedDate":"2023-10-17"},{"lineNumber":209,"author":{"gitId":"yarnmengnus"},"content":"            this.link \u003d link;","lastModifiedDate":"2023-10-17"},{"lineNumber":210,"author":{"gitId":"yarnmengnus"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":211,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":212,"author":{"gitId":"yarnmengnus"},"content":"        public Optional\u003cLink\u003e getLink() {","lastModifiedDate":"2023-10-17"},{"lineNumber":213,"author":{"gitId":"yarnmengnus"},"content":"            return Optional.ofNullable(link);","lastModifiedDate":"2023-10-17"},{"lineNumber":214,"author":{"gitId":"yarnmengnus"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":215,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":218,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":219,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":220,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":222,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":223,"author":{"gitId":"newway1814"},"content":"            if (!(other instanceof EditTaskDescriptor)) {","lastModifiedDate":"2023-10-16"},{"lineNumber":224,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":225,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":227,"author":{"gitId":"newway1814"},"content":"            EditTaskDescriptor otherEditTaskDescriptor \u003d (EditTaskDescriptor) other;","lastModifiedDate":"2023-10-16"},{"lineNumber":228,"author":{"gitId":"newway1814"},"content":"            return Objects.equals(name, otherEditTaskDescriptor.name)","lastModifiedDate":"2023-10-16"},{"lineNumber":229,"author":{"gitId":"eyelessrhyme7"},"content":"                    \u0026\u0026 Objects.equals(priority, otherEditTaskDescriptor.priority)","lastModifiedDate":"2023-10-17"},{"lineNumber":230,"author":{"gitId":"yarnmengnus"},"content":"                    \u0026\u0026 Objects.equals(tags, otherEditTaskDescriptor.tags)","lastModifiedDate":"2023-10-17"},{"lineNumber":231,"author":{"gitId":"jack1e0"},"content":"                    \u0026\u0026 Objects.equals(dueDate, otherEditTaskDescriptor.dueDate)","lastModifiedDate":"2023-10-25"},{"lineNumber":232,"author":{"gitId":"yarnmengnus"},"content":"                    \u0026\u0026 Objects.equals(link, otherEditTaskDescriptor.link);","lastModifiedDate":"2023-10-17"},{"lineNumber":233,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"        public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"            return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"                    .add(\"name\", name)","lastModifiedDate":"2019-02-23"},{"lineNumber":239,"author":{"gitId":"eyelessrhyme7"},"content":"                    .add(\"priority\", priority)","lastModifiedDate":"2023-10-17"},{"lineNumber":240,"author":{"gitId":"-"},"content":"                    .add(\"tags\", tags)","lastModifiedDate":"2019-02-23"},{"lineNumber":241,"author":{"gitId":"jack1e0"},"content":"                    .add(\"dueDate\", dueDate)","lastModifiedDate":"2023-10-25"},{"lineNumber":242,"author":{"gitId":"yarnmengnus"},"content":"                    .add(\"link\", link)","lastModifiedDate":"2023-10-17"},{"lineNumber":243,"author":{"gitId":"-"},"content":"                    .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-02-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":246,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"yarnmengnus":31,"jack1e0":14,"kiatkat":15,"eyelessrhyme7":13,"-":138,"newway1814":35}},{"path":"src/main/java/profplan/logic/commands/EditSettingsCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kiatkat"},"content":"package profplan.logic.commands;","lastModifiedDate":"2023-11-01"},{"lineNumber":2,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":3,"author":{"gitId":"kiatkat"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-11-01"},{"lineNumber":4,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":5,"author":{"gitId":"kiatkat"},"content":"import java.util.Objects;","lastModifiedDate":"2023-11-01"},{"lineNumber":6,"author":{"gitId":"kiatkat"},"content":"import java.util.Optional;","lastModifiedDate":"2023-11-01"},{"lineNumber":7,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":8,"author":{"gitId":"kiatkat"},"content":"import profplan.commons.core.Settings;","lastModifiedDate":"2023-11-01"},{"lineNumber":9,"author":{"gitId":"kiatkat"},"content":"import profplan.commons.util.ToStringBuilder;","lastModifiedDate":"2023-11-01"},{"lineNumber":10,"author":{"gitId":"kiatkat"},"content":"import profplan.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-11-01"},{"lineNumber":11,"author":{"gitId":"kiatkat"},"content":"import profplan.model.Model;","lastModifiedDate":"2023-11-01"},{"lineNumber":12,"author":{"gitId":"kiatkat"},"content":"import profplan.model.ModelManager;","lastModifiedDate":"2023-11-02"},{"lineNumber":13,"author":{"gitId":"kiatkat"},"content":"import profplan.model.ReadOnlyUserConfigs;","lastModifiedDate":"2023-11-01"},{"lineNumber":14,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":15,"author":{"gitId":"kiatkat"},"content":"/**","lastModifiedDate":"2023-11-01"},{"lineNumber":16,"author":{"gitId":"kiatkat"},"content":" * Edits the details of an existing setting in the user configs.","lastModifiedDate":"2023-11-01"},{"lineNumber":17,"author":{"gitId":"kiatkat"},"content":" */","lastModifiedDate":"2023-11-01"},{"lineNumber":18,"author":{"gitId":"kiatkat"},"content":"public class EditSettingsCommand extends Command {","lastModifiedDate":"2023-11-01"},{"lineNumber":19,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":20,"author":{"gitId":"kiatkat"},"content":"    public static final String COMMAND_WORD \u003d \"set\";","lastModifiedDate":"2023-11-01"},{"lineNumber":21,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":22,"author":{"gitId":"kiatkat"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Sets the value of a specified configuration \"","lastModifiedDate":"2023-11-01"},{"lineNumber":23,"author":{"gitId":"kiatkat"},"content":"            + \"parameter in the user config files to the input value.\";","lastModifiedDate":"2023-11-01"},{"lineNumber":24,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":25,"author":{"gitId":"kiatkat"},"content":"    public static final String MESSAGE_DETAILS \u003d \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2023-11-01"},{"lineNumber":26,"author":{"gitId":"kiatkat"},"content":"            + \"Parameters: settingField, the setting to be altered; \"","lastModifiedDate":"2023-11-01"},{"lineNumber":27,"author":{"gitId":"kiatkat"},"content":"            + \"and value, the new value to be set\";","lastModifiedDate":"2023-11-01"},{"lineNumber":28,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":29,"author":{"gitId":"kiatkat"},"content":"    public static final String MESSAGE_EXAMPLE \u003d \"Example: \" + COMMAND_WORD + \" semesterDays \"","lastModifiedDate":"2023-11-01"},{"lineNumber":30,"author":{"gitId":"kiatkat"},"content":"            + \"100 \";","lastModifiedDate":"2023-11-01"},{"lineNumber":31,"author":{"gitId":"yarnmengnus"},"content":"    public static final String MESSAGE_FULL_HELP \u003d MESSAGE_USAGE + \"\\n\" + MESSAGE_DETAILS + \"\\n\" + MESSAGE_EXAMPLE;","lastModifiedDate":"2023-11-11"},{"lineNumber":32,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":33,"author":{"gitId":"kiatkat"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Settings successfully updated!\";","lastModifiedDate":"2023-11-01"},{"lineNumber":34,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":35,"author":{"gitId":"kiatkat"},"content":"    private final EditSettingsDescriptor editSettingsDescriptor;","lastModifiedDate":"2023-11-01"},{"lineNumber":36,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":37,"author":{"gitId":"kiatkat"},"content":"    /**","lastModifiedDate":"2023-11-01"},{"lineNumber":38,"author":{"gitId":"kiatkat"},"content":"     * @param editSettingsDescriptor details to edit the settings with","lastModifiedDate":"2023-11-01"},{"lineNumber":39,"author":{"gitId":"kiatkat"},"content":"     */","lastModifiedDate":"2023-11-01"},{"lineNumber":40,"author":{"gitId":"kiatkat"},"content":"    public EditSettingsCommand(EditSettingsDescriptor editSettingsDescriptor) {","lastModifiedDate":"2023-11-01"},{"lineNumber":41,"author":{"gitId":"kiatkat"},"content":"        requireNonNull(editSettingsDescriptor);","lastModifiedDate":"2023-11-01"},{"lineNumber":42,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":43,"author":{"gitId":"kiatkat"},"content":"        this.editSettingsDescriptor \u003d new EditSettingsDescriptor(editSettingsDescriptor);","lastModifiedDate":"2023-11-01"},{"lineNumber":44,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":45,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":46,"author":{"gitId":"kiatkat"},"content":"    /**","lastModifiedDate":"2023-11-01"},{"lineNumber":47,"author":{"gitId":"kiatkat"},"content":"     * Executes the command and returns the result message.","lastModifiedDate":"2023-11-01"},{"lineNumber":48,"author":{"gitId":"kiatkat"},"content":"     *","lastModifiedDate":"2023-11-01"},{"lineNumber":49,"author":{"gitId":"kiatkat"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2023-11-01"},{"lineNumber":50,"author":{"gitId":"kiatkat"},"content":"     * @return feedback message of the operation result for display","lastModifiedDate":"2023-11-01"},{"lineNumber":51,"author":{"gitId":"kiatkat"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2023-11-01"},{"lineNumber":52,"author":{"gitId":"kiatkat"},"content":"     */","lastModifiedDate":"2023-11-01"},{"lineNumber":53,"author":{"gitId":"kiatkat"},"content":"    @Override","lastModifiedDate":"2023-11-01"},{"lineNumber":54,"author":{"gitId":"kiatkat"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-11-01"},{"lineNumber":55,"author":{"gitId":"kiatkat"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-11-01"},{"lineNumber":56,"author":{"gitId":"kiatkat"},"content":"        ReadOnlyUserConfigs userConfigs \u003d ModelManager.getUserConfigs();","lastModifiedDate":"2023-11-02"},{"lineNumber":57,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":58,"author":{"gitId":"kiatkat"},"content":"        Settings settingsToEdit \u003d userConfigs.getSettings();","lastModifiedDate":"2023-11-01"},{"lineNumber":59,"author":{"gitId":"kiatkat"},"content":"        Settings editedSettings \u003d createEditedSettings(settingsToEdit, editSettingsDescriptor);","lastModifiedDate":"2023-11-01"},{"lineNumber":60,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":61,"author":{"gitId":"kiatkat"},"content":"        ModelManager.setSettings(editedSettings);","lastModifiedDate":"2023-11-02"},{"lineNumber":62,"author":{"gitId":"kiatkat"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2023-11-01"},{"lineNumber":63,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":64,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":65,"author":{"gitId":"kiatkat"},"content":"    private Settings createEditedSettings(Settings settingsToEdit,","lastModifiedDate":"2023-11-01"},{"lineNumber":66,"author":{"gitId":"kiatkat"},"content":"                                          EditSettingsDescriptor editSettingsDescriptor) {","lastModifiedDate":"2023-11-01"},{"lineNumber":67,"author":{"gitId":"kiatkat"},"content":"        assert settingsToEdit !\u003d null;","lastModifiedDate":"2023-11-01"},{"lineNumber":68,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":69,"author":{"gitId":"kiatkat"},"content":"        Integer semesterDays \u003d editSettingsDescriptor.getSemesterDays()","lastModifiedDate":"2023-11-01"},{"lineNumber":70,"author":{"gitId":"kiatkat"},"content":"                .orElse(settingsToEdit.getSemesterDays());","lastModifiedDate":"2023-11-01"},{"lineNumber":71,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":72,"author":{"gitId":"kiatkat"},"content":"        return new Settings(semesterDays);","lastModifiedDate":"2023-11-01"},{"lineNumber":73,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":74,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":75,"author":{"gitId":"kiatkat"},"content":"    @Override","lastModifiedDate":"2023-11-01"},{"lineNumber":76,"author":{"gitId":"kiatkat"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-11-01"},{"lineNumber":77,"author":{"gitId":"kiatkat"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-11-01"},{"lineNumber":78,"author":{"gitId":"kiatkat"},"content":"            return true;","lastModifiedDate":"2023-11-01"},{"lineNumber":79,"author":{"gitId":"kiatkat"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":80,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":81,"author":{"gitId":"kiatkat"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-11-01"},{"lineNumber":82,"author":{"gitId":"kiatkat"},"content":"        if (!(other instanceof EditSettingsCommand)) {","lastModifiedDate":"2023-11-01"},{"lineNumber":83,"author":{"gitId":"kiatkat"},"content":"            return false;","lastModifiedDate":"2023-11-01"},{"lineNumber":84,"author":{"gitId":"kiatkat"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":85,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":86,"author":{"gitId":"kiatkat"},"content":"        EditSettingsCommand otherEditSettingsCommand \u003d (EditSettingsCommand) other;","lastModifiedDate":"2023-11-01"},{"lineNumber":87,"author":{"gitId":"kiatkat"},"content":"        return editSettingsDescriptor.equals(otherEditSettingsCommand.editSettingsDescriptor);","lastModifiedDate":"2023-11-01"},{"lineNumber":88,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":89,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":90,"author":{"gitId":"kiatkat"},"content":"    @Override","lastModifiedDate":"2023-11-01"},{"lineNumber":91,"author":{"gitId":"kiatkat"},"content":"    public String toString() {","lastModifiedDate":"2023-11-01"},{"lineNumber":92,"author":{"gitId":"kiatkat"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-11-01"},{"lineNumber":93,"author":{"gitId":"kiatkat"},"content":"                .add(\"editSettingsDescriptor\", editSettingsDescriptor)","lastModifiedDate":"2023-11-01"},{"lineNumber":94,"author":{"gitId":"kiatkat"},"content":"                .toString();","lastModifiedDate":"2023-11-01"},{"lineNumber":95,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":96,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":97,"author":{"gitId":"kiatkat"},"content":"    /**","lastModifiedDate":"2023-11-01"},{"lineNumber":98,"author":{"gitId":"kiatkat"},"content":"     * Stores the details to edit the settings with. The non-empty field value will replace","lastModifiedDate":"2023-11-01"},{"lineNumber":99,"author":{"gitId":"kiatkat"},"content":"     * the corresponding setting value.","lastModifiedDate":"2023-11-01"},{"lineNumber":100,"author":{"gitId":"kiatkat"},"content":"     */","lastModifiedDate":"2023-11-01"},{"lineNumber":101,"author":{"gitId":"kiatkat"},"content":"    public static class EditSettingsDescriptor {","lastModifiedDate":"2023-11-01"},{"lineNumber":102,"author":{"gitId":"kiatkat"},"content":"        private Integer semesterDays;","lastModifiedDate":"2023-11-01"},{"lineNumber":103,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":104,"author":{"gitId":"kiatkat"},"content":"        public EditSettingsDescriptor() {}","lastModifiedDate":"2023-11-01"},{"lineNumber":105,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":106,"author":{"gitId":"kiatkat"},"content":"        public EditSettingsDescriptor(EditSettingsDescriptor toCopy) {","lastModifiedDate":"2023-11-01"},{"lineNumber":107,"author":{"gitId":"kiatkat"},"content":"            setSemesterDays(toCopy.semesterDays);","lastModifiedDate":"2023-11-01"},{"lineNumber":108,"author":{"gitId":"kiatkat"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":109,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":110,"author":{"gitId":"kiatkat"},"content":"        public void setSemesterDays(int semesterDays) {","lastModifiedDate":"2023-11-01"},{"lineNumber":111,"author":{"gitId":"kiatkat"},"content":"            this.semesterDays \u003d semesterDays;","lastModifiedDate":"2023-11-01"},{"lineNumber":112,"author":{"gitId":"kiatkat"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":113,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":114,"author":{"gitId":"kiatkat"},"content":"        public Optional\u003cInteger\u003e getSemesterDays() {","lastModifiedDate":"2023-11-01"},{"lineNumber":115,"author":{"gitId":"kiatkat"},"content":"            return Optional.ofNullable(semesterDays);","lastModifiedDate":"2023-11-01"},{"lineNumber":116,"author":{"gitId":"kiatkat"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":117,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":118,"author":{"gitId":"kiatkat"},"content":"        @Override","lastModifiedDate":"2023-11-01"},{"lineNumber":119,"author":{"gitId":"kiatkat"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2023-11-01"},{"lineNumber":120,"author":{"gitId":"kiatkat"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2023-11-01"},{"lineNumber":121,"author":{"gitId":"kiatkat"},"content":"                return true;","lastModifiedDate":"2023-11-01"},{"lineNumber":122,"author":{"gitId":"kiatkat"},"content":"            }","lastModifiedDate":"2023-11-01"},{"lineNumber":123,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":124,"author":{"gitId":"kiatkat"},"content":"            // instanceof handles nulls","lastModifiedDate":"2023-11-01"},{"lineNumber":125,"author":{"gitId":"kiatkat"},"content":"            if (!(other instanceof EditSettingsDescriptor)) {","lastModifiedDate":"2023-11-01"},{"lineNumber":126,"author":{"gitId":"kiatkat"},"content":"                return false;","lastModifiedDate":"2023-11-01"},{"lineNumber":127,"author":{"gitId":"kiatkat"},"content":"            }","lastModifiedDate":"2023-11-01"},{"lineNumber":128,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":129,"author":{"gitId":"kiatkat"},"content":"            EditSettingsDescriptor otherEditSettingsDescriptor \u003d (EditSettingsDescriptor) other;","lastModifiedDate":"2023-11-01"},{"lineNumber":130,"author":{"gitId":"kiatkat"},"content":"            return Objects.equals(semesterDays, otherEditSettingsDescriptor.semesterDays);","lastModifiedDate":"2023-11-01"},{"lineNumber":131,"author":{"gitId":"kiatkat"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":132,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":133,"author":{"gitId":"kiatkat"},"content":"        @Override","lastModifiedDate":"2023-11-01"},{"lineNumber":134,"author":{"gitId":"kiatkat"},"content":"        public String toString() {","lastModifiedDate":"2023-11-01"},{"lineNumber":135,"author":{"gitId":"kiatkat"},"content":"            return new ToStringBuilder(this)","lastModifiedDate":"2023-11-01"},{"lineNumber":136,"author":{"gitId":"kiatkat"},"content":"                    .add(\"semesterDays\", semesterDays)","lastModifiedDate":"2023-11-01"},{"lineNumber":137,"author":{"gitId":"kiatkat"},"content":"                    .toString();","lastModifiedDate":"2023-11-01"},{"lineNumber":138,"author":{"gitId":"kiatkat"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":139,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":140,"author":{"gitId":"kiatkat"},"content":"}","lastModifiedDate":"2023-11-01"}],"authorContributionMap":{"yarnmengnus":1,"kiatkat":139}},{"path":"src/main/java/profplan/logic/commands/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kiatkat"},"content":"package profplan.logic.commands;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"kiatkat"},"content":"import profplan.model.Model;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Terminates the program.","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"exit\";","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"yarnmengnus"},"content":"    public static final String MESSAGE_USAGE \u003d \"Exits the application\";","lastModifiedDate":"2023-11-11"},{"lineNumber":13,"author":{"gitId":"eyelessrhyme7"},"content":"    public static final String MESSAGE_EXIT_ACKNOWLEDGEMENT \u003d \"Exiting Task List as requested ...\";","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"yarnmengnus"},"content":"    public static final String MESSAGE_FULL_HELP \u003d MESSAGE_USAGE;","lastModifiedDate":"2023-11-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"yarnmengnus":2,"kiatkat":2,"eyelessrhyme7":1,"-":16}},{"path":"src/main/java/profplan/logic/commands/FilterCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jack1e0"},"content":"package profplan.logic.commands;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":3,"author":{"gitId":"jack1e0"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-20"},{"lineNumber":4,"author":{"gitId":"jack1e0"},"content":"import static profplan.logic.parser.CliSyntax.PREFIX_DUEDATE;","lastModifiedDate":"2023-10-25"},{"lineNumber":5,"author":{"gitId":"jack1e0"},"content":"import static profplan.logic.parser.CliSyntax.PREFIX_PRIORITY;","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"jack1e0"},"content":"import static profplan.logic.parser.CliSyntax.PREFIX_RECURRING;","lastModifiedDate":"2023-11-02"},{"lineNumber":7,"author":{"gitId":"jack1e0"},"content":"import static profplan.logic.parser.CliSyntax.PREFIX_STATUS;","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"jack1e0"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"jack1e0"},"content":"import profplan.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-20"},{"lineNumber":12,"author":{"gitId":"jack1e0"},"content":"import profplan.model.Model;","lastModifiedDate":"2023-10-20"},{"lineNumber":13,"author":{"gitId":"jack1e0"},"content":"import profplan.model.task.Task;","lastModifiedDate":"2023-10-29"},{"lineNumber":14,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":16,"author":{"gitId":"jack1e0"},"content":"/**","lastModifiedDate":"2023-10-20"},{"lineNumber":17,"author":{"gitId":"jack1e0"},"content":" * Filters for all tasks in task list whose due date falls before the argument due date.","lastModifiedDate":"2023-10-20"},{"lineNumber":18,"author":{"gitId":"jack1e0"},"content":" */","lastModifiedDate":"2023-10-20"},{"lineNumber":19,"author":{"gitId":"jack1e0"},"content":"public class FilterCommand extends Command {","lastModifiedDate":"2023-10-20"},{"lineNumber":20,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":21,"author":{"gitId":"jack1e0"},"content":"    public static final String COMMAND_WORD \u003d \"filter\";","lastModifiedDate":"2023-10-20"},{"lineNumber":22,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":23,"author":{"gitId":"jack1e0"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"yarnmengnus"},"content":"            + \": Filters for tasks with one or more criteria and displays them as a list with index numbers.\";","lastModifiedDate":"2023-11-10"},{"lineNumber":25,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":26,"author":{"gitId":"jack1e0"},"content":"    public static final String MESSAGE_DETAILS \u003d \"Parameters: \"","lastModifiedDate":"2023-11-02"},{"lineNumber":27,"author":{"gitId":"yarnmengnus"},"content":"            + PREFIX_DUEDATE + \"[dueDate] \"","lastModifiedDate":"2023-11-11"},{"lineNumber":28,"author":{"gitId":"yarnmengnus"},"content":"            + PREFIX_PRIORITY + \"[priority] \"","lastModifiedDate":"2023-11-11"},{"lineNumber":29,"author":{"gitId":"yarnmengnus"},"content":"            + PREFIX_RECURRING + \"[recur] \"","lastModifiedDate":"2023-11-11"},{"lineNumber":30,"author":{"gitId":"yarnmengnus"},"content":"            + PREFIX_STATUS + \"[status]\";","lastModifiedDate":"2023-11-11"},{"lineNumber":31,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":32,"author":{"gitId":"jack1e0"},"content":"    public static final String MESSAGE_EXAMPLE \u003d \"Example: \" + COMMAND_WORD + \" d/01-01-2024 s/done\";","lastModifiedDate":"2023-11-02"},{"lineNumber":33,"author":{"gitId":"yarnmengnus"},"content":"    public static final String MESSAGE_FULL_HELP \u003d MESSAGE_USAGE + \"\\n\" + MESSAGE_DETAILS + \"\\n\" + MESSAGE_EXAMPLE;","lastModifiedDate":"2023-11-11"},{"lineNumber":34,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":35,"author":{"gitId":"yarnmengnus"},"content":"    private final Predicate\u003cTask\u003e predicate;","lastModifiedDate":"2023-10-30"},{"lineNumber":36,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":37,"author":{"gitId":"jack1e0"},"content":"    private String messageSuccess \u003d \"Here are your tasks that are:\\n\";","lastModifiedDate":"2023-10-29"},{"lineNumber":38,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":39,"author":{"gitId":"jack1e0"},"content":"    /**","lastModifiedDate":"2023-10-20"},{"lineNumber":40,"author":{"gitId":"jack1e0"},"content":"     * Initialise FilterCommand object","lastModifiedDate":"2023-10-20"},{"lineNumber":41,"author":{"gitId":"jack1e0"},"content":"     */","lastModifiedDate":"2023-10-20"},{"lineNumber":42,"author":{"gitId":"jack1e0"},"content":"    public FilterCommand(Predicate\u003cTask\u003e predicate) {","lastModifiedDate":"2023-10-29"},{"lineNumber":43,"author":{"gitId":"jack1e0"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2023-10-25"},{"lineNumber":44,"author":{"gitId":"jack1e0"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":45,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":46,"author":{"gitId":"jack1e0"},"content":"    @Override","lastModifiedDate":"2023-10-20"},{"lineNumber":47,"author":{"gitId":"jack1e0"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2023-10-20"},{"lineNumber":48,"author":{"gitId":"jack1e0"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-20"},{"lineNumber":49,"author":{"gitId":"jack1e0"},"content":"        model.updateFilteredTaskList(predicate);","lastModifiedDate":"2023-10-29"},{"lineNumber":50,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":51,"author":{"gitId":"jack1e0"},"content":"        return new CommandResult(","lastModifiedDate":"2023-10-20"},{"lineNumber":52,"author":{"gitId":"jack1e0"},"content":"                String.format(messageSuccess, model.getFilteredTaskList().size()));","lastModifiedDate":"2023-10-20"},{"lineNumber":53,"author":{"gitId":"jack1e0"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":54,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":55,"author":{"gitId":"jack1e0"},"content":"    @Override","lastModifiedDate":"2023-10-20"},{"lineNumber":56,"author":{"gitId":"jack1e0"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-20"},{"lineNumber":57,"author":{"gitId":"jack1e0"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-20"},{"lineNumber":58,"author":{"gitId":"jack1e0"},"content":"            return true;","lastModifiedDate":"2023-10-20"},{"lineNumber":59,"author":{"gitId":"jack1e0"},"content":"        }","lastModifiedDate":"2023-10-20"},{"lineNumber":60,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":61,"author":{"gitId":"jack1e0"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-20"},{"lineNumber":62,"author":{"gitId":"jack1e0"},"content":"        if (!(other instanceof FilterCommand)) {","lastModifiedDate":"2023-10-20"},{"lineNumber":63,"author":{"gitId":"jack1e0"},"content":"            return false;","lastModifiedDate":"2023-10-20"},{"lineNumber":64,"author":{"gitId":"jack1e0"},"content":"        }","lastModifiedDate":"2023-10-20"},{"lineNumber":65,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":66,"author":{"gitId":"jack1e0"},"content":"        FilterCommand otherCommand \u003d (FilterCommand) other;","lastModifiedDate":"2023-10-20"},{"lineNumber":67,"author":{"gitId":"jack1e0"},"content":"        return predicate.equals(otherCommand.predicate);","lastModifiedDate":"2023-10-25"},{"lineNumber":68,"author":{"gitId":"jack1e0"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":69,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":70,"author":{"gitId":"jack1e0"},"content":"    @Override","lastModifiedDate":"2023-10-20"},{"lineNumber":71,"author":{"gitId":"jack1e0"},"content":"    public String toString() {","lastModifiedDate":"2023-10-20"},{"lineNumber":72,"author":{"gitId":"jack1e0"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-20"},{"lineNumber":73,"author":{"gitId":"jack1e0"},"content":"                .add(\"predicate\", predicate)","lastModifiedDate":"2023-10-25"},{"lineNumber":74,"author":{"gitId":"jack1e0"},"content":"                .toString();","lastModifiedDate":"2023-10-20"},{"lineNumber":75,"author":{"gitId":"jack1e0"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":76,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":77,"author":{"gitId":"jack1e0"},"content":"    public String getSuccessMessage() {","lastModifiedDate":"2023-10-26"},{"lineNumber":78,"author":{"gitId":"jack1e0"},"content":"        return messageSuccess;","lastModifiedDate":"2023-10-26"},{"lineNumber":79,"author":{"gitId":"jack1e0"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":80,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":81,"author":{"gitId":"jack1e0"},"content":"    public void setSuccessMessage(String newMsg) {","lastModifiedDate":"2023-10-29"},{"lineNumber":82,"author":{"gitId":"jack1e0"},"content":"        messageSuccess \u003d newMsg;","lastModifiedDate":"2023-10-29"},{"lineNumber":83,"author":{"gitId":"jack1e0"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":84,"author":{"gitId":"jack1e0"},"content":"}","lastModifiedDate":"2023-10-20"}],"authorContributionMap":{"yarnmengnus":9,"jack1e0":75}},{"path":"src/main/java/profplan/logic/commands/FindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kiatkat"},"content":"package profplan.logic.commands;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"kiatkat"},"content":"import profplan.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"kiatkat"},"content":"import profplan.logic.Messages;","lastModifiedDate":"2023-10-14"},{"lineNumber":7,"author":{"gitId":"kiatkat"},"content":"import profplan.model.Model;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"jack1e0"},"content":"import profplan.model.task.predicates.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-10-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"eyelessrhyme7"},"content":" * Finds and lists all tasks in task list whose name contains any of the argument keywords.","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2018-04-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"newway1814"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all tasks whose names contain any of \"","lastModifiedDate":"2023-10-16"},{"lineNumber":19,"author":{"gitId":"yarnmengnus"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\";","lastModifiedDate":"2023-11-10"},{"lineNumber":20,"author":{"gitId":"yarnmengnus"},"content":"    public static final String MESSAGE_DETAILS \u003d \"Parameters: [keywords...]\";","lastModifiedDate":"2023-11-11"},{"lineNumber":21,"author":{"gitId":"yarnmengnus"},"content":"    public static final String MESSAGE_EXAMPLE \u003d \"Example: \" + COMMAND_WORD + \" canvas quiz\";","lastModifiedDate":"2023-10-30"},{"lineNumber":22,"author":{"gitId":"yarnmengnus"},"content":"    public static final String MESSAGE_FULL_HELP \u003d MESSAGE_USAGE + \"\\n\" + MESSAGE_DETAILS + \"\\n\" + MESSAGE_EXAMPLE;","lastModifiedDate":"2023-11-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final NameContainsKeywordsPredicate predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public FindCommand(NameContainsKeywordsPredicate predicate) {","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":33,"author":{"gitId":"newway1814"},"content":"        model.updateFilteredTaskList(predicate);","lastModifiedDate":"2023-10-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return new CommandResult(","lastModifiedDate":"2018-04-01"},{"lineNumber":35,"author":{"gitId":"newway1814"},"content":"                String.format(Messages.MESSAGE_TASKS_LISTED_OVERVIEW, model.getFilteredTaskList().size()));","lastModifiedDate":"2023-10-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        if (!(other instanceof FindCommand)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        FindCommand otherFindCommand \u003d (FindCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return predicate.equals(otherFindCommand.predicate);","lastModifiedDate":"2023-07-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"                .add(\"predicate\", predicate)","lastModifiedDate":"2019-02-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"yarnmengnus":4,"jack1e0":1,"kiatkat":4,"eyelessrhyme7":1,"-":46,"newway1814":3}},{"path":"src/main/java/profplan/logic/commands/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kiatkat"},"content":"package profplan.logic.commands;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"yarnmengnus"},"content":"import java.lang.reflect.Field;","lastModifiedDate":"2023-11-10"},{"lineNumber":4,"author":{"gitId":"yarnmengnus"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-11-10"},{"lineNumber":5,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":6,"author":{"gitId":"yarnmengnus"},"content":"import profplan.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-11-10"},{"lineNumber":7,"author":{"gitId":"kiatkat"},"content":"import profplan.model.Model;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Format full help instructions for every command for display.","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"help\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"yarnmengnus"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Shows program usage instructions.\";","lastModifiedDate":"2023-11-10"},{"lineNumber":16,"author":{"gitId":"yarnmengnus"},"content":"    public static final String MESSAGE_DETAILS \u003d \"Alternatively, \"","lastModifiedDate":"2023-10-30"},{"lineNumber":17,"author":{"gitId":"yarnmengnus"},"content":"        + \"you can use help with a command to see an example of it.\\n\"","lastModifiedDate":"2023-10-30"},{"lineNumber":18,"author":{"gitId":"yarnmengnus"},"content":"        + \"Parameters: [command] (must be a valid command) \"","lastModifiedDate":"2023-10-30"},{"lineNumber":19,"author":{"gitId":"yarnmengnus"},"content":"        + \"help [command]\";","lastModifiedDate":"2023-11-11"},{"lineNumber":20,"author":{"gitId":"yarnmengnus"},"content":"    public static final String MESSAGE_EXAMPLE \u003d \"Example: \" + COMMAND_WORD + \"[command]\";","lastModifiedDate":"2023-10-30"},{"lineNumber":21,"author":{"gitId":"yarnmengnus"},"content":"    public static final String MESSAGE_FULL_HELP \u003d MESSAGE_USAGE + \"\\n\" + MESSAGE_DETAILS + \"\\n\" + MESSAGE_EXAMPLE;","lastModifiedDate":"2023-11-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"yarnmengnus"},"content":"    public static final String MESSAGE_INVALID_COMMAND_WORD \u003d \"Invalid command word!\";","lastModifiedDate":"2023-11-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String SHOWING_HELP_MESSAGE \u003d \"Opened help window.\";","lastModifiedDate":"2016-08-31"},{"lineNumber":25,"author":{"gitId":"yarnmengnus"},"content":"    public static final String DELIMITTER_BETWEEN_COMMANDS \u003d \"\\n-----------------\\n\";","lastModifiedDate":"2023-11-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":27,"author":{"gitId":"yarnmengnus"},"content":"    private final String command;","lastModifiedDate":"2023-10-30"},{"lineNumber":28,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":29,"author":{"gitId":"yarnmengnus"},"content":"    /**","lastModifiedDate":"2023-10-30"},{"lineNumber":30,"author":{"gitId":"yarnmengnus"},"content":"     * Creates an empty HelpCommand. This is will list all commands.","lastModifiedDate":"2023-10-30"},{"lineNumber":31,"author":{"gitId":"yarnmengnus"},"content":"     */","lastModifiedDate":"2023-10-30"},{"lineNumber":32,"author":{"gitId":"yarnmengnus"},"content":"    public HelpCommand() {","lastModifiedDate":"2023-10-30"},{"lineNumber":33,"author":{"gitId":"yarnmengnus"},"content":"        this.command \u003d null;","lastModifiedDate":"2023-10-30"},{"lineNumber":34,"author":{"gitId":"yarnmengnus"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":35,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":36,"author":{"gitId":"yarnmengnus"},"content":"    /**","lastModifiedDate":"2023-10-30"},{"lineNumber":37,"author":{"gitId":"yarnmengnus"},"content":"     * Creates a HelpCommand to get help for a particular command.","lastModifiedDate":"2023-10-30"},{"lineNumber":38,"author":{"gitId":"yarnmengnus"},"content":"     * @param command The command to get help for.","lastModifiedDate":"2023-10-30"},{"lineNumber":39,"author":{"gitId":"yarnmengnus"},"content":"     */","lastModifiedDate":"2023-10-30"},{"lineNumber":40,"author":{"gitId":"yarnmengnus"},"content":"    public HelpCommand(String command) {","lastModifiedDate":"2023-10-30"},{"lineNumber":41,"author":{"gitId":"yarnmengnus"},"content":"        this.command \u003d command;","lastModifiedDate":"2023-10-30"},{"lineNumber":42,"author":{"gitId":"yarnmengnus"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":43,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"yarnmengnus"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-11-10"},{"lineNumber":46,"author":{"gitId":"yarnmengnus"},"content":"        if (this.command \u003d\u003d null || this.command.equals(\"\")) {","lastModifiedDate":"2023-11-10"},{"lineNumber":47,"author":{"gitId":"yarnmengnus"},"content":"            return new CommandResult(getAllCommandDescriptions(), false, false);","lastModifiedDate":"2023-11-10"},{"lineNumber":48,"author":{"gitId":"yarnmengnus"},"content":"        } else {","lastModifiedDate":"2023-10-30"},{"lineNumber":49,"author":{"gitId":"yarnmengnus"},"content":"            return new CommandResult(getOneCommandDescription(command));","lastModifiedDate":"2023-11-10"},{"lineNumber":50,"author":{"gitId":"yarnmengnus"},"content":"        }","lastModifiedDate":"2023-11-10"},{"lineNumber":51,"author":{"gitId":"yarnmengnus"},"content":"    }","lastModifiedDate":"2023-11-10"},{"lineNumber":52,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":53,"author":{"gitId":"yarnmengnus"},"content":"    private String getAllCommandDescriptions() {","lastModifiedDate":"2023-11-10"},{"lineNumber":54,"author":{"gitId":"yarnmengnus"},"content":"        ArrayList\u003cClass\u003c? extends Command\u003e\u003e commands \u003d listCommands();","lastModifiedDate":"2023-11-10"},{"lineNumber":55,"author":{"gitId":"yarnmengnus"},"content":"        String rtn \u003d \"\";","lastModifiedDate":"2023-11-10"},{"lineNumber":56,"author":{"gitId":"yarnmengnus"},"content":"        for (Class\u003c? extends Command\u003e command : commands) {","lastModifiedDate":"2023-11-10"},{"lineNumber":57,"author":{"gitId":"yarnmengnus"},"content":"            try {","lastModifiedDate":"2023-11-10"},{"lineNumber":58,"author":{"gitId":"yarnmengnus"},"content":"                Field usage \u003d command.getDeclaredField(\"MESSAGE_USAGE\");","lastModifiedDate":"2023-11-10"},{"lineNumber":59,"author":{"gitId":"yarnmengnus"},"content":"                System.out.println(usage.get(null).toString());","lastModifiedDate":"2023-11-10"},{"lineNumber":60,"author":{"gitId":"yarnmengnus"},"content":"                rtn +\u003d usage.get(null).toString() + DELIMITTER_BETWEEN_COMMANDS;","lastModifiedDate":"2023-11-10"},{"lineNumber":61,"author":{"gitId":"yarnmengnus"},"content":"            } catch (NoSuchFieldException e) {","lastModifiedDate":"2023-11-10"},{"lineNumber":62,"author":{"gitId":"yarnmengnus"},"content":"                //when command has no usage field","lastModifiedDate":"2023-11-11"},{"lineNumber":63,"author":{"gitId":"yarnmengnus"},"content":"                System.out.println(e);","lastModifiedDate":"2023-11-10"},{"lineNumber":64,"author":{"gitId":"yarnmengnus"},"content":"                continue;","lastModifiedDate":"2023-11-10"},{"lineNumber":65,"author":{"gitId":"yarnmengnus"},"content":"            } catch (IllegalAccessException e) {","lastModifiedDate":"2023-11-10"},{"lineNumber":66,"author":{"gitId":"yarnmengnus"},"content":"                //impossible as command usage MUST be public","lastModifiedDate":"2023-11-11"},{"lineNumber":67,"author":{"gitId":"yarnmengnus"},"content":"                System.out.println(e);","lastModifiedDate":"2023-11-10"},{"lineNumber":68,"author":{"gitId":"yarnmengnus"},"content":"                continue;","lastModifiedDate":"2023-11-10"},{"lineNumber":69,"author":{"gitId":"yarnmengnus"},"content":"            }","lastModifiedDate":"2023-11-10"},{"lineNumber":70,"author":{"gitId":"yarnmengnus"},"content":"        }","lastModifiedDate":"2023-11-10"},{"lineNumber":71,"author":{"gitId":"yarnmengnus"},"content":"        return rtn;","lastModifiedDate":"2023-11-10"},{"lineNumber":72,"author":{"gitId":"yarnmengnus"},"content":"    }","lastModifiedDate":"2023-11-10"},{"lineNumber":73,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":74,"author":{"gitId":"yarnmengnus"},"content":"    private String getOneCommandDescription(String command) throws CommandException {","lastModifiedDate":"2023-11-10"},{"lineNumber":75,"author":{"gitId":"yarnmengnus"},"content":"        switch (command) {","lastModifiedDate":"2023-11-10"},{"lineNumber":76,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":77,"author":{"gitId":"yarnmengnus"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2023-11-10"},{"lineNumber":78,"author":{"gitId":"yarnmengnus"},"content":"            return AddCommand.MESSAGE_USAGE + \"\\n\" + AddCommand.MESSAGE_EXAMPLE;","lastModifiedDate":"2023-11-10"},{"lineNumber":79,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":80,"author":{"gitId":"yarnmengnus"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2023-11-10"},{"lineNumber":81,"author":{"gitId":"yarnmengnus"},"content":"            return EditCommand.MESSAGE_USAGE + \"\\n\" + EditCommand.MESSAGE_EXAMPLE;","lastModifiedDate":"2023-11-10"},{"lineNumber":82,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":83,"author":{"gitId":"yarnmengnus"},"content":"        case EditSettingsCommand.COMMAND_WORD:","lastModifiedDate":"2023-11-10"},{"lineNumber":84,"author":{"gitId":"yarnmengnus"},"content":"            return EditSettingsCommand.MESSAGE_USAGE + \"\\n\" + EditSettingsCommand.MESSAGE_EXAMPLE;","lastModifiedDate":"2023-11-10"},{"lineNumber":85,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":86,"author":{"gitId":"yarnmengnus"},"content":"        case MarkCommand.COMMAND_WORD:","lastModifiedDate":"2023-11-10"},{"lineNumber":87,"author":{"gitId":"yarnmengnus"},"content":"            return MarkCommand.MESSAGE_USAGE + \"\\n\" + MarkCommand.MESSAGE_EXAMPLE;","lastModifiedDate":"2023-11-10"},{"lineNumber":88,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":89,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":90,"author":{"gitId":"yarnmengnus"},"content":"        case UnmarkCommand.COMMAND_WORD:","lastModifiedDate":"2023-11-10"},{"lineNumber":91,"author":{"gitId":"yarnmengnus"},"content":"            return UnmarkCommand.MESSAGE_USAGE + \"\\n\" + UnmarkCommand.MESSAGE_EXAMPLE;","lastModifiedDate":"2023-11-10"},{"lineNumber":92,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":93,"author":{"gitId":"yarnmengnus"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2023-11-10"},{"lineNumber":94,"author":{"gitId":"yarnmengnus"},"content":"            return DeleteCommand.MESSAGE_USAGE + \"\\n\" + DeleteCommand.MESSAGE_EXAMPLE;","lastModifiedDate":"2023-11-10"},{"lineNumber":95,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":96,"author":{"gitId":"yarnmengnus"},"content":"        case DoNextCommand.COMMAND_WORD:","lastModifiedDate":"2023-11-10"},{"lineNumber":97,"author":{"gitId":"yarnmengnus"},"content":"            return DoNextCommand.MESSAGE_USAGE;","lastModifiedDate":"2023-11-10"},{"lineNumber":98,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":99,"author":{"gitId":"yarnmengnus"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2023-11-10"},{"lineNumber":100,"author":{"gitId":"yarnmengnus"},"content":"            return ClearCommand.MESSAGE_USAGE;","lastModifiedDate":"2023-11-11"},{"lineNumber":101,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":102,"author":{"gitId":"yarnmengnus"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2023-11-10"},{"lineNumber":103,"author":{"gitId":"yarnmengnus"},"content":"            return FindCommand.MESSAGE_USAGE + \"\\n\" + FindCommand.MESSAGE_EXAMPLE;","lastModifiedDate":"2023-11-10"},{"lineNumber":104,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":105,"author":{"gitId":"yarnmengnus"},"content":"        case FilterCommand.COMMAND_WORD:","lastModifiedDate":"2023-11-10"},{"lineNumber":106,"author":{"gitId":"yarnmengnus"},"content":"            return FilterCommand.MESSAGE_USAGE + \"\\n\" + FilterCommand.MESSAGE_EXAMPLE;","lastModifiedDate":"2023-11-10"},{"lineNumber":107,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":108,"author":{"gitId":"yarnmengnus"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2023-11-10"},{"lineNumber":109,"author":{"gitId":"yarnmengnus"},"content":"            return ListCommand.MESSAGE_USAGE;","lastModifiedDate":"2023-11-11"},{"lineNumber":110,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":111,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":112,"author":{"gitId":"yarnmengnus"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2023-11-10"},{"lineNumber":113,"author":{"gitId":"yarnmengnus"},"content":"            return ExitCommand.MESSAGE_USAGE;","lastModifiedDate":"2023-11-11"},{"lineNumber":114,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":115,"author":{"gitId":"yarnmengnus"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2023-11-10"},{"lineNumber":116,"author":{"gitId":"yarnmengnus"},"content":"            return HelpCommand.MESSAGE_USAGE + \"\\n\" + HelpCommand.MESSAGE_EXAMPLE;","lastModifiedDate":"2023-11-10"},{"lineNumber":117,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":118,"author":{"gitId":"yarnmengnus"},"content":"        case DescriptionCommand.COMMAND_WORD:","lastModifiedDate":"2023-11-10"},{"lineNumber":119,"author":{"gitId":"yarnmengnus"},"content":"            return DescriptionCommand.MESSAGE_USAGE + \"\\n\" + DescriptionCommand.MESSAGE_EXAMPLE;","lastModifiedDate":"2023-11-10"},{"lineNumber":120,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":121,"author":{"gitId":"yarnmengnus"},"content":"        case SortDueDateCommand.COMMAND_WORD:","lastModifiedDate":"2023-11-10"},{"lineNumber":122,"author":{"gitId":"yarnmengnus"},"content":"            return SortDueDateCommand.MESSAGE_USAGE;","lastModifiedDate":"2023-11-10"},{"lineNumber":123,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":124,"author":{"gitId":"yarnmengnus"},"content":"        case SortPriorityCommand.COMMAND_WORD:","lastModifiedDate":"2023-11-10"},{"lineNumber":125,"author":{"gitId":"yarnmengnus"},"content":"            return SortPriorityCommand.MESSAGE_USAGE;","lastModifiedDate":"2023-11-10"},{"lineNumber":126,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":127,"author":{"gitId":"yarnmengnus"},"content":"        case ListWeekCommand.COMMAND_WORD:","lastModifiedDate":"2023-11-10"},{"lineNumber":128,"author":{"gitId":"yarnmengnus"},"content":"            return ListWeekCommand.MESSAGE_USAGE;","lastModifiedDate":"2023-11-10"},{"lineNumber":129,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":130,"author":{"gitId":"yarnmengnus"},"content":"        case ListMonthCommand.COMMAND_WORD:","lastModifiedDate":"2023-11-10"},{"lineNumber":131,"author":{"gitId":"yarnmengnus"},"content":"            return ListMonthCommand.MESSAGE_USAGE;","lastModifiedDate":"2023-11-10"},{"lineNumber":132,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":133,"author":{"gitId":"yarnmengnus"},"content":"        case StatsCommand.COMMAND_WORD:","lastModifiedDate":"2023-11-10"},{"lineNumber":134,"author":{"gitId":"yarnmengnus"},"content":"            return StatsCommand.MESSAGE_USAGE;","lastModifiedDate":"2023-11-10"},{"lineNumber":135,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":136,"author":{"gitId":"yarnmengnus"},"content":"        default:","lastModifiedDate":"2023-11-10"},{"lineNumber":137,"author":{"gitId":"yarnmengnus"},"content":"            throw new CommandException(MESSAGE_INVALID_COMMAND_WORD);","lastModifiedDate":"2023-11-10"},{"lineNumber":138,"author":{"gitId":"yarnmengnus"},"content":"        }","lastModifiedDate":"2023-10-30"},{"lineNumber":139,"author":{"gitId":"yarnmengnus"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":140,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":141,"author":{"gitId":"yarnmengnus"},"content":"    private ArrayList\u003cClass\u003c? extends Command\u003e\u003e listCommands() {","lastModifiedDate":"2023-11-10"},{"lineNumber":142,"author":{"gitId":"yarnmengnus"},"content":"        ArrayList\u003cClass\u003c? extends Command\u003e\u003e rtn \u003d new ArrayList\u003cClass\u003c? extends Command\u003e\u003e();","lastModifiedDate":"2023-11-10"},{"lineNumber":143,"author":{"gitId":"yarnmengnus"},"content":"        rtn.add(AddCommand.class);","lastModifiedDate":"2023-11-10"},{"lineNumber":144,"author":{"gitId":"yarnmengnus"},"content":"        rtn.add(EditCommand.class);","lastModifiedDate":"2023-11-10"},{"lineNumber":145,"author":{"gitId":"yarnmengnus"},"content":"        rtn.add(EditSettingsCommand.class);","lastModifiedDate":"2023-11-10"},{"lineNumber":146,"author":{"gitId":"yarnmengnus"},"content":"        rtn.add(MarkCommand.class);","lastModifiedDate":"2023-11-10"},{"lineNumber":147,"author":{"gitId":"yarnmengnus"},"content":"        rtn.add(UnmarkCommand.class);","lastModifiedDate":"2023-11-10"},{"lineNumber":148,"author":{"gitId":"yarnmengnus"},"content":"        rtn.add(DeleteCommand.class);","lastModifiedDate":"2023-11-10"},{"lineNumber":149,"author":{"gitId":"yarnmengnus"},"content":"        rtn.add(DoNextCommand.class);","lastModifiedDate":"2023-11-10"},{"lineNumber":150,"author":{"gitId":"yarnmengnus"},"content":"        rtn.add(ClearCommand.class);","lastModifiedDate":"2023-11-10"},{"lineNumber":151,"author":{"gitId":"yarnmengnus"},"content":"        rtn.add(FindCommand.class);","lastModifiedDate":"2023-11-10"},{"lineNumber":152,"author":{"gitId":"yarnmengnus"},"content":"        rtn.add(FilterCommand.class);","lastModifiedDate":"2023-11-10"},{"lineNumber":153,"author":{"gitId":"yarnmengnus"},"content":"        rtn.add(HelpCommand.class);","lastModifiedDate":"2023-11-10"},{"lineNumber":154,"author":{"gitId":"yarnmengnus"},"content":"        rtn.add(DescriptionCommand.class);","lastModifiedDate":"2023-11-10"},{"lineNumber":155,"author":{"gitId":"yarnmengnus"},"content":"        rtn.add(SortDueDateCommand.class);","lastModifiedDate":"2023-11-10"},{"lineNumber":156,"author":{"gitId":"yarnmengnus"},"content":"        rtn.add(SortPriorityCommand.class);","lastModifiedDate":"2023-11-10"},{"lineNumber":157,"author":{"gitId":"yarnmengnus"},"content":"        rtn.add(ListWeekCommand.class);","lastModifiedDate":"2023-11-10"},{"lineNumber":158,"author":{"gitId":"yarnmengnus"},"content":"        rtn.add(ListMonthCommand.class);","lastModifiedDate":"2023-11-10"},{"lineNumber":159,"author":{"gitId":"yarnmengnus"},"content":"        System.out.println(rtn.size());","lastModifiedDate":"2023-11-10"},{"lineNumber":160,"author":{"gitId":"yarnmengnus"},"content":"        return rtn;","lastModifiedDate":"2023-11-10"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":162,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":163,"author":{"gitId":"yarnmengnus"},"content":"    @Override","lastModifiedDate":"2023-10-30"},{"lineNumber":164,"author":{"gitId":"yarnmengnus"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2023-10-30"},{"lineNumber":165,"author":{"gitId":"yarnmengnus"},"content":"        if (!(o instanceof HelpCommand)) {","lastModifiedDate":"2023-10-30"},{"lineNumber":166,"author":{"gitId":"yarnmengnus"},"content":"            return false;","lastModifiedDate":"2023-10-30"},{"lineNumber":167,"author":{"gitId":"yarnmengnus"},"content":"        }","lastModifiedDate":"2023-10-30"},{"lineNumber":168,"author":{"gitId":"yarnmengnus"},"content":"        HelpCommand h \u003d (HelpCommand) o;","lastModifiedDate":"2023-10-30"},{"lineNumber":169,"author":{"gitId":"yarnmengnus"},"content":"        if (h.command !\u003d this.command) {","lastModifiedDate":"2023-10-30"},{"lineNumber":170,"author":{"gitId":"yarnmengnus"},"content":"            return false;","lastModifiedDate":"2023-10-30"},{"lineNumber":171,"author":{"gitId":"yarnmengnus"},"content":"        }","lastModifiedDate":"2023-10-30"},{"lineNumber":172,"author":{"gitId":"yarnmengnus"},"content":"        return true;","lastModifiedDate":"2023-10-30"},{"lineNumber":173,"author":{"gitId":"yarnmengnus"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":174,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":175,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"yarnmengnus":159,"kiatkat":2,"-":14}},{"path":"src/main/java/profplan/logic/commands/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kiatkat"},"content":"package profplan.logic.commands;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"kiatkat"},"content":"import profplan.model.Model;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"eyelessrhyme7"},"content":" * Lists all tasks in the task list to the user.","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"yarnmengnus"},"content":"    public static final String MESSAGE_USAGE \u003d \"Lists all tasks.\";","lastModifiedDate":"2023-11-11"},{"lineNumber":15,"author":{"gitId":"newway1814"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all tasks\";","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"yarnmengnus"},"content":"    public static final String MESSAGE_FULL_HELP \u003d MESSAGE_USAGE;","lastModifiedDate":"2023-11-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"newway1814"},"content":"        model.updateFilteredTaskList(Model.PREDICATE_SHOW_ALL_TASKS);","lastModifiedDate":"2023-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"yarnmengnus":2,"kiatkat":2,"eyelessrhyme7":1,"-":17,"newway1814":2}},{"path":"src/main/java/profplan/logic/commands/ListMonthCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"newway1814"},"content":"package profplan.logic.commands;","lastModifiedDate":"2023-10-25"},{"lineNumber":2,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":3,"author":{"gitId":"newway1814"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-25"},{"lineNumber":4,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":5,"author":{"gitId":"newway1814"},"content":"import profplan.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"newway1814"},"content":"import profplan.model.Model;","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"jack1e0"},"content":"import profplan.model.task.predicates.TaskInMonthPredicate;","lastModifiedDate":"2023-10-29"},{"lineNumber":8,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"newway1814"},"content":"/**","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"jack1e0"},"content":" * Lists tasks within a month of today.","lastModifiedDate":"2023-10-29"},{"lineNumber":11,"author":{"gitId":"newway1814"},"content":" */","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"jack1e0"},"content":"public class ListMonthCommand extends Command {","lastModifiedDate":"2023-10-29"},{"lineNumber":13,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"jack1e0"},"content":"    public static final String COMMAND_WORD \u003d \"list_month\";","lastModifiedDate":"2023-10-29"},{"lineNumber":15,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"jack1e0"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Lists all tasks within a month of today.\";","lastModifiedDate":"2023-10-29"},{"lineNumber":17,"author":{"gitId":"yarnmengnus"},"content":"    public static final String MESSAGE_FULL_HELP \u003d MESSAGE_USAGE;","lastModifiedDate":"2023-11-11"},{"lineNumber":18,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"jack1e0"},"content":"    public static final String MESSAGE_SUCCESS \u003d \" Here are your tasks within a month Prof!\";","lastModifiedDate":"2023-10-29"},{"lineNumber":20,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"newway1814"},"content":"    @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"newway1814"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"newway1814"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"jack1e0"},"content":"        model.updateFilteredTaskList(new TaskInMonthPredicate());","lastModifiedDate":"2023-10-29"},{"lineNumber":26,"author":{"gitId":"newway1814"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2023-10-25"},{"lineNumber":27,"author":{"gitId":"newway1814"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":28,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"newway1814"},"content":"}","lastModifiedDate":"2023-10-25"}],"authorContributionMap":{"yarnmengnus":1,"jack1e0":7,"newway1814":21}},{"path":"src/main/java/profplan/logic/commands/ListWeekCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"newway1814"},"content":"package profplan.logic.commands;","lastModifiedDate":"2023-10-25"},{"lineNumber":2,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":3,"author":{"gitId":"newway1814"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-25"},{"lineNumber":4,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":5,"author":{"gitId":"newway1814"},"content":"import profplan.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"newway1814"},"content":"import profplan.model.Model;","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"jack1e0"},"content":"import profplan.model.task.predicates.TaskInWeekPredicate;","lastModifiedDate":"2023-10-29"},{"lineNumber":8,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"newway1814"},"content":"/**","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"jack1e0"},"content":" * Lists tasks within a week of today.","lastModifiedDate":"2023-10-29"},{"lineNumber":11,"author":{"gitId":"newway1814"},"content":" */","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"jack1e0"},"content":"public class ListWeekCommand extends Command {","lastModifiedDate":"2023-10-29"},{"lineNumber":13,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"jack1e0"},"content":"    public static final String COMMAND_WORD \u003d \"list_week\";","lastModifiedDate":"2023-10-29"},{"lineNumber":15,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"jack1e0"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Lists all tasks within this week.\";","lastModifiedDate":"2023-10-29"},{"lineNumber":17,"author":{"gitId":"yarnmengnus"},"content":"    public static final String MESSAGE_FULL_HELP \u003d MESSAGE_USAGE;","lastModifiedDate":"2023-11-11"},{"lineNumber":18,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"jack1e0"},"content":"    public static final String MESSAGE_SUCCESS \u003d \" Here are your tasks within a week Prof!\";","lastModifiedDate":"2023-10-29"},{"lineNumber":20,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"newway1814"},"content":"    @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"newway1814"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"newway1814"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"jack1e0"},"content":"        model.updateFilteredTaskList(new TaskInWeekPredicate());","lastModifiedDate":"2023-10-29"},{"lineNumber":26,"author":{"gitId":"newway1814"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2023-10-25"},{"lineNumber":27,"author":{"gitId":"newway1814"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":28,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"newway1814"},"content":"}","lastModifiedDate":"2023-10-25"}],"authorContributionMap":{"yarnmengnus":1,"jack1e0":7,"newway1814":21}},{"path":"src/main/java/profplan/logic/commands/MarkCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"newway1814"},"content":"package profplan.logic.commands;","lastModifiedDate":"2023-10-16"},{"lineNumber":2,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":3,"author":{"gitId":"newway1814"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-16"},{"lineNumber":4,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":5,"author":{"gitId":"newway1814"},"content":"import profplan.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-16"},{"lineNumber":6,"author":{"gitId":"newway1814"},"content":"import profplan.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-16"},{"lineNumber":7,"author":{"gitId":"newway1814"},"content":"import profplan.model.Model;","lastModifiedDate":"2023-10-16"},{"lineNumber":8,"author":{"gitId":"jack1e0"},"content":"import profplan.model.task.DueDate;","lastModifiedDate":"2023-11-12"},{"lineNumber":9,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":10,"author":{"gitId":"newway1814"},"content":"/**","lastModifiedDate":"2023-10-16"},{"lineNumber":11,"author":{"gitId":"jack1e0"},"content":" * Marks Status of task as done.","lastModifiedDate":"2023-10-29"},{"lineNumber":12,"author":{"gitId":"newway1814"},"content":" */","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"newway1814"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2023-10-16"},{"lineNumber":14,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":15,"author":{"gitId":"newway1814"},"content":"    public static final String COMMAND_WORD \u003d \"mark\";","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":17,"author":{"gitId":"yarnmengnus"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Marks a task as done.\";","lastModifiedDate":"2023-10-30"},{"lineNumber":18,"author":{"gitId":"yarnmengnus"},"content":"    public static final String MESSAGE_DETAILS \u003d \"Parameters: [index]\";","lastModifiedDate":"2023-11-11"},{"lineNumber":19,"author":{"gitId":"yarnmengnus"},"content":"    public static final String MESSAGE_EXAMPLE \u003d \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2023-10-30"},{"lineNumber":20,"author":{"gitId":"yarnmengnus"},"content":"    public static final String MESSAGE_FULL_HELP \u003d MESSAGE_USAGE + \"\\n\" + MESSAGE_DETAILS + \"\\n\" + MESSAGE_EXAMPLE;","lastModifiedDate":"2023-11-11"},{"lineNumber":21,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":22,"author":{"gitId":"newway1814"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Task successfully marked as done, Prof! \"","lastModifiedDate":"2023-10-16"},{"lineNumber":23,"author":{"gitId":"newway1814"},"content":"                                                    + \"Here is your updated task list\";","lastModifiedDate":"2023-10-16"},{"lineNumber":24,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":25,"author":{"gitId":"yarnmengnus"},"content":"    public static final String MESSAGE_INVALID_NUMBER \u003d \"[index] should be greater than or equal to 1\";","lastModifiedDate":"2023-11-11"},{"lineNumber":26,"author":{"gitId":"newway1814"},"content":"    public static final String MESSAGE_ALREADY_DONE \u003d \"This task is already marked as done\";","lastModifiedDate":"2023-10-16"},{"lineNumber":27,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":28,"author":{"gitId":"newway1814"},"content":"    private final int taskNumber;","lastModifiedDate":"2023-10-16"},{"lineNumber":29,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":30,"author":{"gitId":"newway1814"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":31,"author":{"gitId":"newway1814"},"content":"     * Creates an AddCommand to add the specified {@code Task}","lastModifiedDate":"2023-10-16"},{"lineNumber":32,"author":{"gitId":"newway1814"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":33,"author":{"gitId":"newway1814"},"content":"    public MarkCommand(int number) {","lastModifiedDate":"2023-10-16"},{"lineNumber":34,"author":{"gitId":"newway1814"},"content":"        assert number \u003e 0;","lastModifiedDate":"2023-10-16"},{"lineNumber":35,"author":{"gitId":"newway1814"},"content":"        taskNumber \u003d number;","lastModifiedDate":"2023-10-16"},{"lineNumber":36,"author":{"gitId":"newway1814"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":37,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":38,"author":{"gitId":"newway1814"},"content":"    @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":39,"author":{"gitId":"newway1814"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-16"},{"lineNumber":40,"author":{"gitId":"newway1814"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-16"},{"lineNumber":41,"author":{"gitId":"newway1814"},"content":"        if (taskNumber \u003e model.getFilteredTaskList().size()) {","lastModifiedDate":"2023-10-25"},{"lineNumber":42,"author":{"gitId":"newway1814"},"content":"            throw new CommandException(\"Task not found please enter a valid Task Number.\");","lastModifiedDate":"2023-10-25"},{"lineNumber":43,"author":{"gitId":"newway1814"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":44,"author":{"gitId":"jack1e0"},"content":"        try {","lastModifiedDate":"2023-11-12"},{"lineNumber":45,"author":{"gitId":"newway1814"},"content":"            model.markTask(taskNumber - 1);","lastModifiedDate":"2023-10-16"},{"lineNumber":46,"author":{"gitId":"jack1e0"},"content":"        } catch (IllegalArgumentException e) { // if adding days to recurring task increases due date past 2030","lastModifiedDate":"2023-11-12"},{"lineNumber":47,"author":{"gitId":"jack1e0"},"content":"            throw new CommandException(DueDate.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-11-12"},{"lineNumber":48,"author":{"gitId":"jack1e0"},"content":"        }","lastModifiedDate":"2023-11-12"},{"lineNumber":49,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":50,"author":{"gitId":"newway1814"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2023-10-16"},{"lineNumber":51,"author":{"gitId":"newway1814"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":52,"author":{"gitId":"newway1814"},"content":"    @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":53,"author":{"gitId":"newway1814"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-16"},{"lineNumber":54,"author":{"gitId":"newway1814"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-16"},{"lineNumber":55,"author":{"gitId":"newway1814"},"content":"            return true;","lastModifiedDate":"2023-10-16"},{"lineNumber":56,"author":{"gitId":"newway1814"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":57,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":58,"author":{"gitId":"newway1814"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-16"},{"lineNumber":59,"author":{"gitId":"newway1814"},"content":"        if (!(other instanceof MarkCommand)) {","lastModifiedDate":"2023-10-16"},{"lineNumber":60,"author":{"gitId":"newway1814"},"content":"            return false;","lastModifiedDate":"2023-10-16"},{"lineNumber":61,"author":{"gitId":"newway1814"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":62,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":63,"author":{"gitId":"newway1814"},"content":"        MarkCommand otherMarkCommand \u003d (MarkCommand) other;","lastModifiedDate":"2023-10-16"},{"lineNumber":64,"author":{"gitId":"newway1814"},"content":"        return taskNumber \u003d\u003d otherMarkCommand.taskNumber;","lastModifiedDate":"2023-10-16"},{"lineNumber":65,"author":{"gitId":"newway1814"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":66,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":67,"author":{"gitId":"newway1814"},"content":"    @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":68,"author":{"gitId":"newway1814"},"content":"    public String toString() {","lastModifiedDate":"2023-10-16"},{"lineNumber":69,"author":{"gitId":"newway1814"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-16"},{"lineNumber":70,"author":{"gitId":"newway1814"},"content":"                .add(\"taskNumber\", taskNumber)","lastModifiedDate":"2023-10-16"},{"lineNumber":71,"author":{"gitId":"newway1814"},"content":"                .toString();","lastModifiedDate":"2023-10-16"},{"lineNumber":72,"author":{"gitId":"newway1814"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":73,"author":{"gitId":"newway1814"},"content":"}","lastModifiedDate":"2023-10-16"}],"authorContributionMap":{"yarnmengnus":5,"jack1e0":7,"newway1814":61}},{"path":"src/main/java/profplan/logic/commands/SortDueDateCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"newway1814"},"content":"package profplan.logic.commands;","lastModifiedDate":"2023-10-25"},{"lineNumber":2,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":3,"author":{"gitId":"newway1814"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-25"},{"lineNumber":4,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":5,"author":{"gitId":"newway1814"},"content":"import profplan.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"newway1814"},"content":"import profplan.model.Model;","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"newway1814"},"content":"/**","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"jack1e0"},"content":" * Sorts tasklist by DueDate.","lastModifiedDate":"2023-10-29"},{"lineNumber":10,"author":{"gitId":"newway1814"},"content":" */","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"jack1e0"},"content":"public class SortDueDateCommand extends Command {","lastModifiedDate":"2023-10-29"},{"lineNumber":12,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"jack1e0"},"content":"    public static final String COMMAND_WORD \u003d \"sort_duedate\";","lastModifiedDate":"2023-10-29"},{"lineNumber":14,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"jack1e0"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Sorts the task by due date.\";","lastModifiedDate":"2023-10-29"},{"lineNumber":16,"author":{"gitId":"yarnmengnus"},"content":"    public static final String MESSAGE_FULL_HELP \u003d MESSAGE_USAGE;","lastModifiedDate":"2023-11-11"},{"lineNumber":17,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":18,"author":{"gitId":"jack1e0"},"content":"    public static final String MESSAGE_SUCCESS \u003d \" Here is your task list Prof, sorted by nearest due date.\";","lastModifiedDate":"2023-10-29"},{"lineNumber":19,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"newway1814"},"content":"    @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"newway1814"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"newway1814"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"newway1814"},"content":"        try {","lastModifiedDate":"2023-11-02"},{"lineNumber":25,"author":{"gitId":"jack1e0"},"content":"            model.sortTaskByDueDate();","lastModifiedDate":"2023-11-02"},{"lineNumber":26,"author":{"gitId":"newway1814"},"content":"        } catch (UnsupportedOperationException e) {","lastModifiedDate":"2023-11-02"},{"lineNumber":27,"author":{"gitId":"newway1814"},"content":"            return new CommandResult(e.getMessage());","lastModifiedDate":"2023-11-02"},{"lineNumber":28,"author":{"gitId":"newway1814"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":29,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":30,"author":{"gitId":"newway1814"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2023-10-25"},{"lineNumber":31,"author":{"gitId":"newway1814"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":32,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":33,"author":{"gitId":"newway1814"},"content":"}","lastModifiedDate":"2023-10-25"}],"authorContributionMap":{"yarnmengnus":1,"jack1e0":6,"newway1814":26}},{"path":"src/main/java/profplan/logic/commands/SortPriorityCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"newway1814"},"content":"package profplan.logic.commands;","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"newway1814"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"newway1814"},"content":"import profplan.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"newway1814"},"content":"import profplan.model.Model;","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"newway1814"},"content":"/**","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"jack1e0"},"content":" * Sorts tasklist by Priority.","lastModifiedDate":"2023-10-29"},{"lineNumber":10,"author":{"gitId":"newway1814"},"content":" */","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"newway1814"},"content":"public class SortPriorityCommand extends Command {","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"newway1814"},"content":"    public static final String COMMAND_WORD \u003d \"sort_priority\";","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"jack1e0"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Sorts the tasks based on priority.\";","lastModifiedDate":"2023-10-29"},{"lineNumber":16,"author":{"gitId":"yarnmengnus"},"content":"    public static final String MESSAGE_EXAMPLE \u003d \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2023-10-30"},{"lineNumber":17,"author":{"gitId":"yarnmengnus"},"content":"    public static final String MESSAGE_FULL_HELP \u003d MESSAGE_USAGE + \"\\n\" + \"\\n\" + MESSAGE_EXAMPLE;","lastModifiedDate":"2023-11-11"},{"lineNumber":18,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"jack1e0"},"content":"    public static final String MESSAGE_SUCCESS \u003d \" Here is your task list Prof, sorted based on priority\";","lastModifiedDate":"2023-10-29"},{"lineNumber":20,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"newway1814"},"content":"    @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"newway1814"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"newway1814"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-26"},{"lineNumber":25,"author":{"gitId":"newway1814"},"content":"        try {","lastModifiedDate":"2023-11-02"},{"lineNumber":26,"author":{"gitId":"newway1814"},"content":"            model.sortTaskByPriority();","lastModifiedDate":"2023-10-26"},{"lineNumber":27,"author":{"gitId":"newway1814"},"content":"        } catch (UnsupportedOperationException e) {","lastModifiedDate":"2023-11-02"},{"lineNumber":28,"author":{"gitId":"newway1814"},"content":"            return new CommandResult(e.getMessage());","lastModifiedDate":"2023-11-02"},{"lineNumber":29,"author":{"gitId":"newway1814"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":30,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":31,"author":{"gitId":"newway1814"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2023-10-26"},{"lineNumber":32,"author":{"gitId":"newway1814"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":33,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":34,"author":{"gitId":"newway1814"},"content":"}","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"yarnmengnus":2,"jack1e0":3,"newway1814":29}},{"path":"src/main/java/profplan/logic/commands/StatsCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yarnmengnus"},"content":"package profplan.logic.commands;","lastModifiedDate":"2023-11-03"},{"lineNumber":2,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":3,"author":{"gitId":"yarnmengnus"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-11-03"},{"lineNumber":4,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":5,"author":{"gitId":"yarnmengnus"},"content":"import profplan.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-11-03"},{"lineNumber":6,"author":{"gitId":"yarnmengnus"},"content":"import profplan.model.Model;","lastModifiedDate":"2023-11-03"},{"lineNumber":7,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":8,"author":{"gitId":"yarnmengnus"},"content":"/**","lastModifiedDate":"2023-11-03"},{"lineNumber":9,"author":{"gitId":"yarnmengnus"},"content":" * Lists tasks within a month of today.","lastModifiedDate":"2023-11-03"},{"lineNumber":10,"author":{"gitId":"yarnmengnus"},"content":" */","lastModifiedDate":"2023-11-03"},{"lineNumber":11,"author":{"gitId":"yarnmengnus"},"content":"public class StatsCommand extends Command {","lastModifiedDate":"2023-11-03"},{"lineNumber":12,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":13,"author":{"gitId":"yarnmengnus"},"content":"    public static final String COMMAND_WORD \u003d \"stats\";","lastModifiedDate":"2023-11-03"},{"lineNumber":14,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":15,"author":{"gitId":"yarnmengnus"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \"Shows a summary of your progress\";","lastModifiedDate":"2023-11-03"},{"lineNumber":16,"author":{"gitId":"yarnmengnus"},"content":"    public static final String MESSAGE_FULL_HELP \u003d MESSAGE_USAGE;","lastModifiedDate":"2023-11-11"},{"lineNumber":17,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":18,"author":{"gitId":"yarnmengnus"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Here are your statistics Prof!\\n\";","lastModifiedDate":"2023-11-03"},{"lineNumber":19,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":20,"author":{"gitId":"yarnmengnus"},"content":"    public static final String COMPLETION_RATE_MESSAGE_FORMAT \u003d \"Completion Rate: %.1f%%\";","lastModifiedDate":"2023-11-03"},{"lineNumber":21,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":22,"author":{"gitId":"yarnmengnus"},"content":"    @Override","lastModifiedDate":"2023-11-03"},{"lineNumber":23,"author":{"gitId":"yarnmengnus"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-11-03"},{"lineNumber":24,"author":{"gitId":"yarnmengnus"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-11-03"},{"lineNumber":25,"author":{"gitId":"yarnmengnus"},"content":"        String rtn \u003d MESSAGE_SUCCESS","lastModifiedDate":"2023-11-03"},{"lineNumber":26,"author":{"gitId":"yarnmengnus"},"content":"            + String.format(COMPLETION_RATE_MESSAGE_FORMAT, Math.ceil(model.getCompletionRate() * 1000) / 10);","lastModifiedDate":"2023-11-03"},{"lineNumber":27,"author":{"gitId":"yarnmengnus"},"content":"        return new CommandResult(rtn);","lastModifiedDate":"2023-11-03"},{"lineNumber":28,"author":{"gitId":"yarnmengnus"},"content":"    }","lastModifiedDate":"2023-11-03"},{"lineNumber":29,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":30,"author":{"gitId":"yarnmengnus"},"content":"}","lastModifiedDate":"2023-11-03"}],"authorContributionMap":{"yarnmengnus":30}},{"path":"src/main/java/profplan/logic/commands/UnmarkCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"newway1814"},"content":"package profplan.logic.commands;","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"newway1814"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"newway1814"},"content":"import profplan.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"newway1814"},"content":"import profplan.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"newway1814"},"content":"import profplan.model.Model;","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"newway1814"},"content":"/**","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"jack1e0"},"content":" * Marks Status of task as undone.","lastModifiedDate":"2023-10-29"},{"lineNumber":11,"author":{"gitId":"newway1814"},"content":" */","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"newway1814"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"newway1814"},"content":"    public static final String COMMAND_WORD \u003d \"unmark\";","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"yarnmengnus"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Marks a task as undone.\";","lastModifiedDate":"2023-10-30"},{"lineNumber":17,"author":{"gitId":"yarnmengnus"},"content":"    public static final String MESSAGE_DETAILS \u003d \"Parameters: \"","lastModifiedDate":"2023-10-30"},{"lineNumber":18,"author":{"gitId":"yarnmengnus"},"content":"            + \"[index] \";","lastModifiedDate":"2023-11-11"},{"lineNumber":19,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":20,"author":{"gitId":"yarnmengnus"},"content":"    public static final String MESSAGE_EXAMPLE \u003d \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2023-11-11"},{"lineNumber":21,"author":{"gitId":"yarnmengnus"},"content":"    public static final String MESSAGE_FULL_HELP \u003d MESSAGE_USAGE + \"\\n\" + MESSAGE_DETAILS + \"\\n\" + MESSAGE_EXAMPLE;","lastModifiedDate":"2023-11-11"},{"lineNumber":22,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"newway1814"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Task successfully marked as undone, Prof! \"","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"newway1814"},"content":"                                                    + \"Here is your updated task list\";","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"newway1814"},"content":"    public static final String MESSAGE_INVALID_NUMBER \u003d \"INDEX should be greater than or equal to 1\";","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"newway1814"},"content":"    public static final String MESSAGE_ALREADY_UNDONE \u003d \"This task is already marked as undone\";","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"newway1814"},"content":"    private final int taskNumber;","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"newway1814"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"newway1814"},"content":"     * It is a constructor which assigns the number of the task which is to be unmarked","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"newway1814"},"content":"     * to the tasknumber variable.","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"newway1814"},"content":"     * @param number","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"newway1814"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"newway1814"},"content":"    public UnmarkCommand(int number) {","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"newway1814"},"content":"        assert number \u003e 0;","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"newway1814"},"content":"        taskNumber \u003d number;","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"newway1814"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"newway1814"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"newway1814"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"newway1814"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"newway1814"},"content":"        if (taskNumber \u003e model.getFilteredTaskList().size()) {","lastModifiedDate":"2023-10-25"},{"lineNumber":45,"author":{"gitId":"newway1814"},"content":"            throw new CommandException(\"Task not found please enter a valid Task Number.\");","lastModifiedDate":"2023-10-25"},{"lineNumber":46,"author":{"gitId":"newway1814"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":47,"author":{"gitId":"newway1814"},"content":"        model.unmarkTask(taskNumber - 1);","lastModifiedDate":"2023-10-17"},{"lineNumber":48,"author":{"gitId":"newway1814"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2023-10-17"},{"lineNumber":49,"author":{"gitId":"newway1814"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":50,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":51,"author":{"gitId":"newway1814"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":52,"author":{"gitId":"newway1814"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-17"},{"lineNumber":53,"author":{"gitId":"newway1814"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-17"},{"lineNumber":54,"author":{"gitId":"newway1814"},"content":"            return true;","lastModifiedDate":"2023-10-17"},{"lineNumber":55,"author":{"gitId":"newway1814"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":56,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":57,"author":{"gitId":"newway1814"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-17"},{"lineNumber":58,"author":{"gitId":"newway1814"},"content":"        if (!(other instanceof UnmarkCommand)) {","lastModifiedDate":"2023-10-17"},{"lineNumber":59,"author":{"gitId":"newway1814"},"content":"            return false;","lastModifiedDate":"2023-10-17"},{"lineNumber":60,"author":{"gitId":"newway1814"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":61,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":62,"author":{"gitId":"newway1814"},"content":"        UnmarkCommand otherMarkCommand \u003d (UnmarkCommand) other;","lastModifiedDate":"2023-10-17"},{"lineNumber":63,"author":{"gitId":"newway1814"},"content":"        return taskNumber \u003d\u003d otherMarkCommand.taskNumber;","lastModifiedDate":"2023-10-17"},{"lineNumber":64,"author":{"gitId":"newway1814"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":65,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":66,"author":{"gitId":"newway1814"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":67,"author":{"gitId":"newway1814"},"content":"    public String toString() {","lastModifiedDate":"2023-10-17"},{"lineNumber":68,"author":{"gitId":"newway1814"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-17"},{"lineNumber":69,"author":{"gitId":"newway1814"},"content":"                .add(\"taskNumber\", taskNumber)","lastModifiedDate":"2023-10-17"},{"lineNumber":70,"author":{"gitId":"newway1814"},"content":"                .toString();","lastModifiedDate":"2023-10-17"},{"lineNumber":71,"author":{"gitId":"newway1814"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":72,"author":{"gitId":"newway1814"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"yarnmengnus":6,"jack1e0":1,"newway1814":65}},{"path":"src/main/java/profplan/logic/commands/exceptions/CommandException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kiatkat"},"content":"package profplan.logic.commands.exceptions;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents an error which occurs during execution of a {@link Command}.","lastModifiedDate":"2017-02-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CommandException extends Exception {","lastModifiedDate":"2017-02-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    public CommandException(String message) {","lastModifiedDate":"2017-02-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Constructs a new {@code CommandException} with the specified detail {@code message} and {@code cause}.","lastModifiedDate":"2018-08-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public CommandException(String message, Throwable cause) {","lastModifiedDate":"2018-08-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2018-08-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"kiatkat":1,"-":16}},{"path":"src/main/java/profplan/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kiatkat"},"content":"package profplan.logic.parser;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"kiatkat"},"content":"import static profplan.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"kiatkat"},"content":"import static profplan.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"jack1e0"},"content":"import static profplan.logic.parser.CliSyntax.PREFIX_DUEDATE;","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"yarnmengnus"},"content":"import static profplan.logic.parser.CliSyntax.PREFIX_LINK;","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"kiatkat"},"content":"import static profplan.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"eyelessrhyme7"},"content":"import static profplan.logic.parser.CliSyntax.PREFIX_PRIORITY;","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"kiatkat"},"content":"import static profplan.logic.parser.CliSyntax.PREFIX_RECURRING;","lastModifiedDate":"2023-10-30"},{"lineNumber":10,"author":{"gitId":"yarnmengnus"},"content":"import static profplan.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":15,"author":{"gitId":"kiatkat"},"content":"import profplan.logic.commands.AddCommand;","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"kiatkat"},"content":"import profplan.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"kiatkat"},"content":"import profplan.model.tag.Tag;","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"kiatkat"},"content":"import profplan.model.task.Description;","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"jack1e0"},"content":"import profplan.model.task.DueDate;","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"yarnmengnus"},"content":"import profplan.model.task.Link;","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"newway1814"},"content":"import profplan.model.task.Name;","lastModifiedDate":"2023-10-16"},{"lineNumber":22,"author":{"gitId":"eyelessrhyme7"},"content":"import profplan.model.task.Priority;","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"yarnmengnus"},"content":"import profplan.model.task.Task;","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":37,"author":{"gitId":"kiatkat"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PRIORITY, PREFIX_RECURRING,","lastModifiedDate":"2023-10-30"},{"lineNumber":38,"author":{"gitId":"kiatkat"},"content":"                        PREFIX_TAG, PREFIX_DUEDATE, PREFIX_LINK, PREFIX_DESCRIPTION);","lastModifiedDate":"2023-10-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":40,"author":{"gitId":"eyelessrhyme7"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_PRIORITY, PREFIX_DUEDATE)","lastModifiedDate":"2023-11-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":42,"author":{"gitId":"yarnmengnus"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_FULL_HELP));","lastModifiedDate":"2023-11-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":45,"author":{"gitId":"kiatkat"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_PRIORITY, PREFIX_RECURRING);","lastModifiedDate":"2023-10-30"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":47,"author":{"gitId":"eyelessrhyme7"},"content":"        Priority priority \u003d ParserUtil.parsePriority(argMultimap.getValue(PREFIX_PRIORITY).get());","lastModifiedDate":"2023-11-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2017-03-17"},{"lineNumber":49,"author":{"gitId":"jack1e0"},"content":"        DueDate dueDate \u003d ParserUtil.parseDueDate(argMultimap.getValue(PREFIX_DUEDATE).get());","lastModifiedDate":"2023-11-12"},{"lineNumber":50,"author":{"gitId":"yarnmengnus"},"content":"        Link link \u003d ParserUtil.parseLink(argMultimap.getValue(PREFIX_LINK).orElse(\"-\"));","lastModifiedDate":"2023-10-17"},{"lineNumber":51,"author":{"gitId":"kiatkat"},"content":"        boolean isRecurring \u003d argMultimap.getValue(PREFIX_RECURRING).isPresent();","lastModifiedDate":"2023-10-30"},{"lineNumber":52,"author":{"gitId":"kiatkat"},"content":"        Task.RecurringType recurringType \u003d isRecurring","lastModifiedDate":"2023-10-30"},{"lineNumber":53,"author":{"gitId":"kiatkat"},"content":"                ? ParserUtil.parseRecurringType(argMultimap.getValue(PREFIX_RECURRING).get()) : null;","lastModifiedDate":"2023-10-30"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":55,"author":{"gitId":"kiatkat"},"content":"        Task task \u003d new Task(name, priority, isRecurring, recurringType, tagList, dueDate,","lastModifiedDate":"2023-11-01"},{"lineNumber":56,"author":{"gitId":"kiatkat"},"content":"                link, new Description(\"\"));","lastModifiedDate":"2023-10-26"},{"lineNumber":57,"author":{"gitId":"newway1814"},"content":"        return new AddCommand(task);","lastModifiedDate":"2023-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"yarnmengnus":6,"jack1e0":3,"kiatkat":17,"eyelessrhyme7":4,"-":36,"newway1814":2}},{"path":"src/main/java/profplan/logic/parser/ArgumentMultimap.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kiatkat"},"content":"package profplan.logic.parser;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2017-03-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-03-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2017-03-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-03-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-07-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":10,"author":{"gitId":"kiatkat"},"content":"import profplan.logic.Messages;","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"kiatkat"},"content":"import profplan.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Stores mapping of prefixes to their respective arguments.","lastModifiedDate":"2017-03-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Each key may be associated with multiple argument values.","lastModifiedDate":"2017-03-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Values for a given key are stored in a list, and the insertion ordering is maintained.","lastModifiedDate":"2017-03-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Keys are unique, but the list of argument values may contain duplicate argument values, i.e. the same argument value","lastModifiedDate":"2017-03-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * can be inserted multiple times for the same prefix.","lastModifiedDate":"2017-03-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class ArgumentMultimap {","lastModifiedDate":"2017-03-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /** Prefixes mapped to their respective arguments**/","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final Map\u003cPrefix, List\u003cString\u003e\u003e argMultimap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Associates the specified argument value with {@code prefix} key in this map.","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * If the map previously contained a mapping for the key, the new value is appended to the list of existing values.","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * @param prefix   Prefix key with which the specified argument value is to be associated","lastModifiedDate":"2017-03-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @param argValue Argument value to be associated with the specified prefix key","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void put(Prefix prefix, String argValue) {","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        List\u003cString\u003e argValues \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        argValues.add(argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        argMultimap.put(prefix, argValues);","lastModifiedDate":"2017-03-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Returns the last value of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return values.isEmpty() ? Optional.empty() : Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2017-03-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Returns all values of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * If the prefix does not exist or has no values, this will return an empty list.","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Modifying the returned list will not affect the underlying data structure of the ArgumentMultimap.","lastModifiedDate":"2017-03-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public List\u003cString\u003e getAllValues(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (!argMultimap.containsKey(prefix)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(argMultimap.get(prefix));","lastModifiedDate":"2017-03-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Returns the preamble (text before the first valid prefix). Trims any leading/trailing spaces.","lastModifiedDate":"2017-03-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public String getPreamble() {","lastModifiedDate":"2017-03-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return getValue(new Prefix(\"\")).orElse(\"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-07-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * Throws a {@code ParseException} if any of the prefixes given in {@code prefixes} appeared more than","lastModifiedDate":"2023-07-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * once among the arguments.","lastModifiedDate":"2023-07-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-07-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void verifyNoDuplicatePrefixesFor(Prefix... prefixes) throws ParseException {","lastModifiedDate":"2023-07-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        Prefix[] duplicatedPrefixes \u003d Stream.of(prefixes).distinct()","lastModifiedDate":"2023-07-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                .filter(prefix -\u003e argMultimap.containsKey(prefix) \u0026\u0026 argMultimap.get(prefix).size() \u003e 1)","lastModifiedDate":"2023-07-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                .toArray(Prefix[]::new);","lastModifiedDate":"2023-07-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        if (duplicatedPrefixes.length \u003e 0) {","lastModifiedDate":"2023-07-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            throw new ParseException(Messages.getErrorMessageForDuplicatePrefixes(duplicatedPrefixes));","lastModifiedDate":"2023-07-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-08"}],"authorContributionMap":{"kiatkat":3,"-":75}},{"path":"src/main/java/profplan/logic/parser/ArgumentTokenizer.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kiatkat"},"content":"package profplan.logic.parser;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-10-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Tokenizes arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":" *     e.g. {@code some preamble text t/ 11.00 t/12.00 k/ m/ July}  where prefixes are {@code t/ k/ m/}.\u003cbr\u003e","lastModifiedDate":"2017-05-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * 1. An argument\u0027s value can be an empty string e.g. the value of {@code k/} in the above example.\u003cbr\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * 2. Leading and trailing whitespaces of an argument value will be discarded.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * 3. An argument may be repeated and all its values will be accumulated e.g. the value of {@code t/}","lastModifiedDate":"2017-05-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":" *    in the above example.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ArgumentTokenizer {","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Tokenizes an arguments string and returns an {@code ArgumentMultimap} object that maps prefixes to their","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * respective argument values. Only the given prefixes will be recognized in the arguments string.","lastModifiedDate":"2017-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @return           ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static ArgumentMultimap tokenize(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d findAllPrefixPositions(argsString, prefixes);","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return extractArguments(argsString, positions);","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Finds all zero-based prefix positions in the given arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to find in the arguments string","lastModifiedDate":"2017-03-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @return           List of zero-based prefix positions in the given arguments string","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findAllPrefixPositions(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return Arrays.stream(prefixes)","lastModifiedDate":"2018-01-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                .flatMap(prefix -\u003e findPrefixPositions(argsString, prefix).stream())","lastModifiedDate":"2018-01-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2018-01-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * {@see findAllPrefixPositions}","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findPrefixPositions(String argsString, Prefix prefix) {","lastModifiedDate":"2017-03-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2016-10-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        int prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), 0);","lastModifiedDate":"2017-05-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        while (prefixPosition !\u003d -1) {","lastModifiedDate":"2017-05-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            PrefixPosition extendedPrefix \u003d new PrefixPosition(prefix, prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            positions.add(extendedPrefix);","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return positions;","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Returns the index of the first occurrence of {@code prefix} in","lastModifiedDate":"2017-05-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * {@code argsString} starting from index {@code fromIndex}. An occurrence","lastModifiedDate":"2017-05-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * is valid if there is a whitespace before {@code prefix}. Returns -1 if no","lastModifiedDate":"2017-05-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * such occurrence can be found.","lastModifiedDate":"2017-05-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * E.g if {@code argsString} \u003d \"e/hip/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns -1 as there are no valid","lastModifiedDate":"2017-05-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * occurrences of \"p/\" with whitespace before it. However, if","lastModifiedDate":"2017-05-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * {@code argsString} \u003d \"e/hi p/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns 5.","lastModifiedDate":"2017-05-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    private static int findPrefixPosition(String argsString, String prefix, int fromIndex) {","lastModifiedDate":"2017-05-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        int prefixIndex \u003d argsString.indexOf(\" \" + prefix, fromIndex);","lastModifiedDate":"2017-05-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return prefixIndex \u003d\u003d -1 ? -1","lastModifiedDate":"2017-05-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                : prefixIndex + 1; // +1 as offset for whitespace","lastModifiedDate":"2017-05-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Extracts prefixes and their argument values, and returns an {@code ArgumentMultimap} object that maps the","lastModifiedDate":"2017-03-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * extracted prefixes to their respective arguments. Prefixes are extracted based on their zero-based positions in","lastModifiedDate":"2017-03-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * {@code argsString}.","lastModifiedDate":"2017-03-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * @param argsString      Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @param prefixPositions Zero-based positions of all prefixes in {@code argsString}","lastModifiedDate":"2017-03-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * @return                ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    private static ArgumentMultimap extractArguments(String argsString, List\u003cPrefixPosition\u003e prefixPositions) {","lastModifiedDate":"2017-03-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // Sort by start position","lastModifiedDate":"2016-10-16"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        prefixPositions.sort((prefix1, prefix2) -\u003e prefix1.getStartPosition() - prefix2.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // Insert a PrefixPosition to represent the preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        PrefixPosition preambleMarker \u003d new PrefixPosition(new Prefix(\"\"), 0);","lastModifiedDate":"2016-10-16"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        prefixPositions.add(0, preambleMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // Add a dummy PrefixPosition to represent the end of the string","lastModifiedDate":"2016-10-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        PrefixPosition endPositionMarker \u003d new PrefixPosition(new Prefix(\"\"), argsString.length());","lastModifiedDate":"2016-10-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        prefixPositions.add(endPositionMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // Map prefixes to their argument values (if any)","lastModifiedDate":"2017-03-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d new ArgumentMultimap();","lastModifiedDate":"2017-03-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c prefixPositions.size() - 1; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            // Extract and store prefixes and their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            Prefix argPrefix \u003d prefixPositions.get(i).getPrefix();","lastModifiedDate":"2017-03-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            String argValue \u003d extractArgumentValue(argsString, prefixPositions.get(i), prefixPositions.get(i + 1));","lastModifiedDate":"2016-10-16"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            argMultimap.put(argPrefix, argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return argMultimap;","lastModifiedDate":"2017-03-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Returns the trimmed value of the argument in the arguments string specified by {@code currentPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * The end position of the value is determined by {@code nextPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    private static String extractArgumentValue(String argsString,","lastModifiedDate":"2017-03-20"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                                        PrefixPosition currentPrefixPosition,","lastModifiedDate":"2016-10-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                                        PrefixPosition nextPrefixPosition) {","lastModifiedDate":"2016-10-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Prefix prefix \u003d currentPrefixPosition.getPrefix();","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        int valueStartPos \u003d currentPrefixPosition.getStartPosition() + prefix.getPrefix().length();","lastModifiedDate":"2016-10-16"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        String value \u003d argsString.substring(valueStartPos, nextPrefixPosition.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        return value.trim();","lastModifiedDate":"2016-10-16"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * Represents a prefix\u0027s position in an arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    private static class PrefixPosition {","lastModifiedDate":"2017-03-20"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        private int startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        private final Prefix prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        PrefixPosition(Prefix prefix, int startPosition) {","lastModifiedDate":"2016-10-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            this.prefix \u003d prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            this.startPosition \u003d startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        int getStartPosition() {","lastModifiedDate":"2016-10-19"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            return startPosition;","lastModifiedDate":"2018-08-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        Prefix getPrefix() {","lastModifiedDate":"2016-10-19"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            return prefix;","lastModifiedDate":"2018-08-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":148,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"kiatkat":1,"-":147}},{"path":"src/main/java/profplan/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kiatkat"},"content":"package profplan.logic.parser;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"eyelessrhyme7"},"content":"    public static final Prefix PREFIX_PRIORITY \u003d new Prefix(\"p/\");","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"kiatkat"},"content":"    public static final Prefix PREFIX_RECURRING \u003d new Prefix(\"recur/\");","lastModifiedDate":"2023-10-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"jack1e0"},"content":"    public static final Prefix PREFIX_STATUS \u003d new Prefix(\"s/\");","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"yarnmengnus"},"content":"    public static final Prefix PREFIX_LINK \u003d new Prefix(\"l/\");","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"jack1e0"},"content":"    public static final Prefix PREFIX_DUEDATE \u003d new Prefix(\"d/\");","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"kiatkat"},"content":"    public static final Prefix PREFIX_DESCRIPTION \u003d new Prefix(\"des/\");","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"yarnmengnus":1,"jack1e0":2,"kiatkat":3,"eyelessrhyme7":1,"-":11}},{"path":"src/main/java/profplan/logic/parser/DeleteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kiatkat"},"content":"package profplan.logic.parser;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"kiatkat"},"content":"import static profplan.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"kiatkat"},"content":"import profplan.commons.core.index.Index;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"kiatkat"},"content":"import profplan.logic.commands.DeleteCommand;","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"kiatkat"},"content":"import profplan.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new DeleteCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class DeleteCommandParser implements Parser\u003cDeleteCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public DeleteCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2017-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            return new DeleteCommand(index);","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":24,"author":{"gitId":"newway1814"},"content":"            if (args.trim().equals(\"all\")) {","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"newway1814"},"content":"                return new DeleteCommand();","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"newway1814"},"content":"            }","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":28,"author":{"gitId":"yarnmengnus"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_FULL_HELP), pe);","lastModifiedDate":"2023-11-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"yarnmengnus":1,"kiatkat":5,"-":23,"newway1814":3}},{"path":"src/main/java/profplan/logic/parser/DescriptionCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kiatkat"},"content":"package profplan.logic.parser;","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"kiatkat"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"kiatkat"},"content":"import static profplan.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"kiatkat"},"content":"import static profplan.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"kiatkat"},"content":"import profplan.commons.core.index.Index;","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"kiatkat"},"content":"import profplan.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"kiatkat"},"content":"import profplan.logic.commands.DescriptionCommand;","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"kiatkat"},"content":"import profplan.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"kiatkat"},"content":"import profplan.model.task.Description;","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"kiatkat"},"content":"/**","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"kiatkat"},"content":" * Parses user input and creates a DescriptionCommand object.","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"kiatkat"},"content":" */","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"kiatkat"},"content":"public class DescriptionCommandParser implements Parser\u003cDescriptionCommand\u003e {","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"kiatkat"},"content":"    @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"kiatkat"},"content":"    public DescriptionCommand parse(String userInput) throws ParseException {","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"kiatkat"},"content":"        requireNonNull(userInput);","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"kiatkat"},"content":"        ArgumentMultimap argumentMultimap \u003d ArgumentTokenizer.tokenize(userInput, PREFIX_DESCRIPTION);","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"kiatkat"},"content":"        Index index;","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"kiatkat"},"content":"        try {","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"kiatkat"},"content":"            index \u003d ParserUtil.parseIndex(argumentMultimap.getPreamble());","lastModifiedDate":"2023-10-26"},{"lineNumber":25,"author":{"gitId":"kiatkat"},"content":"        } catch (IllegalValueException illegalValueException) {","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"kiatkat"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-10-26"},{"lineNumber":27,"author":{"gitId":"yarnmengnus"},"content":"                    DescriptionCommand.MESSAGE_FULL_HELP), illegalValueException);","lastModifiedDate":"2023-11-11"},{"lineNumber":28,"author":{"gitId":"kiatkat"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":30,"author":{"gitId":"kiatkat"},"content":"        Description description \u003d new Description(argumentMultimap","lastModifiedDate":"2023-10-26"},{"lineNumber":31,"author":{"gitId":"kiatkat"},"content":"                .getValue(PREFIX_DESCRIPTION).orElse(\"\"));","lastModifiedDate":"2023-10-26"},{"lineNumber":32,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":33,"author":{"gitId":"kiatkat"},"content":"        return new DescriptionCommand(index, description);","lastModifiedDate":"2023-10-26"},{"lineNumber":34,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":35,"author":{"gitId":"kiatkat"},"content":"}","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"yarnmengnus":1,"kiatkat":34}},{"path":"src/main/java/profplan/logic/parser/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kiatkat"},"content":"package profplan.logic.parser;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"kiatkat"},"content":"import static profplan.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"jack1e0"},"content":"import static profplan.logic.parser.CliSyntax.PREFIX_DUEDATE;","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"yarnmengnus"},"content":"import static profplan.logic.parser.CliSyntax.PREFIX_LINK;","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"kiatkat"},"content":"import static profplan.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"eyelessrhyme7"},"content":"import static profplan.logic.parser.CliSyntax.PREFIX_PRIORITY;","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"yarnmengnus"},"content":"import static profplan.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"kiatkat"},"content":"import profplan.commons.core.index.Index;","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"kiatkat"},"content":"import profplan.logic.commands.EditCommand;","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"kiatkat"},"content":"import profplan.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"kiatkat"},"content":"import profplan.model.tag.Tag;","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class EditCommandParser implements Parser\u003cEditCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public EditCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":34,"author":{"gitId":"kiatkat"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PRIORITY, PREFIX_TAG, PREFIX_DUEDATE,","lastModifiedDate":"2023-11-02"},{"lineNumber":35,"author":{"gitId":"kiatkat"},"content":"                        PREFIX_LINK);","lastModifiedDate":"2023-11-02"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2017-06-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":41,"author":{"gitId":"yarnmengnus"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_FULL_HELP), pe);","lastModifiedDate":"2023-11-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":44,"author":{"gitId":"kiatkat"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_PRIORITY, PREFIX_LINK);","lastModifiedDate":"2023-10-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":46,"author":{"gitId":"newway1814"},"content":"        EditCommand.EditTaskDescriptor editTaskDescriptor \u003d new EditCommand.EditTaskDescriptor();","lastModifiedDate":"2023-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":49,"author":{"gitId":"newway1814"},"content":"            editTaskDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2023-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":51,"author":{"gitId":"eyelessrhyme7"},"content":"        if (argMultimap.getValue(PREFIX_PRIORITY).isPresent()) {","lastModifiedDate":"2023-10-17"},{"lineNumber":52,"author":{"gitId":"eyelessrhyme7"},"content":"            editTaskDescriptor.setPriority(ParserUtil.parsePriority(argMultimap.getValue(PREFIX_PRIORITY).get()));","lastModifiedDate":"2023-10-17"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":54,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":55,"author":{"gitId":"newway1814"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editTaskDescriptor::setTags);","lastModifiedDate":"2023-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":57,"author":{"gitId":"yarnmengnus"},"content":"        if (argMultimap.getValue(PREFIX_LINK).isPresent()) {","lastModifiedDate":"2023-10-17"},{"lineNumber":58,"author":{"gitId":"yarnmengnus"},"content":"            editTaskDescriptor.setLink(ParserUtil.parseLink(argMultimap.getValue(PREFIX_LINK).get()));","lastModifiedDate":"2023-10-17"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":60,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":61,"author":{"gitId":"jack1e0"},"content":"        if (argMultimap.getValue(PREFIX_DUEDATE).isPresent()) {","lastModifiedDate":"2023-10-17"},{"lineNumber":62,"author":{"gitId":"jack1e0"},"content":"            editTaskDescriptor.setDueDate(ParserUtil.parseDueDate(argMultimap.getValue(PREFIX_DUEDATE).get()));","lastModifiedDate":"2023-10-17"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":65,"author":{"gitId":"newway1814"},"content":"        if (!editTaskDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2023-10-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-03-11"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":69,"author":{"gitId":"newway1814"},"content":"        return new EditCommand(index, editTaskDescriptor);","lastModifiedDate":"2023-10-16"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2017-03-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2017-01-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2017-03-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2017-01-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2017-01-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2017-01-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2017-01-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"yarnmengnus":5,"jack1e0":4,"kiatkat":11,"eyelessrhyme7":3,"-":59,"newway1814":5}},{"path":"src/main/java/profplan/logic/parser/EditSettingsCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kiatkat"},"content":"package profplan.logic.parser;","lastModifiedDate":"2023-11-02"},{"lineNumber":2,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":3,"author":{"gitId":"kiatkat"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-11-02"},{"lineNumber":4,"author":{"gitId":"kiatkat"},"content":"import static profplan.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-11-12"},{"lineNumber":5,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":6,"author":{"gitId":"kiatkat"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-11-12"},{"lineNumber":7,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":8,"author":{"gitId":"kiatkat"},"content":"import profplan.commons.core.Settings;","lastModifiedDate":"2023-11-02"},{"lineNumber":9,"author":{"gitId":"kiatkat"},"content":"import profplan.logic.commands.EditSettingsCommand;","lastModifiedDate":"2023-11-02"},{"lineNumber":10,"author":{"gitId":"kiatkat"},"content":"import profplan.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-11-02"},{"lineNumber":11,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":12,"author":{"gitId":"kiatkat"},"content":"/**","lastModifiedDate":"2023-11-02"},{"lineNumber":13,"author":{"gitId":"kiatkat"},"content":" * Parses input arguments and creates a new EditSettingsCommand object","lastModifiedDate":"2023-11-02"},{"lineNumber":14,"author":{"gitId":"kiatkat"},"content":" */","lastModifiedDate":"2023-11-02"},{"lineNumber":15,"author":{"gitId":"kiatkat"},"content":"public class EditSettingsCommandParser implements Parser\u003cEditSettingsCommand\u003e {","lastModifiedDate":"2023-11-02"},{"lineNumber":16,"author":{"gitId":"kiatkat"},"content":"    /**","lastModifiedDate":"2023-11-02"},{"lineNumber":17,"author":{"gitId":"kiatkat"},"content":"     * Parses {@code userInput} into a command and returns it.","lastModifiedDate":"2023-11-02"},{"lineNumber":18,"author":{"gitId":"kiatkat"},"content":"     *","lastModifiedDate":"2023-11-02"},{"lineNumber":19,"author":{"gitId":"kiatkat"},"content":"     * @param userInput","lastModifiedDate":"2023-11-02"},{"lineNumber":20,"author":{"gitId":"kiatkat"},"content":"     * @throws ParseException if {@code userInput} does not conform the expected format","lastModifiedDate":"2023-11-02"},{"lineNumber":21,"author":{"gitId":"kiatkat"},"content":"     */","lastModifiedDate":"2023-11-02"},{"lineNumber":22,"author":{"gitId":"kiatkat"},"content":"    @Override","lastModifiedDate":"2023-11-02"},{"lineNumber":23,"author":{"gitId":"kiatkat"},"content":"    public EditSettingsCommand parse(String userInput) throws ParseException {","lastModifiedDate":"2023-11-02"},{"lineNumber":24,"author":{"gitId":"kiatkat"},"content":"        requireNonNull(userInput);","lastModifiedDate":"2023-11-02"},{"lineNumber":25,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":26,"author":{"gitId":"kiatkat"},"content":"        Prefix[] keywords \u003d Settings.KEYWORDS;","lastModifiedDate":"2023-11-02"},{"lineNumber":27,"author":{"gitId":"kiatkat"},"content":"        ArgumentMultimap argumentMultimap \u003d ArgumentTokenizer.tokenize(userInput, keywords);","lastModifiedDate":"2023-11-02"},{"lineNumber":28,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":29,"author":{"gitId":"kiatkat"},"content":"        if (!isPrefixPresent(argumentMultimap, keywords) || !argumentMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-11-12"},{"lineNumber":30,"author":{"gitId":"kiatkat"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-11-12"},{"lineNumber":31,"author":{"gitId":"kiatkat"},"content":"                    EditSettingsCommand.MESSAGE_FULL_HELP));","lastModifiedDate":"2023-11-12"},{"lineNumber":32,"author":{"gitId":"kiatkat"},"content":"        }","lastModifiedDate":"2023-11-12"},{"lineNumber":33,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":34,"author":{"gitId":"kiatkat"},"content":"        EditSettingsCommand.EditSettingsDescriptor editSettingsDescriptor \u003d","lastModifiedDate":"2023-11-02"},{"lineNumber":35,"author":{"gitId":"kiatkat"},"content":"                new EditSettingsCommand.EditSettingsDescriptor();","lastModifiedDate":"2023-11-02"},{"lineNumber":36,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":37,"author":{"gitId":"kiatkat"},"content":"        // semesterDays","lastModifiedDate":"2023-11-02"},{"lineNumber":38,"author":{"gitId":"kiatkat"},"content":"        if (argumentMultimap.getValue(keywords[0]).isPresent()) {","lastModifiedDate":"2023-11-02"},{"lineNumber":39,"author":{"gitId":"kiatkat"},"content":"            editSettingsDescriptor.setSemesterDays(ParserUtil","lastModifiedDate":"2023-11-02"},{"lineNumber":40,"author":{"gitId":"kiatkat"},"content":"                    .parseSemesterDays(argumentMultimap.getValue(keywords[0]).get()));","lastModifiedDate":"2023-11-08"},{"lineNumber":41,"author":{"gitId":"kiatkat"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":42,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":43,"author":{"gitId":"kiatkat"},"content":"        return new EditSettingsCommand(editSettingsDescriptor);","lastModifiedDate":"2023-11-02"},{"lineNumber":44,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":45,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":46,"author":{"gitId":"kiatkat"},"content":"    /**","lastModifiedDate":"2023-11-12"},{"lineNumber":47,"author":{"gitId":"kiatkat"},"content":"     * Returns true if at least one of the prefixes does not contain empty {@code Optional} values in the given","lastModifiedDate":"2023-11-12"},{"lineNumber":48,"author":{"gitId":"kiatkat"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2023-11-12"},{"lineNumber":49,"author":{"gitId":"kiatkat"},"content":"     */","lastModifiedDate":"2023-11-12"},{"lineNumber":50,"author":{"gitId":"kiatkat"},"content":"    private static boolean isPrefixPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-11-12"},{"lineNumber":51,"author":{"gitId":"kiatkat"},"content":"        return Stream.of(prefixes).anyMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-11-12"},{"lineNumber":52,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-11-12"},{"lineNumber":53,"author":{"gitId":"kiatkat"},"content":"}","lastModifiedDate":"2023-11-02"}],"authorContributionMap":{"kiatkat":53}},{"path":"src/main/java/profplan/logic/parser/FilterCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jack1e0"},"content":"package profplan.logic.parser;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":3,"author":{"gitId":"jack1e0"},"content":"import static profplan.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-20"},{"lineNumber":4,"author":{"gitId":"jack1e0"},"content":"import static profplan.logic.parser.CliSyntax.PREFIX_DUEDATE;","lastModifiedDate":"2023-10-25"},{"lineNumber":5,"author":{"gitId":"jack1e0"},"content":"import static profplan.logic.parser.CliSyntax.PREFIX_PRIORITY;","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"jack1e0"},"content":"import static profplan.logic.parser.CliSyntax.PREFIX_RECURRING;","lastModifiedDate":"2023-11-02"},{"lineNumber":7,"author":{"gitId":"jack1e0"},"content":"import static profplan.logic.parser.CliSyntax.PREFIX_STATUS;","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"jack1e0"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-29"},{"lineNumber":10,"author":{"gitId":"jack1e0"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"jack1e0"},"content":"import profplan.logic.commands.FilterCommand;","lastModifiedDate":"2023-10-20"},{"lineNumber":13,"author":{"gitId":"jack1e0"},"content":"import profplan.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-20"},{"lineNumber":14,"author":{"gitId":"jack1e0"},"content":"import profplan.model.task.Task;","lastModifiedDate":"2023-10-29"},{"lineNumber":15,"author":{"gitId":"jack1e0"},"content":"import profplan.model.task.predicates.CombinedPredicate;","lastModifiedDate":"2023-10-29"},{"lineNumber":16,"author":{"gitId":"jack1e0"},"content":"import profplan.model.task.predicates.TaskDueDatePredicate;","lastModifiedDate":"2023-10-29"},{"lineNumber":17,"author":{"gitId":"jack1e0"},"content":"import profplan.model.task.predicates.TaskPriorityPredicate;","lastModifiedDate":"2023-10-29"},{"lineNumber":18,"author":{"gitId":"jack1e0"},"content":"import profplan.model.task.predicates.TaskRecurringTypePredicate;","lastModifiedDate":"2023-11-02"},{"lineNumber":19,"author":{"gitId":"jack1e0"},"content":"import profplan.model.task.predicates.TaskStatusPredicate;","lastModifiedDate":"2023-10-29"},{"lineNumber":20,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":22,"author":{"gitId":"jack1e0"},"content":"/**","lastModifiedDate":"2023-10-20"},{"lineNumber":23,"author":{"gitId":"jack1e0"},"content":" * Parses input arguments and creates a new FilterCommand object","lastModifiedDate":"2023-10-20"},{"lineNumber":24,"author":{"gitId":"jack1e0"},"content":" */","lastModifiedDate":"2023-10-20"},{"lineNumber":25,"author":{"gitId":"jack1e0"},"content":"public class FilterCommandParser implements Parser\u003cFilterCommand\u003e {","lastModifiedDate":"2023-10-20"},{"lineNumber":26,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":27,"author":{"gitId":"jack1e0"},"content":"    /**","lastModifiedDate":"2023-10-20"},{"lineNumber":28,"author":{"gitId":"jack1e0"},"content":"     * Parses input, which should be a valid Status, DueDate, Priority or RecurringType","lastModifiedDate":"2023-11-12"},{"lineNumber":29,"author":{"gitId":"jack1e0"},"content":"     */","lastModifiedDate":"2023-10-20"},{"lineNumber":30,"author":{"gitId":"jack1e0"},"content":"    public FilterCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-20"},{"lineNumber":31,"author":{"gitId":"jack1e0"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-10-25"},{"lineNumber":32,"author":{"gitId":"jack1e0"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_PRIORITY, PREFIX_STATUS, PREFIX_DUEDATE, PREFIX_RECURRING);","lastModifiedDate":"2023-11-02"},{"lineNumber":33,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":34,"author":{"gitId":"jack1e0"},"content":"        if (!argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-10-25"},{"lineNumber":35,"author":{"gitId":"yarnmengnus"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, FilterCommand.MESSAGE_FULL_HELP));","lastModifiedDate":"2023-11-11"},{"lineNumber":36,"author":{"gitId":"jack1e0"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":37,"author":{"gitId":"jack1e0"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_PRIORITY, PREFIX_STATUS, PREFIX_DUEDATE, PREFIX_RECURRING);","lastModifiedDate":"2023-11-02"},{"lineNumber":38,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":39,"author":{"gitId":"jack1e0"},"content":"        ArrayList\u003cPredicate\u003cTask\u003e\u003e predList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-29"},{"lineNumber":40,"author":{"gitId":"jack1e0"},"content":"        ArrayList\u003cString\u003e filters \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-29"},{"lineNumber":41,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":42,"author":{"gitId":"jack1e0"},"content":"        try {","lastModifiedDate":"2023-10-20"},{"lineNumber":43,"author":{"gitId":"jack1e0"},"content":"            if (argMultimap.getValue(PREFIX_PRIORITY).isPresent()) {","lastModifiedDate":"2023-10-25"},{"lineNumber":44,"author":{"gitId":"jack1e0"},"content":"                TaskPriorityPredicate newPred \u003d new TaskPriorityPredicate(","lastModifiedDate":"2023-10-29"},{"lineNumber":45,"author":{"gitId":"jack1e0"},"content":"                        ParserUtil.parsePriority(argMultimap.getValue(PREFIX_PRIORITY).get()));","lastModifiedDate":"2023-10-29"},{"lineNumber":46,"author":{"gitId":"jack1e0"},"content":"                predList.add(newPred);","lastModifiedDate":"2023-10-29"},{"lineNumber":47,"author":{"gitId":"jack1e0"},"content":"                filters.add(\"Priority: \" + newPred.getPriority() + \"\\n\");","lastModifiedDate":"2023-10-29"},{"lineNumber":48,"author":{"gitId":"jack1e0"},"content":"            }","lastModifiedDate":"2023-10-25"},{"lineNumber":49,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":50,"author":{"gitId":"jack1e0"},"content":"            if (argMultimap.getValue(PREFIX_STATUS).isPresent()) {","lastModifiedDate":"2023-10-25"},{"lineNumber":51,"author":{"gitId":"jack1e0"},"content":"                TaskStatusPredicate newPred \u003d new TaskStatusPredicate(","lastModifiedDate":"2023-10-29"},{"lineNumber":52,"author":{"gitId":"jack1e0"},"content":"                        ParserUtil.parseStatus(argMultimap.getValue(PREFIX_STATUS).get()));","lastModifiedDate":"2023-10-29"},{"lineNumber":53,"author":{"gitId":"jack1e0"},"content":"                predList.add(newPred);","lastModifiedDate":"2023-10-29"},{"lineNumber":54,"author":{"gitId":"jack1e0"},"content":"                filters.add(\"Status: \" + newPred.getStatus() + \"\\n\");","lastModifiedDate":"2023-10-29"},{"lineNumber":55,"author":{"gitId":"jack1e0"},"content":"            }","lastModifiedDate":"2023-10-25"},{"lineNumber":56,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":57,"author":{"gitId":"jack1e0"},"content":"            if (argMultimap.getValue(PREFIX_DUEDATE).isPresent()) {","lastModifiedDate":"2023-10-25"},{"lineNumber":58,"author":{"gitId":"jack1e0"},"content":"                TaskDueDatePredicate newPred \u003d new TaskDueDatePredicate(","lastModifiedDate":"2023-10-29"},{"lineNumber":59,"author":{"gitId":"jack1e0"},"content":"                        ParserUtil.parseDueDate(argMultimap.getValue(PREFIX_DUEDATE).get()));","lastModifiedDate":"2023-10-29"},{"lineNumber":60,"author":{"gitId":"jack1e0"},"content":"                predList.add(newPred);","lastModifiedDate":"2023-10-29"},{"lineNumber":61,"author":{"gitId":"jack1e0"},"content":"                filters.add(\"Due before: \" + newPred.getDate() + \"\\n\");","lastModifiedDate":"2023-10-29"},{"lineNumber":62,"author":{"gitId":"jack1e0"},"content":"            }","lastModifiedDate":"2023-10-25"},{"lineNumber":63,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":64,"author":{"gitId":"jack1e0"},"content":"            if (argMultimap.getValue(PREFIX_RECURRING).isPresent()) {","lastModifiedDate":"2023-11-02"},{"lineNumber":65,"author":{"gitId":"jack1e0"},"content":"                TaskRecurringTypePredicate newPred \u003d new TaskRecurringTypePredicate(","lastModifiedDate":"2023-11-02"},{"lineNumber":66,"author":{"gitId":"jack1e0"},"content":"                        ParserUtil.parseRecurringType(argMultimap.getValue(PREFIX_RECURRING).get()));","lastModifiedDate":"2023-11-02"},{"lineNumber":67,"author":{"gitId":"jack1e0"},"content":"                predList.add(newPred);","lastModifiedDate":"2023-11-02"},{"lineNumber":68,"author":{"gitId":"jack1e0"},"content":"                String recurringType \u003d newPred.getRecurringType() \u003d\u003d null","lastModifiedDate":"2023-11-02"},{"lineNumber":69,"author":{"gitId":"jack1e0"},"content":"                    ? \"NONE\" : newPred.getRecurringType()","lastModifiedDate":"2023-11-02"},{"lineNumber":70,"author":{"gitId":"jack1e0"},"content":"                    .toString();","lastModifiedDate":"2023-11-02"},{"lineNumber":71,"author":{"gitId":"jack1e0"},"content":"                filters.add(\"Recurring: \" + recurringType + \"\\n\");","lastModifiedDate":"2023-11-02"},{"lineNumber":72,"author":{"gitId":"jack1e0"},"content":"            }","lastModifiedDate":"2023-11-02"},{"lineNumber":73,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":74,"author":{"gitId":"jack1e0"},"content":"            if (predList.isEmpty()) {","lastModifiedDate":"2023-10-29"},{"lineNumber":75,"author":{"gitId":"jack1e0"},"content":"                throw new ParseException(\"\", null);","lastModifiedDate":"2023-10-25"},{"lineNumber":76,"author":{"gitId":"jack1e0"},"content":"            }","lastModifiedDate":"2023-10-25"},{"lineNumber":77,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":78,"author":{"gitId":"jack1e0"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2023-10-20"},{"lineNumber":79,"author":{"gitId":"jack1e0"},"content":"            throw new ParseException(","lastModifiedDate":"2023-10-20"},{"lineNumber":80,"author":{"gitId":"yarnmengnus"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FilterCommand.MESSAGE_FULL_HELP));","lastModifiedDate":"2023-11-11"},{"lineNumber":81,"author":{"gitId":"jack1e0"},"content":"        }","lastModifiedDate":"2023-10-20"},{"lineNumber":82,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":83,"author":{"gitId":"jack1e0"},"content":"        FilterCommand cmd \u003d new FilterCommand(new CombinedPredicate(predList));","lastModifiedDate":"2023-10-29"},{"lineNumber":84,"author":{"gitId":"jack1e0"},"content":"        StringBuilder success \u003d new StringBuilder(cmd.getSuccessMessage());","lastModifiedDate":"2023-10-29"},{"lineNumber":85,"author":{"gitId":"jack1e0"},"content":"        for (String string : filters) {","lastModifiedDate":"2023-10-29"},{"lineNumber":86,"author":{"gitId":"jack1e0"},"content":"            success.append(string);","lastModifiedDate":"2023-10-29"},{"lineNumber":87,"author":{"gitId":"jack1e0"},"content":"        }","lastModifiedDate":"2023-10-29"},{"lineNumber":88,"author":{"gitId":"jack1e0"},"content":"        cmd.setSuccessMessage(success.toString());","lastModifiedDate":"2023-10-29"},{"lineNumber":89,"author":{"gitId":"jack1e0"},"content":"        return cmd;","lastModifiedDate":"2023-10-29"},{"lineNumber":90,"author":{"gitId":"jack1e0"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":91,"author":{"gitId":"jack1e0"},"content":"}","lastModifiedDate":"2023-10-20"}],"authorContributionMap":{"yarnmengnus":2,"jack1e0":89}},{"path":"src/main/java/profplan/logic/parser/FindCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kiatkat"},"content":"package profplan.logic.parser;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"kiatkat"},"content":"import static profplan.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"kiatkat"},"content":"import profplan.logic.commands.FindCommand;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"kiatkat"},"content":"import profplan.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"jack1e0"},"content":"import profplan.model.task.predicates.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-10-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class FindCommandParser implements Parser\u003cFindCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the FindCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * and returns a FindCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public FindCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2017-02-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2017-02-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"yarnmengnus"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_FULL_HELP));","lastModifiedDate":"2023-11-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        String[] nameKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return new FindCommand(new NameContainsKeywordsPredicate(Arrays.asList(nameKeywords)));","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"yarnmengnus":1,"jack1e0":1,"kiatkat":4,"-":27}},{"path":"src/main/java/profplan/logic/parser/HelpCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yarnmengnus"},"content":"package profplan.logic.parser;","lastModifiedDate":"2023-10-30"},{"lineNumber":2,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":3,"author":{"gitId":"yarnmengnus"},"content":"import static profplan.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-30"},{"lineNumber":4,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":5,"author":{"gitId":"yarnmengnus"},"content":"import profplan.logic.commands.HelpCommand;","lastModifiedDate":"2023-10-30"},{"lineNumber":6,"author":{"gitId":"yarnmengnus"},"content":"import profplan.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-30"},{"lineNumber":7,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":8,"author":{"gitId":"yarnmengnus"},"content":"/**","lastModifiedDate":"2023-10-30"},{"lineNumber":9,"author":{"gitId":"yarnmengnus"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2023-10-30"},{"lineNumber":10,"author":{"gitId":"yarnmengnus"},"content":" */","lastModifiedDate":"2023-10-30"},{"lineNumber":11,"author":{"gitId":"yarnmengnus"},"content":"public class HelpCommandParser implements Parser\u003cHelpCommand\u003e {","lastModifiedDate":"2023-10-30"},{"lineNumber":12,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":13,"author":{"gitId":"yarnmengnus"},"content":"    /**","lastModifiedDate":"2023-10-30"},{"lineNumber":14,"author":{"gitId":"yarnmengnus"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2023-10-30"},{"lineNumber":15,"author":{"gitId":"yarnmengnus"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2023-10-30"},{"lineNumber":16,"author":{"gitId":"yarnmengnus"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-30"},{"lineNumber":17,"author":{"gitId":"yarnmengnus"},"content":"     */","lastModifiedDate":"2023-10-30"},{"lineNumber":18,"author":{"gitId":"yarnmengnus"},"content":"    public HelpCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-30"},{"lineNumber":19,"author":{"gitId":"yarnmengnus"},"content":"        String command \u003d args.strip();","lastModifiedDate":"2023-10-30"},{"lineNumber":20,"author":{"gitId":"yarnmengnus"},"content":"        if (command.contains(\" \")) {","lastModifiedDate":"2023-11-10"},{"lineNumber":21,"author":{"gitId":"yarnmengnus"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_FULL_HELP));","lastModifiedDate":"2023-11-11"},{"lineNumber":22,"author":{"gitId":"yarnmengnus"},"content":"        }","lastModifiedDate":"2023-10-30"},{"lineNumber":23,"author":{"gitId":"yarnmengnus"},"content":"        return new HelpCommand(command);","lastModifiedDate":"2023-11-10"},{"lineNumber":24,"author":{"gitId":"yarnmengnus"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":25,"author":{"gitId":"yarnmengnus"},"content":"}","lastModifiedDate":"2023-10-30"}],"authorContributionMap":{"yarnmengnus":25}},{"path":"src/main/java/profplan/logic/parser/MarkCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"newway1814"},"content":"package profplan.logic.parser;","lastModifiedDate":"2023-10-16"},{"lineNumber":2,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":3,"author":{"gitId":"newway1814"},"content":"import profplan.logic.commands.MarkCommand;","lastModifiedDate":"2023-10-16"},{"lineNumber":4,"author":{"gitId":"newway1814"},"content":"import profplan.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-16"},{"lineNumber":5,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":6,"author":{"gitId":"newway1814"},"content":"/**","lastModifiedDate":"2023-10-16"},{"lineNumber":7,"author":{"gitId":"newway1814"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2023-10-16"},{"lineNumber":8,"author":{"gitId":"newway1814"},"content":" */","lastModifiedDate":"2023-10-16"},{"lineNumber":9,"author":{"gitId":"newway1814"},"content":"public class MarkCommandParser implements Parser\u003cMarkCommand\u003e {","lastModifiedDate":"2023-10-16"},{"lineNumber":10,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":11,"author":{"gitId":"newway1814"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":12,"author":{"gitId":"newway1814"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"newway1814"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2023-10-16"},{"lineNumber":14,"author":{"gitId":"newway1814"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-16"},{"lineNumber":15,"author":{"gitId":"newway1814"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"newway1814"},"content":"    public MarkCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-16"},{"lineNumber":17,"author":{"gitId":"newway1814"},"content":"        try {","lastModifiedDate":"2023-10-16"},{"lineNumber":18,"author":{"gitId":"newway1814"},"content":"            int number \u003d Integer.parseInt(args.strip());","lastModifiedDate":"2023-10-16"},{"lineNumber":19,"author":{"gitId":"newway1814"},"content":"            if (number \u003c\u003d 0) {","lastModifiedDate":"2023-10-16"},{"lineNumber":20,"author":{"gitId":"newway1814"},"content":"                throw new ParseException(MarkCommand.MESSAGE_INVALID_NUMBER);","lastModifiedDate":"2023-10-16"},{"lineNumber":21,"author":{"gitId":"newway1814"},"content":"            }","lastModifiedDate":"2023-10-16"},{"lineNumber":22,"author":{"gitId":"newway1814"},"content":"            return new MarkCommand(number);","lastModifiedDate":"2023-10-16"},{"lineNumber":23,"author":{"gitId":"newway1814"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-10-16"},{"lineNumber":24,"author":{"gitId":"yarnmengnus"},"content":"            throw new ParseException(MarkCommand.MESSAGE_FULL_HELP);","lastModifiedDate":"2023-11-11"},{"lineNumber":25,"author":{"gitId":"newway1814"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":26,"author":{"gitId":"newway1814"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":27,"author":{"gitId":"newway1814"},"content":"}","lastModifiedDate":"2023-10-16"}],"authorContributionMap":{"yarnmengnus":1,"newway1814":26}},{"path":"src/main/java/profplan/logic/parser/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kiatkat"},"content":"package profplan.logic.parser;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":3,"author":{"gitId":"kiatkat"},"content":"import profplan.logic.commands.Command;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"kiatkat"},"content":"import profplan.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Parser that is able to parse user input into a {@code Command} of type {@code T}.","lastModifiedDate":"2017-07-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public interface Parser\u003cT extends Command\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a command and returns it.","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * @throws ParseException if {@code userInput} does not conform the expected format","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    T parse(String userInput) throws ParseException;","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-06"}],"authorContributionMap":{"kiatkat":3,"-":13}},{"path":"src/main/java/profplan/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kiatkat"},"content":"package profplan.logic.parser;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"kiatkat"},"content":"import profplan.commons.core.Settings;","lastModifiedDate":"2023-11-08"},{"lineNumber":10,"author":{"gitId":"kiatkat"},"content":"import profplan.commons.core.index.Index;","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"kiatkat"},"content":"import profplan.commons.util.StringUtil;","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"kiatkat"},"content":"import profplan.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-14"},{"lineNumber":13,"author":{"gitId":"kiatkat"},"content":"import profplan.model.tag.Tag;","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"jack1e0"},"content":"import profplan.model.task.DueDate;","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"yarnmengnus"},"content":"import profplan.model.task.Link;","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"yarnmengnus"},"content":"import profplan.model.task.Name;","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"eyelessrhyme7"},"content":"import profplan.model.task.Priority;","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"jack1e0"},"content":"import profplan.model.task.Status;","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"kiatkat"},"content":"import profplan.model.task.Task;","lastModifiedDate":"2023-10-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":57,"author":{"gitId":"eyelessrhyme7"},"content":"     * Parses a {@code String priority} into a {@code Priority}.","lastModifiedDate":"2023-10-17"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":60,"author":{"gitId":"eyelessrhyme7"},"content":"     * @throws ParseException if the given {@code priority} is invalid.","lastModifiedDate":"2023-10-17"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":62,"author":{"gitId":"eyelessrhyme7"},"content":"    public static Priority parsePriority(String priority) throws ParseException {","lastModifiedDate":"2023-10-17"},{"lineNumber":63,"author":{"gitId":"eyelessrhyme7"},"content":"        requireNonNull(priority);","lastModifiedDate":"2023-10-17"},{"lineNumber":64,"author":{"gitId":"eyelessrhyme7"},"content":"        String trimmedPriority \u003d priority.trim();","lastModifiedDate":"2023-10-17"},{"lineNumber":65,"author":{"gitId":"eyelessrhyme7"},"content":"        if (!Priority.isValidPriority(trimmedPriority)) {","lastModifiedDate":"2023-10-17"},{"lineNumber":66,"author":{"gitId":"eyelessrhyme7"},"content":"            throw new ParseException(Priority.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-17"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":68,"author":{"gitId":"eyelessrhyme7"},"content":"        return new Priority(trimmedPriority);","lastModifiedDate":"2023-10-17"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":71,"author":{"gitId":"jack1e0"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":72,"author":{"gitId":"jack1e0"},"content":"    * Parses a {@code String status} into a {@code Status}.","lastModifiedDate":"2023-10-25"},{"lineNumber":73,"author":{"gitId":"jack1e0"},"content":"    * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-10-25"},{"lineNumber":74,"author":{"gitId":"jack1e0"},"content":"    *","lastModifiedDate":"2023-10-25"},{"lineNumber":75,"author":{"gitId":"jack1e0"},"content":"    * @throws ParseException if the given {@code status} is invalid.","lastModifiedDate":"2023-10-25"},{"lineNumber":76,"author":{"gitId":"jack1e0"},"content":"    */","lastModifiedDate":"2023-10-25"},{"lineNumber":77,"author":{"gitId":"jack1e0"},"content":"    public static Status parseStatus(String status) throws ParseException {","lastModifiedDate":"2023-10-25"},{"lineNumber":78,"author":{"gitId":"jack1e0"},"content":"        requireNonNull(status);","lastModifiedDate":"2023-10-25"},{"lineNumber":79,"author":{"gitId":"jack1e0"},"content":"        String trimmedStatus \u003d status.trim();","lastModifiedDate":"2023-10-25"},{"lineNumber":80,"author":{"gitId":"jack1e0"},"content":"        if (!Status.isValidStatus(trimmedStatus)) {","lastModifiedDate":"2023-10-25"},{"lineNumber":81,"author":{"gitId":"jack1e0"},"content":"            throw new ParseException(Status.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-25"},{"lineNumber":82,"author":{"gitId":"jack1e0"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":83,"author":{"gitId":"jack1e0"},"content":"        return new Status(trimmedStatus);","lastModifiedDate":"2023-10-25"},{"lineNumber":84,"author":{"gitId":"jack1e0"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":85,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":112,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":113,"author":{"gitId":"yarnmengnus"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":114,"author":{"gitId":"yarnmengnus"},"content":"     * Parses a {@code String link} into an {@code Link}.","lastModifiedDate":"2023-10-17"},{"lineNumber":115,"author":{"gitId":"yarnmengnus"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-10-17"},{"lineNumber":116,"author":{"gitId":"yarnmengnus"},"content":"     *","lastModifiedDate":"2023-10-17"},{"lineNumber":117,"author":{"gitId":"yarnmengnus"},"content":"     * @throws ParseException if the given {@code link} is invalid.","lastModifiedDate":"2023-10-17"},{"lineNumber":118,"author":{"gitId":"yarnmengnus"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":119,"author":{"gitId":"yarnmengnus"},"content":"    public static Link parseLink(String link) throws ParseException {","lastModifiedDate":"2023-10-17"},{"lineNumber":120,"author":{"gitId":"yarnmengnus"},"content":"        requireNonNull(link);","lastModifiedDate":"2023-10-17"},{"lineNumber":121,"author":{"gitId":"yarnmengnus"},"content":"        String trimmedLink \u003d link.trim();","lastModifiedDate":"2023-10-17"},{"lineNumber":122,"author":{"gitId":"yarnmengnus"},"content":"        if (!Link.isValidLink(trimmedLink)) {","lastModifiedDate":"2023-10-17"},{"lineNumber":123,"author":{"gitId":"kiatkat"},"content":"            throw new ParseException(Link.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-26"},{"lineNumber":124,"author":{"gitId":"yarnmengnus"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":125,"author":{"gitId":"yarnmengnus"},"content":"        return new Link(trimmedLink);","lastModifiedDate":"2023-10-17"},{"lineNumber":126,"author":{"gitId":"yarnmengnus"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":127,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":128,"author":{"gitId":"jack1e0"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":129,"author":{"gitId":"jack1e0"},"content":"    * Parses a {@code String date} into a {@code DueDate}.","lastModifiedDate":"2023-10-17"},{"lineNumber":130,"author":{"gitId":"jack1e0"},"content":"    * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-10-17"},{"lineNumber":131,"author":{"gitId":"jack1e0"},"content":"    *","lastModifiedDate":"2023-10-17"},{"lineNumber":132,"author":{"gitId":"jack1e0"},"content":"    * @throws ParseException if the given {@code date} is invalid.","lastModifiedDate":"2023-10-17"},{"lineNumber":133,"author":{"gitId":"jack1e0"},"content":"    */","lastModifiedDate":"2023-10-17"},{"lineNumber":134,"author":{"gitId":"jack1e0"},"content":"    public static DueDate parseDueDate(String date) throws ParseException {","lastModifiedDate":"2023-10-17"},{"lineNumber":135,"author":{"gitId":"jack1e0"},"content":"        requireNonNull(date);","lastModifiedDate":"2023-10-17"},{"lineNumber":136,"author":{"gitId":"jack1e0"},"content":"        String trimmedDate \u003d date.trim();","lastModifiedDate":"2023-10-17"},{"lineNumber":137,"author":{"gitId":"jack1e0"},"content":"        if (!DueDate.isValidDate(trimmedDate)) {","lastModifiedDate":"2023-10-17"},{"lineNumber":138,"author":{"gitId":"jack1e0"},"content":"            throw new ParseException(DueDate.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-17"},{"lineNumber":139,"author":{"gitId":"jack1e0"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":140,"author":{"gitId":"jack1e0"},"content":"        return new DueDate(trimmedDate);","lastModifiedDate":"2023-10-17"},{"lineNumber":141,"author":{"gitId":"jack1e0"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":142,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":143,"author":{"gitId":"kiatkat"},"content":"    /**","lastModifiedDate":"2023-10-30"},{"lineNumber":144,"author":{"gitId":"kiatkat"},"content":"     * Parses a {@code RecurringTask}.","lastModifiedDate":"2023-10-30"},{"lineNumber":145,"author":{"gitId":"kiatkat"},"content":"     *","lastModifiedDate":"2023-10-30"},{"lineNumber":146,"author":{"gitId":"kiatkat"},"content":"     * @throws ParseException if the given {@code String} is invalid.","lastModifiedDate":"2023-10-30"},{"lineNumber":147,"author":{"gitId":"kiatkat"},"content":"     */","lastModifiedDate":"2023-10-30"},{"lineNumber":148,"author":{"gitId":"kiatkat"},"content":"    public static Task.RecurringType parseRecurringType(String input) throws ParseException {","lastModifiedDate":"2023-10-30"},{"lineNumber":149,"author":{"gitId":"kiatkat"},"content":"        requireNonNull(input);","lastModifiedDate":"2023-10-30"},{"lineNumber":150,"author":{"gitId":"kiatkat"},"content":"        String processedInput \u003d input.trim().toLowerCase();","lastModifiedDate":"2023-10-30"},{"lineNumber":151,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":152,"author":{"gitId":"kiatkat"},"content":"        switch (processedInput) {","lastModifiedDate":"2023-10-30"},{"lineNumber":153,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":154,"author":{"gitId":"kiatkat"},"content":"        case \"daily\":","lastModifiedDate":"2023-10-30"},{"lineNumber":155,"author":{"gitId":"kiatkat"},"content":"        case \"d\":","lastModifiedDate":"2023-10-30"},{"lineNumber":156,"author":{"gitId":"kiatkat"},"content":"            return Task.RecurringType.DAILY;","lastModifiedDate":"2023-10-30"},{"lineNumber":157,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":158,"author":{"gitId":"kiatkat"},"content":"        case \"weekly\":","lastModifiedDate":"2023-10-30"},{"lineNumber":159,"author":{"gitId":"kiatkat"},"content":"        case \"w\":","lastModifiedDate":"2023-10-30"},{"lineNumber":160,"author":{"gitId":"kiatkat"},"content":"            return Task.RecurringType.WEEKLY;","lastModifiedDate":"2023-10-30"},{"lineNumber":161,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":162,"author":{"gitId":"kiatkat"},"content":"        case \"monthly\":","lastModifiedDate":"2023-10-30"},{"lineNumber":163,"author":{"gitId":"kiatkat"},"content":"        case \"m\":","lastModifiedDate":"2023-10-30"},{"lineNumber":164,"author":{"gitId":"kiatkat"},"content":"            return Task.RecurringType.MONTHLY;","lastModifiedDate":"2023-10-30"},{"lineNumber":165,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":166,"author":{"gitId":"kiatkat"},"content":"        case \"semesterly\":","lastModifiedDate":"2023-11-02"},{"lineNumber":167,"author":{"gitId":"kiatkat"},"content":"        case \"s\":","lastModifiedDate":"2023-11-02"},{"lineNumber":168,"author":{"gitId":"kiatkat"},"content":"            return Task.RecurringType.SEMESTERLY;","lastModifiedDate":"2023-11-02"},{"lineNumber":169,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":170,"author":{"gitId":"jack1e0"},"content":"        case \"none\":","lastModifiedDate":"2023-11-02"},{"lineNumber":171,"author":{"gitId":"jack1e0"},"content":"            return null;","lastModifiedDate":"2023-11-02"},{"lineNumber":172,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":173,"author":{"gitId":"kiatkat"},"content":"        default:","lastModifiedDate":"2023-10-30"},{"lineNumber":174,"author":{"gitId":"kiatkat"},"content":"            throw new ParseException(\"The input should be one of the following:\\n\"","lastModifiedDate":"2023-10-30"},{"lineNumber":175,"author":{"gitId":"kiatkat"},"content":"                    + \"\u0027daily\u0027, \u0027weekly\u0027, \u0027monthly\u0027, \u0027semesterly\u0027, or the shortforms \u0027d\u0027, \u0027w\u0027, \u0027m\u0027, \u0027s\u0027\\n\"","lastModifiedDate":"2023-11-02"},{"lineNumber":176,"author":{"gitId":"kiatkat"},"content":"                    + \"case insensitive.\");","lastModifiedDate":"2023-10-30"},{"lineNumber":177,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":178,"author":{"gitId":"kiatkat"},"content":"        }","lastModifiedDate":"2023-10-30"},{"lineNumber":179,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":180,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":181,"author":{"gitId":"kiatkat"},"content":"    /**","lastModifiedDate":"2023-11-02"},{"lineNumber":182,"author":{"gitId":"kiatkat"},"content":"     * Checks if a String is a valid integer and returns the int if so.","lastModifiedDate":"2023-11-02"},{"lineNumber":183,"author":{"gitId":"kiatkat"},"content":"     */","lastModifiedDate":"2023-11-02"},{"lineNumber":184,"author":{"gitId":"kiatkat"},"content":"    public static int parseInteger(String input) throws ParseException {","lastModifiedDate":"2023-11-02"},{"lineNumber":185,"author":{"gitId":"kiatkat"},"content":"        try {","lastModifiedDate":"2023-11-02"},{"lineNumber":186,"author":{"gitId":"kiatkat"},"content":"            return Integer.parseInt(input.trim());","lastModifiedDate":"2023-11-02"},{"lineNumber":187,"author":{"gitId":"kiatkat"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-11-02"},{"lineNumber":188,"author":{"gitId":"kiatkat"},"content":"            throw new ParseException(e.getMessage());","lastModifiedDate":"2023-11-02"},{"lineNumber":189,"author":{"gitId":"kiatkat"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":190,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":191,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":192,"author":{"gitId":"kiatkat"},"content":"    /**","lastModifiedDate":"2023-11-08"},{"lineNumber":193,"author":{"gitId":"kiatkat"},"content":"     * Checks if a String is a valid input value for the semesterDays setting and returns it if so.","lastModifiedDate":"2023-11-08"},{"lineNumber":194,"author":{"gitId":"kiatkat"},"content":"     */","lastModifiedDate":"2023-11-08"},{"lineNumber":195,"author":{"gitId":"kiatkat"},"content":"    public static int parseSemesterDays(String input) throws ParseException {","lastModifiedDate":"2023-11-08"},{"lineNumber":196,"author":{"gitId":"kiatkat"},"content":"        int parsedInteger \u003d -1;","lastModifiedDate":"2023-11-08"},{"lineNumber":197,"author":{"gitId":"kiatkat"},"content":"        try {","lastModifiedDate":"2023-11-08"},{"lineNumber":198,"author":{"gitId":"kiatkat"},"content":"            parsedInteger \u003d Integer.parseInt(input.trim());","lastModifiedDate":"2023-11-08"},{"lineNumber":199,"author":{"gitId":"kiatkat"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-11-08"},{"lineNumber":200,"author":{"gitId":"kiatkat"},"content":"            throw new ParseException(\"Could not parse an integer. \" + e.getMessage());","lastModifiedDate":"2023-11-08"},{"lineNumber":201,"author":{"gitId":"kiatkat"},"content":"        }","lastModifiedDate":"2023-11-08"},{"lineNumber":202,"author":{"gitId":"kiatkat"},"content":"        if (parsedInteger \u003c 0) {","lastModifiedDate":"2023-11-08"},{"lineNumber":203,"author":{"gitId":"kiatkat"},"content":"            throw new ParseException(Settings.SEMESTER_DAYS_CONSTRAINTS);","lastModifiedDate":"2023-11-08"},{"lineNumber":204,"author":{"gitId":"kiatkat"},"content":"        }","lastModifiedDate":"2023-11-08"},{"lineNumber":205,"author":{"gitId":"kiatkat"},"content":"        return parsedInteger;","lastModifiedDate":"2023-11-08"},{"lineNumber":206,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-11-08"},{"lineNumber":207,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"yarnmengnus":16,"jack1e0":35,"kiatkat":70,"eyelessrhyme7":9,"-":77}},{"path":"src/main/java/profplan/logic/parser/Prefix.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kiatkat"},"content":"package profplan.logic.parser;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * A prefix that marks the beginning of an argument in an arguments string.","lastModifiedDate":"2017-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" * E.g. \u0027t/\u0027 in \u0027add James t/ friend\u0027.","lastModifiedDate":"2017-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class Prefix {","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    private final String prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public Prefix(String prefix) {","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        this.prefix \u003d prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public String getPrefix() {","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        return prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2017-05-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        return getPrefix();","lastModifiedDate":"2017-05-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        return prefix \u003d\u003d null ? 0 : prefix.hashCode();","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-03-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-07-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        if (!(other instanceof Prefix)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        Prefix otherPrefix \u003d (Prefix) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return prefix.equals(otherPrefix.prefix);","lastModifiedDate":"2023-07-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-11"}],"authorContributionMap":{"kiatkat":1,"-":41}},{"path":"src/main/java/profplan/logic/parser/ProfPlanParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kiatkat"},"content":"package profplan.logic.parser;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"kiatkat"},"content":"import static profplan.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"kiatkat"},"content":"import static profplan.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"kiatkat"},"content":"import profplan.commons.core.LogsCenter;","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"kiatkat"},"content":"import profplan.logic.commands.AddCommand;","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"kiatkat"},"content":"import profplan.logic.commands.ClearCommand;","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"kiatkat"},"content":"import profplan.logic.commands.Command;","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"kiatkat"},"content":"import profplan.logic.commands.DeleteCommand;","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"kiatkat"},"content":"import profplan.logic.commands.DescriptionCommand;","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"eyelessrhyme7"},"content":"import profplan.logic.commands.DoNextCommand;","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"kiatkat"},"content":"import profplan.logic.commands.EditCommand;","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"kiatkat"},"content":"import profplan.logic.commands.EditSettingsCommand;","lastModifiedDate":"2023-11-02"},{"lineNumber":19,"author":{"gitId":"kiatkat"},"content":"import profplan.logic.commands.ExitCommand;","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"jack1e0"},"content":"import profplan.logic.commands.FilterCommand;","lastModifiedDate":"2023-10-20"},{"lineNumber":21,"author":{"gitId":"kiatkat"},"content":"import profplan.logic.commands.FindCommand;","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"kiatkat"},"content":"import profplan.logic.commands.HelpCommand;","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"kiatkat"},"content":"import profplan.logic.commands.ListCommand;","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"jack1e0"},"content":"import profplan.logic.commands.ListMonthCommand;","lastModifiedDate":"2023-10-29"},{"lineNumber":25,"author":{"gitId":"jack1e0"},"content":"import profplan.logic.commands.ListWeekCommand;","lastModifiedDate":"2023-10-29"},{"lineNumber":26,"author":{"gitId":"newway1814"},"content":"import profplan.logic.commands.MarkCommand;","lastModifiedDate":"2023-10-16"},{"lineNumber":27,"author":{"gitId":"jack1e0"},"content":"import profplan.logic.commands.SortDueDateCommand;","lastModifiedDate":"2023-10-29"},{"lineNumber":28,"author":{"gitId":"newway1814"},"content":"import profplan.logic.commands.SortPriorityCommand;","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"yarnmengnus"},"content":"import profplan.logic.commands.StatsCommand;","lastModifiedDate":"2023-11-03"},{"lineNumber":30,"author":{"gitId":"newway1814"},"content":"import profplan.logic.commands.UnmarkCommand;","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"kiatkat"},"content":"import profplan.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"kiatkat"},"content":"public class ProfPlanParser {","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":42,"author":{"gitId":"kiatkat"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ProfPlanParser.class);","lastModifiedDate":"2023-10-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // Note to developers: Change the log level in config.json to enable lower level (i.e., FINE, FINER and lower)","lastModifiedDate":"2023-07-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // log messages such as the one below.","lastModifiedDate":"2023-07-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // Lower level log messages are used sparingly to minimize noise in the code.","lastModifiedDate":"2023-07-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        logger.fine(\"Command word: \" + commandWord + \"; Arguments: \" + arguments);","lastModifiedDate":"2023-07-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":73,"author":{"gitId":"kiatkat"},"content":"        case EditSettingsCommand.COMMAND_WORD:","lastModifiedDate":"2023-11-02"},{"lineNumber":74,"author":{"gitId":"kiatkat"},"content":"            return new EditSettingsCommandParser().parse(arguments);","lastModifiedDate":"2023-11-02"},{"lineNumber":75,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":76,"author":{"gitId":"newway1814"},"content":"        case MarkCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-16"},{"lineNumber":77,"author":{"gitId":"newway1814"},"content":"            return new MarkCommandParser().parse(arguments);","lastModifiedDate":"2023-10-16"},{"lineNumber":78,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":79,"author":{"gitId":"newway1814"},"content":"        case UnmarkCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-17"},{"lineNumber":80,"author":{"gitId":"newway1814"},"content":"            return new UnmarkCommandParser().parse(arguments);","lastModifiedDate":"2023-10-17"},{"lineNumber":81,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":85,"author":{"gitId":"eyelessrhyme7"},"content":"        case DoNextCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-26"},{"lineNumber":86,"author":{"gitId":"eyelessrhyme7"},"content":"            if (arguments.isBlank()) {","lastModifiedDate":"2023-11-02"},{"lineNumber":87,"author":{"gitId":"eyelessrhyme7"},"content":"                return new DoNextCommand();","lastModifiedDate":"2023-10-26"},{"lineNumber":88,"author":{"gitId":"eyelessrhyme7"},"content":"            } else {","lastModifiedDate":"2023-11-02"},{"lineNumber":89,"author":{"gitId":"eyelessrhyme7"},"content":"                logger.finer(\"This user input caused a ParseException: \" + userInput);","lastModifiedDate":"2023-11-02"},{"lineNumber":90,"author":{"gitId":"eyelessrhyme7"},"content":"                throw new ParseException(\"Did you mean the \u0027do_next\u0027 command? Please enter \u0027do_next\u0027 only.\");","lastModifiedDate":"2023-11-02"},{"lineNumber":91,"author":{"gitId":"eyelessrhyme7"},"content":"            }","lastModifiedDate":"2023-11-02"},{"lineNumber":92,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":99,"author":{"gitId":"jack1e0"},"content":"        case FilterCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-20"},{"lineNumber":100,"author":{"gitId":"jack1e0"},"content":"            return new FilterCommandParser().parse(arguments);","lastModifiedDate":"2023-10-20"},{"lineNumber":101,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":103,"author":{"gitId":"eyelessrhyme7"},"content":"            if (arguments.isBlank()) {","lastModifiedDate":"2023-11-10"},{"lineNumber":104,"author":{"gitId":"-"},"content":"                return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":105,"author":{"gitId":"eyelessrhyme7"},"content":"            } else {","lastModifiedDate":"2023-11-10"},{"lineNumber":106,"author":{"gitId":"eyelessrhyme7"},"content":"                logger.finer(\"This user input caused a ParseException: \" + userInput);","lastModifiedDate":"2023-11-10"},{"lineNumber":107,"author":{"gitId":"eyelessrhyme7"},"content":"                throw new ParseException(\"Did you mean the \u0027list\u0027 command? Please enter \u0027list\u0027 only.\");","lastModifiedDate":"2023-11-10"},{"lineNumber":108,"author":{"gitId":"eyelessrhyme7"},"content":"            }","lastModifiedDate":"2023-11-10"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":114,"author":{"gitId":"yarnmengnus"},"content":"            return new HelpCommandParser().parse(arguments);","lastModifiedDate":"2023-10-30"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":116,"author":{"gitId":"kiatkat"},"content":"        case DescriptionCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-26"},{"lineNumber":117,"author":{"gitId":"kiatkat"},"content":"            return new DescriptionCommandParser().parse(arguments);","lastModifiedDate":"2023-10-26"},{"lineNumber":118,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":119,"author":{"gitId":"jack1e0"},"content":"        case SortDueDateCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-29"},{"lineNumber":120,"author":{"gitId":"newway1814"},"content":"            if (arguments.isBlank()) {","lastModifiedDate":"2023-10-31"},{"lineNumber":121,"author":{"gitId":"jack1e0"},"content":"                return new SortDueDateCommand();","lastModifiedDate":"2023-10-29"},{"lineNumber":122,"author":{"gitId":"newway1814"},"content":"            } else {","lastModifiedDate":"2023-11-01"},{"lineNumber":123,"author":{"gitId":"newway1814"},"content":"                logger.finer(\"This user input caused a ParseException: \" + userInput);","lastModifiedDate":"2023-11-01"},{"lineNumber":124,"author":{"gitId":"eyelessrhyme7"},"content":"                throw new ParseException(\"Did you mean the \u0027sort_duedate\u0027 command? Please enter \u0027sort_duedate\u0027 only.\");","lastModifiedDate":"2023-11-02"},{"lineNumber":125,"author":{"gitId":"newway1814"},"content":"            }","lastModifiedDate":"2023-10-31"},{"lineNumber":126,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":127,"author":{"gitId":"newway1814"},"content":"        case SortPriorityCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-26"},{"lineNumber":128,"author":{"gitId":"newway1814"},"content":"            if (arguments.isBlank()) {","lastModifiedDate":"2023-10-31"},{"lineNumber":129,"author":{"gitId":"newway1814"},"content":"                return new SortPriorityCommand();","lastModifiedDate":"2023-10-26"},{"lineNumber":130,"author":{"gitId":"newway1814"},"content":"            } else {","lastModifiedDate":"2023-11-01"},{"lineNumber":131,"author":{"gitId":"newway1814"},"content":"                logger.finer(\"This user input caused a ParseException: \" + userInput);","lastModifiedDate":"2023-11-01"},{"lineNumber":132,"author":{"gitId":"eyelessrhyme7"},"content":"                throw new ParseException(\"Did you mean the \u0027sort_priority\u0027 command? \"","lastModifiedDate":"2023-11-02"},{"lineNumber":133,"author":{"gitId":"eyelessrhyme7"},"content":"                        + \"Please enter \u0027sort_priority\u0027 only.\");","lastModifiedDate":"2023-11-02"},{"lineNumber":134,"author":{"gitId":"newway1814"},"content":"            }","lastModifiedDate":"2023-10-31"},{"lineNumber":135,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":136,"author":{"gitId":"jack1e0"},"content":"        case ListWeekCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-29"},{"lineNumber":137,"author":{"gitId":"jack1e0"},"content":"            return new ListWeekCommand();","lastModifiedDate":"2023-10-29"},{"lineNumber":138,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":139,"author":{"gitId":"jack1e0"},"content":"        case ListMonthCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-29"},{"lineNumber":140,"author":{"gitId":"jack1e0"},"content":"            return new ListMonthCommand();","lastModifiedDate":"2023-10-29"},{"lineNumber":141,"author":{"gitId":"yarnmengnus"},"content":"        case StatsCommand.COMMAND_WORD:","lastModifiedDate":"2023-11-03"},{"lineNumber":142,"author":{"gitId":"yarnmengnus"},"content":"            return new StatsCommand();","lastModifiedDate":"2023-11-03"},{"lineNumber":143,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            logger.finer(\"This user input caused a ParseException: \" + userInput);","lastModifiedDate":"2023-07-29"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"yarnmengnus":4,"jack1e0":17,"kiatkat":24,"eyelessrhyme7":17,"-":69,"newway1814":19}},{"path":"src/main/java/profplan/logic/parser/UnmarkCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"newway1814"},"content":"package profplan.logic.parser;","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"newway1814"},"content":"import profplan.logic.commands.UnmarkCommand;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"newway1814"},"content":"import profplan.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"newway1814"},"content":"/**","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"newway1814"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"newway1814"},"content":" */","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"newway1814"},"content":"public class UnmarkCommandParser implements Parser\u003cUnmarkCommand\u003e {","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"newway1814"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"newway1814"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"newway1814"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"newway1814"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"newway1814"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"newway1814"},"content":"    public UnmarkCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"newway1814"},"content":"        try {","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"newway1814"},"content":"            int number \u003d Integer.parseInt(args.strip());","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"newway1814"},"content":"            if (number \u003c\u003d 0) {","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"newway1814"},"content":"                throw new ParseException(UnmarkCommand.MESSAGE_INVALID_NUMBER);","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"newway1814"},"content":"            }","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"newway1814"},"content":"            return new UnmarkCommand(number);","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"newway1814"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"yarnmengnus"},"content":"            throw new ParseException(UnmarkCommand.MESSAGE_FULL_HELP);","lastModifiedDate":"2023-11-11"},{"lineNumber":25,"author":{"gitId":"newway1814"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"newway1814"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"newway1814"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"yarnmengnus":1,"newway1814":26}},{"path":"src/main/java/profplan/logic/parser/exceptions/ParseException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kiatkat"},"content":"package profplan.logic.parser.exceptions;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":3,"author":{"gitId":"kiatkat"},"content":"import profplan.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Represents a parse error encountered by a parser.","lastModifiedDate":"2017-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ParseException extends IllegalValueException {","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public ParseException(String message) {","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2017-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public ParseException(String message, Throwable cause) {","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-11"}],"authorContributionMap":{"kiatkat":2,"-":15}},{"path":"src/main/java/profplan/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kiatkat"},"content":"package profplan.model;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"kiatkat"},"content":"import profplan.commons.core.GuiSettings;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"newway1814"},"content":"import profplan.model.task.Task;","lastModifiedDate":"2023-10-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":15,"author":{"gitId":"newway1814"},"content":"    Predicate\u003cTask\u003e PREDICATE_SHOW_ALL_TASKS \u003d unused -\u003e true;","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"eyelessrhyme7"},"content":"     * Returns the user prefs\u0027 task list file path.","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"kiatkat"},"content":"    Path getProfPlanFilePath();","lastModifiedDate":"2023-10-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"eyelessrhyme7"},"content":"     * Sets the user prefs\u0027 task list file path.","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"kiatkat"},"content":"    void setProfPlanFilePath(Path profPlanFilePath);","lastModifiedDate":"2023-10-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"eyelessrhyme7"},"content":"     * Replaces task list data with the data in {@code profPlan}.","lastModifiedDate":"2023-10-17"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"kiatkat"},"content":"    void setProfPlan(ReadOnlyProfPlan profPlan);","lastModifiedDate":"2023-10-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":52,"author":{"gitId":"jack1e0"},"content":"    /** Returns the ProfPlan */","lastModifiedDate":"2023-10-29"},{"lineNumber":53,"author":{"gitId":"kiatkat"},"content":"    ReadOnlyProfPlan getProfPlan();","lastModifiedDate":"2023-10-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":56,"author":{"gitId":"eyelessrhyme7"},"content":"     * Returns true if a task with the same identity as {@code task} exists in the task list.","lastModifiedDate":"2023-10-17"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":58,"author":{"gitId":"newway1814"},"content":"    boolean hasTask(Task task);","lastModifiedDate":"2023-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":61,"author":{"gitId":"newway1814"},"content":"     * Deletes the given task.","lastModifiedDate":"2023-10-16"},{"lineNumber":62,"author":{"gitId":"eyelessrhyme7"},"content":"     * The task must exist in the task list.","lastModifiedDate":"2023-10-17"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":64,"author":{"gitId":"newway1814"},"content":"    void deleteTask(Task target);","lastModifiedDate":"2023-10-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"newway1814"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":67,"author":{"gitId":"newway1814"},"content":"     * Deletes all the tasks present in the list.","lastModifiedDate":"2023-10-17"},{"lineNumber":68,"author":{"gitId":"newway1814"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":69,"author":{"gitId":"newway1814"},"content":"    void deleteTask();","lastModifiedDate":"2023-10-17"},{"lineNumber":70,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":71,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":73,"author":{"gitId":"newway1814"},"content":"     * Adds the given task.","lastModifiedDate":"2023-10-16"},{"lineNumber":74,"author":{"gitId":"eyelessrhyme7"},"content":"     * {@code task} must not already exist in the task list.","lastModifiedDate":"2023-10-17"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"newway1814"},"content":"    void addTask(Task task);","lastModifiedDate":"2023-10-16"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":78,"author":{"gitId":"newway1814"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":79,"author":{"gitId":"newway1814"},"content":"     * Marks the task at given index as done.","lastModifiedDate":"2023-10-16"},{"lineNumber":80,"author":{"gitId":"newway1814"},"content":"     * {@code index} must be in range.","lastModifiedDate":"2023-10-16"},{"lineNumber":81,"author":{"gitId":"newway1814"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":82,"author":{"gitId":"newway1814"},"content":"    void markTask(int index);","lastModifiedDate":"2023-10-16"},{"lineNumber":83,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":84,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":85,"author":{"gitId":"newway1814"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":86,"author":{"gitId":"newway1814"},"content":"     * Marks the task at given index as undone.","lastModifiedDate":"2023-10-17"},{"lineNumber":87,"author":{"gitId":"newway1814"},"content":"     * {@code index} must be in range.","lastModifiedDate":"2023-10-17"},{"lineNumber":88,"author":{"gitId":"newway1814"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":89,"author":{"gitId":"newway1814"},"content":"    void unmarkTask(int index);","lastModifiedDate":"2023-10-17"},{"lineNumber":90,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":91,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":93,"author":{"gitId":"newway1814"},"content":"     * Replaces the given task {@code target} with {@code editedTask}.","lastModifiedDate":"2023-10-16"},{"lineNumber":94,"author":{"gitId":"eyelessrhyme7"},"content":"     * {@code target} must exist in the task list.","lastModifiedDate":"2023-10-17"},{"lineNumber":95,"author":{"gitId":"eyelessrhyme7"},"content":"     * The task identity of {@code editedTask} must not be the same as another existing task in the task list.","lastModifiedDate":"2023-10-17"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":97,"author":{"gitId":"newway1814"},"content":"    void setTask(Task target, Task editedTask);","lastModifiedDate":"2023-10-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":99,"author":{"gitId":"newway1814"},"content":"    /** Returns an unmodifiable view of the filtered task list */","lastModifiedDate":"2023-10-16"},{"lineNumber":100,"author":{"gitId":"newway1814"},"content":"    ObservableList\u003cTask\u003e getFilteredTaskList();","lastModifiedDate":"2023-10-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":103,"author":{"gitId":"newway1814"},"content":"     * Updates the filter of the filtered task list to filter by the given {@code predicate}.","lastModifiedDate":"2023-10-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":106,"author":{"gitId":"newway1814"},"content":"    void updateFilteredTaskList(Predicate\u003cTask\u003e predicate);","lastModifiedDate":"2023-10-16"},{"lineNumber":107,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":108,"author":{"gitId":"eyelessrhyme7"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":109,"author":{"gitId":"eyelessrhyme7"},"content":"     * Returns the task to do next based on the formula: priority/#daysToDueDate.","lastModifiedDate":"2023-10-26"},{"lineNumber":110,"author":{"gitId":"eyelessrhyme7"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":111,"author":{"gitId":"eyelessrhyme7"},"content":"    Task getDoNextTask();","lastModifiedDate":"2023-10-26"},{"lineNumber":112,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":113,"author":{"gitId":"eyelessrhyme7"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":114,"author":{"gitId":"jack1e0"},"content":"     * Sorts the task by nearest duedate.","lastModifiedDate":"2023-11-02"},{"lineNumber":115,"author":{"gitId":"newway1814"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":116,"author":{"gitId":"jack1e0"},"content":"    void sortTaskByDueDate();","lastModifiedDate":"2023-11-02"},{"lineNumber":117,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":118,"author":{"gitId":"newway1814"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":119,"author":{"gitId":"newway1814"},"content":"     * Sorts the task based on priority.","lastModifiedDate":"2023-10-26"},{"lineNumber":120,"author":{"gitId":"newway1814"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":121,"author":{"gitId":"newway1814"},"content":"    void sortTaskByPriority();","lastModifiedDate":"2023-10-26"},{"lineNumber":122,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":123,"author":{"gitId":"yarnmengnus"},"content":"    /**","lastModifiedDate":"2023-11-03"},{"lineNumber":124,"author":{"gitId":"yarnmengnus"},"content":"     * Gets completion rate of existing tasks.","lastModifiedDate":"2023-11-03"},{"lineNumber":125,"author":{"gitId":"yarnmengnus"},"content":"     */","lastModifiedDate":"2023-11-03"},{"lineNumber":126,"author":{"gitId":"yarnmengnus"},"content":"    double getCompletionRate();","lastModifiedDate":"2023-11-03"},{"lineNumber":127,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"yarnmengnus":5,"jack1e0":3,"kiatkat":6,"eyelessrhyme7":15,"-":59,"newway1814":39}},{"path":"src/main/java/profplan/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kiatkat"},"content":"package profplan.model;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":6,"author":{"gitId":"eyelessrhyme7"},"content":"import java.text.SimpleDateFormat;","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"newway1814"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"eyelessrhyme7"},"content":"import java.util.Date;","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"eyelessrhyme7"},"content":"import java.util.concurrent.TimeUnit;","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":15,"author":{"gitId":"kiatkat"},"content":"import profplan.commons.core.GuiSettings;","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"kiatkat"},"content":"import profplan.commons.core.LogsCenter;","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"kiatkat"},"content":"import profplan.commons.core.Settings;","lastModifiedDate":"2023-11-01"},{"lineNumber":18,"author":{"gitId":"kiatkat"},"content":"import profplan.commons.util.CollectionUtil;","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"eyelessrhyme7"},"content":"import profplan.model.task.DueDate;","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"eyelessrhyme7"},"content":"import profplan.model.task.Priority;","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"newway1814"},"content":"import profplan.model.task.Status;","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"newway1814"},"content":"import profplan.model.task.Task;","lastModifiedDate":"2023-10-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"eyelessrhyme7"},"content":" * Represents the in-memory model of the task list data.","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"kiatkat"},"content":"    private static UserConfigs userConfigs;","lastModifiedDate":"2023-11-02"},{"lineNumber":32,"author":{"gitId":"kiatkat"},"content":"    private final ProfPlan profPlan;","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"newway1814"},"content":"    private final FilteredList\u003cTask\u003e filteredTasks;","lastModifiedDate":"2023-10-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"jack1e0"},"content":"     * Initializes a ModelManager with the given profPlan and userPrefs.","lastModifiedDate":"2023-11-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"jack1e0"},"content":"    public ModelManager(ReadOnlyProfPlan profPlan, ReadOnlyUserPrefs userPrefs,","lastModifiedDate":"2023-11-12"},{"lineNumber":40,"author":{"gitId":"kiatkat"},"content":"                        ReadOnlyUserConfigs userConfigs) {","lastModifiedDate":"2023-11-01"},{"lineNumber":41,"author":{"gitId":"jack1e0"},"content":"        CollectionUtil.requireAllNonNull(profPlan, userPrefs);","lastModifiedDate":"2023-11-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":43,"author":{"gitId":"jack1e0"},"content":"        logger.fine(\"Initializing with task list: \" + profPlan + \" and user prefs \" + userPrefs);","lastModifiedDate":"2023-11-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"jack1e0"},"content":"        this.profPlan \u003d new ProfPlan(profPlan);","lastModifiedDate":"2023-11-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":47,"author":{"gitId":"kiatkat"},"content":"        ModelManager.userConfigs \u003d new UserConfigs(userConfigs);","lastModifiedDate":"2023-11-02"},{"lineNumber":48,"author":{"gitId":"newway1814"},"content":"        filteredTasks \u003d new FilteredList\u003c\u003e(this.profPlan.getTaskList());","lastModifiedDate":"2023-10-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":52,"author":{"gitId":"kiatkat"},"content":"        this(new ProfPlan(), new UserPrefs(), new UserConfigs());","lastModifiedDate":"2023-11-01"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"kiatkat"},"content":"    public Path getProfPlanFilePath() {","lastModifiedDate":"2023-10-13"},{"lineNumber":81,"author":{"gitId":"kiatkat"},"content":"        return userPrefs.getProfPlanFilePath();","lastModifiedDate":"2023-10-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"kiatkat"},"content":"    public void setProfPlanFilePath(Path profPlanFilePath) {","lastModifiedDate":"2023-10-13"},{"lineNumber":86,"author":{"gitId":"kiatkat"},"content":"        requireNonNull(profPlanFilePath);","lastModifiedDate":"2023-10-13"},{"lineNumber":87,"author":{"gitId":"kiatkat"},"content":"        userPrefs.setProfPlanFilePath(profPlanFilePath);","lastModifiedDate":"2023-10-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"kiatkat"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserConfigs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-11-01"},{"lineNumber":91,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":92,"author":{"gitId":"kiatkat"},"content":"    public static void setUserConfigs(ReadOnlyUserConfigs userConfigs) {","lastModifiedDate":"2023-11-02"},{"lineNumber":93,"author":{"gitId":"kiatkat"},"content":"        requireNonNull(userConfigs);","lastModifiedDate":"2023-11-01"},{"lineNumber":94,"author":{"gitId":"kiatkat"},"content":"        ModelManager.userConfigs.resetData(userConfigs);","lastModifiedDate":"2023-11-02"},{"lineNumber":95,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":96,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":97,"author":{"gitId":"kiatkat"},"content":"    public static ReadOnlyUserConfigs getUserConfigs() {","lastModifiedDate":"2023-11-02"},{"lineNumber":98,"author":{"gitId":"kiatkat"},"content":"        return userConfigs;","lastModifiedDate":"2023-11-01"},{"lineNumber":99,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":100,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":101,"author":{"gitId":"kiatkat"},"content":"    public static Settings getSettings() {","lastModifiedDate":"2023-11-02"},{"lineNumber":102,"author":{"gitId":"kiatkat"},"content":"        return userConfigs.getSettings();","lastModifiedDate":"2023-11-01"},{"lineNumber":103,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":104,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":105,"author":{"gitId":"kiatkat"},"content":"    public static void setSettings(Settings settings) {","lastModifiedDate":"2023-11-02"},{"lineNumber":106,"author":{"gitId":"kiatkat"},"content":"        requireNonNull(settings);","lastModifiedDate":"2023-11-01"},{"lineNumber":107,"author":{"gitId":"kiatkat"},"content":"        userConfigs.setSettings(settings);","lastModifiedDate":"2023-11-01"},{"lineNumber":108,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":109,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":110,"author":{"gitId":"jack1e0"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d ProfPlan \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-10-20"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":113,"author":{"gitId":"kiatkat"},"content":"    public void setProfPlan(ReadOnlyProfPlan profPlan) {","lastModifiedDate":"2023-10-13"},{"lineNumber":114,"author":{"gitId":"kiatkat"},"content":"        this.profPlan.resetData(profPlan);","lastModifiedDate":"2023-10-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":118,"author":{"gitId":"kiatkat"},"content":"    public ReadOnlyProfPlan getProfPlan() {","lastModifiedDate":"2023-10-13"},{"lineNumber":119,"author":{"gitId":"kiatkat"},"content":"        return profPlan;","lastModifiedDate":"2023-10-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":123,"author":{"gitId":"newway1814"},"content":"    public boolean hasTask(Task task) {","lastModifiedDate":"2023-10-16"},{"lineNumber":124,"author":{"gitId":"newway1814"},"content":"        requireNonNull(task);","lastModifiedDate":"2023-10-16"},{"lineNumber":125,"author":{"gitId":"newway1814"},"content":"        return profPlan.hasTask(task);","lastModifiedDate":"2023-10-16"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":129,"author":{"gitId":"newway1814"},"content":"    public void deleteTask(Task target) {","lastModifiedDate":"2023-10-16"},{"lineNumber":130,"author":{"gitId":"newway1814"},"content":"        profPlan.removeTask(target);","lastModifiedDate":"2023-10-16"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"newway1814"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":134,"author":{"gitId":"newway1814"},"content":"    public void deleteTask() {","lastModifiedDate":"2023-10-17"},{"lineNumber":135,"author":{"gitId":"newway1814"},"content":"        profPlan.removeTask();","lastModifiedDate":"2023-10-17"},{"lineNumber":136,"author":{"gitId":"newway1814"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":137,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":139,"author":{"gitId":"newway1814"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2023-10-16"},{"lineNumber":140,"author":{"gitId":"newway1814"},"content":"        profPlan.addTask(task);","lastModifiedDate":"2023-10-16"},{"lineNumber":141,"author":{"gitId":"newway1814"},"content":"        updateFilteredTaskList(PREDICATE_SHOW_ALL_TASKS);","lastModifiedDate":"2023-10-16"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":144,"author":{"gitId":"newway1814"},"content":"    @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":145,"author":{"gitId":"jack1e0"},"content":"    public void markTask(int index) throws IllegalArgumentException {","lastModifiedDate":"2023-11-12"},{"lineNumber":146,"author":{"gitId":"newway1814"},"content":"        Task temp \u003d profPlan.getTaskList().get(index);","lastModifiedDate":"2023-10-18"},{"lineNumber":147,"author":{"gitId":"newway1814"},"content":"        temp.setStatus(Status.DONE_STATUS);","lastModifiedDate":"2023-10-18"},{"lineNumber":148,"author":{"gitId":"newway1814"},"content":"        profPlan.setTask(profPlan.getTaskList().get(index), temp);","lastModifiedDate":"2023-10-18"},{"lineNumber":149,"author":{"gitId":"newway1814"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":150,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":151,"author":{"gitId":"newway1814"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":152,"author":{"gitId":"newway1814"},"content":"    public void unmarkTask(int index) {","lastModifiedDate":"2023-10-17"},{"lineNumber":153,"author":{"gitId":"newway1814"},"content":"        Task temp \u003d profPlan.getTaskList().get(index);","lastModifiedDate":"2023-10-18"},{"lineNumber":154,"author":{"gitId":"newway1814"},"content":"        temp.setStatus(Status.UNDONE_STATUS);","lastModifiedDate":"2023-10-18"},{"lineNumber":155,"author":{"gitId":"newway1814"},"content":"        profPlan.setTask(profPlan.getTaskList().get(index), temp);","lastModifiedDate":"2023-10-18"},{"lineNumber":156,"author":{"gitId":"newway1814"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":157,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":159,"author":{"gitId":"newway1814"},"content":"    public void setTask(Task target, Task editedTask) {","lastModifiedDate":"2023-10-16"},{"lineNumber":160,"author":{"gitId":"newway1814"},"content":"        CollectionUtil.requireAllNonNull(target, editedTask);","lastModifiedDate":"2023-10-16"},{"lineNumber":161,"author":{"gitId":"newway1814"},"content":"        profPlan.setTask(target, editedTask);","lastModifiedDate":"2023-10-16"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":164,"author":{"gitId":"newway1814"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Task List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-10-16"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":167,"author":{"gitId":"newway1814"},"content":"     * Returns an unmodifiable view of the list of {@code Task} backed by the internal list of","lastModifiedDate":"2023-10-16"},{"lineNumber":168,"author":{"gitId":"jack1e0"},"content":"     * {@code versionedProfPlan}","lastModifiedDate":"2023-11-12"},{"lineNumber":169,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":171,"author":{"gitId":"newway1814"},"content":"    public ObservableList\u003cTask\u003e getFilteredTaskList() {","lastModifiedDate":"2023-10-16"},{"lineNumber":172,"author":{"gitId":"newway1814"},"content":"        return filteredTasks;","lastModifiedDate":"2023-10-16"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":176,"author":{"gitId":"newway1814"},"content":"    public void updateFilteredTaskList(Predicate\u003cTask\u003e predicate) {","lastModifiedDate":"2023-10-16"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":178,"author":{"gitId":"newway1814"},"content":"        filteredTasks.setPredicate(predicate);","lastModifiedDate":"2023-10-16"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":181,"author":{"gitId":"newway1814"},"content":"    @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":182,"author":{"gitId":"eyelessrhyme7"},"content":"    public void sortTaskByDueDate() {","lastModifiedDate":"2023-11-02"},{"lineNumber":183,"author":{"gitId":"newway1814"},"content":"        if (this.filteredTasks.isEmpty()) {","lastModifiedDate":"2023-11-13"},{"lineNumber":184,"author":{"gitId":"newway1814"},"content":"            throw new UnsupportedOperationException(\"Can not sort since there are no tasks \"","lastModifiedDate":"2023-11-13"},{"lineNumber":185,"author":{"gitId":"newway1814"},"content":"                + \"displayed currently in the UI\");","lastModifiedDate":"2023-11-13"},{"lineNumber":186,"author":{"gitId":"newway1814"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":187,"author":{"gitId":"newway1814"},"content":"        profPlan.getTaskList().sort(Comparator.comparing(Task::getDueDate));","lastModifiedDate":"2023-10-26"},{"lineNumber":188,"author":{"gitId":"newway1814"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":189,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":190,"author":{"gitId":"newway1814"},"content":"    @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":191,"author":{"gitId":"newway1814"},"content":"    public void sortTaskByPriority() {","lastModifiedDate":"2023-10-26"},{"lineNumber":192,"author":{"gitId":"newway1814"},"content":"        if (this.filteredTasks.isEmpty()) {","lastModifiedDate":"2023-11-13"},{"lineNumber":193,"author":{"gitId":"newway1814"},"content":"            throw new UnsupportedOperationException(\"Can not sort since there are no tasks \"","lastModifiedDate":"2023-11-13"},{"lineNumber":194,"author":{"gitId":"newway1814"},"content":"                + \"displayed currently in the UI\");","lastModifiedDate":"2023-11-13"},{"lineNumber":195,"author":{"gitId":"newway1814"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":196,"author":{"gitId":"newway1814"},"content":"        profPlan.getTaskList().sort(Comparator.comparing(Task::getPriority));","lastModifiedDate":"2023-10-26"},{"lineNumber":197,"author":{"gitId":"newway1814"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":198,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-07-13"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":202,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        if (!(other instanceof ModelManager)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":207,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        ModelManager otherModelManager \u003d (ModelManager) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":211,"author":{"gitId":"kiatkat"},"content":"        return profPlan.equals(otherModelManager.profPlan)","lastModifiedDate":"2023-10-13"},{"lineNumber":212,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(otherModelManager.userPrefs)","lastModifiedDate":"2023-07-13"},{"lineNumber":213,"author":{"gitId":"newway1814"},"content":"                \u0026\u0026 filteredTasks.equals(otherModelManager.filteredTasks);","lastModifiedDate":"2023-10-16"},{"lineNumber":214,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":216,"author":{"gitId":"eyelessrhyme7"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":217,"author":{"gitId":"eyelessrhyme7"},"content":"     * Returns the task to do next based on the formula: priority/#daysToDueDate.","lastModifiedDate":"2023-10-26"},{"lineNumber":218,"author":{"gitId":"eyelessrhyme7"},"content":"     * */","lastModifiedDate":"2023-10-26"},{"lineNumber":219,"author":{"gitId":"eyelessrhyme7"},"content":"    @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":220,"author":{"gitId":"eyelessrhyme7"},"content":"    public Task getDoNextTask() {","lastModifiedDate":"2023-10-26"},{"lineNumber":221,"author":{"gitId":"eyelessrhyme7"},"content":"        ObservableList\u003cTask\u003e internalUnmodifiableList \u003d profPlan.getTaskList();","lastModifiedDate":"2023-10-26"},{"lineNumber":222,"author":{"gitId":"eyelessrhyme7"},"content":"        Task recommendedTask \u003d null;","lastModifiedDate":"2023-10-26"},{"lineNumber":223,"author":{"gitId":"eyelessrhyme7"},"content":"        double highestComputedValue \u003d Double.NEGATIVE_INFINITY; // Initialize with a very low value","lastModifiedDate":"2023-10-26"},{"lineNumber":224,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":225,"author":{"gitId":"eyelessrhyme7"},"content":"        // Get the current date","lastModifiedDate":"2023-10-26"},{"lineNumber":226,"author":{"gitId":"eyelessrhyme7"},"content":"        SimpleDateFormat dateFormat \u003d new SimpleDateFormat(\"dd-MM-yyyy\");","lastModifiedDate":"2023-10-26"},{"lineNumber":227,"author":{"gitId":"eyelessrhyme7"},"content":"        Date currentDate \u003d new Date();","lastModifiedDate":"2023-10-26"},{"lineNumber":228,"author":{"gitId":"eyelessrhyme7"},"content":"        String curDate \u003d dateFormat.format(currentDate);","lastModifiedDate":"2023-10-26"},{"lineNumber":229,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":230,"author":{"gitId":"eyelessrhyme7"},"content":"        // Iterate through the list to find the task with the highest computed value","lastModifiedDate":"2023-10-26"},{"lineNumber":231,"author":{"gitId":"eyelessrhyme7"},"content":"        for (Task task : internalUnmodifiableList) {","lastModifiedDate":"2023-10-26"},{"lineNumber":232,"author":{"gitId":"eyelessrhyme7"},"content":"            Priority priority \u003d task.getPriority();","lastModifiedDate":"2023-10-26"},{"lineNumber":233,"author":{"gitId":"eyelessrhyme7"},"content":"            DueDate dueDate \u003d task.getDueDate();","lastModifiedDate":"2023-10-26"},{"lineNumber":234,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":235,"author":{"gitId":"eyelessrhyme7"},"content":"            // Calculate the number of days left to the due date","lastModifiedDate":"2023-10-26"},{"lineNumber":236,"author":{"gitId":"eyelessrhyme7"},"content":"            double daysLeft \u003d getDaysUntilDueDate(dueDate, curDate);","lastModifiedDate":"2023-11-02"},{"lineNumber":237,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":238,"author":{"gitId":"eyelessrhyme7"},"content":"            // Calculate the computed value (priority divided by days left)","lastModifiedDate":"2023-10-26"},{"lineNumber":239,"author":{"gitId":"eyelessrhyme7"},"content":"            double computedValue \u003d priorityValue(priority) / (double) daysLeft;","lastModifiedDate":"2023-10-26"},{"lineNumber":240,"author":{"gitId":"eyelessrhyme7"},"content":"            System.out.println(task.getName().toString());","lastModifiedDate":"2023-10-26"},{"lineNumber":241,"author":{"gitId":"eyelessrhyme7"},"content":"            System.out.println(computedValue);","lastModifiedDate":"2023-10-26"},{"lineNumber":242,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":243,"author":{"gitId":"eyelessrhyme7"},"content":"            // Update the recommended task if we find a higher computed value","lastModifiedDate":"2023-10-26"},{"lineNumber":244,"author":{"gitId":"eyelessrhyme7"},"content":"            if ((computedValue \u003e highestComputedValue) \u0026\u0026 (task.getStatus().equals(Status.UNDONE_STATUS))) {","lastModifiedDate":"2023-11-10"},{"lineNumber":245,"author":{"gitId":"eyelessrhyme7"},"content":"                highestComputedValue \u003d computedValue;","lastModifiedDate":"2023-10-26"},{"lineNumber":246,"author":{"gitId":"eyelessrhyme7"},"content":"                recommendedTask \u003d task;","lastModifiedDate":"2023-10-26"},{"lineNumber":247,"author":{"gitId":"eyelessrhyme7"},"content":"                System.out.println(task.getName().toString());","lastModifiedDate":"2023-10-26"},{"lineNumber":248,"author":{"gitId":"eyelessrhyme7"},"content":"            }","lastModifiedDate":"2023-10-26"},{"lineNumber":249,"author":{"gitId":"eyelessrhyme7"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":250,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":251,"author":{"gitId":"eyelessrhyme7"},"content":"        return recommendedTask;","lastModifiedDate":"2023-10-26"},{"lineNumber":252,"author":{"gitId":"eyelessrhyme7"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":253,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":254,"author":{"gitId":"eyelessrhyme7"},"content":"    // Helper method to calculate the number of days left to the due date","lastModifiedDate":"2023-10-26"},{"lineNumber":255,"author":{"gitId":"eyelessrhyme7"},"content":"    private double getDaysUntilDueDate(DueDate dueDate, String curDate) {","lastModifiedDate":"2023-11-02"},{"lineNumber":256,"author":{"gitId":"eyelessrhyme7"},"content":"        SimpleDateFormat dateFormat \u003d new SimpleDateFormat(\"dd-MM-yyyy\");","lastModifiedDate":"2023-10-26"},{"lineNumber":257,"author":{"gitId":"eyelessrhyme7"},"content":"        try {","lastModifiedDate":"2023-10-26"},{"lineNumber":258,"author":{"gitId":"eyelessrhyme7"},"content":"            Date dueDateDate \u003d dateFormat.parse(dueDate.toString());","lastModifiedDate":"2023-10-26"},{"lineNumber":259,"author":{"gitId":"eyelessrhyme7"},"content":"            Date currentDate \u003d dateFormat.parse(curDate);","lastModifiedDate":"2023-10-26"},{"lineNumber":260,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":261,"author":{"gitId":"eyelessrhyme7"},"content":"            long difference \u003d dueDateDate.getTime() - currentDate.getTime();","lastModifiedDate":"2023-10-26"},{"lineNumber":262,"author":{"gitId":"eyelessrhyme7"},"content":"            if (difference \u003c 0) {","lastModifiedDate":"2023-10-26"},{"lineNumber":263,"author":{"gitId":"eyelessrhyme7"},"content":"                difference \u003d 1;","lastModifiedDate":"2023-10-26"},{"lineNumber":264,"author":{"gitId":"eyelessrhyme7"},"content":"            }","lastModifiedDate":"2023-10-26"},{"lineNumber":265,"author":{"gitId":"eyelessrhyme7"},"content":"            double days \u003d TimeUnit.DAYS.convert(difference, TimeUnit.MILLISECONDS);","lastModifiedDate":"2023-11-02"},{"lineNumber":266,"author":{"gitId":"eyelessrhyme7"},"content":"            if (days \u003d\u003d 0) {","lastModifiedDate":"2023-11-02"},{"lineNumber":267,"author":{"gitId":"eyelessrhyme7"},"content":"                days \u003d 0.1;","lastModifiedDate":"2023-11-02"},{"lineNumber":268,"author":{"gitId":"eyelessrhyme7"},"content":"            }","lastModifiedDate":"2023-11-02"},{"lineNumber":269,"author":{"gitId":"eyelessrhyme7"},"content":"            System.out.println(days);","lastModifiedDate":"2023-11-02"},{"lineNumber":270,"author":{"gitId":"eyelessrhyme7"},"content":"            return days;","lastModifiedDate":"2023-11-02"},{"lineNumber":271,"author":{"gitId":"eyelessrhyme7"},"content":"        } catch (java.text.ParseException e) {","lastModifiedDate":"2023-11-02"},{"lineNumber":272,"author":{"gitId":"eyelessrhyme7"},"content":"            // Handle parsing errors","lastModifiedDate":"2023-10-26"},{"lineNumber":273,"author":{"gitId":"eyelessrhyme7"},"content":"            return -1;","lastModifiedDate":"2023-10-26"},{"lineNumber":274,"author":{"gitId":"eyelessrhyme7"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":275,"author":{"gitId":"eyelessrhyme7"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":276,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":277,"author":{"gitId":"eyelessrhyme7"},"content":"    // Helper method to calculate the priority value","lastModifiedDate":"2023-10-26"},{"lineNumber":278,"author":{"gitId":"eyelessrhyme7"},"content":"    private double priorityValue(Priority priority) {","lastModifiedDate":"2023-10-26"},{"lineNumber":279,"author":{"gitId":"eyelessrhyme7"},"content":"        // convert the priority string to a numeric value.","lastModifiedDate":"2023-10-26"},{"lineNumber":280,"author":{"gitId":"eyelessrhyme7"},"content":"        return Double.parseDouble(priority.toString());","lastModifiedDate":"2023-10-26"},{"lineNumber":281,"author":{"gitId":"eyelessrhyme7"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":282,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":283,"author":{"gitId":"yarnmengnus"},"content":"    public double getCompletionRate() {","lastModifiedDate":"2023-11-03"},{"lineNumber":284,"author":{"gitId":"yarnmengnus"},"content":"        Predicate\u003c? super Task\u003e currentPredicate \u003d filteredTasks.getPredicate();","lastModifiedDate":"2023-11-03"},{"lineNumber":285,"author":{"gitId":"yarnmengnus"},"content":"        filteredTasks.setPredicate(PREDICATE_SHOW_ALL_TASKS);","lastModifiedDate":"2023-11-03"},{"lineNumber":286,"author":{"gitId":"yarnmengnus"},"content":"        int totalTasks \u003d filteredTasks.size();","lastModifiedDate":"2023-11-03"},{"lineNumber":287,"author":{"gitId":"yarnmengnus"},"content":"        filteredTasks.setPredicate(x -\u003e x.getStatus().equals(Status.DONE_STATUS));","lastModifiedDate":"2023-11-10"},{"lineNumber":288,"author":{"gitId":"yarnmengnus"},"content":"        int doneTasks \u003d filteredTasks.size();","lastModifiedDate":"2023-11-03"},{"lineNumber":289,"author":{"gitId":"yarnmengnus"},"content":"        filteredTasks.setPredicate(currentPredicate);","lastModifiedDate":"2023-11-03"},{"lineNumber":290,"author":{"gitId":"yarnmengnus"},"content":"        return (double) doneTasks / totalTasks;","lastModifiedDate":"2023-11-03"},{"lineNumber":291,"author":{"gitId":"yarnmengnus"},"content":"    }","lastModifiedDate":"2023-11-03"},{"lineNumber":292,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":293,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":294,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-11-12"}],"authorContributionMap":{"yarnmengnus":10,"jack1e0":8,"kiatkat":41,"eyelessrhyme7":73,"-":102,"newway1814":60}},{"path":"src/main/java/profplan/model/ProfPlan.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kiatkat"},"content":"package profplan.model;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"kiatkat"},"content":"import profplan.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"newway1814"},"content":"import profplan.model.task.Task;","lastModifiedDate":"2023-10-16"},{"lineNumber":10,"author":{"gitId":"newway1814"},"content":"import profplan.model.task.UniqueTaskList;","lastModifiedDate":"2023-10-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"jack1e0"},"content":" * Wraps all data at the profPlan level","lastModifiedDate":"2023-11-12"},{"lineNumber":14,"author":{"gitId":"newway1814"},"content":" * Duplicates are not allowed (by .isSameTask comparison)","lastModifiedDate":"2023-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"kiatkat"},"content":"public class ProfPlan implements ReadOnlyProfPlan {","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"newway1814"},"content":"    private final UniqueTaskList tasks;","lastModifiedDate":"2023-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"newway1814"},"content":"        tasks \u003d new UniqueTaskList();","lastModifiedDate":"2023-10-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"kiatkat"},"content":"    public ProfPlan() {}","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"jack1e0"},"content":"     * Creates an ProfPlan using the Tasks in the {@code toBeCopied}","lastModifiedDate":"2023-11-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"kiatkat"},"content":"    public ProfPlan(ReadOnlyProfPlan toBeCopied) {","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":44,"author":{"gitId":"newway1814"},"content":"     * Replaces the contents of the task list with {@code tasks}.","lastModifiedDate":"2023-10-16"},{"lineNumber":45,"author":{"gitId":"newway1814"},"content":"     * {@code tasks} must not contain duplicate tasks.","lastModifiedDate":"2023-10-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":47,"author":{"gitId":"newway1814"},"content":"    public void setTasks(List\u003cTask\u003e tasks) {","lastModifiedDate":"2023-10-16"},{"lineNumber":48,"author":{"gitId":"newway1814"},"content":"        this.tasks.setTasks(tasks);","lastModifiedDate":"2023-10-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"jack1e0"},"content":"     * Resets the existing data of this {@code ProfPlan} with {@code newData}.","lastModifiedDate":"2023-11-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"kiatkat"},"content":"    public void resetData(ReadOnlyProfPlan newData) {","lastModifiedDate":"2023-10-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":57,"author":{"gitId":"newway1814"},"content":"        setTasks(newData.getTaskList());","lastModifiedDate":"2023-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"newway1814"},"content":"    //// task-level operations","lastModifiedDate":"2023-10-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"eyelessrhyme7"},"content":"     * Returns true if a task with the same identity as {@code task} exists in the task list.","lastModifiedDate":"2023-10-17"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"newway1814"},"content":"    public boolean hasTask(Task task) {","lastModifiedDate":"2023-10-16"},{"lineNumber":66,"author":{"gitId":"newway1814"},"content":"        requireNonNull(task);","lastModifiedDate":"2023-10-16"},{"lineNumber":67,"author":{"gitId":"newway1814"},"content":"        return tasks.contains(task);","lastModifiedDate":"2023-10-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"eyelessrhyme7"},"content":"     * Adds a task to the task list.","lastModifiedDate":"2023-10-17"},{"lineNumber":72,"author":{"gitId":"eyelessrhyme7"},"content":"     * The task must not already exist in the task list.","lastModifiedDate":"2023-10-17"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":74,"author":{"gitId":"newway1814"},"content":"    public void addTask(Task p) {","lastModifiedDate":"2023-10-16"},{"lineNumber":75,"author":{"gitId":"newway1814"},"content":"        tasks.add(p);","lastModifiedDate":"2023-10-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":79,"author":{"gitId":"newway1814"},"content":"     * Replaces the given task {@code target} in the list with {@code editedTask}.","lastModifiedDate":"2023-10-16"},{"lineNumber":80,"author":{"gitId":"eyelessrhyme7"},"content":"     * {@code target} must exist in the task list.","lastModifiedDate":"2023-10-17"},{"lineNumber":81,"author":{"gitId":"eyelessrhyme7"},"content":"     * The task identity of {@code editedTask} must not be the same as another existing task in the task list.","lastModifiedDate":"2023-10-17"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":83,"author":{"gitId":"newway1814"},"content":"    public void setTask(Task target, Task editedTask) {","lastModifiedDate":"2023-10-16"},{"lineNumber":84,"author":{"gitId":"newway1814"},"content":"        requireNonNull(editedTask);","lastModifiedDate":"2023-10-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":86,"author":{"gitId":"newway1814"},"content":"        tasks.setTask(target, editedTask);","lastModifiedDate":"2023-10-16"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":90,"author":{"gitId":"jack1e0"},"content":"     * Removes {@code key} from this {@code ProfPlan}.","lastModifiedDate":"2023-11-12"},{"lineNumber":91,"author":{"gitId":"eyelessrhyme7"},"content":"     * {@code key} must exist in the task list.","lastModifiedDate":"2023-10-17"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":93,"author":{"gitId":"newway1814"},"content":"    public void removeTask(Task key) {","lastModifiedDate":"2023-10-16"},{"lineNumber":94,"author":{"gitId":"newway1814"},"content":"        tasks.remove(key);","lastModifiedDate":"2023-10-16"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"newway1814"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":98,"author":{"gitId":"newway1814"},"content":"     * Removes all the tasks from the Task List","lastModifiedDate":"2023-10-17"},{"lineNumber":99,"author":{"gitId":"newway1814"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":100,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":101,"author":{"gitId":"newway1814"},"content":"    public void removeTask() {","lastModifiedDate":"2023-10-17"},{"lineNumber":102,"author":{"gitId":"newway1814"},"content":"        tasks.remove();","lastModifiedDate":"2023-10-17"},{"lineNumber":103,"author":{"gitId":"newway1814"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":104,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":110,"author":{"gitId":"newway1814"},"content":"                .add(\"tasks\", tasks)","lastModifiedDate":"2023-10-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"newway1814"},"content":"    public ObservableList\u003cTask\u003e getTaskList() {","lastModifiedDate":"2023-10-16"},{"lineNumber":116,"author":{"gitId":"newway1814"},"content":"        return tasks.getInternalList();","lastModifiedDate":"2023-10-26"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":126,"author":{"gitId":"kiatkat"},"content":"        if (!(other instanceof ProfPlan)) {","lastModifiedDate":"2023-10-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":130,"author":{"gitId":"kiatkat"},"content":"        ProfPlan otherProfPlan \u003d (ProfPlan) other;","lastModifiedDate":"2023-10-13"},{"lineNumber":131,"author":{"gitId":"newway1814"},"content":"        return tasks.equals(otherProfPlan.tasks);","lastModifiedDate":"2023-10-16"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":136,"author":{"gitId":"newway1814"},"content":"        return tasks.hashCode();","lastModifiedDate":"2023-10-16"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":138,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"jack1e0":4,"kiatkat":8,"eyelessrhyme7":6,"-":85,"newway1814":35}},{"path":"src/main/java/profplan/model/ReadOnlyProfPlan.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kiatkat"},"content":"package profplan.model;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"newway1814"},"content":"import profplan.model.task.Task;","lastModifiedDate":"2023-10-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"eyelessrhyme7"},"content":" * Unmodifiable view of an task list","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"kiatkat"},"content":"public interface ReadOnlyProfPlan {","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"newway1814"},"content":"     * Returns an unmodifiable view of the tasks list.","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"newway1814"},"content":"     * This list will not contain any duplicate tasks.","lastModifiedDate":"2023-10-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"newway1814"},"content":"    ObservableList\u003cTask\u003e getTaskList();","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"kiatkat":2,"eyelessrhyme7":1,"-":10,"newway1814":4}},{"path":"src/main/java/profplan/model/ReadOnlyUserConfigs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kiatkat"},"content":"package profplan.model;","lastModifiedDate":"2023-11-01"},{"lineNumber":2,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":3,"author":{"gitId":"kiatkat"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-11-01"},{"lineNumber":4,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":5,"author":{"gitId":"kiatkat"},"content":"import profplan.commons.core.Settings;","lastModifiedDate":"2023-11-01"},{"lineNumber":6,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":7,"author":{"gitId":"kiatkat"},"content":"/**","lastModifiedDate":"2023-11-01"},{"lineNumber":8,"author":{"gitId":"kiatkat"},"content":" * Unmodifiable view of user prefs.","lastModifiedDate":"2023-11-01"},{"lineNumber":9,"author":{"gitId":"kiatkat"},"content":" */","lastModifiedDate":"2023-11-01"},{"lineNumber":10,"author":{"gitId":"kiatkat"},"content":"public interface ReadOnlyUserConfigs {","lastModifiedDate":"2023-11-01"},{"lineNumber":11,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":12,"author":{"gitId":"kiatkat"},"content":"    Settings getSettings();","lastModifiedDate":"2023-11-01"},{"lineNumber":13,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":14,"author":{"gitId":"kiatkat"},"content":"    Path getProfPlanFilePath();","lastModifiedDate":"2023-11-01"},{"lineNumber":15,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":16,"author":{"gitId":"kiatkat"},"content":"}","lastModifiedDate":"2023-11-01"}],"authorContributionMap":{"kiatkat":16}},{"path":"src/main/java/profplan/model/ReadOnlyUserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kiatkat"},"content":"package profplan.model;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"kiatkat"},"content":"import profplan.commons.core.GuiSettings;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"kiatkat"},"content":"    Path getProfPlanFilePath();","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"kiatkat":3,"-":13}},{"path":"src/main/java/profplan/model/UserConfigs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kiatkat"},"content":"package profplan.model;","lastModifiedDate":"2023-11-01"},{"lineNumber":2,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":3,"author":{"gitId":"kiatkat"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-11-01"},{"lineNumber":4,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":5,"author":{"gitId":"kiatkat"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-11-01"},{"lineNumber":6,"author":{"gitId":"kiatkat"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-11-01"},{"lineNumber":7,"author":{"gitId":"kiatkat"},"content":"import java.util.Objects;","lastModifiedDate":"2023-11-01"},{"lineNumber":8,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":9,"author":{"gitId":"kiatkat"},"content":"import profplan.commons.core.Settings;","lastModifiedDate":"2023-11-01"},{"lineNumber":10,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":11,"author":{"gitId":"kiatkat"},"content":"/**","lastModifiedDate":"2023-11-01"},{"lineNumber":12,"author":{"gitId":"kiatkat"},"content":" * Stores global settings used in various commands. These can be updated by the user.","lastModifiedDate":"2023-11-01"},{"lineNumber":13,"author":{"gitId":"kiatkat"},"content":" */","lastModifiedDate":"2023-11-01"},{"lineNumber":14,"author":{"gitId":"kiatkat"},"content":"public class UserConfigs implements ReadOnlyUserConfigs {","lastModifiedDate":"2023-11-01"},{"lineNumber":15,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":16,"author":{"gitId":"kiatkat"},"content":"    private Settings settings \u003d new Settings();","lastModifiedDate":"2023-11-01"},{"lineNumber":17,"author":{"gitId":"kiatkat"},"content":"    private Path profPlanFilePath \u003d Paths.get(\"data\" , \"profplan.json\");","lastModifiedDate":"2023-11-01"},{"lineNumber":18,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":19,"author":{"gitId":"kiatkat"},"content":"    /**","lastModifiedDate":"2023-11-01"},{"lineNumber":20,"author":{"gitId":"kiatkat"},"content":"     * Creates a {@code UserConfigs} with default values.","lastModifiedDate":"2023-11-01"},{"lineNumber":21,"author":{"gitId":"kiatkat"},"content":"     */","lastModifiedDate":"2023-11-01"},{"lineNumber":22,"author":{"gitId":"kiatkat"},"content":"    public UserConfigs() {}","lastModifiedDate":"2023-11-01"},{"lineNumber":23,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":24,"author":{"gitId":"kiatkat"},"content":"    /**","lastModifiedDate":"2023-11-01"},{"lineNumber":25,"author":{"gitId":"kiatkat"},"content":"     * Creates a {@code UserConfigs} with the prefs in {@code userConfigs}.","lastModifiedDate":"2023-11-01"},{"lineNumber":26,"author":{"gitId":"kiatkat"},"content":"     */","lastModifiedDate":"2023-11-01"},{"lineNumber":27,"author":{"gitId":"kiatkat"},"content":"    public UserConfigs(ReadOnlyUserConfigs userConfigs) {","lastModifiedDate":"2023-11-01"},{"lineNumber":28,"author":{"gitId":"kiatkat"},"content":"        this();","lastModifiedDate":"2023-11-01"},{"lineNumber":29,"author":{"gitId":"kiatkat"},"content":"        resetData(userConfigs);","lastModifiedDate":"2023-11-01"},{"lineNumber":30,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":31,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":32,"author":{"gitId":"kiatkat"},"content":"    /**","lastModifiedDate":"2023-11-01"},{"lineNumber":33,"author":{"gitId":"kiatkat"},"content":"     * Resets the existing data of this {@code UserConfigs} with {@code newUserConfigs}.","lastModifiedDate":"2023-11-01"},{"lineNumber":34,"author":{"gitId":"kiatkat"},"content":"     */","lastModifiedDate":"2023-11-01"},{"lineNumber":35,"author":{"gitId":"kiatkat"},"content":"    public void resetData(ReadOnlyUserConfigs newUserConfigs) {","lastModifiedDate":"2023-11-01"},{"lineNumber":36,"author":{"gitId":"kiatkat"},"content":"        requireNonNull(newUserConfigs);","lastModifiedDate":"2023-11-01"},{"lineNumber":37,"author":{"gitId":"kiatkat"},"content":"        setSettings(newUserConfigs.getSettings());","lastModifiedDate":"2023-11-01"},{"lineNumber":38,"author":{"gitId":"kiatkat"},"content":"        setProfPlanFilePath(newUserConfigs.getProfPlanFilePath());","lastModifiedDate":"2023-11-01"},{"lineNumber":39,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":40,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":41,"author":{"gitId":"kiatkat"},"content":"    public Settings getSettings() {","lastModifiedDate":"2023-11-01"},{"lineNumber":42,"author":{"gitId":"kiatkat"},"content":"        return settings;","lastModifiedDate":"2023-11-01"},{"lineNumber":43,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":44,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":45,"author":{"gitId":"kiatkat"},"content":"    public void setSettings(Settings settings) {","lastModifiedDate":"2023-11-01"},{"lineNumber":46,"author":{"gitId":"kiatkat"},"content":"        requireNonNull(settings);","lastModifiedDate":"2023-11-01"},{"lineNumber":47,"author":{"gitId":"kiatkat"},"content":"        this.settings \u003d settings;","lastModifiedDate":"2023-11-01"},{"lineNumber":48,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":49,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":50,"author":{"gitId":"kiatkat"},"content":"    public Path getProfPlanFilePath() {","lastModifiedDate":"2023-11-01"},{"lineNumber":51,"author":{"gitId":"kiatkat"},"content":"        return profPlanFilePath;","lastModifiedDate":"2023-11-01"},{"lineNumber":52,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":53,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":54,"author":{"gitId":"kiatkat"},"content":"    public void setProfPlanFilePath(Path profPlanFilePath) {","lastModifiedDate":"2023-11-01"},{"lineNumber":55,"author":{"gitId":"kiatkat"},"content":"        requireNonNull(profPlanFilePath);","lastModifiedDate":"2023-11-01"},{"lineNumber":56,"author":{"gitId":"kiatkat"},"content":"        this.profPlanFilePath \u003d profPlanFilePath;","lastModifiedDate":"2023-11-01"},{"lineNumber":57,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":58,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":59,"author":{"gitId":"kiatkat"},"content":"    @Override","lastModifiedDate":"2023-11-01"},{"lineNumber":60,"author":{"gitId":"kiatkat"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-11-01"},{"lineNumber":61,"author":{"gitId":"kiatkat"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-11-01"},{"lineNumber":62,"author":{"gitId":"kiatkat"},"content":"            return true;","lastModifiedDate":"2023-11-01"},{"lineNumber":63,"author":{"gitId":"kiatkat"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":64,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":65,"author":{"gitId":"kiatkat"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-11-01"},{"lineNumber":66,"author":{"gitId":"kiatkat"},"content":"        if (!(other instanceof UserConfigs)) {","lastModifiedDate":"2023-11-01"},{"lineNumber":67,"author":{"gitId":"kiatkat"},"content":"            return false;","lastModifiedDate":"2023-11-01"},{"lineNumber":68,"author":{"gitId":"kiatkat"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":69,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":70,"author":{"gitId":"kiatkat"},"content":"        UserConfigs otherUserConfigs \u003d (UserConfigs) other;","lastModifiedDate":"2023-11-01"},{"lineNumber":71,"author":{"gitId":"kiatkat"},"content":"        return settings.equals(otherUserConfigs.settings)","lastModifiedDate":"2023-11-01"},{"lineNumber":72,"author":{"gitId":"kiatkat"},"content":"                \u0026\u0026 profPlanFilePath.equals(otherUserConfigs.profPlanFilePath);","lastModifiedDate":"2023-11-01"},{"lineNumber":73,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":74,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":75,"author":{"gitId":"kiatkat"},"content":"    @Override","lastModifiedDate":"2023-11-01"},{"lineNumber":76,"author":{"gitId":"kiatkat"},"content":"    public int hashCode() {","lastModifiedDate":"2023-11-01"},{"lineNumber":77,"author":{"gitId":"kiatkat"},"content":"        return Objects.hash(settings, profPlanFilePath);","lastModifiedDate":"2023-11-01"},{"lineNumber":78,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":79,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":80,"author":{"gitId":"kiatkat"},"content":"    @Override","lastModifiedDate":"2023-11-01"},{"lineNumber":81,"author":{"gitId":"kiatkat"},"content":"    public String toString() {","lastModifiedDate":"2023-11-01"},{"lineNumber":82,"author":{"gitId":"kiatkat"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-11-01"},{"lineNumber":83,"author":{"gitId":"kiatkat"},"content":"        sb.append(\"Settings : \" + settings);","lastModifiedDate":"2023-11-01"},{"lineNumber":84,"author":{"gitId":"kiatkat"},"content":"        sb.append(\"\\nLocal data file location : \" + profPlanFilePath);","lastModifiedDate":"2023-11-01"},{"lineNumber":85,"author":{"gitId":"kiatkat"},"content":"        return sb.toString();","lastModifiedDate":"2023-11-01"},{"lineNumber":86,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":87,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":88,"author":{"gitId":"kiatkat"},"content":"}","lastModifiedDate":"2023-11-01"}],"authorContributionMap":{"kiatkat":88}},{"path":"src/main/java/profplan/model/UserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kiatkat"},"content":"package profplan.model;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"kiatkat"},"content":"import profplan.commons.core.GuiSettings;","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents User\u0027s preferences.","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class UserPrefs implements ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"kiatkat"},"content":"    private Path profPlanFilePath \u003d Paths.get(\"data\" , \"profplan.json\");","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with default values.","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public UserPrefs() {}","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with the prefs in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public UserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code UserPrefs} with {@code newUserPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyUserPrefs newUserPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireNonNull(newUserPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        setGuiSettings(newUserPrefs.getGuiSettings());","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"kiatkat"},"content":"        setProfPlanFilePath(newUserPrefs.getProfPlanFilePath());","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return guiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.guiSettings \u003d guiSettings;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"kiatkat"},"content":"    public Path getProfPlanFilePath() {","lastModifiedDate":"2023-10-13"},{"lineNumber":51,"author":{"gitId":"kiatkat"},"content":"        return profPlanFilePath;","lastModifiedDate":"2023-10-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":54,"author":{"gitId":"kiatkat"},"content":"    public void setProfPlanFilePath(Path profPlanFilePath) {","lastModifiedDate":"2023-10-13"},{"lineNumber":55,"author":{"gitId":"kiatkat"},"content":"        requireNonNull(profPlanFilePath);","lastModifiedDate":"2023-10-13"},{"lineNumber":56,"author":{"gitId":"kiatkat"},"content":"        this.profPlanFilePath \u003d profPlanFilePath;","lastModifiedDate":"2023-10-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        if (!(other instanceof UserPrefs)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        UserPrefs otherUserPrefs \u003d (UserPrefs) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return guiSettings.equals(otherUserPrefs.guiSettings)","lastModifiedDate":"2023-07-13"},{"lineNumber":72,"author":{"gitId":"kiatkat"},"content":"                \u0026\u0026 profPlanFilePath.equals(otherUserPrefs.profPlanFilePath);","lastModifiedDate":"2023-10-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"kiatkat"},"content":"        return Objects.hash(guiSettings, profPlanFilePath);","lastModifiedDate":"2023-10-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-02-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        sb.append(\"Gui Settings : \" + guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"kiatkat"},"content":"        sb.append(\"\\nLocal data file location : \" + profPlanFilePath);","lastModifiedDate":"2023-10-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-02-25"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"kiatkat":12,"-":76}},{"path":"src/main/java/profplan/model/tag/Tag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kiatkat"},"content":"package profplan.model.tag;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":5,"author":{"gitId":"kiatkat"},"content":"import profplan.commons.util.AppUtil;","lastModifiedDate":"2023-10-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"eyelessrhyme7"},"content":" * Represents a Tag in the task list.","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Guarantees: immutable; name is valid as declared in {@link #isValidTagName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Tag {","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Tags names should be alphanumeric\";","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\p{Alnum}+\";","lastModifiedDate":"2018-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public final String tagName;","lastModifiedDate":"2016-10-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Constructs a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @param tagName A valid tag name.","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public Tag(String tagName) {","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(tagName);","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"kiatkat"},"content":"        AppUtil.checkArgument(isValidTagName(tagName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2017-05-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid tag name.","lastModifiedDate":"2016-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static boolean isValidTagName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        if (!(other instanceof Tag)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        Tag otherTag \u003d (Tag) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return tagName.equals(otherTag.tagName);","lastModifiedDate":"2023-07-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return tagName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return \u0027[\u0027 + tagName + \u0027]\u0027;","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"kiatkat":4,"eyelessrhyme7":1,"-":58}},{"path":"src/main/java/profplan/model/task/Description.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kiatkat"},"content":"package profplan.model.task;","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"kiatkat"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"kiatkat"},"content":"/**","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"kiatkat"},"content":" * Represents a Task\u0027s description in the task list.","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"kiatkat"},"content":" * Guarantees: immutable","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"kiatkat"},"content":" */","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"kiatkat"},"content":"public class Description {","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"kiatkat"},"content":"    public final String description;","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"kiatkat"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"kiatkat"},"content":"     * Constructs a {@code Description}.","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"kiatkat"},"content":"     *","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"kiatkat"},"content":"     * @param description A description.","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"kiatkat"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"kiatkat"},"content":"    public Description(String description) {","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"kiatkat"},"content":"        requireNonNull(description);","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"kiatkat"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"kiatkat"},"content":"    @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"kiatkat"},"content":"    public String toString() {","lastModifiedDate":"2023-10-26"},{"lineNumber":25,"author":{"gitId":"kiatkat"},"content":"        return description;","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":27,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":28,"author":{"gitId":"kiatkat"},"content":"    @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"kiatkat"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-26"},{"lineNumber":30,"author":{"gitId":"kiatkat"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-26"},{"lineNumber":31,"author":{"gitId":"kiatkat"},"content":"            return true;","lastModifiedDate":"2023-10-26"},{"lineNumber":32,"author":{"gitId":"kiatkat"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":33,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":34,"author":{"gitId":"kiatkat"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-26"},{"lineNumber":35,"author":{"gitId":"kiatkat"},"content":"        if (!(other instanceof Description)) {","lastModifiedDate":"2023-10-26"},{"lineNumber":36,"author":{"gitId":"kiatkat"},"content":"            return false;","lastModifiedDate":"2023-10-26"},{"lineNumber":37,"author":{"gitId":"kiatkat"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":38,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":39,"author":{"gitId":"kiatkat"},"content":"        Description otherDescription \u003d (Description) other;","lastModifiedDate":"2023-10-26"},{"lineNumber":40,"author":{"gitId":"kiatkat"},"content":"        return description.equals(otherDescription.description);","lastModifiedDate":"2023-10-26"},{"lineNumber":41,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":42,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":43,"author":{"gitId":"kiatkat"},"content":"    @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":44,"author":{"gitId":"kiatkat"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-26"},{"lineNumber":45,"author":{"gitId":"kiatkat"},"content":"        return description.hashCode();","lastModifiedDate":"2023-10-26"},{"lineNumber":46,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":47,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":48,"author":{"gitId":"kiatkat"},"content":"}","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"kiatkat":48}},{"path":"src/main/java/profplan/model/task/DueDate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jack1e0"},"content":"package profplan.model.task;","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"jack1e0"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"kiatkat"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-10-30"},{"lineNumber":6,"author":{"gitId":"kiatkat"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-10-30"},{"lineNumber":7,"author":{"gitId":"jack1e0"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-11-02"},{"lineNumber":8,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"jack1e0"},"content":"import profplan.commons.util.AppUtil;","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"jack1e0"},"content":"/**","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"jack1e0"},"content":" * Represents a Task\u0027s due date in the ProfPlan.","lastModifiedDate":"2023-11-12"},{"lineNumber":13,"author":{"gitId":"jack1e0"},"content":" */","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"newway1814"},"content":"public class DueDate implements Comparable\u003cDueDate\u003e {","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"jack1e0"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"jack1e0"},"content":"        \"Due date should be of dd-MM-yyyy format, and should be between 2000 and 2030.\";","lastModifiedDate":"2023-11-02"},{"lineNumber":17,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"jack1e0"},"content":"    private static DateTimeFormatter dateTimeFormatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy\");","lastModifiedDate":"2023-11-02"},{"lineNumber":19,"author":{"gitId":"jack1e0"},"content":"    private static LocalDate min \u003d LocalDate.of(1999, 12, 31);","lastModifiedDate":"2023-11-02"},{"lineNumber":20,"author":{"gitId":"jack1e0"},"content":"    private static LocalDate max \u003d LocalDate.of(2031, 1, 1);","lastModifiedDate":"2023-11-02"},{"lineNumber":21,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"eyelessrhyme7"},"content":"    private String value;","lastModifiedDate":"2023-11-13"},{"lineNumber":23,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"jack1e0"},"content":"    private LocalDate parsedValue \u003d null;","lastModifiedDate":"2023-11-02"},{"lineNumber":25,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":26,"author":{"gitId":"jack1e0"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"jack1e0"},"content":"     * Constructs a {@code DueDate}.","lastModifiedDate":"2023-11-12"},{"lineNumber":28,"author":{"gitId":"jack1e0"},"content":"     *","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"newway1814"},"content":"     * @param date A valid date.","lastModifiedDate":"2023-10-25"},{"lineNumber":30,"author":{"gitId":"jack1e0"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"jack1e0"},"content":"    public DueDate(String date) {","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"jack1e0"},"content":"        requireNonNull(date);","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"jack1e0"},"content":"        value \u003d date;","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"jack1e0"},"content":"        AppUtil.checkArgument(isValidDate(this), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-29"},{"lineNumber":35,"author":{"gitId":"eyelessrhyme7"},"content":"        value \u003d parsedValue \u003d\u003d null ? date : dateTimeFormatter.format(parsedValue);","lastModifiedDate":"2023-11-13"},{"lineNumber":36,"author":{"gitId":"jack1e0"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":37,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":38,"author":{"gitId":"jack1e0"},"content":"    /**","lastModifiedDate":"2023-10-29"},{"lineNumber":39,"author":{"gitId":"jack1e0"},"content":"     * Returns true if a given Duedate is of correct format.","lastModifiedDate":"2023-10-29"},{"lineNumber":40,"author":{"gitId":"jack1e0"},"content":"     */","lastModifiedDate":"2023-10-29"},{"lineNumber":41,"author":{"gitId":"jack1e0"},"content":"    public static boolean isValidDate(DueDate test) {","lastModifiedDate":"2023-10-29"},{"lineNumber":42,"author":{"gitId":"jack1e0"},"content":"        try {","lastModifiedDate":"2023-10-29"},{"lineNumber":43,"author":{"gitId":"jack1e0"},"content":"            LocalDate parsed \u003d LocalDate.parse(test.value, dateTimeFormatter);","lastModifiedDate":"2023-11-02"},{"lineNumber":44,"author":{"gitId":"jack1e0"},"content":"            if (parsed.isBefore(max) \u0026\u0026 parsed.isAfter(min)) {","lastModifiedDate":"2023-11-02"},{"lineNumber":45,"author":{"gitId":"jack1e0"},"content":"                test.parsedValue \u003d parsed;","lastModifiedDate":"2023-11-02"},{"lineNumber":46,"author":{"gitId":"jack1e0"},"content":"                return true;","lastModifiedDate":"2023-11-02"},{"lineNumber":47,"author":{"gitId":"jack1e0"},"content":"            } else {","lastModifiedDate":"2023-11-02"},{"lineNumber":48,"author":{"gitId":"jack1e0"},"content":"                return false;","lastModifiedDate":"2023-11-02"},{"lineNumber":49,"author":{"gitId":"jack1e0"},"content":"            }","lastModifiedDate":"2023-11-02"},{"lineNumber":50,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":51,"author":{"gitId":"jack1e0"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-11-02"},{"lineNumber":52,"author":{"gitId":"jack1e0"},"content":"            return false;","lastModifiedDate":"2023-10-29"},{"lineNumber":53,"author":{"gitId":"jack1e0"},"content":"        }","lastModifiedDate":"2023-10-29"},{"lineNumber":54,"author":{"gitId":"jack1e0"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":55,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":56,"author":{"gitId":"jack1e0"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":57,"author":{"gitId":"jack1e0"},"content":"     * Overloaded method for isValidDate","lastModifiedDate":"2023-10-29"},{"lineNumber":58,"author":{"gitId":"jack1e0"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":59,"author":{"gitId":"jack1e0"},"content":"    public static boolean isValidDate(String test) {","lastModifiedDate":"2023-10-17"},{"lineNumber":60,"author":{"gitId":"jack1e0"},"content":"        try {","lastModifiedDate":"2023-10-17"},{"lineNumber":61,"author":{"gitId":"jack1e0"},"content":"            LocalDate parsed \u003d LocalDate.parse(test, dateTimeFormatter);","lastModifiedDate":"2023-11-02"},{"lineNumber":62,"author":{"gitId":"jack1e0"},"content":"            return parsed.isBefore(max) \u0026\u0026 parsed.isAfter(min);","lastModifiedDate":"2023-11-02"},{"lineNumber":63,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":64,"author":{"gitId":"jack1e0"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-11-02"},{"lineNumber":65,"author":{"gitId":"jack1e0"},"content":"            return false;","lastModifiedDate":"2023-10-17"},{"lineNumber":66,"author":{"gitId":"jack1e0"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":67,"author":{"gitId":"jack1e0"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":68,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":69,"author":{"gitId":"jack1e0"},"content":"    /**","lastModifiedDate":"2023-10-20"},{"lineNumber":70,"author":{"gitId":"jack1e0"},"content":"     * Checks whether the current date is before, on equals the given date","lastModifiedDate":"2023-10-20"},{"lineNumber":71,"author":{"gitId":"jack1e0"},"content":"     */","lastModifiedDate":"2023-10-20"},{"lineNumber":72,"author":{"gitId":"jack1e0"},"content":"    public boolean isIncludedorBefore(DueDate otherDate) {","lastModifiedDate":"2023-10-20"},{"lineNumber":73,"author":{"gitId":"jack1e0"},"content":"        return this.parsedValue.isBefore(otherDate.parsedValue)","lastModifiedDate":"2023-11-02"},{"lineNumber":74,"author":{"gitId":"jack1e0"},"content":"            || this.parsedValue.equals(otherDate.parsedValue);","lastModifiedDate":"2023-11-02"},{"lineNumber":75,"author":{"gitId":"jack1e0"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":76,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":77,"author":{"gitId":"jack1e0"},"content":"    /**","lastModifiedDate":"2023-10-29"},{"lineNumber":78,"author":{"gitId":"jack1e0"},"content":"     * Returns true if due date is within a week of today.","lastModifiedDate":"2023-10-29"},{"lineNumber":79,"author":{"gitId":"jack1e0"},"content":"     */","lastModifiedDate":"2023-10-29"},{"lineNumber":80,"author":{"gitId":"jack1e0"},"content":"    public boolean isWithinWeek() {","lastModifiedDate":"2023-10-29"},{"lineNumber":81,"author":{"gitId":"jack1e0"},"content":"        LocalDate endOfWeek \u003d LocalDate.now().plusWeeks(1);","lastModifiedDate":"2023-11-02"},{"lineNumber":82,"author":{"gitId":"jack1e0"},"content":"        System.out.println(this.parsedValue);","lastModifiedDate":"2023-11-02"},{"lineNumber":83,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":84,"author":{"gitId":"jack1e0"},"content":"        return !this.parsedValue.isBefore(LocalDate.now())","lastModifiedDate":"2023-11-02"},{"lineNumber":85,"author":{"gitId":"jack1e0"},"content":"            \u0026\u0026 !this.parsedValue.isAfter(endOfWeek);","lastModifiedDate":"2023-11-02"},{"lineNumber":86,"author":{"gitId":"jack1e0"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":87,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":88,"author":{"gitId":"jack1e0"},"content":"    /**","lastModifiedDate":"2023-10-29"},{"lineNumber":89,"author":{"gitId":"jack1e0"},"content":"     * Returns true if due date is within a month of today.","lastModifiedDate":"2023-10-29"},{"lineNumber":90,"author":{"gitId":"jack1e0"},"content":"     */","lastModifiedDate":"2023-10-29"},{"lineNumber":91,"author":{"gitId":"jack1e0"},"content":"    public boolean isWithinMonth() {","lastModifiedDate":"2023-10-29"},{"lineNumber":92,"author":{"gitId":"jack1e0"},"content":"        LocalDate endOfMonth \u003d LocalDate.now().plusMonths(1);","lastModifiedDate":"2023-11-02"},{"lineNumber":93,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":94,"author":{"gitId":"jack1e0"},"content":"        return !this.parsedValue.isBefore(LocalDate.now())","lastModifiedDate":"2023-11-02"},{"lineNumber":95,"author":{"gitId":"jack1e0"},"content":"            \u0026\u0026 !this.parsedValue.isAfter(endOfMonth);","lastModifiedDate":"2023-11-02"},{"lineNumber":96,"author":{"gitId":"jack1e0"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":97,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":98,"author":{"gitId":"kiatkat"},"content":"    /**","lastModifiedDate":"2023-10-30"},{"lineNumber":99,"author":{"gitId":"kiatkat"},"content":"     * Increments a DueDate by the number of days specified.","lastModifiedDate":"2023-10-30"},{"lineNumber":100,"author":{"gitId":"kiatkat"},"content":"     * @param days The number of days to increment by. Must be between 0-31.","lastModifiedDate":"2023-10-30"},{"lineNumber":101,"author":{"gitId":"kiatkat"},"content":"     * @return A new DueDate object, with the incremented value.","lastModifiedDate":"2023-10-30"},{"lineNumber":102,"author":{"gitId":"kiatkat"},"content":"     */","lastModifiedDate":"2023-10-30"},{"lineNumber":103,"author":{"gitId":"jack1e0"},"content":"    public DueDate addDays(long days) throws IllegalArgumentException {","lastModifiedDate":"2023-11-12"},{"lineNumber":104,"author":{"gitId":"jack1e0"},"content":"        return new DueDate(parsedValue.plusDays(days).format(dateTimeFormatter));","lastModifiedDate":"2023-11-12"},{"lineNumber":105,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":106,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":107,"author":{"gitId":"kiatkat"},"content":"    /**","lastModifiedDate":"2023-10-30"},{"lineNumber":108,"author":{"gitId":"kiatkat"},"content":"     * Increments a DueDate by 1 month.","lastModifiedDate":"2023-10-30"},{"lineNumber":109,"author":{"gitId":"kiatkat"},"content":"     * @return A new DueDate object, with the incremented value.","lastModifiedDate":"2023-10-30"},{"lineNumber":110,"author":{"gitId":"kiatkat"},"content":"     */","lastModifiedDate":"2023-10-30"},{"lineNumber":111,"author":{"gitId":"jack1e0"},"content":"    public DueDate addMonth() {","lastModifiedDate":"2023-11-12"},{"lineNumber":112,"author":{"gitId":"jack1e0"},"content":"        return new DueDate(parsedValue.plusMonths(1).format(dateTimeFormatter));","lastModifiedDate":"2023-11-12"},{"lineNumber":113,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":114,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":115,"author":{"gitId":"jack1e0"},"content":"    /**","lastModifiedDate":"2023-11-02"},{"lineNumber":116,"author":{"gitId":"jack1e0"},"content":"     * Returns the format for DueDate","lastModifiedDate":"2023-11-02"},{"lineNumber":117,"author":{"gitId":"jack1e0"},"content":"     */","lastModifiedDate":"2023-11-02"},{"lineNumber":118,"author":{"gitId":"jack1e0"},"content":"    public static DateTimeFormatter getDateFormat() {","lastModifiedDate":"2023-11-02"},{"lineNumber":119,"author":{"gitId":"jack1e0"},"content":"        return dateTimeFormatter;","lastModifiedDate":"2023-11-02"},{"lineNumber":120,"author":{"gitId":"jack1e0"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":121,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":122,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":123,"author":{"gitId":"jack1e0"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":124,"author":{"gitId":"jack1e0"},"content":"    public String toString() {","lastModifiedDate":"2023-10-17"},{"lineNumber":125,"author":{"gitId":"jack1e0"},"content":"        return parsedValue \u003d\u003d null ? value : dateTimeFormatter.format(parsedValue);","lastModifiedDate":"2023-11-02"},{"lineNumber":126,"author":{"gitId":"jack1e0"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":127,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":128,"author":{"gitId":"jack1e0"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":129,"author":{"gitId":"jack1e0"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-17"},{"lineNumber":130,"author":{"gitId":"jack1e0"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-17"},{"lineNumber":131,"author":{"gitId":"jack1e0"},"content":"            return true;","lastModifiedDate":"2023-10-17"},{"lineNumber":132,"author":{"gitId":"jack1e0"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":133,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":134,"author":{"gitId":"jack1e0"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-17"},{"lineNumber":135,"author":{"gitId":"jack1e0"},"content":"        if (!(other instanceof DueDate)) {","lastModifiedDate":"2023-10-17"},{"lineNumber":136,"author":{"gitId":"jack1e0"},"content":"            return false;","lastModifiedDate":"2023-10-17"},{"lineNumber":137,"author":{"gitId":"jack1e0"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":138,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":139,"author":{"gitId":"jack1e0"},"content":"        DueDate otherDate \u003d (DueDate) other;","lastModifiedDate":"2023-10-17"},{"lineNumber":140,"author":{"gitId":"jack1e0"},"content":"        return value.equals(otherDate.value);","lastModifiedDate":"2023-10-17"},{"lineNumber":141,"author":{"gitId":"jack1e0"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":142,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":143,"author":{"gitId":"jack1e0"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":144,"author":{"gitId":"jack1e0"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-17"},{"lineNumber":145,"author":{"gitId":"jack1e0"},"content":"        return value.hashCode();","lastModifiedDate":"2023-10-17"},{"lineNumber":146,"author":{"gitId":"jack1e0"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":147,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":148,"author":{"gitId":"newway1814"},"content":"    @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":149,"author":{"gitId":"newway1814"},"content":"    public int compareTo(DueDate o) {","lastModifiedDate":"2023-10-25"},{"lineNumber":150,"author":{"gitId":"newway1814"},"content":"        try {","lastModifiedDate":"2023-10-25"},{"lineNumber":151,"author":{"gitId":"jack1e0"},"content":"            LocalDate thisDate \u003d LocalDate.parse(this.value, dateTimeFormatter);","lastModifiedDate":"2023-11-02"},{"lineNumber":152,"author":{"gitId":"jack1e0"},"content":"            LocalDate otherDate \u003d LocalDate.parse(o.value, dateTimeFormatter);","lastModifiedDate":"2023-11-02"},{"lineNumber":153,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":154,"author":{"gitId":"jack1e0"},"content":"            return thisDate.compareTo(otherDate);","lastModifiedDate":"2023-11-02"},{"lineNumber":155,"author":{"gitId":"jack1e0"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-11-02"},{"lineNumber":156,"author":{"gitId":"newway1814"},"content":"            return 0;","lastModifiedDate":"2023-10-25"},{"lineNumber":157,"author":{"gitId":"newway1814"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":158,"author":{"gitId":"newway1814"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":159,"author":{"gitId":"jack1e0"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"jack1e0":133,"kiatkat":15,"eyelessrhyme7":2,"newway1814":9}},{"path":"src/main/java/profplan/model/task/Link.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yarnmengnus"},"content":"package profplan.model.task;","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"yarnmengnus"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"yarnmengnus"},"content":"/**","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"jack1e0"},"content":" * Represents a Task\u0027s link in the ProfPlan.","lastModifiedDate":"2023-11-12"},{"lineNumber":7,"author":{"gitId":"kiatkat"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidLink(String)}","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"yarnmengnus"},"content":" */","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"yarnmengnus"},"content":"public class Link {","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"kiatkat"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Links should be a valid URL \"","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"yarnmengnus"},"content":"            + \"and adhere to the following constraint:\\n\"","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"yarnmengnus"},"content":"            + \"The domain name is made up of domain labels \"","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"yarnmengnus"},"content":"            + \"separated by periods.\\n\"","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"yarnmengnus"},"content":"            + \"The domain name must:\\n\"","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"yarnmengnus"},"content":"            + \"    - end with a domain label at least 2 characters long\\n\"","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"eyelessrhyme7"},"content":"            + \"    - have each domain label start and end with alphanumeric characters\\n\";","lastModifiedDate":"2023-11-03"},{"lineNumber":18,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":19,"author":{"gitId":"yarnmengnus"},"content":"    public static final String VALIDATION_REGEX \u003d \"^(http:\\\\/\\\\/www\\\\.|https:\\\\/\\\\/www\\\\.|http:\\\\/\\\\/|https:\\\\/\\\\/)\"","lastModifiedDate":"2023-11-03"},{"lineNumber":20,"author":{"gitId":"yarnmengnus"},"content":"        + \"?[a-z0-9]+([\\\\-\\\\.]{1}[a-z0-9]+)*\\\\.[a-z]{2,5}(:[0-9]{1,5})?(\\\\/.*)?$\";","lastModifiedDate":"2023-11-03"},{"lineNumber":21,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"yarnmengnus"},"content":"    public final String value;","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"yarnmengnus"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"yarnmengnus"},"content":"     * Constructs an {@code Link}.","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"yarnmengnus"},"content":"     *","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"yarnmengnus"},"content":"     * @param url A valid url.","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"yarnmengnus"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"yarnmengnus"},"content":"    public Link(String url) {","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"yarnmengnus"},"content":"        requireNonNull(url);","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"yarnmengnus"},"content":"        value \u003d url;","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"yarnmengnus"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"yarnmengnus"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"yarnmengnus"},"content":"     * Returns if a given string is a valid url.","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"yarnmengnus"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"yarnmengnus"},"content":"    public static boolean isValidLink(String test) {","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"yarnmengnus"},"content":"        return true;","lastModifiedDate":"2023-11-10"},{"lineNumber":39,"author":{"gitId":"yarnmengnus"},"content":"        //return (test.equals(\"-\") || test.matches(VALIDATION_REGEX));","lastModifiedDate":"2023-11-10"},{"lineNumber":40,"author":{"gitId":"yarnmengnus"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"yarnmengnus"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"yarnmengnus"},"content":"    public String toString() {","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"yarnmengnus"},"content":"        return value;","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"yarnmengnus"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":46,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":47,"author":{"gitId":"yarnmengnus"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":48,"author":{"gitId":"yarnmengnus"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-17"},{"lineNumber":49,"author":{"gitId":"yarnmengnus"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-17"},{"lineNumber":50,"author":{"gitId":"yarnmengnus"},"content":"            return true;","lastModifiedDate":"2023-10-17"},{"lineNumber":51,"author":{"gitId":"yarnmengnus"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":52,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":53,"author":{"gitId":"yarnmengnus"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-17"},{"lineNumber":54,"author":{"gitId":"yarnmengnus"},"content":"        if (!(other instanceof Link)) {","lastModifiedDate":"2023-10-17"},{"lineNumber":55,"author":{"gitId":"yarnmengnus"},"content":"            return false;","lastModifiedDate":"2023-10-17"},{"lineNumber":56,"author":{"gitId":"yarnmengnus"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":57,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":58,"author":{"gitId":"yarnmengnus"},"content":"        Link otherLink \u003d (Link) other;","lastModifiedDate":"2023-10-17"},{"lineNumber":59,"author":{"gitId":"yarnmengnus"},"content":"        return value.equals(otherLink.value);","lastModifiedDate":"2023-10-17"},{"lineNumber":60,"author":{"gitId":"yarnmengnus"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":61,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":62,"author":{"gitId":"yarnmengnus"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":63,"author":{"gitId":"yarnmengnus"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-17"},{"lineNumber":64,"author":{"gitId":"yarnmengnus"},"content":"        return value.hashCode();","lastModifiedDate":"2023-10-17"},{"lineNumber":65,"author":{"gitId":"yarnmengnus"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":66,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":67,"author":{"gitId":"yarnmengnus"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"yarnmengnus":62,"jack1e0":1,"kiatkat":2,"eyelessrhyme7":2}},{"path":"src/main/java/profplan/model/task/Name.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"newway1814"},"content":"package profplan.model.task;","lastModifiedDate":"2023-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":5,"author":{"gitId":"kiatkat"},"content":"import profplan.commons.util.AppUtil;","lastModifiedDate":"2023-10-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"eyelessrhyme7"},"content":" * Represents a Task\u0027s name in the task list.","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Name {","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            \"Names should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2018-04-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"jack1e0"},"content":"     * The first character of the name must not be a whitespace,","lastModifiedDate":"2023-11-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public final String fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @param name A valid name.","lastModifiedDate":"2017-05-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public Name(String name) {","lastModifiedDate":"2017-05-30"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"kiatkat"},"content":"        AppUtil.checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        fullName \u003d name;","lastModifiedDate":"2018-08-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2018-04-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (!(other instanceof Name)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Name otherName \u003d (Name) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return fullName.equals(otherName.fullName);","lastModifiedDate":"2023-07-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return fullName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"jack1e0":1,"kiatkat":3,"eyelessrhyme7":1,"-":62,"newway1814":1}},{"path":"src/main/java/profplan/model/task/Priority.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"eyelessrhyme7"},"content":"package profplan.model.task;","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"eyelessrhyme7"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"eyelessrhyme7"},"content":"import profplan.commons.util.AppUtil;","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"eyelessrhyme7"},"content":"/**","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"eyelessrhyme7"},"content":" * Represents a Task\u0027s priority in the task list.","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"eyelessrhyme7"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidPriority(String)}","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"eyelessrhyme7"},"content":" */","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"newway1814"},"content":"public class Priority implements Comparable\u003cPriority\u003e {","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"eyelessrhyme7"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"eyelessrhyme7"},"content":"        \"Priority should only contain numbers between 1-10\";","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"eyelessrhyme7"},"content":"    public static final String VALIDATION_REGEX \u003d \"^(10|[1-9])$\"; //edit later in v1.3 to change tests and data","lastModifiedDate":"2023-11-10"},{"lineNumber":17,"author":{"gitId":"eyelessrhyme7"},"content":"    public final String value;","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"eyelessrhyme7"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"eyelessrhyme7"},"content":"     * Constructs a {@code Priority}.","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"eyelessrhyme7"},"content":"     *","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"eyelessrhyme7"},"content":"     * @param priority A valid priority number.","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"eyelessrhyme7"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"eyelessrhyme7"},"content":"    public Priority(String priority) {","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"eyelessrhyme7"},"content":"        requireNonNull(priority);","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"eyelessrhyme7"},"content":"        AppUtil.checkArgument(isValidPriority(priority), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"eyelessrhyme7"},"content":"        value \u003d priority;","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"eyelessrhyme7"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"eyelessrhyme7"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"eyelessrhyme7"},"content":"     * Returns true if a given string is a valid priority number.","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"eyelessrhyme7"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"eyelessrhyme7"},"content":"    public static boolean isValidPriority(String test) {","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"eyelessrhyme7"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"eyelessrhyme7"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"eyelessrhyme7"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"eyelessrhyme7"},"content":"    public String toString() {","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"eyelessrhyme7"},"content":"        return value;","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"eyelessrhyme7"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"eyelessrhyme7"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"eyelessrhyme7"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"eyelessrhyme7"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"eyelessrhyme7"},"content":"            return true;","lastModifiedDate":"2023-10-17"},{"lineNumber":46,"author":{"gitId":"eyelessrhyme7"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":47,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":48,"author":{"gitId":"eyelessrhyme7"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-17"},{"lineNumber":49,"author":{"gitId":"eyelessrhyme7"},"content":"        if (!(other instanceof Priority)) {","lastModifiedDate":"2023-10-17"},{"lineNumber":50,"author":{"gitId":"eyelessrhyme7"},"content":"            return false;","lastModifiedDate":"2023-10-17"},{"lineNumber":51,"author":{"gitId":"eyelessrhyme7"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":52,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":53,"author":{"gitId":"eyelessrhyme7"},"content":"        Priority otherPriority \u003d (Priority) other;","lastModifiedDate":"2023-10-17"},{"lineNumber":54,"author":{"gitId":"eyelessrhyme7"},"content":"        return value.equals(otherPriority.value);","lastModifiedDate":"2023-10-17"},{"lineNumber":55,"author":{"gitId":"eyelessrhyme7"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":56,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":57,"author":{"gitId":"eyelessrhyme7"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":58,"author":{"gitId":"eyelessrhyme7"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-17"},{"lineNumber":59,"author":{"gitId":"eyelessrhyme7"},"content":"        return value.hashCode();","lastModifiedDate":"2023-10-17"},{"lineNumber":60,"author":{"gitId":"eyelessrhyme7"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":61,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":62,"author":{"gitId":"newway1814"},"content":"    @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":63,"author":{"gitId":"newway1814"},"content":"    public int compareTo(Priority o) {","lastModifiedDate":"2023-10-26"},{"lineNumber":64,"author":{"gitId":"eyelessrhyme7"},"content":"        return (Integer.parseInt(o.value) - Integer.parseInt(this.value));","lastModifiedDate":"2023-10-26"},{"lineNumber":65,"author":{"gitId":"newway1814"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":66,"author":{"gitId":"eyelessrhyme7"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"eyelessrhyme7":62,"newway1814":4}},{"path":"src/main/java/profplan/model/task/Status.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"newway1814"},"content":"package profplan.model.task;","lastModifiedDate":"2023-10-16"},{"lineNumber":2,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":3,"author":{"gitId":"newway1814"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-16"},{"lineNumber":4,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":5,"author":{"gitId":"newway1814"},"content":"import profplan.commons.util.AppUtil;","lastModifiedDate":"2023-10-16"},{"lineNumber":6,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":7,"author":{"gitId":"newway1814"},"content":"/**","lastModifiedDate":"2023-10-16"},{"lineNumber":8,"author":{"gitId":"jack1e0"},"content":" * Represents a Task\u0027s Status in ProfPlan.","lastModifiedDate":"2023-11-12"},{"lineNumber":9,"author":{"gitId":"newway1814"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidStatus(String)}","lastModifiedDate":"2023-10-16"},{"lineNumber":10,"author":{"gitId":"newway1814"},"content":" */","lastModifiedDate":"2023-10-16"},{"lineNumber":11,"author":{"gitId":"newway1814"},"content":"public class Status {","lastModifiedDate":"2023-10-16"},{"lineNumber":12,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"newway1814"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-10-16"},{"lineNumber":14,"author":{"gitId":"newway1814"},"content":"            \"Status should only should only be done or undone\";","lastModifiedDate":"2023-10-16"},{"lineNumber":15,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"newway1814"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\bdone\\\\b|\\\\bundone\\\\b\";","lastModifiedDate":"2023-10-16"},{"lineNumber":17,"author":{"gitId":"newway1814"},"content":"    public static final Status DONE_STATUS \u003d new Status(\"done\");","lastModifiedDate":"2023-10-16"},{"lineNumber":18,"author":{"gitId":"newway1814"},"content":"    public static final Status UNDONE_STATUS \u003d new Status(\"undone\");","lastModifiedDate":"2023-10-16"},{"lineNumber":19,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":20,"author":{"gitId":"newway1814"},"content":"    public final String status;","lastModifiedDate":"2023-10-16"},{"lineNumber":21,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":22,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":23,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":24,"author":{"gitId":"newway1814"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":25,"author":{"gitId":"newway1814"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2023-10-16"},{"lineNumber":26,"author":{"gitId":"newway1814"},"content":"     *","lastModifiedDate":"2023-10-16"},{"lineNumber":27,"author":{"gitId":"newway1814"},"content":"     * @param status A valid status.","lastModifiedDate":"2023-10-16"},{"lineNumber":28,"author":{"gitId":"newway1814"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":29,"author":{"gitId":"newway1814"},"content":"    public Status(String status) {","lastModifiedDate":"2023-10-16"},{"lineNumber":30,"author":{"gitId":"newway1814"},"content":"        requireNonNull(status);","lastModifiedDate":"2023-10-16"},{"lineNumber":31,"author":{"gitId":"newway1814"},"content":"        AppUtil.checkArgument(isValidStatus(status), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-16"},{"lineNumber":32,"author":{"gitId":"newway1814"},"content":"        this.status \u003d status;","lastModifiedDate":"2023-10-16"},{"lineNumber":33,"author":{"gitId":"newway1814"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":34,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":35,"author":{"gitId":"newway1814"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":36,"author":{"gitId":"newway1814"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2023-10-16"},{"lineNumber":37,"author":{"gitId":"newway1814"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":38,"author":{"gitId":"newway1814"},"content":"    public static boolean isValidStatus(String test) {","lastModifiedDate":"2023-10-16"},{"lineNumber":39,"author":{"gitId":"newway1814"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-10-16"},{"lineNumber":40,"author":{"gitId":"newway1814"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":41,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":42,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":43,"author":{"gitId":"newway1814"},"content":"    @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":44,"author":{"gitId":"newway1814"},"content":"    public String toString() {","lastModifiedDate":"2023-10-16"},{"lineNumber":45,"author":{"gitId":"newway1814"},"content":"        return status;","lastModifiedDate":"2023-10-16"},{"lineNumber":46,"author":{"gitId":"newway1814"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":47,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":48,"author":{"gitId":"newway1814"},"content":"    @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":49,"author":{"gitId":"newway1814"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-16"},{"lineNumber":50,"author":{"gitId":"newway1814"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-16"},{"lineNumber":51,"author":{"gitId":"newway1814"},"content":"            return true;","lastModifiedDate":"2023-10-16"},{"lineNumber":52,"author":{"gitId":"newway1814"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":53,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":54,"author":{"gitId":"newway1814"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-16"},{"lineNumber":55,"author":{"gitId":"newway1814"},"content":"        if (!(other instanceof Status)) {","lastModifiedDate":"2023-10-16"},{"lineNumber":56,"author":{"gitId":"newway1814"},"content":"            return false;","lastModifiedDate":"2023-10-16"},{"lineNumber":57,"author":{"gitId":"newway1814"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":58,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":59,"author":{"gitId":"newway1814"},"content":"        Status otherStatus \u003d (Status) other;","lastModifiedDate":"2023-10-16"},{"lineNumber":60,"author":{"gitId":"newway1814"},"content":"        return status.equals(otherStatus.status);","lastModifiedDate":"2023-10-16"},{"lineNumber":61,"author":{"gitId":"newway1814"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":62,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":63,"author":{"gitId":"newway1814"},"content":"    @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":64,"author":{"gitId":"newway1814"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-16"},{"lineNumber":65,"author":{"gitId":"newway1814"},"content":"        return status.hashCode();","lastModifiedDate":"2023-10-16"},{"lineNumber":66,"author":{"gitId":"newway1814"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":67,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":68,"author":{"gitId":"newway1814"},"content":"}","lastModifiedDate":"2023-10-16"}],"authorContributionMap":{"jack1e0":1,"newway1814":67}},{"path":"src/main/java/profplan/model/task/Task.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"newway1814"},"content":"package profplan.model.task;","lastModifiedDate":"2023-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"kiatkat"},"content":"import profplan.commons.util.CollectionUtil;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"kiatkat"},"content":"import profplan.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"kiatkat"},"content":"import profplan.model.ModelManager;","lastModifiedDate":"2023-11-02"},{"lineNumber":11,"author":{"gitId":"kiatkat"},"content":"import profplan.model.tag.Tag;","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"eyelessrhyme7"},"content":" * Represents a Task in the task list.","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"newway1814"},"content":"public class Task implements Comparable\u003cTask\u003e {","lastModifiedDate":"2023-10-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":21,"author":{"gitId":"eyelessrhyme7"},"content":"    private final Priority priority;","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"kiatkat"},"content":"    private final boolean isRecurringTask;","lastModifiedDate":"2023-10-30"},{"lineNumber":23,"author":{"gitId":"kiatkat"},"content":"    private final RecurringType recurringType;","lastModifiedDate":"2023-10-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":26,"author":{"gitId":"yarnmengnus"},"content":"    private final Link link;","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"newway1814"},"content":"    private Status status;","lastModifiedDate":"2023-10-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":29,"author":{"gitId":"kiatkat"},"content":"    private DueDate dueDate;","lastModifiedDate":"2023-10-30"},{"lineNumber":30,"author":{"gitId":"kiatkat"},"content":"    private final Description description;","lastModifiedDate":"2023-10-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"kiatkat"},"content":"    /**","lastModifiedDate":"2023-10-30"},{"lineNumber":33,"author":{"gitId":"kiatkat"},"content":"     * Encapsulates the different types of recurring Tasks.","lastModifiedDate":"2023-10-30"},{"lineNumber":34,"author":{"gitId":"kiatkat"},"content":"     */","lastModifiedDate":"2023-10-30"},{"lineNumber":35,"author":{"gitId":"kiatkat"},"content":"    public enum RecurringType {","lastModifiedDate":"2023-10-30"},{"lineNumber":36,"author":{"gitId":"kiatkat"},"content":"        DAILY(\"Daily\"), WEEKLY(\"Weekly\"), MONTHLY(\"Monthly\"), SEMESTERLY(\"Semesterly\");","lastModifiedDate":"2023-11-02"},{"lineNumber":37,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":38,"author":{"gitId":"kiatkat"},"content":"        private final String name;","lastModifiedDate":"2023-10-30"},{"lineNumber":39,"author":{"gitId":"kiatkat"},"content":"        RecurringType(String name) {","lastModifiedDate":"2023-10-30"},{"lineNumber":40,"author":{"gitId":"kiatkat"},"content":"            this.name \u003d name;","lastModifiedDate":"2023-10-30"},{"lineNumber":41,"author":{"gitId":"kiatkat"},"content":"        }","lastModifiedDate":"2023-10-30"},{"lineNumber":42,"author":{"gitId":"kiatkat"},"content":"        private String getName() {","lastModifiedDate":"2023-10-30"},{"lineNumber":43,"author":{"gitId":"kiatkat"},"content":"            return name;","lastModifiedDate":"2023-10-30"},{"lineNumber":44,"author":{"gitId":"kiatkat"},"content":"        }","lastModifiedDate":"2023-10-30"},{"lineNumber":45,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":46,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"newway1814"},"content":"     * Every field except status must be present and not null.","lastModifiedDate":"2023-10-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"kiatkat"},"content":"    public Task(Name name, Priority priority, boolean isRecurringTask, RecurringType recurringType,","lastModifiedDate":"2023-10-30"},{"lineNumber":51,"author":{"gitId":"kiatkat"},"content":"                Set\u003cTag\u003e tags, DueDate dueDate,","lastModifiedDate":"2023-11-01"},{"lineNumber":52,"author":{"gitId":"kiatkat"},"content":"                Link link, Description description) {","lastModifiedDate":"2023-10-30"},{"lineNumber":53,"author":{"gitId":"kiatkat"},"content":"        CollectionUtil.requireAllNonNull(name, priority, tags, dueDate);","lastModifiedDate":"2023-10-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":55,"author":{"gitId":"eyelessrhyme7"},"content":"        this.priority \u003d priority;","lastModifiedDate":"2023-10-17"},{"lineNumber":56,"author":{"gitId":"kiatkat"},"content":"        this.isRecurringTask \u003d isRecurringTask;","lastModifiedDate":"2023-10-30"},{"lineNumber":57,"author":{"gitId":"kiatkat"},"content":"        this.recurringType \u003d recurringType;","lastModifiedDate":"2023-10-30"},{"lineNumber":58,"author":{"gitId":"newway1814"},"content":"        this.status \u003d Status.UNDONE_STATUS;","lastModifiedDate":"2023-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":60,"author":{"gitId":"eyelessrhyme7"},"content":"        this.dueDate \u003d dueDate;","lastModifiedDate":"2023-10-18"},{"lineNumber":61,"author":{"gitId":"jack1e0"},"content":"        this.link \u003d link;","lastModifiedDate":"2023-10-25"},{"lineNumber":62,"author":{"gitId":"kiatkat"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-10-26"},{"lineNumber":63,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":64,"author":{"gitId":"kiatkat"},"content":"        if (isRecurringTask) {","lastModifiedDate":"2023-10-30"},{"lineNumber":65,"author":{"gitId":"kiatkat"},"content":"            this.tags.add(new Tag(recurringType.getName()));","lastModifiedDate":"2023-10-30"},{"lineNumber":66,"author":{"gitId":"kiatkat"},"content":"        }","lastModifiedDate":"2023-10-30"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"kiatkat"},"content":"     * Every field must be present","lastModifiedDate":"2023-10-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"kiatkat"},"content":"    public Task(Name name, Priority priority, boolean isRecurringTask, RecurringType recurringType,","lastModifiedDate":"2023-10-30"},{"lineNumber":73,"author":{"gitId":"kiatkat"},"content":"                Status status,","lastModifiedDate":"2023-10-30"},{"lineNumber":74,"author":{"gitId":"kiatkat"},"content":"                Set\u003cTag\u003e tags,","lastModifiedDate":"2023-10-30"},{"lineNumber":75,"author":{"gitId":"kiatkat"},"content":"                DueDate dueDate, Link link, Description description) {","lastModifiedDate":"2023-11-01"},{"lineNumber":76,"author":{"gitId":"kiatkat"},"content":"        CollectionUtil.requireAllNonNull(name, priority, tags, dueDate);","lastModifiedDate":"2023-10-26"},{"lineNumber":77,"author":{"gitId":"yarnmengnus"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-10-17"},{"lineNumber":78,"author":{"gitId":"eyelessrhyme7"},"content":"        this.priority \u003d priority;","lastModifiedDate":"2023-10-18"},{"lineNumber":79,"author":{"gitId":"kiatkat"},"content":"        this.isRecurringTask \u003d isRecurringTask;","lastModifiedDate":"2023-10-30"},{"lineNumber":80,"author":{"gitId":"kiatkat"},"content":"        this.recurringType \u003d recurringType;","lastModifiedDate":"2023-10-30"},{"lineNumber":81,"author":{"gitId":"newway1814"},"content":"        this.status \u003d status;","lastModifiedDate":"2023-10-16"},{"lineNumber":82,"author":{"gitId":"yarnmengnus"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2023-10-17"},{"lineNumber":83,"author":{"gitId":"jack1e0"},"content":"        this.dueDate \u003d dueDate;","lastModifiedDate":"2023-10-17"},{"lineNumber":84,"author":{"gitId":"yarnmengnus"},"content":"        this.link \u003d link;","lastModifiedDate":"2023-10-17"},{"lineNumber":85,"author":{"gitId":"kiatkat"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-10-26"},{"lineNumber":86,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":87,"author":{"gitId":"kiatkat"},"content":"        if (isRecurringTask) {","lastModifiedDate":"2023-10-30"},{"lineNumber":88,"author":{"gitId":"kiatkat"},"content":"            this.tags.add(new Tag(recurringType.getName()));","lastModifiedDate":"2023-10-30"},{"lineNumber":89,"author":{"gitId":"kiatkat"},"content":"        }","lastModifiedDate":"2023-10-30"},{"lineNumber":90,"author":{"gitId":"yarnmengnus"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":91,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":92,"author":{"gitId":"yarnmengnus"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":93,"author":{"gitId":"kiatkat"},"content":"     * Overloaded constructor to create a Task given another Task","lastModifiedDate":"2023-10-17"},{"lineNumber":94,"author":{"gitId":"kiatkat"},"content":"     * @param task The task to copy from.","lastModifiedDate":"2023-10-17"},{"lineNumber":95,"author":{"gitId":"yarnmengnus"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":96,"author":{"gitId":"kiatkat"},"content":"    public Task(Task task) {","lastModifiedDate":"2023-10-17"},{"lineNumber":97,"author":{"gitId":"kiatkat"},"content":"        this.name \u003d task.name;","lastModifiedDate":"2023-10-17"},{"lineNumber":98,"author":{"gitId":"eyelessrhyme7"},"content":"        this.priority \u003d task.priority;","lastModifiedDate":"2023-10-18"},{"lineNumber":99,"author":{"gitId":"kiatkat"},"content":"        this.isRecurringTask \u003d task.isRecurringTask;","lastModifiedDate":"2023-10-30"},{"lineNumber":100,"author":{"gitId":"kiatkat"},"content":"        this.recurringType \u003d task.recurringType;","lastModifiedDate":"2023-10-30"},{"lineNumber":101,"author":{"gitId":"kiatkat"},"content":"        this.tags.addAll(task.getTags());","lastModifiedDate":"2023-10-17"},{"lineNumber":102,"author":{"gitId":"eyelessrhyme7"},"content":"        this.status \u003d task.status;","lastModifiedDate":"2023-10-18"},{"lineNumber":103,"author":{"gitId":"eyelessrhyme7"},"content":"        this.dueDate \u003d task.dueDate;","lastModifiedDate":"2023-10-18"},{"lineNumber":104,"author":{"gitId":"jack1e0"},"content":"        this.link \u003d task.link;","lastModifiedDate":"2023-10-25"},{"lineNumber":105,"author":{"gitId":"kiatkat"},"content":"        this.description \u003d task.description;","lastModifiedDate":"2023-10-26"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":112,"author":{"gitId":"eyelessrhyme7"},"content":"    public Priority getPriority() {","lastModifiedDate":"2023-10-17"},{"lineNumber":113,"author":{"gitId":"eyelessrhyme7"},"content":"        return priority;","lastModifiedDate":"2023-10-17"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":116,"author":{"gitId":"kiatkat"},"content":"    public boolean getIsRecurring() {","lastModifiedDate":"2023-10-30"},{"lineNumber":117,"author":{"gitId":"kiatkat"},"content":"        return isRecurringTask;","lastModifiedDate":"2023-10-30"},{"lineNumber":118,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":119,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":120,"author":{"gitId":"kiatkat"},"content":"    public RecurringType getRecurringType() {","lastModifiedDate":"2023-10-30"},{"lineNumber":121,"author":{"gitId":"kiatkat"},"content":"        return recurringType;","lastModifiedDate":"2023-10-30"},{"lineNumber":122,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":123,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":124,"author":{"gitId":"yarnmengnus"},"content":"    public Link getLink() {","lastModifiedDate":"2023-10-17"},{"lineNumber":125,"author":{"gitId":"yarnmengnus"},"content":"        return link;","lastModifiedDate":"2023-10-17"},{"lineNumber":126,"author":{"gitId":"yarnmengnus"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":127,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":128,"author":{"gitId":"jack1e0"},"content":"    public DueDate getDueDate() {","lastModifiedDate":"2023-10-17"},{"lineNumber":129,"author":{"gitId":"jack1e0"},"content":"        return dueDate;","lastModifiedDate":"2023-10-17"},{"lineNumber":130,"author":{"gitId":"eyelessrhyme7"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":131,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":132,"author":{"gitId":"newway1814"},"content":"    public Status getStatus() {","lastModifiedDate":"2023-10-16"},{"lineNumber":133,"author":{"gitId":"newway1814"},"content":"        return status;","lastModifiedDate":"2023-10-16"},{"lineNumber":134,"author":{"gitId":"newway1814"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":135,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":136,"author":{"gitId":"jack1e0"},"content":"    public void setStatus(Status status) throws IllegalArgumentException {","lastModifiedDate":"2023-11-12"},{"lineNumber":137,"author":{"gitId":"kiatkat"},"content":"        if (status \u003d\u003d Status.DONE_STATUS \u0026\u0026 this.isRecurringTask) {","lastModifiedDate":"2023-10-30"},{"lineNumber":138,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":139,"author":{"gitId":"kiatkat"},"content":"            switch (recurringType) {","lastModifiedDate":"2023-10-30"},{"lineNumber":140,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":141,"author":{"gitId":"kiatkat"},"content":"            case DAILY:","lastModifiedDate":"2023-10-30"},{"lineNumber":142,"author":{"gitId":"jack1e0"},"content":"                dueDate \u003d dueDate.addDays(1);","lastModifiedDate":"2023-11-12"},{"lineNumber":143,"author":{"gitId":"kiatkat"},"content":"                break;","lastModifiedDate":"2023-10-30"},{"lineNumber":144,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":145,"author":{"gitId":"kiatkat"},"content":"            case WEEKLY:","lastModifiedDate":"2023-10-30"},{"lineNumber":146,"author":{"gitId":"jack1e0"},"content":"                dueDate \u003d dueDate.addDays(7);","lastModifiedDate":"2023-11-12"},{"lineNumber":147,"author":{"gitId":"kiatkat"},"content":"                break;","lastModifiedDate":"2023-10-30"},{"lineNumber":148,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":149,"author":{"gitId":"kiatkat"},"content":"            case MONTHLY:","lastModifiedDate":"2023-10-30"},{"lineNumber":150,"author":{"gitId":"jack1e0"},"content":"                dueDate \u003d dueDate.addMonth();","lastModifiedDate":"2023-11-12"},{"lineNumber":151,"author":{"gitId":"kiatkat"},"content":"                break;","lastModifiedDate":"2023-10-30"},{"lineNumber":152,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":153,"author":{"gitId":"kiatkat"},"content":"            case SEMESTERLY:","lastModifiedDate":"2023-11-02"},{"lineNumber":154,"author":{"gitId":"jack1e0"},"content":"                dueDate \u003d dueDate.addDays(ModelManager.getSettings().getSemesterDays());","lastModifiedDate":"2023-11-12"},{"lineNumber":155,"author":{"gitId":"kiatkat"},"content":"                break;","lastModifiedDate":"2023-11-02"},{"lineNumber":156,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":157,"author":{"gitId":"kiatkat"},"content":"            default:","lastModifiedDate":"2023-10-30"},{"lineNumber":158,"author":{"gitId":"kiatkat"},"content":"                throw new RuntimeException(\"Execution should not reach this point.\");","lastModifiedDate":"2023-10-30"},{"lineNumber":159,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":160,"author":{"gitId":"kiatkat"},"content":"            }","lastModifiedDate":"2023-10-30"},{"lineNumber":161,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":162,"author":{"gitId":"kiatkat"},"content":"        } else {","lastModifiedDate":"2023-10-30"},{"lineNumber":163,"author":{"gitId":"newway1814"},"content":"            this.status \u003d status;","lastModifiedDate":"2023-10-16"},{"lineNumber":164,"author":{"gitId":"jack1e0"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":165,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":166,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":168,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2017-03-07"},{"lineNumber":169,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":170,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":175,"author":{"gitId":"kiatkat"},"content":"    public Description getDescription() {","lastModifiedDate":"2023-10-26"},{"lineNumber":176,"author":{"gitId":"kiatkat"},"content":"        return description;","lastModifiedDate":"2023-10-26"},{"lineNumber":177,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":178,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":180,"author":{"gitId":"newway1814"},"content":"     * Returns true if both tasks have the same name.","lastModifiedDate":"2023-10-16"},{"lineNumber":181,"author":{"gitId":"newway1814"},"content":"     * This defines a weaker notion of equality between two tasks.","lastModifiedDate":"2023-10-16"},{"lineNumber":182,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":183,"author":{"gitId":"newway1814"},"content":"    public boolean isSameTask(Task otherTask) {","lastModifiedDate":"2023-10-16"},{"lineNumber":184,"author":{"gitId":"newway1814"},"content":"        if (otherTask \u003d\u003d this) {","lastModifiedDate":"2023-10-16"},{"lineNumber":185,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":188,"author":{"gitId":"newway1814"},"content":"        return otherTask !\u003d null","lastModifiedDate":"2023-10-16"},{"lineNumber":189,"author":{"gitId":"newway1814"},"content":"                \u0026\u0026 otherTask.getName().equals(getName());","lastModifiedDate":"2023-10-16"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":193,"author":{"gitId":"newway1814"},"content":"     * Returns true if both tasks have the same identity and data fields.","lastModifiedDate":"2023-10-16"},{"lineNumber":194,"author":{"gitId":"newway1814"},"content":"     * This defines a stronger notion of equality between two tasks.","lastModifiedDate":"2023-10-16"},{"lineNumber":195,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":199,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":203,"author":{"gitId":"newway1814"},"content":"        if (!(other instanceof Task)) {","lastModifiedDate":"2023-10-16"},{"lineNumber":204,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":207,"author":{"gitId":"newway1814"},"content":"        Task otherTask \u003d (Task) other;","lastModifiedDate":"2023-10-16"},{"lineNumber":208,"author":{"gitId":"newway1814"},"content":"        return name.equals(otherTask.name)","lastModifiedDate":"2023-10-16"},{"lineNumber":209,"author":{"gitId":"eyelessrhyme7"},"content":"                \u0026\u0026 priority.equals(otherTask.priority)","lastModifiedDate":"2023-10-17"},{"lineNumber":210,"author":{"gitId":"yarnmengnus"},"content":"                \u0026\u0026 tags.equals(otherTask.tags)","lastModifiedDate":"2023-10-17"},{"lineNumber":211,"author":{"gitId":"newway1814"},"content":"                \u0026\u0026 dueDate.equals(otherTask.dueDate)","lastModifiedDate":"2023-10-17"},{"lineNumber":212,"author":{"gitId":"jack1e0"},"content":"                \u0026\u0026 status.equals(otherTask.status)","lastModifiedDate":"2023-10-25"},{"lineNumber":213,"author":{"gitId":"kiatkat"},"content":"                \u0026\u0026 link.equals(otherTask.link)","lastModifiedDate":"2023-10-26"},{"lineNumber":214,"author":{"gitId":"kiatkat"},"content":"                \u0026\u0026 description.equals(otherTask.description);","lastModifiedDate":"2023-10-26"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":220,"author":{"gitId":"kiatkat"},"content":"        return Objects.hash(name, priority, status, tags, dueDate, link, description);","lastModifiedDate":"2023-10-29"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"                .add(\"name\", name)","lastModifiedDate":"2019-02-23"},{"lineNumber":227,"author":{"gitId":"eyelessrhyme7"},"content":"                .add(\"priority\", priority)","lastModifiedDate":"2023-10-17"},{"lineNumber":228,"author":{"gitId":"newway1814"},"content":"                .add(\"status\", status)","lastModifiedDate":"2023-10-16"},{"lineNumber":229,"author":{"gitId":"-"},"content":"                .add(\"tags\", tags)","lastModifiedDate":"2019-02-23"},{"lineNumber":230,"author":{"gitId":"jack1e0"},"content":"                .add(\"dueDate\", dueDate)","lastModifiedDate":"2023-10-17"},{"lineNumber":231,"author":{"gitId":"yarnmengnus"},"content":"                .add(\"link\", link)","lastModifiedDate":"2023-10-17"},{"lineNumber":232,"author":{"gitId":"kiatkat"},"content":"                .add(\"description\", description)","lastModifiedDate":"2023-10-26"},{"lineNumber":233,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":236,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":237,"author":{"gitId":"eyelessrhyme7"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":238,"author":{"gitId":"eyelessrhyme7"},"content":"     * Returns a beautified string representation of the task.","lastModifiedDate":"2023-10-26"},{"lineNumber":239,"author":{"gitId":"eyelessrhyme7"},"content":"     * @return  a string representation of the task with name, priority and dueDate.","lastModifiedDate":"2023-10-26"},{"lineNumber":240,"author":{"gitId":"eyelessrhyme7"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":241,"author":{"gitId":"eyelessrhyme7"},"content":"    public String beautifyString() {","lastModifiedDate":"2023-10-26"},{"lineNumber":242,"author":{"gitId":"eyelessrhyme7"},"content":"        return this.getName().toString() + \", Priority: \" + this.getPriority().toString()","lastModifiedDate":"2023-10-26"},{"lineNumber":243,"author":{"gitId":"eyelessrhyme7"},"content":"                + \", DueDate: \" + this.getDueDate().toString();","lastModifiedDate":"2023-10-26"},{"lineNumber":244,"author":{"gitId":"eyelessrhyme7"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":245,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":246,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":247,"author":{"gitId":"newway1814"},"content":"    @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":248,"author":{"gitId":"newway1814"},"content":"    public int compareTo(Task o) {","lastModifiedDate":"2023-10-25"},{"lineNumber":249,"author":{"gitId":"newway1814"},"content":"        return this.dueDate.compareTo(o.dueDate);","lastModifiedDate":"2023-10-25"},{"lineNumber":250,"author":{"gitId":"newway1814"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":251,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":252,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"yarnmengnus":14,"jack1e0":14,"kiatkat":94,"eyelessrhyme7":25,"-":76,"newway1814":29}},{"path":"src/main/java/profplan/model/task/UniqueTaskList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"newway1814"},"content":"package profplan.model.task;","lastModifiedDate":"2023-10-16"},{"lineNumber":2,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":3,"author":{"gitId":"newway1814"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-16"},{"lineNumber":4,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":5,"author":{"gitId":"newway1814"},"content":"import java.util.Iterator;","lastModifiedDate":"2023-10-16"},{"lineNumber":6,"author":{"gitId":"newway1814"},"content":"import java.util.List;","lastModifiedDate":"2023-10-16"},{"lineNumber":7,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":8,"author":{"gitId":"newway1814"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-10-16"},{"lineNumber":9,"author":{"gitId":"newway1814"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-10-16"},{"lineNumber":10,"author":{"gitId":"newway1814"},"content":"import profplan.commons.util.CollectionUtil;","lastModifiedDate":"2023-10-16"},{"lineNumber":11,"author":{"gitId":"newway1814"},"content":"import profplan.model.task.exceptions.DuplicateTaskException;","lastModifiedDate":"2023-10-16"},{"lineNumber":12,"author":{"gitId":"newway1814"},"content":"import profplan.model.task.exceptions.TaskNotFoundException;","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":14,"author":{"gitId":"newway1814"},"content":"/**","lastModifiedDate":"2023-10-16"},{"lineNumber":15,"author":{"gitId":"newway1814"},"content":" * A list of tasks that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"newway1814"},"content":" * A task is considered unique by comparing using {@code Task#isSameTask(Task)}. As such, adding and updating of","lastModifiedDate":"2023-10-16"},{"lineNumber":17,"author":{"gitId":"newway1814"},"content":" * tasks uses Task#isSameTask(Task) for equality so as to ensure that the task being added or updated is","lastModifiedDate":"2023-10-16"},{"lineNumber":18,"author":{"gitId":"newway1814"},"content":" * unique in terms of identity in the UniqueTaskList. However, the removal of a task uses Task#equals(Object) so","lastModifiedDate":"2023-10-16"},{"lineNumber":19,"author":{"gitId":"newway1814"},"content":" * as to ensure that the task with exactly the same fields will be removed.","lastModifiedDate":"2023-10-16"},{"lineNumber":20,"author":{"gitId":"newway1814"},"content":" *","lastModifiedDate":"2023-10-16"},{"lineNumber":21,"author":{"gitId":"newway1814"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2023-10-16"},{"lineNumber":22,"author":{"gitId":"newway1814"},"content":" *","lastModifiedDate":"2023-10-16"},{"lineNumber":23,"author":{"gitId":"newway1814"},"content":" * @see Task#isSameTask(Task)","lastModifiedDate":"2023-10-16"},{"lineNumber":24,"author":{"gitId":"newway1814"},"content":" */","lastModifiedDate":"2023-10-16"},{"lineNumber":25,"author":{"gitId":"newway1814"},"content":"public class UniqueTaskList implements Iterable\u003cTask\u003e {","lastModifiedDate":"2023-10-16"},{"lineNumber":26,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":27,"author":{"gitId":"newway1814"},"content":"    private final ObservableList\u003cTask\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-10-16"},{"lineNumber":28,"author":{"gitId":"newway1814"},"content":"    private final ObservableList\u003cTask\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2023-10-16"},{"lineNumber":29,"author":{"gitId":"newway1814"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2023-10-16"},{"lineNumber":30,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":31,"author":{"gitId":"newway1814"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":32,"author":{"gitId":"newway1814"},"content":"     * Returns true if the list contains an equivalent task as the given argument.","lastModifiedDate":"2023-10-16"},{"lineNumber":33,"author":{"gitId":"newway1814"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":34,"author":{"gitId":"newway1814"},"content":"    public boolean contains(Task toCheck) {","lastModifiedDate":"2023-10-16"},{"lineNumber":35,"author":{"gitId":"newway1814"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2023-10-16"},{"lineNumber":36,"author":{"gitId":"newway1814"},"content":"        return internalList.stream().anyMatch(toCheck::isSameTask);","lastModifiedDate":"2023-10-16"},{"lineNumber":37,"author":{"gitId":"newway1814"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":38,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":39,"author":{"gitId":"newway1814"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":40,"author":{"gitId":"newway1814"},"content":"     * Adds a task to the list.","lastModifiedDate":"2023-10-16"},{"lineNumber":41,"author":{"gitId":"newway1814"},"content":"     * The task must not already exist in the list.","lastModifiedDate":"2023-10-16"},{"lineNumber":42,"author":{"gitId":"newway1814"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":43,"author":{"gitId":"newway1814"},"content":"    public void add(Task toAdd) {","lastModifiedDate":"2023-10-16"},{"lineNumber":44,"author":{"gitId":"newway1814"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2023-10-16"},{"lineNumber":45,"author":{"gitId":"newway1814"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2023-10-16"},{"lineNumber":46,"author":{"gitId":"newway1814"},"content":"            throw new DuplicateTaskException();","lastModifiedDate":"2023-10-16"},{"lineNumber":47,"author":{"gitId":"newway1814"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":48,"author":{"gitId":"newway1814"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2023-10-16"},{"lineNumber":49,"author":{"gitId":"newway1814"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":50,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":51,"author":{"gitId":"newway1814"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":52,"author":{"gitId":"newway1814"},"content":"     * Marks the task at given index as done","lastModifiedDate":"2023-10-16"},{"lineNumber":53,"author":{"gitId":"newway1814"},"content":"     * The index must be in range.","lastModifiedDate":"2023-10-16"},{"lineNumber":54,"author":{"gitId":"newway1814"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":55,"author":{"gitId":"newway1814"},"content":"    public void mark(int index) {","lastModifiedDate":"2023-10-16"},{"lineNumber":56,"author":{"gitId":"newway1814"},"content":"        if (index \u003e internalList.size()) {","lastModifiedDate":"2023-10-16"},{"lineNumber":57,"author":{"gitId":"newway1814"},"content":"            throw new TaskNotFoundException();","lastModifiedDate":"2023-10-16"},{"lineNumber":58,"author":{"gitId":"newway1814"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":59,"author":{"gitId":"newway1814"},"content":"        internalList.get(index).setStatus(Status.DONE_STATUS);","lastModifiedDate":"2023-10-16"},{"lineNumber":60,"author":{"gitId":"newway1814"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":61,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":62,"author":{"gitId":"newway1814"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":63,"author":{"gitId":"newway1814"},"content":"     * Marks the task at given index as undone","lastModifiedDate":"2023-10-17"},{"lineNumber":64,"author":{"gitId":"newway1814"},"content":"     * The index must be in range.","lastModifiedDate":"2023-10-17"},{"lineNumber":65,"author":{"gitId":"newway1814"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":66,"author":{"gitId":"newway1814"},"content":"    public void unmark(int index) {","lastModifiedDate":"2023-10-17"},{"lineNumber":67,"author":{"gitId":"newway1814"},"content":"        if (index \u003e internalList.size()) {","lastModifiedDate":"2023-10-17"},{"lineNumber":68,"author":{"gitId":"newway1814"},"content":"            throw new TaskNotFoundException();","lastModifiedDate":"2023-10-17"},{"lineNumber":69,"author":{"gitId":"newway1814"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":70,"author":{"gitId":"newway1814"},"content":"        internalList.get(index).setStatus(Status.UNDONE_STATUS);","lastModifiedDate":"2023-10-17"},{"lineNumber":71,"author":{"gitId":"newway1814"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":72,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":73,"author":{"gitId":"newway1814"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":74,"author":{"gitId":"newway1814"},"content":"     * Replaces the task {@code target} in the list with {@code editedTask}.","lastModifiedDate":"2023-10-16"},{"lineNumber":75,"author":{"gitId":"newway1814"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2023-10-16"},{"lineNumber":76,"author":{"gitId":"newway1814"},"content":"     * The task identity of {@code editedTask} must not be the same as another existing task in the list.","lastModifiedDate":"2023-10-16"},{"lineNumber":77,"author":{"gitId":"newway1814"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":78,"author":{"gitId":"newway1814"},"content":"    public void setTask(Task target, Task editedTask) {","lastModifiedDate":"2023-10-16"},{"lineNumber":79,"author":{"gitId":"newway1814"},"content":"        CollectionUtil.requireAllNonNull(target, editedTask);","lastModifiedDate":"2023-10-16"},{"lineNumber":80,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":81,"author":{"gitId":"newway1814"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2023-10-16"},{"lineNumber":82,"author":{"gitId":"newway1814"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2023-10-16"},{"lineNumber":83,"author":{"gitId":"newway1814"},"content":"            throw new TaskNotFoundException();","lastModifiedDate":"2023-10-16"},{"lineNumber":84,"author":{"gitId":"newway1814"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":85,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":86,"author":{"gitId":"newway1814"},"content":"        if (!target.isSameTask(editedTask) \u0026\u0026 contains(editedTask)) {","lastModifiedDate":"2023-10-16"},{"lineNumber":87,"author":{"gitId":"newway1814"},"content":"            throw new DuplicateTaskException();","lastModifiedDate":"2023-10-16"},{"lineNumber":88,"author":{"gitId":"newway1814"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":89,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":90,"author":{"gitId":"newway1814"},"content":"        internalList.set(index, editedTask);","lastModifiedDate":"2023-10-16"},{"lineNumber":91,"author":{"gitId":"newway1814"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":92,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":93,"author":{"gitId":"newway1814"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":94,"author":{"gitId":"newway1814"},"content":"     * Removes the equivalent task from the list.","lastModifiedDate":"2023-10-16"},{"lineNumber":95,"author":{"gitId":"newway1814"},"content":"     * The task must exist in the list.","lastModifiedDate":"2023-10-16"},{"lineNumber":96,"author":{"gitId":"newway1814"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":97,"author":{"gitId":"newway1814"},"content":"    public void remove(Task toRemove) {","lastModifiedDate":"2023-10-16"},{"lineNumber":98,"author":{"gitId":"newway1814"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2023-10-16"},{"lineNumber":99,"author":{"gitId":"newway1814"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2023-10-16"},{"lineNumber":100,"author":{"gitId":"newway1814"},"content":"            throw new TaskNotFoundException();","lastModifiedDate":"2023-10-16"},{"lineNumber":101,"author":{"gitId":"newway1814"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":102,"author":{"gitId":"newway1814"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":103,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":104,"author":{"gitId":"newway1814"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":105,"author":{"gitId":"newway1814"},"content":"     * removes all the tasks present in the list.","lastModifiedDate":"2023-10-17"},{"lineNumber":106,"author":{"gitId":"newway1814"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":107,"author":{"gitId":"newway1814"},"content":"    public void remove() {","lastModifiedDate":"2023-10-17"},{"lineNumber":108,"author":{"gitId":"newway1814"},"content":"        if (internalList.size() !\u003d 0) {","lastModifiedDate":"2023-10-17"},{"lineNumber":109,"author":{"gitId":"newway1814"},"content":"            internalList.clear();","lastModifiedDate":"2023-10-17"},{"lineNumber":110,"author":{"gitId":"newway1814"},"content":"        } else {","lastModifiedDate":"2023-10-17"},{"lineNumber":111,"author":{"gitId":"newway1814"},"content":"            throw new TaskNotFoundException();","lastModifiedDate":"2023-10-17"},{"lineNumber":112,"author":{"gitId":"newway1814"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":113,"author":{"gitId":"newway1814"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":114,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":115,"author":{"gitId":"newway1814"},"content":"    public void setTasks(UniqueTaskList replacement) {","lastModifiedDate":"2023-10-16"},{"lineNumber":116,"author":{"gitId":"newway1814"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2023-10-16"},{"lineNumber":117,"author":{"gitId":"newway1814"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2023-10-16"},{"lineNumber":118,"author":{"gitId":"newway1814"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":119,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":120,"author":{"gitId":"newway1814"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":121,"author":{"gitId":"newway1814"},"content":"     * Replaces the contents of this list with {@code tasks}.","lastModifiedDate":"2023-10-16"},{"lineNumber":122,"author":{"gitId":"newway1814"},"content":"     * {@code tasks} must not contain duplicate tasks.","lastModifiedDate":"2023-10-16"},{"lineNumber":123,"author":{"gitId":"newway1814"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":124,"author":{"gitId":"newway1814"},"content":"    public void setTasks(List\u003cTask\u003e tasks) {","lastModifiedDate":"2023-10-16"},{"lineNumber":125,"author":{"gitId":"newway1814"},"content":"        CollectionUtil.requireAllNonNull(tasks);","lastModifiedDate":"2023-10-16"},{"lineNumber":126,"author":{"gitId":"newway1814"},"content":"        if (!tasksAreUnique(tasks)) {","lastModifiedDate":"2023-10-16"},{"lineNumber":127,"author":{"gitId":"newway1814"},"content":"            throw new DuplicateTaskException();","lastModifiedDate":"2023-10-16"},{"lineNumber":128,"author":{"gitId":"newway1814"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":129,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":130,"author":{"gitId":"newway1814"},"content":"        internalList.setAll(tasks);","lastModifiedDate":"2023-10-16"},{"lineNumber":131,"author":{"gitId":"newway1814"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":132,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":133,"author":{"gitId":"newway1814"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":134,"author":{"gitId":"newway1814"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2023-10-16"},{"lineNumber":135,"author":{"gitId":"newway1814"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":136,"author":{"gitId":"newway1814"},"content":"    public ObservableList\u003cTask\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2023-10-16"},{"lineNumber":137,"author":{"gitId":"newway1814"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2023-10-16"},{"lineNumber":138,"author":{"gitId":"newway1814"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":139,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":140,"author":{"gitId":"newway1814"},"content":"    public ObservableList\u003cTask\u003e getInternalList() {","lastModifiedDate":"2023-10-26"},{"lineNumber":141,"author":{"gitId":"newway1814"},"content":"        return internalList;","lastModifiedDate":"2023-10-26"},{"lineNumber":142,"author":{"gitId":"newway1814"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":143,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":144,"author":{"gitId":"newway1814"},"content":"    @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":145,"author":{"gitId":"newway1814"},"content":"    public Iterator\u003cTask\u003e iterator() {","lastModifiedDate":"2023-10-16"},{"lineNumber":146,"author":{"gitId":"newway1814"},"content":"        return internalList.iterator();","lastModifiedDate":"2023-10-16"},{"lineNumber":147,"author":{"gitId":"newway1814"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":148,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":149,"author":{"gitId":"newway1814"},"content":"    @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":150,"author":{"gitId":"newway1814"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-16"},{"lineNumber":151,"author":{"gitId":"newway1814"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-16"},{"lineNumber":152,"author":{"gitId":"newway1814"},"content":"            return true;","lastModifiedDate":"2023-10-16"},{"lineNumber":153,"author":{"gitId":"newway1814"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":154,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":155,"author":{"gitId":"newway1814"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-16"},{"lineNumber":156,"author":{"gitId":"newway1814"},"content":"        if (!(other instanceof UniqueTaskList)) {","lastModifiedDate":"2023-10-16"},{"lineNumber":157,"author":{"gitId":"newway1814"},"content":"            return false;","lastModifiedDate":"2023-10-16"},{"lineNumber":158,"author":{"gitId":"newway1814"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":159,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":160,"author":{"gitId":"newway1814"},"content":"        UniqueTaskList otherUniqueTaskList \u003d (UniqueTaskList) other;","lastModifiedDate":"2023-10-16"},{"lineNumber":161,"author":{"gitId":"newway1814"},"content":"        return internalList.equals(otherUniqueTaskList.internalList);","lastModifiedDate":"2023-10-16"},{"lineNumber":162,"author":{"gitId":"newway1814"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":163,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":164,"author":{"gitId":"newway1814"},"content":"    @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":165,"author":{"gitId":"newway1814"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-16"},{"lineNumber":166,"author":{"gitId":"newway1814"},"content":"        return internalList.hashCode();","lastModifiedDate":"2023-10-16"},{"lineNumber":167,"author":{"gitId":"newway1814"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":168,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":169,"author":{"gitId":"newway1814"},"content":"    @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":170,"author":{"gitId":"newway1814"},"content":"    public String toString() {","lastModifiedDate":"2023-10-16"},{"lineNumber":171,"author":{"gitId":"newway1814"},"content":"        return internalList.toString();","lastModifiedDate":"2023-10-16"},{"lineNumber":172,"author":{"gitId":"newway1814"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":173,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":174,"author":{"gitId":"newway1814"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":175,"author":{"gitId":"newway1814"},"content":"     * Returns true if {@code tasks} contains only unique tasks.","lastModifiedDate":"2023-10-16"},{"lineNumber":176,"author":{"gitId":"newway1814"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":177,"author":{"gitId":"newway1814"},"content":"    private boolean tasksAreUnique(List\u003cTask\u003e tasks) {","lastModifiedDate":"2023-10-16"},{"lineNumber":178,"author":{"gitId":"newway1814"},"content":"        for (int i \u003d 0; i \u003c tasks.size() - 1; i++) {","lastModifiedDate":"2023-10-16"},{"lineNumber":179,"author":{"gitId":"newway1814"},"content":"            for (int j \u003d i + 1; j \u003c tasks.size(); j++) {","lastModifiedDate":"2023-10-16"},{"lineNumber":180,"author":{"gitId":"newway1814"},"content":"                if (tasks.get(i).isSameTask(tasks.get(j))) {","lastModifiedDate":"2023-10-16"},{"lineNumber":181,"author":{"gitId":"newway1814"},"content":"                    return false;","lastModifiedDate":"2023-10-16"},{"lineNumber":182,"author":{"gitId":"newway1814"},"content":"                }","lastModifiedDate":"2023-10-16"},{"lineNumber":183,"author":{"gitId":"newway1814"},"content":"            }","lastModifiedDate":"2023-10-16"},{"lineNumber":184,"author":{"gitId":"newway1814"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":185,"author":{"gitId":"newway1814"},"content":"        return true;","lastModifiedDate":"2023-10-16"},{"lineNumber":186,"author":{"gitId":"newway1814"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":187,"author":{"gitId":"newway1814"},"content":"}","lastModifiedDate":"2023-10-16"}],"authorContributionMap":{"newway1814":187}},{"path":"src/main/java/profplan/model/task/exceptions/DuplicateTaskException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"newway1814"},"content":"package profplan.model.task.exceptions;","lastModifiedDate":"2023-10-16"},{"lineNumber":2,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":3,"author":{"gitId":"newway1814"},"content":"/**","lastModifiedDate":"2023-10-16"},{"lineNumber":4,"author":{"gitId":"newway1814"},"content":" * Signals that the operation will result in duplicate Tasks (Tasks are considered duplicates if they have the same","lastModifiedDate":"2023-10-16"},{"lineNumber":5,"author":{"gitId":"newway1814"},"content":" * identity).","lastModifiedDate":"2023-10-16"},{"lineNumber":6,"author":{"gitId":"newway1814"},"content":" */","lastModifiedDate":"2023-10-16"},{"lineNumber":7,"author":{"gitId":"newway1814"},"content":"public class DuplicateTaskException extends RuntimeException {","lastModifiedDate":"2023-10-16"},{"lineNumber":8,"author":{"gitId":"newway1814"},"content":"    public DuplicateTaskException() {","lastModifiedDate":"2023-10-16"},{"lineNumber":9,"author":{"gitId":"newway1814"},"content":"        super(\"Operation would result in duplicate tasks\");","lastModifiedDate":"2023-10-16"},{"lineNumber":10,"author":{"gitId":"newway1814"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":11,"author":{"gitId":"newway1814"},"content":"}","lastModifiedDate":"2023-10-16"}],"authorContributionMap":{"newway1814":11}},{"path":"src/main/java/profplan/model/task/exceptions/TaskNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"newway1814"},"content":"package profplan.model.task.exceptions;","lastModifiedDate":"2023-10-16"},{"lineNumber":2,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":3,"author":{"gitId":"newway1814"},"content":"/**","lastModifiedDate":"2023-10-16"},{"lineNumber":4,"author":{"gitId":"newway1814"},"content":" * Signals that the operation is unable to find the specified task.","lastModifiedDate":"2023-10-16"},{"lineNumber":5,"author":{"gitId":"newway1814"},"content":" */","lastModifiedDate":"2023-10-16"},{"lineNumber":6,"author":{"gitId":"newway1814"},"content":"public class TaskNotFoundException extends RuntimeException {}","lastModifiedDate":"2023-10-16"}],"authorContributionMap":{"newway1814":6}},{"path":"src/main/java/profplan/model/task/predicates/CombinedPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jack1e0"},"content":"package profplan.model.task.predicates;","lastModifiedDate":"2023-10-29"},{"lineNumber":2,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":3,"author":{"gitId":"jack1e0"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-29"},{"lineNumber":4,"author":{"gitId":"jack1e0"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-29"},{"lineNumber":5,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":6,"author":{"gitId":"jack1e0"},"content":"import profplan.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-29"},{"lineNumber":7,"author":{"gitId":"jack1e0"},"content":"import profplan.model.task.Task;","lastModifiedDate":"2023-10-29"},{"lineNumber":8,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":9,"author":{"gitId":"jack1e0"},"content":"/**","lastModifiedDate":"2023-10-29"},{"lineNumber":10,"author":{"gitId":"jack1e0"},"content":" * A predicate that is the AND of several predicates","lastModifiedDate":"2023-10-29"},{"lineNumber":11,"author":{"gitId":"jack1e0"},"content":" */","lastModifiedDate":"2023-10-29"},{"lineNumber":12,"author":{"gitId":"jack1e0"},"content":"public class CombinedPredicate implements Predicate\u003cTask\u003e {","lastModifiedDate":"2023-10-29"},{"lineNumber":13,"author":{"gitId":"jack1e0"},"content":"    private ArrayList\u003cPredicate\u003cTask\u003e\u003e predicateList;","lastModifiedDate":"2023-10-29"},{"lineNumber":14,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":15,"author":{"gitId":"jack1e0"},"content":"    public CombinedPredicate(ArrayList\u003cPredicate\u003cTask\u003e\u003e predicates) {","lastModifiedDate":"2023-10-29"},{"lineNumber":16,"author":{"gitId":"jack1e0"},"content":"        this.predicateList \u003d predicates;","lastModifiedDate":"2023-10-29"},{"lineNumber":17,"author":{"gitId":"jack1e0"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":18,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":19,"author":{"gitId":"jack1e0"},"content":"    @Override","lastModifiedDate":"2023-10-29"},{"lineNumber":20,"author":{"gitId":"jack1e0"},"content":"    public boolean test(Task task) {","lastModifiedDate":"2023-10-29"},{"lineNumber":21,"author":{"gitId":"jack1e0"},"content":"        for (Predicate\u003cTask\u003e predicate : predicateList) {","lastModifiedDate":"2023-10-29"},{"lineNumber":22,"author":{"gitId":"jack1e0"},"content":"            if (!predicate.test(task)) {","lastModifiedDate":"2023-10-29"},{"lineNumber":23,"author":{"gitId":"jack1e0"},"content":"                return false;","lastModifiedDate":"2023-10-29"},{"lineNumber":24,"author":{"gitId":"jack1e0"},"content":"            }","lastModifiedDate":"2023-10-29"},{"lineNumber":25,"author":{"gitId":"jack1e0"},"content":"        }","lastModifiedDate":"2023-10-29"},{"lineNumber":26,"author":{"gitId":"jack1e0"},"content":"        return true;","lastModifiedDate":"2023-10-29"},{"lineNumber":27,"author":{"gitId":"jack1e0"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":28,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":29,"author":{"gitId":"jack1e0"},"content":"    @Override","lastModifiedDate":"2023-10-29"},{"lineNumber":30,"author":{"gitId":"jack1e0"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-29"},{"lineNumber":31,"author":{"gitId":"jack1e0"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-29"},{"lineNumber":32,"author":{"gitId":"jack1e0"},"content":"            return true;","lastModifiedDate":"2023-10-29"},{"lineNumber":33,"author":{"gitId":"jack1e0"},"content":"        }","lastModifiedDate":"2023-10-29"},{"lineNumber":34,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":35,"author":{"gitId":"jack1e0"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-29"},{"lineNumber":36,"author":{"gitId":"jack1e0"},"content":"        if (!(other instanceof CombinedPredicate)) {","lastModifiedDate":"2023-10-29"},{"lineNumber":37,"author":{"gitId":"jack1e0"},"content":"            return false;","lastModifiedDate":"2023-10-29"},{"lineNumber":38,"author":{"gitId":"jack1e0"},"content":"        }","lastModifiedDate":"2023-10-29"},{"lineNumber":39,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":40,"author":{"gitId":"jack1e0"},"content":"        CombinedPredicate otherPredicate \u003d (CombinedPredicate) other;","lastModifiedDate":"2023-10-29"},{"lineNumber":41,"author":{"gitId":"jack1e0"},"content":"        return predicateList.equals(otherPredicate.predicateList);","lastModifiedDate":"2023-10-29"},{"lineNumber":42,"author":{"gitId":"jack1e0"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":43,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":44,"author":{"gitId":"jack1e0"},"content":"    @Override","lastModifiedDate":"2023-10-29"},{"lineNumber":45,"author":{"gitId":"jack1e0"},"content":"    public String toString() {","lastModifiedDate":"2023-10-29"},{"lineNumber":46,"author":{"gitId":"jack1e0"},"content":"        return new ToStringBuilder(this).add(","lastModifiedDate":"2023-10-29"},{"lineNumber":47,"author":{"gitId":"jack1e0"},"content":"                \"predicates\", predicateList).toString();","lastModifiedDate":"2023-10-29"},{"lineNumber":48,"author":{"gitId":"jack1e0"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":49,"author":{"gitId":"jack1e0"},"content":"}","lastModifiedDate":"2023-10-29"}],"authorContributionMap":{"jack1e0":49}},{"path":"src/main/java/profplan/model/task/predicates/NameContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jack1e0"},"content":"package profplan.model.task.predicates;","lastModifiedDate":"2023-10-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"kiatkat"},"content":"import profplan.commons.util.StringUtil;","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"kiatkat"},"content":"import profplan.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"jack1e0"},"content":"import profplan.model.task.Task;","lastModifiedDate":"2023-10-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"newway1814"},"content":" * Tests that a {@code Task}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2023-10-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"newway1814"},"content":"public class NameContainsKeywordsPredicate implements Predicate\u003cTask\u003e {","lastModifiedDate":"2023-10-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public NameContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"newway1814"},"content":"    public boolean test(Task task) {","lastModifiedDate":"2023-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return keywords.stream()","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"newway1814"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(task.getName().fullName, keyword));","lastModifiedDate":"2023-10-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        if (!(other instanceof NameContainsKeywordsPredicate)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate otherNameContainsKeywordsPredicate \u003d (NameContainsKeywordsPredicate) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return keywords.equals(otherNameContainsKeywordsPredicate.keywords);","lastModifiedDate":"2023-07-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this).add(\"keywords\", keywords).toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"jack1e0":2,"kiatkat":2,"-":37,"newway1814":4}},{"path":"src/main/java/profplan/model/task/predicates/TaskDueDatePredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jack1e0"},"content":"package profplan.model.task.predicates;","lastModifiedDate":"2023-10-29"},{"lineNumber":2,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":3,"author":{"gitId":"jack1e0"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-20"},{"lineNumber":4,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":5,"author":{"gitId":"jack1e0"},"content":"import profplan.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-20"},{"lineNumber":6,"author":{"gitId":"jack1e0"},"content":"import profplan.model.task.DueDate;","lastModifiedDate":"2023-10-29"},{"lineNumber":7,"author":{"gitId":"jack1e0"},"content":"import profplan.model.task.Task;","lastModifiedDate":"2023-10-29"},{"lineNumber":8,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":9,"author":{"gitId":"jack1e0"},"content":"/**","lastModifiedDate":"2023-10-20"},{"lineNumber":10,"author":{"gitId":"jack1e0"},"content":" * Tests that a {@code Task}\u0027s {@code DueDate} falls before the given duedate.","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"jack1e0"},"content":" */","lastModifiedDate":"2023-10-20"},{"lineNumber":12,"author":{"gitId":"jack1e0"},"content":"public class TaskDueDatePredicate implements Predicate\u003cTask\u003e {","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"jack1e0"},"content":"    private final DueDate date;","lastModifiedDate":"2023-10-20"},{"lineNumber":14,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":15,"author":{"gitId":"jack1e0"},"content":"    public TaskDueDatePredicate(DueDate date) {","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"jack1e0"},"content":"        this.date \u003d date;","lastModifiedDate":"2023-10-20"},{"lineNumber":17,"author":{"gitId":"jack1e0"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":18,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":19,"author":{"gitId":"jack1e0"},"content":"    public DueDate getDate() {","lastModifiedDate":"2023-10-20"},{"lineNumber":20,"author":{"gitId":"jack1e0"},"content":"        return this.date;","lastModifiedDate":"2023-10-20"},{"lineNumber":21,"author":{"gitId":"jack1e0"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":22,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":23,"author":{"gitId":"jack1e0"},"content":"    @Override","lastModifiedDate":"2023-10-20"},{"lineNumber":24,"author":{"gitId":"jack1e0"},"content":"    public boolean test(Task task) {","lastModifiedDate":"2023-10-20"},{"lineNumber":25,"author":{"gitId":"jack1e0"},"content":"        return task.getDueDate().isIncludedorBefore(date);","lastModifiedDate":"2023-10-20"},{"lineNumber":26,"author":{"gitId":"jack1e0"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":27,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":28,"author":{"gitId":"jack1e0"},"content":"    @Override","lastModifiedDate":"2023-10-20"},{"lineNumber":29,"author":{"gitId":"jack1e0"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-20"},{"lineNumber":30,"author":{"gitId":"jack1e0"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-20"},{"lineNumber":31,"author":{"gitId":"jack1e0"},"content":"            return true;","lastModifiedDate":"2023-10-20"},{"lineNumber":32,"author":{"gitId":"jack1e0"},"content":"        }","lastModifiedDate":"2023-10-20"},{"lineNumber":33,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":34,"author":{"gitId":"jack1e0"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-20"},{"lineNumber":35,"author":{"gitId":"jack1e0"},"content":"        if (!(other instanceof TaskDueDatePredicate)) {","lastModifiedDate":"2023-10-25"},{"lineNumber":36,"author":{"gitId":"jack1e0"},"content":"            return false;","lastModifiedDate":"2023-10-20"},{"lineNumber":37,"author":{"gitId":"jack1e0"},"content":"        }","lastModifiedDate":"2023-10-20"},{"lineNumber":38,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":39,"author":{"gitId":"jack1e0"},"content":"        TaskDueDatePredicate otherPredicate \u003d (TaskDueDatePredicate) other;","lastModifiedDate":"2023-10-25"},{"lineNumber":40,"author":{"gitId":"jack1e0"},"content":"        return date.equals(otherPredicate.date);","lastModifiedDate":"2023-10-20"},{"lineNumber":41,"author":{"gitId":"jack1e0"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":42,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":43,"author":{"gitId":"jack1e0"},"content":"    @Override","lastModifiedDate":"2023-10-20"},{"lineNumber":44,"author":{"gitId":"jack1e0"},"content":"    public String toString() {","lastModifiedDate":"2023-10-20"},{"lineNumber":45,"author":{"gitId":"jack1e0"},"content":"        return new ToStringBuilder(this).add(\"date\", date).toString();","lastModifiedDate":"2023-10-20"},{"lineNumber":46,"author":{"gitId":"jack1e0"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":47,"author":{"gitId":"jack1e0"},"content":"}","lastModifiedDate":"2023-10-20"}],"authorContributionMap":{"jack1e0":47}},{"path":"src/main/java/profplan/model/task/predicates/TaskInMonthPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jack1e0"},"content":"package profplan.model.task.predicates;","lastModifiedDate":"2023-10-29"},{"lineNumber":2,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":3,"author":{"gitId":"jack1e0"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-29"},{"lineNumber":4,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":5,"author":{"gitId":"jack1e0"},"content":"import profplan.model.task.Task;","lastModifiedDate":"2023-10-29"},{"lineNumber":6,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":7,"author":{"gitId":"jack1e0"},"content":"/**","lastModifiedDate":"2023-10-29"},{"lineNumber":8,"author":{"gitId":"jack1e0"},"content":" * Tests that a {@code Task}\u0027s {@code DueDate} falls within a month of the current date.","lastModifiedDate":"2023-10-29"},{"lineNumber":9,"author":{"gitId":"jack1e0"},"content":" */","lastModifiedDate":"2023-10-29"},{"lineNumber":10,"author":{"gitId":"jack1e0"},"content":"public class TaskInMonthPredicate implements Predicate\u003cTask\u003e {","lastModifiedDate":"2023-10-29"},{"lineNumber":11,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":12,"author":{"gitId":"jack1e0"},"content":"    @Override","lastModifiedDate":"2023-10-29"},{"lineNumber":13,"author":{"gitId":"jack1e0"},"content":"    public boolean test(Task task) {","lastModifiedDate":"2023-10-29"},{"lineNumber":14,"author":{"gitId":"jack1e0"},"content":"        return task.getDueDate().isWithinMonth();","lastModifiedDate":"2023-10-29"},{"lineNumber":15,"author":{"gitId":"jack1e0"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":16,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":17,"author":{"gitId":"jack1e0"},"content":"    @Override","lastModifiedDate":"2023-10-29"},{"lineNumber":18,"author":{"gitId":"jack1e0"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-29"},{"lineNumber":19,"author":{"gitId":"jack1e0"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-29"},{"lineNumber":20,"author":{"gitId":"jack1e0"},"content":"            return true;","lastModifiedDate":"2023-10-29"},{"lineNumber":21,"author":{"gitId":"jack1e0"},"content":"        }","lastModifiedDate":"2023-10-29"},{"lineNumber":22,"author":{"gitId":"jack1e0"},"content":"        return (other instanceof TaskInMonthPredicate);","lastModifiedDate":"2023-10-29"},{"lineNumber":23,"author":{"gitId":"jack1e0"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":24,"author":{"gitId":"jack1e0"},"content":"}","lastModifiedDate":"2023-10-29"},{"lineNumber":25,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-29"}],"authorContributionMap":{"jack1e0":25}},{"path":"src/main/java/profplan/model/task/predicates/TaskInWeekPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jack1e0"},"content":"package profplan.model.task.predicates;","lastModifiedDate":"2023-10-29"},{"lineNumber":2,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":3,"author":{"gitId":"jack1e0"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-29"},{"lineNumber":4,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":5,"author":{"gitId":"jack1e0"},"content":"import profplan.model.task.Task;","lastModifiedDate":"2023-10-29"},{"lineNumber":6,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":7,"author":{"gitId":"jack1e0"},"content":"/**","lastModifiedDate":"2023-10-29"},{"lineNumber":8,"author":{"gitId":"jack1e0"},"content":" * Tests that a {@code Task}\u0027s {@code DueDate} falls within a week of the current date.","lastModifiedDate":"2023-10-29"},{"lineNumber":9,"author":{"gitId":"jack1e0"},"content":" */","lastModifiedDate":"2023-10-29"},{"lineNumber":10,"author":{"gitId":"jack1e0"},"content":"public class TaskInWeekPredicate implements Predicate\u003cTask\u003e {","lastModifiedDate":"2023-10-29"},{"lineNumber":11,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":12,"author":{"gitId":"jack1e0"},"content":"    @Override","lastModifiedDate":"2023-10-29"},{"lineNumber":13,"author":{"gitId":"jack1e0"},"content":"    public boolean test(Task task) {","lastModifiedDate":"2023-10-29"},{"lineNumber":14,"author":{"gitId":"jack1e0"},"content":"        return task.getDueDate().isWithinWeek();","lastModifiedDate":"2023-10-29"},{"lineNumber":15,"author":{"gitId":"jack1e0"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":16,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":17,"author":{"gitId":"jack1e0"},"content":"    @Override","lastModifiedDate":"2023-10-29"},{"lineNumber":18,"author":{"gitId":"jack1e0"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-29"},{"lineNumber":19,"author":{"gitId":"jack1e0"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-29"},{"lineNumber":20,"author":{"gitId":"jack1e0"},"content":"            return true;","lastModifiedDate":"2023-10-29"},{"lineNumber":21,"author":{"gitId":"jack1e0"},"content":"        }","lastModifiedDate":"2023-10-29"},{"lineNumber":22,"author":{"gitId":"jack1e0"},"content":"        return (other instanceof TaskInWeekPredicate);","lastModifiedDate":"2023-10-29"},{"lineNumber":23,"author":{"gitId":"jack1e0"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":24,"author":{"gitId":"jack1e0"},"content":"}","lastModifiedDate":"2023-10-29"}],"authorContributionMap":{"jack1e0":24}},{"path":"src/main/java/profplan/model/task/predicates/TaskPriorityPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jack1e0"},"content":"package profplan.model.task.predicates;","lastModifiedDate":"2023-10-29"},{"lineNumber":2,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":3,"author":{"gitId":"jack1e0"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-25"},{"lineNumber":4,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":5,"author":{"gitId":"jack1e0"},"content":"import profplan.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"jack1e0"},"content":"import profplan.model.task.Priority;","lastModifiedDate":"2023-10-29"},{"lineNumber":7,"author":{"gitId":"jack1e0"},"content":"import profplan.model.task.Task;","lastModifiedDate":"2023-10-29"},{"lineNumber":8,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"jack1e0"},"content":"/**","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"jack1e0"},"content":" * Tests that a {@code Task}\u0027s {@code Priority} matches the given priority.","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"jack1e0"},"content":" */","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"jack1e0"},"content":"public class TaskPriorityPredicate implements Predicate\u003cTask\u003e {","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"jack1e0"},"content":"    private final Priority priority;","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"jack1e0"},"content":"    public TaskPriorityPredicate(Priority priority) {","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"jack1e0"},"content":"        this.priority \u003d priority;","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"jack1e0"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":18,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"jack1e0"},"content":"    public Priority getPriority() {","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"jack1e0"},"content":"        return this.priority;","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"jack1e0"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"jack1e0"},"content":"    @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"jack1e0"},"content":"    public boolean test(Task task) {","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"jack1e0"},"content":"        return task.getPriority().equals(priority);","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"jack1e0"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":27,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":28,"author":{"gitId":"jack1e0"},"content":"    @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"jack1e0"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-25"},{"lineNumber":30,"author":{"gitId":"jack1e0"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-25"},{"lineNumber":31,"author":{"gitId":"jack1e0"},"content":"            return true;","lastModifiedDate":"2023-10-25"},{"lineNumber":32,"author":{"gitId":"jack1e0"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":33,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":34,"author":{"gitId":"jack1e0"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-25"},{"lineNumber":35,"author":{"gitId":"jack1e0"},"content":"        if (!(other instanceof TaskPriorityPredicate)) {","lastModifiedDate":"2023-10-25"},{"lineNumber":36,"author":{"gitId":"jack1e0"},"content":"            return false;","lastModifiedDate":"2023-10-25"},{"lineNumber":37,"author":{"gitId":"jack1e0"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":38,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":39,"author":{"gitId":"jack1e0"},"content":"        TaskPriorityPredicate otherPredicate \u003d (TaskPriorityPredicate) other;","lastModifiedDate":"2023-10-25"},{"lineNumber":40,"author":{"gitId":"jack1e0"},"content":"        return priority.equals(otherPredicate.priority);","lastModifiedDate":"2023-10-25"},{"lineNumber":41,"author":{"gitId":"jack1e0"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":42,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":43,"author":{"gitId":"jack1e0"},"content":"    @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":44,"author":{"gitId":"jack1e0"},"content":"    public String toString() {","lastModifiedDate":"2023-10-25"},{"lineNumber":45,"author":{"gitId":"jack1e0"},"content":"        return new ToStringBuilder(this).add(\"priority\", priority).toString();","lastModifiedDate":"2023-10-25"},{"lineNumber":46,"author":{"gitId":"jack1e0"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":47,"author":{"gitId":"jack1e0"},"content":"}","lastModifiedDate":"2023-10-25"}],"authorContributionMap":{"jack1e0":47}},{"path":"src/main/java/profplan/model/task/predicates/TaskRecurringTypePredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jack1e0"},"content":"package profplan.model.task.predicates;","lastModifiedDate":"2023-11-02"},{"lineNumber":2,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":3,"author":{"gitId":"jack1e0"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-11-02"},{"lineNumber":4,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":5,"author":{"gitId":"jack1e0"},"content":"import profplan.commons.util.ToStringBuilder;","lastModifiedDate":"2023-11-02"},{"lineNumber":6,"author":{"gitId":"jack1e0"},"content":"import profplan.model.task.Task;","lastModifiedDate":"2023-11-02"},{"lineNumber":7,"author":{"gitId":"jack1e0"},"content":"import profplan.model.task.Task.RecurringType;","lastModifiedDate":"2023-11-02"},{"lineNumber":8,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":9,"author":{"gitId":"jack1e0"},"content":"/**","lastModifiedDate":"2023-11-02"},{"lineNumber":10,"author":{"gitId":"jack1e0"},"content":" * Tests that a {@code Task}\u0027s {@code Recurring} matches the given recurring.","lastModifiedDate":"2023-11-02"},{"lineNumber":11,"author":{"gitId":"jack1e0"},"content":" */","lastModifiedDate":"2023-11-02"},{"lineNumber":12,"author":{"gitId":"jack1e0"},"content":"public class TaskRecurringTypePredicate implements Predicate\u003cTask\u003e {","lastModifiedDate":"2023-11-02"},{"lineNumber":13,"author":{"gitId":"jack1e0"},"content":"    private final RecurringType recur;","lastModifiedDate":"2023-11-02"},{"lineNumber":14,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":15,"author":{"gitId":"jack1e0"},"content":"    public TaskRecurringTypePredicate(RecurringType recur) {","lastModifiedDate":"2023-11-02"},{"lineNumber":16,"author":{"gitId":"jack1e0"},"content":"        this.recur \u003d recur;","lastModifiedDate":"2023-11-02"},{"lineNumber":17,"author":{"gitId":"jack1e0"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":18,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":19,"author":{"gitId":"jack1e0"},"content":"    public RecurringType getRecurringType() {","lastModifiedDate":"2023-11-02"},{"lineNumber":20,"author":{"gitId":"jack1e0"},"content":"        return this.recur;","lastModifiedDate":"2023-11-02"},{"lineNumber":21,"author":{"gitId":"jack1e0"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":22,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":23,"author":{"gitId":"jack1e0"},"content":"    @Override","lastModifiedDate":"2023-11-02"},{"lineNumber":24,"author":{"gitId":"jack1e0"},"content":"    public boolean test(Task task) {","lastModifiedDate":"2023-11-02"},{"lineNumber":25,"author":{"gitId":"jack1e0"},"content":"        return this.recur \u003d\u003d null","lastModifiedDate":"2023-11-02"},{"lineNumber":26,"author":{"gitId":"jack1e0"},"content":"            ? !task.getIsRecurring()","lastModifiedDate":"2023-11-02"},{"lineNumber":27,"author":{"gitId":"jack1e0"},"content":"            : this.recur.equals(task.getRecurringType());","lastModifiedDate":"2023-11-02"},{"lineNumber":28,"author":{"gitId":"jack1e0"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":29,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":30,"author":{"gitId":"jack1e0"},"content":"    @Override","lastModifiedDate":"2023-11-02"},{"lineNumber":31,"author":{"gitId":"jack1e0"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-11-02"},{"lineNumber":32,"author":{"gitId":"jack1e0"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-11-02"},{"lineNumber":33,"author":{"gitId":"jack1e0"},"content":"            return true;","lastModifiedDate":"2023-11-02"},{"lineNumber":34,"author":{"gitId":"jack1e0"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":35,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":36,"author":{"gitId":"jack1e0"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-11-02"},{"lineNumber":37,"author":{"gitId":"jack1e0"},"content":"        if (!(other instanceof TaskRecurringTypePredicate)) {","lastModifiedDate":"2023-11-02"},{"lineNumber":38,"author":{"gitId":"jack1e0"},"content":"            return false;","lastModifiedDate":"2023-11-02"},{"lineNumber":39,"author":{"gitId":"jack1e0"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":40,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":41,"author":{"gitId":"jack1e0"},"content":"        TaskRecurringTypePredicate otherPredicate \u003d (TaskRecurringTypePredicate) other;","lastModifiedDate":"2023-11-02"},{"lineNumber":42,"author":{"gitId":"jack1e0"},"content":"        if (recur \u003d\u003d null) {","lastModifiedDate":"2023-11-02"},{"lineNumber":43,"author":{"gitId":"jack1e0"},"content":"            return otherPredicate.recur \u003d\u003d null;","lastModifiedDate":"2023-11-02"},{"lineNumber":44,"author":{"gitId":"jack1e0"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":45,"author":{"gitId":"jack1e0"},"content":"        return otherPredicate \u003d\u003d null","lastModifiedDate":"2023-11-02"},{"lineNumber":46,"author":{"gitId":"jack1e0"},"content":"            ? false","lastModifiedDate":"2023-11-02"},{"lineNumber":47,"author":{"gitId":"jack1e0"},"content":"            : recur.equals(otherPredicate.recur);","lastModifiedDate":"2023-11-02"},{"lineNumber":48,"author":{"gitId":"jack1e0"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":49,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":50,"author":{"gitId":"jack1e0"},"content":"    @Override","lastModifiedDate":"2023-11-02"},{"lineNumber":51,"author":{"gitId":"jack1e0"},"content":"    public String toString() {","lastModifiedDate":"2023-11-02"},{"lineNumber":52,"author":{"gitId":"jack1e0"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-11-02"},{"lineNumber":53,"author":{"gitId":"jack1e0"},"content":"            .add(\"recurringType\", recur \u003d\u003d null ? \"None\" : recur)","lastModifiedDate":"2023-11-02"},{"lineNumber":54,"author":{"gitId":"jack1e0"},"content":"            .toString();","lastModifiedDate":"2023-11-02"},{"lineNumber":55,"author":{"gitId":"jack1e0"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":56,"author":{"gitId":"jack1e0"},"content":"}","lastModifiedDate":"2023-11-02"}],"authorContributionMap":{"jack1e0":56}},{"path":"src/main/java/profplan/model/task/predicates/TaskStatusPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jack1e0"},"content":"package profplan.model.task.predicates;","lastModifiedDate":"2023-10-29"},{"lineNumber":2,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":3,"author":{"gitId":"jack1e0"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-25"},{"lineNumber":4,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":5,"author":{"gitId":"jack1e0"},"content":"import profplan.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"jack1e0"},"content":"import profplan.model.task.Status;","lastModifiedDate":"2023-10-29"},{"lineNumber":7,"author":{"gitId":"jack1e0"},"content":"import profplan.model.task.Task;","lastModifiedDate":"2023-10-29"},{"lineNumber":8,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"jack1e0"},"content":"/**","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"jack1e0"},"content":" * Tests that a {@code Task}\u0027s {@code Priority} matches the given priority.","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"jack1e0"},"content":" */","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"jack1e0"},"content":"public class TaskStatusPredicate implements Predicate\u003cTask\u003e {","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"jack1e0"},"content":"    private final Status status;","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"jack1e0"},"content":"    public TaskStatusPredicate(Status status) {","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"jack1e0"},"content":"        this.status \u003d status;","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"jack1e0"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":18,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"jack1e0"},"content":"    public Status getStatus() {","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"jack1e0"},"content":"        return this.status;","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"jack1e0"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"jack1e0"},"content":"    @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"jack1e0"},"content":"    public boolean test(Task task) {","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"jack1e0"},"content":"        return task.getStatus().equals(status);","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"jack1e0"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":27,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":28,"author":{"gitId":"jack1e0"},"content":"    @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"jack1e0"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-25"},{"lineNumber":30,"author":{"gitId":"jack1e0"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-25"},{"lineNumber":31,"author":{"gitId":"jack1e0"},"content":"            return true;","lastModifiedDate":"2023-10-25"},{"lineNumber":32,"author":{"gitId":"jack1e0"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":33,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":34,"author":{"gitId":"jack1e0"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-25"},{"lineNumber":35,"author":{"gitId":"jack1e0"},"content":"        if (!(other instanceof TaskStatusPredicate)) {","lastModifiedDate":"2023-10-25"},{"lineNumber":36,"author":{"gitId":"jack1e0"},"content":"            return false;","lastModifiedDate":"2023-10-25"},{"lineNumber":37,"author":{"gitId":"jack1e0"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":38,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":39,"author":{"gitId":"jack1e0"},"content":"        TaskStatusPredicate otherPredicate \u003d (TaskStatusPredicate) other;","lastModifiedDate":"2023-10-25"},{"lineNumber":40,"author":{"gitId":"jack1e0"},"content":"        return status.equals(otherPredicate.status);","lastModifiedDate":"2023-10-25"},{"lineNumber":41,"author":{"gitId":"jack1e0"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":42,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":43,"author":{"gitId":"jack1e0"},"content":"    @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":44,"author":{"gitId":"jack1e0"},"content":"    public String toString() {","lastModifiedDate":"2023-10-25"},{"lineNumber":45,"author":{"gitId":"jack1e0"},"content":"        return new ToStringBuilder(this).add(\"status\", status).toString();","lastModifiedDate":"2023-10-25"},{"lineNumber":46,"author":{"gitId":"jack1e0"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":47,"author":{"gitId":"jack1e0"},"content":"}","lastModifiedDate":"2023-10-25"}],"authorContributionMap":{"jack1e0":47}},{"path":"src/main/java/profplan/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kiatkat"},"content":"package profplan.model.util;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":7,"author":{"gitId":"kiatkat"},"content":"import profplan.model.ProfPlan;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"kiatkat"},"content":"import profplan.model.ReadOnlyProfPlan;","lastModifiedDate":"2023-10-14"},{"lineNumber":9,"author":{"gitId":"kiatkat"},"content":"import profplan.model.tag.Tag;","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"kiatkat"},"content":"import profplan.model.task.Description;","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"jack1e0"},"content":"import profplan.model.task.DueDate;","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"yarnmengnus"},"content":"import profplan.model.task.Link;","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"newway1814"},"content":"import profplan.model.task.Name;","lastModifiedDate":"2023-10-16"},{"lineNumber":14,"author":{"gitId":"eyelessrhyme7"},"content":"import profplan.model.task.Priority;","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"newway1814"},"content":"import profplan.model.task.Task;","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":18,"author":{"gitId":"jack1e0"},"content":" * Contains utility methods for populating {@code ProfPlan} with sample data.","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":21,"author":{"gitId":"newway1814"},"content":"    public static Task[] getSampleTasks() {","lastModifiedDate":"2023-10-16"},{"lineNumber":22,"author":{"gitId":"newway1814"},"content":"        return new Task[] {","lastModifiedDate":"2023-10-16"},{"lineNumber":23,"author":{"gitId":"eyelessrhyme7"},"content":"            new Task(new Name(\"3D Chip Printing Research\"), new Priority(\"8\"), false, null,","lastModifiedDate":"2023-11-03"},{"lineNumber":24,"author":{"gitId":"eyelessrhyme7"},"content":"                    getTagSet(\"research\", \"application\"), new DueDate(\"01-01-2024\"),","lastModifiedDate":"2023-11-03"},{"lineNumber":25,"author":{"gitId":"eyelessrhyme7"},"content":"                    new Link(\"https://nus.edu.sg/nuslibraries/spaces/tel-imaginarium/services/3d-printing\"),","lastModifiedDate":"2023-11-03"},{"lineNumber":26,"author":{"gitId":"eyelessrhyme7"},"content":"                    new Description(\"Test blueprints and apply for 3D Printing machine access.\")),","lastModifiedDate":"2023-11-03"},{"lineNumber":27,"author":{"gitId":"eyelessrhyme7"},"content":"            new Task(new Name(\"Review Student Project Proposal\"), new Priority(\"5\"), false, null,","lastModifiedDate":"2023-11-03"},{"lineNumber":28,"author":{"gitId":"eyelessrhyme7"},"content":"                    getTagSet(\"student\", \"research\"), new DueDate(\"04-11-2023\"),","lastModifiedDate":"2023-11-03"},{"lineNumber":29,"author":{"gitId":"eyelessrhyme7"},"content":"                    new Link(\"urop.com\"), new Description(\"Review Raman\u0027s UROP Proposal.\")),","lastModifiedDate":"2023-11-03"},{"lineNumber":30,"author":{"gitId":"kiatkat"},"content":"            new Task(new Name(\"CS2100 Lecture\"), new Priority(\"7\"), true, Task.RecurringType.WEEKLY,","lastModifiedDate":"2023-11-11"},{"lineNumber":31,"author":{"gitId":"kiatkat"},"content":"                    getTagSet(\"course\", \"lecture\"), new DueDate(\"07-11-2023\"),","lastModifiedDate":"2023-11-11"},{"lineNumber":32,"author":{"gitId":"eyelessrhyme7"},"content":"                    new Link(\"https://nus-sg.zoom.us/j/84615636187?pwd\u003dRWRHc1hiTDlUaU54dUIrRVFiT2l2Zz09\"),","lastModifiedDate":"2023-11-03"},{"lineNumber":33,"author":{"gitId":"eyelessrhyme7"},"content":"                    new Description(\"9AM Lecture in COM1-Seminar Room\")),","lastModifiedDate":"2023-11-03"},{"lineNumber":34,"author":{"gitId":"eyelessrhyme7"},"content":"            new Task(new Name(\"Read Neural Network Paper\"), new Priority(\"6\"), false, null,","lastModifiedDate":"2023-11-03"},{"lineNumber":35,"author":{"gitId":"eyelessrhyme7"},"content":"                    getTagSet(\"reading\", \"research\"), new DueDate(\"10-11-2023\"),","lastModifiedDate":"2023-11-03"},{"lineNumber":36,"author":{"gitId":"eyelessrhyme7"},"content":"                    new Link(\"arivx.com/12366\"), new Description(\"Read and review newly released paper on CNNs\")),","lastModifiedDate":"2023-11-03"},{"lineNumber":37,"author":{"gitId":"kiatkat"},"content":"            new Task(new Name(\"CS2106 Course Admin\"), new Priority(\"5\"), true, Task.RecurringType.WEEKLY,","lastModifiedDate":"2023-11-11"},{"lineNumber":38,"author":{"gitId":"kiatkat"},"content":"                    getTagSet(\"course\", \"admin\"), new DueDate(\"10-11-2023\"),","lastModifiedDate":"2023-11-11"},{"lineNumber":39,"author":{"gitId":"eyelessrhyme7"},"content":"                    new Link(\"https://blog.nus.edu.sg/cs2106/about/\"),","lastModifiedDate":"2023-11-03"},{"lineNumber":40,"author":{"gitId":"eyelessrhyme7"},"content":"                    new Description(\"Release Quiz 9 and Midterm Grades\")),","lastModifiedDate":"2023-11-03"},{"lineNumber":41,"author":{"gitId":"eyelessrhyme7"},"content":"            new Task(new Name(\"Grant Application\"), new Priority(\"8\"), false, null,","lastModifiedDate":"2023-11-03"},{"lineNumber":42,"author":{"gitId":"eyelessrhyme7"},"content":"                    getTagSet(\"grant\", \"research\"), new DueDate(\"20-12-2023\"),","lastModifiedDate":"2023-11-03"},{"lineNumber":43,"author":{"gitId":"eyelessrhyme7"},"content":"                    new Link(\"-\"), new Description(\"NUS SOC Grant Application for DLD Project\"))","lastModifiedDate":"2023-11-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":47,"author":{"gitId":"kiatkat"},"content":"    public static ReadOnlyProfPlan getSampleProfPlan() {","lastModifiedDate":"2023-10-13"},{"lineNumber":48,"author":{"gitId":"kiatkat"},"content":"        ProfPlan sampleAb \u003d new ProfPlan();","lastModifiedDate":"2023-10-13"},{"lineNumber":49,"author":{"gitId":"newway1814"},"content":"        for (Task sampleTask : getSampleTasks()) {","lastModifiedDate":"2023-10-16"},{"lineNumber":50,"author":{"gitId":"newway1814"},"content":"            sampleAb.addTask(sampleTask);","lastModifiedDate":"2023-10-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":64,"author":{"gitId":"kiatkat"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":65,"author":{"gitId":"kiatkat"},"content":"     * Returns a Task set containing the list of Tasks given.","lastModifiedDate":"2023-10-17"},{"lineNumber":66,"author":{"gitId":"kiatkat"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":67,"author":{"gitId":"kiatkat"},"content":"    public static Set\u003cTask\u003e getTaskSet(Task... tasks) {","lastModifiedDate":"2023-10-17"},{"lineNumber":68,"author":{"gitId":"kiatkat"},"content":"        return Arrays.stream(tasks)","lastModifiedDate":"2023-10-17"},{"lineNumber":69,"author":{"gitId":"kiatkat"},"content":"                .map(Task::new)","lastModifiedDate":"2023-10-17"},{"lineNumber":70,"author":{"gitId":"kiatkat"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2023-10-17"},{"lineNumber":71,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":72,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"yarnmengnus":1,"jack1e0":2,"kiatkat":20,"eyelessrhyme7":18,"-":26,"newway1814":6}},{"path":"src/main/java/profplan/storage/JsonAdaptedTag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kiatkat"},"content":"package profplan.storage;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"kiatkat"},"content":"import profplan.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"kiatkat"},"content":"import profplan.model.tag.Tag;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Tag}.","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"class JsonAdaptedTag {","lastModifiedDate":"2018-12-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final String tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedTag} with the given {@code tagName}.","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public JsonAdaptedTag(String tagName) {","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Converts a given {@code Tag} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public JsonAdaptedTag(Tag source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        tagName \u003d source.tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @JsonValue","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public String getTagName() {","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted tag object into the model\u0027s {@code Tag} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted tag.","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Tag toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(tagName)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return new Tag(tagName);","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"kiatkat":3,"-":45}},{"path":"src/main/java/profplan/storage/JsonAdaptedTask.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kiatkat"},"content":"package profplan.storage;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"kiatkat"},"content":"import profplan.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"kiatkat"},"content":"import profplan.model.tag.Tag;","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"kiatkat"},"content":"import profplan.model.task.Description;","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"jack1e0"},"content":"import profplan.model.task.DueDate;","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"yarnmengnus"},"content":"import profplan.model.task.Link;","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"newway1814"},"content":"import profplan.model.task.Name;","lastModifiedDate":"2023-10-16"},{"lineNumber":18,"author":{"gitId":"eyelessrhyme7"},"content":"import profplan.model.task.Priority;","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"newway1814"},"content":"import profplan.model.task.Status;","lastModifiedDate":"2023-10-16"},{"lineNumber":20,"author":{"gitId":"yarnmengnus"},"content":"import profplan.model.task.Task;","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"newway1814"},"content":" * Jackson-friendly version of {@link Task}.","lastModifiedDate":"2023-10-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"newway1814"},"content":"class JsonAdaptedTask {","lastModifiedDate":"2023-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"newway1814"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Task\u0027s %s field is missing!\";","lastModifiedDate":"2023-10-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"eyelessrhyme7"},"content":"    private final String priority;","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"kiatkat"},"content":"    private final boolean isRecurring;","lastModifiedDate":"2023-10-30"},{"lineNumber":32,"author":{"gitId":"kiatkat"},"content":"    private final Task.RecurringType recurringType;","lastModifiedDate":"2023-10-30"},{"lineNumber":33,"author":{"gitId":"jack1e0"},"content":"    private final String dueDate;","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"newway1814"},"content":"    private final String status;","lastModifiedDate":"2023-10-16"},{"lineNumber":35,"author":{"gitId":"yarnmengnus"},"content":"    private final String link;","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedTag\u003e tags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-09"},{"lineNumber":37,"author":{"gitId":"kiatkat"},"content":"    private final String description;","lastModifiedDate":"2023-10-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"newway1814"},"content":"     * Constructs a {@code JsonAdaptedTask} with the given task details.","lastModifiedDate":"2023-10-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"eyelessrhyme7"},"content":"    public JsonAdaptedTask(@JsonProperty(\"name\") String name, @JsonProperty(\"priority\") String priority,","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"kiatkat"},"content":"            @JsonProperty(\"isRecurring\") boolean isRecurring,","lastModifiedDate":"2023-10-30"},{"lineNumber":45,"author":{"gitId":"kiatkat"},"content":"            @JsonProperty(\"recurringType\") Task.RecurringType recurringType,","lastModifiedDate":"2023-10-30"},{"lineNumber":46,"author":{"gitId":"kiatkat"},"content":"            @JsonProperty(\"tags\") List\u003cJsonAdaptedTag\u003e tags,","lastModifiedDate":"2023-10-17"},{"lineNumber":47,"author":{"gitId":"eyelessrhyme7"},"content":"            @JsonProperty(\"status\") String status, @JsonProperty(\"dueDate\") String dueDate,","lastModifiedDate":"2023-10-18"},{"lineNumber":48,"author":{"gitId":"kiatkat"},"content":"            @JsonProperty(\"link\") String link,","lastModifiedDate":"2023-11-01"},{"lineNumber":49,"author":{"gitId":"kiatkat"},"content":"            @JsonProperty(\"description\") String description) {","lastModifiedDate":"2023-10-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"eyelessrhyme7"},"content":"        this.priority \u003d priority;","lastModifiedDate":"2023-10-17"},{"lineNumber":52,"author":{"gitId":"kiatkat"},"content":"        this.isRecurring \u003d isRecurring;","lastModifiedDate":"2023-10-30"},{"lineNumber":53,"author":{"gitId":"kiatkat"},"content":"        this.recurringType \u003d recurringType;","lastModifiedDate":"2023-10-30"},{"lineNumber":54,"author":{"gitId":"newway1814"},"content":"        this.dueDate \u003d dueDate;","lastModifiedDate":"2023-10-17"},{"lineNumber":55,"author":{"gitId":"newway1814"},"content":"        this.status \u003d status;","lastModifiedDate":"2023-10-16"},{"lineNumber":56,"author":{"gitId":"jack1e0"},"content":"        this.link \u003d link;","lastModifiedDate":"2023-10-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        if (tags !\u003d null) {","lastModifiedDate":"2023-01-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            this.tags.addAll(tags);","lastModifiedDate":"2023-01-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"kiatkat"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-10-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"newway1814"},"content":"     * Converts a given {@code Task} into this class for Jackson use.","lastModifiedDate":"2023-10-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"newway1814"},"content":"    public JsonAdaptedTask(Task source) {","lastModifiedDate":"2023-10-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"eyelessrhyme7"},"content":"        priority \u003d source.getPriority().value;","lastModifiedDate":"2023-10-17"},{"lineNumber":69,"author":{"gitId":"kiatkat"},"content":"        isRecurring \u003d source.getIsRecurring();","lastModifiedDate":"2023-10-30"},{"lineNumber":70,"author":{"gitId":"kiatkat"},"content":"        recurringType \u003d source.getRecurringType();","lastModifiedDate":"2023-10-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        tags.addAll(source.getTags().stream()","lastModifiedDate":"2023-01-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"yarnmengnus"},"content":"        link \u003d source.getLink().value;","lastModifiedDate":"2023-10-17"},{"lineNumber":75,"author":{"gitId":"eyelessrhyme7"},"content":"        dueDate \u003d source.getDueDate().toString();","lastModifiedDate":"2023-11-13"},{"lineNumber":76,"author":{"gitId":"newway1814"},"content":"        status \u003d source.getStatus().status;","lastModifiedDate":"2023-10-17"},{"lineNumber":77,"author":{"gitId":"kiatkat"},"content":"        description \u003d source.getDescription().description;","lastModifiedDate":"2023-10-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"newway1814"},"content":"     * Converts this Jackson-friendly adapted task object into the model\u0027s {@code Task} object.","lastModifiedDate":"2023-10-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"newway1814"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted task.","lastModifiedDate":"2023-10-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"newway1814"},"content":"    public Task toModelType() throws IllegalValueException {","lastModifiedDate":"2023-10-16"},{"lineNumber":86,"author":{"gitId":"newway1814"},"content":"        final List\u003cTag\u003e taskTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-16"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        for (JsonAdaptedTag tag : tags) {","lastModifiedDate":"2023-01-09"},{"lineNumber":88,"author":{"gitId":"newway1814"},"content":"            taskTags.add(tag.toModelType());","lastModifiedDate":"2023-10-16"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"eyelessrhyme7"},"content":"        if (priority \u003d\u003d null) {","lastModifiedDate":"2023-10-17"},{"lineNumber":100,"author":{"gitId":"eyelessrhyme7"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2023-10-17"},{"lineNumber":101,"author":{"gitId":"eyelessrhyme7"},"content":"                    Priority.class.getSimpleName()));","lastModifiedDate":"2023-10-17"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"eyelessrhyme7"},"content":"        if (!Priority.isValidPriority(priority)) {","lastModifiedDate":"2023-10-17"},{"lineNumber":104,"author":{"gitId":"eyelessrhyme7"},"content":"            throw new IllegalValueException(Priority.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-17"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"eyelessrhyme7"},"content":"        final Priority modelPriority \u003d new Priority(priority);","lastModifiedDate":"2023-10-17"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"kiatkat"},"content":"        final boolean modelIsRecurring \u003d isRecurring;","lastModifiedDate":"2023-10-30"},{"lineNumber":109,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":110,"author":{"gitId":"kiatkat"},"content":"        final Task.RecurringType modelRecurringType \u003d recurringType;","lastModifiedDate":"2023-10-30"},{"lineNumber":111,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":112,"author":{"gitId":"newway1814"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(taskTags);","lastModifiedDate":"2023-10-16"},{"lineNumber":113,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":114,"author":{"gitId":"yarnmengnus"},"content":"        String linkToLoad \u003d link;","lastModifiedDate":"2023-10-17"},{"lineNumber":115,"author":{"gitId":"yarnmengnus"},"content":"        if (link \u003d\u003d null) {","lastModifiedDate":"2023-10-17"},{"lineNumber":116,"author":{"gitId":"yarnmengnus"},"content":"            linkToLoad \u003d \"-\";","lastModifiedDate":"2023-10-17"},{"lineNumber":117,"author":{"gitId":"yarnmengnus"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":118,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":119,"author":{"gitId":"yarnmengnus"},"content":"        final Link modelLink \u003d new Link(linkToLoad);","lastModifiedDate":"2023-10-17"},{"lineNumber":120,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":121,"author":{"gitId":"jack1e0"},"content":"        if (dueDate \u003d\u003d null) {","lastModifiedDate":"2023-10-17"},{"lineNumber":122,"author":{"gitId":"jack1e0"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, DueDate.class.getSimpleName()));","lastModifiedDate":"2023-10-17"},{"lineNumber":123,"author":{"gitId":"jack1e0"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":124,"author":{"gitId":"jack1e0"},"content":"        if (!DueDate.isValidDate(dueDate)) {","lastModifiedDate":"2023-10-17"},{"lineNumber":125,"author":{"gitId":"jack1e0"},"content":"            throw new IllegalValueException(DueDate.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-17"},{"lineNumber":126,"author":{"gitId":"jack1e0"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":127,"author":{"gitId":"jack1e0"},"content":"        final DueDate modelDueDate \u003d new DueDate(dueDate);","lastModifiedDate":"2023-10-17"},{"lineNumber":128,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":129,"author":{"gitId":"newway1814"},"content":"        Status modelStatus \u003d Status.UNDONE_STATUS;","lastModifiedDate":"2023-10-16"},{"lineNumber":130,"author":{"gitId":"newway1814"},"content":"        if (status !\u003d null) {","lastModifiedDate":"2023-10-16"},{"lineNumber":131,"author":{"gitId":"newway1814"},"content":"            modelStatus \u003d new Status(status);","lastModifiedDate":"2023-10-16"},{"lineNumber":132,"author":{"gitId":"newway1814"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":133,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":134,"author":{"gitId":"kiatkat"},"content":"        if (description \u003d\u003d null) {","lastModifiedDate":"2023-10-26"},{"lineNumber":135,"author":{"gitId":"kiatkat"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2023-10-26"},{"lineNumber":136,"author":{"gitId":"kiatkat"},"content":"                    Description.class.getSimpleName()));","lastModifiedDate":"2023-10-26"},{"lineNumber":137,"author":{"gitId":"kiatkat"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":138,"author":{"gitId":"kiatkat"},"content":"        final Description modelDescription \u003d new Description(description);","lastModifiedDate":"2023-10-26"},{"lineNumber":139,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":140,"author":{"gitId":"kiatkat"},"content":"        return new Task(modelName, modelPriority, modelIsRecurring, modelRecurringType,","lastModifiedDate":"2023-10-30"},{"lineNumber":141,"author":{"gitId":"kiatkat"},"content":"                modelStatus, modelTags, modelDueDate,","lastModifiedDate":"2023-10-30"},{"lineNumber":142,"author":{"gitId":"kiatkat"},"content":"                modelLink, modelDescription);","lastModifiedDate":"2023-11-01"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":145,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"yarnmengnus":11,"jack1e0":11,"kiatkat":33,"eyelessrhyme7":13,"-":55,"newway1814":22}},{"path":"src/main/java/profplan/storage/JsonProfPlanStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kiatkat"},"content":"package profplan.storage;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"kiatkat"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"kiatkat"},"content":"import java.io.IOException;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"kiatkat"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"kiatkat"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"kiatkat"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"kiatkat"},"content":"import profplan.commons.core.LogsCenter;","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"kiatkat"},"content":"import profplan.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"kiatkat"},"content":"import profplan.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"kiatkat"},"content":"import profplan.commons.util.FileUtil;","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"kiatkat"},"content":"import profplan.commons.util.JsonUtil;","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"kiatkat"},"content":"import profplan.model.ReadOnlyProfPlan;","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"kiatkat"},"content":"/**","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"jack1e0"},"content":" * A class to access ProfPlan data stored as a json file on the hard disk.","lastModifiedDate":"2023-11-12"},{"lineNumber":19,"author":{"gitId":"kiatkat"},"content":" */","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"kiatkat"},"content":"public class JsonProfPlanStorage implements ProfPlanStorage {","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"kiatkat"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonProfPlanStorage.class);","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"kiatkat"},"content":"    private Path filePath;","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"kiatkat"},"content":"    public JsonProfPlanStorage(Path filePath) {","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"kiatkat"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"kiatkat"},"content":"    public Path getProfPlanFilePath() {","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"kiatkat"},"content":"        return filePath;","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"kiatkat"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"kiatkat"},"content":"    public Optional\u003cReadOnlyProfPlan\u003e readProfPlan() throws DataLoadingException {","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"kiatkat"},"content":"        return readProfPlan(filePath);","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"kiatkat"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"kiatkat"},"content":"     * Similar to {@link #readProfPlan()}.","lastModifiedDate":"2023-10-13"},{"lineNumber":41,"author":{"gitId":"kiatkat"},"content":"     *","lastModifiedDate":"2023-10-13"},{"lineNumber":42,"author":{"gitId":"kiatkat"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2023-10-13"},{"lineNumber":43,"author":{"gitId":"kiatkat"},"content":"     * @throws DataLoadingException if loading the data from storage failed.","lastModifiedDate":"2023-10-13"},{"lineNumber":44,"author":{"gitId":"kiatkat"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":45,"author":{"gitId":"kiatkat"},"content":"    public Optional\u003cReadOnlyProfPlan\u003e readProfPlan(Path filePath) throws DataLoadingException {","lastModifiedDate":"2023-10-13"},{"lineNumber":46,"author":{"gitId":"kiatkat"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2023-10-13"},{"lineNumber":47,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":48,"author":{"gitId":"jack1e0"},"content":"        Optional\u003cJsonSerializableProfPlan\u003e jsonProfPlan \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2023-11-12"},{"lineNumber":49,"author":{"gitId":"kiatkat"},"content":"                filePath, JsonSerializableProfPlan.class);","lastModifiedDate":"2023-10-13"},{"lineNumber":50,"author":{"gitId":"jack1e0"},"content":"        if (!jsonProfPlan.isPresent()) {","lastModifiedDate":"2023-11-12"},{"lineNumber":51,"author":{"gitId":"kiatkat"},"content":"            return Optional.empty();","lastModifiedDate":"2023-10-13"},{"lineNumber":52,"author":{"gitId":"kiatkat"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":53,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":54,"author":{"gitId":"kiatkat"},"content":"        try {","lastModifiedDate":"2023-10-13"},{"lineNumber":55,"author":{"gitId":"jack1e0"},"content":"            return Optional.of(jsonProfPlan.get().toModelType());","lastModifiedDate":"2023-11-12"},{"lineNumber":56,"author":{"gitId":"kiatkat"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2023-10-13"},{"lineNumber":57,"author":{"gitId":"kiatkat"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2023-10-13"},{"lineNumber":58,"author":{"gitId":"kiatkat"},"content":"            throw new DataLoadingException(ive);","lastModifiedDate":"2023-10-13"},{"lineNumber":59,"author":{"gitId":"kiatkat"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":60,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":61,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":62,"author":{"gitId":"kiatkat"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":63,"author":{"gitId":"jack1e0"},"content":"    public void saveProfPlan(ReadOnlyProfPlan profPlan) throws IOException {","lastModifiedDate":"2023-11-12"},{"lineNumber":64,"author":{"gitId":"jack1e0"},"content":"        saveProfPlan(profPlan, filePath);","lastModifiedDate":"2023-11-12"},{"lineNumber":65,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":66,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":67,"author":{"gitId":"kiatkat"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":68,"author":{"gitId":"kiatkat"},"content":"     * Similar to {@link #saveProfPlan(ReadOnlyProfPlan)}.","lastModifiedDate":"2023-10-13"},{"lineNumber":69,"author":{"gitId":"kiatkat"},"content":"     *","lastModifiedDate":"2023-10-13"},{"lineNumber":70,"author":{"gitId":"kiatkat"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2023-10-13"},{"lineNumber":71,"author":{"gitId":"kiatkat"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":72,"author":{"gitId":"jack1e0"},"content":"    public void saveProfPlan(ReadOnlyProfPlan profPlan, Path filePath) throws IOException {","lastModifiedDate":"2023-10-17"},{"lineNumber":73,"author":{"gitId":"jack1e0"},"content":"        requireNonNull(profPlan);","lastModifiedDate":"2023-10-17"},{"lineNumber":74,"author":{"gitId":"kiatkat"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2023-10-13"},{"lineNumber":75,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":76,"author":{"gitId":"kiatkat"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2023-10-13"},{"lineNumber":77,"author":{"gitId":"jack1e0"},"content":"        JsonUtil.saveJsonFile(new JsonSerializableProfPlan(profPlan), filePath);","lastModifiedDate":"2023-10-17"},{"lineNumber":78,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":79,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":80,"author":{"gitId":"kiatkat"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"jack1e0":9,"kiatkat":71}},{"path":"src/main/java/profplan/storage/JsonSerializableProfPlan.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kiatkat"},"content":"package profplan.storage;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"kiatkat"},"content":"import profplan.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"kiatkat"},"content":"import profplan.model.ProfPlan;","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"kiatkat"},"content":"import profplan.model.ReadOnlyProfPlan;","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"newway1814"},"content":"import profplan.model.task.Task;","lastModifiedDate":"2023-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"kiatkat"},"content":" * An Immutable ProfPlan that is serializable to JSON format.","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"jack1e0"},"content":"@JsonRootName(value \u003d \"profplan\")","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"kiatkat"},"content":"class JsonSerializableProfPlan {","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"newway1814"},"content":"    public static final String MESSAGE_DUPLICATE_TASK \u003d \"Tasks list contains duplicate task(s).\";","lastModifiedDate":"2023-10-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"newway1814"},"content":"    private final List\u003cJsonAdaptedTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"newway1814"},"content":"     * Constructs a {@code JsonSerializableProfPlan} with the given tasks.","lastModifiedDate":"2023-10-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"newway1814"},"content":"    public JsonSerializableProfPlan(@JsonProperty(\"tasks\") List\u003cJsonAdaptedTask\u003e tasks) {","lastModifiedDate":"2023-10-16"},{"lineNumber":31,"author":{"gitId":"newway1814"},"content":"        this.tasks.addAll(tasks);","lastModifiedDate":"2023-10-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"kiatkat"},"content":"     * Converts a given {@code ReadOnlyProfPlan} into this class for Jackson use.","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"kiatkat"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableProfPlan}.","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"kiatkat"},"content":"    public JsonSerializableProfPlan(ReadOnlyProfPlan source) {","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"newway1814"},"content":"        tasks.addAll(source.getTaskList().stream().map(JsonAdaptedTask::new).collect(Collectors.toList()));","lastModifiedDate":"2023-10-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"jack1e0"},"content":"     * Converts this task list into the model\u0027s {@code ProfPlan} object.","lastModifiedDate":"2023-11-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"kiatkat"},"content":"    public ProfPlan toModelType() throws IllegalValueException {","lastModifiedDate":"2023-10-13"},{"lineNumber":49,"author":{"gitId":"kiatkat"},"content":"        ProfPlan profPlan \u003d new ProfPlan();","lastModifiedDate":"2023-10-13"},{"lineNumber":50,"author":{"gitId":"newway1814"},"content":"        for (JsonAdaptedTask jsonAdaptedTask : tasks) {","lastModifiedDate":"2023-10-16"},{"lineNumber":51,"author":{"gitId":"newway1814"},"content":"            Task task \u003d jsonAdaptedTask.toModelType();","lastModifiedDate":"2023-10-16"},{"lineNumber":52,"author":{"gitId":"newway1814"},"content":"            if (profPlan.hasTask(task)) {","lastModifiedDate":"2023-10-16"},{"lineNumber":53,"author":{"gitId":"newway1814"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_TASK);","lastModifiedDate":"2023-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"newway1814"},"content":"            profPlan.addTask(task);","lastModifiedDate":"2023-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"kiatkat"},"content":"        return profPlan;","lastModifiedDate":"2023-10-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"jack1e0":2,"kiatkat":12,"-":34,"newway1814":12}},{"path":"src/main/java/profplan/storage/JsonUserConfigsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kiatkat"},"content":"package profplan.storage;","lastModifiedDate":"2023-11-01"},{"lineNumber":2,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":3,"author":{"gitId":"kiatkat"},"content":"import java.io.IOException;","lastModifiedDate":"2023-11-01"},{"lineNumber":4,"author":{"gitId":"kiatkat"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-11-01"},{"lineNumber":5,"author":{"gitId":"kiatkat"},"content":"import java.util.Optional;","lastModifiedDate":"2023-11-01"},{"lineNumber":6,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":7,"author":{"gitId":"kiatkat"},"content":"import profplan.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-11-01"},{"lineNumber":8,"author":{"gitId":"kiatkat"},"content":"import profplan.commons.util.JsonUtil;","lastModifiedDate":"2023-11-01"},{"lineNumber":9,"author":{"gitId":"kiatkat"},"content":"import profplan.model.ReadOnlyUserConfigs;","lastModifiedDate":"2023-11-01"},{"lineNumber":10,"author":{"gitId":"kiatkat"},"content":"import profplan.model.UserConfigs;","lastModifiedDate":"2023-11-01"},{"lineNumber":11,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":12,"author":{"gitId":"kiatkat"},"content":"/**","lastModifiedDate":"2023-11-01"},{"lineNumber":13,"author":{"gitId":"kiatkat"},"content":" * A class to access UserConfigs stored in the hard disk as a json file","lastModifiedDate":"2023-11-01"},{"lineNumber":14,"author":{"gitId":"kiatkat"},"content":" */","lastModifiedDate":"2023-11-01"},{"lineNumber":15,"author":{"gitId":"kiatkat"},"content":"public class JsonUserConfigsStorage implements UserConfigsStorage {","lastModifiedDate":"2023-11-01"},{"lineNumber":16,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":17,"author":{"gitId":"kiatkat"},"content":"    private Path filePath;","lastModifiedDate":"2023-11-01"},{"lineNumber":18,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":19,"author":{"gitId":"kiatkat"},"content":"    public JsonUserConfigsStorage(Path filePath) {","lastModifiedDate":"2023-11-01"},{"lineNumber":20,"author":{"gitId":"kiatkat"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-11-01"},{"lineNumber":21,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":22,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":23,"author":{"gitId":"kiatkat"},"content":"    @Override","lastModifiedDate":"2023-11-01"},{"lineNumber":24,"author":{"gitId":"kiatkat"},"content":"    public Path getUserConfigsFilePath() {","lastModifiedDate":"2023-11-01"},{"lineNumber":25,"author":{"gitId":"kiatkat"},"content":"        return filePath;","lastModifiedDate":"2023-11-01"},{"lineNumber":26,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":27,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":28,"author":{"gitId":"kiatkat"},"content":"    @Override","lastModifiedDate":"2023-11-01"},{"lineNumber":29,"author":{"gitId":"kiatkat"},"content":"    public Optional\u003cUserConfigs\u003e readUserConfigs() throws DataLoadingException {","lastModifiedDate":"2023-11-01"},{"lineNumber":30,"author":{"gitId":"kiatkat"},"content":"        return readUserConfigs(filePath);","lastModifiedDate":"2023-11-01"},{"lineNumber":31,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":32,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":33,"author":{"gitId":"kiatkat"},"content":"    /**","lastModifiedDate":"2023-11-01"},{"lineNumber":34,"author":{"gitId":"kiatkat"},"content":"     * Similar to {@link #readUserConfigs()}","lastModifiedDate":"2023-11-01"},{"lineNumber":35,"author":{"gitId":"kiatkat"},"content":"     * @param configsFilePath location of the data. Cannot be null.","lastModifiedDate":"2023-11-01"},{"lineNumber":36,"author":{"gitId":"kiatkat"},"content":"     * @throws DataLoadingException if the file format is not as expected.","lastModifiedDate":"2023-11-01"},{"lineNumber":37,"author":{"gitId":"kiatkat"},"content":"     */","lastModifiedDate":"2023-11-01"},{"lineNumber":38,"author":{"gitId":"kiatkat"},"content":"    public Optional\u003cUserConfigs\u003e readUserConfigs(Path configsFilePath) throws DataLoadingException {","lastModifiedDate":"2023-11-01"},{"lineNumber":39,"author":{"gitId":"kiatkat"},"content":"        return JsonUtil.readJsonFile(configsFilePath, UserConfigs.class);","lastModifiedDate":"2023-11-01"},{"lineNumber":40,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":41,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":42,"author":{"gitId":"kiatkat"},"content":"    @Override","lastModifiedDate":"2023-11-01"},{"lineNumber":43,"author":{"gitId":"kiatkat"},"content":"    public void saveUserConfigs(ReadOnlyUserConfigs userConfigs) throws IOException {","lastModifiedDate":"2023-11-01"},{"lineNumber":44,"author":{"gitId":"kiatkat"},"content":"        JsonUtil.saveJsonFile(userConfigs, filePath);","lastModifiedDate":"2023-11-01"},{"lineNumber":45,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":46,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":47,"author":{"gitId":"kiatkat"},"content":"}","lastModifiedDate":"2023-11-01"}],"authorContributionMap":{"kiatkat":47}},{"path":"src/main/java/profplan/storage/JsonUserPrefsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kiatkat"},"content":"package profplan.storage;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"kiatkat"},"content":"import profplan.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"kiatkat"},"content":"import profplan.commons.util.JsonUtil;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"kiatkat"},"content":"import profplan.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"kiatkat"},"content":"import profplan.model.UserPrefs;","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A class to access UserPrefs stored in the hard disk as a json file","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorage implements UserPrefsStorage {","lastModifiedDate":"2016-10-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path filePath;","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public JsonUserPrefsStorage(Path filePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        return filePath;","lastModifiedDate":"2017-02-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return readUserPrefs(filePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Similar to {@link #readUserPrefs()}","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param prefsFilePath location of the data. Cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws DataLoadingException if the file format is not as expected.","lastModifiedDate":"2023-06-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs(Path prefsFilePath) throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return JsonUtil.readJsonFile(prefsFilePath, UserPrefs.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(userPrefs, filePath);","lastModifiedDate":"2016-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"kiatkat":5,"-":42}},{"path":"src/main/java/profplan/storage/ProfPlanStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kiatkat"},"content":"package profplan.storage;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"kiatkat"},"content":"import java.io.IOException;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"kiatkat"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"kiatkat"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"kiatkat"},"content":"import profplan.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"kiatkat"},"content":"import profplan.model.ProfPlan;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"kiatkat"},"content":"import profplan.model.ReadOnlyProfPlan;","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"kiatkat"},"content":"/**","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"kiatkat"},"content":" * Represents a storage for {@link ProfPlan}.","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"kiatkat"},"content":" */","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"kiatkat"},"content":"public interface ProfPlanStorage {","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"kiatkat"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"kiatkat"},"content":"     * Returns the file path of the data file.","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"kiatkat"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"kiatkat"},"content":"    Path getProfPlanFilePath();","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"kiatkat"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"kiatkat"},"content":"     * Returns ProfPlan data as a {@link ReadOnlyProfPlan}.","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"kiatkat"},"content":"     * Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"kiatkat"},"content":"     *","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"kiatkat"},"content":"     * @throws DataLoadingException if loading the data from storage failed.","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"kiatkat"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"kiatkat"},"content":"    Optional\u003cReadOnlyProfPlan\u003e readProfPlan() throws DataLoadingException;","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"kiatkat"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"kiatkat"},"content":"     * @see #getProfPlanFilePath()","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"kiatkat"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"kiatkat"},"content":"    Optional\u003cReadOnlyProfPlan\u003e readProfPlan(Path filePath) throws DataLoadingException;","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"kiatkat"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"kiatkat"},"content":"     * Saves the given {@link ReadOnlyProfPlan} to the storage.","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"kiatkat"},"content":"     * @param profPlan cannot be null.","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"kiatkat"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"kiatkat"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"kiatkat"},"content":"    void saveProfPlan(ReadOnlyProfPlan profPlan) throws IOException;","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":41,"author":{"gitId":"kiatkat"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":42,"author":{"gitId":"kiatkat"},"content":"     * @see #saveProfPlan(ReadOnlyProfPlan)","lastModifiedDate":"2023-10-13"},{"lineNumber":43,"author":{"gitId":"kiatkat"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":44,"author":{"gitId":"jack1e0"},"content":"    void saveProfPlan(ReadOnlyProfPlan profPlan, Path filePath) throws IOException;","lastModifiedDate":"2023-11-12"},{"lineNumber":45,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":46,"author":{"gitId":"kiatkat"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"jack1e0":1,"kiatkat":45}},{"path":"src/main/java/profplan/storage/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kiatkat"},"content":"package profplan.storage;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"kiatkat"},"content":"import java.io.IOException;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"kiatkat"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"kiatkat"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"kiatkat"},"content":"import profplan.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"kiatkat"},"content":"import profplan.model.ReadOnlyProfPlan;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"kiatkat"},"content":"import profplan.model.ReadOnlyUserConfigs;","lastModifiedDate":"2023-11-01"},{"lineNumber":10,"author":{"gitId":"kiatkat"},"content":"import profplan.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"kiatkat"},"content":"import profplan.model.UserConfigs;","lastModifiedDate":"2023-11-01"},{"lineNumber":12,"author":{"gitId":"kiatkat"},"content":"import profplan.model.UserPrefs;","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"kiatkat"},"content":"/**","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"kiatkat"},"content":" * API of the Storage component","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"kiatkat"},"content":" */","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"kiatkat"},"content":"public interface Storage extends ProfPlanStorage, UserPrefsStorage, UserConfigsStorage {","lastModifiedDate":"2023-11-01"},{"lineNumber":18,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"kiatkat"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"kiatkat"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataLoadingException;","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"kiatkat"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"kiatkat"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"kiatkat"},"content":"    @Override","lastModifiedDate":"2023-11-01"},{"lineNumber":26,"author":{"gitId":"kiatkat"},"content":"    Path getUserConfigsFilePath();","lastModifiedDate":"2023-11-01"},{"lineNumber":27,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":28,"author":{"gitId":"kiatkat"},"content":"    @Override","lastModifiedDate":"2023-11-01"},{"lineNumber":29,"author":{"gitId":"kiatkat"},"content":"    Optional\u003cUserConfigs\u003e readUserConfigs() throws DataLoadingException;","lastModifiedDate":"2023-11-01"},{"lineNumber":30,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":31,"author":{"gitId":"kiatkat"},"content":"    @Override","lastModifiedDate":"2023-11-01"},{"lineNumber":32,"author":{"gitId":"kiatkat"},"content":"    void saveUserConfigs(ReadOnlyUserConfigs userConfigs) throws IOException;","lastModifiedDate":"2023-11-01"},{"lineNumber":33,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":34,"author":{"gitId":"kiatkat"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"kiatkat"},"content":"    Path getProfPlanFilePath();","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"kiatkat"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"kiatkat"},"content":"    Optional\u003cReadOnlyProfPlan\u003e readProfPlan() throws DataLoadingException;","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"kiatkat"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":41,"author":{"gitId":"jack1e0"},"content":"    void saveProfPlan(ReadOnlyProfPlan profPlan) throws IOException;","lastModifiedDate":"2023-11-12"},{"lineNumber":42,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":43,"author":{"gitId":"kiatkat"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"jack1e0":1,"kiatkat":42}},{"path":"src/main/java/profplan/storage/StorageManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kiatkat"},"content":"package profplan.storage;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"kiatkat"},"content":"import java.io.IOException;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"kiatkat"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"kiatkat"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"kiatkat"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"kiatkat"},"content":"import profplan.commons.core.LogsCenter;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"kiatkat"},"content":"import profplan.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"kiatkat"},"content":"import profplan.model.ReadOnlyProfPlan;","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"kiatkat"},"content":"import profplan.model.ReadOnlyUserConfigs;","lastModifiedDate":"2023-11-01"},{"lineNumber":12,"author":{"gitId":"kiatkat"},"content":"import profplan.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"kiatkat"},"content":"import profplan.model.UserConfigs;","lastModifiedDate":"2023-11-01"},{"lineNumber":14,"author":{"gitId":"kiatkat"},"content":"import profplan.model.UserPrefs;","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"kiatkat"},"content":"/**","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"jack1e0"},"content":" * Manages storage of ProfPlan data in local storage.","lastModifiedDate":"2023-11-12"},{"lineNumber":18,"author":{"gitId":"kiatkat"},"content":" */","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"kiatkat"},"content":"public class StorageManager implements Storage {","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"kiatkat"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(StorageManager.class);","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"kiatkat"},"content":"    private ProfPlanStorage profPlanStorage;","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"kiatkat"},"content":"    private UserPrefsStorage userPrefsStorage;","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"kiatkat"},"content":"    private UserConfigsStorage userConfigsStorage;","lastModifiedDate":"2023-11-01"},{"lineNumber":25,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"kiatkat"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"kiatkat"},"content":"     * Creates a {@code StorageManager} with the given {@code ProfPlanStorage} and {@code UserPrefStorage}.","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"kiatkat"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"kiatkat"},"content":"    public StorageManager(ProfPlanStorage profPlanStorage, UserPrefsStorage userPrefsStorage,","lastModifiedDate":"2023-11-01"},{"lineNumber":30,"author":{"gitId":"kiatkat"},"content":"                          UserConfigsStorage userConfigsStorage) {","lastModifiedDate":"2023-11-01"},{"lineNumber":31,"author":{"gitId":"kiatkat"},"content":"        this.profPlanStorage \u003d profPlanStorage;","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"kiatkat"},"content":"        this.userPrefsStorage \u003d userPrefsStorage;","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"kiatkat"},"content":"        this.userConfigsStorage \u003d userConfigsStorage;","lastModifiedDate":"2023-11-01"},{"lineNumber":34,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"kiatkat"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"kiatkat"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"kiatkat"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"kiatkat"},"content":"        return userPrefsStorage.getUserPrefsFilePath();","lastModifiedDate":"2023-10-13"},{"lineNumber":41,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":42,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":43,"author":{"gitId":"kiatkat"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":44,"author":{"gitId":"kiatkat"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataLoadingException {","lastModifiedDate":"2023-10-13"},{"lineNumber":45,"author":{"gitId":"kiatkat"},"content":"        return userPrefsStorage.readUserPrefs();","lastModifiedDate":"2023-10-13"},{"lineNumber":46,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":47,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":48,"author":{"gitId":"kiatkat"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":49,"author":{"gitId":"kiatkat"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2023-10-13"},{"lineNumber":50,"author":{"gitId":"kiatkat"},"content":"        userPrefsStorage.saveUserPrefs(userPrefs);","lastModifiedDate":"2023-10-13"},{"lineNumber":51,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":52,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":53,"author":{"gitId":"kiatkat"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserConfigs methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-11-01"},{"lineNumber":54,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":55,"author":{"gitId":"kiatkat"},"content":"    @Override","lastModifiedDate":"2023-11-01"},{"lineNumber":56,"author":{"gitId":"kiatkat"},"content":"    public Path getUserConfigsFilePath() {","lastModifiedDate":"2023-11-01"},{"lineNumber":57,"author":{"gitId":"kiatkat"},"content":"        return userConfigsStorage.getUserConfigsFilePath();","lastModifiedDate":"2023-11-01"},{"lineNumber":58,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":59,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":60,"author":{"gitId":"kiatkat"},"content":"    @Override","lastModifiedDate":"2023-11-01"},{"lineNumber":61,"author":{"gitId":"kiatkat"},"content":"    public Optional\u003cUserConfigs\u003e readUserConfigs() throws DataLoadingException {","lastModifiedDate":"2023-11-01"},{"lineNumber":62,"author":{"gitId":"kiatkat"},"content":"        return userConfigsStorage.readUserConfigs();","lastModifiedDate":"2023-11-01"},{"lineNumber":63,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":64,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":65,"author":{"gitId":"kiatkat"},"content":"    @Override","lastModifiedDate":"2023-11-01"},{"lineNumber":66,"author":{"gitId":"kiatkat"},"content":"    public void saveUserConfigs(ReadOnlyUserConfigs userConfigs) throws IOException {","lastModifiedDate":"2023-11-01"},{"lineNumber":67,"author":{"gitId":"kiatkat"},"content":"        userConfigsStorage.saveUserConfigs(userConfigs);","lastModifiedDate":"2023-11-01"},{"lineNumber":68,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":69,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":70,"author":{"gitId":"kiatkat"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d ProfPlan methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-11-01"},{"lineNumber":71,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":72,"author":{"gitId":"kiatkat"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":73,"author":{"gitId":"kiatkat"},"content":"    public Path getProfPlanFilePath() {","lastModifiedDate":"2023-10-13"},{"lineNumber":74,"author":{"gitId":"kiatkat"},"content":"        return profPlanStorage.getProfPlanFilePath();","lastModifiedDate":"2023-10-13"},{"lineNumber":75,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":76,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":77,"author":{"gitId":"kiatkat"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":78,"author":{"gitId":"kiatkat"},"content":"    public Optional\u003cReadOnlyProfPlan\u003e readProfPlan() throws DataLoadingException {","lastModifiedDate":"2023-10-13"},{"lineNumber":79,"author":{"gitId":"kiatkat"},"content":"        return readProfPlan(profPlanStorage.getProfPlanFilePath());","lastModifiedDate":"2023-10-13"},{"lineNumber":80,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":81,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":82,"author":{"gitId":"kiatkat"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":83,"author":{"gitId":"kiatkat"},"content":"    public Optional\u003cReadOnlyProfPlan\u003e readProfPlan(Path filePath) throws DataLoadingException {","lastModifiedDate":"2023-10-13"},{"lineNumber":84,"author":{"gitId":"kiatkat"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2023-10-13"},{"lineNumber":85,"author":{"gitId":"kiatkat"},"content":"        return profPlanStorage.readProfPlan(filePath);","lastModifiedDate":"2023-10-13"},{"lineNumber":86,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":87,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":88,"author":{"gitId":"kiatkat"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":89,"author":{"gitId":"jack1e0"},"content":"    public void saveProfPlan(ReadOnlyProfPlan profPlan) throws IOException {","lastModifiedDate":"2023-11-12"},{"lineNumber":90,"author":{"gitId":"jack1e0"},"content":"        saveProfPlan(profPlan, profPlanStorage.getProfPlanFilePath());","lastModifiedDate":"2023-11-12"},{"lineNumber":91,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":92,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":93,"author":{"gitId":"kiatkat"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":94,"author":{"gitId":"jack1e0"},"content":"    public void saveProfPlan(ReadOnlyProfPlan profPlan, Path filePath) throws IOException {","lastModifiedDate":"2023-11-12"},{"lineNumber":95,"author":{"gitId":"kiatkat"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2023-10-13"},{"lineNumber":96,"author":{"gitId":"jack1e0"},"content":"        profPlanStorage.saveProfPlan(profPlan, filePath);","lastModifiedDate":"2023-11-12"},{"lineNumber":97,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":98,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":99,"author":{"gitId":"kiatkat"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"jack1e0":5,"kiatkat":94}},{"path":"src/main/java/profplan/storage/UserConfigsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kiatkat"},"content":"package profplan.storage;","lastModifiedDate":"2023-11-01"},{"lineNumber":2,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":3,"author":{"gitId":"kiatkat"},"content":"import java.io.IOException;","lastModifiedDate":"2023-11-01"},{"lineNumber":4,"author":{"gitId":"kiatkat"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-11-01"},{"lineNumber":5,"author":{"gitId":"kiatkat"},"content":"import java.util.Optional;","lastModifiedDate":"2023-11-01"},{"lineNumber":6,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":7,"author":{"gitId":"kiatkat"},"content":"import profplan.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-11-01"},{"lineNumber":8,"author":{"gitId":"kiatkat"},"content":"import profplan.model.ReadOnlyUserConfigs;","lastModifiedDate":"2023-11-01"},{"lineNumber":9,"author":{"gitId":"kiatkat"},"content":"import profplan.model.UserConfigs;","lastModifiedDate":"2023-11-01"},{"lineNumber":10,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":11,"author":{"gitId":"kiatkat"},"content":"/**","lastModifiedDate":"2023-11-01"},{"lineNumber":12,"author":{"gitId":"kiatkat"},"content":" * Represents a storage for {@link profplan.model.UserConfigs}.","lastModifiedDate":"2023-11-01"},{"lineNumber":13,"author":{"gitId":"kiatkat"},"content":" */","lastModifiedDate":"2023-11-01"},{"lineNumber":14,"author":{"gitId":"kiatkat"},"content":"public interface UserConfigsStorage {","lastModifiedDate":"2023-11-01"},{"lineNumber":15,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":16,"author":{"gitId":"kiatkat"},"content":"    /**","lastModifiedDate":"2023-11-01"},{"lineNumber":17,"author":{"gitId":"kiatkat"},"content":"     * Returns the file path of the UserConfigs data file.","lastModifiedDate":"2023-11-01"},{"lineNumber":18,"author":{"gitId":"kiatkat"},"content":"     */","lastModifiedDate":"2023-11-01"},{"lineNumber":19,"author":{"gitId":"kiatkat"},"content":"    Path getUserConfigsFilePath();","lastModifiedDate":"2023-11-01"},{"lineNumber":20,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":21,"author":{"gitId":"kiatkat"},"content":"    /**","lastModifiedDate":"2023-11-01"},{"lineNumber":22,"author":{"gitId":"kiatkat"},"content":"     * Returns UserConfigs data from storage.","lastModifiedDate":"2023-11-01"},{"lineNumber":23,"author":{"gitId":"kiatkat"},"content":"     * Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2023-11-01"},{"lineNumber":24,"author":{"gitId":"kiatkat"},"content":"     *","lastModifiedDate":"2023-11-01"},{"lineNumber":25,"author":{"gitId":"kiatkat"},"content":"     * @throws DataLoadingException if the loading of data from preference file failed.","lastModifiedDate":"2023-11-01"},{"lineNumber":26,"author":{"gitId":"kiatkat"},"content":"     */","lastModifiedDate":"2023-11-01"},{"lineNumber":27,"author":{"gitId":"kiatkat"},"content":"    Optional\u003cUserConfigs\u003e readUserConfigs() throws DataLoadingException;","lastModifiedDate":"2023-11-01"},{"lineNumber":28,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":29,"author":{"gitId":"kiatkat"},"content":"    /**","lastModifiedDate":"2023-11-01"},{"lineNumber":30,"author":{"gitId":"kiatkat"},"content":"     * Saves the given {@link ReadOnlyUserConfigs} to the storage.","lastModifiedDate":"2023-11-01"},{"lineNumber":31,"author":{"gitId":"kiatkat"},"content":"     * @param userConfigs cannot be null.","lastModifiedDate":"2023-11-01"},{"lineNumber":32,"author":{"gitId":"kiatkat"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2023-11-01"},{"lineNumber":33,"author":{"gitId":"kiatkat"},"content":"     */","lastModifiedDate":"2023-11-01"},{"lineNumber":34,"author":{"gitId":"kiatkat"},"content":"    void saveUserConfigs(ReadOnlyUserConfigs userConfigs) throws IOException;","lastModifiedDate":"2023-11-01"},{"lineNumber":35,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":36,"author":{"gitId":"kiatkat"},"content":"}","lastModifiedDate":"2023-11-01"}],"authorContributionMap":{"kiatkat":36}},{"path":"src/main/java/profplan/storage/UserPrefsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kiatkat"},"content":"package profplan.storage;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"kiatkat"},"content":"import profplan.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"kiatkat"},"content":"import profplan.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"kiatkat"},"content":"import profplan.model.UserPrefs;","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"kiatkat"},"content":" * Represents a storage for {@link UserPrefs}.","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public interface UserPrefsStorage {","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Returns the file path of the UserPrefs data file.","lastModifiedDate":"2017-02-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    Path getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Returns UserPrefs data from storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2016-09-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-06-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @throws DataLoadingException if the loading of data from preference file failed.","lastModifiedDate":"2023-06-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataLoadingException;","lastModifiedDate":"2023-06-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"kiatkat"},"content":"     * Saves the given {@link ReadOnlyUserPrefs} to the storage.","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @param userPrefs cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"kiatkat":6,"-":30}},{"path":"src/main/java/profplan/ui/CommandBox.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kiatkat"},"content":"package profplan.ui;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":7,"author":{"gitId":"kiatkat"},"content":"import profplan.logic.Logic;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"kiatkat"},"content":"import profplan.logic.commands.CommandResult;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"kiatkat"},"content":"import profplan.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"kiatkat"},"content":"import profplan.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * The UI component that is responsible for receiving user command inputs.","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class CommandBox extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String ERROR_STYLE_CLASS \u003d \"error\";","lastModifiedDate":"2017-02-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"CommandBox.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final CommandExecutor commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private TextField commandTextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Creates a {@code CommandBox} with the given {@code CommandExecutor}.","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public CommandBox(CommandExecutor commandExecutor) {","lastModifiedDate":"2019-01-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.commandExecutor \u003d commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // calls #setStyleToDefault() whenever there is a change to the text of the command box.","lastModifiedDate":"2017-06-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        commandTextField.textProperty().addListener((unused1, unused2, unused3) -\u003e setStyleToDefault());","lastModifiedDate":"2017-06-28"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Handles the Enter button pressed event.","lastModifiedDate":"2017-08-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private void handleCommandEntered() {","lastModifiedDate":"2018-04-01"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        String commandText \u003d commandTextField.getText();","lastModifiedDate":"2020-12-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        if (commandText.equals(\"\")) {","lastModifiedDate":"2020-12-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2020-12-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-02-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            commandExecutor.execute(commandText);","lastModifiedDate":"2020-12-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            commandTextField.setText(\"\");","lastModifiedDate":"2016-09-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2017-03-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            setStyleToIndicateCommandFailure();","lastModifiedDate":"2017-02-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Sets the command box style to use the default style.","lastModifiedDate":"2017-06-28"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    private void setStyleToDefault() {","lastModifiedDate":"2017-06-28"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        commandTextField.getStyleClass().remove(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-02-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Sets the command box style to indicate a failed command.","lastModifiedDate":"2017-02-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    private void setStyleToIndicateCommandFailure() {","lastModifiedDate":"2017-02-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        ObservableList\u003cString\u003e styleClass \u003d commandTextField.getStyleClass();","lastModifiedDate":"2017-03-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        if (styleClass.contains(ERROR_STYLE_CLASS)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2017-03-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        styleClass.add(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-03-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Represents a function that can execute commands.","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @FunctionalInterface","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public interface CommandExecutor {","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"         * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"kiatkat"},"content":"         * @see Logic#execute(String)","lastModifiedDate":"2023-10-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"}],"authorContributionMap":{"kiatkat":6,"-":80}},{"path":"src/main/java/profplan/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kiatkat"},"content":"package profplan.ui;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"kiatkat"},"content":"import profplan.commons.core.LogsCenter;","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"eyelessrhyme7"},"content":"    public static final String USERGUIDE_URL \u003d \"https://ay2324s1-cs2103t-w15-1.github.io/tp/UserGuide.html\";","lastModifiedDate":"2023-11-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String HELP_MESSAGE \u003d \"Refer to the user guide: \" + USERGUIDE_URL;","lastModifiedDate":"2019-08-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     *     \u003cul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     *             if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     *             if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *             if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *             if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     *     \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2019-08-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2019-08-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2019-08-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        url.putString(USERGUIDE_URL);","lastModifiedDate":"2019-08-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2019-08-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"kiatkat":2,"eyelessrhyme7":1,"-":99}},{"path":"src/main/java/profplan/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kiatkat"},"content":"package profplan.ui;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"newway1814"},"content":"import java.text.SimpleDateFormat;","lastModifiedDate":"2023-10-31"},{"lineNumber":4,"author":{"gitId":"newway1814"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-31"},{"lineNumber":5,"author":{"gitId":"newway1814"},"content":"import java.util.Collections;","lastModifiedDate":"2023-10-31"},{"lineNumber":6,"author":{"gitId":"newway1814"},"content":"import java.util.Date;","lastModifiedDate":"2023-10-31"},{"lineNumber":7,"author":{"gitId":"newway1814"},"content":"import java.util.List;","lastModifiedDate":"2023-10-31"},{"lineNumber":8,"author":{"gitId":"newway1814"},"content":"import java.util.concurrent.TimeUnit;","lastModifiedDate":"2023-10-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":10,"author":{"gitId":"newway1814"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-10-31"},{"lineNumber":11,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":12,"author":{"gitId":"newway1814"},"content":"import javafx.beans.property.ReadOnlyObjectWrapper;","lastModifiedDate":"2023-10-31"},{"lineNumber":13,"author":{"gitId":"newway1814"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-10-31"},{"lineNumber":14,"author":{"gitId":"newway1814"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-10-31"},{"lineNumber":15,"author":{"gitId":"newway1814"},"content":"import javafx.collections.ObservableMap;","lastModifiedDate":"2023-10-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":18,"author":{"gitId":"newway1814"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2023-10-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":20,"author":{"gitId":"newway1814"},"content":"import javafx.scene.control.TableColumn;","lastModifiedDate":"2023-10-31"},{"lineNumber":21,"author":{"gitId":"newway1814"},"content":"import javafx.scene.control.TableView;","lastModifiedDate":"2023-10-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":25,"author":{"gitId":"newway1814"},"content":"import javafx.scene.layout.GridPane;","lastModifiedDate":"2023-10-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":27,"author":{"gitId":"newway1814"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-10-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":29,"author":{"gitId":"kiatkat"},"content":"import profplan.commons.core.GuiSettings;","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"kiatkat"},"content":"import profplan.commons.core.LogsCenter;","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"kiatkat"},"content":"import profplan.logic.Logic;","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"kiatkat"},"content":"import profplan.logic.commands.CommandResult;","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"kiatkat"},"content":"import profplan.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"kiatkat"},"content":"import profplan.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"newway1814"},"content":"import profplan.model.task.DueDate;","lastModifiedDate":"2023-10-31"},{"lineNumber":36,"author":{"gitId":"newway1814"},"content":"import profplan.model.task.Task;","lastModifiedDate":"2023-10-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":52,"author":{"gitId":"newway1814"},"content":"    private TaskListPanel taskListPanel;","lastModifiedDate":"2023-10-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"newway1814"},"content":"    private StackPane taskListPanelPlaceholder;","lastModifiedDate":"2023-10-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"newway1814"},"content":"    @FXML","lastModifiedDate":"2023-10-31"},{"lineNumber":69,"author":{"gitId":"newway1814"},"content":"    private VBox taskList;","lastModifiedDate":"2023-10-31"},{"lineNumber":70,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":71,"author":{"gitId":"newway1814"},"content":"    @FXML","lastModifiedDate":"2023-10-31"},{"lineNumber":72,"author":{"gitId":"newway1814"},"content":"    private GridPane resultGrid;","lastModifiedDate":"2023-10-31"},{"lineNumber":73,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":74,"author":{"gitId":"newway1814"},"content":"    @FXML","lastModifiedDate":"2023-10-31"},{"lineNumber":75,"author":{"gitId":"newway1814"},"content":"    private TableView matrixDisplay;","lastModifiedDate":"2023-10-31"},{"lineNumber":76,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":80,"author":{"gitId":"newway1814"},"content":"    private class Order {","lastModifiedDate":"2023-10-31"},{"lineNumber":81,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":82,"author":{"gitId":"newway1814"},"content":"        private final ObservableMap\u003cLong, List\u003cTask\u003e\u003e priorityTask \u003d FXCollections.observableHashMap();","lastModifiedDate":"2023-10-31"},{"lineNumber":83,"author":{"gitId":"newway1814"},"content":"        private final String priority;","lastModifiedDate":"2023-10-31"},{"lineNumber":84,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":85,"author":{"gitId":"newway1814"},"content":"        public Order(ObservableMap\u003cTask, Long\u003e urgencies, String priority) {","lastModifiedDate":"2023-10-31"},{"lineNumber":86,"author":{"gitId":"newway1814"},"content":"            this.priority \u003d priority;","lastModifiedDate":"2023-10-31"},{"lineNumber":87,"author":{"gitId":"newway1814"},"content":"            for (long i \u003d 1; i \u003c\u003d 10; i++) {","lastModifiedDate":"2023-10-31"},{"lineNumber":88,"author":{"gitId":"newway1814"},"content":"                priorityTask.put(i, new ArrayList\u003c\u003e());","lastModifiedDate":"2023-10-31"},{"lineNumber":89,"author":{"gitId":"newway1814"},"content":"            }","lastModifiedDate":"2023-10-31"},{"lineNumber":90,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":91,"author":{"gitId":"newway1814"},"content":"            for (Task task : urgencies.keySet()) {","lastModifiedDate":"2023-10-31"},{"lineNumber":92,"author":{"gitId":"newway1814"},"content":"                if (task.getPriority().toString().equals(priority)) {","lastModifiedDate":"2023-10-31"},{"lineNumber":93,"author":{"gitId":"newway1814"},"content":"                    priorityTask.getOrDefault(urgencies.get(task), new ArrayList\u003c\u003e()).add(task);","lastModifiedDate":"2023-10-31"},{"lineNumber":94,"author":{"gitId":"newway1814"},"content":"                }","lastModifiedDate":"2023-10-31"},{"lineNumber":95,"author":{"gitId":"newway1814"},"content":"            }","lastModifiedDate":"2023-10-31"},{"lineNumber":96,"author":{"gitId":"newway1814"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":97,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":98,"author":{"gitId":"newway1814"},"content":"        public List\u003cString\u003e getUrgency(long i) {","lastModifiedDate":"2023-10-31"},{"lineNumber":99,"author":{"gitId":"newway1814"},"content":"            return priorityTask.getOrDefault(i, new ArrayList\u003c\u003e()).stream()","lastModifiedDate":"2023-10-31"},{"lineNumber":100,"author":{"gitId":"newway1814"},"content":"                .map(t -\u003e t.getName().toString()).collect(Collectors.toList());","lastModifiedDate":"2023-10-31"},{"lineNumber":101,"author":{"gitId":"newway1814"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":102,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":103,"author":{"gitId":"newway1814"},"content":"        public String getPriority() {","lastModifiedDate":"2023-10-31"},{"lineNumber":104,"author":{"gitId":"newway1814"},"content":"            return priority;","lastModifiedDate":"2023-10-31"},{"lineNumber":105,"author":{"gitId":"newway1814"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":106,"author":{"gitId":"newway1814"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":107,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":143,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":144,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":145,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":146,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":147,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":148,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":149,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":150,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":151,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":152,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":153,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":154,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":155,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":158,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":159,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":164,"author":{"gitId":"newway1814"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":165,"author":{"gitId":"newway1814"},"content":"     * Calculate number of days till due date","lastModifiedDate":"2023-10-31"},{"lineNumber":166,"author":{"gitId":"newway1814"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":167,"author":{"gitId":"newway1814"},"content":"    private long getDaysUntilDueDate(DueDate dueDate, String curDate) {","lastModifiedDate":"2023-10-31"},{"lineNumber":168,"author":{"gitId":"newway1814"},"content":"        SimpleDateFormat dateFormat \u003d new SimpleDateFormat(\"dd-MM-yyyy\");","lastModifiedDate":"2023-10-31"},{"lineNumber":169,"author":{"gitId":"newway1814"},"content":"        try {","lastModifiedDate":"2023-10-31"},{"lineNumber":170,"author":{"gitId":"newway1814"},"content":"            Date dueDateDate \u003d dateFormat.parse(dueDate.toString());","lastModifiedDate":"2023-10-31"},{"lineNumber":171,"author":{"gitId":"newway1814"},"content":"            Date currentDate \u003d dateFormat.parse(curDate);","lastModifiedDate":"2023-10-31"},{"lineNumber":172,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":173,"author":{"gitId":"newway1814"},"content":"            long difference \u003d dueDateDate.getTime() - currentDate.getTime();","lastModifiedDate":"2023-10-31"},{"lineNumber":174,"author":{"gitId":"newway1814"},"content":"            if (difference \u003c 0) {","lastModifiedDate":"2023-10-31"},{"lineNumber":175,"author":{"gitId":"newway1814"},"content":"                difference \u003d 1;","lastModifiedDate":"2023-10-31"},{"lineNumber":176,"author":{"gitId":"newway1814"},"content":"            }","lastModifiedDate":"2023-10-31"},{"lineNumber":177,"author":{"gitId":"newway1814"},"content":"            long days \u003d TimeUnit.DAYS.convert(difference, TimeUnit.MILLISECONDS);","lastModifiedDate":"2023-10-31"},{"lineNumber":178,"author":{"gitId":"newway1814"},"content":"            return days;","lastModifiedDate":"2023-10-31"},{"lineNumber":179,"author":{"gitId":"newway1814"},"content":"        } catch (java.text.ParseException e) {","lastModifiedDate":"2023-10-31"},{"lineNumber":180,"author":{"gitId":"newway1814"},"content":"            // Handle parsing errors","lastModifiedDate":"2023-10-31"},{"lineNumber":181,"author":{"gitId":"newway1814"},"content":"            return -1;","lastModifiedDate":"2023-10-31"},{"lineNumber":182,"author":{"gitId":"newway1814"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":183,"author":{"gitId":"newway1814"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":184,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":186,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":187,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":189,"author":{"gitId":"newway1814"},"content":"        taskListPanel \u003d new TaskListPanel(logic.getFilteredTaskList());","lastModifiedDate":"2023-10-16"},{"lineNumber":190,"author":{"gitId":"newway1814"},"content":"        taskListPanelPlaceholder.getChildren().add(taskListPanel.getRoot());","lastModifiedDate":"2023-10-16"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":195,"author":{"gitId":"kiatkat"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getProfPlanFilePath());","lastModifiedDate":"2023-10-13"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":200,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":201,"author":{"gitId":"newway1814"},"content":"        matrixDisplay.setEditable(false);","lastModifiedDate":"2023-10-31"},{"lineNumber":202,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":203,"author":{"gitId":"newway1814"},"content":"        taskListPanelPlaceholder.prefWidthProperty().bind(resultGrid.widthProperty().multiply(0.3));","lastModifiedDate":"2023-10-31"},{"lineNumber":204,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":205,"author":{"gitId":"newway1814"},"content":"        ArrayList\u003cTableColumn\u003cOrder, ListView\u003cString\u003e\u003e\u003e columns \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-31"},{"lineNumber":206,"author":{"gitId":"newway1814"},"content":"        TableColumn\u003cOrder, ListView\u003cString\u003e\u003e priority \u003d new TableColumn\u003c\u003e(\"\");","lastModifiedDate":"2023-10-31"},{"lineNumber":207,"author":{"gitId":"newway1814"},"content":"        priority.setEditable(false);","lastModifiedDate":"2023-10-31"},{"lineNumber":208,"author":{"gitId":"newway1814"},"content":"        priority.setSortable(false);","lastModifiedDate":"2023-10-31"},{"lineNumber":209,"author":{"gitId":"newway1814"},"content":"        priority.setResizable(false);","lastModifiedDate":"2023-10-31"},{"lineNumber":210,"author":{"gitId":"newway1814"},"content":"        priority.prefWidthProperty().bind(matrixDisplay.widthProperty().multiply(0.1));","lastModifiedDate":"2023-10-31"},{"lineNumber":211,"author":{"gitId":"newway1814"},"content":"        priority.setCellValueFactory(o -\u003e {","lastModifiedDate":"2023-10-31"},{"lineNumber":212,"author":{"gitId":"newway1814"},"content":"            ListView\u003cString\u003e temp \u003d new ListView\u003c\u003e(FXCollections.observableArrayList(o.getValue().priority));","lastModifiedDate":"2023-10-31"},{"lineNumber":213,"author":{"gitId":"newway1814"},"content":"            temp.setSelectionModel(null);","lastModifiedDate":"2023-10-31"},{"lineNumber":214,"author":{"gitId":"newway1814"},"content":"            return new ReadOnlyObjectWrapper\u003c\u003e(temp);","lastModifiedDate":"2023-10-31"},{"lineNumber":215,"author":{"gitId":"newway1814"},"content":"        });","lastModifiedDate":"2023-10-31"},{"lineNumber":216,"author":{"gitId":"newway1814"},"content":"        columns.add(priority);","lastModifiedDate":"2023-10-31"},{"lineNumber":217,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":218,"author":{"gitId":"newway1814"},"content":"        loadMatrix();","lastModifiedDate":"2023-10-31"},{"lineNumber":219,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":220,"author":{"gitId":"newway1814"},"content":"        for (int i \u003d 1; i \u003c\u003d 10; i++) {","lastModifiedDate":"2023-10-31"},{"lineNumber":221,"author":{"gitId":"newway1814"},"content":"            TableColumn\u003cOrder, ListView\u003cString\u003e\u003e urgency \u003d new TableColumn\u003c\u003e(String.valueOf(i));","lastModifiedDate":"2023-10-31"},{"lineNumber":222,"author":{"gitId":"newway1814"},"content":"            int finalI \u003d i;","lastModifiedDate":"2023-10-31"},{"lineNumber":223,"author":{"gitId":"newway1814"},"content":"            urgency.setCellValueFactory(o -\u003e {","lastModifiedDate":"2023-10-31"},{"lineNumber":224,"author":{"gitId":"newway1814"},"content":"                ListView\u003cString\u003e temp \u003d","lastModifiedDate":"2023-10-31"},{"lineNumber":225,"author":{"gitId":"newway1814"},"content":"                    new ListView\u003c\u003e(FXCollections.observableArrayList(o.getValue().getUrgency(finalI)));","lastModifiedDate":"2023-10-31"},{"lineNumber":226,"author":{"gitId":"newway1814"},"content":"                temp.setSelectionModel(null);","lastModifiedDate":"2023-10-31"},{"lineNumber":227,"author":{"gitId":"newway1814"},"content":"                return new ReadOnlyObjectWrapper\u003c\u003e(temp);","lastModifiedDate":"2023-10-31"},{"lineNumber":228,"author":{"gitId":"newway1814"},"content":"            });","lastModifiedDate":"2023-10-31"},{"lineNumber":229,"author":{"gitId":"newway1814"},"content":"            urgency.setEditable(false);","lastModifiedDate":"2023-10-31"},{"lineNumber":230,"author":{"gitId":"newway1814"},"content":"            urgency.setSortable(false);","lastModifiedDate":"2023-10-31"},{"lineNumber":231,"author":{"gitId":"newway1814"},"content":"            urgency.setResizable(false);","lastModifiedDate":"2023-10-31"},{"lineNumber":232,"author":{"gitId":"newway1814"},"content":"            urgency.prefWidthProperty().bind(matrixDisplay.widthProperty().multiply(0.2));","lastModifiedDate":"2023-10-31"},{"lineNumber":233,"author":{"gitId":"newway1814"},"content":"            columns.add(urgency);","lastModifiedDate":"2023-10-31"},{"lineNumber":234,"author":{"gitId":"newway1814"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":235,"author":{"gitId":"newway1814"},"content":"        matrixDisplay.getColumns().addAll(columns);","lastModifiedDate":"2023-10-31"},{"lineNumber":236,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":237,"author":{"gitId":"newway1814"},"content":"        matrixDisplay.setSelectionModel(null);","lastModifiedDate":"2023-10-31"},{"lineNumber":238,"author":{"gitId":"newway1814"},"content":"        matrixDisplay.fixedCellSizeProperty().bind(matrixDisplay.heightProperty().multiply(0.2));","lastModifiedDate":"2023-10-31"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":241,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":242,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":243,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":244,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":245,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":246,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":247,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":248,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":249,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":250,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":254,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":255,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":257,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":258,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":259,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":260,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":261,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":262,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":265,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":266,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":270,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":271,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":272,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":273,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":274,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":275,"author":{"gitId":"-"},"content":"            (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":276,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":277,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":278,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":281,"author":{"gitId":"newway1814"},"content":"    public TaskListPanel getTaskListPanel() {","lastModifiedDate":"2023-10-16"},{"lineNumber":282,"author":{"gitId":"newway1814"},"content":"        return taskListPanel;","lastModifiedDate":"2023-10-16"},{"lineNumber":283,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":285,"author":{"gitId":"newway1814"},"content":"    private void loadMatrix() {","lastModifiedDate":"2023-10-31"},{"lineNumber":286,"author":{"gitId":"newway1814"},"content":"        ObservableList\u003cOrder\u003e rows \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-10-31"},{"lineNumber":287,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":288,"author":{"gitId":"newway1814"},"content":"        ObservableList\u003cTask\u003e filteredTasks \u003d logic.getFilteredTaskList();","lastModifiedDate":"2023-10-31"},{"lineNumber":289,"author":{"gitId":"newway1814"},"content":"        ObservableMap\u003cTask, Long\u003e taskUrgency \u003d FXCollections.observableHashMap();","lastModifiedDate":"2023-10-31"},{"lineNumber":290,"author":{"gitId":"newway1814"},"content":"        SimpleDateFormat dateFormat \u003d new SimpleDateFormat(\"dd-MM-yyyy\");","lastModifiedDate":"2023-10-31"},{"lineNumber":291,"author":{"gitId":"newway1814"},"content":"        Date currentDate \u003d new Date();","lastModifiedDate":"2023-10-31"},{"lineNumber":292,"author":{"gitId":"newway1814"},"content":"        String curDate \u003d dateFormat.format(currentDate);","lastModifiedDate":"2023-10-31"},{"lineNumber":293,"author":{"gitId":"eyelessrhyme7"},"content":"        if (filteredTasks.isEmpty()) {","lastModifiedDate":"2023-11-02"},{"lineNumber":294,"author":{"gitId":"eyelessrhyme7"},"content":"            for (int i \u003d 10; i \u003e\u003d 1; i--) {","lastModifiedDate":"2023-11-02"},{"lineNumber":295,"author":{"gitId":"eyelessrhyme7"},"content":"                Order temp \u003d new Order(taskUrgency, String.valueOf(i));","lastModifiedDate":"2023-11-02"},{"lineNumber":296,"author":{"gitId":"eyelessrhyme7"},"content":"                rows.add(temp);","lastModifiedDate":"2023-11-02"},{"lineNumber":297,"author":{"gitId":"eyelessrhyme7"},"content":"            }","lastModifiedDate":"2023-11-02"},{"lineNumber":298,"author":{"gitId":"eyelessrhyme7"},"content":"            matrixDisplay.setItems(rows);","lastModifiedDate":"2023-11-02"},{"lineNumber":299,"author":{"gitId":"eyelessrhyme7"},"content":"            matrixDisplay.refresh();","lastModifiedDate":"2023-11-02"},{"lineNumber":300,"author":{"gitId":"eyelessrhyme7"},"content":"        } else {","lastModifiedDate":"2023-11-02"},{"lineNumber":301,"author":{"gitId":"newway1814"},"content":"            for (Task t : filteredTasks) {","lastModifiedDate":"2023-10-31"},{"lineNumber":302,"author":{"gitId":"newway1814"},"content":"                long daysLeft \u003d getDaysUntilDueDate(t.getDueDate(), curDate);","lastModifiedDate":"2023-10-31"},{"lineNumber":303,"author":{"gitId":"newway1814"},"content":"                taskUrgency.put(t, daysLeft);","lastModifiedDate":"2023-10-31"},{"lineNumber":304,"author":{"gitId":"newway1814"},"content":"            }","lastModifiedDate":"2023-10-31"},{"lineNumber":305,"author":{"gitId":"newway1814"},"content":"            long minDaysLeft \u003d Collections.min(taskUrgency.values());","lastModifiedDate":"2023-10-31"},{"lineNumber":306,"author":{"gitId":"newway1814"},"content":"            long maxDaysLeft \u003d Collections.max(taskUrgency.values());","lastModifiedDate":"2023-10-31"},{"lineNumber":307,"author":{"gitId":"eyelessrhyme7"},"content":"            long intermediate \u003d (maxDaysLeft - minDaysLeft) / 9;","lastModifiedDate":"2023-11-10"},{"lineNumber":308,"author":{"gitId":"eyelessrhyme7"},"content":"            long split;","lastModifiedDate":"2023-11-02"},{"lineNumber":309,"author":{"gitId":"eyelessrhyme7"},"content":"            if (intermediate \u003d\u003d 0) {","lastModifiedDate":"2023-11-02"},{"lineNumber":310,"author":{"gitId":"eyelessrhyme7"},"content":"                split \u003d 1;","lastModifiedDate":"2023-11-02"},{"lineNumber":311,"author":{"gitId":"eyelessrhyme7"},"content":"            } else {","lastModifiedDate":"2023-11-02"},{"lineNumber":312,"author":{"gitId":"eyelessrhyme7"},"content":"                split \u003d intermediate;","lastModifiedDate":"2023-11-02"},{"lineNumber":313,"author":{"gitId":"eyelessrhyme7"},"content":"            }","lastModifiedDate":"2023-11-02"},{"lineNumber":314,"author":{"gitId":"eyelessrhyme7"},"content":"            taskUrgency.replaceAll((t, v) -\u003e (v - minDaysLeft) / split + 1);","lastModifiedDate":"2023-11-10"},{"lineNumber":315,"author":{"gitId":"eyelessrhyme7"},"content":"            taskUrgency.replaceAll((t, v) -\u003e 10 - v + 1);","lastModifiedDate":"2023-11-02"},{"lineNumber":316,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":317,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":318,"author":{"gitId":"newway1814"},"content":"            for (int i \u003d 10; i \u003e\u003d 1; i--) {","lastModifiedDate":"2023-10-31"},{"lineNumber":319,"author":{"gitId":"newway1814"},"content":"                Order temp \u003d new Order(taskUrgency, String.valueOf(i));","lastModifiedDate":"2023-10-31"},{"lineNumber":320,"author":{"gitId":"newway1814"},"content":"                rows.add(temp);","lastModifiedDate":"2023-10-31"},{"lineNumber":321,"author":{"gitId":"newway1814"},"content":"            }","lastModifiedDate":"2023-10-31"},{"lineNumber":322,"author":{"gitId":"newway1814"},"content":"            matrixDisplay.setItems(rows);","lastModifiedDate":"2023-10-31"},{"lineNumber":323,"author":{"gitId":"newway1814"},"content":"            matrixDisplay.refresh();","lastModifiedDate":"2023-10-31"},{"lineNumber":324,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":325,"author":{"gitId":"newway1814"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":326,"author":{"gitId":"newway1814"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":327,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":328,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":329,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":330,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":331,"author":{"gitId":"kiatkat"},"content":"     * @see Logic#execute(String)","lastModifiedDate":"2023-10-13"},{"lineNumber":332,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":333,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":334,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":335,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":336,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":337,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":338,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":339,"author":{"gitId":"newway1814"},"content":"            loadMatrix();","lastModifiedDate":"2023-10-31"},{"lineNumber":340,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":341,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":342,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":343,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":344,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":345,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":346,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":347,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":348,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":349,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":350,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":351,"author":{"gitId":"-"},"content":"            logger.info(\"An error occurred while executing command: \" + commandText);","lastModifiedDate":"2023-06-13"},{"lineNumber":352,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":353,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":354,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":355,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":356,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"kiatkat":9,"eyelessrhyme7":18,"-":180,"newway1814":149}},{"path":"src/main/java/profplan/ui/ResultDisplay.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kiatkat"},"content":"package profplan.ui;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextArea;","lastModifiedDate":"2016-09-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * A ui for the status bar that is displayed at the header of the application.","lastModifiedDate":"2016-09-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class ResultDisplay extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"ResultDisplay.fxml\";","lastModifiedDate":"2016-09-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-10-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private TextArea resultDisplay;","lastModifiedDate":"2016-10-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public ResultDisplay() {","lastModifiedDate":"2017-06-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"kiatkat":1,"-":27}},{"path":"src/main/java/profplan/ui/StatusBarFooter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kiatkat"},"content":"package profplan.ui;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2018-12-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * A ui for the status bar that is displayed at the footer of the application.","lastModifiedDate":"2016-09-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StatusBarFooter extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"StatusBarFooter.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private Label saveLocationStatus;","lastModifiedDate":"2018-12-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Creates a {@code StatusBarFooter} with the given {@code Path}.","lastModifiedDate":"2020-05-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public StatusBarFooter(Path saveLocation) {","lastModifiedDate":"2019-01-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2017-04-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        saveLocationStatus.setText(Paths.get(\".\").resolve(saveLocation).toString());","lastModifiedDate":"2018-12-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"kiatkat":1,"-":27}},{"path":"src/main/java/profplan/ui/TaskCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kiatkat"},"content":"package profplan.ui;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"newway1814"},"content":"import profplan.model.task.Task;","lastModifiedDate":"2023-10-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"newway1814"},"content":" * An UI component that displays information of a {@code Task}.","lastModifiedDate":"2023-10-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"newway1814"},"content":"public class TaskCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"newway1814"},"content":"    private static final String FXML \u003d \"TaskListCard.fxml\";","lastModifiedDate":"2023-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"newway1814"},"content":"    public final Task task;","lastModifiedDate":"2023-10-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"eyelessrhyme7"},"content":"    private Label priority;","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"jack1e0"},"content":"    private Label dueDate;","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2023-10-18"},{"lineNumber":40,"author":{"gitId":"newway1814"},"content":"    private Label status;","lastModifiedDate":"2023-10-16"},{"lineNumber":41,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2016-12-18"},{"lineNumber":44,"author":{"gitId":"yarnmengnus"},"content":"    @FXML","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"yarnmengnus"},"content":"    private Label link;","lastModifiedDate":"2023-10-17"},{"lineNumber":46,"author":{"gitId":"kiatkat"},"content":"    @FXML","lastModifiedDate":"2023-10-26"},{"lineNumber":47,"author":{"gitId":"kiatkat"},"content":"    private Label description;","lastModifiedDate":"2023-10-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":50,"author":{"gitId":"newway1814"},"content":"     * Creates a {@code TaskCode} with the given {@code Task} and index to display.","lastModifiedDate":"2023-10-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":52,"author":{"gitId":"newway1814"},"content":"    public TaskCard(Task task, int displayedIndex) {","lastModifiedDate":"2023-10-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":54,"author":{"gitId":"newway1814"},"content":"        this.task \u003d task;","lastModifiedDate":"2023-10-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"newway1814"},"content":"        name.setText(task.getName().fullName);","lastModifiedDate":"2023-10-16"},{"lineNumber":57,"author":{"gitId":"eyelessrhyme7"},"content":"        priority.setText(\"Priority: \" + task.getPriority().value);","lastModifiedDate":"2023-11-02"},{"lineNumber":58,"author":{"gitId":"eyelessrhyme7"},"content":"        dueDate.setText(\"DueDate: \" + task.getDueDate().toString());","lastModifiedDate":"2023-11-13"},{"lineNumber":59,"author":{"gitId":"eyelessrhyme7"},"content":"        status.setText(\" \" + task.getStatus().status + \" \");","lastModifiedDate":"2023-11-02"},{"lineNumber":60,"author":{"gitId":"kiatkat"},"content":"        description.setText(task.getDescription().description);","lastModifiedDate":"2023-10-26"},{"lineNumber":61,"author":{"gitId":"newway1814"},"content":"        task.getTags().stream()","lastModifiedDate":"2023-10-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2019-01-02"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2019-01-02"},{"lineNumber":64,"author":{"gitId":"yarnmengnus"},"content":"        link.setText(task.getLink().value);","lastModifiedDate":"2023-10-17"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"yarnmengnus":3,"jack1e0":1,"kiatkat":4,"eyelessrhyme7":4,"-":42,"newway1814":12}},{"path":"src/main/java/profplan/ui/TaskListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"newway1814"},"content":"package profplan.ui;","lastModifiedDate":"2023-10-16"},{"lineNumber":2,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":3,"author":{"gitId":"newway1814"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-10-16"},{"lineNumber":4,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":5,"author":{"gitId":"newway1814"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-10-16"},{"lineNumber":6,"author":{"gitId":"newway1814"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-10-16"},{"lineNumber":7,"author":{"gitId":"newway1814"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2023-10-16"},{"lineNumber":8,"author":{"gitId":"newway1814"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2023-10-16"},{"lineNumber":9,"author":{"gitId":"newway1814"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-10-16"},{"lineNumber":10,"author":{"gitId":"newway1814"},"content":"import profplan.commons.core.LogsCenter;","lastModifiedDate":"2023-10-16"},{"lineNumber":11,"author":{"gitId":"newway1814"},"content":"import profplan.model.task.Task;","lastModifiedDate":"2023-10-16"},{"lineNumber":12,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"newway1814"},"content":"/**","lastModifiedDate":"2023-10-16"},{"lineNumber":14,"author":{"gitId":"newway1814"},"content":" * Panel containing the list of tasks.","lastModifiedDate":"2023-10-16"},{"lineNumber":15,"author":{"gitId":"newway1814"},"content":" */","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"newway1814"},"content":"public class TaskListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-10-16"},{"lineNumber":17,"author":{"gitId":"newway1814"},"content":"    private static final String FXML \u003d \"TaskListPanel.fxml\";","lastModifiedDate":"2023-10-16"},{"lineNumber":18,"author":{"gitId":"newway1814"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(TaskListPanel.class);","lastModifiedDate":"2023-10-16"},{"lineNumber":19,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":20,"author":{"gitId":"newway1814"},"content":"    @FXML","lastModifiedDate":"2023-10-16"},{"lineNumber":21,"author":{"gitId":"newway1814"},"content":"    private ListView\u003cTask\u003e taskListView;","lastModifiedDate":"2023-10-16"},{"lineNumber":22,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":23,"author":{"gitId":"newway1814"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":24,"author":{"gitId":"newway1814"},"content":"     * Creates a {@code TaskListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2023-10-16"},{"lineNumber":25,"author":{"gitId":"newway1814"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":26,"author":{"gitId":"newway1814"},"content":"    public TaskListPanel(ObservableList\u003cTask\u003e taskList) {","lastModifiedDate":"2023-10-16"},{"lineNumber":27,"author":{"gitId":"newway1814"},"content":"        super(FXML);","lastModifiedDate":"2023-10-16"},{"lineNumber":28,"author":{"gitId":"newway1814"},"content":"        taskListView.setItems(taskList);","lastModifiedDate":"2023-10-16"},{"lineNumber":29,"author":{"gitId":"newway1814"},"content":"        taskListView.setCellFactory(listView -\u003e new TaskListViewCell());","lastModifiedDate":"2023-10-16"},{"lineNumber":30,"author":{"gitId":"newway1814"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":31,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":32,"author":{"gitId":"newway1814"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":33,"author":{"gitId":"newway1814"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Task} using a {@code TaskCard}.","lastModifiedDate":"2023-10-16"},{"lineNumber":34,"author":{"gitId":"newway1814"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":35,"author":{"gitId":"newway1814"},"content":"    class TaskListViewCell extends ListCell\u003cTask\u003e {","lastModifiedDate":"2023-10-16"},{"lineNumber":36,"author":{"gitId":"newway1814"},"content":"        @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":37,"author":{"gitId":"newway1814"},"content":"        protected void updateItem(Task task, boolean empty) {","lastModifiedDate":"2023-10-16"},{"lineNumber":38,"author":{"gitId":"newway1814"},"content":"            super.updateItem(task, empty);","lastModifiedDate":"2023-10-16"},{"lineNumber":39,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":40,"author":{"gitId":"newway1814"},"content":"            if (empty || task \u003d\u003d null) {","lastModifiedDate":"2023-10-16"},{"lineNumber":41,"author":{"gitId":"newway1814"},"content":"                setGraphic(null);","lastModifiedDate":"2023-10-16"},{"lineNumber":42,"author":{"gitId":"newway1814"},"content":"                setText(null);","lastModifiedDate":"2023-10-16"},{"lineNumber":43,"author":{"gitId":"newway1814"},"content":"            } else {","lastModifiedDate":"2023-10-16"},{"lineNumber":44,"author":{"gitId":"newway1814"},"content":"                setGraphic(new TaskCard(task, getIndex() + 1).getRoot());","lastModifiedDate":"2023-10-16"},{"lineNumber":45,"author":{"gitId":"newway1814"},"content":"            }","lastModifiedDate":"2023-10-16"},{"lineNumber":46,"author":{"gitId":"newway1814"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":47,"author":{"gitId":"newway1814"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":48,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":49,"author":{"gitId":"newway1814"},"content":"}","lastModifiedDate":"2023-10-16"}],"authorContributionMap":{"newway1814":49}},{"path":"src/main/java/profplan/ui/Ui.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kiatkat"},"content":"package profplan.ui;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-09-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * API of UI component","lastModifiedDate":"2016-09-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public interface Ui {","lastModifiedDate":"2016-09-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    /** Starts the UI (and the App).  */","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    void start(Stage primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"kiatkat":1,"-":12}},{"path":"src/main/java/profplan/ui/UiManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kiatkat"},"content":"package profplan.ui;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.application.Platform;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2016-08-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert.AlertType;","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"kiatkat"},"content":"import profplan.MainApp;","lastModifiedDate":"2023-10-14"},{"lineNumber":11,"author":{"gitId":"kiatkat"},"content":"import profplan.commons.core.LogsCenter;","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"kiatkat"},"content":"import profplan.commons.util.StringUtil;","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"kiatkat"},"content":"import profplan.logic.Logic;","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The manager of the UI component.","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class UiManager implements Ui {","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String ALERT_DIALOG_PANE_FIELD_ID \u003d \"alertDialogPane\";","lastModifiedDate":"2017-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(UiManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"eyelessrhyme7"},"content":"    private static final String ICON_APPLICATION \u003d \"/images/profplan_32.png\";","lastModifiedDate":"2023-11-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private MainWindow mainWindow;","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Creates a {@code UiManager} with the given {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public UiManager(Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        logger.info(\"Starting UI...\");","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        //Set the application icon.","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        primaryStage.getIcons().add(getImage(ICON_APPLICATION));","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            mainWindow \u003d new MainWindow(primaryStage, logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            mainWindow.show(); //This should be called before creating other UI parts","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            mainWindow.fillInnerParts();","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2016-08-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            logger.severe(StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            showFatalErrorDialogAndShutdown(\"Fatal error during initializing\", e);","lastModifiedDate":"2016-08-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    void showAlertDialogAndWait(Alert.AlertType type, String title, String headerText, String contentText) {","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(mainWindow.getPrimaryStage(), type, title, headerText, contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Shows an alert dialog on {@code owner} with the given parameters.","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * This method only returns after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    private static void showAlertDialogAndWait(Stage owner, AlertType type, String title, String headerText,","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                                               String contentText) {","lastModifiedDate":"2016-08-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        final Alert alert \u003d new Alert(type);","lastModifiedDate":"2016-08-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        alert.getDialogPane().getStylesheets().add(\"view/DarkTheme.css\");","lastModifiedDate":"2016-08-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        alert.initOwner(owner);","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        alert.setTitle(title);","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        alert.setHeaderText(headerText);","lastModifiedDate":"2016-08-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        alert.setContentText(contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        alert.getDialogPane().setId(ALERT_DIALOG_PANE_FIELD_ID);","lastModifiedDate":"2016-10-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        alert.showAndWait();","lastModifiedDate":"2016-08-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Shows an error alert dialog with {@code title} and error message, {@code e},","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * and exits the application after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private void showFatalErrorDialogAndShutdown(String title, Throwable e) {","lastModifiedDate":"2016-09-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        logger.severe(title + \" \" + e.getMessage() + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(Alert.AlertType.ERROR, title, e.getMessage(), e.toString());","lastModifiedDate":"2016-08-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        Platform.exit();","lastModifiedDate":"2016-08-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        System.exit(1);","lastModifiedDate":"2016-08-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"kiatkat":5,"eyelessrhyme7":1,"-":82}},{"path":"src/main/java/profplan/ui/UiPart.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kiatkat"},"content":"package profplan.ui;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-12-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.net.URL;","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2016-12-21"},{"lineNumber":9,"author":{"gitId":"kiatkat"},"content":"import profplan.MainApp;","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents a distinct part of the UI. e.g. Windows, dialogs, panels, status bars, etc.","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * It contains a scene graph with a root node of type {@code T}.","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public abstract class UiPart\u003cT\u003e {","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /** Resource folder where FXML files are stored. */","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String FXML_FILE_FOLDER \u003d \"/view/\";","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final FXMLLoader fxmlLoader \u003d new FXMLLoader();","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file URL.","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * The FXML file must not specify the {@code fx:controller} attribute.","lastModifiedDate":"2016-12-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public UiPart(URL fxmlFileUrl) {","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        loadFxmlFile(fxmlFileUrl, null);","lastModifiedDate":"2017-11-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Constructs a UiPart using the specified FXML file within {@link #FXML_FILE_FOLDER}.","lastModifiedDate":"2016-12-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @see #UiPart(URL)","lastModifiedDate":"2016-12-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public UiPart(String fxmlFileName) {","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this(getFxmlFileUrl(fxmlFileName));","lastModifiedDate":"2017-11-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file URL and root object.","lastModifiedDate":"2017-11-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * The FXML file must not specify the {@code fx:controller} attribute.","lastModifiedDate":"2017-11-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public UiPart(URL fxmlFileUrl, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        loadFxmlFile(fxmlFileUrl, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file within {@link #FXML_FILE_FOLDER} and root object.","lastModifiedDate":"2017-11-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * @see #UiPart(URL, T)","lastModifiedDate":"2017-11-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public UiPart(String fxmlFileName, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this(getFxmlFileUrl(fxmlFileName), root);","lastModifiedDate":"2017-11-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Returns the root object of the scene graph of this UiPart.","lastModifiedDate":"2016-12-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public T getRoot() {","lastModifiedDate":"2016-12-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return fxmlLoader.getRoot();","lastModifiedDate":"2016-12-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Loads the object hierarchy from a FXML document.","lastModifiedDate":"2017-11-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * @param location Location of the FXML document.","lastModifiedDate":"2017-11-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * @param root Specifies the root of the object hierarchy.","lastModifiedDate":"2017-11-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private void loadFxmlFile(URL location, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        requireNonNull(location);","lastModifiedDate":"2017-11-29"},{"lineNumber":68,"author":{"gitId":"newway1814"},"content":"        fxmlLoader.setRoot(root);","lastModifiedDate":"2023-10-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        fxmlLoader.setLocation(location);","lastModifiedDate":"2017-11-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        fxmlLoader.setController(this);","lastModifiedDate":"2017-11-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-11-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            fxmlLoader.load();","lastModifiedDate":"2017-11-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2017-11-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            throw new AssertionError(e);","lastModifiedDate":"2017-11-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Returns the FXML file URL for the specified FXML file name within {@link #FXML_FILE_FOLDER}.","lastModifiedDate":"2017-11-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private static URL getFxmlFileUrl(String fxmlFileName) {","lastModifiedDate":"2017-11-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        requireNonNull(fxmlFileName);","lastModifiedDate":"2017-11-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        String fxmlFileNameWithFolder \u003d FXML_FILE_FOLDER + fxmlFileName;","lastModifiedDate":"2017-11-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        URL fxmlFileUrl \u003d MainApp.class.getResource(fxmlFileNameWithFolder);","lastModifiedDate":"2017-11-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return requireNonNull(fxmlFileUrl);","lastModifiedDate":"2017-11-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"kiatkat":2,"-":85,"newway1814":1}},{"path":"src/main/resources/view/DarkTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":".background {","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    background-color: #383838; /* Used in the default.html file */","lastModifiedDate":"2017-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".label {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    -fx-text-fill: #555555;","lastModifiedDate":"2016-08-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":".label-bright {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":".label-header {","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":".text-field {","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":".tab-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":43,"author":{"gitId":"-"},"content":".table-view {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    -fx-base: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    -fx-control-inner-background: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"eyelessrhyme7"},"content":"    -fx-padding: 10;","lastModifiedDate":"2023-11-02"},{"lineNumber":50,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":53,"author":{"gitId":"-"},"content":".table-view .column-header-background {","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"eyelessrhyme7"},"content":"    -fx-background-color: #44106B;","lastModifiedDate":"2023-11-02"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    -fx-size: 35;","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    -fx-border-color:","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        derive(-fx-base, 80%)","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":".table-view .column-header .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"eyelessrhyme7"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2023-11-02"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"eyelessrhyme7"},"content":".table-view:focused .table-row-cell.list-cell {","lastModifiedDate":"2023-11-02"},{"lineNumber":78,"author":{"gitId":"eyelessrhyme7"},"content":"    -fx-background-color: #DC4247;","lastModifiedDate":"2023-11-02"},{"lineNumber":79,"author":{"gitId":"eyelessrhyme7"},"content":"}","lastModifiedDate":"2023-11-02"},{"lineNumber":80,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":81,"author":{"gitId":"-"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"newway1814"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2023-10-31"},{"lineNumber":83,"author":{"gitId":"newway1814"},"content":"}","lastModifiedDate":"2023-10-31"},{"lineNumber":84,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":85,"author":{"gitId":"newway1814"},"content":".table-view .table-row-cell:focused {","lastModifiedDate":"2023-10-31"},{"lineNumber":86,"author":{"gitId":"newway1814"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2023-10-31"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":90,"author":{"gitId":"-"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2016-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    -fx-border-color: transparent transparent transparent #4d4d4d;","lastModifiedDate":"2017-03-02"},{"lineNumber":93,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":".split-pane {","lastModifiedDate":"2016-08-15"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":".list-view {","lastModifiedDate":"2017-03-02"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    -fx-padding: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2018-01-10"},{"lineNumber":105,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":107,"author":{"gitId":"-"},"content":".list-cell {","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":".list-cell:filled:even {","lastModifiedDate":"2017-03-02"},{"lineNumber":114,"author":{"gitId":"eyelessrhyme7"},"content":"    -fx-background-color: #32337D;","lastModifiedDate":"2023-11-02"},{"lineNumber":115,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":117,"author":{"gitId":"-"},"content":".list-cell:filled:odd {","lastModifiedDate":"2017-03-02"},{"lineNumber":118,"author":{"gitId":"eyelessrhyme7"},"content":"    -fx-background-color: #4C3C78;","lastModifiedDate":"2023-11-02"},{"lineNumber":119,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":121,"author":{"gitId":"-"},"content":".list-cell:filled:selected {","lastModifiedDate":"2017-03-02"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    -fx-background-color: #424d5f;","lastModifiedDate":"2017-03-02"},{"lineNumber":123,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":125,"author":{"gitId":"-"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2017-03-02"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    -fx-border-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":128,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":130,"author":{"gitId":"-"},"content":".list-cell .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":132,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":".cell_big_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":".cell_small_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2022-01-13"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2017-03-02"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":".stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":148,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":".pane-with-border {","lastModifiedDate":"2017-05-15"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-05-09"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     -fx-border-color: derive(#1d1d1d, 10%);","lastModifiedDate":"2017-05-09"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     -fx-border-top-width: 1px;","lastModifiedDate":"2017-05-09"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-09"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":156,"author":{"gitId":"-"},"content":".status-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2018-12-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":160,"author":{"gitId":"newway1814"},"content":".table-view {","lastModifiedDate":"2023-10-31"},{"lineNumber":161,"author":{"gitId":"newway1814"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2023-10-31"},{"lineNumber":162,"author":{"gitId":"newway1814"},"content":"}","lastModifiedDate":"2023-10-31"},{"lineNumber":163,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":164,"author":{"gitId":"newway1814"},"content":".table-view .column-header-background .label {","lastModifiedDate":"2023-10-31"},{"lineNumber":165,"author":{"gitId":"newway1814"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2023-10-31"},{"lineNumber":166,"author":{"gitId":"newway1814"},"content":"    -fx-font-size: 10pt;","lastModifiedDate":"2023-10-31"},{"lineNumber":167,"author":{"gitId":"newway1814"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-10-31"},{"lineNumber":168,"author":{"gitId":"eyelessrhyme7"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2023-11-02"},{"lineNumber":169,"author":{"gitId":"newway1814"},"content":"    -fx-alignment: CENTER;","lastModifiedDate":"2023-10-31"},{"lineNumber":170,"author":{"gitId":"newway1814"},"content":"}","lastModifiedDate":"2023-10-31"},{"lineNumber":171,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":172,"author":{"gitId":"newway1814"},"content":".matrix-display {","lastModifiedDate":"2023-10-31"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2017-03-02"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":177,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":178,"author":{"gitId":"eyelessrhyme7"},"content":".matrix-display .table-row-cell {","lastModifiedDate":"2023-11-02"},{"lineNumber":179,"author":{"gitId":"eyelessrhyme7"},"content":"    -fx-background-color: #794ECC;","lastModifiedDate":"2023-11-02"},{"lineNumber":180,"author":{"gitId":"eyelessrhyme7"},"content":"}","lastModifiedDate":"2023-11-02"},{"lineNumber":181,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":182,"author":{"gitId":"eyelessrhyme7"},"content":".matrix-display .list-cell {","lastModifiedDate":"2023-11-02"},{"lineNumber":183,"author":{"gitId":"eyelessrhyme7"},"content":"    -fx-background-color: #3c3e3f;","lastModifiedDate":"2023-11-02"},{"lineNumber":184,"author":{"gitId":"eyelessrhyme7"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2023-11-02"},{"lineNumber":185,"author":{"gitId":"eyelessrhyme7"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2023-11-02"},{"lineNumber":186,"author":{"gitId":"eyelessrhyme7"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-11-02"},{"lineNumber":187,"author":{"gitId":"eyelessrhyme7"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2023-11-02"},{"lineNumber":188,"author":{"gitId":"eyelessrhyme7"},"content":"}","lastModifiedDate":"2023-11-02"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":190,"author":{"gitId":"-"},"content":".result-display .label {","lastModifiedDate":"2016-09-14"},{"lineNumber":191,"author":{"gitId":"newway1814"},"content":"    -fx-text-fill: white !important;","lastModifiedDate":"2023-10-31"},{"lineNumber":192,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":".status-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2018-12-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2018-12-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":".status-bar-with-border {","lastModifiedDate":"2016-08-08"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":205,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":207,"author":{"gitId":"-"},"content":".status-bar-with-border .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":209,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":".grid-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":214,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":217,"author":{"gitId":"-"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":219,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":221,"author":{"gitId":"-"},"content":".context-menu {","lastModifiedDate":"2016-08-08"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":223,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":225,"author":{"gitId":"-"},"content":".context-menu .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":227,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":229,"author":{"gitId":"-"},"content":".menu-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":230,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":231,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":233,"author":{"gitId":"-"},"content":".menu-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":234,"author":{"gitId":"-"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":235,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":236,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":240,"author":{"gitId":"-"},"content":".menu .left-container {","lastModifiedDate":"2016-08-08"},{"lineNumber":241,"author":{"gitId":"-"},"content":"    -fx-background-color: black;","lastModifiedDate":"2016-08-08"},{"lineNumber":242,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":244,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2016-08-08"},{"lineNumber":245,"author":{"gitId":"-"},"content":" * Metro style Push Button","lastModifiedDate":"2016-08-08"},{"lineNumber":246,"author":{"gitId":"-"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2016-08-08"},{"lineNumber":247,"author":{"gitId":"-"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2016-08-08"},{"lineNumber":248,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":249,"author":{"gitId":"-"},"content":".button {","lastModifiedDate":"2016-08-08"},{"lineNumber":250,"author":{"gitId":"-"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2016-08-08"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2016-08-08"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\", Helvetica, Arial, sans-serif;","lastModifiedDate":"2022-01-13"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":257,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2016-08-08"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":259,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":261,"author":{"gitId":"-"},"content":".button:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":262,"author":{"gitId":"-"},"content":"    -fx-background-color: #3a3a3a;","lastModifiedDate":"2016-08-08"},{"lineNumber":263,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":265,"author":{"gitId":"-"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2016-08-08"},{"lineNumber":266,"author":{"gitId":"-"},"content":"  -fx-background-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":267,"author":{"gitId":"-"},"content":"  -fx-text-fill: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":268,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":270,"author":{"gitId":"-"},"content":".button:focused {","lastModifiedDate":"2016-08-08"},{"lineNumber":271,"author":{"gitId":"-"},"content":"    -fx-border-color: white, white;","lastModifiedDate":"2016-08-08"},{"lineNumber":272,"author":{"gitId":"-"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":273,"author":{"gitId":"-"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2016-08-08"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":275,"author":{"gitId":"-"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":276,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":278,"author":{"gitId":"-"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2016-08-08"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2016-08-08"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":281,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":282,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":284,"author":{"gitId":"-"},"content":".button:default {","lastModifiedDate":"2016-08-08"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":286,"author":{"gitId":"-"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2016-08-08"},{"lineNumber":287,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":289,"author":{"gitId":"-"},"content":".button:default:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":290,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2016-08-08"},{"lineNumber":291,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":293,"author":{"gitId":"-"},"content":".dialog-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":294,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":295,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":297,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2016-08-08"},{"lineNumber":298,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":299,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":301,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2016-08-08"},{"lineNumber":302,"author":{"gitId":"-"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2016-08-08"},{"lineNumber":303,"author":{"gitId":"-"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2016-08-08"},{"lineNumber":304,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":305,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":307,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2016-08-08"},{"lineNumber":308,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":309,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":311,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2016-08-08"},{"lineNumber":312,"author":{"gitId":"-"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2016-08-08"},{"lineNumber":313,"author":{"gitId":"-"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2016-08-08"},{"lineNumber":314,"author":{"gitId":"-"},"content":"    -fx-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":315,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":316,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":317,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":318,"author":{"gitId":"-"},"content":".scroll-bar {","lastModifiedDate":"2017-03-02"},{"lineNumber":319,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":320,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":322,"author":{"gitId":"-"},"content":".scroll-bar .thumb {","lastModifiedDate":"2016-08-15"},{"lineNumber":323,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":324,"author":{"gitId":"-"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2016-08-15"},{"lineNumber":325,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":326,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":327,"author":{"gitId":"-"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2016-08-15"},{"lineNumber":328,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-15"},{"lineNumber":329,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-15"},{"lineNumber":330,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":331,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":332,"author":{"gitId":"-"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2016-08-15"},{"lineNumber":333,"author":{"gitId":"-"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2016-08-15"},{"lineNumber":334,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":335,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":336,"author":{"gitId":"-"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":337,"author":{"gitId":"-"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2016-08-15"},{"lineNumber":338,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":339,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":340,"author":{"gitId":"-"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":341,"author":{"gitId":"-"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2016-08-18"},{"lineNumber":342,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":343,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":344,"author":{"gitId":"-"},"content":"#cardPane {","lastModifiedDate":"2016-08-08"},{"lineNumber":345,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":346,"author":{"gitId":"-"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":347,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":348,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":349,"author":{"gitId":"-"},"content":"#commandTypeLabel {","lastModifiedDate":"2016-08-08"},{"lineNumber":350,"author":{"gitId":"-"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2016-08-08"},{"lineNumber":351,"author":{"gitId":"-"},"content":"    -fx-text-fill: #F70D1A;","lastModifiedDate":"2016-08-08"},{"lineNumber":352,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":353,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":354,"author":{"gitId":"-"},"content":"#commandTextField {","lastModifiedDate":"2017-03-02"},{"lineNumber":355,"author":{"gitId":"eyelessrhyme7"},"content":"    -fx-background-color: #ADDBB6;","lastModifiedDate":"2023-11-02"},{"lineNumber":356,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":357,"author":{"gitId":"eyelessrhyme7"},"content":"    -fx-border-color: #383838 #383838 #50AB64 #383838;","lastModifiedDate":"2023-11-02"},{"lineNumber":358,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":359,"author":{"gitId":"eyelessrhyme7"},"content":"    -fx-border-width: 3;","lastModifiedDate":"2023-11-02"},{"lineNumber":360,"author":{"gitId":"eyelessrhyme7"},"content":"    -fx-font-family: \"Segoe UI Bold\";","lastModifiedDate":"2023-11-02"},{"lineNumber":361,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":362,"author":{"gitId":"eyelessrhyme7"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2023-11-02"},{"lineNumber":363,"author":{"gitId":"eyelessrhyme7"},"content":"    -fx-prompt-text-fill: #545454;","lastModifiedDate":"2023-11-02"},{"lineNumber":364,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":365,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":366,"author":{"gitId":"newway1814"},"content":"#filterField, #taskListPanel, #taskWebpage {","lastModifiedDate":"2023-10-16"},{"lineNumber":367,"author":{"gitId":"-"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2016-08-15"},{"lineNumber":368,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":370,"author":{"gitId":"eyelessrhyme7"},"content":"#resultDisplay {","lastModifiedDate":"2023-11-02"},{"lineNumber":371,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":372,"author":{"gitId":"eyelessrhyme7"},"content":"}","lastModifiedDate":"2023-11-02"},{"lineNumber":373,"author":{"gitId":"-"},"content":"#resultDisplay .content {","lastModifiedDate":"2017-03-02"},{"lineNumber":374,"author":{"gitId":"eyelessrhyme7"},"content":"    -fx-background-color: black;","lastModifiedDate":"2023-11-02"},{"lineNumber":375,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":376,"author":{"gitId":"eyelessrhyme7"},"content":"    -fx-border-width: 3;","lastModifiedDate":"2023-11-02"},{"lineNumber":377,"author":{"gitId":"eyelessrhyme7"},"content":"    -fx-border-color: black;","lastModifiedDate":"2023-11-02"},{"lineNumber":378,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":380,"author":{"gitId":"-"},"content":"#tags {","lastModifiedDate":"2016-12-18"},{"lineNumber":381,"author":{"gitId":"-"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2016-12-18"},{"lineNumber":382,"author":{"gitId":"-"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":383,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":384,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":385,"author":{"gitId":"-"},"content":"#tags .label {","lastModifiedDate":"2016-12-18"},{"lineNumber":386,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-12-18"},{"lineNumber":387,"author":{"gitId":"eyelessrhyme7"},"content":"    -fx-background-color: #D97930;","lastModifiedDate":"2023-11-02"},{"lineNumber":388,"author":{"gitId":"-"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":389,"author":{"gitId":"-"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":390,"author":{"gitId":"-"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":391,"author":{"gitId":"-"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2016-12-18"},{"lineNumber":392,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":393,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":394,"author":{"gitId":"newway1814"},"content":".list-view {","lastModifiedDate":"2023-10-31"},{"lineNumber":395,"author":{"gitId":"newway1814"},"content":"    -fx-padding: 5px ;","lastModifiedDate":"2023-10-31"},{"lineNumber":396,"author":{"gitId":"newway1814"},"content":"}","lastModifiedDate":"2023-10-31"},{"lineNumber":397,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":398,"author":{"gitId":"newway1814"},"content":".list-cell {","lastModifiedDate":"2023-10-31"},{"lineNumber":399,"author":{"gitId":"newway1814"},"content":"    -fx-padding: 5px ;","lastModifiedDate":"2023-10-31"},{"lineNumber":400,"author":{"gitId":"newway1814"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2023-10-31"},{"lineNumber":401,"author":{"gitId":"newway1814"},"content":"    -fx-background-insets: 0px, 5px ;","lastModifiedDate":"2023-10-31"},{"lineNumber":402,"author":{"gitId":"newway1814"},"content":"}","lastModifiedDate":"2023-10-31"},{"lineNumber":403,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":404,"author":{"gitId":"newway1814"},"content":".list-cell:empty {","lastModifiedDate":"2023-10-31"},{"lineNumber":405,"author":{"gitId":"newway1814"},"content":"    -fx-padding: 5px ;","lastModifiedDate":"2023-10-31"},{"lineNumber":406,"author":{"gitId":"newway1814"},"content":"    -fx-background-color: transparent ;","lastModifiedDate":"2023-10-31"},{"lineNumber":407,"author":{"gitId":"newway1814"},"content":"    -fx-background-insets: 0 ;","lastModifiedDate":"2023-10-31"},{"lineNumber":408,"author":{"gitId":"newway1814"},"content":"}","lastModifiedDate":"2023-10-31"}],"authorContributionMap":{"eyelessrhyme7":34,"-":336,"newway1814":38}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"newway1814"},"content":"\u003c?import java.lang.String?\u003e","lastModifiedDate":"2023-10-31"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":10,"author":{"gitId":"newway1814"},"content":"\u003c?import javafx.scene.control.TableView?\u003e","lastModifiedDate":"2023-10-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":12,"author":{"gitId":"newway1814"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2023-10-31"},{"lineNumber":13,"author":{"gitId":"newway1814"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2023-10-31"},{"lineNumber":14,"author":{"gitId":"newway1814"},"content":"\u003c?import javafx.scene.layout.RowConstraints?\u003e","lastModifiedDate":"2023-10-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":17,"author":{"gitId":"newway1814"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2023-10-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":19,"author":{"gitId":"newway1814"},"content":"\u003cfx:root minHeight\u003d\"600\" minWidth\u003d\"450\" onCloseRequest\u003d\"#handleExit\" title\u003d\"ProfPlan\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/16\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-10-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"eyelessrhyme7"},"content":"    \u003cImage url\u003d\"@/images/profplan_32.png\" /\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":40,"author":{"gitId":"newway1814"},"content":"        \u003cStackPane fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2023-10-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":42,"author":{"gitId":"newway1814"},"content":"            \u003cInsets bottom\u003d\"5\" left\u003d\"10\" right\u003d\"10\" top\u003d\"5\" /\u003e","lastModifiedDate":"2023-10-31"},{"lineNumber":43,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":46,"author":{"gitId":"newway1814"},"content":"                    \u003cStackPane fx:id\u003d\"resultDisplayPlaceholder\" maxHeight\u003d\"100\" minHeight\u003d\"100\" prefHeight\u003d\"100\" style\u003d\"-fx-text-fill: white;\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2023-10-31"},{"lineNumber":47,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":48,"author":{"gitId":"newway1814"},"content":"            \u003cInsets bottom\u003d\"5\" left\u003d\"10\" right\u003d\"10\" top\u003d\"5\" /\u003e","lastModifiedDate":"2023-10-31"},{"lineNumber":49,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":50,"author":{"gitId":"newway1814"},"content":"               \u003cstyleClass\u003e","lastModifiedDate":"2023-10-31"},{"lineNumber":51,"author":{"gitId":"newway1814"},"content":"                  \u003cString fx:value\u003d\"pane-with-border\" /\u003e","lastModifiedDate":"2023-10-31"},{"lineNumber":52,"author":{"gitId":"newway1814"},"content":"                  \u003cString fx:value\u003d\"result-display\" /\u003e","lastModifiedDate":"2023-10-31"},{"lineNumber":53,"author":{"gitId":"newway1814"},"content":"               \u003c/styleClass\u003e","lastModifiedDate":"2023-10-31"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":56,"author":{"gitId":"newway1814"},"content":"        \u003cVBox fx:id\u003d\"taskList\" minWidth\u003d\"340\" prefWidth\u003d\"340\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-10-31"},{"lineNumber":57,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":58,"author":{"gitId":"newway1814"},"content":"            \u003cInsets bottom\u003d\"10\" left\u003d\"10\" right\u003d\"10\" top\u003d\"10\" /\u003e","lastModifiedDate":"2023-10-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":60,"author":{"gitId":"newway1814"},"content":"               \u003cGridPane fx:id\u003d\"resultGrid\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-10-31"},{"lineNumber":61,"author":{"gitId":"newway1814"},"content":"                 \u003ccolumnConstraints\u003e","lastModifiedDate":"2023-10-31"},{"lineNumber":62,"author":{"gitId":"newway1814"},"content":"                   \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"100.0\" /\u003e","lastModifiedDate":"2023-10-31"},{"lineNumber":63,"author":{"gitId":"newway1814"},"content":"                   \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"100.0\" /\u003e","lastModifiedDate":"2023-10-31"},{"lineNumber":64,"author":{"gitId":"newway1814"},"content":"                 \u003c/columnConstraints\u003e","lastModifiedDate":"2023-10-31"},{"lineNumber":65,"author":{"gitId":"newway1814"},"content":"                 \u003crowConstraints\u003e","lastModifiedDate":"2023-10-31"},{"lineNumber":66,"author":{"gitId":"newway1814"},"content":"                   \u003cRowConstraints /\u003e","lastModifiedDate":"2023-10-31"},{"lineNumber":67,"author":{"gitId":"newway1814"},"content":"                 \u003c/rowConstraints\u003e","lastModifiedDate":"2023-10-31"},{"lineNumber":68,"author":{"gitId":"newway1814"},"content":"                  \u003cchildren\u003e","lastModifiedDate":"2023-10-31"},{"lineNumber":69,"author":{"gitId":"newway1814"},"content":"                \u003cStackPane fx:id\u003d\"taskListPanelPlaceholder\" prefHeight\u003d\"150.0\" prefWidth\u003d\"107.0\" styleClass\u003d\"pane-with-border\" GridPane.hgrow\u003d\"NEVER\" GridPane.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-10-31"},{"lineNumber":70,"author":{"gitId":"newway1814"},"content":"                     \u003cStackPane prefHeight\u003d\"150.0\" prefWidth\u003d\"200.0\" styleClass\u003d\"pane-with-border\" GridPane.columnIndex\u003d\"1\" GridPane.hgrow\u003d\"NEVER\" GridPane.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-10-31"},{"lineNumber":71,"author":{"gitId":"newway1814"},"content":"                        \u003cchildren\u003e","lastModifiedDate":"2023-10-31"},{"lineNumber":72,"author":{"gitId":"newway1814"},"content":"                           \u003cTableView fx:id\u003d\"matrixDisplay\" prefHeight\u003d\"200.0\" prefWidth\u003d\"200.0\" styleClass\u003d\"matrix-display\" /\u003e","lastModifiedDate":"2023-10-31"},{"lineNumber":73,"author":{"gitId":"newway1814"},"content":"                        \u003c/children\u003e","lastModifiedDate":"2023-10-31"},{"lineNumber":74,"author":{"gitId":"newway1814"},"content":"                     \u003c/StackPane\u003e","lastModifiedDate":"2023-10-31"},{"lineNumber":75,"author":{"gitId":"newway1814"},"content":"                  \u003c/children\u003e","lastModifiedDate":"2023-10-31"},{"lineNumber":76,"author":{"gitId":"newway1814"},"content":"               \u003c/GridPane\u003e","lastModifiedDate":"2023-10-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"eyelessrhyme7":1,"-":48,"newway1814":34}},{"path":"src/main/resources/view/ResultDisplay.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.TextArea?\u003e","lastModifiedDate":"2016-10-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"newway1814"},"content":"\u003cStackPane fx:id\u003d\"placeHolder\" styleClass\u003d\"pane-with-border\" xmlns\u003d\"http://javafx.com/javafx/16\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-10-31"},{"lineNumber":7,"author":{"gitId":"newway1814"},"content":"  \u003cTextArea fx:id\u003d\"resultDisplay\" editable\u003d\"false\" style\u003d\"-fx-text-fill: white;\" styleClass\u003d\"result-display\" /\u003e","lastModifiedDate":"2023-10-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2017-06-22"}],"authorContributionMap":{"-":6,"newway1814":2}},{"path":"src/main/resources/view/TaskListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-07-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"      \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":31,"author":{"gitId":"eyelessrhyme7"},"content":"      \u003cLabel fx:id\u003d\"description\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$description\" /\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":32,"author":{"gitId":"yarnmengnus"},"content":"      \u003cLabel fx:id\u003d\"link\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$link\" /\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"eyelessrhyme7"},"content":"      \u003cLabel fx:id\u003d\"priority\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$priority\" /\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":34,"author":{"gitId":"jack1e0"},"content":"      \u003cLabel fx:id\u003d\"dueDate\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$dueDate\" /\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"eyelessrhyme7"},"content":"      \u003cLabel fx:id\u003d\"status\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$status\" style\u003d\"-fx-background-color: #1F9978; -fx-background-radius: 5;\" /\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"yarnmengnus":1,"jack1e0":1,"eyelessrhyme7":3,"-":33}},{"path":"src/main/resources/view/TaskListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-07-27"},{"lineNumber":7,"author":{"gitId":"newway1814"},"content":"  \u003cListView fx:id\u003d\"taskListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":7,"newway1814":1}},{"path":"src/test/java/profplan/AppParametersTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kiatkat"},"content":"package profplan;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-02-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-02-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-04-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2018-04-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class AppParametersTest {","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final ParametersStub parametersStub \u003d new ParametersStub();","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final AppParameters expected \u003d new AppParameters();","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void parse_validConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", \"config.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        expected.setConfigPath(Paths.get(\"config.json\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void parse_nullConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", null);","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void parse_invalidConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", \"a\\0\");","lastModifiedDate":"2018-04-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        expected.setConfigPath(null);","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d new AppParameters();","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        String expected \u003d AppParameters.class.getCanonicalName() + \"{configPath\u003d\" + appParameters.getConfigPath() + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertEquals(expected, appParameters.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2019-02-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d new AppParameters();","lastModifiedDate":"2019-02-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertTrue(appParameters.equals(new AppParameters()));","lastModifiedDate":"2019-02-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(appParameters.equals(appParameters));","lastModifiedDate":"2019-02-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertFalse(appParameters.equals(null));","lastModifiedDate":"2019-02-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertFalse(appParameters.equals(5.0f));","lastModifiedDate":"2019-02-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // different config path -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        AppParameters otherAppParameters \u003d new AppParameters();","lastModifiedDate":"2019-02-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        otherAppParameters.setConfigPath(Paths.get(\"configPath\"));","lastModifiedDate":"2019-02-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertFalse(appParameters.equals(otherAppParameters));","lastModifiedDate":"2019-02-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    private static class ParametersStub extends Application.Parameters {","lastModifiedDate":"2018-04-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        private Map\u003cString, String\u003e namedParameters \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        public List\u003cString\u003e getRaw() {","lastModifiedDate":"2018-04-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"should not be called\");","lastModifiedDate":"2018-04-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        public List\u003cString\u003e getUnnamed() {","lastModifiedDate":"2018-04-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"should not be called\");","lastModifiedDate":"2018-04-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        public Map\u003cString, String\u003e getNamed() {","lastModifiedDate":"2018-04-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            return Collections.unmodifiableMap(namedParameters);","lastModifiedDate":"2018-04-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-04-21"}],"authorContributionMap":{"kiatkat":1,"-":88}},{"path":"src/test/java/profplan/commons/core/ConfigTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kiatkat"},"content":"package profplan.commons.core;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class ConfigTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        Config config \u003d new Config();","lastModifiedDate":"2019-02-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        String expected \u003d Config.class.getCanonicalName() + \"{logLevel\u003d\" + config.getLogLevel()","lastModifiedDate":"2019-02-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"                + \", userPrefsFilePath\u003d\" + config.getUserPrefsFilePath() + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        assertEquals(expected, config.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public void equalsMethod() {","lastModifiedDate":"2016-09-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        Config defaultConfig \u003d new Config();","lastModifiedDate":"2016-09-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertNotNull(defaultConfig);","lastModifiedDate":"2016-10-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertTrue(defaultConfig.equals(defaultConfig));","lastModifiedDate":"2016-09-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"kiatkat":1,"-":26}},{"path":"src/test/java/profplan/commons/core/GuiSettingsTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kiatkat"},"content":"package profplan.commons.core;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-02-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class GuiSettingsTest {","lastModifiedDate":"2019-02-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2019-02-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        String expected \u003d GuiSettings.class.getCanonicalName() + \"{windowWidth\u003d\" + guiSettings.getWindowWidth()","lastModifiedDate":"2019-02-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"                + \", windowHeight\u003d\" + guiSettings.getWindowHeight() + \", windowCoordinates\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"                + guiSettings.getWindowCoordinates() + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        assertEquals(expected, guiSettings.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-02-23"}],"authorContributionMap":{"kiatkat":1,"-":15}},{"path":"src/test/java/profplan/commons/core/VersionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kiatkat"},"content":"package profplan.commons.core;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":8,"author":{"gitId":"kiatkat"},"content":"import profplan.testutil.Assert;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class VersionTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public void versionParsing_acceptableVersionString_parsedVersionCorrectly() {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V0.0.0ea\", 0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V3.10.2\", 3, 10, 2, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V100.100.100ea\", 100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public void versionParsing_wrongVersionString_throwIllegalArgumentException() {","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"kiatkat"},"content":"        Assert.assertThrows(IllegalArgumentException.class, () -\u003e Version.fromString(\"This is not a version string\"));","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void versionConstructor_correctParameter_valueAsExpected() {","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(19, 10, 20, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(19, version.getMajor());","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(10, version.getMinor());","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(20, version.getPatch());","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertEquals(true, version.isEarlyAccess());","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void versionToString_validVersion_correctStringRepresentation() {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // boundary at 0","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertEquals(\"V0.0.0ea\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // normal values","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        version \u003d new Version(4, 10, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertEquals(\"V4.10.5\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // big numbers","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        version \u003d new Version(100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertEquals(\"V100.100.100ea\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_compareToIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Version one;","lastModifiedDate":"2017-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Version another;","lastModifiedDate":"2017-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // Tests equality","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003d\u003d 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        one \u003d new Version(11, 12, 13, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        another \u003d new Version(11, 12, 13, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003d\u003d 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // Tests different patch","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // Tests different minor","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 5, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // Tests different major","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        one \u003d new Version(10, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // Tests high major vs low minor","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        one \u003d new Version(10, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 1, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        // Tests high patch vs low minor","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 10, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 1, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        // Tests same major minor different patch","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        // Tests early access vs not early access on same version number","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        // Tests early access lower version vs not early access higher version compare by version number first","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // Tests early access higher version vs not early access lower version compare by version number first","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_hashCodeIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertEquals(100100100, version.hashCode());","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        version \u003d new Version(10, 10, 10, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertEquals(1010010010, version.hashCode());","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_equalIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        Version one;","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        Version another;","lastModifiedDate":"2016-10-16"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertTrue(one.equals(another));","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        one \u003d new Version(100, 191, 275, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        another \u003d new Version(100, 191, 275, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertTrue(one.equals(another));","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    private void verifyVersionParsedCorrectly(String versionString,","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            int major, int minor, int patch, boolean isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertEquals(new Version(major, minor, patch, isEarlyAccess), Version.fromString(versionString));","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"kiatkat":3,"-":133}},{"path":"src/test/java/profplan/commons/core/index/IndexTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kiatkat"},"content":"package profplan.commons.core.index;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":9,"author":{"gitId":"kiatkat"},"content":"import profplan.testutil.Assert;","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class IndexTest {","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public void createOneBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"kiatkat"},"content":"        Assert.assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromOneBased(0));","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromOneBased(1).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromOneBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // convert from one-based index to zero-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromOneBased(1).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertEquals(4, Index.fromOneBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void createZeroBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":30,"author":{"gitId":"kiatkat"},"content":"        Assert.assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromZeroBased(-1));","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromZeroBased(0).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromZeroBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // convert from zero-based index to one-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromZeroBased(0).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertEquals(6, Index.fromZeroBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-05-24"},{"lineNumber":43,"author":{"gitId":"newway1814"},"content":"        final Index fifthTaskIndex \u003d Index.fromOneBased(5);","lastModifiedDate":"2023-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":46,"author":{"gitId":"newway1814"},"content":"        assertTrue(fifthTaskIndex.equals(Index.fromOneBased(5)));","lastModifiedDate":"2023-10-16"},{"lineNumber":47,"author":{"gitId":"newway1814"},"content":"        assertTrue(fifthTaskIndex.equals(Index.fromZeroBased(4)));","lastModifiedDate":"2023-10-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":50,"author":{"gitId":"newway1814"},"content":"        assertTrue(fifthTaskIndex.equals(fifthTaskIndex));","lastModifiedDate":"2023-10-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":53,"author":{"gitId":"newway1814"},"content":"        assertFalse(fifthTaskIndex.equals(null));","lastModifiedDate":"2023-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":56,"author":{"gitId":"newway1814"},"content":"        assertFalse(fifthTaskIndex.equals(5.0f));","lastModifiedDate":"2023-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":59,"author":{"gitId":"newway1814"},"content":"        assertFalse(fifthTaskIndex.equals(Index.fromOneBased(1)));","lastModifiedDate":"2023-10-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        Index index \u003d Index.fromZeroBased(0);","lastModifiedDate":"2019-02-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        String expected \u003d Index.class.getCanonicalName() + \"{zeroBasedIndex\u003d\" + index.getZeroBased() + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertEquals(expected, index.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"kiatkat":4,"-":57,"newway1814":7}},{"path":"src/test/java/profplan/commons/util/AppUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kiatkat"},"content":"package profplan.commons.util;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":7,"author":{"gitId":"kiatkat"},"content":"import profplan.testutil.Assert;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class AppUtilTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void getImage_exitingImage() {","lastModifiedDate":"2016-09-30"},{"lineNumber":13,"author":{"gitId":"eyelessrhyme7"},"content":"        assertNotNull(AppUtil.getImage(\"/images/profplan_32.png\"));","lastModifiedDate":"2023-11-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void getImage_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":18,"author":{"gitId":"kiatkat"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e AppUtil.getImage(null));","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public void checkArgument_true_nothingHappens() {","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true);","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true, \"\");","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithoutErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"kiatkat"},"content":"        Assert.assertThrows(IllegalArgumentException.class, () -\u003e AppUtil.checkArgument(false));","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        String errorMessage \u003d \"error message\";","lastModifiedDate":"2017-05-15"},{"lineNumber":35,"author":{"gitId":"kiatkat"},"content":"        Assert.assertThrows(IllegalArgumentException.class, errorMessage, () -\u003e AppUtil.checkArgument(false,","lastModifiedDate":"2023-10-14"},{"lineNumber":36,"author":{"gitId":"kiatkat"},"content":"                errorMessage));","lastModifiedDate":"2023-10-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"kiatkat":6,"eyelessrhyme7":1,"-":31}},{"path":"src/test/java/profplan/commons/util/CollectionUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kiatkat"},"content":"package profplan.commons.util;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"kiatkat"},"content":"import static profplan.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":14,"author":{"gitId":"kiatkat"},"content":"import profplan.testutil.Assert;","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class CollectionUtilTest {","lastModifiedDate":"2016-12-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void requireAllNonNullVarargs() {","lastModifiedDate":"2017-05-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // no arguments","lastModifiedDate":"2017-01-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown();","lastModifiedDate":"2017-05-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // any non-empty argument list","lastModifiedDate":"2017-01-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(new Object(), new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(\"test\");","lastModifiedDate":"2017-05-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(\"\");","lastModifiedDate":"2017-05-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // argument lists with just one null at the beginning","lastModifiedDate":"2017-01-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Object) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(null, \"\", new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(null, new Object(), new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // argument lists with nulls in the middle","lastModifiedDate":"2017-01-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(new Object(), null, null, \"test\");","lastModifiedDate":"2017-05-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(\"\", null, new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // argument lists with one null as the last argument","lastModifiedDate":"2017-01-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(\"\", new Object(), null);","lastModifiedDate":"2017-05-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(new Object(), new Object(), null);","lastModifiedDate":"2017-05-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // null reference","lastModifiedDate":"2017-05-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Object[]) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // confirms nulls inside lists in the argument list are not considered","lastModifiedDate":"2017-01-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        List\u003cObject\u003e containingNull \u003d Arrays.asList((Object) null);","lastModifiedDate":"2017-01-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(containingNull, new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-14"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void requireAllNonNullCollection() {","lastModifiedDate":"2017-05-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // lists containing nulls in the front","lastModifiedDate":"2017-01-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList((Object) null));","lastModifiedDate":"2017-05-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(null, new Object(), \"\"));","lastModifiedDate":"2017-05-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // lists containing nulls in the middle","lastModifiedDate":"2017-01-14"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", null, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", null, \"eggs\", null, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // lists containing nulls at the end","lastModifiedDate":"2017-01-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", new Object(), null));","lastModifiedDate":"2017-05-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(new Object(), null));","lastModifiedDate":"2017-05-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // null reference","lastModifiedDate":"2017-05-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Collection\u003cObject\u003e) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // empty list","lastModifiedDate":"2017-01-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Collections.emptyList());","lastModifiedDate":"2017-05-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // list with all non-null elements","lastModifiedDate":"2017-01-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(new Object(), \"ham\", Integer.valueOf(1)));","lastModifiedDate":"2018-04-01"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // confirms nulls inside nested lists are not considered","lastModifiedDate":"2017-01-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        List\u003cObject\u003e containingNull \u003d Arrays.asList((Object) null);","lastModifiedDate":"2017-01-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(containingNull, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void isAnyNonNull() {","lastModifiedDate":"2017-06-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull());","lastModifiedDate":"2017-06-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull((Object) null));","lastModifiedDate":"2017-06-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull((Object[]) null));","lastModifiedDate":"2017-06-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertTrue(CollectionUtil.isAnyNonNull(new Object()));","lastModifiedDate":"2017-06-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertTrue(CollectionUtil.isAnyNonNull(new Object(), null));","lastModifiedDate":"2017-06-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Asserts that {@code CollectionUtil#requireAllNonNull(Object...)} throw {@code NullPointerException}","lastModifiedDate":"2017-08-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * if {@code objects} or any element of {@code objects} is null.","lastModifiedDate":"2017-08-20"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionThrown(Object... objects) {","lastModifiedDate":"2017-05-19"},{"lineNumber":91,"author":{"gitId":"kiatkat"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e requireAllNonNull(objects));","lastModifiedDate":"2023-10-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Asserts that {@code CollectionUtil#requireAllNonNull(Collection\u003c?\u003e)} throw {@code NullPointerException}","lastModifiedDate":"2017-08-20"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * if {@code collection} or any element of {@code collection} is null.","lastModifiedDate":"2017-08-20"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionThrown(Collection\u003c?\u003e collection) {","lastModifiedDate":"2017-05-19"},{"lineNumber":99,"author":{"gitId":"kiatkat"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e requireAllNonNull(collection));","lastModifiedDate":"2023-10-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionNotThrown(Object... objects) {","lastModifiedDate":"2017-05-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        requireAllNonNull(objects);","lastModifiedDate":"2017-05-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionNotThrown(Collection\u003c?\u003e collection) {","lastModifiedDate":"2017-05-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        requireAllNonNull(collection);","lastModifiedDate":"2017-05-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-22"}],"authorContributionMap":{"kiatkat":5,"-":104}},{"path":"src/test/java/profplan/commons/util/ConfigUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kiatkat"},"content":"package profplan.commons.util;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":15,"author":{"gitId":"kiatkat"},"content":"import profplan.commons.core.Config;","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"kiatkat"},"content":"import profplan.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"kiatkat"},"content":"import profplan.testutil.Assert;","lastModifiedDate":"2023-10-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class ConfigUtilTest {","lastModifiedDate":"2016-09-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"ConfigUtilTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path tempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void read_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"kiatkat"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e read(null));","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void read_missingFile_emptyResult() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(read(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":38,"author":{"gitId":"kiatkat"},"content":"        Assert.assertThrows(DataLoadingException.class, () -\u003e read(\"NotJsonFormatConfig.json\"));","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void read_fileInOrder_successfullyRead() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Config expected \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"TypicalConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void read_valuesMissingFromFile_defaultValuesUsed() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"EmptyConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertEquals(new Config(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void read_extraValuesInFile_extraValuesIgnored() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Config expected \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"ExtraValuesConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    private Config getTypicalConfig() {","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Config config \u003d new Config();","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        config.setLogLevel(Level.INFO);","lastModifiedDate":"2016-09-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        config.setUserPrefsFilePath(Paths.get(\"preferences.json\"));","lastModifiedDate":"2018-04-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return config;","lastModifiedDate":"2016-09-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    private Optional\u003cConfig\u003e read(String configFileInTestDataFolder) throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d addToTestDataPathIfNotNull(configFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return ConfigUtil.readConfig(configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void save_nullConfig_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":78,"author":{"gitId":"kiatkat"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e save(null, \"SomeFile.json\"));","lastModifiedDate":"2023-10-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void save_nullFile_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":83,"author":{"gitId":"kiatkat"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e save(new Config(), null));","lastModifiedDate":"2023-10-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void saveConfig_allInOrder_success() throws DataLoadingException, IOException {","lastModifiedDate":"2023-06-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Config original \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d tempDir.resolve(\"TempConfig.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(original, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        Config readBack \u003d ConfigUtil.readConfig(configFilePath).get();","lastModifiedDate":"2016-12-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        original.setLogLevel(Level.FINE);","lastModifiedDate":"2016-09-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(original, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        readBack \u003d ConfigUtil.readConfig(configFilePath).get();","lastModifiedDate":"2016-12-20"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    private void save(Config config, String configFileInTestDataFolder) throws IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d addToTestDataPathIfNotNull(configFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(config, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String configFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return configFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                                  ? TEST_DATA_FOLDER.resolve(configFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                                  : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"kiatkat":8,"-":108}},{"path":"src/test/java/profplan/commons/util/FileUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kiatkat"},"content":"package profplan.commons.util;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":8,"author":{"gitId":"kiatkat"},"content":"import profplan.testutil.Assert;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class FileUtilTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public void isValidPath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        // valid path","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        assertTrue(FileUtil.isValidPath(\"valid/file/path\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        // invalid path","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertFalse(FileUtil.isValidPath(\"a\\0\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        // null path -\u003e throws NullPointerException","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"kiatkat"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e FileUtil.isValidPath(null));","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"kiatkat":3,"-":21}},{"path":"src/test/java/profplan/commons/util/JsonUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kiatkat"},"content":"package profplan.commons.util;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-10-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"kiatkat"},"content":"import profplan.testutil.SerializableTestClass;","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"kiatkat"},"content":"import profplan.testutil.TestUtil;","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Tests JSON Read and Write","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class JsonUtilTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Path SERIALIZATION_FILE \u003d TestUtil.getFilePathInSandboxFolder(\"serialize.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void serializeObjectToJsonFile_noExceptionThrown() throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        SerializableTestClass serializableTestClass \u003d new SerializableTestClass();","lastModifiedDate":"2016-10-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        serializableTestClass.setTestValues();","lastModifiedDate":"2016-10-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        JsonUtil.serializeObjectToJsonFile(SERIALIZATION_FILE, serializableTestClass);","lastModifiedDate":"2016-10-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(FileUtil.readFromFile(SERIALIZATION_FILE), SerializableTestClass.JSON_STRING_REPRESENTATION);","lastModifiedDate":"2016-10-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void deserializeObjectFromJsonFile_noExceptionThrown() throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        FileUtil.writeToFile(SERIALIZATION_FILE, SerializableTestClass.JSON_STRING_REPRESENTATION);","lastModifiedDate":"2016-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        SerializableTestClass serializableTestClass \u003d JsonUtil","lastModifiedDate":"2016-10-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                .deserializeObjectFromJsonFile(SERIALIZATION_FILE, SerializableTestClass.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getName(), SerializableTestClass.getNameTestValue());","lastModifiedDate":"2016-10-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getListOfLocalDateTimes(), SerializableTestClass.getListTestValues());","lastModifiedDate":"2016-10-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getMapOfIntegerToString(), SerializableTestClass.getHashMapTestValues());","lastModifiedDate":"2016-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    //TODO: @Test jsonUtil_readJsonStringToObjectInstance_correctObject()","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    //TODO: @Test jsonUtil_writeThenReadObjectToJson_correctObject()","lastModifiedDate":"2016-09-28"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"kiatkat":3,"-":42}},{"path":"src/test/java/profplan/commons/util/SampleDataUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jack1e0"},"content":"package profplan.commons.util;","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"jack1e0"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"jack1e0"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"jack1e0"},"content":"import profplan.model.task.DueDate;","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"jack1e0"},"content":"import profplan.model.task.Task;","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"jack1e0"},"content":"import profplan.model.util.SampleDataUtil;","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"jack1e0"},"content":"public class SampleDataUtilTest {","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"jack1e0"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"jack1e0"},"content":"    public void sampleDataUtil_test() {","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"jack1e0"},"content":"        Task[] tasks \u003d SampleDataUtil.getSampleTasks();","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"jack1e0"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"eyelessrhyme7"},"content":"            assertTrue(DueDate.isValidDate(task.getDueDate().toString()));","lastModifiedDate":"2023-11-13"},{"lineNumber":17,"author":{"gitId":"jack1e0"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"jack1e0"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"jack1e0"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"jack1e0":18,"eyelessrhyme7":1}},{"path":"src/test/java/profplan/commons/util/StringUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kiatkat"},"content":"package profplan.commons.util;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":10,"author":{"gitId":"kiatkat"},"content":"import profplan.testutil.Assert;","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class StringUtilTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    //---------------- Tests for isNonZeroUnsignedInteger --------------------------------------","lastModifiedDate":"2019-02-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void isNonZeroUnsignedInteger() {","lastModifiedDate":"2019-02-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // EP: empty strings","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"  \"));","lastModifiedDate":"2017-06-02"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        // EP: not a number","lastModifiedDate":"2016-10-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"a\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"aaa\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // EP: zero","lastModifiedDate":"2016-10-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"0\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // EP: zero as prefix","lastModifiedDate":"2017-06-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"01\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // EP: signed numbers","lastModifiedDate":"2016-10-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"-1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"+1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // EP: numbers with white space","lastModifiedDate":"2016-10-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\" 10 \")); // Leading/trailing spaces","lastModifiedDate":"2017-06-02"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"1 0\")); // Spaces in the middle","lastModifiedDate":"2017-06-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // EP: number larger than Integer.MAX_VALUE","lastModifiedDate":"2017-06-02"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2017-06-02"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // EP: valid numbers, should return true","lastModifiedDate":"2016-10-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"1\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"10\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    //---------------- Tests for containsWordIgnoreCase --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for word: null, empty, multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for sentence: null","lastModifiedDate":"2016-10-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * The four test cases below test one invalid input at a time.","lastModifiedDate":"2016-10-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullWord_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":60,"author":{"gitId":"kiatkat"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(","lastModifiedDate":"2023-10-14"},{"lineNumber":61,"author":{"gitId":"kiatkat"},"content":"                \"typical sentence\", null));","lastModifiedDate":"2023-10-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_emptyWord_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":66,"author":{"gitId":"kiatkat"},"content":"        Assert.assertThrows(IllegalArgumentException.class, \"Word parameter cannot be empty\", ()","lastModifiedDate":"2023-10-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"  \"));","lastModifiedDate":"2019-03-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_multipleWords_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":72,"author":{"gitId":"kiatkat"},"content":"        Assert.assertThrows(IllegalArgumentException.class, \"Word parameter should be a single word\", ()","lastModifiedDate":"2023-10-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"aaa BBB\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullSentence_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":78,"author":{"gitId":"kiatkat"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(null, \"abc\"));","lastModifiedDate":"2023-10-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for word:","lastModifiedDate":"2016-10-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     *   - any word","lastModifiedDate":"2016-10-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     *   - word containing symbols/numbers","lastModifiedDate":"2016-10-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     *   - word with leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for sentence:","lastModifiedDate":"2016-10-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     *   - empty string","lastModifiedDate":"2016-10-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     *   - one word","lastModifiedDate":"2016-10-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     *   - multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     *   - sentence with extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Possible scenarios returning true:","lastModifiedDate":"2016-10-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     *   - matches first word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     *   - last word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     *   - middle word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     *   - matches multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * Possible scenarios returning false:","lastModifiedDate":"2016-10-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     *   - query word matches part of a sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     *   - sentence word matches part of the query word","lastModifiedDate":"2016-10-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * The test method below tries to verify all above with a reasonably low number of test cases.","lastModifiedDate":"2016-10-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_validInputs_correctResult() {","lastModifiedDate":"2016-10-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        // Empty sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"\", \"abc\")); // Boundary case","lastModifiedDate":"2016-10-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"    \", \"123\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        // Matches a partial word only","lastModifiedDate":"2016-10-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bb\")); // Sentence word bigger than query word","lastModifiedDate":"2016-10-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bbbb\")); // Query word bigger than sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        // Matches word in the sentence, different upper/lower case letters","lastModifiedDate":"2016-10-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc\", \"Bbb\")); // First word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc@1\", \"CCc@1\")); // Last word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"  AAA   bBb   ccc  \", \"aaa\")); // Sentence has extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"Aaa\", \"aaa\")); // Only one word in sentence (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"  ccc  \")); // Leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        // Matches multiple words in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"AAA bBb ccc  bbb\", \"bbB\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    //---------------- Tests for getDetails --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * Equivalence Partitions: null, valid throwable object","lastModifiedDate":"2016-10-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public void getDetails_exceptionGiven() {","lastModifiedDate":"2016-09-30"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.getDetails(new FileNotFoundException(\"file not found\"))","lastModifiedDate":"2019-03-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"            .contains(\"java.io.FileNotFoundException: file not found\"));","lastModifiedDate":"2019-03-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    public void getDetails_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":142,"author":{"gitId":"kiatkat"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e StringUtil.getDetails(null));","lastModifiedDate":"2023-10-13"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":145,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"kiatkat":8,"-":137}},{"path":"src/test/java/profplan/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kiatkat"},"content":"package profplan.logic;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"newway1814"},"content":"import static profplan.logic.Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX;","lastModifiedDate":"2023-10-16"},{"lineNumber":5,"author":{"gitId":"kiatkat"},"content":"import static profplan.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.AccessDeniedException;","lastModifiedDate":"2023-06-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":15,"author":{"gitId":"kiatkat"},"content":"import profplan.logic.commands.AddCommand;","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"kiatkat"},"content":"import profplan.logic.commands.CommandResult;","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"kiatkat"},"content":"import profplan.logic.commands.CommandTestUtil;","lastModifiedDate":"2023-10-14"},{"lineNumber":18,"author":{"gitId":"kiatkat"},"content":"import profplan.logic.commands.ListCommand;","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"kiatkat"},"content":"import profplan.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"kiatkat"},"content":"import profplan.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"kiatkat"},"content":"import profplan.model.Model;","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"kiatkat"},"content":"import profplan.model.ModelManager;","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"kiatkat"},"content":"import profplan.model.ReadOnlyProfPlan;","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"kiatkat"},"content":"import profplan.model.UserConfigs;","lastModifiedDate":"2023-11-01"},{"lineNumber":25,"author":{"gitId":"kiatkat"},"content":"import profplan.model.UserPrefs;","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"newway1814"},"content":"import profplan.model.task.Task;","lastModifiedDate":"2023-10-16"},{"lineNumber":27,"author":{"gitId":"kiatkat"},"content":"import profplan.storage.JsonProfPlanStorage;","lastModifiedDate":"2023-10-14"},{"lineNumber":28,"author":{"gitId":"kiatkat"},"content":"import profplan.storage.JsonUserConfigsStorage;","lastModifiedDate":"2023-11-01"},{"lineNumber":29,"author":{"gitId":"kiatkat"},"content":"import profplan.storage.JsonUserPrefsStorage;","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"kiatkat"},"content":"import profplan.storage.StorageManager;","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"kiatkat"},"content":"import profplan.testutil.Assert;","lastModifiedDate":"2023-10-14"},{"lineNumber":32,"author":{"gitId":"newway1814"},"content":"import profplan.testutil.TaskBuilder;","lastModifiedDate":"2023-10-16"},{"lineNumber":33,"author":{"gitId":"newway1814"},"content":"import profplan.testutil.TypicalTasks;","lastModifiedDate":"2023-10-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy IO exception\");","lastModifiedDate":"2023-06-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_AD_EXCEPTION \u003d new AccessDeniedException(\"dummy access denied exception\");","lastModifiedDate":"2023-06-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":47,"author":{"gitId":"jack1e0"},"content":"        JsonProfPlanStorage profPlanStorage \u003d","lastModifiedDate":"2023-11-12"},{"lineNumber":48,"author":{"gitId":"kiatkat"},"content":"                new JsonProfPlanStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2023-10-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":50,"author":{"gitId":"kiatkat"},"content":"        JsonUserConfigsStorage userConfigsStorage \u003d new JsonUserConfigsStorage(","lastModifiedDate":"2023-11-01"},{"lineNumber":51,"author":{"gitId":"kiatkat"},"content":"                temporaryFolder.resolve(\"userConfigs.json\"));","lastModifiedDate":"2023-11-01"},{"lineNumber":52,"author":{"gitId":"jack1e0"},"content":"        StorageManager storage \u003d new StorageManager(profPlanStorage, userPrefsStorage, userConfigsStorage);","lastModifiedDate":"2023-11-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        String deleteCommand \u003d \"delete 9\";","lastModifiedDate":"2017-06-14"},{"lineNumber":65,"author":{"gitId":"newway1814"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_TASK_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2017-06-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2017-06-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":75,"author":{"gitId":"newway1814"},"content":"    public void getFilteredTaskList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-10-16"},{"lineNumber":76,"author":{"gitId":"newway1814"},"content":"        Assert.assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredTaskList().remove(0));","lastModifiedDate":"2023-10-16"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":115,"author":{"gitId":"kiatkat"},"content":"        Model expectedModel \u003d new ModelManager(model.getProfPlan(), new UserPrefs(), new UserConfigs());","lastModifiedDate":"2023-11-01"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":128,"author":{"gitId":"kiatkat"},"content":"        Assert.assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2023-10-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * Tests the Logic component\u0027s handling of an {@code IOException} thrown by the Storage component.","lastModifiedDate":"2023-06-13"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-06-13"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * @param e the exception to be thrown by the Storage component","lastModifiedDate":"2023-06-13"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * @param expectedMessage the message expected inside exception thrown by the Logic component","lastModifiedDate":"2023-06-13"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    private void assertCommandFailureForExceptionFromStorage(IOException e, String expectedMessage) {","lastModifiedDate":"2023-06-13"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        Path prefPath \u003d temporaryFolder.resolve(\"ExceptionUserPrefs.json\");","lastModifiedDate":"2023-06-13"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":141,"author":{"gitId":"kiatkat"},"content":"        // Inject LogicManager with an ProfPlanStorage that throws the IOException e when saving","lastModifiedDate":"2023-10-13"},{"lineNumber":142,"author":{"gitId":"jack1e0"},"content":"        JsonProfPlanStorage profPlanStorage \u003d new JsonProfPlanStorage(prefPath) {","lastModifiedDate":"2023-11-12"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":144,"author":{"gitId":"kiatkat"},"content":"            public void saveProfPlan(ReadOnlyProfPlan addressBook, Path filePath)","lastModifiedDate":"2023-10-13"},{"lineNumber":145,"author":{"gitId":"-"},"content":"                    throws IOException {","lastModifiedDate":"2023-06-13"},{"lineNumber":146,"author":{"gitId":"-"},"content":"                throw e;","lastModifiedDate":"2023-06-13"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2023-06-13"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2023-06-13"},{"lineNumber":151,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ExceptionUserPrefs.json\"));","lastModifiedDate":"2023-06-13"},{"lineNumber":152,"author":{"gitId":"kiatkat"},"content":"        JsonUserConfigsStorage userConfigsStorage \u003d","lastModifiedDate":"2023-11-01"},{"lineNumber":153,"author":{"gitId":"kiatkat"},"content":"                new JsonUserConfigsStorage(temporaryFolder.resolve(\"ExceptionUserConfigs.json\"));","lastModifiedDate":"2023-11-01"},{"lineNumber":154,"author":{"gitId":"jack1e0"},"content":"        StorageManager storage \u003d new StorageManager(profPlanStorage, userPrefsStorage, userConfigsStorage);","lastModifiedDate":"2023-11-12"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2023-06-13"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        // Triggers the saveAddressBook method by executing an add command","lastModifiedDate":"2023-06-13"},{"lineNumber":159,"author":{"gitId":"kiatkat"},"content":"        String addCommand \u003d AddCommand.COMMAND_WORD + CommandTestUtil.NAME_DESC_AMY + CommandTestUtil.PRIORITY_DESC_AMY;","lastModifiedDate":"2023-10-29"},{"lineNumber":160,"author":{"gitId":"newway1814"},"content":"        Task expectedTask \u003d new TaskBuilder(TypicalTasks.AMY).withTags().build();","lastModifiedDate":"2023-10-16"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2023-06-13"},{"lineNumber":162,"author":{"gitId":"newway1814"},"content":"        expectedModel.addTask(expectedTask);","lastModifiedDate":"2023-10-16"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2023-06-13"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":165,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"jack1e0":4,"kiatkat":28,"-":124,"newway1814":9}},{"path":"src/test/java/profplan/logic/commands/AddCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kiatkat"},"content":"package profplan.logic.commands;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"kiatkat"},"content":"import static profplan.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"kiatkat"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"kiatkat"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"kiatkat"},"content":"import profplan.logic.Messages;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"kiatkat"},"content":"import profplan.model.Model;","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"kiatkat"},"content":"import profplan.model.ModelManager;","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"kiatkat"},"content":"import profplan.model.UserConfigs;","lastModifiedDate":"2023-11-01"},{"lineNumber":12,"author":{"gitId":"kiatkat"},"content":"import profplan.model.UserPrefs;","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"newway1814"},"content":"import profplan.model.task.Task;","lastModifiedDate":"2023-10-16"},{"lineNumber":14,"author":{"gitId":"newway1814"},"content":"import profplan.testutil.TaskBuilder;","lastModifiedDate":"2023-10-16"},{"lineNumber":15,"author":{"gitId":"newway1814"},"content":"import profplan.testutil.TypicalTasks;","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"kiatkat"},"content":"/**","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"kiatkat"},"content":" * Contains integration tests (interaction with the Model) for {@code AddCommand}.","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"kiatkat"},"content":" */","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"kiatkat"},"content":"public class AddCommandIntegrationTest {","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"kiatkat"},"content":"    private Model model;","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"kiatkat"},"content":"    @BeforeEach","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"kiatkat"},"content":"    public void setUp() {","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"kiatkat"},"content":"        model \u003d new ModelManager(TypicalTasks.getTypicalProfPlan(), new UserPrefs(), new UserConfigs());","lastModifiedDate":"2023-11-01"},{"lineNumber":27,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"kiatkat"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"newway1814"},"content":"    public void execute_newTask_success() {","lastModifiedDate":"2023-10-16"},{"lineNumber":31,"author":{"gitId":"newway1814"},"content":"        Task validTask \u003d new TaskBuilder().build();","lastModifiedDate":"2023-10-16"},{"lineNumber":32,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"kiatkat"},"content":"        Model expectedModel \u003d new ModelManager(model.getProfPlan(), new UserPrefs(), new UserConfigs());","lastModifiedDate":"2023-11-01"},{"lineNumber":34,"author":{"gitId":"newway1814"},"content":"        expectedModel.addTask(validTask);","lastModifiedDate":"2023-10-16"},{"lineNumber":35,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"newway1814"},"content":"        assertCommandSuccess(new AddCommand(validTask), model,","lastModifiedDate":"2023-10-16"},{"lineNumber":37,"author":{"gitId":"newway1814"},"content":"                String.format(AddCommand.MESSAGE_SUCCESS, Messages.format(validTask)),","lastModifiedDate":"2023-10-16"},{"lineNumber":38,"author":{"gitId":"kiatkat"},"content":"                expectedModel);","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":41,"author":{"gitId":"kiatkat"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":42,"author":{"gitId":"newway1814"},"content":"    public void execute_duplicateTask_throwsCommandException() {","lastModifiedDate":"2023-10-16"},{"lineNumber":43,"author":{"gitId":"newway1814"},"content":"        Task taskInList \u003d model.getProfPlan().getTaskList().get(0);","lastModifiedDate":"2023-10-16"},{"lineNumber":44,"author":{"gitId":"newway1814"},"content":"        CommandTestUtil.assertCommandFailure(new AddCommand(taskInList), model,","lastModifiedDate":"2023-10-16"},{"lineNumber":45,"author":{"gitId":"newway1814"},"content":"                AddCommand.MESSAGE_DUPLICATE_TASK);","lastModifiedDate":"2023-10-16"},{"lineNumber":46,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":47,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":48,"author":{"gitId":"kiatkat"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"kiatkat":36,"newway1814":12}},{"path":"src/test/java/profplan/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kiatkat"},"content":"package profplan.logic.commands;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":16,"author":{"gitId":"kiatkat"},"content":"import profplan.commons.core.GuiSettings;","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"kiatkat"},"content":"import profplan.logic.Messages;","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"kiatkat"},"content":"import profplan.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"kiatkat"},"content":"import profplan.model.Model;","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"kiatkat"},"content":"import profplan.model.ProfPlan;","lastModifiedDate":"2023-10-14"},{"lineNumber":21,"author":{"gitId":"kiatkat"},"content":"import profplan.model.ReadOnlyProfPlan;","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"kiatkat"},"content":"import profplan.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"newway1814"},"content":"import profplan.model.task.Task;","lastModifiedDate":"2023-10-16"},{"lineNumber":24,"author":{"gitId":"kiatkat"},"content":"import profplan.testutil.Assert;","lastModifiedDate":"2023-10-14"},{"lineNumber":25,"author":{"gitId":"newway1814"},"content":"import profplan.testutil.TaskBuilder;","lastModifiedDate":"2023-10-16"},{"lineNumber":26,"author":{"gitId":"newway1814"},"content":"import profplan.testutil.TypicalTasks;","lastModifiedDate":"2023-10-16"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":31,"author":{"gitId":"newway1814"},"content":"    public void constructor_nullTask_throwsNullPointerException() {","lastModifiedDate":"2023-10-16"},{"lineNumber":32,"author":{"gitId":"kiatkat"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":36,"author":{"gitId":"newway1814"},"content":"    public void execute_taskAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2023-10-16"},{"lineNumber":37,"author":{"gitId":"newway1814"},"content":"        ModelStubAcceptingTaskAdded modelStub \u003d new ModelStubAcceptingTaskAdded();","lastModifiedDate":"2023-10-16"},{"lineNumber":38,"author":{"gitId":"newway1814"},"content":"        Task validTask \u003d new TaskBuilder().build();","lastModifiedDate":"2023-10-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":40,"author":{"gitId":"newway1814"},"content":"        CommandResult commandResult \u003d new AddCommand(validTask).execute(modelStub);","lastModifiedDate":"2023-10-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":42,"author":{"gitId":"newway1814"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, Messages.format(validTask)),","lastModifiedDate":"2023-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                commandResult.getFeedbackToUser());","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"newway1814"},"content":"        assertEquals(Arrays.asList(validTask), modelStub.tasksAdded);","lastModifiedDate":"2023-10-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":48,"author":{"gitId":"newway1814"},"content":"    public void execute_duplicateTask_throwsCommandException() {","lastModifiedDate":"2023-10-16"},{"lineNumber":49,"author":{"gitId":"newway1814"},"content":"        Task validTask \u003d new TaskBuilder().build();","lastModifiedDate":"2023-10-16"},{"lineNumber":50,"author":{"gitId":"newway1814"},"content":"        AddCommand addCommand \u003d new AddCommand(validTask);","lastModifiedDate":"2023-10-16"},{"lineNumber":51,"author":{"gitId":"newway1814"},"content":"        ModelStub modelStub \u003d new ModelStubWithTask(validTask);","lastModifiedDate":"2023-10-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":53,"author":{"gitId":"newway1814"},"content":"        Assert.assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_TASK, () -\u003e addCommand.execute(","lastModifiedDate":"2023-10-16"},{"lineNumber":54,"author":{"gitId":"kiatkat"},"content":"                modelStub));","lastModifiedDate":"2023-10-14"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":59,"author":{"gitId":"newway1814"},"content":"        Task alice \u003d new TaskBuilder().withName(\"Alice\").build();","lastModifiedDate":"2023-10-16"},{"lineNumber":60,"author":{"gitId":"newway1814"},"content":"        Task bob \u003d new TaskBuilder().withName(\"Bob\").build();","lastModifiedDate":"2023-10-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"newway1814"},"content":"        // different task -\u003e returns false","lastModifiedDate":"2023-10-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":83,"author":{"gitId":"newway1814"},"content":"        AddCommand addCommand \u003d new AddCommand(TypicalTasks.ALICE);","lastModifiedDate":"2023-10-16"},{"lineNumber":84,"author":{"gitId":"newway1814"},"content":"        String expected \u003d AddCommand.class.getCanonicalName() + \"{toAdd\u003d\" + TypicalTasks.ALICE + \"}\";","lastModifiedDate":"2023-10-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertEquals(expected, addCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":113,"author":{"gitId":"kiatkat"},"content":"        public Path getProfPlanFilePath() {","lastModifiedDate":"2023-10-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"kiatkat"},"content":"        public void setProfPlanFilePath(Path profPlanFilePath) {","lastModifiedDate":"2023-10-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":123,"author":{"gitId":"newway1814"},"content":"        public void addTask(Task task) {","lastModifiedDate":"2023-10-16"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":127,"author":{"gitId":"newway1814"},"content":"        @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":128,"author":{"gitId":"newway1814"},"content":"        public void markTask(int index) {","lastModifiedDate":"2023-10-16"},{"lineNumber":129,"author":{"gitId":"newway1814"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-16"},{"lineNumber":130,"author":{"gitId":"newway1814"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":131,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":132,"author":{"gitId":"newway1814"},"content":"        @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":133,"author":{"gitId":"newway1814"},"content":"        public void unmarkTask(int index) {","lastModifiedDate":"2023-10-17"},{"lineNumber":134,"author":{"gitId":"newway1814"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-17"},{"lineNumber":135,"author":{"gitId":"newway1814"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":136,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":138,"author":{"gitId":"kiatkat"},"content":"        public void setProfPlan(ReadOnlyProfPlan newData) {","lastModifiedDate":"2023-10-13"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":143,"author":{"gitId":"kiatkat"},"content":"        public ReadOnlyProfPlan getProfPlan() {","lastModifiedDate":"2023-10-13"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":148,"author":{"gitId":"newway1814"},"content":"        public boolean hasTask(Task task) {","lastModifiedDate":"2023-10-16"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":153,"author":{"gitId":"newway1814"},"content":"        public void deleteTask(Task target) {","lastModifiedDate":"2023-10-16"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":157,"author":{"gitId":"newway1814"},"content":"        @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":158,"author":{"gitId":"newway1814"},"content":"        public void deleteTask() {","lastModifiedDate":"2023-10-17"},{"lineNumber":159,"author":{"gitId":"newway1814"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-17"},{"lineNumber":160,"author":{"gitId":"newway1814"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":161,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":163,"author":{"gitId":"newway1814"},"content":"        public void setTask(Task target, Task editedTask) {","lastModifiedDate":"2023-10-16"},{"lineNumber":164,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":168,"author":{"gitId":"newway1814"},"content":"        public ObservableList\u003cTask\u003e getFilteredTaskList() {","lastModifiedDate":"2023-10-16"},{"lineNumber":169,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":173,"author":{"gitId":"newway1814"},"content":"        public void updateFilteredTaskList(Predicate\u003cTask\u003e predicate) {","lastModifiedDate":"2023-10-16"},{"lineNumber":174,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":176,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":177,"author":{"gitId":"eyelessrhyme7"},"content":"        @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":178,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":179,"author":{"gitId":"eyelessrhyme7"},"content":"        public Task getDoNextTask() {","lastModifiedDate":"2023-10-26"},{"lineNumber":180,"author":{"gitId":"eyelessrhyme7"},"content":"            throw new AssertionError(\"THis method should not be called.\");","lastModifiedDate":"2023-10-26"},{"lineNumber":181,"author":{"gitId":"eyelessrhyme7"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":182,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":183,"author":{"gitId":"jack1e0"},"content":"        public void sortTaskByDueDate() {","lastModifiedDate":"2023-11-02"},{"lineNumber":184,"author":{"gitId":"newway1814"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-25"},{"lineNumber":185,"author":{"gitId":"newway1814"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":186,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":187,"author":{"gitId":"newway1814"},"content":"        @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":188,"author":{"gitId":"newway1814"},"content":"        public void sortTaskByPriority() {","lastModifiedDate":"2023-10-26"},{"lineNumber":189,"author":{"gitId":"newway1814"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-26"},{"lineNumber":190,"author":{"gitId":"newway1814"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":191,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":192,"author":{"gitId":"yarnmengnus"},"content":"        @Override","lastModifiedDate":"2023-11-03"},{"lineNumber":193,"author":{"gitId":"yarnmengnus"},"content":"        public double getCompletionRate() {","lastModifiedDate":"2023-11-03"},{"lineNumber":194,"author":{"gitId":"yarnmengnus"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-11-03"},{"lineNumber":195,"author":{"gitId":"yarnmengnus"},"content":"        }","lastModifiedDate":"2023-11-03"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":199,"author":{"gitId":"newway1814"},"content":"     * A Model stub that contains a single task.","lastModifiedDate":"2023-10-16"},{"lineNumber":200,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":201,"author":{"gitId":"newway1814"},"content":"    private class ModelStubWithTask extends ModelStub {","lastModifiedDate":"2023-10-16"},{"lineNumber":202,"author":{"gitId":"newway1814"},"content":"        private final Task task;","lastModifiedDate":"2023-10-16"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":204,"author":{"gitId":"newway1814"},"content":"        ModelStubWithTask(Task task) {","lastModifiedDate":"2023-10-16"},{"lineNumber":205,"author":{"gitId":"newway1814"},"content":"            requireNonNull(task);","lastModifiedDate":"2023-10-16"},{"lineNumber":206,"author":{"gitId":"newway1814"},"content":"            this.task \u003d task;","lastModifiedDate":"2023-10-16"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":210,"author":{"gitId":"newway1814"},"content":"        public boolean hasTask(Task task) {","lastModifiedDate":"2023-10-16"},{"lineNumber":211,"author":{"gitId":"newway1814"},"content":"            requireNonNull(task);","lastModifiedDate":"2023-10-16"},{"lineNumber":212,"author":{"gitId":"newway1814"},"content":"            return this.task.isSameTask(task);","lastModifiedDate":"2023-10-16"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":214,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":217,"author":{"gitId":"newway1814"},"content":"     * A Model stub that always accept the task being added.","lastModifiedDate":"2023-10-16"},{"lineNumber":218,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":219,"author":{"gitId":"newway1814"},"content":"    private class ModelStubAcceptingTaskAdded extends ModelStub {","lastModifiedDate":"2023-10-16"},{"lineNumber":220,"author":{"gitId":"newway1814"},"content":"        final ArrayList\u003cTask\u003e tasksAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-16"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":223,"author":{"gitId":"newway1814"},"content":"        public boolean hasTask(Task task) {","lastModifiedDate":"2023-10-16"},{"lineNumber":224,"author":{"gitId":"newway1814"},"content":"            requireNonNull(task);","lastModifiedDate":"2023-10-16"},{"lineNumber":225,"author":{"gitId":"newway1814"},"content":"            return tasksAdded.stream().anyMatch(task::isSameTask);","lastModifiedDate":"2023-10-16"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":228,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":229,"author":{"gitId":"newway1814"},"content":"        public void addTask(Task task) {","lastModifiedDate":"2023-10-16"},{"lineNumber":230,"author":{"gitId":"newway1814"},"content":"            requireNonNull(task);","lastModifiedDate":"2023-10-16"},{"lineNumber":231,"author":{"gitId":"newway1814"},"content":"            tasksAdded.add(task);","lastModifiedDate":"2023-10-16"},{"lineNumber":232,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":235,"author":{"gitId":"kiatkat"},"content":"        public ReadOnlyProfPlan getProfPlan() {","lastModifiedDate":"2023-10-13"},{"lineNumber":236,"author":{"gitId":"kiatkat"},"content":"            return new ProfPlan();","lastModifiedDate":"2023-10-13"},{"lineNumber":237,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":240,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"yarnmengnus":4,"jack1e0":1,"kiatkat":17,"eyelessrhyme7":7,"-":144,"newway1814":67}},{"path":"src/test/java/profplan/logic/commands/ClearCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kiatkat"},"content":"package profplan.logic.commands;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"kiatkat"},"content":"import static profplan.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"kiatkat"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"kiatkat"},"content":"import profplan.model.Model;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"kiatkat"},"content":"import profplan.model.ModelManager;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"kiatkat"},"content":"import profplan.model.ProfPlan;","lastModifiedDate":"2023-10-14"},{"lineNumber":10,"author":{"gitId":"kiatkat"},"content":"import profplan.model.UserConfigs;","lastModifiedDate":"2023-11-01"},{"lineNumber":11,"author":{"gitId":"kiatkat"},"content":"import profplan.model.UserPrefs;","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"newway1814"},"content":"import profplan.testutil.TypicalTasks;","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"kiatkat"},"content":"public class ClearCommandTest {","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"kiatkat"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"kiatkat"},"content":"    public void execute_emptyProfPlan_success() {","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"kiatkat"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"kiatkat"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"kiatkat"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"kiatkat"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"kiatkat"},"content":"    public void execute_nonEmptyProfPlan_success() {","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"kiatkat"},"content":"        Model model \u003d new ModelManager(TypicalTasks.getTypicalProfPlan(), new UserPrefs(), new UserConfigs());","lastModifiedDate":"2023-11-01"},{"lineNumber":27,"author":{"gitId":"kiatkat"},"content":"        Model expectedModel \u003d new ModelManager(TypicalTasks.getTypicalProfPlan(), new UserPrefs(), new UserConfigs());","lastModifiedDate":"2023-11-01"},{"lineNumber":28,"author":{"gitId":"kiatkat"},"content":"        expectedModel.setProfPlan(new ProfPlan());","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"kiatkat"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"kiatkat"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"kiatkat":32,"newway1814":1}},{"path":"src/test/java/profplan/logic/commands/CommandResultTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kiatkat"},"content":"package profplan.logic.commands;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class CommandResultTest {","lastModifiedDate":"2018-12-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\", false, false)));","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(commandResult));","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(null));","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(0.5f));","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"different\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", true, false)));","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", false, true)));","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void hashcode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // same values -\u003e returns same hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(commandResult.hashCode(), new CommandResult(\"feedback\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"different\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", true, false).hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", false, true).hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2019-02-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        String expected \u003d CommandResult.class.getCanonicalName() + \"{feedbackToUser\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                + commandResult.getFeedbackToUser() + \", showHelp\u003d\" + commandResult.isShowHelp()","lastModifiedDate":"2019-02-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                + \", exit\u003d\" + commandResult.isExit() + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertEquals(expected, commandResult.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-12-09"}],"authorContributionMap":{"kiatkat":1,"-":62}},{"path":"src/test/java/profplan/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kiatkat"},"content":"package profplan.logic.commands;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"eyelessrhyme7"},"content":"import static profplan.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2023-11-11"},{"lineNumber":6,"author":{"gitId":"eyelessrhyme7"},"content":"import static profplan.logic.parser.CliSyntax.PREFIX_DUEDATE;","lastModifiedDate":"2023-11-11"},{"lineNumber":7,"author":{"gitId":"kiatkat"},"content":"import static profplan.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"eyelessrhyme7"},"content":"import static profplan.logic.parser.CliSyntax.PREFIX_PRIORITY;","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"kiatkat"},"content":"import static profplan.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"kiatkat"},"content":"import profplan.commons.core.index.Index;","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"kiatkat"},"content":"import profplan.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"kiatkat"},"content":"import profplan.model.Model;","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"kiatkat"},"content":"import profplan.model.ProfPlan;","lastModifiedDate":"2023-10-14"},{"lineNumber":19,"author":{"gitId":"newway1814"},"content":"import profplan.model.task.Task;","lastModifiedDate":"2023-10-16"},{"lineNumber":20,"author":{"gitId":"jack1e0"},"content":"import profplan.model.task.predicates.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-10-29"},{"lineNumber":21,"author":{"gitId":"kiatkat"},"content":"import profplan.testutil.Assert;","lastModifiedDate":"2023-10-14"},{"lineNumber":22,"author":{"gitId":"newway1814"},"content":"import profplan.testutil.EditTaskDescriptorBuilder;","lastModifiedDate":"2023-10-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":31,"author":{"gitId":"eyelessrhyme7"},"content":"    public static final String VALID_PRIORITY_AMY \u003d \"1\";","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"eyelessrhyme7"},"content":"    public static final String VALID_PRIORITY_BOB \u003d \"2\";","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2017-07-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2017-07-05"},{"lineNumber":35,"author":{"gitId":"yarnmengnus"},"content":"    public static final String VALID_LINK_EXAMPLE \u003d \"www.exmaple.com\";","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"yarnmengnus"},"content":"    public static final String VALID_LINK_GOOGLE \u003d \"www.google.com\";","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"eyelessrhyme7"},"content":"    public static final String VALID_DESCRIPTION \u003d \"gg\";","lastModifiedDate":"2023-11-11"},{"lineNumber":38,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":39,"author":{"gitId":"eyelessrhyme7"},"content":"    public static final String DUEDATE_DESC \u003d \" \" + PREFIX_DUEDATE + \"10-12-2023\";","lastModifiedDate":"2023-11-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":43,"author":{"gitId":"eyelessrhyme7"},"content":"    public static final String PRIORITY_DESC_AMY \u003d \" \" + PREFIX_PRIORITY + VALID_PRIORITY_AMY;","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"eyelessrhyme7"},"content":"    public static final String PRIORITY_DESC_BOB \u003d \" \" + PREFIX_PRIORITY + VALID_PRIORITY_BOB;","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"eyelessrhyme7"},"content":"    public static final String DESCRIPTION_DESC_AMY \u003d \" \" + PREFIX_DESCRIPTION + VALID_DESCRIPTION;","lastModifiedDate":"2023-11-11"},{"lineNumber":46,"author":{"gitId":"eyelessrhyme7"},"content":"    public static final String DESCRIPTION_DESC_BOB \u003d \" \" + PREFIX_DESCRIPTION + VALID_DESCRIPTION;","lastModifiedDate":"2023-11-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":51,"author":{"gitId":"kiatkat"},"content":"    public static final String INVALID_PRIORITY_DESC \u003d \" \" + PREFIX_PRIORITY + \"911a\"; // \u0027a\u0027 not allowed in priorities","lastModifiedDate":"2023-10-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2017-07-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":57,"author":{"gitId":"newway1814"},"content":"    public static final EditCommand.EditTaskDescriptor DESC_AMY;","lastModifiedDate":"2023-10-16"},{"lineNumber":58,"author":{"gitId":"newway1814"},"content":"    public static final EditCommand.EditTaskDescriptor DESC_BOB;","lastModifiedDate":"2023-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":61,"author":{"gitId":"newway1814"},"content":"        DESC_AMY \u003d new EditTaskDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2023-10-16"},{"lineNumber":62,"author":{"gitId":"kiatkat"},"content":"                .withPriority(VALID_PRIORITY_AMY).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2023-10-29"},{"lineNumber":63,"author":{"gitId":"newway1814"},"content":"        DESC_BOB \u003d new EditTaskDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2023-10-16"},{"lineNumber":64,"author":{"gitId":"kiatkat"},"content":"                .withPriority(VALID_PRIORITY_BOB).withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2023-10-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":97,"author":{"gitId":"eyelessrhyme7"},"content":"     * - the task list, filtered task list and selected task in {@code actualModel} remain unchanged","lastModifiedDate":"2023-10-17"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":102,"author":{"gitId":"kiatkat"},"content":"        ProfPlan expectedProfPlan \u003d new ProfPlan(actualModel.getProfPlan());","lastModifiedDate":"2023-10-13"},{"lineNumber":103,"author":{"gitId":"newway1814"},"content":"        List\u003cTask\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredTaskList());","lastModifiedDate":"2023-10-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":105,"author":{"gitId":"kiatkat"},"content":"        Assert.assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2023-10-13"},{"lineNumber":106,"author":{"gitId":"kiatkat"},"content":"        assertEquals(expectedProfPlan, actualModel.getProfPlan());","lastModifiedDate":"2023-10-13"},{"lineNumber":107,"author":{"gitId":"newway1814"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredTaskList());","lastModifiedDate":"2023-10-16"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":110,"author":{"gitId":"newway1814"},"content":"     * Updates {@code model}\u0027s filtered list to show only the task at the given {@code targetIndex} in the","lastModifiedDate":"2023-10-16"},{"lineNumber":111,"author":{"gitId":"eyelessrhyme7"},"content":"     * {@code model}\u0027s task list.","lastModifiedDate":"2023-10-17"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":113,"author":{"gitId":"newway1814"},"content":"    public static void showTaskAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2023-10-16"},{"lineNumber":114,"author":{"gitId":"newway1814"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredTaskList().size());","lastModifiedDate":"2023-10-16"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":116,"author":{"gitId":"newway1814"},"content":"        Task task \u003d model.getFilteredTaskList().get(targetIndex.getZeroBased());","lastModifiedDate":"2023-10-16"},{"lineNumber":117,"author":{"gitId":"newway1814"},"content":"        final String[] splitName \u003d task.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2023-10-16"},{"lineNumber":118,"author":{"gitId":"newway1814"},"content":"        model.updateFilteredTaskList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2023-10-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":120,"author":{"gitId":"newway1814"},"content":"        assertEquals(1, model.getFilteredTaskList().size());","lastModifiedDate":"2023-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":123,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"yarnmengnus":2,"jack1e0":1,"kiatkat":14,"eyelessrhyme7":14,"-":77,"newway1814":15}},{"path":"src/test/java/profplan/logic/commands/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kiatkat"},"content":"package profplan.logic.commands;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"kiatkat"},"content":"import static profplan.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"kiatkat"},"content":"import static profplan.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"newway1814"},"content":"import static profplan.logic.commands.CommandTestUtil.showTaskAtIndex;","lastModifiedDate":"2023-10-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":12,"author":{"gitId":"kiatkat"},"content":"import profplan.commons.core.index.Index;","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"kiatkat"},"content":"import profplan.logic.Messages;","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"kiatkat"},"content":"import profplan.model.Model;","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"kiatkat"},"content":"import profplan.model.ModelManager;","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"kiatkat"},"content":"import profplan.model.UserConfigs;","lastModifiedDate":"2023-11-01"},{"lineNumber":17,"author":{"gitId":"kiatkat"},"content":"import profplan.model.UserPrefs;","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"newway1814"},"content":"import profplan.model.task.Task;","lastModifiedDate":"2023-10-16"},{"lineNumber":19,"author":{"gitId":"kiatkat"},"content":"import profplan.testutil.TypicalIndexes;","lastModifiedDate":"2023-10-14"},{"lineNumber":20,"author":{"gitId":"newway1814"},"content":"import profplan.testutil.TypicalTasks;","lastModifiedDate":"2023-10-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2018-01-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"kiatkat"},"content":"    private Model model \u003d new ModelManager(TypicalTasks.getTypicalProfPlan(), new UserPrefs(), new UserConfigs());","lastModifiedDate":"2023-11-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":32,"author":{"gitId":"newway1814"},"content":"        Task taskToDelete \u003d model.getFilteredTaskList().get(TypicalIndexes.INDEX_FIRST_TASK.getZeroBased());","lastModifiedDate":"2023-10-16"},{"lineNumber":33,"author":{"gitId":"newway1814"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(TypicalIndexes.INDEX_FIRST_TASK);","lastModifiedDate":"2023-10-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"newway1814"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_TASK_SUCCESS,","lastModifiedDate":"2023-10-16"},{"lineNumber":36,"author":{"gitId":"newway1814"},"content":"                Messages.format(taskToDelete));","lastModifiedDate":"2023-10-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":38,"author":{"gitId":"kiatkat"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getProfPlan(), new UserPrefs(), new UserConfigs());","lastModifiedDate":"2023-11-01"},{"lineNumber":39,"author":{"gitId":"newway1814"},"content":"        expectedModel.deleteTask(taskToDelete);","lastModifiedDate":"2023-10-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":46,"author":{"gitId":"newway1814"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredTaskList().size() + 1);","lastModifiedDate":"2023-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":49,"author":{"gitId":"newway1814"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"newway1814"},"content":"        showTaskAtIndex(model, TypicalIndexes.INDEX_FIRST_TASK);","lastModifiedDate":"2023-10-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":56,"author":{"gitId":"newway1814"},"content":"        Task taskToDelete \u003d model.getFilteredTaskList().get(TypicalIndexes.INDEX_FIRST_TASK.getZeroBased());","lastModifiedDate":"2023-10-16"},{"lineNumber":57,"author":{"gitId":"newway1814"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(TypicalIndexes.INDEX_FIRST_TASK);","lastModifiedDate":"2023-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":59,"author":{"gitId":"newway1814"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_TASK_SUCCESS,","lastModifiedDate":"2023-10-16"},{"lineNumber":60,"author":{"gitId":"newway1814"},"content":"                Messages.format(taskToDelete));","lastModifiedDate":"2023-10-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":62,"author":{"gitId":"kiatkat"},"content":"        Model expectedModel \u003d new ModelManager(model.getProfPlan(), new UserPrefs(), new UserConfigs());","lastModifiedDate":"2023-11-01"},{"lineNumber":63,"author":{"gitId":"newway1814"},"content":"        expectedModel.deleteTask(taskToDelete);","lastModifiedDate":"2023-10-16"},{"lineNumber":64,"author":{"gitId":"newway1814"},"content":"        showNoTask(expectedModel);","lastModifiedDate":"2023-10-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":71,"author":{"gitId":"newway1814"},"content":"        showTaskAtIndex(model, TypicalIndexes.INDEX_FIRST_TASK);","lastModifiedDate":"2023-10-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":73,"author":{"gitId":"newway1814"},"content":"        Index outOfBoundIndex \u003d TypicalIndexes.INDEX_SECOND_TASK;","lastModifiedDate":"2023-10-16"},{"lineNumber":74,"author":{"gitId":"eyelessrhyme7"},"content":"        // ensures that outOfBoundIndex is still in bounds of task list","lastModifiedDate":"2023-10-17"},{"lineNumber":75,"author":{"gitId":"newway1814"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getProfPlan().getTaskList().size());","lastModifiedDate":"2023-10-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":79,"author":{"gitId":"newway1814"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"newway1814"},"content":"        DeleteCommand deleteFirstCommand \u003d new DeleteCommand(TypicalIndexes.INDEX_FIRST_TASK);","lastModifiedDate":"2023-10-16"},{"lineNumber":85,"author":{"gitId":"newway1814"},"content":"        DeleteCommand deleteSecondCommand \u003d new DeleteCommand(TypicalIndexes.INDEX_SECOND_TASK);","lastModifiedDate":"2023-10-16"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"newway1814"},"content":"        DeleteCommand deleteFirstCommandCopy \u003d new DeleteCommand(TypicalIndexes.INDEX_FIRST_TASK);","lastModifiedDate":"2023-10-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"newway1814"},"content":"        // different task -\u003e returns false","lastModifiedDate":"2023-10-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2019-02-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(targetIndex);","lastModifiedDate":"2019-02-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        String expected \u003d DeleteCommand.class.getCanonicalName() + \"{targetIndex\u003d\" + targetIndex + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertEquals(expected, deleteCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2017-06-05"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":115,"author":{"gitId":"newway1814"},"content":"    private void showNoTask(Model model) {","lastModifiedDate":"2023-10-16"},{"lineNumber":116,"author":{"gitId":"newway1814"},"content":"        model.updateFilteredTaskList(p -\u003e false);","lastModifiedDate":"2023-10-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":118,"author":{"gitId":"newway1814"},"content":"        assertTrue(model.getFilteredTaskList().isEmpty());","lastModifiedDate":"2023-10-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":120,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"kiatkat":13,"eyelessrhyme7":1,"-":78,"newway1814":28}},{"path":"src/test/java/profplan/logic/commands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kiatkat"},"content":"package profplan.logic.commands;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"kiatkat"},"content":"import static profplan.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":10,"author":{"gitId":"kiatkat"},"content":"import profplan.commons.core.index.Index;","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"kiatkat"},"content":"import profplan.logic.Messages;","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"newway1814"},"content":"import profplan.logic.commands.EditCommand.EditTaskDescriptor;","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"kiatkat"},"content":"import profplan.model.Model;","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"kiatkat"},"content":"import profplan.model.ModelManager;","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"kiatkat"},"content":"import profplan.model.ProfPlan;","lastModifiedDate":"2023-10-14"},{"lineNumber":16,"author":{"gitId":"kiatkat"},"content":"import profplan.model.UserConfigs;","lastModifiedDate":"2023-11-01"},{"lineNumber":17,"author":{"gitId":"kiatkat"},"content":"import profplan.model.UserPrefs;","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"newway1814"},"content":"import profplan.model.task.Task;","lastModifiedDate":"2023-10-16"},{"lineNumber":19,"author":{"gitId":"newway1814"},"content":"import profplan.testutil.EditTaskDescriptorBuilder;","lastModifiedDate":"2023-10-16"},{"lineNumber":20,"author":{"gitId":"newway1814"},"content":"import profplan.testutil.TaskBuilder;","lastModifiedDate":"2023-10-16"},{"lineNumber":21,"author":{"gitId":"kiatkat"},"content":"import profplan.testutil.TypicalIndexes;","lastModifiedDate":"2023-10-14"},{"lineNumber":22,"author":{"gitId":"newway1814"},"content":"import profplan.testutil.TypicalTasks;","lastModifiedDate":"2023-10-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2020-12-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class EditCommandTest {","lastModifiedDate":"2017-05-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":29,"author":{"gitId":"kiatkat"},"content":"    private Model model \u003d new ModelManager(TypicalTasks.getTypicalProfPlan(), new UserPrefs(), new UserConfigs());","lastModifiedDate":"2023-11-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":33,"author":{"gitId":"newway1814"},"content":"        Task editedTask \u003d new TaskBuilder().build();","lastModifiedDate":"2023-10-16"},{"lineNumber":34,"author":{"gitId":"newway1814"},"content":"        EditTaskDescriptor descriptor \u003d new EditTaskDescriptorBuilder(editedTask).build();","lastModifiedDate":"2023-10-16"},{"lineNumber":35,"author":{"gitId":"newway1814"},"content":"        EditCommand editCommand \u003d new EditCommand(TypicalIndexes.INDEX_FIRST_TASK, descriptor);","lastModifiedDate":"2023-10-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"newway1814"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_TASK_SUCCESS, Messages.format(editedTask));","lastModifiedDate":"2023-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":39,"author":{"gitId":"kiatkat"},"content":"        Model expectedModel \u003d new ModelManager(new ProfPlan(model.getProfPlan()), new UserPrefs(), new UserConfigs());","lastModifiedDate":"2023-11-01"},{"lineNumber":40,"author":{"gitId":"newway1814"},"content":"        expectedModel.setTask(model.getFilteredTaskList().get(0), editedTask);","lastModifiedDate":"2023-10-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":47,"author":{"gitId":"newway1814"},"content":"        Index indexLastTask \u003d Index.fromOneBased(model.getFilteredTaskList().size());","lastModifiedDate":"2023-10-16"},{"lineNumber":48,"author":{"gitId":"newway1814"},"content":"        Task lastTask \u003d model.getFilteredTaskList().get(indexLastTask.getZeroBased());","lastModifiedDate":"2023-10-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":50,"author":{"gitId":"newway1814"},"content":"        TaskBuilder taskInList \u003d new TaskBuilder(lastTask);","lastModifiedDate":"2023-10-16"},{"lineNumber":51,"author":{"gitId":"newway1814"},"content":"        Task editedTask \u003d taskInList.withName(CommandTestUtil.VALID_NAME_BOB)","lastModifiedDate":"2023-10-16"},{"lineNumber":52,"author":{"gitId":"eyelessrhyme7"},"content":"                .withPriority(CommandTestUtil.VALID_PRIORITY_BOB)","lastModifiedDate":"2023-10-17"},{"lineNumber":53,"author":{"gitId":"kiatkat"},"content":"                .withTags(CommandTestUtil.VALID_TAG_HUSBAND).build();","lastModifiedDate":"2023-10-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":55,"author":{"gitId":"newway1814"},"content":"        EditTaskDescriptor descriptor \u003d new EditTaskDescriptorBuilder().withName(CommandTestUtil.VALID_NAME_BOB)","lastModifiedDate":"2023-10-16"},{"lineNumber":56,"author":{"gitId":"eyelessrhyme7"},"content":"                .withPriority(CommandTestUtil.VALID_PRIORITY_BOB).withTags(CommandTestUtil.VALID_TAG_HUSBAND).build();","lastModifiedDate":"2023-10-17"},{"lineNumber":57,"author":{"gitId":"newway1814"},"content":"        EditCommand editCommand \u003d new EditCommand(indexLastTask, descriptor);","lastModifiedDate":"2023-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":59,"author":{"gitId":"newway1814"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_TASK_SUCCESS, Messages.format(editedTask));","lastModifiedDate":"2023-10-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":61,"author":{"gitId":"kiatkat"},"content":"        Model expectedModel \u003d new ModelManager(new ProfPlan(model.getProfPlan()), new UserPrefs(), new UserConfigs());","lastModifiedDate":"2023-11-01"},{"lineNumber":62,"author":{"gitId":"newway1814"},"content":"        expectedModel.setTask(lastTask, editedTask);","lastModifiedDate":"2023-10-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":69,"author":{"gitId":"newway1814"},"content":"        EditCommand editCommand \u003d new EditCommand(TypicalIndexes.INDEX_FIRST_TASK, new EditTaskDescriptor());","lastModifiedDate":"2023-10-16"},{"lineNumber":70,"author":{"gitId":"newway1814"},"content":"        Task editedTask \u003d model.getFilteredTaskList().get(TypicalIndexes.INDEX_FIRST_TASK.getZeroBased());","lastModifiedDate":"2023-10-16"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":72,"author":{"gitId":"newway1814"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_TASK_SUCCESS, Messages.format(editedTask));","lastModifiedDate":"2023-10-16"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":74,"author":{"gitId":"kiatkat"},"content":"        Model expectedModel \u003d new ModelManager(new ProfPlan(model.getProfPlan()), new UserPrefs(), new UserConfigs());","lastModifiedDate":"2023-11-01"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":81,"author":{"gitId":"newway1814"},"content":"        CommandTestUtil.showTaskAtIndex(model, TypicalIndexes.INDEX_FIRST_TASK);","lastModifiedDate":"2023-10-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":83,"author":{"gitId":"newway1814"},"content":"        Task taskInFilteredList \u003d model.getFilteredTaskList().get(","lastModifiedDate":"2023-10-16"},{"lineNumber":84,"author":{"gitId":"newway1814"},"content":"                TypicalIndexes.INDEX_FIRST_TASK.getZeroBased());","lastModifiedDate":"2023-10-16"},{"lineNumber":85,"author":{"gitId":"newway1814"},"content":"        Task editedTask \u003d new TaskBuilder(taskInFilteredList).withName(CommandTestUtil.VALID_NAME_BOB).build();","lastModifiedDate":"2023-10-16"},{"lineNumber":86,"author":{"gitId":"newway1814"},"content":"        EditCommand editCommand \u003d new EditCommand(TypicalIndexes.INDEX_FIRST_TASK,","lastModifiedDate":"2023-10-16"},{"lineNumber":87,"author":{"gitId":"newway1814"},"content":"                new EditTaskDescriptorBuilder().withName(CommandTestUtil.VALID_NAME_BOB).build());","lastModifiedDate":"2023-10-16"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":89,"author":{"gitId":"newway1814"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_TASK_SUCCESS, Messages.format(editedTask));","lastModifiedDate":"2023-10-16"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":91,"author":{"gitId":"kiatkat"},"content":"        Model expectedModel \u003d new ModelManager(new ProfPlan(model.getProfPlan()), new UserPrefs(), new UserConfigs());","lastModifiedDate":"2023-11-01"},{"lineNumber":92,"author":{"gitId":"newway1814"},"content":"        expectedModel.setTask(model.getFilteredTaskList().get(0), editedTask);","lastModifiedDate":"2023-10-16"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":98,"author":{"gitId":"newway1814"},"content":"    public void execute_duplicateTaskUnfilteredList_failure() {","lastModifiedDate":"2023-10-16"},{"lineNumber":99,"author":{"gitId":"newway1814"},"content":"        Task firstTask \u003d model.getFilteredTaskList().get(TypicalIndexes.INDEX_FIRST_TASK.getZeroBased());","lastModifiedDate":"2023-10-16"},{"lineNumber":100,"author":{"gitId":"newway1814"},"content":"        EditTaskDescriptor descriptor \u003d new EditTaskDescriptorBuilder(firstTask).build();","lastModifiedDate":"2023-10-16"},{"lineNumber":101,"author":{"gitId":"newway1814"},"content":"        EditCommand editCommand \u003d new EditCommand(TypicalIndexes.INDEX_SECOND_TASK, descriptor);","lastModifiedDate":"2023-10-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":103,"author":{"gitId":"newway1814"},"content":"        CommandTestUtil.assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_TASK);","lastModifiedDate":"2023-10-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":107,"author":{"gitId":"newway1814"},"content":"    public void execute_duplicateTaskFilteredList_failure() {","lastModifiedDate":"2023-10-16"},{"lineNumber":108,"author":{"gitId":"newway1814"},"content":"        CommandTestUtil.showTaskAtIndex(model, TypicalIndexes.INDEX_FIRST_TASK);","lastModifiedDate":"2023-10-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":110,"author":{"gitId":"eyelessrhyme7"},"content":"        // edit task in filtered list into a duplicate in task list","lastModifiedDate":"2023-10-17"},{"lineNumber":111,"author":{"gitId":"newway1814"},"content":"        Task taskInList \u003d model.getProfPlan().getTaskList().get(TypicalIndexes.INDEX_SECOND_TASK","lastModifiedDate":"2023-10-16"},{"lineNumber":112,"author":{"gitId":"kiatkat"},"content":"                .getZeroBased());","lastModifiedDate":"2023-10-14"},{"lineNumber":113,"author":{"gitId":"newway1814"},"content":"        EditCommand editCommand \u003d new EditCommand(TypicalIndexes.INDEX_FIRST_TASK,","lastModifiedDate":"2023-10-16"},{"lineNumber":114,"author":{"gitId":"newway1814"},"content":"                new EditTaskDescriptorBuilder(taskInList).build());","lastModifiedDate":"2023-10-16"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":116,"author":{"gitId":"newway1814"},"content":"        CommandTestUtil.assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_TASK);","lastModifiedDate":"2023-10-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":120,"author":{"gitId":"newway1814"},"content":"    public void execute_invalidTaskIndexUnfilteredList_failure() {","lastModifiedDate":"2023-10-16"},{"lineNumber":121,"author":{"gitId":"newway1814"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredTaskList().size() + 1);","lastModifiedDate":"2023-10-16"},{"lineNumber":122,"author":{"gitId":"newway1814"},"content":"        EditTaskDescriptor descriptor \u003d new EditTaskDescriptorBuilder().withName(CommandTestUtil.VALID_NAME_BOB)","lastModifiedDate":"2023-10-16"},{"lineNumber":123,"author":{"gitId":"kiatkat"},"content":"                .build();","lastModifiedDate":"2023-10-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":126,"author":{"gitId":"newway1814"},"content":"        CommandTestUtil.assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-16"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2017-05-18"},{"lineNumber":131,"author":{"gitId":"eyelessrhyme7"},"content":"     * but smaller than size of task list","lastModifiedDate":"2023-10-17"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":134,"author":{"gitId":"newway1814"},"content":"    public void execute_invalidTaskIndexFilteredList_failure() {","lastModifiedDate":"2023-10-16"},{"lineNumber":135,"author":{"gitId":"newway1814"},"content":"        CommandTestUtil.showTaskAtIndex(model, TypicalIndexes.INDEX_FIRST_TASK);","lastModifiedDate":"2023-10-16"},{"lineNumber":136,"author":{"gitId":"newway1814"},"content":"        Index outOfBoundIndex \u003d TypicalIndexes.INDEX_SECOND_TASK;","lastModifiedDate":"2023-10-16"},{"lineNumber":137,"author":{"gitId":"eyelessrhyme7"},"content":"        // ensures that outOfBoundIndex is still in bounds of task list list","lastModifiedDate":"2023-10-17"},{"lineNumber":138,"author":{"gitId":"newway1814"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getProfPlan().getTaskList().size());","lastModifiedDate":"2023-10-16"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex,","lastModifiedDate":"2018-08-08"},{"lineNumber":141,"author":{"gitId":"newway1814"},"content":"                new EditTaskDescriptorBuilder().withName(CommandTestUtil.VALID_NAME_BOB).build());","lastModifiedDate":"2023-10-16"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":143,"author":{"gitId":"newway1814"},"content":"        CommandTestUtil.assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-16"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":148,"author":{"gitId":"newway1814"},"content":"        final EditCommand standardCommand \u003d new EditCommand(TypicalIndexes.INDEX_FIRST_TASK,","lastModifiedDate":"2023-10-16"},{"lineNumber":149,"author":{"gitId":"kiatkat"},"content":"                CommandTestUtil.DESC_AMY);","lastModifiedDate":"2023-10-14"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":152,"author":{"gitId":"newway1814"},"content":"        EditTaskDescriptor copyDescriptor \u003d new EditTaskDescriptor(CommandTestUtil.DESC_AMY);","lastModifiedDate":"2023-10-16"},{"lineNumber":153,"author":{"gitId":"newway1814"},"content":"        EditCommand commandWithSameValues \u003d new EditCommand(TypicalIndexes.INDEX_FIRST_TASK, copyDescriptor);","lastModifiedDate":"2023-10-16"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2017-05-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":166,"author":{"gitId":"newway1814"},"content":"        assertFalse(standardCommand.equals(new EditCommand(TypicalIndexes.INDEX_SECOND_TASK,","lastModifiedDate":"2023-10-16"},{"lineNumber":167,"author":{"gitId":"kiatkat"},"content":"                CommandTestUtil.DESC_AMY)));","lastModifiedDate":"2023-10-14"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":170,"author":{"gitId":"newway1814"},"content":"        assertFalse(standardCommand.equals(new EditCommand(TypicalIndexes.INDEX_FIRST_TASK,","lastModifiedDate":"2023-10-16"},{"lineNumber":171,"author":{"gitId":"kiatkat"},"content":"                CommandTestUtil.DESC_BOB)));","lastModifiedDate":"2023-10-14"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        Index index \u003d Index.fromOneBased(1);","lastModifiedDate":"2019-02-23"},{"lineNumber":177,"author":{"gitId":"newway1814"},"content":"        EditTaskDescriptor editTaskDescriptor \u003d new EditTaskDescriptor();","lastModifiedDate":"2023-10-16"},{"lineNumber":178,"author":{"gitId":"newway1814"},"content":"        EditCommand editCommand \u003d new EditCommand(index, editTaskDescriptor);","lastModifiedDate":"2023-10-16"},{"lineNumber":179,"author":{"gitId":"newway1814"},"content":"        String expected \u003d EditCommand.class.getCanonicalName() + \"{index\u003d\" + index + \", editTaskDescriptor\u003d\"","lastModifiedDate":"2023-10-16"},{"lineNumber":180,"author":{"gitId":"newway1814"},"content":"                + editTaskDescriptor + \"}\";","lastModifiedDate":"2023-10-16"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        assertEquals(expected, editCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"kiatkat":21,"eyelessrhyme7":5,"-":99,"newway1814":59}},{"path":"src/test/java/profplan/logic/commands/EditTaskDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kiatkat"},"content":"package profplan.logic.commands;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"kiatkat"},"content":"import static profplan.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"kiatkat"},"content":"import static profplan.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"kiatkat"},"content":"import static profplan.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"eyelessrhyme7"},"content":"import static profplan.logic.commands.CommandTestUtil.VALID_PRIORITY_BOB;","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"kiatkat"},"content":"import static profplan.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":14,"author":{"gitId":"newway1814"},"content":"import profplan.logic.commands.EditCommand.EditTaskDescriptor;","lastModifiedDate":"2023-10-16"},{"lineNumber":15,"author":{"gitId":"newway1814"},"content":"import profplan.testutil.EditTaskDescriptorBuilder;","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"newway1814"},"content":"public class EditTaskDescriptorTest {","lastModifiedDate":"2023-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"newway1814"},"content":"        EditTaskDescriptor descriptorWithSameValues \u003d new EditTaskDescriptor(DESC_AMY);","lastModifiedDate":"2023-10-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(DESC_AMY));","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(null));","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(5));","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(DESC_BOB));","lastModifiedDate":"2017-05-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":38,"author":{"gitId":"newway1814"},"content":"        EditTaskDescriptor editedAmy \u003d new EditTaskDescriptorBuilder(DESC_AMY).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2023-10-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":41,"author":{"gitId":"eyelessrhyme7"},"content":"        // different priority -\u003e returns false","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"eyelessrhyme7"},"content":"        editedAmy \u003d new EditTaskDescriptorBuilder(DESC_AMY).withPriority(VALID_PRIORITY_BOB).build();","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":46,"author":{"gitId":"newway1814"},"content":"        editedAmy \u003d new EditTaskDescriptorBuilder(DESC_AMY).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2023-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":52,"author":{"gitId":"newway1814"},"content":"        EditTaskDescriptor editTaskDescriptor \u003d new EditTaskDescriptor();","lastModifiedDate":"2023-10-16"},{"lineNumber":53,"author":{"gitId":"newway1814"},"content":"        String expected \u003d EditTaskDescriptor.class.getCanonicalName() + \"{name\u003d\"","lastModifiedDate":"2023-10-16"},{"lineNumber":54,"author":{"gitId":"eyelessrhyme7"},"content":"                + editTaskDescriptor.getName().orElse(null) + \", priority\u003d\"","lastModifiedDate":"2023-10-17"},{"lineNumber":55,"author":{"gitId":"kiatkat"},"content":"                + editTaskDescriptor.getPriority().orElse(null) + \", tags\u003d\"","lastModifiedDate":"2023-10-29"},{"lineNumber":56,"author":{"gitId":"jack1e0"},"content":"                + editTaskDescriptor.getTags().orElse(null) + \", dueDate\u003d\"","lastModifiedDate":"2023-10-25"},{"lineNumber":57,"author":{"gitId":"jack1e0"},"content":"                + editTaskDescriptor.getDueDate().orElse(null) + \", link\u003d\"","lastModifiedDate":"2023-10-25"},{"lineNumber":58,"author":{"gitId":"yarnmengnus"},"content":"                + editTaskDescriptor.getLink().orElse(null) + \"}\";","lastModifiedDate":"2023-10-17"},{"lineNumber":59,"author":{"gitId":"newway1814"},"content":"        assertEquals(expected, editTaskDescriptor.toString());","lastModifiedDate":"2023-10-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"yarnmengnus":1,"jack1e0":2,"kiatkat":6,"eyelessrhyme7":4,"-":39,"newway1814":9}},{"path":"src/test/java/profplan/logic/commands/ExitCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kiatkat"},"content":"package profplan.logic.commands;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"kiatkat"},"content":"import static profplan.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"kiatkat"},"content":"import static profplan.logic.commands.ExitCommand.MESSAGE_EXIT_ACKNOWLEDGEMENT;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"kiatkat"},"content":"import profplan.model.Model;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"kiatkat"},"content":"import profplan.model.ModelManager;","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ExitCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_exit_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ExitCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"kiatkat":5,"-":15}},{"path":"src/test/java/profplan/logic/commands/FilterCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jack1e0"},"content":"package profplan.logic.commands;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":3,"author":{"gitId":"jack1e0"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-20"},{"lineNumber":4,"author":{"gitId":"jack1e0"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-20"},{"lineNumber":5,"author":{"gitId":"jack1e0"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-20"},{"lineNumber":6,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":7,"author":{"gitId":"jack1e0"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-20"},{"lineNumber":8,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":9,"author":{"gitId":"jack1e0"},"content":"import profplan.model.task.DueDate;","lastModifiedDate":"2023-10-20"},{"lineNumber":10,"author":{"gitId":"jack1e0"},"content":"import profplan.model.task.Priority;","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"jack1e0"},"content":"import profplan.model.task.Status;","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"jack1e0"},"content":"import profplan.model.task.Task.RecurringType;","lastModifiedDate":"2023-11-12"},{"lineNumber":13,"author":{"gitId":"jack1e0"},"content":"import profplan.model.task.predicates.TaskDueDatePredicate;","lastModifiedDate":"2023-10-29"},{"lineNumber":14,"author":{"gitId":"jack1e0"},"content":"import profplan.model.task.predicates.TaskPriorityPredicate;","lastModifiedDate":"2023-10-29"},{"lineNumber":15,"author":{"gitId":"jack1e0"},"content":"import profplan.model.task.predicates.TaskRecurringTypePredicate;","lastModifiedDate":"2023-11-12"},{"lineNumber":16,"author":{"gitId":"jack1e0"},"content":"import profplan.model.task.predicates.TaskStatusPredicate;","lastModifiedDate":"2023-10-29"},{"lineNumber":17,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":18,"author":{"gitId":"jack1e0"},"content":"/**","lastModifiedDate":"2023-10-20"},{"lineNumber":19,"author":{"gitId":"jack1e0"},"content":" * Contains integration tests (interaction with the Model) for {@code FilterCommand}.","lastModifiedDate":"2023-10-20"},{"lineNumber":20,"author":{"gitId":"jack1e0"},"content":" */","lastModifiedDate":"2023-10-20"},{"lineNumber":21,"author":{"gitId":"jack1e0"},"content":"public class FilterCommandTest {","lastModifiedDate":"2023-10-20"},{"lineNumber":22,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"jack1e0"},"content":"    @Test","lastModifiedDate":"2023-10-20"},{"lineNumber":24,"author":{"gitId":"jack1e0"},"content":"    public void equalsDueDate() {","lastModifiedDate":"2023-10-26"},{"lineNumber":25,"author":{"gitId":"jack1e0"},"content":"        TaskDueDatePredicate firstPredicate \u003d","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"jack1e0"},"content":"                new TaskDueDatePredicate(new DueDate(\"01-01-2000\"));","lastModifiedDate":"2023-10-25"},{"lineNumber":27,"author":{"gitId":"jack1e0"},"content":"        TaskDueDatePredicate secondPredicate \u003d","lastModifiedDate":"2023-10-25"},{"lineNumber":28,"author":{"gitId":"jack1e0"},"content":"                new TaskDueDatePredicate(new DueDate(\"02-02-2002\"));","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":30,"author":{"gitId":"jack1e0"},"content":"        FilterCommand filterFirstCommand \u003d new FilterCommand(firstPredicate);","lastModifiedDate":"2023-10-20"},{"lineNumber":31,"author":{"gitId":"jack1e0"},"content":"        FilterCommand filterSecondCommand \u003d new FilterCommand(secondPredicate);","lastModifiedDate":"2023-10-20"},{"lineNumber":32,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":33,"author":{"gitId":"jack1e0"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-20"},{"lineNumber":34,"author":{"gitId":"jack1e0"},"content":"        assertTrue(filterFirstCommand.equals(filterFirstCommand));","lastModifiedDate":"2023-10-20"},{"lineNumber":35,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":36,"author":{"gitId":"jack1e0"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-20"},{"lineNumber":37,"author":{"gitId":"jack1e0"},"content":"        FilterCommand filterFirstCommandCopy \u003d new FilterCommand(firstPredicate);","lastModifiedDate":"2023-10-20"},{"lineNumber":38,"author":{"gitId":"jack1e0"},"content":"        assertTrue(filterFirstCommand.equals(filterFirstCommandCopy));","lastModifiedDate":"2023-10-20"},{"lineNumber":39,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":40,"author":{"gitId":"jack1e0"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-20"},{"lineNumber":41,"author":{"gitId":"jack1e0"},"content":"        assertFalse(filterFirstCommand.equals(1));","lastModifiedDate":"2023-10-20"},{"lineNumber":42,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":43,"author":{"gitId":"jack1e0"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-20"},{"lineNumber":44,"author":{"gitId":"jack1e0"},"content":"        assertFalse(filterFirstCommand.equals(null));","lastModifiedDate":"2023-10-20"},{"lineNumber":45,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":46,"author":{"gitId":"jack1e0"},"content":"        // different task -\u003e returns false","lastModifiedDate":"2023-10-20"},{"lineNumber":47,"author":{"gitId":"jack1e0"},"content":"        assertFalse(filterFirstCommand.equals(filterSecondCommand));","lastModifiedDate":"2023-10-20"},{"lineNumber":48,"author":{"gitId":"jack1e0"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":49,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":50,"author":{"gitId":"jack1e0"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":51,"author":{"gitId":"jack1e0"},"content":"    public void equalsPriority() {","lastModifiedDate":"2023-10-26"},{"lineNumber":52,"author":{"gitId":"jack1e0"},"content":"        TaskPriorityPredicate firstPredicate \u003d","lastModifiedDate":"2023-10-26"},{"lineNumber":53,"author":{"gitId":"jack1e0"},"content":"                new TaskPriorityPredicate(new Priority(\"2\"));","lastModifiedDate":"2023-10-26"},{"lineNumber":54,"author":{"gitId":"jack1e0"},"content":"        TaskPriorityPredicate secondPredicate \u003d","lastModifiedDate":"2023-10-26"},{"lineNumber":55,"author":{"gitId":"jack1e0"},"content":"                new TaskPriorityPredicate(new Priority(\"3\"));","lastModifiedDate":"2023-10-26"},{"lineNumber":56,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":57,"author":{"gitId":"jack1e0"},"content":"        FilterCommand filterFirstCommand \u003d new FilterCommand(firstPredicate);","lastModifiedDate":"2023-10-26"},{"lineNumber":58,"author":{"gitId":"jack1e0"},"content":"        FilterCommand filterSecondCommand \u003d new FilterCommand(secondPredicate);","lastModifiedDate":"2023-10-26"},{"lineNumber":59,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":60,"author":{"gitId":"jack1e0"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-26"},{"lineNumber":61,"author":{"gitId":"jack1e0"},"content":"        assertTrue(filterFirstCommand.equals(filterFirstCommand));","lastModifiedDate":"2023-10-26"},{"lineNumber":62,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":63,"author":{"gitId":"jack1e0"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-26"},{"lineNumber":64,"author":{"gitId":"jack1e0"},"content":"        FilterCommand filterFirstCommandCopy \u003d new FilterCommand(firstPredicate);","lastModifiedDate":"2023-10-26"},{"lineNumber":65,"author":{"gitId":"jack1e0"},"content":"        assertTrue(filterFirstCommand.equals(filterFirstCommandCopy));","lastModifiedDate":"2023-10-26"},{"lineNumber":66,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":67,"author":{"gitId":"jack1e0"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-26"},{"lineNumber":68,"author":{"gitId":"jack1e0"},"content":"        assertFalse(filterFirstCommand.equals(1));","lastModifiedDate":"2023-10-26"},{"lineNumber":69,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":70,"author":{"gitId":"jack1e0"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-26"},{"lineNumber":71,"author":{"gitId":"jack1e0"},"content":"        assertFalse(filterFirstCommand.equals(null));","lastModifiedDate":"2023-10-26"},{"lineNumber":72,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":73,"author":{"gitId":"jack1e0"},"content":"        // different task -\u003e returns false","lastModifiedDate":"2023-10-26"},{"lineNumber":74,"author":{"gitId":"jack1e0"},"content":"        assertFalse(filterFirstCommand.equals(filterSecondCommand));","lastModifiedDate":"2023-10-26"},{"lineNumber":75,"author":{"gitId":"jack1e0"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":76,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":77,"author":{"gitId":"jack1e0"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":78,"author":{"gitId":"jack1e0"},"content":"    public void equalsStatus() {","lastModifiedDate":"2023-10-26"},{"lineNumber":79,"author":{"gitId":"jack1e0"},"content":"        TaskStatusPredicate firstPredicate \u003d","lastModifiedDate":"2023-10-26"},{"lineNumber":80,"author":{"gitId":"jack1e0"},"content":"                new TaskStatusPredicate(new Status(\"done\"));","lastModifiedDate":"2023-10-26"},{"lineNumber":81,"author":{"gitId":"jack1e0"},"content":"        TaskStatusPredicate secondPredicate \u003d","lastModifiedDate":"2023-10-26"},{"lineNumber":82,"author":{"gitId":"jack1e0"},"content":"                new TaskStatusPredicate(new Status(\"undone\"));","lastModifiedDate":"2023-10-26"},{"lineNumber":83,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":84,"author":{"gitId":"jack1e0"},"content":"        FilterCommand filterFirstCommand \u003d new FilterCommand(firstPredicate);","lastModifiedDate":"2023-10-26"},{"lineNumber":85,"author":{"gitId":"jack1e0"},"content":"        FilterCommand filterSecondCommand \u003d new FilterCommand(secondPredicate);","lastModifiedDate":"2023-10-26"},{"lineNumber":86,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":87,"author":{"gitId":"jack1e0"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-26"},{"lineNumber":88,"author":{"gitId":"jack1e0"},"content":"        assertTrue(filterFirstCommand.equals(filterFirstCommand));","lastModifiedDate":"2023-10-26"},{"lineNumber":89,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":90,"author":{"gitId":"jack1e0"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-26"},{"lineNumber":91,"author":{"gitId":"jack1e0"},"content":"        FilterCommand filterFirstCommandCopy \u003d new FilterCommand(firstPredicate);","lastModifiedDate":"2023-10-26"},{"lineNumber":92,"author":{"gitId":"jack1e0"},"content":"        assertTrue(filterFirstCommand.equals(filterFirstCommandCopy));","lastModifiedDate":"2023-10-26"},{"lineNumber":93,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":94,"author":{"gitId":"jack1e0"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-26"},{"lineNumber":95,"author":{"gitId":"jack1e0"},"content":"        assertFalse(filterFirstCommand.equals(1));","lastModifiedDate":"2023-10-26"},{"lineNumber":96,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":97,"author":{"gitId":"jack1e0"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-26"},{"lineNumber":98,"author":{"gitId":"jack1e0"},"content":"        assertFalse(filterFirstCommand.equals(null));","lastModifiedDate":"2023-10-26"},{"lineNumber":99,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":100,"author":{"gitId":"jack1e0"},"content":"        // different task -\u003e returns false","lastModifiedDate":"2023-10-26"},{"lineNumber":101,"author":{"gitId":"jack1e0"},"content":"        assertFalse(filterFirstCommand.equals(filterSecondCommand));","lastModifiedDate":"2023-10-26"},{"lineNumber":102,"author":{"gitId":"jack1e0"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":103,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":104,"author":{"gitId":"jack1e0"},"content":"    @Test","lastModifiedDate":"2023-11-12"},{"lineNumber":105,"author":{"gitId":"jack1e0"},"content":"    public void equalsRecurring() {","lastModifiedDate":"2023-11-12"},{"lineNumber":106,"author":{"gitId":"jack1e0"},"content":"        TaskRecurringTypePredicate firstPredicate \u003d","lastModifiedDate":"2023-11-12"},{"lineNumber":107,"author":{"gitId":"jack1e0"},"content":"                new TaskRecurringTypePredicate(RecurringType.DAILY);","lastModifiedDate":"2023-11-12"},{"lineNumber":108,"author":{"gitId":"jack1e0"},"content":"        TaskRecurringTypePredicate secondPredicate \u003d","lastModifiedDate":"2023-11-12"},{"lineNumber":109,"author":{"gitId":"jack1e0"},"content":"                new TaskRecurringTypePredicate(RecurringType.MONTHLY);","lastModifiedDate":"2023-11-12"},{"lineNumber":110,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":111,"author":{"gitId":"jack1e0"},"content":"        FilterCommand filterFirstCommand \u003d new FilterCommand(firstPredicate);","lastModifiedDate":"2023-11-12"},{"lineNumber":112,"author":{"gitId":"jack1e0"},"content":"        FilterCommand filterSecondCommand \u003d new FilterCommand(secondPredicate);","lastModifiedDate":"2023-11-12"},{"lineNumber":113,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":114,"author":{"gitId":"jack1e0"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-11-12"},{"lineNumber":115,"author":{"gitId":"jack1e0"},"content":"        assertTrue(filterFirstCommand.equals(filterFirstCommand));","lastModifiedDate":"2023-11-12"},{"lineNumber":116,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":117,"author":{"gitId":"jack1e0"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-11-12"},{"lineNumber":118,"author":{"gitId":"jack1e0"},"content":"        FilterCommand filterFirstCommandCopy \u003d new FilterCommand(firstPredicate);","lastModifiedDate":"2023-11-12"},{"lineNumber":119,"author":{"gitId":"jack1e0"},"content":"        assertTrue(filterFirstCommand.equals(filterFirstCommandCopy));","lastModifiedDate":"2023-11-12"},{"lineNumber":120,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":121,"author":{"gitId":"jack1e0"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-11-12"},{"lineNumber":122,"author":{"gitId":"jack1e0"},"content":"        assertFalse(filterFirstCommand.equals(1));","lastModifiedDate":"2023-11-12"},{"lineNumber":123,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":124,"author":{"gitId":"jack1e0"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-11-12"},{"lineNumber":125,"author":{"gitId":"jack1e0"},"content":"        assertFalse(filterFirstCommand.equals(null));","lastModifiedDate":"2023-11-12"},{"lineNumber":126,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":127,"author":{"gitId":"jack1e0"},"content":"        // different task -\u003e returns false","lastModifiedDate":"2023-11-12"},{"lineNumber":128,"author":{"gitId":"jack1e0"},"content":"        assertFalse(filterFirstCommand.equals(filterSecondCommand));","lastModifiedDate":"2023-11-12"},{"lineNumber":129,"author":{"gitId":"jack1e0"},"content":"    }","lastModifiedDate":"2023-11-12"},{"lineNumber":130,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":131,"author":{"gitId":"jack1e0"},"content":"    @Test","lastModifiedDate":"2023-10-20"},{"lineNumber":132,"author":{"gitId":"jack1e0"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-20"},{"lineNumber":133,"author":{"gitId":"jack1e0"},"content":"        TaskDueDatePredicate predicateDueDate \u003d new TaskDueDatePredicate(new DueDate(\"01-01-2000\"));","lastModifiedDate":"2023-10-26"},{"lineNumber":134,"author":{"gitId":"jack1e0"},"content":"        FilterCommand filterCommandDueDate \u003d new FilterCommand(predicateDueDate);","lastModifiedDate":"2023-10-26"},{"lineNumber":135,"author":{"gitId":"jack1e0"},"content":"        String expectedDueDate \u003d FilterCommand.class.getCanonicalName() + \"{predicate\u003d\" + predicateDueDate + \"}\";","lastModifiedDate":"2023-10-26"},{"lineNumber":136,"author":{"gitId":"jack1e0"},"content":"        assertEquals(expectedDueDate, filterCommandDueDate.toString());","lastModifiedDate":"2023-10-26"},{"lineNumber":137,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":138,"author":{"gitId":"jack1e0"},"content":"        TaskPriorityPredicate predicatePriority \u003d new TaskPriorityPredicate(new Priority(\"1\"));","lastModifiedDate":"2023-10-26"},{"lineNumber":139,"author":{"gitId":"jack1e0"},"content":"        FilterCommand filterCommandPriority \u003d new FilterCommand(predicatePriority);","lastModifiedDate":"2023-10-26"},{"lineNumber":140,"author":{"gitId":"jack1e0"},"content":"        String expectedPriority \u003d FilterCommand.class.getCanonicalName() + \"{predicate\u003d\" + predicatePriority + \"}\";","lastModifiedDate":"2023-10-26"},{"lineNumber":141,"author":{"gitId":"jack1e0"},"content":"        assertEquals(expectedPriority, filterCommandPriority.toString());","lastModifiedDate":"2023-10-26"},{"lineNumber":142,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":143,"author":{"gitId":"jack1e0"},"content":"        TaskStatusPredicate predicateStatus \u003d new TaskStatusPredicate(new Status(\"done\"));","lastModifiedDate":"2023-10-26"},{"lineNumber":144,"author":{"gitId":"jack1e0"},"content":"        FilterCommand filterCommandStatus \u003d new FilterCommand(predicateStatus);","lastModifiedDate":"2023-10-26"},{"lineNumber":145,"author":{"gitId":"jack1e0"},"content":"        String expectedStatus \u003d FilterCommand.class.getCanonicalName() + \"{predicate\u003d\" + predicateStatus + \"}\";","lastModifiedDate":"2023-10-26"},{"lineNumber":146,"author":{"gitId":"jack1e0"},"content":"        assertEquals(expectedStatus, filterCommandStatus.toString());","lastModifiedDate":"2023-10-26"},{"lineNumber":147,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":148,"author":{"gitId":"jack1e0"},"content":"        TaskRecurringTypePredicate predicateRecurring \u003d new TaskRecurringTypePredicate(RecurringType.SEMESTERLY);","lastModifiedDate":"2023-11-12"},{"lineNumber":149,"author":{"gitId":"jack1e0"},"content":"        FilterCommand filterCommandRecurring \u003d new FilterCommand(predicateRecurring);","lastModifiedDate":"2023-11-12"},{"lineNumber":150,"author":{"gitId":"jack1e0"},"content":"        String expectedRecurring \u003d FilterCommand.class.getCanonicalName() + \"{predicate\u003d\" + predicateRecurring + \"}\";","lastModifiedDate":"2023-11-12"},{"lineNumber":151,"author":{"gitId":"jack1e0"},"content":"        assertEquals(expectedRecurring, filterCommandRecurring.toString());","lastModifiedDate":"2023-11-12"},{"lineNumber":152,"author":{"gitId":"jack1e0"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":153,"author":{"gitId":"jack1e0"},"content":"}","lastModifiedDate":"2023-10-20"}],"authorContributionMap":{"jack1e0":153}},{"path":"src/test/java/profplan/logic/commands/FindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kiatkat"},"content":"package profplan.logic.commands;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"newway1814"},"content":"import static profplan.logic.Messages.MESSAGE_TASKS_LISTED_OVERVIEW;","lastModifiedDate":"2023-10-16"},{"lineNumber":7,"author":{"gitId":"kiatkat"},"content":"import static profplan.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"kiatkat"},"content":"import profplan.model.Model;","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"kiatkat"},"content":"import profplan.model.ModelManager;","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"kiatkat"},"content":"import profplan.model.UserConfigs;","lastModifiedDate":"2023-11-01"},{"lineNumber":17,"author":{"gitId":"kiatkat"},"content":"import profplan.model.UserPrefs;","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"jack1e0"},"content":"import profplan.model.task.predicates.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-10-29"},{"lineNumber":19,"author":{"gitId":"newway1814"},"content":"import profplan.testutil.TypicalTasks;","lastModifiedDate":"2023-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class FindCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"kiatkat"},"content":"    private Model model \u003d new ModelManager(TypicalTasks.getTypicalProfPlan(), new UserPrefs(), new UserConfigs());","lastModifiedDate":"2023-11-01"},{"lineNumber":26,"author":{"gitId":"kiatkat"},"content":"    private Model expectedModel \u003d new ModelManager(TypicalTasks.getTypicalProfPlan(),","lastModifiedDate":"2023-11-01"},{"lineNumber":27,"author":{"gitId":"kiatkat"},"content":"            new UserPrefs(), new UserConfigs());","lastModifiedDate":"2023-11-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommand \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        FindCommand findSecondCommand \u003d new FindCommand(secondPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommandCopy \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"newway1814"},"content":"        // different task -\u003e returns false","lastModifiedDate":"2023-10-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":57,"author":{"gitId":"newway1814"},"content":"    public void execute_zeroKeywords_noTaskFound() {","lastModifiedDate":"2023-10-16"},{"lineNumber":58,"author":{"gitId":"newway1814"},"content":"        String expectedMessage \u003d String.format(MESSAGE_TASKS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2023-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2018-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":61,"author":{"gitId":"newway1814"},"content":"        expectedModel.updateFilteredTaskList(predicate);","lastModifiedDate":"2023-10-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":63,"author":{"gitId":"newway1814"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredTaskList());","lastModifiedDate":"2023-10-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"newway1814"},"content":"    public void execute_multipleKeywords_multipleTasksFound() {","lastModifiedDate":"2023-10-16"},{"lineNumber":68,"author":{"gitId":"newway1814"},"content":"        String expectedMessage \u003d String.format(MESSAGE_TASKS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2023-10-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\"Kurz Elle Kunz\");","lastModifiedDate":"2018-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":71,"author":{"gitId":"newway1814"},"content":"        expectedModel.updateFilteredTaskList(predicate);","lastModifiedDate":"2023-10-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":73,"author":{"gitId":"newway1814"},"content":"        assertEquals(Arrays.asList(TypicalTasks.CARL, TypicalTasks.ELLE, TypicalTasks.FIONA),","lastModifiedDate":"2023-10-16"},{"lineNumber":74,"author":{"gitId":"newway1814"},"content":"                model.getFilteredTaskList());","lastModifiedDate":"2023-10-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"keyword\"));","lastModifiedDate":"2019-02-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        FindCommand findCommand \u003d new FindCommand(predicate);","lastModifiedDate":"2019-02-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        String expected \u003d FindCommand.class.getCanonicalName() + \"{predicate\u003d\" + predicate + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertEquals(expected, findCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-12"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2018-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-12"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    private NameContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2018-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        return new NameContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2018-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"jack1e0":1,"kiatkat":9,"-":69,"newway1814":12}},{"path":"src/test/java/profplan/logic/commands/HelpCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kiatkat"},"content":"package profplan.logic.commands;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"yarnmengnus"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-11-10"},{"lineNumber":4,"author":{"gitId":"yarnmengnus"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-11-10"},{"lineNumber":5,"author":{"gitId":"yarnmengnus"},"content":"import static profplan.logic.Messages.MESSAGE_INVALID_COMMAND_WORD;","lastModifiedDate":"2023-11-10"},{"lineNumber":6,"author":{"gitId":"yarnmengnus"},"content":"import static profplan.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-11-10"},{"lineNumber":7,"author":{"gitId":"kiatkat"},"content":"import static profplan.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"yarnmengnus"},"content":"import static profplan.logic.commands.HelpCommand.DELIMITTER_BETWEEN_COMMANDS;","lastModifiedDate":"2023-11-10"},{"lineNumber":9,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":10,"author":{"gitId":"yarnmengnus"},"content":"import java.lang.reflect.Field;","lastModifiedDate":"2023-11-10"},{"lineNumber":11,"author":{"gitId":"yarnmengnus"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-11-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":15,"author":{"gitId":"yarnmengnus"},"content":"import profplan.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-11-10"},{"lineNumber":16,"author":{"gitId":"kiatkat"},"content":"import profplan.model.Model;","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"kiatkat"},"content":"import profplan.model.ModelManager;","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class HelpCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":23,"author":{"gitId":"yarnmengnus"},"content":"    @Test","lastModifiedDate":"2023-11-10"},{"lineNumber":24,"author":{"gitId":"yarnmengnus"},"content":"    public void equality_help_success() {","lastModifiedDate":"2023-11-10"},{"lineNumber":25,"author":{"gitId":"yarnmengnus"},"content":"        assertTrue(new HelpCommand(\"add\").equals(new HelpCommand(\"add\")));","lastModifiedDate":"2023-11-10"},{"lineNumber":26,"author":{"gitId":"yarnmengnus"},"content":"        assertTrue(new HelpCommand().equals(new HelpCommand()));","lastModifiedDate":"2023-11-10"},{"lineNumber":27,"author":{"gitId":"yarnmengnus"},"content":"    }","lastModifiedDate":"2023-11-10"},{"lineNumber":28,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":29,"author":{"gitId":"yarnmengnus"},"content":"    @Test","lastModifiedDate":"2023-11-10"},{"lineNumber":30,"author":{"gitId":"yarnmengnus"},"content":"    public void equality_help_failure() {","lastModifiedDate":"2023-11-10"},{"lineNumber":31,"author":{"gitId":"yarnmengnus"},"content":"        assertFalse(new HelpCommand(\"add\").equals(new HelpCommand(\"delete\")));","lastModifiedDate":"2023-11-10"},{"lineNumber":32,"author":{"gitId":"yarnmengnus"},"content":"        assertFalse(new HelpCommand().equals(new HelpCommand(\"invalidCommand\")));","lastModifiedDate":"2023-11-10"},{"lineNumber":33,"author":{"gitId":"yarnmengnus"},"content":"        assertFalse(new HelpCommand().equals(new ListCommand()));","lastModifiedDate":"2023-11-10"},{"lineNumber":34,"author":{"gitId":"yarnmengnus"},"content":"    }","lastModifiedDate":"2023-11-10"},{"lineNumber":35,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void execute_help_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":38,"author":{"gitId":"yarnmengnus"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(getAllCommandDescriptions(), false, false);","lastModifiedDate":"2023-11-10"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new HelpCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":41,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":42,"author":{"gitId":"yarnmengnus"},"content":"    @Test","lastModifiedDate":"2023-11-10"},{"lineNumber":43,"author":{"gitId":"yarnmengnus"},"content":"    public void execute_helpInvalidCommand_failure() {","lastModifiedDate":"2023-11-10"},{"lineNumber":44,"author":{"gitId":"yarnmengnus"},"content":"        assertCommandFailure(new HelpCommand(\"Invalid Command\"),","lastModifiedDate":"2023-11-10"},{"lineNumber":45,"author":{"gitId":"yarnmengnus"},"content":"            model, HelpCommand.MESSAGE_INVALID_COMMAND_WORD);","lastModifiedDate":"2023-11-10"},{"lineNumber":46,"author":{"gitId":"yarnmengnus"},"content":"    }","lastModifiedDate":"2023-11-10"},{"lineNumber":47,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":48,"author":{"gitId":"yarnmengnus"},"content":"    @Test","lastModifiedDate":"2023-11-10"},{"lineNumber":49,"author":{"gitId":"yarnmengnus"},"content":"    public void execute_helpAdd_success() {","lastModifiedDate":"2023-11-10"},{"lineNumber":50,"author":{"gitId":"yarnmengnus"},"content":"        try {","lastModifiedDate":"2023-11-10"},{"lineNumber":51,"author":{"gitId":"yarnmengnus"},"content":"            CommandResult expectedCommandResult \u003d new CommandResult(","lastModifiedDate":"2023-11-10"},{"lineNumber":52,"author":{"gitId":"yarnmengnus"},"content":"                getOneCommandDescription(AddCommand.COMMAND_WORD), false, false);","lastModifiedDate":"2023-11-10"},{"lineNumber":53,"author":{"gitId":"yarnmengnus"},"content":"            assertCommandSuccess(new HelpCommand(AddCommand.COMMAND_WORD), model,","lastModifiedDate":"2023-11-10"},{"lineNumber":54,"author":{"gitId":"yarnmengnus"},"content":"                expectedCommandResult, expectedModel);","lastModifiedDate":"2023-11-10"},{"lineNumber":55,"author":{"gitId":"yarnmengnus"},"content":"        } catch (CommandException e) {","lastModifiedDate":"2023-11-10"},{"lineNumber":56,"author":{"gitId":"yarnmengnus"},"content":"            assertCommandFailure(null, model, MESSAGE_INVALID_COMMAND_WORD);","lastModifiedDate":"2023-11-10"},{"lineNumber":57,"author":{"gitId":"yarnmengnus"},"content":"        }","lastModifiedDate":"2023-11-10"},{"lineNumber":58,"author":{"gitId":"yarnmengnus"},"content":"    }","lastModifiedDate":"2023-11-10"},{"lineNumber":59,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":60,"author":{"gitId":"yarnmengnus"},"content":"    @Test","lastModifiedDate":"2023-11-10"},{"lineNumber":61,"author":{"gitId":"yarnmengnus"},"content":"    public void execute_helpDelete_success() {","lastModifiedDate":"2023-11-10"},{"lineNumber":62,"author":{"gitId":"yarnmengnus"},"content":"        try {","lastModifiedDate":"2023-11-10"},{"lineNumber":63,"author":{"gitId":"yarnmengnus"},"content":"            CommandResult expectedCommandResult \u003d new CommandResult(","lastModifiedDate":"2023-11-10"},{"lineNumber":64,"author":{"gitId":"yarnmengnus"},"content":"                getOneCommandDescription(DeleteCommand.COMMAND_WORD), false, false);","lastModifiedDate":"2023-11-10"},{"lineNumber":65,"author":{"gitId":"yarnmengnus"},"content":"            assertCommandSuccess(new HelpCommand(DeleteCommand.COMMAND_WORD), model,","lastModifiedDate":"2023-11-10"},{"lineNumber":66,"author":{"gitId":"yarnmengnus"},"content":"                expectedCommandResult, expectedModel);","lastModifiedDate":"2023-11-10"},{"lineNumber":67,"author":{"gitId":"yarnmengnus"},"content":"        } catch (CommandException e) {","lastModifiedDate":"2023-11-10"},{"lineNumber":68,"author":{"gitId":"yarnmengnus"},"content":"            assertCommandFailure(null, model, MESSAGE_INVALID_COMMAND_WORD);","lastModifiedDate":"2023-11-10"},{"lineNumber":69,"author":{"gitId":"yarnmengnus"},"content":"        }","lastModifiedDate":"2023-11-10"},{"lineNumber":70,"author":{"gitId":"yarnmengnus"},"content":"    }","lastModifiedDate":"2023-11-10"},{"lineNumber":71,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":72,"author":{"gitId":"yarnmengnus"},"content":"    @Test","lastModifiedDate":"2023-11-10"},{"lineNumber":73,"author":{"gitId":"yarnmengnus"},"content":"    public void execute_helpEdit_success() {","lastModifiedDate":"2023-11-10"},{"lineNumber":74,"author":{"gitId":"yarnmengnus"},"content":"        try {","lastModifiedDate":"2023-11-10"},{"lineNumber":75,"author":{"gitId":"yarnmengnus"},"content":"            CommandResult expectedCommandResult \u003d new CommandResult(","lastModifiedDate":"2023-11-10"},{"lineNumber":76,"author":{"gitId":"yarnmengnus"},"content":"                getOneCommandDescription(EditCommand.COMMAND_WORD), false, false);","lastModifiedDate":"2023-11-10"},{"lineNumber":77,"author":{"gitId":"yarnmengnus"},"content":"            assertCommandSuccess(new HelpCommand(EditCommand.COMMAND_WORD),","lastModifiedDate":"2023-11-10"},{"lineNumber":78,"author":{"gitId":"yarnmengnus"},"content":"                model, expectedCommandResult, expectedModel);","lastModifiedDate":"2023-11-10"},{"lineNumber":79,"author":{"gitId":"yarnmengnus"},"content":"        } catch (CommandException e) {","lastModifiedDate":"2023-11-10"},{"lineNumber":80,"author":{"gitId":"yarnmengnus"},"content":"            assertCommandFailure(null, model, MESSAGE_INVALID_COMMAND_WORD);","lastModifiedDate":"2023-11-10"},{"lineNumber":81,"author":{"gitId":"yarnmengnus"},"content":"        }","lastModifiedDate":"2023-11-10"},{"lineNumber":82,"author":{"gitId":"yarnmengnus"},"content":"    }","lastModifiedDate":"2023-11-10"},{"lineNumber":83,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":84,"author":{"gitId":"yarnmengnus"},"content":"    @Test","lastModifiedDate":"2023-11-10"},{"lineNumber":85,"author":{"gitId":"yarnmengnus"},"content":"    public void execute_helpEditSettings_success() {","lastModifiedDate":"2023-11-10"},{"lineNumber":86,"author":{"gitId":"yarnmengnus"},"content":"        try {","lastModifiedDate":"2023-11-10"},{"lineNumber":87,"author":{"gitId":"yarnmengnus"},"content":"            CommandResult expectedCommandResult \u003d new CommandResult(","lastModifiedDate":"2023-11-10"},{"lineNumber":88,"author":{"gitId":"yarnmengnus"},"content":"                getOneCommandDescription(EditSettingsCommand.COMMAND_WORD), false, false);","lastModifiedDate":"2023-11-10"},{"lineNumber":89,"author":{"gitId":"yarnmengnus"},"content":"            assertCommandSuccess(new HelpCommand(EditSettingsCommand.COMMAND_WORD),","lastModifiedDate":"2023-11-10"},{"lineNumber":90,"author":{"gitId":"yarnmengnus"},"content":"                model, expectedCommandResult, expectedModel);","lastModifiedDate":"2023-11-10"},{"lineNumber":91,"author":{"gitId":"yarnmengnus"},"content":"        } catch (CommandException e) {","lastModifiedDate":"2023-11-10"},{"lineNumber":92,"author":{"gitId":"yarnmengnus"},"content":"            assertCommandFailure(null, model, MESSAGE_INVALID_COMMAND_WORD);","lastModifiedDate":"2023-11-10"},{"lineNumber":93,"author":{"gitId":"yarnmengnus"},"content":"        }","lastModifiedDate":"2023-11-10"},{"lineNumber":94,"author":{"gitId":"yarnmengnus"},"content":"    }","lastModifiedDate":"2023-11-10"},{"lineNumber":95,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":96,"author":{"gitId":"yarnmengnus"},"content":"    @Test","lastModifiedDate":"2023-11-10"},{"lineNumber":97,"author":{"gitId":"yarnmengnus"},"content":"    public void execute_helpMark_success() {","lastModifiedDate":"2023-11-10"},{"lineNumber":98,"author":{"gitId":"yarnmengnus"},"content":"        try {","lastModifiedDate":"2023-11-10"},{"lineNumber":99,"author":{"gitId":"yarnmengnus"},"content":"            CommandResult expectedCommandResult \u003d new CommandResult(","lastModifiedDate":"2023-11-10"},{"lineNumber":100,"author":{"gitId":"yarnmengnus"},"content":"                getOneCommandDescription(MarkCommand.COMMAND_WORD), false, false);","lastModifiedDate":"2023-11-10"},{"lineNumber":101,"author":{"gitId":"yarnmengnus"},"content":"            assertCommandSuccess(new HelpCommand(MarkCommand.COMMAND_WORD), model,","lastModifiedDate":"2023-11-10"},{"lineNumber":102,"author":{"gitId":"yarnmengnus"},"content":"                expectedCommandResult, expectedModel);","lastModifiedDate":"2023-11-10"},{"lineNumber":103,"author":{"gitId":"yarnmengnus"},"content":"        } catch (CommandException e) {","lastModifiedDate":"2023-11-10"},{"lineNumber":104,"author":{"gitId":"yarnmengnus"},"content":"            assertCommandFailure(null, model, MESSAGE_INVALID_COMMAND_WORD);","lastModifiedDate":"2023-11-10"},{"lineNumber":105,"author":{"gitId":"yarnmengnus"},"content":"        }","lastModifiedDate":"2023-11-10"},{"lineNumber":106,"author":{"gitId":"yarnmengnus"},"content":"    }","lastModifiedDate":"2023-11-10"},{"lineNumber":107,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":108,"author":{"gitId":"yarnmengnus"},"content":"    @Test","lastModifiedDate":"2023-11-10"},{"lineNumber":109,"author":{"gitId":"yarnmengnus"},"content":"    public void execute_helpUnmark_success() {","lastModifiedDate":"2023-11-10"},{"lineNumber":110,"author":{"gitId":"yarnmengnus"},"content":"        try {","lastModifiedDate":"2023-11-10"},{"lineNumber":111,"author":{"gitId":"yarnmengnus"},"content":"            CommandResult expectedCommandResult \u003d new CommandResult(","lastModifiedDate":"2023-11-10"},{"lineNumber":112,"author":{"gitId":"yarnmengnus"},"content":"                getOneCommandDescription(UnmarkCommand.COMMAND_WORD), false, false);","lastModifiedDate":"2023-11-10"},{"lineNumber":113,"author":{"gitId":"yarnmengnus"},"content":"            assertCommandSuccess(new HelpCommand(UnmarkCommand.COMMAND_WORD), model,","lastModifiedDate":"2023-11-10"},{"lineNumber":114,"author":{"gitId":"yarnmengnus"},"content":"                expectedCommandResult, expectedModel);","lastModifiedDate":"2023-11-10"},{"lineNumber":115,"author":{"gitId":"yarnmengnus"},"content":"        } catch (CommandException e) {","lastModifiedDate":"2023-11-10"},{"lineNumber":116,"author":{"gitId":"yarnmengnus"},"content":"            assertCommandFailure(null, model, MESSAGE_INVALID_COMMAND_WORD);","lastModifiedDate":"2023-11-10"},{"lineNumber":117,"author":{"gitId":"yarnmengnus"},"content":"        }","lastModifiedDate":"2023-11-10"},{"lineNumber":118,"author":{"gitId":"yarnmengnus"},"content":"    }","lastModifiedDate":"2023-11-10"},{"lineNumber":119,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":120,"author":{"gitId":"yarnmengnus"},"content":"    @Test","lastModifiedDate":"2023-11-10"},{"lineNumber":121,"author":{"gitId":"yarnmengnus"},"content":"    public void execute_helpDoNext_success() {","lastModifiedDate":"2023-11-10"},{"lineNumber":122,"author":{"gitId":"yarnmengnus"},"content":"        try {","lastModifiedDate":"2023-11-10"},{"lineNumber":123,"author":{"gitId":"yarnmengnus"},"content":"            CommandResult expectedCommandResult \u003d new CommandResult(","lastModifiedDate":"2023-11-10"},{"lineNumber":124,"author":{"gitId":"yarnmengnus"},"content":"                getOneCommandDescription(DoNextCommand.COMMAND_WORD), false, false);","lastModifiedDate":"2023-11-10"},{"lineNumber":125,"author":{"gitId":"yarnmengnus"},"content":"            assertCommandSuccess(new HelpCommand(DoNextCommand.COMMAND_WORD),","lastModifiedDate":"2023-11-10"},{"lineNumber":126,"author":{"gitId":"yarnmengnus"},"content":"                model, expectedCommandResult, expectedModel);","lastModifiedDate":"2023-11-10"},{"lineNumber":127,"author":{"gitId":"yarnmengnus"},"content":"        } catch (CommandException e) {","lastModifiedDate":"2023-11-10"},{"lineNumber":128,"author":{"gitId":"yarnmengnus"},"content":"            assertCommandFailure(null, model, MESSAGE_INVALID_COMMAND_WORD);","lastModifiedDate":"2023-11-10"},{"lineNumber":129,"author":{"gitId":"yarnmengnus"},"content":"        }","lastModifiedDate":"2023-11-10"},{"lineNumber":130,"author":{"gitId":"yarnmengnus"},"content":"    }","lastModifiedDate":"2023-11-10"},{"lineNumber":131,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":132,"author":{"gitId":"yarnmengnus"},"content":"    @Test","lastModifiedDate":"2023-11-10"},{"lineNumber":133,"author":{"gitId":"yarnmengnus"},"content":"    public void execute_helpClear_success() {","lastModifiedDate":"2023-11-10"},{"lineNumber":134,"author":{"gitId":"yarnmengnus"},"content":"        try {","lastModifiedDate":"2023-11-10"},{"lineNumber":135,"author":{"gitId":"yarnmengnus"},"content":"            CommandResult expectedCommandResult \u003d new CommandResult(","lastModifiedDate":"2023-11-10"},{"lineNumber":136,"author":{"gitId":"yarnmengnus"},"content":"                getOneCommandDescription(ClearCommand.COMMAND_WORD), false, false);","lastModifiedDate":"2023-11-10"},{"lineNumber":137,"author":{"gitId":"yarnmengnus"},"content":"            assertCommandSuccess(new HelpCommand(ClearCommand.COMMAND_WORD), model,","lastModifiedDate":"2023-11-10"},{"lineNumber":138,"author":{"gitId":"yarnmengnus"},"content":"                expectedCommandResult, expectedModel);","lastModifiedDate":"2023-11-10"},{"lineNumber":139,"author":{"gitId":"yarnmengnus"},"content":"        } catch (CommandException e) {","lastModifiedDate":"2023-11-10"},{"lineNumber":140,"author":{"gitId":"yarnmengnus"},"content":"            assertCommandFailure(null, model, MESSAGE_INVALID_COMMAND_WORD);","lastModifiedDate":"2023-11-10"},{"lineNumber":141,"author":{"gitId":"yarnmengnus"},"content":"        }","lastModifiedDate":"2023-11-10"},{"lineNumber":142,"author":{"gitId":"yarnmengnus"},"content":"    }","lastModifiedDate":"2023-11-10"},{"lineNumber":143,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":144,"author":{"gitId":"yarnmengnus"},"content":"    @Test","lastModifiedDate":"2023-11-10"},{"lineNumber":145,"author":{"gitId":"yarnmengnus"},"content":"    public void execute_helpFind_success() {","lastModifiedDate":"2023-11-10"},{"lineNumber":146,"author":{"gitId":"yarnmengnus"},"content":"        try {","lastModifiedDate":"2023-11-10"},{"lineNumber":147,"author":{"gitId":"yarnmengnus"},"content":"            CommandResult expectedCommandResult \u003d new CommandResult(","lastModifiedDate":"2023-11-10"},{"lineNumber":148,"author":{"gitId":"yarnmengnus"},"content":"                getOneCommandDescription(FindCommand.COMMAND_WORD), false, false);","lastModifiedDate":"2023-11-10"},{"lineNumber":149,"author":{"gitId":"yarnmengnus"},"content":"            assertCommandSuccess(new HelpCommand(FindCommand.COMMAND_WORD),","lastModifiedDate":"2023-11-10"},{"lineNumber":150,"author":{"gitId":"yarnmengnus"},"content":"                model, expectedCommandResult, expectedModel);","lastModifiedDate":"2023-11-10"},{"lineNumber":151,"author":{"gitId":"yarnmengnus"},"content":"        } catch (CommandException e) {","lastModifiedDate":"2023-11-10"},{"lineNumber":152,"author":{"gitId":"yarnmengnus"},"content":"            assertCommandFailure(null, model, MESSAGE_INVALID_COMMAND_WORD);","lastModifiedDate":"2023-11-10"},{"lineNumber":153,"author":{"gitId":"yarnmengnus"},"content":"        }","lastModifiedDate":"2023-11-10"},{"lineNumber":154,"author":{"gitId":"yarnmengnus"},"content":"    }","lastModifiedDate":"2023-11-10"},{"lineNumber":155,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":156,"author":{"gitId":"yarnmengnus"},"content":"    @Test","lastModifiedDate":"2023-11-10"},{"lineNumber":157,"author":{"gitId":"yarnmengnus"},"content":"    public void execute_helpFilter_success() {","lastModifiedDate":"2023-11-10"},{"lineNumber":158,"author":{"gitId":"yarnmengnus"},"content":"        try {","lastModifiedDate":"2023-11-10"},{"lineNumber":159,"author":{"gitId":"yarnmengnus"},"content":"            CommandResult expectedCommandResult \u003d new CommandResult(","lastModifiedDate":"2023-11-10"},{"lineNumber":160,"author":{"gitId":"yarnmengnus"},"content":"                getOneCommandDescription(FilterCommand.COMMAND_WORD), false, false);","lastModifiedDate":"2023-11-10"},{"lineNumber":161,"author":{"gitId":"yarnmengnus"},"content":"            assertCommandSuccess(new HelpCommand(FilterCommand.COMMAND_WORD),","lastModifiedDate":"2023-11-10"},{"lineNumber":162,"author":{"gitId":"yarnmengnus"},"content":"                model, expectedCommandResult, expectedModel);","lastModifiedDate":"2023-11-10"},{"lineNumber":163,"author":{"gitId":"yarnmengnus"},"content":"        } catch (CommandException e) {","lastModifiedDate":"2023-11-10"},{"lineNumber":164,"author":{"gitId":"yarnmengnus"},"content":"            assertCommandFailure(null, model, MESSAGE_INVALID_COMMAND_WORD);","lastModifiedDate":"2023-11-10"},{"lineNumber":165,"author":{"gitId":"yarnmengnus"},"content":"        }","lastModifiedDate":"2023-11-10"},{"lineNumber":166,"author":{"gitId":"yarnmengnus"},"content":"    }","lastModifiedDate":"2023-11-10"},{"lineNumber":167,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":168,"author":{"gitId":"yarnmengnus"},"content":"    @Test","lastModifiedDate":"2023-11-10"},{"lineNumber":169,"author":{"gitId":"yarnmengnus"},"content":"    public void execute_helpList_success() {","lastModifiedDate":"2023-11-10"},{"lineNumber":170,"author":{"gitId":"yarnmengnus"},"content":"        try {","lastModifiedDate":"2023-11-10"},{"lineNumber":171,"author":{"gitId":"yarnmengnus"},"content":"            CommandResult expectedCommandResult \u003d new CommandResult(","lastModifiedDate":"2023-11-10"},{"lineNumber":172,"author":{"gitId":"yarnmengnus"},"content":"                getOneCommandDescription(ListCommand.COMMAND_WORD), false, false);","lastModifiedDate":"2023-11-10"},{"lineNumber":173,"author":{"gitId":"yarnmengnus"},"content":"            assertCommandSuccess(new HelpCommand(ListCommand.COMMAND_WORD),","lastModifiedDate":"2023-11-10"},{"lineNumber":174,"author":{"gitId":"yarnmengnus"},"content":"                model, expectedCommandResult, expectedModel);","lastModifiedDate":"2023-11-10"},{"lineNumber":175,"author":{"gitId":"yarnmengnus"},"content":"        } catch (CommandException e) {","lastModifiedDate":"2023-11-10"},{"lineNumber":176,"author":{"gitId":"yarnmengnus"},"content":"            assertCommandFailure(null, model, MESSAGE_INVALID_COMMAND_WORD);","lastModifiedDate":"2023-11-10"},{"lineNumber":177,"author":{"gitId":"yarnmengnus"},"content":"        }","lastModifiedDate":"2023-11-10"},{"lineNumber":178,"author":{"gitId":"yarnmengnus"},"content":"    }","lastModifiedDate":"2023-11-10"},{"lineNumber":179,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":180,"author":{"gitId":"yarnmengnus"},"content":"    @Test","lastModifiedDate":"2023-11-10"},{"lineNumber":181,"author":{"gitId":"yarnmengnus"},"content":"    public void execute_helpExit_success() {","lastModifiedDate":"2023-11-10"},{"lineNumber":182,"author":{"gitId":"yarnmengnus"},"content":"        try {","lastModifiedDate":"2023-11-10"},{"lineNumber":183,"author":{"gitId":"yarnmengnus"},"content":"            CommandResult expectedCommandResult \u003d new CommandResult(","lastModifiedDate":"2023-11-10"},{"lineNumber":184,"author":{"gitId":"yarnmengnus"},"content":"                getOneCommandDescription(ExitCommand.COMMAND_WORD), false, false);","lastModifiedDate":"2023-11-10"},{"lineNumber":185,"author":{"gitId":"yarnmengnus"},"content":"            assertCommandSuccess(new HelpCommand(ExitCommand.COMMAND_WORD),","lastModifiedDate":"2023-11-10"},{"lineNumber":186,"author":{"gitId":"yarnmengnus"},"content":"                model, expectedCommandResult, expectedModel);","lastModifiedDate":"2023-11-10"},{"lineNumber":187,"author":{"gitId":"yarnmengnus"},"content":"        } catch (CommandException e) {","lastModifiedDate":"2023-11-10"},{"lineNumber":188,"author":{"gitId":"yarnmengnus"},"content":"            assertCommandFailure(null, model, MESSAGE_INVALID_COMMAND_WORD);","lastModifiedDate":"2023-11-10"},{"lineNumber":189,"author":{"gitId":"yarnmengnus"},"content":"        }","lastModifiedDate":"2023-11-10"},{"lineNumber":190,"author":{"gitId":"yarnmengnus"},"content":"    }","lastModifiedDate":"2023-11-10"},{"lineNumber":191,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":192,"author":{"gitId":"yarnmengnus"},"content":"    @Test","lastModifiedDate":"2023-11-10"},{"lineNumber":193,"author":{"gitId":"yarnmengnus"},"content":"    public void execute_helpHelp_success() {","lastModifiedDate":"2023-11-10"},{"lineNumber":194,"author":{"gitId":"yarnmengnus"},"content":"        try {","lastModifiedDate":"2023-11-10"},{"lineNumber":195,"author":{"gitId":"yarnmengnus"},"content":"            CommandResult expectedCommandResult \u003d new CommandResult(","lastModifiedDate":"2023-11-10"},{"lineNumber":196,"author":{"gitId":"yarnmengnus"},"content":"                getOneCommandDescription(HelpCommand.COMMAND_WORD), false, false);","lastModifiedDate":"2023-11-10"},{"lineNumber":197,"author":{"gitId":"yarnmengnus"},"content":"            assertCommandSuccess(new HelpCommand(HelpCommand.COMMAND_WORD),","lastModifiedDate":"2023-11-10"},{"lineNumber":198,"author":{"gitId":"yarnmengnus"},"content":"                model, expectedCommandResult, expectedModel);","lastModifiedDate":"2023-11-10"},{"lineNumber":199,"author":{"gitId":"yarnmengnus"},"content":"        } catch (CommandException e) {","lastModifiedDate":"2023-11-10"},{"lineNumber":200,"author":{"gitId":"yarnmengnus"},"content":"            assertCommandFailure(null, model, MESSAGE_INVALID_COMMAND_WORD);","lastModifiedDate":"2023-11-10"},{"lineNumber":201,"author":{"gitId":"yarnmengnus"},"content":"        }","lastModifiedDate":"2023-11-10"},{"lineNumber":202,"author":{"gitId":"yarnmengnus"},"content":"    }","lastModifiedDate":"2023-11-10"},{"lineNumber":203,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":204,"author":{"gitId":"yarnmengnus"},"content":"    @Test","lastModifiedDate":"2023-11-10"},{"lineNumber":205,"author":{"gitId":"yarnmengnus"},"content":"    public void execute_helpDescription_success() {","lastModifiedDate":"2023-11-10"},{"lineNumber":206,"author":{"gitId":"yarnmengnus"},"content":"        try {","lastModifiedDate":"2023-11-10"},{"lineNumber":207,"author":{"gitId":"yarnmengnus"},"content":"            CommandResult expectedCommandResult \u003d new CommandResult(","lastModifiedDate":"2023-11-10"},{"lineNumber":208,"author":{"gitId":"yarnmengnus"},"content":"                getOneCommandDescription(DescriptionCommand.COMMAND_WORD), false, false);","lastModifiedDate":"2023-11-10"},{"lineNumber":209,"author":{"gitId":"yarnmengnus"},"content":"            assertCommandSuccess(new HelpCommand(DescriptionCommand.COMMAND_WORD),","lastModifiedDate":"2023-11-10"},{"lineNumber":210,"author":{"gitId":"yarnmengnus"},"content":"                model, expectedCommandResult, expectedModel);","lastModifiedDate":"2023-11-10"},{"lineNumber":211,"author":{"gitId":"yarnmengnus"},"content":"        } catch (CommandException e) {","lastModifiedDate":"2023-11-10"},{"lineNumber":212,"author":{"gitId":"yarnmengnus"},"content":"            assertCommandFailure(null, model, MESSAGE_INVALID_COMMAND_WORD);","lastModifiedDate":"2023-11-10"},{"lineNumber":213,"author":{"gitId":"yarnmengnus"},"content":"        }","lastModifiedDate":"2023-11-10"},{"lineNumber":214,"author":{"gitId":"yarnmengnus"},"content":"    }","lastModifiedDate":"2023-11-10"},{"lineNumber":215,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":216,"author":{"gitId":"yarnmengnus"},"content":"    @Test","lastModifiedDate":"2023-11-10"},{"lineNumber":217,"author":{"gitId":"yarnmengnus"},"content":"    public void execute_helpSortDueDate_success() {","lastModifiedDate":"2023-11-10"},{"lineNumber":218,"author":{"gitId":"yarnmengnus"},"content":"        try {","lastModifiedDate":"2023-11-10"},{"lineNumber":219,"author":{"gitId":"yarnmengnus"},"content":"            CommandResult expectedCommandResult \u003d new CommandResult(","lastModifiedDate":"2023-11-10"},{"lineNumber":220,"author":{"gitId":"yarnmengnus"},"content":"                getOneCommandDescription(SortDueDateCommand.COMMAND_WORD), false, false);","lastModifiedDate":"2023-11-10"},{"lineNumber":221,"author":{"gitId":"yarnmengnus"},"content":"            assertCommandSuccess(new HelpCommand(SortDueDateCommand.COMMAND_WORD),","lastModifiedDate":"2023-11-10"},{"lineNumber":222,"author":{"gitId":"yarnmengnus"},"content":"                model, expectedCommandResult, expectedModel);","lastModifiedDate":"2023-11-10"},{"lineNumber":223,"author":{"gitId":"yarnmengnus"},"content":"        } catch (CommandException e) {","lastModifiedDate":"2023-11-10"},{"lineNumber":224,"author":{"gitId":"yarnmengnus"},"content":"            assertCommandFailure(null, model, MESSAGE_INVALID_COMMAND_WORD);","lastModifiedDate":"2023-11-10"},{"lineNumber":225,"author":{"gitId":"yarnmengnus"},"content":"        }","lastModifiedDate":"2023-11-10"},{"lineNumber":226,"author":{"gitId":"yarnmengnus"},"content":"    }","lastModifiedDate":"2023-11-10"},{"lineNumber":227,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":228,"author":{"gitId":"yarnmengnus"},"content":"    @Test","lastModifiedDate":"2023-11-10"},{"lineNumber":229,"author":{"gitId":"yarnmengnus"},"content":"    public void execute_helpSortPriority_success() {","lastModifiedDate":"2023-11-10"},{"lineNumber":230,"author":{"gitId":"yarnmengnus"},"content":"        try {","lastModifiedDate":"2023-11-10"},{"lineNumber":231,"author":{"gitId":"yarnmengnus"},"content":"            CommandResult expectedCommandResult \u003d new CommandResult(","lastModifiedDate":"2023-11-10"},{"lineNumber":232,"author":{"gitId":"yarnmengnus"},"content":"                getOneCommandDescription(SortPriorityCommand.COMMAND_WORD), false, false);","lastModifiedDate":"2023-11-10"},{"lineNumber":233,"author":{"gitId":"yarnmengnus"},"content":"            assertCommandSuccess(new HelpCommand(SortPriorityCommand.COMMAND_WORD),","lastModifiedDate":"2023-11-10"},{"lineNumber":234,"author":{"gitId":"yarnmengnus"},"content":"                model, expectedCommandResult, expectedModel);","lastModifiedDate":"2023-11-10"},{"lineNumber":235,"author":{"gitId":"yarnmengnus"},"content":"        } catch (CommandException e) {","lastModifiedDate":"2023-11-10"},{"lineNumber":236,"author":{"gitId":"yarnmengnus"},"content":"            assertCommandFailure(null, model, MESSAGE_INVALID_COMMAND_WORD);","lastModifiedDate":"2023-11-10"},{"lineNumber":237,"author":{"gitId":"yarnmengnus"},"content":"        }","lastModifiedDate":"2023-11-10"},{"lineNumber":238,"author":{"gitId":"yarnmengnus"},"content":"    }","lastModifiedDate":"2023-11-10"},{"lineNumber":239,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":240,"author":{"gitId":"yarnmengnus"},"content":"    @Test","lastModifiedDate":"2023-11-10"},{"lineNumber":241,"author":{"gitId":"yarnmengnus"},"content":"    public void execute_helpListWeek_success() {","lastModifiedDate":"2023-11-10"},{"lineNumber":242,"author":{"gitId":"yarnmengnus"},"content":"        try {","lastModifiedDate":"2023-11-10"},{"lineNumber":243,"author":{"gitId":"yarnmengnus"},"content":"            CommandResult expectedCommandResult \u003d new CommandResult(","lastModifiedDate":"2023-11-10"},{"lineNumber":244,"author":{"gitId":"yarnmengnus"},"content":"                getOneCommandDescription(ListWeekCommand.COMMAND_WORD), false, false);","lastModifiedDate":"2023-11-10"},{"lineNumber":245,"author":{"gitId":"yarnmengnus"},"content":"            assertCommandSuccess(new HelpCommand(ListWeekCommand.COMMAND_WORD),","lastModifiedDate":"2023-11-10"},{"lineNumber":246,"author":{"gitId":"yarnmengnus"},"content":"                model, expectedCommandResult, expectedModel);","lastModifiedDate":"2023-11-10"},{"lineNumber":247,"author":{"gitId":"yarnmengnus"},"content":"        } catch (CommandException e) {","lastModifiedDate":"2023-11-10"},{"lineNumber":248,"author":{"gitId":"yarnmengnus"},"content":"            assertCommandFailure(null, model, MESSAGE_INVALID_COMMAND_WORD);","lastModifiedDate":"2023-11-10"},{"lineNumber":249,"author":{"gitId":"yarnmengnus"},"content":"        }","lastModifiedDate":"2023-11-10"},{"lineNumber":250,"author":{"gitId":"yarnmengnus"},"content":"    }","lastModifiedDate":"2023-11-10"},{"lineNumber":251,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":252,"author":{"gitId":"yarnmengnus"},"content":"    @Test","lastModifiedDate":"2023-11-10"},{"lineNumber":253,"author":{"gitId":"yarnmengnus"},"content":"    public void execute_helpListMonth_success() {","lastModifiedDate":"2023-11-10"},{"lineNumber":254,"author":{"gitId":"yarnmengnus"},"content":"        try {","lastModifiedDate":"2023-11-10"},{"lineNumber":255,"author":{"gitId":"yarnmengnus"},"content":"            CommandResult expectedCommandResult \u003d new CommandResult(","lastModifiedDate":"2023-11-10"},{"lineNumber":256,"author":{"gitId":"yarnmengnus"},"content":"                getOneCommandDescription(ListMonthCommand.COMMAND_WORD), false, false);","lastModifiedDate":"2023-11-10"},{"lineNumber":257,"author":{"gitId":"yarnmengnus"},"content":"            assertCommandSuccess(new HelpCommand(ListMonthCommand.COMMAND_WORD),","lastModifiedDate":"2023-11-10"},{"lineNumber":258,"author":{"gitId":"yarnmengnus"},"content":"                model, expectedCommandResult, expectedModel);","lastModifiedDate":"2023-11-10"},{"lineNumber":259,"author":{"gitId":"yarnmengnus"},"content":"        } catch (CommandException e) {","lastModifiedDate":"2023-11-10"},{"lineNumber":260,"author":{"gitId":"yarnmengnus"},"content":"            assertCommandFailure(null, model, MESSAGE_INVALID_COMMAND_WORD);","lastModifiedDate":"2023-11-10"},{"lineNumber":261,"author":{"gitId":"yarnmengnus"},"content":"        }","lastModifiedDate":"2023-11-10"},{"lineNumber":262,"author":{"gitId":"yarnmengnus"},"content":"    }","lastModifiedDate":"2023-11-10"},{"lineNumber":263,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":264,"author":{"gitId":"yarnmengnus"},"content":"    @Test","lastModifiedDate":"2023-11-10"},{"lineNumber":265,"author":{"gitId":"yarnmengnus"},"content":"    public void execute_helpStats_success() {","lastModifiedDate":"2023-11-10"},{"lineNumber":266,"author":{"gitId":"yarnmengnus"},"content":"        try {","lastModifiedDate":"2023-11-10"},{"lineNumber":267,"author":{"gitId":"yarnmengnus"},"content":"            CommandResult expectedCommandResult \u003d new CommandResult(","lastModifiedDate":"2023-11-10"},{"lineNumber":268,"author":{"gitId":"yarnmengnus"},"content":"                getOneCommandDescription(StatsCommand.COMMAND_WORD), false, false);","lastModifiedDate":"2023-11-10"},{"lineNumber":269,"author":{"gitId":"yarnmengnus"},"content":"            assertCommandSuccess(new HelpCommand(StatsCommand.COMMAND_WORD),","lastModifiedDate":"2023-11-10"},{"lineNumber":270,"author":{"gitId":"yarnmengnus"},"content":"                model, expectedCommandResult, expectedModel);","lastModifiedDate":"2023-11-10"},{"lineNumber":271,"author":{"gitId":"yarnmengnus"},"content":"        } catch (CommandException e) {","lastModifiedDate":"2023-11-10"},{"lineNumber":272,"author":{"gitId":"yarnmengnus"},"content":"            assertCommandFailure(null, model, MESSAGE_INVALID_COMMAND_WORD);","lastModifiedDate":"2023-11-10"},{"lineNumber":273,"author":{"gitId":"yarnmengnus"},"content":"        }","lastModifiedDate":"2023-11-10"},{"lineNumber":274,"author":{"gitId":"yarnmengnus"},"content":"    }","lastModifiedDate":"2023-11-10"},{"lineNumber":275,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":276,"author":{"gitId":"yarnmengnus"},"content":"    private String getOneCommandDescription(String command) throws CommandException {","lastModifiedDate":"2023-11-10"},{"lineNumber":277,"author":{"gitId":"yarnmengnus"},"content":"        switch (command) {","lastModifiedDate":"2023-11-10"},{"lineNumber":278,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":279,"author":{"gitId":"yarnmengnus"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2023-11-10"},{"lineNumber":280,"author":{"gitId":"yarnmengnus"},"content":"            return AddCommand.MESSAGE_USAGE + \"\\n\" + AddCommand.MESSAGE_EXAMPLE;","lastModifiedDate":"2023-11-10"},{"lineNumber":281,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":282,"author":{"gitId":"yarnmengnus"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2023-11-10"},{"lineNumber":283,"author":{"gitId":"yarnmengnus"},"content":"            return EditCommand.MESSAGE_USAGE + \"\\n\" + EditCommand.MESSAGE_EXAMPLE;","lastModifiedDate":"2023-11-10"},{"lineNumber":284,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":285,"author":{"gitId":"yarnmengnus"},"content":"        case EditSettingsCommand.COMMAND_WORD:","lastModifiedDate":"2023-11-10"},{"lineNumber":286,"author":{"gitId":"yarnmengnus"},"content":"            return EditSettingsCommand.MESSAGE_USAGE + \"\\n\" + EditSettingsCommand.MESSAGE_EXAMPLE;","lastModifiedDate":"2023-11-10"},{"lineNumber":287,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":288,"author":{"gitId":"yarnmengnus"},"content":"        case MarkCommand.COMMAND_WORD:","lastModifiedDate":"2023-11-10"},{"lineNumber":289,"author":{"gitId":"yarnmengnus"},"content":"            return MarkCommand.MESSAGE_USAGE + \"\\n\" + MarkCommand.MESSAGE_EXAMPLE;","lastModifiedDate":"2023-11-10"},{"lineNumber":290,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":291,"author":{"gitId":"yarnmengnus"},"content":"        case UnmarkCommand.COMMAND_WORD:","lastModifiedDate":"2023-11-10"},{"lineNumber":292,"author":{"gitId":"yarnmengnus"},"content":"            return UnmarkCommand.MESSAGE_USAGE + \"\\n\" + UnmarkCommand.MESSAGE_EXAMPLE;","lastModifiedDate":"2023-11-10"},{"lineNumber":293,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":294,"author":{"gitId":"yarnmengnus"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2023-11-10"},{"lineNumber":295,"author":{"gitId":"yarnmengnus"},"content":"            return DeleteCommand.MESSAGE_USAGE + \"\\n\" + DeleteCommand.MESSAGE_EXAMPLE;","lastModifiedDate":"2023-11-10"},{"lineNumber":296,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":297,"author":{"gitId":"yarnmengnus"},"content":"        case DoNextCommand.COMMAND_WORD:","lastModifiedDate":"2023-11-10"},{"lineNumber":298,"author":{"gitId":"yarnmengnus"},"content":"            return DoNextCommand.MESSAGE_USAGE;","lastModifiedDate":"2023-11-10"},{"lineNumber":299,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":300,"author":{"gitId":"yarnmengnus"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2023-11-10"},{"lineNumber":301,"author":{"gitId":"yarnmengnus"},"content":"            return ClearCommand.MESSAGE_USAGE;","lastModifiedDate":"2023-11-11"},{"lineNumber":302,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":303,"author":{"gitId":"yarnmengnus"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2023-11-10"},{"lineNumber":304,"author":{"gitId":"yarnmengnus"},"content":"            return FindCommand.MESSAGE_USAGE + \"\\n\" + FindCommand.MESSAGE_EXAMPLE;","lastModifiedDate":"2023-11-10"},{"lineNumber":305,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":306,"author":{"gitId":"yarnmengnus"},"content":"        case FilterCommand.COMMAND_WORD:","lastModifiedDate":"2023-11-10"},{"lineNumber":307,"author":{"gitId":"yarnmengnus"},"content":"            return FilterCommand.MESSAGE_USAGE + \"\\n\" + FilterCommand.MESSAGE_EXAMPLE;","lastModifiedDate":"2023-11-10"},{"lineNumber":308,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":309,"author":{"gitId":"yarnmengnus"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2023-11-10"},{"lineNumber":310,"author":{"gitId":"yarnmengnus"},"content":"            return ListCommand.MESSAGE_USAGE;","lastModifiedDate":"2023-11-11"},{"lineNumber":311,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":312,"author":{"gitId":"yarnmengnus"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2023-11-10"},{"lineNumber":313,"author":{"gitId":"yarnmengnus"},"content":"            return ExitCommand.MESSAGE_USAGE;","lastModifiedDate":"2023-11-11"},{"lineNumber":314,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":315,"author":{"gitId":"yarnmengnus"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2023-11-10"},{"lineNumber":316,"author":{"gitId":"yarnmengnus"},"content":"            return HelpCommand.MESSAGE_USAGE + \"\\n\" + HelpCommand.MESSAGE_EXAMPLE;","lastModifiedDate":"2023-11-10"},{"lineNumber":317,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":318,"author":{"gitId":"yarnmengnus"},"content":"        case DescriptionCommand.COMMAND_WORD:","lastModifiedDate":"2023-11-10"},{"lineNumber":319,"author":{"gitId":"yarnmengnus"},"content":"            return DescriptionCommand.MESSAGE_USAGE + \"\\n\" + DescriptionCommand.MESSAGE_EXAMPLE;","lastModifiedDate":"2023-11-10"},{"lineNumber":320,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":321,"author":{"gitId":"yarnmengnus"},"content":"        case SortDueDateCommand.COMMAND_WORD:","lastModifiedDate":"2023-11-10"},{"lineNumber":322,"author":{"gitId":"yarnmengnus"},"content":"            return SortDueDateCommand.MESSAGE_USAGE;","lastModifiedDate":"2023-11-10"},{"lineNumber":323,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":324,"author":{"gitId":"yarnmengnus"},"content":"        case SortPriorityCommand.COMMAND_WORD:","lastModifiedDate":"2023-11-10"},{"lineNumber":325,"author":{"gitId":"yarnmengnus"},"content":"            return SortPriorityCommand.MESSAGE_USAGE;","lastModifiedDate":"2023-11-10"},{"lineNumber":326,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":327,"author":{"gitId":"yarnmengnus"},"content":"        case ListWeekCommand.COMMAND_WORD:","lastModifiedDate":"2023-11-10"},{"lineNumber":328,"author":{"gitId":"yarnmengnus"},"content":"            return ListWeekCommand.MESSAGE_USAGE;","lastModifiedDate":"2023-11-10"},{"lineNumber":329,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":330,"author":{"gitId":"yarnmengnus"},"content":"        case ListMonthCommand.COMMAND_WORD:","lastModifiedDate":"2023-11-10"},{"lineNumber":331,"author":{"gitId":"yarnmengnus"},"content":"            return ListMonthCommand.MESSAGE_USAGE;","lastModifiedDate":"2023-11-10"},{"lineNumber":332,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":333,"author":{"gitId":"yarnmengnus"},"content":"        case StatsCommand.COMMAND_WORD:","lastModifiedDate":"2023-11-10"},{"lineNumber":334,"author":{"gitId":"yarnmengnus"},"content":"            return StatsCommand.MESSAGE_USAGE;","lastModifiedDate":"2023-11-10"},{"lineNumber":335,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":336,"author":{"gitId":"yarnmengnus"},"content":"        default:","lastModifiedDate":"2023-11-10"},{"lineNumber":337,"author":{"gitId":"yarnmengnus"},"content":"            throw new CommandException(MESSAGE_INVALID_COMMAND_WORD);","lastModifiedDate":"2023-11-10"},{"lineNumber":338,"author":{"gitId":"yarnmengnus"},"content":"        }","lastModifiedDate":"2023-11-10"},{"lineNumber":339,"author":{"gitId":"yarnmengnus"},"content":"    }","lastModifiedDate":"2023-11-10"},{"lineNumber":340,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":341,"author":{"gitId":"yarnmengnus"},"content":"    private String getAllCommandDescriptions() {","lastModifiedDate":"2023-11-10"},{"lineNumber":342,"author":{"gitId":"yarnmengnus"},"content":"        ArrayList\u003cClass\u003c? extends Command\u003e\u003e commands \u003d listCommands();","lastModifiedDate":"2023-11-10"},{"lineNumber":343,"author":{"gitId":"yarnmengnus"},"content":"        String rtn \u003d \"\";","lastModifiedDate":"2023-11-10"},{"lineNumber":344,"author":{"gitId":"yarnmengnus"},"content":"        for (Class\u003c? extends Command\u003e command : commands) {","lastModifiedDate":"2023-11-10"},{"lineNumber":345,"author":{"gitId":"yarnmengnus"},"content":"            try {","lastModifiedDate":"2023-11-10"},{"lineNumber":346,"author":{"gitId":"yarnmengnus"},"content":"                Field usage \u003d command.getDeclaredField(\"MESSAGE_USAGE\");","lastModifiedDate":"2023-11-10"},{"lineNumber":347,"author":{"gitId":"yarnmengnus"},"content":"                System.out.println(usage.get(null).toString());","lastModifiedDate":"2023-11-10"},{"lineNumber":348,"author":{"gitId":"yarnmengnus"},"content":"                rtn +\u003d usage.get(null).toString() + DELIMITTER_BETWEEN_COMMANDS;","lastModifiedDate":"2023-11-10"},{"lineNumber":349,"author":{"gitId":"yarnmengnus"},"content":"            } catch (NoSuchFieldException e) {","lastModifiedDate":"2023-11-10"},{"lineNumber":350,"author":{"gitId":"yarnmengnus"},"content":"                //impossible unless your command has no command word??","lastModifiedDate":"2023-11-10"},{"lineNumber":351,"author":{"gitId":"yarnmengnus"},"content":"                System.out.println(e);","lastModifiedDate":"2023-11-10"},{"lineNumber":352,"author":{"gitId":"yarnmengnus"},"content":"                continue;","lastModifiedDate":"2023-11-10"},{"lineNumber":353,"author":{"gitId":"yarnmengnus"},"content":"            } catch (IllegalAccessException e) {","lastModifiedDate":"2023-11-10"},{"lineNumber":354,"author":{"gitId":"yarnmengnus"},"content":"                //impossible as command word MUST be public","lastModifiedDate":"2023-11-10"},{"lineNumber":355,"author":{"gitId":"yarnmengnus"},"content":"                System.out.println(e);","lastModifiedDate":"2023-11-10"},{"lineNumber":356,"author":{"gitId":"yarnmengnus"},"content":"                continue;","lastModifiedDate":"2023-11-10"},{"lineNumber":357,"author":{"gitId":"yarnmengnus"},"content":"            }","lastModifiedDate":"2023-11-10"},{"lineNumber":358,"author":{"gitId":"yarnmengnus"},"content":"        }","lastModifiedDate":"2023-11-10"},{"lineNumber":359,"author":{"gitId":"yarnmengnus"},"content":"        return rtn;","lastModifiedDate":"2023-11-10"},{"lineNumber":360,"author":{"gitId":"yarnmengnus"},"content":"    }","lastModifiedDate":"2023-11-10"},{"lineNumber":361,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":362,"author":{"gitId":"yarnmengnus"},"content":"    private ArrayList\u003cClass\u003c? extends Command\u003e\u003e listCommands() {","lastModifiedDate":"2023-11-10"},{"lineNumber":363,"author":{"gitId":"yarnmengnus"},"content":"        ArrayList\u003cClass\u003c? extends Command\u003e\u003e rtn \u003d new ArrayList\u003cClass\u003c? extends Command\u003e\u003e();","lastModifiedDate":"2023-11-10"},{"lineNumber":364,"author":{"gitId":"yarnmengnus"},"content":"        rtn.add(AddCommand.class);","lastModifiedDate":"2023-11-10"},{"lineNumber":365,"author":{"gitId":"yarnmengnus"},"content":"        rtn.add(EditCommand.class);","lastModifiedDate":"2023-11-10"},{"lineNumber":366,"author":{"gitId":"yarnmengnus"},"content":"        rtn.add(EditSettingsCommand.class);","lastModifiedDate":"2023-11-10"},{"lineNumber":367,"author":{"gitId":"yarnmengnus"},"content":"        rtn.add(MarkCommand.class);","lastModifiedDate":"2023-11-10"},{"lineNumber":368,"author":{"gitId":"yarnmengnus"},"content":"        rtn.add(UnmarkCommand.class);","lastModifiedDate":"2023-11-10"},{"lineNumber":369,"author":{"gitId":"yarnmengnus"},"content":"        rtn.add(DeleteCommand.class);","lastModifiedDate":"2023-11-10"},{"lineNumber":370,"author":{"gitId":"yarnmengnus"},"content":"        rtn.add(DoNextCommand.class);","lastModifiedDate":"2023-11-10"},{"lineNumber":371,"author":{"gitId":"yarnmengnus"},"content":"        rtn.add(ClearCommand.class);","lastModifiedDate":"2023-11-10"},{"lineNumber":372,"author":{"gitId":"yarnmengnus"},"content":"        rtn.add(FindCommand.class);","lastModifiedDate":"2023-11-10"},{"lineNumber":373,"author":{"gitId":"yarnmengnus"},"content":"        rtn.add(FilterCommand.class);","lastModifiedDate":"2023-11-10"},{"lineNumber":374,"author":{"gitId":"yarnmengnus"},"content":"        rtn.add(HelpCommand.class);","lastModifiedDate":"2023-11-10"},{"lineNumber":375,"author":{"gitId":"yarnmengnus"},"content":"        rtn.add(DescriptionCommand.class);","lastModifiedDate":"2023-11-10"},{"lineNumber":376,"author":{"gitId":"yarnmengnus"},"content":"        rtn.add(SortDueDateCommand.class);","lastModifiedDate":"2023-11-10"},{"lineNumber":377,"author":{"gitId":"yarnmengnus"},"content":"        rtn.add(SortPriorityCommand.class);","lastModifiedDate":"2023-11-10"},{"lineNumber":378,"author":{"gitId":"yarnmengnus"},"content":"        rtn.add(ListWeekCommand.class);","lastModifiedDate":"2023-11-10"},{"lineNumber":379,"author":{"gitId":"yarnmengnus"},"content":"        rtn.add(ListMonthCommand.class);","lastModifiedDate":"2023-11-10"},{"lineNumber":380,"author":{"gitId":"yarnmengnus"},"content":"        System.out.println(rtn.size());","lastModifiedDate":"2023-11-10"},{"lineNumber":381,"author":{"gitId":"yarnmengnus"},"content":"        return rtn;","lastModifiedDate":"2023-11-10"},{"lineNumber":382,"author":{"gitId":"yarnmengnus"},"content":"    }","lastModifiedDate":"2023-11-10"},{"lineNumber":383,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"yarnmengnus":365,"kiatkat":4,"-":14}},{"path":"src/test/java/profplan/logic/commands/ListCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kiatkat"},"content":"package profplan.logic.commands;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"kiatkat"},"content":"import static profplan.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"newway1814"},"content":"import static profplan.logic.commands.CommandTestUtil.showTaskAtIndex;","lastModifiedDate":"2023-10-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"kiatkat"},"content":"import profplan.model.Model;","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"kiatkat"},"content":"import profplan.model.ModelManager;","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"kiatkat"},"content":"import profplan.model.UserConfigs;","lastModifiedDate":"2023-11-01"},{"lineNumber":12,"author":{"gitId":"kiatkat"},"content":"import profplan.model.UserPrefs;","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"jack1e0"},"content":"import profplan.model.task.predicates.TaskInMonthPredicate;","lastModifiedDate":"2023-10-29"},{"lineNumber":14,"author":{"gitId":"jack1e0"},"content":"import profplan.model.task.predicates.TaskInWeekPredicate;","lastModifiedDate":"2023-10-29"},{"lineNumber":15,"author":{"gitId":"kiatkat"},"content":"import profplan.testutil.TypicalIndexes;","lastModifiedDate":"2023-10-14"},{"lineNumber":16,"author":{"gitId":"newway1814"},"content":"import profplan.testutil.TypicalTasks;","lastModifiedDate":"2023-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"jack1e0"},"content":" * Contains integration tests (interaction with the Model)","lastModifiedDate":"2023-10-29"},{"lineNumber":20,"author":{"gitId":"jack1e0"},"content":" * and unit tests for ListCommand, ListWeekCommand, and ListMonthCommand.","lastModifiedDate":"2023-10-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class ListCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Model expectedModel;","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"kiatkat"},"content":"        model \u003d new ModelManager(TypicalTasks.getTypicalProfPlan(), new UserPrefs(), new UserConfigs());","lastModifiedDate":"2023-11-01"},{"lineNumber":30,"author":{"gitId":"kiatkat"},"content":"        expectedModel \u003d new ModelManager(model.getProfPlan(), new UserPrefs(), new UserConfigs());","lastModifiedDate":"2023-11-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2017-08-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2017-08-15"},{"lineNumber":40,"author":{"gitId":"newway1814"},"content":"        showTaskAtIndex(model, TypicalIndexes.INDEX_FIRST_TASK);","lastModifiedDate":"2023-10-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":43,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":44,"author":{"gitId":"jack1e0"},"content":"    @Test","lastModifiedDate":"2023-10-29"},{"lineNumber":45,"author":{"gitId":"jack1e0"},"content":"    public void testListWeek() {","lastModifiedDate":"2023-10-29"},{"lineNumber":46,"author":{"gitId":"jack1e0"},"content":"        expectedModel.updateFilteredTaskList(new TaskInWeekPredicate());","lastModifiedDate":"2023-10-29"},{"lineNumber":47,"author":{"gitId":"jack1e0"},"content":"        assertCommandSuccess(new ListWeekCommand(), model, ListWeekCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2023-10-29"},{"lineNumber":48,"author":{"gitId":"jack1e0"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":49,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":50,"author":{"gitId":"jack1e0"},"content":"    @Test","lastModifiedDate":"2023-10-29"},{"lineNumber":51,"author":{"gitId":"jack1e0"},"content":"    public void testListMonth() {","lastModifiedDate":"2023-10-29"},{"lineNumber":52,"author":{"gitId":"jack1e0"},"content":"        expectedModel.updateFilteredTaskList(new TaskInMonthPredicate());","lastModifiedDate":"2023-10-29"},{"lineNumber":53,"author":{"gitId":"jack1e0"},"content":"        assertCommandSuccess(new ListMonthCommand(), model, ListMonthCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2023-10-29"},{"lineNumber":54,"author":{"gitId":"jack1e0"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"jack1e0":16,"kiatkat":9,"-":27,"newway1814":3}},{"path":"src/test/java/profplan/logic/commands/MarkCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"newway1814"},"content":"package profplan.logic.commands;","lastModifiedDate":"2023-10-31"},{"lineNumber":2,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":3,"author":{"gitId":"newway1814"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2023-11-12"},{"lineNumber":4,"author":{"gitId":"newway1814"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-11-12"},{"lineNumber":5,"author":{"gitId":"newway1814"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-11-09"},{"lineNumber":6,"author":{"gitId":"newway1814"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-11-09"},{"lineNumber":7,"author":{"gitId":"newway1814"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-31"},{"lineNumber":8,"author":{"gitId":"newway1814"},"content":"import static profplan.testutil.TypicalTasks.getTypicalProfPlan;","lastModifiedDate":"2023-11-12"},{"lineNumber":9,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":10,"author":{"gitId":"newway1814"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-31"},{"lineNumber":11,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":12,"author":{"gitId":"newway1814"},"content":"import profplan.logic.Messages;","lastModifiedDate":"2023-11-12"},{"lineNumber":13,"author":{"gitId":"newway1814"},"content":"import profplan.model.Model;","lastModifiedDate":"2023-10-31"},{"lineNumber":14,"author":{"gitId":"newway1814"},"content":"import profplan.model.ModelManager;","lastModifiedDate":"2023-10-31"},{"lineNumber":15,"author":{"gitId":"newway1814"},"content":"import profplan.model.UserConfigs;","lastModifiedDate":"2023-11-12"},{"lineNumber":16,"author":{"gitId":"newway1814"},"content":"import profplan.model.UserPrefs;","lastModifiedDate":"2023-11-12"},{"lineNumber":17,"author":{"gitId":"newway1814"},"content":"import profplan.model.task.Status;","lastModifiedDate":"2023-11-12"},{"lineNumber":18,"author":{"gitId":"newway1814"},"content":"import profplan.model.task.Task;","lastModifiedDate":"2023-10-31"},{"lineNumber":19,"author":{"gitId":"newway1814"},"content":"import profplan.testutil.Assert;","lastModifiedDate":"2023-10-31"},{"lineNumber":20,"author":{"gitId":"newway1814"},"content":"import profplan.testutil.TaskBuilder;","lastModifiedDate":"2023-10-31"},{"lineNumber":21,"author":{"gitId":"newway1814"},"content":"import profplan.testutil.TypicalTasks;","lastModifiedDate":"2023-11-12"},{"lineNumber":22,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":23,"author":{"gitId":"newway1814"},"content":"public class MarkCommandTest {","lastModifiedDate":"2023-10-31"},{"lineNumber":24,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":25,"author":{"gitId":"newway1814"},"content":"    private Model model \u003d new ModelManager(getTypicalProfPlan(), new UserPrefs(), new UserConfigs());","lastModifiedDate":"2023-11-12"},{"lineNumber":26,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":27,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":28,"author":{"gitId":"newway1814"},"content":"    @Test","lastModifiedDate":"2023-11-12"},{"lineNumber":29,"author":{"gitId":"newway1814"},"content":"    public void execute_validIndex_success() {","lastModifiedDate":"2023-11-12"},{"lineNumber":30,"author":{"gitId":"newway1814"},"content":"        Task model1 \u003d TypicalTasks.AMY;","lastModifiedDate":"2023-11-12"},{"lineNumber":31,"author":{"gitId":"newway1814"},"content":"        model1.setStatus(Status.UNDONE_STATUS);","lastModifiedDate":"2023-11-12"},{"lineNumber":32,"author":{"gitId":"newway1814"},"content":"        Task editedTask \u003d TypicalTasks.AMY;","lastModifiedDate":"2023-11-12"},{"lineNumber":33,"author":{"gitId":"newway1814"},"content":"        editedTask.setStatus(Status.DONE_STATUS);","lastModifiedDate":"2023-11-12"},{"lineNumber":34,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":35,"author":{"gitId":"newway1814"},"content":"        Model tempModel \u003d new ModelManager();","lastModifiedDate":"2023-11-12"},{"lineNumber":36,"author":{"gitId":"newway1814"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2023-11-12"},{"lineNumber":37,"author":{"gitId":"newway1814"},"content":"        expectedModel.setProfPlan(tempModel.getProfPlan());","lastModifiedDate":"2023-11-12"},{"lineNumber":38,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":39,"author":{"gitId":"newway1814"},"content":"        tempModel.addTask(model1);","lastModifiedDate":"2023-11-12"},{"lineNumber":40,"author":{"gitId":"newway1814"},"content":"        expectedModel.addTask(editedTask);","lastModifiedDate":"2023-11-12"},{"lineNumber":41,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":42,"author":{"gitId":"newway1814"},"content":"        MarkCommand markCommand \u003d new MarkCommand(1);","lastModifiedDate":"2023-11-12"},{"lineNumber":43,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":44,"author":{"gitId":"newway1814"},"content":"        assertDoesNotThrow(() -\u003e markCommand.execute(tempModel));","lastModifiedDate":"2023-11-12"},{"lineNumber":45,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":46,"author":{"gitId":"newway1814"},"content":"        String expectedMessage \u003d String.format(MarkCommand.MESSAGE_SUCCESS, Messages.format(editedTask));","lastModifiedDate":"2023-11-12"},{"lineNumber":47,"author":{"gitId":"newway1814"},"content":"        assertEquals(expectedModel.getFilteredTaskList(), tempModel.getFilteredTaskList());","lastModifiedDate":"2023-11-12"},{"lineNumber":48,"author":{"gitId":"newway1814"},"content":"    }","lastModifiedDate":"2023-11-12"},{"lineNumber":49,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":50,"author":{"gitId":"newway1814"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":51,"author":{"gitId":"newway1814"},"content":"    public void constructor_taskNumberAsZero_throwsNullPointerException() {","lastModifiedDate":"2023-10-31"},{"lineNumber":52,"author":{"gitId":"newway1814"},"content":"        Assert.assertThrows(AssertionError.class, () -\u003e new MarkCommand(0));","lastModifiedDate":"2023-10-31"},{"lineNumber":53,"author":{"gitId":"newway1814"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":54,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":55,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":56,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":57,"author":{"gitId":"newway1814"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":58,"author":{"gitId":"newway1814"},"content":"    public void execute_invalidTaskNumber_throwsAssertionFailure() throws Exception {","lastModifiedDate":"2023-11-09"},{"lineNumber":59,"author":{"gitId":"newway1814"},"content":"        Model modelStub \u003d new ModelManager();","lastModifiedDate":"2023-10-31"},{"lineNumber":60,"author":{"gitId":"newway1814"},"content":"        Task validTask \u003d new TaskBuilder().build();","lastModifiedDate":"2023-10-31"},{"lineNumber":61,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":62,"author":{"gitId":"newway1814"},"content":"        modelStub.addTask(validTask);","lastModifiedDate":"2023-10-31"},{"lineNumber":63,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":64,"author":{"gitId":"newway1814"},"content":"        assertThrows(AssertionError.class, ()-\u003e new MarkCommand(-1).execute(modelStub));","lastModifiedDate":"2023-11-09"},{"lineNumber":65,"author":{"gitId":"newway1814"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":66,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":67,"author":{"gitId":"newway1814"},"content":"    @Test","lastModifiedDate":"2023-11-09"},{"lineNumber":68,"author":{"gitId":"newway1814"},"content":"    public void execute_negativeIndexToMark_throwsAssertionFailureException() {","lastModifiedDate":"2023-11-09"},{"lineNumber":69,"author":{"gitId":"newway1814"},"content":"        int outOfBoundIndex \u003d -100;","lastModifiedDate":"2023-11-09"},{"lineNumber":70,"author":{"gitId":"newway1814"},"content":"        assertThrows(AssertionError.class, ()-\u003e new MarkCommand(outOfBoundIndex));","lastModifiedDate":"2023-11-09"},{"lineNumber":71,"author":{"gitId":"newway1814"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":72,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":73,"author":{"gitId":"newway1814"},"content":"    @Test","lastModifiedDate":"2023-11-09"},{"lineNumber":74,"author":{"gitId":"newway1814"},"content":"    public void execute_zeroIndexToMark_throwsAssertionFailureException() {","lastModifiedDate":"2023-11-09"},{"lineNumber":75,"author":{"gitId":"newway1814"},"content":"        int outOfBoundIndex \u003d 0;","lastModifiedDate":"2023-11-09"},{"lineNumber":76,"author":{"gitId":"newway1814"},"content":"        assertThrows(AssertionError.class, ()-\u003e new MarkCommand(outOfBoundIndex));","lastModifiedDate":"2023-11-09"},{"lineNumber":77,"author":{"gitId":"newway1814"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":78,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":79,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":80,"author":{"gitId":"newway1814"},"content":"    @Test","lastModifiedDate":"2023-11-09"},{"lineNumber":81,"author":{"gitId":"newway1814"},"content":"    public void testEqualsWithVariousScenarios() {","lastModifiedDate":"2023-11-09"},{"lineNumber":82,"author":{"gitId":"newway1814"},"content":"        MarkCommand markCommand1 \u003d new MarkCommand(1);","lastModifiedDate":"2023-11-09"},{"lineNumber":83,"author":{"gitId":"newway1814"},"content":"        MarkCommand markCommand2 \u003d new MarkCommand(1);","lastModifiedDate":"2023-11-09"},{"lineNumber":84,"author":{"gitId":"newway1814"},"content":"        MarkCommand markCommand3 \u003d new MarkCommand(2);","lastModifiedDate":"2023-11-09"},{"lineNumber":85,"author":{"gitId":"newway1814"},"content":"        Object notMarkCommand \u003d new Object();","lastModifiedDate":"2023-11-09"},{"lineNumber":86,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":87,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":88,"author":{"gitId":"newway1814"},"content":"        assertTrue(markCommand1.equals(markCommand1));","lastModifiedDate":"2023-11-09"},{"lineNumber":89,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":90,"author":{"gitId":"newway1814"},"content":"        // Test for null","lastModifiedDate":"2023-11-09"},{"lineNumber":91,"author":{"gitId":"newway1814"},"content":"        assertFalse(markCommand1.equals(null));","lastModifiedDate":"2023-11-09"},{"lineNumber":92,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":93,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":94,"author":{"gitId":"newway1814"},"content":"        assertTrue(markCommand1.equals(markCommand2));","lastModifiedDate":"2023-11-09"},{"lineNumber":95,"author":{"gitId":"newway1814"},"content":"        assertTrue(markCommand2.equals(markCommand1));","lastModifiedDate":"2023-11-09"},{"lineNumber":96,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":97,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":98,"author":{"gitId":"newway1814"},"content":"        MarkCommand markCommand4 \u003d new MarkCommand(1);","lastModifiedDate":"2023-11-09"},{"lineNumber":99,"author":{"gitId":"newway1814"},"content":"        assertTrue(markCommand1.equals(markCommand2));","lastModifiedDate":"2023-11-09"},{"lineNumber":100,"author":{"gitId":"newway1814"},"content":"        assertTrue(markCommand2.equals(markCommand4));","lastModifiedDate":"2023-11-09"},{"lineNumber":101,"author":{"gitId":"newway1814"},"content":"        assertTrue(markCommand1.equals(markCommand4));","lastModifiedDate":"2023-11-09"},{"lineNumber":102,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":103,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":104,"author":{"gitId":"newway1814"},"content":"        assertTrue(markCommand1.equals(markCommand2));","lastModifiedDate":"2023-11-09"},{"lineNumber":105,"author":{"gitId":"newway1814"},"content":"        assertTrue(markCommand1.equals(markCommand2));","lastModifiedDate":"2023-11-09"},{"lineNumber":106,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":107,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":108,"author":{"gitId":"newway1814"},"content":"        assertFalse(markCommand1.equals(markCommand3));","lastModifiedDate":"2023-11-09"},{"lineNumber":109,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":110,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":111,"author":{"gitId":"newway1814"},"content":"        assertFalse(markCommand1.equals(notMarkCommand));","lastModifiedDate":"2023-11-09"},{"lineNumber":112,"author":{"gitId":"newway1814"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":113,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":114,"author":{"gitId":"newway1814"},"content":"    @Test","lastModifiedDate":"2023-11-12"},{"lineNumber":115,"author":{"gitId":"newway1814"},"content":"    public void toString_indexToMark_success() {","lastModifiedDate":"2023-11-12"},{"lineNumber":116,"author":{"gitId":"newway1814"},"content":"        MarkCommand markCommand \u003d new MarkCommand(1);","lastModifiedDate":"2023-11-12"},{"lineNumber":117,"author":{"gitId":"newway1814"},"content":"        String expectedStatus \u003d MarkCommand.class.getCanonicalName() + \"{taskNumber\u003d\" + 1 + \"}\";","lastModifiedDate":"2023-11-12"},{"lineNumber":118,"author":{"gitId":"newway1814"},"content":"        assertEquals(markCommand.toString(), expectedStatus);","lastModifiedDate":"2023-11-12"},{"lineNumber":119,"author":{"gitId":"newway1814"},"content":"    }","lastModifiedDate":"2023-11-12"},{"lineNumber":120,"author":{"gitId":"newway1814"},"content":"}","lastModifiedDate":"2023-10-31"},{"lineNumber":121,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":122,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":123,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":124,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":125,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-11-09"}],"authorContributionMap":{"newway1814":125}},{"path":"src/test/java/profplan/logic/commands/SortDueDateCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"newway1814"},"content":"package profplan.logic.commands;","lastModifiedDate":"2023-11-12"},{"lineNumber":2,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":3,"author":{"gitId":"newway1814"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2023-11-12"},{"lineNumber":4,"author":{"gitId":"newway1814"},"content":"import static profplan.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-11-12"},{"lineNumber":5,"author":{"gitId":"newway1814"},"content":"import static profplan.testutil.TypicalTasks.getTypicalProfPlan;","lastModifiedDate":"2023-11-12"},{"lineNumber":6,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":7,"author":{"gitId":"newway1814"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-11-12"},{"lineNumber":8,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":9,"author":{"gitId":"newway1814"},"content":"import profplan.model.Model;","lastModifiedDate":"2023-11-12"},{"lineNumber":10,"author":{"gitId":"newway1814"},"content":"import profplan.model.ModelManager;","lastModifiedDate":"2023-11-12"},{"lineNumber":11,"author":{"gitId":"newway1814"},"content":"import profplan.model.ProfPlan;","lastModifiedDate":"2023-11-12"},{"lineNumber":12,"author":{"gitId":"newway1814"},"content":"import profplan.model.UserConfigs;","lastModifiedDate":"2023-11-12"},{"lineNumber":13,"author":{"gitId":"newway1814"},"content":"import profplan.model.UserPrefs;","lastModifiedDate":"2023-11-12"},{"lineNumber":14,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":15,"author":{"gitId":"newway1814"},"content":"public class SortDueDateCommandTest {","lastModifiedDate":"2023-11-12"},{"lineNumber":16,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":17,"author":{"gitId":"newway1814"},"content":"    private Model model \u003d new ModelManager(getTypicalProfPlan(), new UserPrefs(), new UserConfigs());","lastModifiedDate":"2023-11-12"},{"lineNumber":18,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":19,"author":{"gitId":"newway1814"},"content":"    @Test","lastModifiedDate":"2023-11-12"},{"lineNumber":20,"author":{"gitId":"newway1814"},"content":"    public void execute_model_success() {","lastModifiedDate":"2023-11-12"},{"lineNumber":21,"author":{"gitId":"newway1814"},"content":"        Model expectedModel \u003d new ModelManager(new ProfPlan(model.getProfPlan()), new UserPrefs(), new UserConfigs());","lastModifiedDate":"2023-11-12"},{"lineNumber":22,"author":{"gitId":"newway1814"},"content":"        expectedModel.sortTaskByDueDate();","lastModifiedDate":"2023-11-12"},{"lineNumber":23,"author":{"gitId":"newway1814"},"content":"        Model tempModel \u003d new ModelManager(new ProfPlan(model.getProfPlan()), new UserPrefs(), new UserConfigs());","lastModifiedDate":"2023-11-12"},{"lineNumber":24,"author":{"gitId":"newway1814"},"content":"        tempModel.sortTaskByDueDate();","lastModifiedDate":"2023-11-12"},{"lineNumber":25,"author":{"gitId":"newway1814"},"content":"        SortDueDateCommand sortDueDateCommand \u003d new SortDueDateCommand();","lastModifiedDate":"2023-11-12"},{"lineNumber":26,"author":{"gitId":"newway1814"},"content":"        assertDoesNotThrow(() -\u003e sortDueDateCommand.execute(tempModel));","lastModifiedDate":"2023-11-12"},{"lineNumber":27,"author":{"gitId":"newway1814"},"content":"        String expectedMessage \u003d String.format(SortDueDateCommand.MESSAGE_SUCCESS);","lastModifiedDate":"2023-11-12"},{"lineNumber":28,"author":{"gitId":"newway1814"},"content":"        assertCommandSuccess(sortDueDateCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-11-12"},{"lineNumber":29,"author":{"gitId":"newway1814"},"content":"    }","lastModifiedDate":"2023-11-12"},{"lineNumber":30,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":31,"author":{"gitId":"newway1814"},"content":"}","lastModifiedDate":"2023-11-12"}],"authorContributionMap":{"newway1814":31}},{"path":"src/test/java/profplan/logic/commands/SortPriorityCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"newway1814"},"content":"package profplan.logic.commands;","lastModifiedDate":"2023-11-12"},{"lineNumber":2,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":3,"author":{"gitId":"newway1814"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2023-11-12"},{"lineNumber":4,"author":{"gitId":"newway1814"},"content":"import static profplan.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-11-12"},{"lineNumber":5,"author":{"gitId":"newway1814"},"content":"import static profplan.testutil.TypicalTasks.getTypicalProfPlan;","lastModifiedDate":"2023-11-12"},{"lineNumber":6,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":7,"author":{"gitId":"newway1814"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-11-12"},{"lineNumber":8,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":9,"author":{"gitId":"newway1814"},"content":"import profplan.model.Model;","lastModifiedDate":"2023-11-12"},{"lineNumber":10,"author":{"gitId":"newway1814"},"content":"import profplan.model.ModelManager;","lastModifiedDate":"2023-11-12"},{"lineNumber":11,"author":{"gitId":"newway1814"},"content":"import profplan.model.ProfPlan;","lastModifiedDate":"2023-11-12"},{"lineNumber":12,"author":{"gitId":"newway1814"},"content":"import profplan.model.UserConfigs;","lastModifiedDate":"2023-11-12"},{"lineNumber":13,"author":{"gitId":"newway1814"},"content":"import profplan.model.UserPrefs;","lastModifiedDate":"2023-11-12"},{"lineNumber":14,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":15,"author":{"gitId":"newway1814"},"content":"public class SortPriorityCommandTest {","lastModifiedDate":"2023-11-12"},{"lineNumber":16,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":17,"author":{"gitId":"newway1814"},"content":"    private Model model \u003d new ModelManager(getTypicalProfPlan(), new UserPrefs(), new UserConfigs());","lastModifiedDate":"2023-11-12"},{"lineNumber":18,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":19,"author":{"gitId":"newway1814"},"content":"    @Test","lastModifiedDate":"2023-11-12"},{"lineNumber":20,"author":{"gitId":"newway1814"},"content":"    public void execute_model_success() {","lastModifiedDate":"2023-11-12"},{"lineNumber":21,"author":{"gitId":"newway1814"},"content":"        Model expectedModel \u003d new ModelManager(new ProfPlan(model.getProfPlan()), new UserPrefs(), new UserConfigs());","lastModifiedDate":"2023-11-12"},{"lineNumber":22,"author":{"gitId":"newway1814"},"content":"        expectedModel.sortTaskByPriority();","lastModifiedDate":"2023-11-12"},{"lineNumber":23,"author":{"gitId":"newway1814"},"content":"        Model tempModel \u003d new ModelManager(new ProfPlan(model.getProfPlan()), new UserPrefs(), new UserConfigs());","lastModifiedDate":"2023-11-12"},{"lineNumber":24,"author":{"gitId":"newway1814"},"content":"        tempModel.sortTaskByPriority();","lastModifiedDate":"2023-11-12"},{"lineNumber":25,"author":{"gitId":"newway1814"},"content":"        SortPriorityCommand sortPriorityCommand \u003d new SortPriorityCommand();","lastModifiedDate":"2023-11-12"},{"lineNumber":26,"author":{"gitId":"newway1814"},"content":"        assertDoesNotThrow(() -\u003e sortPriorityCommand.execute(tempModel));","lastModifiedDate":"2023-11-12"},{"lineNumber":27,"author":{"gitId":"newway1814"},"content":"        String expectedMessage \u003d String.format(SortPriorityCommand.MESSAGE_SUCCESS);","lastModifiedDate":"2023-11-12"},{"lineNumber":28,"author":{"gitId":"newway1814"},"content":"        assertCommandSuccess(sortPriorityCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-11-12"},{"lineNumber":29,"author":{"gitId":"newway1814"},"content":"    }","lastModifiedDate":"2023-11-12"},{"lineNumber":30,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":31,"author":{"gitId":"newway1814"},"content":"}","lastModifiedDate":"2023-11-12"}],"authorContributionMap":{"newway1814":31}},{"path":"src/test/java/profplan/logic/commands/StatsCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"yarnmengnus"},"content":"package profplan.logic.commands;","lastModifiedDate":"2023-11-10"},{"lineNumber":2,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":3,"author":{"gitId":"yarnmengnus"},"content":"import static profplan.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-11-10"},{"lineNumber":4,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":5,"author":{"gitId":"yarnmengnus"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-11-10"},{"lineNumber":6,"author":{"gitId":"yarnmengnus"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-11-10"},{"lineNumber":7,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":8,"author":{"gitId":"yarnmengnus"},"content":"import profplan.model.Model;","lastModifiedDate":"2023-11-10"},{"lineNumber":9,"author":{"gitId":"yarnmengnus"},"content":"import profplan.model.ModelManager;","lastModifiedDate":"2023-11-10"},{"lineNumber":10,"author":{"gitId":"yarnmengnus"},"content":"import profplan.model.UserConfigs;","lastModifiedDate":"2023-11-10"},{"lineNumber":11,"author":{"gitId":"yarnmengnus"},"content":"import profplan.model.UserPrefs;","lastModifiedDate":"2023-11-10"},{"lineNumber":12,"author":{"gitId":"yarnmengnus"},"content":"import profplan.testutil.TypicalTasks;","lastModifiedDate":"2023-11-10"},{"lineNumber":13,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":14,"author":{"gitId":"yarnmengnus"},"content":"public class StatsCommandTest {","lastModifiedDate":"2023-11-10"},{"lineNumber":15,"author":{"gitId":"yarnmengnus"},"content":"    private Model model;","lastModifiedDate":"2023-11-10"},{"lineNumber":16,"author":{"gitId":"yarnmengnus"},"content":"    private Model expectedModel;","lastModifiedDate":"2023-11-10"},{"lineNumber":17,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":18,"author":{"gitId":"yarnmengnus"},"content":"    @BeforeEach","lastModifiedDate":"2023-11-10"},{"lineNumber":19,"author":{"gitId":"yarnmengnus"},"content":"    public void setUp() {","lastModifiedDate":"2023-11-10"},{"lineNumber":20,"author":{"gitId":"yarnmengnus"},"content":"        model \u003d new ModelManager(TypicalTasks.getTypicalProfPlan(), new UserPrefs(), new UserConfigs());","lastModifiedDate":"2023-11-10"},{"lineNumber":21,"author":{"gitId":"yarnmengnus"},"content":"        expectedModel \u003d new ModelManager(model.getProfPlan(), new UserPrefs(), new UserConfigs());","lastModifiedDate":"2023-11-10"},{"lineNumber":22,"author":{"gitId":"yarnmengnus"},"content":"    }","lastModifiedDate":"2023-11-10"},{"lineNumber":23,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":24,"author":{"gitId":"yarnmengnus"},"content":"    @Test","lastModifiedDate":"2023-11-10"},{"lineNumber":25,"author":{"gitId":"yarnmengnus"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2023-11-10"},{"lineNumber":26,"author":{"gitId":"yarnmengnus"},"content":"        assertCommandSuccess(new StatsCommand(), model,","lastModifiedDate":"2023-11-10"},{"lineNumber":27,"author":{"gitId":"yarnmengnus"},"content":"            StatsCommand.MESSAGE_SUCCESS + String.format(StatsCommand.COMPLETION_RATE_MESSAGE_FORMAT,","lastModifiedDate":"2023-11-10"},{"lineNumber":28,"author":{"gitId":"yarnmengnus"},"content":"                Math.ceil(model.getCompletionRate() * 1000) / 10),","lastModifiedDate":"2023-11-10"},{"lineNumber":29,"author":{"gitId":"yarnmengnus"},"content":"            expectedModel);","lastModifiedDate":"2023-11-10"},{"lineNumber":30,"author":{"gitId":"yarnmengnus"},"content":"    }","lastModifiedDate":"2023-11-10"},{"lineNumber":31,"author":{"gitId":"yarnmengnus"},"content":"}","lastModifiedDate":"2023-11-10"}],"authorContributionMap":{"yarnmengnus":31}},{"path":"src/test/java/profplan/logic/commands/UnmarkCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"newway1814"},"content":"package profplan.logic.commands;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":3,"author":{"gitId":"newway1814"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2023-11-12"},{"lineNumber":4,"author":{"gitId":"newway1814"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-11-12"},{"lineNumber":5,"author":{"gitId":"newway1814"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-11-09"},{"lineNumber":6,"author":{"gitId":"newway1814"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-11-09"},{"lineNumber":7,"author":{"gitId":"newway1814"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-11-09"},{"lineNumber":8,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":9,"author":{"gitId":"newway1814"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-11-09"},{"lineNumber":10,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":11,"author":{"gitId":"newway1814"},"content":"import profplan.logic.Messages;","lastModifiedDate":"2023-11-12"},{"lineNumber":12,"author":{"gitId":"newway1814"},"content":"import profplan.model.Model;","lastModifiedDate":"2023-11-09"},{"lineNumber":13,"author":{"gitId":"newway1814"},"content":"import profplan.model.ModelManager;","lastModifiedDate":"2023-11-09"},{"lineNumber":14,"author":{"gitId":"newway1814"},"content":"import profplan.model.task.Status;","lastModifiedDate":"2023-11-12"},{"lineNumber":15,"author":{"gitId":"newway1814"},"content":"import profplan.model.task.Task;","lastModifiedDate":"2023-11-09"},{"lineNumber":16,"author":{"gitId":"newway1814"},"content":"import profplan.testutil.Assert;","lastModifiedDate":"2023-11-09"},{"lineNumber":17,"author":{"gitId":"newway1814"},"content":"import profplan.testutil.TaskBuilder;","lastModifiedDate":"2023-11-09"},{"lineNumber":18,"author":{"gitId":"newway1814"},"content":"import profplan.testutil.TypicalTasks;","lastModifiedDate":"2023-11-12"},{"lineNumber":19,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":20,"author":{"gitId":"newway1814"},"content":"public class UnmarkCommandTest {","lastModifiedDate":"2023-11-09"},{"lineNumber":21,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":22,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":23,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":24,"author":{"gitId":"newway1814"},"content":"    @Test","lastModifiedDate":"2023-11-12"},{"lineNumber":25,"author":{"gitId":"newway1814"},"content":"    public void execute_validIndex_success() {","lastModifiedDate":"2023-11-12"},{"lineNumber":26,"author":{"gitId":"newway1814"},"content":"        Task model1 \u003d TypicalTasks.AMY;","lastModifiedDate":"2023-11-12"},{"lineNumber":27,"author":{"gitId":"newway1814"},"content":"        model1.setStatus(Status.DONE_STATUS);","lastModifiedDate":"2023-11-12"},{"lineNumber":28,"author":{"gitId":"newway1814"},"content":"        Task editedTask \u003d TypicalTasks.AMY;","lastModifiedDate":"2023-11-12"},{"lineNumber":29,"author":{"gitId":"newway1814"},"content":"        editedTask.setStatus(Status.UNDONE_STATUS);","lastModifiedDate":"2023-11-12"},{"lineNumber":30,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":31,"author":{"gitId":"newway1814"},"content":"        Model tempModel \u003d new ModelManager();","lastModifiedDate":"2023-11-12"},{"lineNumber":32,"author":{"gitId":"newway1814"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2023-11-12"},{"lineNumber":33,"author":{"gitId":"newway1814"},"content":"        expectedModel.setProfPlan(tempModel.getProfPlan());","lastModifiedDate":"2023-11-12"},{"lineNumber":34,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":35,"author":{"gitId":"newway1814"},"content":"        tempModel.addTask(model1);","lastModifiedDate":"2023-11-12"},{"lineNumber":36,"author":{"gitId":"newway1814"},"content":"        expectedModel.addTask(editedTask);","lastModifiedDate":"2023-11-12"},{"lineNumber":37,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":38,"author":{"gitId":"newway1814"},"content":"        UnmarkCommand unmarkCommand \u003d new UnmarkCommand(1);","lastModifiedDate":"2023-11-12"},{"lineNumber":39,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":40,"author":{"gitId":"newway1814"},"content":"        assertDoesNotThrow(() -\u003e unmarkCommand.execute(tempModel));","lastModifiedDate":"2023-11-12"},{"lineNumber":41,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":42,"author":{"gitId":"newway1814"},"content":"        String expectedMessage \u003d String.format(UnmarkCommand.MESSAGE_SUCCESS, Messages.format(editedTask));","lastModifiedDate":"2023-11-12"},{"lineNumber":43,"author":{"gitId":"newway1814"},"content":"        assertEquals(expectedModel.getFilteredTaskList(), tempModel.getFilteredTaskList());","lastModifiedDate":"2023-11-12"},{"lineNumber":44,"author":{"gitId":"newway1814"},"content":"    }","lastModifiedDate":"2023-11-12"},{"lineNumber":45,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":46,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":47,"author":{"gitId":"newway1814"},"content":"    @Test","lastModifiedDate":"2023-11-09"},{"lineNumber":48,"author":{"gitId":"newway1814"},"content":"    public void constructor_taskNumberAsZero_throwsNullPointerException() {","lastModifiedDate":"2023-11-09"},{"lineNumber":49,"author":{"gitId":"newway1814"},"content":"        Assert.assertThrows(AssertionError.class, () -\u003e new UnmarkCommand(0));","lastModifiedDate":"2023-11-09"},{"lineNumber":50,"author":{"gitId":"newway1814"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":51,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":52,"author":{"gitId":"newway1814"},"content":"    @Test","lastModifiedDate":"2023-11-09"},{"lineNumber":53,"author":{"gitId":"newway1814"},"content":"    public void execute_invalidTaskNumber_throwsAssertionFailure() throws Exception {","lastModifiedDate":"2023-11-09"},{"lineNumber":54,"author":{"gitId":"newway1814"},"content":"        Model modelStub \u003d new ModelManager();","lastModifiedDate":"2023-11-09"},{"lineNumber":55,"author":{"gitId":"newway1814"},"content":"        Task validTask \u003d new TaskBuilder().build();","lastModifiedDate":"2023-11-09"},{"lineNumber":56,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":57,"author":{"gitId":"newway1814"},"content":"        modelStub.addTask(validTask);","lastModifiedDate":"2023-11-09"},{"lineNumber":58,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":59,"author":{"gitId":"newway1814"},"content":"        assertThrows(AssertionError.class, ()-\u003e new UnmarkCommand(-1).execute(modelStub));","lastModifiedDate":"2023-11-09"},{"lineNumber":60,"author":{"gitId":"newway1814"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":61,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":62,"author":{"gitId":"newway1814"},"content":"    @Test","lastModifiedDate":"2023-11-09"},{"lineNumber":63,"author":{"gitId":"newway1814"},"content":"    public void execute_negativeIndexToMark_throwsAssertionFailureException() {","lastModifiedDate":"2023-11-09"},{"lineNumber":64,"author":{"gitId":"newway1814"},"content":"        int outOfBoundIndex \u003d -100;","lastModifiedDate":"2023-11-09"},{"lineNumber":65,"author":{"gitId":"newway1814"},"content":"        assertThrows(AssertionError.class, ()-\u003e new UnmarkCommand(outOfBoundIndex));","lastModifiedDate":"2023-11-09"},{"lineNumber":66,"author":{"gitId":"newway1814"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":67,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":68,"author":{"gitId":"newway1814"},"content":"    @Test","lastModifiedDate":"2023-11-09"},{"lineNumber":69,"author":{"gitId":"newway1814"},"content":"    public void execute_zeroIndexToMark_throwsAssertionFailureException() {","lastModifiedDate":"2023-11-09"},{"lineNumber":70,"author":{"gitId":"newway1814"},"content":"        int outOfBoundIndex \u003d 0;","lastModifiedDate":"2023-11-09"},{"lineNumber":71,"author":{"gitId":"newway1814"},"content":"        assertThrows(AssertionError.class, ()-\u003e new UnmarkCommand(outOfBoundIndex));","lastModifiedDate":"2023-11-09"},{"lineNumber":72,"author":{"gitId":"newway1814"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":73,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":74,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":75,"author":{"gitId":"newway1814"},"content":"    @Test","lastModifiedDate":"2023-11-09"},{"lineNumber":76,"author":{"gitId":"newway1814"},"content":"    public void testEqualsWithVariousScenarios() {","lastModifiedDate":"2023-11-09"},{"lineNumber":77,"author":{"gitId":"newway1814"},"content":"        UnmarkCommand unmarkCommand1 \u003d new UnmarkCommand(1);","lastModifiedDate":"2023-11-09"},{"lineNumber":78,"author":{"gitId":"newway1814"},"content":"        UnmarkCommand markCommand2 \u003d new UnmarkCommand(1);","lastModifiedDate":"2023-11-09"},{"lineNumber":79,"author":{"gitId":"newway1814"},"content":"        UnmarkCommand markCommand3 \u003d new UnmarkCommand(2);","lastModifiedDate":"2023-11-09"},{"lineNumber":80,"author":{"gitId":"newway1814"},"content":"        Object notMarkCommand \u003d new Object();","lastModifiedDate":"2023-11-09"},{"lineNumber":81,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":82,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":83,"author":{"gitId":"newway1814"},"content":"        assertTrue(unmarkCommand1.equals(unmarkCommand1));","lastModifiedDate":"2023-11-09"},{"lineNumber":84,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":85,"author":{"gitId":"newway1814"},"content":"        // Test for null","lastModifiedDate":"2023-11-09"},{"lineNumber":86,"author":{"gitId":"newway1814"},"content":"        assertFalse(unmarkCommand1.equals(null));","lastModifiedDate":"2023-11-09"},{"lineNumber":87,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":88,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":89,"author":{"gitId":"newway1814"},"content":"        assertTrue(unmarkCommand1.equals(markCommand2));","lastModifiedDate":"2023-11-09"},{"lineNumber":90,"author":{"gitId":"newway1814"},"content":"        assertTrue(markCommand2.equals(unmarkCommand1));","lastModifiedDate":"2023-11-09"},{"lineNumber":91,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":92,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":93,"author":{"gitId":"newway1814"},"content":"        UnmarkCommand markCommand4 \u003d new UnmarkCommand(1);","lastModifiedDate":"2023-11-09"},{"lineNumber":94,"author":{"gitId":"newway1814"},"content":"        assertTrue(unmarkCommand1.equals(markCommand2));","lastModifiedDate":"2023-11-09"},{"lineNumber":95,"author":{"gitId":"newway1814"},"content":"        assertTrue(markCommand2.equals(markCommand4));","lastModifiedDate":"2023-11-09"},{"lineNumber":96,"author":{"gitId":"newway1814"},"content":"        assertTrue(unmarkCommand1.equals(markCommand4));","lastModifiedDate":"2023-11-09"},{"lineNumber":97,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":98,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":99,"author":{"gitId":"newway1814"},"content":"        assertTrue(unmarkCommand1.equals(markCommand2));","lastModifiedDate":"2023-11-09"},{"lineNumber":100,"author":{"gitId":"newway1814"},"content":"        assertTrue(unmarkCommand1.equals(markCommand2));","lastModifiedDate":"2023-11-09"},{"lineNumber":101,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":102,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":103,"author":{"gitId":"newway1814"},"content":"        assertFalse(unmarkCommand1.equals(markCommand3));","lastModifiedDate":"2023-11-09"},{"lineNumber":104,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":105,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":106,"author":{"gitId":"newway1814"},"content":"        assertFalse(unmarkCommand1.equals(notMarkCommand));","lastModifiedDate":"2023-11-09"},{"lineNumber":107,"author":{"gitId":"newway1814"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":108,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":109,"author":{"gitId":"newway1814"},"content":"    @Test","lastModifiedDate":"2023-11-12"},{"lineNumber":110,"author":{"gitId":"newway1814"},"content":"    public void toString_indexToUnmark_success() {","lastModifiedDate":"2023-11-12"},{"lineNumber":111,"author":{"gitId":"newway1814"},"content":"        UnmarkCommand unmarkCommand \u003d new UnmarkCommand(1);","lastModifiedDate":"2023-11-12"},{"lineNumber":112,"author":{"gitId":"newway1814"},"content":"        String expectedStatus \u003d UnmarkCommand.class.getCanonicalName() + \"{taskNumber\u003d\" + 1 + \"}\";","lastModifiedDate":"2023-11-12"},{"lineNumber":113,"author":{"gitId":"newway1814"},"content":"        assertEquals(unmarkCommand.toString(), expectedStatus);","lastModifiedDate":"2023-11-12"},{"lineNumber":114,"author":{"gitId":"newway1814"},"content":"    }","lastModifiedDate":"2023-11-12"},{"lineNumber":115,"author":{"gitId":"newway1814"},"content":"}","lastModifiedDate":"2023-11-09"},{"lineNumber":116,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":117,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":118,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":119,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":120,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-11-09"}],"authorContributionMap":{"newway1814":120}},{"path":"src/test/java/profplan/logic/parser/AddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kiatkat"},"content":"package profplan.logic.parser;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"kiatkat"},"content":"import static profplan.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"kiatkat"},"content":"import static profplan.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"eyelessrhyme7"},"content":"import static profplan.logic.parser.CliSyntax.PREFIX_PRIORITY;","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"kiatkat"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"kiatkat"},"content":"import profplan.logic.Messages;","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"kiatkat"},"content":"import profplan.logic.commands.AddCommand;","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"kiatkat"},"content":"import profplan.logic.commands.CommandTestUtil;","lastModifiedDate":"2023-10-14"},{"lineNumber":12,"author":{"gitId":"newway1814"},"content":"import profplan.model.task.Task;","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"newway1814"},"content":"import profplan.testutil.TaskBuilder;","lastModifiedDate":"2023-10-16"},{"lineNumber":14,"author":{"gitId":"newway1814"},"content":"import profplan.testutil.TypicalTasks;","lastModifiedDate":"2023-10-16"},{"lineNumber":15,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"kiatkat"},"content":"public class AddCommandParserTest {","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"kiatkat"},"content":"    private AddCommandParser parser \u003d new AddCommandParser();","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"kiatkat"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"kiatkat"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"newway1814"},"content":"        Task expectedTask \u003d new TaskBuilder(TypicalTasks.BOB).withTags(CommandTestUtil.VALID_TAG_FRIEND)","lastModifiedDate":"2023-10-16"},{"lineNumber":22,"author":{"gitId":"kiatkat"},"content":"                .build();","lastModifiedDate":"2023-10-14"},{"lineNumber":23,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"kiatkat"},"content":"        // whitespace only preamble","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"kiatkat"},"content":"        CommandParserTestUtil.assertParseSuccess(parser, CommandTestUtil.PREAMBLE_WHITESPACE","lastModifiedDate":"2023-10-14"},{"lineNumber":26,"author":{"gitId":"eyelessrhyme7"},"content":"                + CommandTestUtil.NAME_DESC_BOB + CommandTestUtil.PRIORITY_DESC_BOB + CommandTestUtil.DUEDATE_DESC","lastModifiedDate":"2023-11-11"},{"lineNumber":27,"author":{"gitId":"kiatkat"},"content":"                + CommandTestUtil.TAG_DESC_FRIEND","lastModifiedDate":"2023-10-29"},{"lineNumber":28,"author":{"gitId":"kiatkat"},"content":"                + CommandTestUtil.DESCRIPTION_DESC_BOB, new AddCommand(expectedTask));","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"kiatkat"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"newway1814"},"content":"        Task expectedTaskMultipleTags \u003d new TaskBuilder(TypicalTasks.BOB)","lastModifiedDate":"2023-10-16"},{"lineNumber":33,"author":{"gitId":"kiatkat"},"content":"                .withTags(CommandTestUtil.VALID_TAG_FRIEND, CommandTestUtil.VALID_TAG_HUSBAND)","lastModifiedDate":"2023-10-14"},{"lineNumber":34,"author":{"gitId":"kiatkat"},"content":"                .build();","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"kiatkat"},"content":"        CommandParserTestUtil.assertParseSuccess(parser,","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"eyelessrhyme7"},"content":"                CommandTestUtil.NAME_DESC_BOB + CommandTestUtil.PRIORITY_DESC_BOB","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"eyelessrhyme7"},"content":"                        + CommandTestUtil.DUEDATE_DESC","lastModifiedDate":"2023-11-11"},{"lineNumber":38,"author":{"gitId":"kiatkat"},"content":"                        + CommandTestUtil.TAG_DESC_HUSBAND","lastModifiedDate":"2023-10-29"},{"lineNumber":39,"author":{"gitId":"kiatkat"},"content":"                        + CommandTestUtil.TAG_DESC_FRIEND,","lastModifiedDate":"2023-10-14"},{"lineNumber":40,"author":{"gitId":"newway1814"},"content":"                new AddCommand(expectedTaskMultipleTags));","lastModifiedDate":"2023-10-16"},{"lineNumber":41,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":42,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":43,"author":{"gitId":"kiatkat"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":44,"author":{"gitId":"kiatkat"},"content":"    public void parse_repeatedNonTagValue_failure() {","lastModifiedDate":"2023-10-13"},{"lineNumber":45,"author":{"gitId":"eyelessrhyme7"},"content":"        String validExpectedTaskString \u003d CommandTestUtil.NAME_DESC_BOB + CommandTestUtil.PRIORITY_DESC_BOB","lastModifiedDate":"2023-10-17"},{"lineNumber":46,"author":{"gitId":"kiatkat"},"content":"                + CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2023-10-29"},{"lineNumber":47,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":48,"author":{"gitId":"kiatkat"},"content":"        // multiple names","lastModifiedDate":"2023-10-13"},{"lineNumber":49,"author":{"gitId":"kiatkat"},"content":"        CommandParserTestUtil.assertParseFailure(parser, CommandTestUtil.NAME_DESC_AMY","lastModifiedDate":"2023-10-14"},{"lineNumber":50,"author":{"gitId":"newway1814"},"content":"                        + validExpectedTaskString,","lastModifiedDate":"2023-10-16"},{"lineNumber":51,"author":{"gitId":"kiatkat"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2023-10-13"},{"lineNumber":52,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":53,"author":{"gitId":"eyelessrhyme7"},"content":"        // multiple prioritys","lastModifiedDate":"2023-10-17"},{"lineNumber":54,"author":{"gitId":"eyelessrhyme7"},"content":"        CommandParserTestUtil.assertParseFailure(parser, CommandTestUtil.PRIORITY_DESC_AMY","lastModifiedDate":"2023-10-17"},{"lineNumber":55,"author":{"gitId":"newway1814"},"content":"                        + validExpectedTaskString,","lastModifiedDate":"2023-10-16"},{"lineNumber":56,"author":{"gitId":"eyelessrhyme7"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PRIORITY));","lastModifiedDate":"2023-10-17"},{"lineNumber":57,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":58,"author":{"gitId":"kiatkat"},"content":"        // multiple fields repeated","lastModifiedDate":"2023-10-13"},{"lineNumber":59,"author":{"gitId":"kiatkat"},"content":"        CommandParserTestUtil.assertParseFailure(parser,","lastModifiedDate":"2023-10-13"},{"lineNumber":60,"author":{"gitId":"kiatkat"},"content":"                validExpectedTaskString + CommandTestUtil.PRIORITY_DESC_AMY","lastModifiedDate":"2023-10-29"},{"lineNumber":61,"author":{"gitId":"kiatkat"},"content":"                        + CommandTestUtil.NAME_DESC_AMY","lastModifiedDate":"2023-10-29"},{"lineNumber":62,"author":{"gitId":"newway1814"},"content":"                        + validExpectedTaskString,","lastModifiedDate":"2023-10-16"},{"lineNumber":63,"author":{"gitId":"kiatkat"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME, PREFIX_PRIORITY));","lastModifiedDate":"2023-10-29"},{"lineNumber":64,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":65,"author":{"gitId":"kiatkat"},"content":"        // invalid value followed by valid value","lastModifiedDate":"2023-10-13"},{"lineNumber":66,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":67,"author":{"gitId":"kiatkat"},"content":"        // invalid name","lastModifiedDate":"2023-10-13"},{"lineNumber":68,"author":{"gitId":"kiatkat"},"content":"        CommandParserTestUtil.assertParseFailure(parser, CommandTestUtil.INVALID_NAME_DESC","lastModifiedDate":"2023-10-14"},{"lineNumber":69,"author":{"gitId":"newway1814"},"content":"                        + validExpectedTaskString,","lastModifiedDate":"2023-10-16"},{"lineNumber":70,"author":{"gitId":"kiatkat"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2023-10-13"},{"lineNumber":71,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":72,"author":{"gitId":"eyelessrhyme7"},"content":"        // invalid priority","lastModifiedDate":"2023-10-17"},{"lineNumber":73,"author":{"gitId":"eyelessrhyme7"},"content":"        CommandParserTestUtil.assertParseFailure(parser, CommandTestUtil.INVALID_PRIORITY_DESC","lastModifiedDate":"2023-10-17"},{"lineNumber":74,"author":{"gitId":"newway1814"},"content":"                        + validExpectedTaskString,","lastModifiedDate":"2023-10-16"},{"lineNumber":75,"author":{"gitId":"eyelessrhyme7"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PRIORITY));","lastModifiedDate":"2023-10-17"},{"lineNumber":76,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":77,"author":{"gitId":"kiatkat"},"content":"        // valid value followed by invalid value","lastModifiedDate":"2023-10-13"},{"lineNumber":78,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":79,"author":{"gitId":"kiatkat"},"content":"        // invalid name","lastModifiedDate":"2023-10-13"},{"lineNumber":80,"author":{"gitId":"newway1814"},"content":"        CommandParserTestUtil.assertParseFailure(parser, validExpectedTaskString","lastModifiedDate":"2023-10-16"},{"lineNumber":81,"author":{"gitId":"kiatkat"},"content":"                        + CommandTestUtil.INVALID_NAME_DESC,","lastModifiedDate":"2023-10-14"},{"lineNumber":82,"author":{"gitId":"kiatkat"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2023-10-13"},{"lineNumber":83,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":84,"author":{"gitId":"eyelessrhyme7"},"content":"        // invalid priority","lastModifiedDate":"2023-10-17"},{"lineNumber":85,"author":{"gitId":"newway1814"},"content":"        CommandParserTestUtil.assertParseFailure(parser, validExpectedTaskString","lastModifiedDate":"2023-10-16"},{"lineNumber":86,"author":{"gitId":"eyelessrhyme7"},"content":"                        + CommandTestUtil.INVALID_PRIORITY_DESC,","lastModifiedDate":"2023-10-17"},{"lineNumber":87,"author":{"gitId":"eyelessrhyme7"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PRIORITY));","lastModifiedDate":"2023-10-17"},{"lineNumber":88,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":89,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":90,"author":{"gitId":"kiatkat"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":91,"author":{"gitId":"kiatkat"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2023-10-13"},{"lineNumber":92,"author":{"gitId":"kiatkat"},"content":"        // zero tags","lastModifiedDate":"2023-10-13"},{"lineNumber":93,"author":{"gitId":"newway1814"},"content":"        Task expectedTask \u003d new TaskBuilder(TypicalTasks.AMY).withTags().build();","lastModifiedDate":"2023-10-16"},{"lineNumber":94,"author":{"gitId":"kiatkat"},"content":"        CommandParserTestUtil.assertParseSuccess(parser,","lastModifiedDate":"2023-10-14"},{"lineNumber":95,"author":{"gitId":"eyelessrhyme7"},"content":"                CommandTestUtil.NAME_DESC_AMY + CommandTestUtil.PRIORITY_DESC_AMY","lastModifiedDate":"2023-10-17"},{"lineNumber":96,"author":{"gitId":"eyelessrhyme7"},"content":"                        + CommandTestUtil.DUEDATE_DESC","lastModifiedDate":"2023-11-11"},{"lineNumber":97,"author":{"gitId":"kiatkat"},"content":"                        + CommandTestUtil.DESCRIPTION_DESC_AMY,","lastModifiedDate":"2023-10-26"},{"lineNumber":98,"author":{"gitId":"newway1814"},"content":"                new AddCommand(expectedTask));","lastModifiedDate":"2023-10-16"},{"lineNumber":99,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":100,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":101,"author":{"gitId":"eyelessrhyme7"},"content":"    /*","lastModifiedDate":"2023-10-17"},{"lineNumber":102,"author":{"gitId":"eyelessrhyme7"},"content":"    @Test - \u003c\u003cRewrite test once all compulsory fields for task is determined\u003e\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":103,"author":{"gitId":"eyelessrhyme7"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2023-10-17"},{"lineNumber":104,"author":{"gitId":"eyelessrhyme7"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-10-17"},{"lineNumber":105,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":106,"author":{"gitId":"eyelessrhyme7"},"content":"        // missing name prefix","lastModifiedDate":"2023-10-17"},{"lineNumber":107,"author":{"gitId":"eyelessrhyme7"},"content":"        CommandParserTestUtil.assertParseFailure(parser, CommandTestUtil.VALID_NAME_BOB","lastModifiedDate":"2023-10-17"},{"lineNumber":108,"author":{"gitId":"kiatkat"},"content":"                        + CommandTestUtil.PRIORITY_DESC_BOB,","lastModifiedDate":"2023-10-29"},{"lineNumber":109,"author":{"gitId":"eyelessrhyme7"},"content":"                expectedMessage);","lastModifiedDate":"2023-10-17"},{"lineNumber":110,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":111,"author":{"gitId":"eyelessrhyme7"},"content":"        // missing priority prefix","lastModifiedDate":"2023-10-17"},{"lineNumber":112,"author":{"gitId":"eyelessrhyme7"},"content":"        CommandParserTestUtil.assertParseFailure(parser, CommandTestUtil.NAME_DESC_BOB","lastModifiedDate":"2023-10-17"},{"lineNumber":113,"author":{"gitId":"kiatkat"},"content":"                        + CommandTestUtil.VALID_PRIORITY_BOB,","lastModifiedDate":"2023-10-29"},{"lineNumber":114,"author":{"gitId":"eyelessrhyme7"},"content":"                expectedMessage);","lastModifiedDate":"2023-10-17"},{"lineNumber":115,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":116,"author":{"gitId":"eyelessrhyme7"},"content":"        // all prefixes missing","lastModifiedDate":"2023-10-17"},{"lineNumber":117,"author":{"gitId":"eyelessrhyme7"},"content":"        CommandParserTestUtil.assertParseFailure(parser, CommandTestUtil.VALID_NAME_BOB","lastModifiedDate":"2023-10-17"},{"lineNumber":118,"author":{"gitId":"kiatkat"},"content":"                        + CommandTestUtil.VALID_PRIORITY_BOB,","lastModifiedDate":"2023-10-29"},{"lineNumber":119,"author":{"gitId":"eyelessrhyme7"},"content":"                expectedMessage);","lastModifiedDate":"2023-10-17"},{"lineNumber":120,"author":{"gitId":"eyelessrhyme7"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":121,"author":{"gitId":"eyelessrhyme7"},"content":"    */","lastModifiedDate":"2023-10-17"},{"lineNumber":122,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":123,"author":{"gitId":"kiatkat"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":124,"author":{"gitId":"kiatkat"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2023-10-13"},{"lineNumber":125,"author":{"gitId":"kiatkat"},"content":"        // invalid name","lastModifiedDate":"2023-10-13"},{"lineNumber":126,"author":{"gitId":"kiatkat"},"content":"        CommandParserTestUtil.assertParseFailure(parser, CommandTestUtil.INVALID_NAME_DESC","lastModifiedDate":"2023-10-14"},{"lineNumber":127,"author":{"gitId":"kiatkat"},"content":"                + CommandTestUtil.PRIORITY_DESC_BOB + CommandTestUtil.TAG_DESC_HUSBAND","lastModifiedDate":"2023-10-29"},{"lineNumber":128,"author":{"gitId":"eyelessrhyme7"},"content":"                + CommandTestUtil.TAG_DESC_FRIEND, String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-11-11"},{"lineNumber":129,"author":{"gitId":"eyelessrhyme7"},"content":"                AddCommand.MESSAGE_FULL_HELP));","lastModifiedDate":"2023-11-11"},{"lineNumber":130,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":131,"author":{"gitId":"eyelessrhyme7"},"content":"        // invalid priority","lastModifiedDate":"2023-10-17"},{"lineNumber":132,"author":{"gitId":"kiatkat"},"content":"        CommandParserTestUtil.assertParseFailure(parser, CommandTestUtil.NAME_DESC_BOB","lastModifiedDate":"2023-10-14"},{"lineNumber":133,"author":{"gitId":"kiatkat"},"content":"                + CommandTestUtil.INVALID_PRIORITY_DESC + CommandTestUtil.TAG_DESC_HUSBAND","lastModifiedDate":"2023-10-29"},{"lineNumber":134,"author":{"gitId":"eyelessrhyme7"},"content":"                + CommandTestUtil.TAG_DESC_FRIEND, String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-11-11"},{"lineNumber":135,"author":{"gitId":"eyelessrhyme7"},"content":"                AddCommand.MESSAGE_FULL_HELP));","lastModifiedDate":"2023-11-11"},{"lineNumber":136,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":137,"author":{"gitId":"kiatkat"},"content":"        // invalid tag","lastModifiedDate":"2023-10-13"},{"lineNumber":138,"author":{"gitId":"kiatkat"},"content":"        CommandParserTestUtil.assertParseFailure(parser, CommandTestUtil.NAME_DESC_BOB","lastModifiedDate":"2023-10-14"},{"lineNumber":139,"author":{"gitId":"kiatkat"},"content":"                + CommandTestUtil.PRIORITY_DESC_BOB","lastModifiedDate":"2023-10-29"},{"lineNumber":140,"author":{"gitId":"eyelessrhyme7"},"content":"                + CommandTestUtil.INVALID_TAG_DESC + CommandTestUtil.VALID_TAG_FRIEND,","lastModifiedDate":"2023-11-11"},{"lineNumber":141,"author":{"gitId":"eyelessrhyme7"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_FULL_HELP));","lastModifiedDate":"2023-11-11"},{"lineNumber":142,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":143,"author":{"gitId":"kiatkat"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2023-10-13"},{"lineNumber":144,"author":{"gitId":"kiatkat"},"content":"        CommandParserTestUtil.assertParseFailure(parser, CommandTestUtil.INVALID_NAME_DESC","lastModifiedDate":"2023-10-14"},{"lineNumber":145,"author":{"gitId":"eyelessrhyme7"},"content":"                        + CommandTestUtil.PRIORITY_DESC_BOB, String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-11-11"},{"lineNumber":146,"author":{"gitId":"eyelessrhyme7"},"content":"                AddCommand.MESSAGE_FULL_HELP));","lastModifiedDate":"2023-11-11"},{"lineNumber":147,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":148,"author":{"gitId":"kiatkat"},"content":"        // non-empty preamble","lastModifiedDate":"2023-10-13"},{"lineNumber":149,"author":{"gitId":"kiatkat"},"content":"        CommandParserTestUtil.assertParseFailure(parser, CommandTestUtil.PREAMBLE_NON_EMPTY","lastModifiedDate":"2023-10-14"},{"lineNumber":150,"author":{"gitId":"eyelessrhyme7"},"content":"                        + CommandTestUtil.NAME_DESC_BOB + CommandTestUtil.PRIORITY_DESC_BOB","lastModifiedDate":"2023-10-17"},{"lineNumber":151,"author":{"gitId":"kiatkat"},"content":"                        + CommandTestUtil.TAG_DESC_HUSBAND + CommandTestUtil.TAG_DESC_FRIEND,","lastModifiedDate":"2023-10-29"},{"lineNumber":152,"author":{"gitId":"yarnmengnus"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_FULL_HELP));","lastModifiedDate":"2023-11-11"},{"lineNumber":153,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":154,"author":{"gitId":"kiatkat"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"yarnmengnus":1,"kiatkat":94,"eyelessrhyme7":44,"newway1814":15}},{"path":"src/test/java/profplan/logic/parser/ArgumentTokenizerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kiatkat"},"content":"package profplan.logic.parser;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class ArgumentTokenizerTest {","lastModifiedDate":"2016-10-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final Prefix unknownPrefix \u003d new Prefix(\"--u\");","lastModifiedDate":"2016-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private final Prefix pSlash \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final Prefix dashT \u003d new Prefix(\"-t\");","lastModifiedDate":"2016-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final Prefix hatQ \u003d new Prefix(\"^Q\");","lastModifiedDate":"2016-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void tokenize_emptyArgsString_noValues() {","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  \";","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private void assertPreamblePresent(ArgumentMultimap argMultimap, String expectedPreamble) {","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(expectedPreamble, argMultimap.getPreamble());","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private void assertPreambleEmpty(ArgumentMultimap argMultimap) {","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertTrue(argMultimap.getPreamble().isEmpty());","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Asserts all the arguments in {@code argMultimap} with {@code prefix} match the {@code expectedValues}","lastModifiedDate":"2017-08-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * and only the last value is returned upon calling {@code ArgumentMultimap#getValue(Prefix)}.","lastModifiedDate":"2017-08-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private void assertArgumentPresent(ArgumentMultimap argMultimap, Prefix prefix, String... expectedValues) {","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // Verify the last value is returned","lastModifiedDate":"2016-10-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(expectedValues[expectedValues.length - 1], argMultimap.getValue(prefix).get());","lastModifiedDate":"2017-06-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // Verify the number of values returned is as expected","lastModifiedDate":"2016-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(expectedValues.length, argMultimap.getAllValues(prefix).size());","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // Verify all values returned are as expected and in order","lastModifiedDate":"2016-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c expectedValues.length; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            assertEquals(expectedValues[i], argMultimap.getAllValues(prefix).get(i));","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private void assertArgumentAbsent(ArgumentMultimap argMultimap, Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(argMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void tokenize_noPrefixes_allTakenAsPreamble() {","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  some random string /t tag with leading and trailing spaces \";","lastModifiedDate":"2016-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString);","lastModifiedDate":"2017-03-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // Same string expected as preamble, but leading/trailing spaces should be trimmed","lastModifiedDate":"2016-10-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, argsString.trim());","lastModifiedDate":"2017-03-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void tokenize_oneArgument() {","lastModifiedDate":"2016-10-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // Preamble present","lastModifiedDate":"2016-10-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  Some preamble string p/ Argument value \";","lastModifiedDate":"2017-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"Some preamble string\");","lastModifiedDate":"2017-03-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // No preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        argsString \u003d \" p/   Argument value \";","lastModifiedDate":"2017-03-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArguments() {","lastModifiedDate":"2016-10-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // Only two arguments are present","lastModifiedDate":"2016-10-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleString -t dashT-Value p/pSlash value\";","lastModifiedDate":"2017-03-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2017-03-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2017-03-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // All three arguments are present","lastModifiedDate":"2017-05-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        argsString \u003d \"Different Preamble String ^Q111 -t dashT-Value p/pSlash value\";","lastModifiedDate":"2017-03-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"Different Preamble String\");","lastModifiedDate":"2017-03-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, hatQ, \"111\");","lastModifiedDate":"2017-03-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        /* Also covers: Reusing of the tokenizer multiple times */","lastModifiedDate":"2016-10-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // Reuse tokenizer on an empty string to ensure ArgumentMultimap is correctly reset","lastModifiedDate":"2017-03-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // (i.e. no stale values from the previous tokenizing remain)","lastModifiedDate":"2017-03-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        argsString \u003d \"\";","lastModifiedDate":"2017-03-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-03-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        /* Also covers: testing for prefixes not specified as a prefix */","lastModifiedDate":"2020-05-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // Prefixes not previously given to the tokenizer should not return any values","lastModifiedDate":"2016-10-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        argsString \u003d unknownPrefix + \"some value\";","lastModifiedDate":"2017-05-09"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, unknownPrefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, argsString); // Unknown prefix is taken as part of preamble","lastModifiedDate":"2017-03-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArgumentsWithRepeats() {","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // Two arguments repeated, some have empty values","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleString -t dashT-Value ^Q ^Q -t another dashT value p/ pSlash value -t\";","lastModifiedDate":"2017-03-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2017-03-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\", \"another dashT value\", \"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, hatQ, \"\", \"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArgumentsJoined() {","lastModifiedDate":"2017-05-19"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleStringp/ pSlash joined-tjoined -t not joined^Qjoined\";","lastModifiedDate":"2017-05-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-05-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleStringp/ pSlash joined-tjoined\");","lastModifiedDate":"2017-05-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-05-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"not joined^Qjoined\");","lastModifiedDate":"2017-05-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2017-05-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public void equalsMethod() {","lastModifiedDate":"2016-10-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        Prefix aaa \u003d new Prefix(\"aaa\");","lastModifiedDate":"2016-10-16"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertEquals(aaa, aaa);","lastModifiedDate":"2016-10-16"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertEquals(aaa, new Prefix(\"aaa\"));","lastModifiedDate":"2016-10-16"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertNotEquals(aaa, \"aaa\");","lastModifiedDate":"2016-10-16"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertNotEquals(aaa, new Prefix(\"aab\"));","lastModifiedDate":"2016-10-16"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":150,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"kiatkat":1,"-":149}},{"path":"src/test/java/profplan/logic/parser/CommandParserTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kiatkat"},"content":"package profplan.logic.parser;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"kiatkat"},"content":"import profplan.logic.commands.Command;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"kiatkat"},"content":"import profplan.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Contains helper methods for testing command parsers.","lastModifiedDate":"2017-07-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class CommandParserTestUtil {","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is successful and the command created","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * equals to {@code expectedCommand}.","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static void assertParseSuccess(Parser\u003c? extends Command\u003e parser, String userInput,","lastModifiedDate":"2022-02-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            Command expectedCommand) {","lastModifiedDate":"2022-02-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            Command command \u003d parser.parse(userInput);","lastModifiedDate":"2017-07-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommand, command);","lastModifiedDate":"2017-07-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(\"Invalid userInput.\", pe);","lastModifiedDate":"2017-08-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is unsuccessful and the error message","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * equals to {@code expectedMessage}.","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static void assertParseFailure(Parser\u003c? extends Command\u003e parser, String userInput, String expectedMessage) {","lastModifiedDate":"2022-02-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-07-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            parser.parse(userInput);","lastModifiedDate":"2017-07-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"The expected ParseException was not thrown.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2017-07-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            assertEquals(expectedMessage, pe.getMessage());","lastModifiedDate":"2017-07-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-06"}],"authorContributionMap":{"kiatkat":3,"-":36}},{"path":"src/test/java/profplan/logic/parser/DeleteCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kiatkat"},"content":"package profplan.logic.parser;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"kiatkat"},"content":"import static profplan.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":7,"author":{"gitId":"kiatkat"},"content":"import profplan.logic.commands.DeleteCommand;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"kiatkat"},"content":"import profplan.testutil.TypicalIndexes;","lastModifiedDate":"2023-10-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2017-06-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * outside of the DeleteCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * same path through the DeleteCommand, and therefore we test only one of them.","lastModifiedDate":"2017-06-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2017-06-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2017-06-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class DeleteCommandParserTest {","lastModifiedDate":"2017-06-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private DeleteCommandParser parser \u003d new DeleteCommandParser();","lastModifiedDate":"2017-06-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":23,"author":{"gitId":"newway1814"},"content":"        CommandParserTestUtil.assertParseSuccess(parser, \"1\", new DeleteCommand(TypicalIndexes.INDEX_FIRST_TASK));","lastModifiedDate":"2023-10-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":26,"author":{"gitId":"newway1814"},"content":"    @Test","lastModifiedDate":"2023-11-09"},{"lineNumber":27,"author":{"gitId":"newway1814"},"content":"    public void parse_validArgsAll_returnsDeleteCommand() {","lastModifiedDate":"2023-11-09"},{"lineNumber":28,"author":{"gitId":"newway1814"},"content":"        CommandParserTestUtil.assertParseSuccess(parser, \"all\", new DeleteCommand());","lastModifiedDate":"2023-11-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":33,"author":{"gitId":"kiatkat"},"content":"        CommandParserTestUtil.assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-10-14"},{"lineNumber":34,"author":{"gitId":"yarnmengnus"},"content":"                DeleteCommand.MESSAGE_FULL_HELP));","lastModifiedDate":"2023-11-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":36,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"yarnmengnus":1,"kiatkat":5,"-":26,"newway1814":5}},{"path":"src/test/java/profplan/logic/parser/EditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kiatkat"},"content":"package profplan.logic.parser;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"kiatkat"},"content":"import static profplan.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"eyelessrhyme7"},"content":"import static profplan.logic.parser.CliSyntax.PREFIX_PRIORITY;","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"kiatkat"},"content":"import static profplan.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"kiatkat"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"kiatkat"},"content":"import profplan.commons.core.index.Index;","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"kiatkat"},"content":"import profplan.logic.Messages;","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"kiatkat"},"content":"import profplan.logic.commands.CommandTestUtil;","lastModifiedDate":"2023-10-14"},{"lineNumber":12,"author":{"gitId":"kiatkat"},"content":"import profplan.logic.commands.EditCommand;","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"newway1814"},"content":"import profplan.logic.commands.EditCommand.EditTaskDescriptor;","lastModifiedDate":"2023-10-16"},{"lineNumber":14,"author":{"gitId":"kiatkat"},"content":"import profplan.model.tag.Tag;","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"newway1814"},"content":"import profplan.model.task.Name;","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"eyelessrhyme7"},"content":"import profplan.model.task.Priority;","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"newway1814"},"content":"import profplan.testutil.EditTaskDescriptorBuilder;","lastModifiedDate":"2023-10-16"},{"lineNumber":18,"author":{"gitId":"kiatkat"},"content":"import profplan.testutil.TypicalIndexes;","lastModifiedDate":"2023-10-14"},{"lineNumber":19,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"kiatkat"},"content":"public class EditCommandParserTest {","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"kiatkat"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"kiatkat"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"yarnmengnus"},"content":"        String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_FULL_HELP);","lastModifiedDate":"2023-11-11"},{"lineNumber":26,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"kiatkat"},"content":"    private EditCommandParser parser \u003d new EditCommandParser();","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"kiatkat"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"kiatkat"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"kiatkat"},"content":"        // no index specified","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"kiatkat"},"content":"        CommandParserTestUtil.assertParseFailure(parser, CommandTestUtil.VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"kiatkat"},"content":"        // no field specified","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"kiatkat"},"content":"        CommandParserTestUtil.assertParseFailure(parser, \"1\", EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"kiatkat"},"content":"        // no index and no field specified","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"kiatkat"},"content":"        CommandParserTestUtil.assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":41,"author":{"gitId":"kiatkat"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":42,"author":{"gitId":"kiatkat"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2023-10-13"},{"lineNumber":43,"author":{"gitId":"kiatkat"},"content":"        // negative index","lastModifiedDate":"2023-10-13"},{"lineNumber":44,"author":{"gitId":"eyelessrhyme7"},"content":"        CommandParserTestUtil.assertParseFailure(parser, \"-5\" + CommandTestUtil.NAME_DESC_AMY,","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"eyelessrhyme7"},"content":"                MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-17"},{"lineNumber":46,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":47,"author":{"gitId":"kiatkat"},"content":"        // zero index","lastModifiedDate":"2023-10-13"},{"lineNumber":48,"author":{"gitId":"eyelessrhyme7"},"content":"        CommandParserTestUtil.assertParseFailure(parser, \"0\" + CommandTestUtil.NAME_DESC_AMY,","lastModifiedDate":"2023-10-17"},{"lineNumber":49,"author":{"gitId":"eyelessrhyme7"},"content":"                MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-17"},{"lineNumber":50,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":51,"author":{"gitId":"kiatkat"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2023-10-13"},{"lineNumber":52,"author":{"gitId":"kiatkat"},"content":"        CommandParserTestUtil.assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-13"},{"lineNumber":53,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":54,"author":{"gitId":"kiatkat"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2023-10-13"},{"lineNumber":55,"author":{"gitId":"kiatkat"},"content":"        CommandParserTestUtil.assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-13"},{"lineNumber":56,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":57,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":58,"author":{"gitId":"kiatkat"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":59,"author":{"gitId":"kiatkat"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2023-10-13"},{"lineNumber":60,"author":{"gitId":"kiatkat"},"content":"        CommandParserTestUtil.assertParseFailure(parser, \"1\" + CommandTestUtil.INVALID_NAME_DESC,","lastModifiedDate":"2023-10-14"},{"lineNumber":61,"author":{"gitId":"kiatkat"},"content":"                Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2023-10-14"},{"lineNumber":62,"author":{"gitId":"eyelessrhyme7"},"content":"        CommandParserTestUtil.assertParseFailure(parser, \"1\" + CommandTestUtil.INVALID_PRIORITY_DESC,","lastModifiedDate":"2023-10-17"},{"lineNumber":63,"author":{"gitId":"eyelessrhyme7"},"content":"                Priority.MESSAGE_CONSTRAINTS); // invalid priority","lastModifiedDate":"2023-10-17"},{"lineNumber":64,"author":{"gitId":"kiatkat"},"content":"        CommandParserTestUtil.assertParseFailure(parser, \"1\" + CommandTestUtil.INVALID_TAG_DESC,","lastModifiedDate":"2023-10-14"},{"lineNumber":65,"author":{"gitId":"kiatkat"},"content":"                Tag.MESSAGE_CONSTRAINTS); // invalid tag","lastModifiedDate":"2023-10-14"},{"lineNumber":66,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":67,"author":{"gitId":"kiatkat"},"content":"        // invalid priority","lastModifiedDate":"2023-10-29"},{"lineNumber":68,"author":{"gitId":"kiatkat"},"content":"        CommandParserTestUtil.assertParseFailure(parser, \"1\" + CommandTestUtil.INVALID_PRIORITY_DESC,","lastModifiedDate":"2023-10-29"},{"lineNumber":69,"author":{"gitId":"kiatkat"},"content":"                Priority.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-29"},{"lineNumber":70,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":71,"author":{"gitId":"newway1814"},"content":"        // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code Task} being edited,","lastModifiedDate":"2023-10-16"},{"lineNumber":72,"author":{"gitId":"kiatkat"},"content":"        // parsing it together with a valid tag results in error","lastModifiedDate":"2023-10-13"},{"lineNumber":73,"author":{"gitId":"kiatkat"},"content":"        CommandParserTestUtil.assertParseFailure(parser, \"1\" + CommandTestUtil.TAG_DESC_FRIEND","lastModifiedDate":"2023-10-14"},{"lineNumber":74,"author":{"gitId":"kiatkat"},"content":"                + CommandTestUtil.TAG_DESC_HUSBAND + TAG_EMPTY, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-14"},{"lineNumber":75,"author":{"gitId":"kiatkat"},"content":"        CommandParserTestUtil.assertParseFailure(parser, \"1\" + CommandTestUtil.TAG_DESC_FRIEND","lastModifiedDate":"2023-10-14"},{"lineNumber":76,"author":{"gitId":"kiatkat"},"content":"                + TAG_EMPTY + CommandTestUtil.TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-14"},{"lineNumber":77,"author":{"gitId":"kiatkat"},"content":"        CommandParserTestUtil.assertParseFailure(parser, \"1\" + TAG_EMPTY + CommandTestUtil.TAG_DESC_FRIEND","lastModifiedDate":"2023-10-14"},{"lineNumber":78,"author":{"gitId":"kiatkat"},"content":"                + CommandTestUtil.TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-14"},{"lineNumber":79,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":80,"author":{"gitId":"kiatkat"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2023-10-13"},{"lineNumber":81,"author":{"gitId":"kiatkat"},"content":"        CommandParserTestUtil.assertParseFailure(parser, \"1\" + CommandTestUtil.INVALID_NAME_DESC","lastModifiedDate":"2023-10-14"},{"lineNumber":82,"author":{"gitId":"eyelessrhyme7"},"content":"                        + CommandTestUtil.VALID_PRIORITY_AMY,","lastModifiedDate":"2023-10-17"},{"lineNumber":83,"author":{"gitId":"kiatkat"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-13"},{"lineNumber":84,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":85,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":86,"author":{"gitId":"kiatkat"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":87,"author":{"gitId":"kiatkat"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2023-10-13"},{"lineNumber":88,"author":{"gitId":"newway1814"},"content":"        Index targetIndex \u003d TypicalIndexes.INDEX_SECOND_TASK;","lastModifiedDate":"2023-10-16"},{"lineNumber":89,"author":{"gitId":"eyelessrhyme7"},"content":"        String userInput \u003d targetIndex.getOneBased() + CommandTestUtil.PRIORITY_DESC_BOB","lastModifiedDate":"2023-10-17"},{"lineNumber":90,"author":{"gitId":"kiatkat"},"content":"                + CommandTestUtil.TAG_DESC_HUSBAND + CommandTestUtil.NAME_DESC_AMY","lastModifiedDate":"2023-10-29"},{"lineNumber":91,"author":{"gitId":"kiatkat"},"content":"                + CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2023-10-14"},{"lineNumber":92,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":93,"author":{"gitId":"newway1814"},"content":"        EditTaskDescriptor descriptor \u003d new EditTaskDescriptorBuilder().withName(CommandTestUtil.VALID_NAME_AMY)","lastModifiedDate":"2023-10-16"},{"lineNumber":94,"author":{"gitId":"kiatkat"},"content":"                .withPriority(CommandTestUtil.VALID_PRIORITY_BOB).withTags(CommandTestUtil.VALID_TAG_HUSBAND,","lastModifiedDate":"2023-10-29"},{"lineNumber":95,"author":{"gitId":"kiatkat"},"content":"                        CommandTestUtil.VALID_TAG_FRIEND).build();","lastModifiedDate":"2023-10-29"},{"lineNumber":96,"author":{"gitId":"kiatkat"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2023-10-13"},{"lineNumber":97,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":98,"author":{"gitId":"kiatkat"},"content":"        CommandParserTestUtil.assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-10-13"},{"lineNumber":99,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":100,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":101,"author":{"gitId":"kiatkat"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":102,"author":{"gitId":"kiatkat"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2023-10-13"},{"lineNumber":103,"author":{"gitId":"newway1814"},"content":"        Index targetIndex \u003d TypicalIndexes.INDEX_FIRST_TASK;","lastModifiedDate":"2023-10-16"},{"lineNumber":104,"author":{"gitId":"kiatkat"},"content":"        String userInput \u003d targetIndex.getOneBased() + CommandTestUtil.PRIORITY_DESC_BOB;","lastModifiedDate":"2023-10-29"},{"lineNumber":105,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":106,"author":{"gitId":"eyelessrhyme7"},"content":"        EditTaskDescriptor descriptor \u003d new EditTaskDescriptorBuilder()","lastModifiedDate":"2023-10-17"},{"lineNumber":107,"author":{"gitId":"eyelessrhyme7"},"content":"                .withPriority(CommandTestUtil.VALID_PRIORITY_BOB)","lastModifiedDate":"2023-10-17"},{"lineNumber":108,"author":{"gitId":"kiatkat"},"content":"                .build();","lastModifiedDate":"2023-10-29"},{"lineNumber":109,"author":{"gitId":"kiatkat"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2023-10-13"},{"lineNumber":110,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":111,"author":{"gitId":"kiatkat"},"content":"        CommandParserTestUtil.assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-10-13"},{"lineNumber":112,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":113,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":114,"author":{"gitId":"kiatkat"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":115,"author":{"gitId":"kiatkat"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2023-10-13"},{"lineNumber":116,"author":{"gitId":"kiatkat"},"content":"        // name","lastModifiedDate":"2023-10-13"},{"lineNumber":117,"author":{"gitId":"newway1814"},"content":"        Index targetIndex \u003d TypicalIndexes.INDEX_THIRD_TASK;","lastModifiedDate":"2023-10-16"},{"lineNumber":118,"author":{"gitId":"kiatkat"},"content":"        String userInput \u003d targetIndex.getOneBased() + CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2023-10-13"},{"lineNumber":119,"author":{"gitId":"newway1814"},"content":"        EditTaskDescriptor descriptor \u003d new EditTaskDescriptorBuilder().withName(CommandTestUtil.VALID_NAME_AMY)","lastModifiedDate":"2023-10-16"},{"lineNumber":120,"author":{"gitId":"kiatkat"},"content":"                .build();","lastModifiedDate":"2023-10-14"},{"lineNumber":121,"author":{"gitId":"kiatkat"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2023-10-13"},{"lineNumber":122,"author":{"gitId":"kiatkat"},"content":"        CommandParserTestUtil.assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-10-13"},{"lineNumber":123,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":124,"author":{"gitId":"eyelessrhyme7"},"content":"        // priority","lastModifiedDate":"2023-10-17"},{"lineNumber":125,"author":{"gitId":"eyelessrhyme7"},"content":"        userInput \u003d targetIndex.getOneBased() + CommandTestUtil.PRIORITY_DESC_AMY;","lastModifiedDate":"2023-10-17"},{"lineNumber":126,"author":{"gitId":"eyelessrhyme7"},"content":"        descriptor \u003d new EditTaskDescriptorBuilder().withPriority(CommandTestUtil.VALID_PRIORITY_AMY).build();","lastModifiedDate":"2023-10-17"},{"lineNumber":127,"author":{"gitId":"kiatkat"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2023-10-13"},{"lineNumber":128,"author":{"gitId":"kiatkat"},"content":"        CommandParserTestUtil.assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-10-13"},{"lineNumber":129,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":130,"author":{"gitId":"kiatkat"},"content":"        // tags","lastModifiedDate":"2023-10-13"},{"lineNumber":131,"author":{"gitId":"kiatkat"},"content":"        userInput \u003d targetIndex.getOneBased() + CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2023-10-13"},{"lineNumber":132,"author":{"gitId":"newway1814"},"content":"        descriptor \u003d new EditTaskDescriptorBuilder().withTags(CommandTestUtil.VALID_TAG_FRIEND).build();","lastModifiedDate":"2023-10-16"},{"lineNumber":133,"author":{"gitId":"kiatkat"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2023-10-13"},{"lineNumber":134,"author":{"gitId":"kiatkat"},"content":"        CommandParserTestUtil.assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-10-13"},{"lineNumber":135,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":136,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":137,"author":{"gitId":"kiatkat"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":138,"author":{"gitId":"kiatkat"},"content":"    public void parse_multipleRepeatedFields_failure() {","lastModifiedDate":"2023-10-13"},{"lineNumber":139,"author":{"gitId":"kiatkat"},"content":"        // More extensive testing of duplicate parameter detections is done in","lastModifiedDate":"2023-10-13"},{"lineNumber":140,"author":{"gitId":"kiatkat"},"content":"        // AddCommandParserTest#parse_repeatedNonTagValue_failure()","lastModifiedDate":"2023-10-13"},{"lineNumber":141,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":142,"author":{"gitId":"kiatkat"},"content":"        // valid followed by invalid","lastModifiedDate":"2023-10-13"},{"lineNumber":143,"author":{"gitId":"newway1814"},"content":"        Index targetIndex \u003d TypicalIndexes.INDEX_FIRST_TASK;","lastModifiedDate":"2023-10-16"},{"lineNumber":144,"author":{"gitId":"eyelessrhyme7"},"content":"        String userInput \u003d targetIndex.getOneBased() + CommandTestUtil.INVALID_PRIORITY_DESC","lastModifiedDate":"2023-10-17"},{"lineNumber":145,"author":{"gitId":"eyelessrhyme7"},"content":"                + CommandTestUtil.PRIORITY_DESC_BOB;","lastModifiedDate":"2023-10-17"},{"lineNumber":146,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":147,"author":{"gitId":"kiatkat"},"content":"        CommandParserTestUtil.assertParseFailure(parser, userInput,","lastModifiedDate":"2023-10-14"},{"lineNumber":148,"author":{"gitId":"eyelessrhyme7"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PRIORITY));","lastModifiedDate":"2023-10-17"},{"lineNumber":149,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":150,"author":{"gitId":"kiatkat"},"content":"        // invalid followed by valid","lastModifiedDate":"2023-10-13"},{"lineNumber":151,"author":{"gitId":"eyelessrhyme7"},"content":"        userInput \u003d targetIndex.getOneBased() + CommandTestUtil.PRIORITY_DESC_BOB","lastModifiedDate":"2023-10-17"},{"lineNumber":152,"author":{"gitId":"eyelessrhyme7"},"content":"                + CommandTestUtil.INVALID_PRIORITY_DESC;","lastModifiedDate":"2023-10-17"},{"lineNumber":153,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":154,"author":{"gitId":"kiatkat"},"content":"        CommandParserTestUtil.assertParseFailure(parser, userInput,","lastModifiedDate":"2023-10-14"},{"lineNumber":155,"author":{"gitId":"eyelessrhyme7"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PRIORITY));","lastModifiedDate":"2023-10-17"},{"lineNumber":156,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":157,"author":{"gitId":"kiatkat"},"content":"        // mulltiple valid fields repeated","lastModifiedDate":"2023-10-13"},{"lineNumber":158,"author":{"gitId":"kiatkat"},"content":"        userInput \u003d targetIndex.getOneBased() + CommandTestUtil.PRIORITY_DESC_AMY","lastModifiedDate":"2023-10-29"},{"lineNumber":159,"author":{"gitId":"eyelessrhyme7"},"content":"                + CommandTestUtil.TAG_DESC_FRIEND + CommandTestUtil.PRIORITY_DESC_AMY","lastModifiedDate":"2023-10-17"},{"lineNumber":160,"author":{"gitId":"kiatkat"},"content":"                + CommandTestUtil.TAG_DESC_FRIEND","lastModifiedDate":"2023-10-29"},{"lineNumber":161,"author":{"gitId":"kiatkat"},"content":"                + CommandTestUtil.PRIORITY_DESC_BOB","lastModifiedDate":"2023-10-29"},{"lineNumber":162,"author":{"gitId":"kiatkat"},"content":"                + CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2023-10-14"},{"lineNumber":163,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":164,"author":{"gitId":"kiatkat"},"content":"        CommandParserTestUtil.assertParseFailure(parser, userInput,","lastModifiedDate":"2023-10-13"},{"lineNumber":165,"author":{"gitId":"kiatkat"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PRIORITY));","lastModifiedDate":"2023-10-29"},{"lineNumber":166,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":167,"author":{"gitId":"kiatkat"},"content":"        // multiple invalid values","lastModifiedDate":"2023-10-13"},{"lineNumber":168,"author":{"gitId":"eyelessrhyme7"},"content":"        userInput \u003d targetIndex.getOneBased() + CommandTestUtil.INVALID_PRIORITY_DESC","lastModifiedDate":"2023-10-17"},{"lineNumber":169,"author":{"gitId":"kiatkat"},"content":"                + CommandTestUtil.INVALID_PRIORITY_DESC;","lastModifiedDate":"2023-10-29"},{"lineNumber":170,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":171,"author":{"gitId":"kiatkat"},"content":"        CommandParserTestUtil.assertParseFailure(parser, userInput,","lastModifiedDate":"2023-10-13"},{"lineNumber":172,"author":{"gitId":"kiatkat"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PRIORITY));","lastModifiedDate":"2023-10-29"},{"lineNumber":173,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":174,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":175,"author":{"gitId":"kiatkat"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":176,"author":{"gitId":"kiatkat"},"content":"    public void parse_resetTags_success() {","lastModifiedDate":"2023-10-13"},{"lineNumber":177,"author":{"gitId":"newway1814"},"content":"        Index targetIndex \u003d TypicalIndexes.INDEX_THIRD_TASK;","lastModifiedDate":"2023-10-16"},{"lineNumber":178,"author":{"gitId":"kiatkat"},"content":"        String userInput \u003d targetIndex.getOneBased() + TAG_EMPTY;","lastModifiedDate":"2023-10-13"},{"lineNumber":179,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":180,"author":{"gitId":"newway1814"},"content":"        EditTaskDescriptor descriptor \u003d new EditTaskDescriptorBuilder().withTags().build();","lastModifiedDate":"2023-10-16"},{"lineNumber":181,"author":{"gitId":"kiatkat"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2023-10-13"},{"lineNumber":182,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":183,"author":{"gitId":"kiatkat"},"content":"        CommandParserTestUtil.assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-10-13"},{"lineNumber":184,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":185,"author":{"gitId":"kiatkat"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"yarnmengnus":1,"kiatkat":148,"eyelessrhyme7":23,"newway1814":13}},{"path":"src/test/java/profplan/logic/parser/FilterCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jack1e0"},"content":"package profplan.logic.parser;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":3,"author":{"gitId":"jack1e0"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-29"},{"lineNumber":4,"author":{"gitId":"jack1e0"},"content":"import static profplan.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-20"},{"lineNumber":5,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":6,"author":{"gitId":"jack1e0"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-29"},{"lineNumber":7,"author":{"gitId":"jack1e0"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-29"},{"lineNumber":8,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":9,"author":{"gitId":"jack1e0"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-20"},{"lineNumber":10,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":11,"author":{"gitId":"jack1e0"},"content":"import profplan.logic.commands.FilterCommand;","lastModifiedDate":"2023-10-20"},{"lineNumber":12,"author":{"gitId":"jack1e0"},"content":"import profplan.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-29"},{"lineNumber":13,"author":{"gitId":"jack1e0"},"content":"import profplan.model.task.DueDate;","lastModifiedDate":"2023-10-20"},{"lineNumber":14,"author":{"gitId":"jack1e0"},"content":"import profplan.model.task.Priority;","lastModifiedDate":"2023-10-29"},{"lineNumber":15,"author":{"gitId":"jack1e0"},"content":"import profplan.model.task.Status;","lastModifiedDate":"2023-10-29"},{"lineNumber":16,"author":{"gitId":"jack1e0"},"content":"import profplan.model.task.Task;","lastModifiedDate":"2023-10-29"},{"lineNumber":17,"author":{"gitId":"jack1e0"},"content":"import profplan.model.task.Task.RecurringType;","lastModifiedDate":"2023-11-12"},{"lineNumber":18,"author":{"gitId":"jack1e0"},"content":"import profplan.model.task.predicates.CombinedPredicate;","lastModifiedDate":"2023-10-29"},{"lineNumber":19,"author":{"gitId":"jack1e0"},"content":"import profplan.model.task.predicates.TaskDueDatePredicate;","lastModifiedDate":"2023-10-29"},{"lineNumber":20,"author":{"gitId":"jack1e0"},"content":"import profplan.model.task.predicates.TaskPriorityPredicate;","lastModifiedDate":"2023-10-29"},{"lineNumber":21,"author":{"gitId":"jack1e0"},"content":"import profplan.model.task.predicates.TaskRecurringTypePredicate;","lastModifiedDate":"2023-11-12"},{"lineNumber":22,"author":{"gitId":"jack1e0"},"content":"import profplan.model.task.predicates.TaskStatusPredicate;","lastModifiedDate":"2023-10-29"},{"lineNumber":23,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":24,"author":{"gitId":"jack1e0"},"content":"public class FilterCommandParserTest {","lastModifiedDate":"2023-10-20"},{"lineNumber":25,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":26,"author":{"gitId":"jack1e0"},"content":"    private FilterCommandParser parser \u003d new FilterCommandParser();","lastModifiedDate":"2023-10-20"},{"lineNumber":27,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":28,"author":{"gitId":"jack1e0"},"content":"    @Test","lastModifiedDate":"2023-10-20"},{"lineNumber":29,"author":{"gitId":"jack1e0"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2023-10-20"},{"lineNumber":30,"author":{"gitId":"jack1e0"},"content":"        CommandParserTestUtil.assertParseFailure(parser, \"\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-10-20"},{"lineNumber":31,"author":{"gitId":"yarnmengnus"},"content":"            FilterCommand.MESSAGE_FULL_HELP));","lastModifiedDate":"2023-11-11"},{"lineNumber":32,"author":{"gitId":"jack1e0"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":33,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":34,"author":{"gitId":"jack1e0"},"content":"    @Test","lastModifiedDate":"2023-10-20"},{"lineNumber":35,"author":{"gitId":"jack1e0"},"content":"    public void parse_validDueDate_returnsFilterCommand() {","lastModifiedDate":"2023-10-29"},{"lineNumber":36,"author":{"gitId":"jack1e0"},"content":"        ArrayList\u003cPredicate\u003cTask\u003e\u003e preds \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-29"},{"lineNumber":37,"author":{"gitId":"jack1e0"},"content":"        preds.add(new TaskDueDatePredicate(new DueDate(\"01-01-2000\")));","lastModifiedDate":"2023-10-29"},{"lineNumber":38,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":39,"author":{"gitId":"jack1e0"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2023-10-20"},{"lineNumber":40,"author":{"gitId":"jack1e0"},"content":"        FilterCommand expectedFilterCommand \u003d","lastModifiedDate":"2023-10-20"},{"lineNumber":41,"author":{"gitId":"jack1e0"},"content":"                new FilterCommand(new CombinedPredicate(preds));","lastModifiedDate":"2023-10-29"},{"lineNumber":42,"author":{"gitId":"jack1e0"},"content":"        CommandParserTestUtil.assertParseSuccess(parser, \" d/01-01-2000\", expectedFilterCommand);","lastModifiedDate":"2023-10-25"},{"lineNumber":43,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":44,"author":{"gitId":"jack1e0"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2023-10-20"},{"lineNumber":45,"author":{"gitId":"jack1e0"},"content":"        CommandParserTestUtil.assertParseSuccess(parser, \" \\n d/01-01-2000\\t\", expectedFilterCommand);","lastModifiedDate":"2023-10-25"},{"lineNumber":46,"author":{"gitId":"jack1e0"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":47,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":48,"author":{"gitId":"jack1e0"},"content":"    @Test","lastModifiedDate":"2023-10-29"},{"lineNumber":49,"author":{"gitId":"jack1e0"},"content":"    public void parse_validPriority_returnsFilterCommand() {","lastModifiedDate":"2023-10-29"},{"lineNumber":50,"author":{"gitId":"jack1e0"},"content":"        ArrayList\u003cPredicate\u003cTask\u003e\u003e preds \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-29"},{"lineNumber":51,"author":{"gitId":"jack1e0"},"content":"        preds.add(new TaskPriorityPredicate(new Priority(\"1\")));","lastModifiedDate":"2023-10-29"},{"lineNumber":52,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":53,"author":{"gitId":"jack1e0"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2023-10-29"},{"lineNumber":54,"author":{"gitId":"jack1e0"},"content":"        FilterCommand expectedFilterCommand \u003d","lastModifiedDate":"2023-10-29"},{"lineNumber":55,"author":{"gitId":"jack1e0"},"content":"                new FilterCommand(new CombinedPredicate(preds));","lastModifiedDate":"2023-10-29"},{"lineNumber":56,"author":{"gitId":"jack1e0"},"content":"        CommandParserTestUtil.assertParseSuccess(parser, \" p/1\", expectedFilterCommand);","lastModifiedDate":"2023-10-29"},{"lineNumber":57,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":58,"author":{"gitId":"jack1e0"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2023-10-29"},{"lineNumber":59,"author":{"gitId":"jack1e0"},"content":"        CommandParserTestUtil.assertParseSuccess(parser, \" \\n p/1\\t\", expectedFilterCommand);","lastModifiedDate":"2023-10-29"},{"lineNumber":60,"author":{"gitId":"jack1e0"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":61,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":62,"author":{"gitId":"jack1e0"},"content":"    @Test","lastModifiedDate":"2023-10-29"},{"lineNumber":63,"author":{"gitId":"jack1e0"},"content":"    public void parse_validStatus_returnsFilterCommand() {","lastModifiedDate":"2023-10-29"},{"lineNumber":64,"author":{"gitId":"jack1e0"},"content":"        ArrayList\u003cPredicate\u003cTask\u003e\u003e preds \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-29"},{"lineNumber":65,"author":{"gitId":"jack1e0"},"content":"        preds.add(new TaskStatusPredicate(new Status(\"done\")));","lastModifiedDate":"2023-10-29"},{"lineNumber":66,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":67,"author":{"gitId":"jack1e0"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2023-10-29"},{"lineNumber":68,"author":{"gitId":"jack1e0"},"content":"        FilterCommand expectedFilterCommand \u003d","lastModifiedDate":"2023-10-29"},{"lineNumber":69,"author":{"gitId":"jack1e0"},"content":"                new FilterCommand(new CombinedPredicate(preds));","lastModifiedDate":"2023-10-29"},{"lineNumber":70,"author":{"gitId":"jack1e0"},"content":"        CommandParserTestUtil.assertParseSuccess(parser, \" s/done\", expectedFilterCommand);","lastModifiedDate":"2023-10-29"},{"lineNumber":71,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":72,"author":{"gitId":"jack1e0"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2023-10-29"},{"lineNumber":73,"author":{"gitId":"jack1e0"},"content":"        CommandParserTestUtil.assertParseSuccess(parser, \" \\n s/done\\t\", expectedFilterCommand);","lastModifiedDate":"2023-10-29"},{"lineNumber":74,"author":{"gitId":"jack1e0"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":75,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":76,"author":{"gitId":"jack1e0"},"content":"    @Test","lastModifiedDate":"2023-11-12"},{"lineNumber":77,"author":{"gitId":"jack1e0"},"content":"    public void parse_validRecurringType_returnsFilterCommand() {","lastModifiedDate":"2023-11-12"},{"lineNumber":78,"author":{"gitId":"jack1e0"},"content":"        ArrayList\u003cPredicate\u003cTask\u003e\u003e preds \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-11-12"},{"lineNumber":79,"author":{"gitId":"jack1e0"},"content":"        preds.add(new TaskRecurringTypePredicate(RecurringType.DAILY));","lastModifiedDate":"2023-11-12"},{"lineNumber":80,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":81,"author":{"gitId":"jack1e0"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2023-11-12"},{"lineNumber":82,"author":{"gitId":"jack1e0"},"content":"        FilterCommand expectedFilterCommand \u003d","lastModifiedDate":"2023-11-12"},{"lineNumber":83,"author":{"gitId":"jack1e0"},"content":"                new FilterCommand(new CombinedPredicate(preds));","lastModifiedDate":"2023-11-12"},{"lineNumber":84,"author":{"gitId":"jack1e0"},"content":"        CommandParserTestUtil.assertParseSuccess(parser, \" recur/daily\", expectedFilterCommand);","lastModifiedDate":"2023-11-12"},{"lineNumber":85,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":86,"author":{"gitId":"jack1e0"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2023-11-12"},{"lineNumber":87,"author":{"gitId":"jack1e0"},"content":"        CommandParserTestUtil.assertParseSuccess(parser, \" \\n recur/daily\\t\", expectedFilterCommand);","lastModifiedDate":"2023-11-12"},{"lineNumber":88,"author":{"gitId":"jack1e0"},"content":"    }","lastModifiedDate":"2023-11-12"},{"lineNumber":89,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":90,"author":{"gitId":"jack1e0"},"content":"    @Test","lastModifiedDate":"2023-10-29"},{"lineNumber":91,"author":{"gitId":"jack1e0"},"content":"    public void testMessageSuccessDueDate() {","lastModifiedDate":"2023-10-29"},{"lineNumber":92,"author":{"gitId":"jack1e0"},"content":"        FilterCommand filterDueDate \u003d null;","lastModifiedDate":"2023-10-29"},{"lineNumber":93,"author":{"gitId":"jack1e0"},"content":"        try {","lastModifiedDate":"2023-10-29"},{"lineNumber":94,"author":{"gitId":"jack1e0"},"content":"            filterDueDate \u003d parser.parse(\"d/01-01-2024\");","lastModifiedDate":"2023-10-29"},{"lineNumber":95,"author":{"gitId":"jack1e0"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2023-10-29"},{"lineNumber":96,"author":{"gitId":"jack1e0"},"content":"            return;","lastModifiedDate":"2023-10-29"},{"lineNumber":97,"author":{"gitId":"jack1e0"},"content":"        }","lastModifiedDate":"2023-10-29"},{"lineNumber":98,"author":{"gitId":"jack1e0"},"content":"        String successMessageDueDate \u003d \"Here are your tasks that are:\\nDue before: 01-01-2024\";","lastModifiedDate":"2023-10-29"},{"lineNumber":99,"author":{"gitId":"jack1e0"},"content":"        assertEquals(filterDueDate.getSuccessMessage(), successMessageDueDate);","lastModifiedDate":"2023-10-29"},{"lineNumber":100,"author":{"gitId":"jack1e0"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":101,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":102,"author":{"gitId":"jack1e0"},"content":"    @Test","lastModifiedDate":"2023-10-29"},{"lineNumber":103,"author":{"gitId":"jack1e0"},"content":"    public void testMessageSuccessPriority() {","lastModifiedDate":"2023-10-29"},{"lineNumber":104,"author":{"gitId":"jack1e0"},"content":"        FilterCommand filterPriority \u003d null;","lastModifiedDate":"2023-10-29"},{"lineNumber":105,"author":{"gitId":"jack1e0"},"content":"        try {","lastModifiedDate":"2023-10-29"},{"lineNumber":106,"author":{"gitId":"jack1e0"},"content":"            filterPriority \u003d parser.parse(\"p/3\");","lastModifiedDate":"2023-10-29"},{"lineNumber":107,"author":{"gitId":"jack1e0"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2023-10-29"},{"lineNumber":108,"author":{"gitId":"jack1e0"},"content":"            return;","lastModifiedDate":"2023-10-29"},{"lineNumber":109,"author":{"gitId":"jack1e0"},"content":"        }","lastModifiedDate":"2023-10-29"},{"lineNumber":110,"author":{"gitId":"jack1e0"},"content":"        String successMessagePriority \u003d \"Here are your tasks that are:\\nPriority: 3\";","lastModifiedDate":"2023-10-29"},{"lineNumber":111,"author":{"gitId":"jack1e0"},"content":"        assertEquals(filterPriority.getSuccessMessage(), successMessagePriority);","lastModifiedDate":"2023-10-29"},{"lineNumber":112,"author":{"gitId":"jack1e0"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":113,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":114,"author":{"gitId":"jack1e0"},"content":"    @Test","lastModifiedDate":"2023-10-29"},{"lineNumber":115,"author":{"gitId":"jack1e0"},"content":"    public void testMessageSuccessStatus() {","lastModifiedDate":"2023-10-29"},{"lineNumber":116,"author":{"gitId":"jack1e0"},"content":"        FilterCommand filterStatus \u003d null;","lastModifiedDate":"2023-10-29"},{"lineNumber":117,"author":{"gitId":"jack1e0"},"content":"        try {","lastModifiedDate":"2023-10-29"},{"lineNumber":118,"author":{"gitId":"jack1e0"},"content":"            filterStatus \u003d parser.parse(\"s/done\");","lastModifiedDate":"2023-10-29"},{"lineNumber":119,"author":{"gitId":"jack1e0"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2023-10-29"},{"lineNumber":120,"author":{"gitId":"jack1e0"},"content":"            return;","lastModifiedDate":"2023-10-29"},{"lineNumber":121,"author":{"gitId":"jack1e0"},"content":"        }","lastModifiedDate":"2023-10-29"},{"lineNumber":122,"author":{"gitId":"jack1e0"},"content":"        String successMessageStatus \u003d \"Here are your tasks that are:\\nStatus: done\";","lastModifiedDate":"2023-10-29"},{"lineNumber":123,"author":{"gitId":"jack1e0"},"content":"        assertEquals(filterStatus.getSuccessMessage(), successMessageStatus);","lastModifiedDate":"2023-10-29"},{"lineNumber":124,"author":{"gitId":"jack1e0"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":125,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":126,"author":{"gitId":"jack1e0"},"content":"    @Test","lastModifiedDate":"2023-11-12"},{"lineNumber":127,"author":{"gitId":"jack1e0"},"content":"    public void testMessageRecurStatus() {","lastModifiedDate":"2023-11-12"},{"lineNumber":128,"author":{"gitId":"jack1e0"},"content":"        FilterCommand filterStatus \u003d null;","lastModifiedDate":"2023-11-12"},{"lineNumber":129,"author":{"gitId":"jack1e0"},"content":"        try {","lastModifiedDate":"2023-11-12"},{"lineNumber":130,"author":{"gitId":"jack1e0"},"content":"            filterStatus \u003d parser.parse(\"recur/weekly\");","lastModifiedDate":"2023-11-12"},{"lineNumber":131,"author":{"gitId":"jack1e0"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2023-11-12"},{"lineNumber":132,"author":{"gitId":"jack1e0"},"content":"            return;","lastModifiedDate":"2023-11-12"},{"lineNumber":133,"author":{"gitId":"jack1e0"},"content":"        }","lastModifiedDate":"2023-11-12"},{"lineNumber":134,"author":{"gitId":"jack1e0"},"content":"        String successMessageStatus \u003d \"Here are your tasks that are:\\nRecurring: WEEKLY\";","lastModifiedDate":"2023-11-12"},{"lineNumber":135,"author":{"gitId":"jack1e0"},"content":"        assertEquals(filterStatus.getSuccessMessage(), successMessageStatus);","lastModifiedDate":"2023-11-12"},{"lineNumber":136,"author":{"gitId":"jack1e0"},"content":"    }","lastModifiedDate":"2023-11-12"},{"lineNumber":137,"author":{"gitId":"jack1e0"},"content":"}","lastModifiedDate":"2023-10-20"}],"authorContributionMap":{"yarnmengnus":1,"jack1e0":136}},{"path":"src/test/java/profplan/logic/parser/FindCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kiatkat"},"content":"package profplan.logic.parser;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"kiatkat"},"content":"import static profplan.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"kiatkat"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"kiatkat"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"kiatkat"},"content":"import profplan.logic.commands.FindCommand;","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"jack1e0"},"content":"import profplan.model.task.predicates.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-10-29"},{"lineNumber":11,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"kiatkat"},"content":"public class FindCommandParserTest {","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"kiatkat"},"content":"    private FindCommandParser parser \u003d new FindCommandParser();","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"kiatkat"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"kiatkat"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"kiatkat"},"content":"        CommandParserTestUtil.assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-10-14"},{"lineNumber":19,"author":{"gitId":"yarnmengnus"},"content":"                FindCommand.MESSAGE_FULL_HELP));","lastModifiedDate":"2023-11-11"},{"lineNumber":20,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"kiatkat"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"kiatkat"},"content":"    public void parse_validArgs_returnsFindCommand() {","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"kiatkat"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"kiatkat"},"content":"        FindCommand expectedFindCommand \u003d","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"kiatkat"},"content":"                new FindCommand(new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\")));","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"kiatkat"},"content":"        CommandParserTestUtil.assertParseSuccess(parser, \"Alice Bob\", expectedFindCommand);","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"kiatkat"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"kiatkat"},"content":"        CommandParserTestUtil.assertParseSuccess(parser, \" \\n Alice \\n \\t Bob  \\t\", expectedFindCommand);","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"kiatkat"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"yarnmengnus":1,"jack1e0":1,"kiatkat":31}},{"path":"src/test/java/profplan/logic/parser/HelpCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"yarnmengnus"},"content":"package profplan.logic.parser;","lastModifiedDate":"2023-10-30"},{"lineNumber":2,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":3,"author":{"gitId":"yarnmengnus"},"content":"import static profplan.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-30"},{"lineNumber":4,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":5,"author":{"gitId":"yarnmengnus"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-30"},{"lineNumber":6,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":7,"author":{"gitId":"yarnmengnus"},"content":"import profplan.logic.commands.HelpCommand;","lastModifiedDate":"2023-10-30"},{"lineNumber":8,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":9,"author":{"gitId":"yarnmengnus"},"content":"public class HelpCommandParserTest {","lastModifiedDate":"2023-10-30"},{"lineNumber":10,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":11,"author":{"gitId":"yarnmengnus"},"content":"    private HelpCommandParser parser \u003d new HelpCommandParser();","lastModifiedDate":"2023-10-30"},{"lineNumber":12,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":13,"author":{"gitId":"yarnmengnus"},"content":"    @Test","lastModifiedDate":"2023-10-30"},{"lineNumber":14,"author":{"gitId":"yarnmengnus"},"content":"    public void parse_emptyArg_returnsEmptyHelpCommand() {","lastModifiedDate":"2023-10-30"},{"lineNumber":15,"author":{"gitId":"yarnmengnus"},"content":"        CommandParserTestUtil.assertParseSuccess(parser, \"     \", new HelpCommand(\"\"));","lastModifiedDate":"2023-11-10"},{"lineNumber":16,"author":{"gitId":"yarnmengnus"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":17,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":18,"author":{"gitId":"yarnmengnus"},"content":"    @Test","lastModifiedDate":"2023-10-30"},{"lineNumber":19,"author":{"gitId":"yarnmengnus"},"content":"    public void parse_validArgs_returnsHelpCommand() {","lastModifiedDate":"2023-10-30"},{"lineNumber":20,"author":{"gitId":"yarnmengnus"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2023-10-30"},{"lineNumber":21,"author":{"gitId":"yarnmengnus"},"content":"        HelpCommand expectedHelpCommand \u003d","lastModifiedDate":"2023-10-30"},{"lineNumber":22,"author":{"gitId":"yarnmengnus"},"content":"                new HelpCommand(\"add\");","lastModifiedDate":"2023-10-30"},{"lineNumber":23,"author":{"gitId":"yarnmengnus"},"content":"        CommandParserTestUtil.assertParseSuccess(parser, \"add\", expectedHelpCommand);","lastModifiedDate":"2023-10-30"},{"lineNumber":24,"author":{"gitId":"yarnmengnus"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":25,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":26,"author":{"gitId":"yarnmengnus"},"content":"    @Test","lastModifiedDate":"2023-10-30"},{"lineNumber":27,"author":{"gitId":"yarnmengnus"},"content":"    public void parse_invalidArgs_returnsHelpCommand() {","lastModifiedDate":"2023-10-30"},{"lineNumber":28,"author":{"gitId":"yarnmengnus"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2023-10-30"},{"lineNumber":29,"author":{"gitId":"yarnmengnus"},"content":"        CommandParserTestUtil.assertParseFailure(parser, \"invalid Command\",","lastModifiedDate":"2023-10-30"},{"lineNumber":30,"author":{"gitId":"yarnmengnus"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-10-30"},{"lineNumber":31,"author":{"gitId":"yarnmengnus"},"content":"                HelpCommand.MESSAGE_FULL_HELP));","lastModifiedDate":"2023-11-11"},{"lineNumber":32,"author":{"gitId":"yarnmengnus"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":33,"author":{"gitId":"yarnmengnus"},"content":"}","lastModifiedDate":"2023-10-30"}],"authorContributionMap":{"yarnmengnus":33}},{"path":"src/test/java/profplan/logic/parser/MarkCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"newway1814"},"content":"package profplan.logic.parser;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":3,"author":{"gitId":"newway1814"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-11-09"},{"lineNumber":4,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":5,"author":{"gitId":"newway1814"},"content":"import profplan.logic.commands.MarkCommand;","lastModifiedDate":"2023-11-09"},{"lineNumber":6,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":7,"author":{"gitId":"newway1814"},"content":"public class MarkCommandParserTest {","lastModifiedDate":"2023-11-09"},{"lineNumber":8,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":9,"author":{"gitId":"newway1814"},"content":"    private MarkCommandParser parser \u003d new MarkCommandParser();","lastModifiedDate":"2023-11-09"},{"lineNumber":10,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":11,"author":{"gitId":"newway1814"},"content":"    @Test","lastModifiedDate":"2023-11-09"},{"lineNumber":12,"author":{"gitId":"newway1814"},"content":"    public void parse_validArgs_returnsMarkCommand() {","lastModifiedDate":"2023-11-09"},{"lineNumber":13,"author":{"gitId":"newway1814"},"content":"        CommandParserTestUtil.assertParseSuccess(parser, \"1\", new MarkCommand(1));","lastModifiedDate":"2023-11-09"},{"lineNumber":14,"author":{"gitId":"newway1814"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":15,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":16,"author":{"gitId":"newway1814"},"content":"    @Test","lastModifiedDate":"2023-11-09"},{"lineNumber":17,"author":{"gitId":"newway1814"},"content":"    public void parse_negativeNumber_throwsParseException() {","lastModifiedDate":"2023-11-09"},{"lineNumber":18,"author":{"gitId":"newway1814"},"content":"        CommandParserTestUtil.assertParseFailure(parser, \"-1\", MarkCommand.MESSAGE_INVALID_NUMBER);","lastModifiedDate":"2023-11-09"},{"lineNumber":19,"author":{"gitId":"newway1814"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":20,"author":{"gitId":"newway1814"},"content":"    @Test","lastModifiedDate":"2023-11-09"},{"lineNumber":21,"author":{"gitId":"newway1814"},"content":"    public void parse_zero_throwsParseException() {","lastModifiedDate":"2023-11-09"},{"lineNumber":22,"author":{"gitId":"newway1814"},"content":"        CommandParserTestUtil.assertParseFailure(parser, \"0\", MarkCommand.MESSAGE_INVALID_NUMBER);","lastModifiedDate":"2023-11-09"},{"lineNumber":23,"author":{"gitId":"newway1814"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":24,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":25,"author":{"gitId":"newway1814"},"content":"    @Test","lastModifiedDate":"2023-11-09"},{"lineNumber":26,"author":{"gitId":"newway1814"},"content":"    public void parse_nonNumeric_throwsParseException() {","lastModifiedDate":"2023-11-09"},{"lineNumber":27,"author":{"gitId":"newway1814"},"content":"        CommandParserTestUtil.assertParseFailure(parser, \"a\", String.format(","lastModifiedDate":"2023-11-09"},{"lineNumber":28,"author":{"gitId":"yarnmengnus"},"content":"            MarkCommand.MESSAGE_FULL_HELP));","lastModifiedDate":"2023-11-11"},{"lineNumber":29,"author":{"gitId":"newway1814"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":30,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":31,"author":{"gitId":"newway1814"},"content":"    @Test","lastModifiedDate":"2023-11-09"},{"lineNumber":32,"author":{"gitId":"newway1814"},"content":"    public void parse_emptyString_throwsParseException() {","lastModifiedDate":"2023-11-09"},{"lineNumber":33,"author":{"gitId":"newway1814"},"content":"        CommandParserTestUtil.assertParseFailure(parser, \"\", String.format(","lastModifiedDate":"2023-11-09"},{"lineNumber":34,"author":{"gitId":"yarnmengnus"},"content":"            MarkCommand.MESSAGE_FULL_HELP));","lastModifiedDate":"2023-11-11"},{"lineNumber":35,"author":{"gitId":"newway1814"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":36,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":37,"author":{"gitId":"newway1814"},"content":"    @Test","lastModifiedDate":"2023-11-09"},{"lineNumber":38,"author":{"gitId":"newway1814"},"content":"    public void parse_whitespaceOnly_throwsParseException() {","lastModifiedDate":"2023-11-09"},{"lineNumber":39,"author":{"gitId":"newway1814"},"content":"        CommandParserTestUtil.assertParseFailure(parser, \"   \", String.format(","lastModifiedDate":"2023-11-09"},{"lineNumber":40,"author":{"gitId":"yarnmengnus"},"content":"            MarkCommand.MESSAGE_FULL_HELP));","lastModifiedDate":"2023-11-11"},{"lineNumber":41,"author":{"gitId":"newway1814"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":42,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":43,"author":{"gitId":"newway1814"},"content":"    @Test","lastModifiedDate":"2023-11-09"},{"lineNumber":44,"author":{"gitId":"newway1814"},"content":"    public void parse_validNumberWithWhitespace_returnsMarkCommand() {","lastModifiedDate":"2023-11-09"},{"lineNumber":45,"author":{"gitId":"newway1814"},"content":"        CommandParserTestUtil.assertParseSuccess(parser, \" 3 \", new MarkCommand(3));","lastModifiedDate":"2023-11-09"},{"lineNumber":46,"author":{"gitId":"newway1814"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":47,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":48,"author":{"gitId":"newway1814"},"content":"}","lastModifiedDate":"2023-11-09"}],"authorContributionMap":{"yarnmengnus":3,"newway1814":45}},{"path":"src/test/java/profplan/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kiatkat"},"content":"package profplan.logic.parser;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"kiatkat"},"content":"import static profplan.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-05-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-05-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-05-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":14,"author":{"gitId":"kiatkat"},"content":"import profplan.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"kiatkat"},"content":"import profplan.model.tag.Tag;","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"newway1814"},"content":"import profplan.model.task.Name;","lastModifiedDate":"2023-10-16"},{"lineNumber":17,"author":{"gitId":"eyelessrhyme7"},"content":"import profplan.model.task.Priority;","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"kiatkat"},"content":"import profplan.testutil.Assert;","lastModifiedDate":"2023-10-14"},{"lineNumber":19,"author":{"gitId":"kiatkat"},"content":"import profplan.testutil.TypicalIndexes;","lastModifiedDate":"2023-10-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22"},{"lineNumber":23,"author":{"gitId":"eyelessrhyme7"},"content":"    private static final String INVALID_PRIORITY \u003d \"+651234\";","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":27,"author":{"gitId":"eyelessrhyme7"},"content":"    private static final String VALID_PRIORITY \u003d \"6\";","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_1 \u003d \"friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_2 \u003d \"neighbour\";","lastModifiedDate":"2017-05-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"kiatkat"},"content":"        Assert.assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":40,"author":{"gitId":"kiatkat"},"content":"        Assert.assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2023-10-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":47,"author":{"gitId":"newway1814"},"content":"        assertEquals(TypicalIndexes.INDEX_FIRST_TASK, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2023-10-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":50,"author":{"gitId":"newway1814"},"content":"        assertEquals(TypicalIndexes.INDEX_FIRST_TASK, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2023-10-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":55,"author":{"gitId":"kiatkat"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2023-10-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":60,"author":{"gitId":"kiatkat"},"content":"        Assert.assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2023-10-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":77,"author":{"gitId":"eyelessrhyme7"},"content":"    public void parsePriority_null_throwsNullPointerException() {","lastModifiedDate":"2023-10-17"},{"lineNumber":78,"author":{"gitId":"eyelessrhyme7"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePriority((String) null));","lastModifiedDate":"2023-10-17"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":82,"author":{"gitId":"eyelessrhyme7"},"content":"    public void parsePriority_invalidValue_throwsParseException() {","lastModifiedDate":"2023-10-17"},{"lineNumber":83,"author":{"gitId":"eyelessrhyme7"},"content":"        Assert.assertThrows(ParseException.class, () -\u003e ParserUtil.parsePriority(INVALID_PRIORITY));","lastModifiedDate":"2023-10-17"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":87,"author":{"gitId":"eyelessrhyme7"},"content":"    public void parsePriority_validValueWithoutWhitespace_returnsPriority() throws Exception {","lastModifiedDate":"2023-10-17"},{"lineNumber":88,"author":{"gitId":"eyelessrhyme7"},"content":"        Priority expectedPriority \u003d new Priority(VALID_PRIORITY);","lastModifiedDate":"2023-10-17"},{"lineNumber":89,"author":{"gitId":"eyelessrhyme7"},"content":"        assertEquals(expectedPriority, ParserUtil.parsePriority(VALID_PRIORITY));","lastModifiedDate":"2023-10-17"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":93,"author":{"gitId":"eyelessrhyme7"},"content":"    public void parsePriority_validValueWithWhitespace_returnsTrimmedPriority() throws Exception {","lastModifiedDate":"2023-10-17"},{"lineNumber":94,"author":{"gitId":"eyelessrhyme7"},"content":"        String priorityWithWhitespace \u003d WHITESPACE + VALID_PRIORITY + WHITESPACE;","lastModifiedDate":"2023-10-17"},{"lineNumber":95,"author":{"gitId":"eyelessrhyme7"},"content":"        Priority expectedPriority \u003d new Priority(VALID_PRIORITY);","lastModifiedDate":"2023-10-17"},{"lineNumber":96,"author":{"gitId":"eyelessrhyme7"},"content":"        assertEquals(expectedPriority, ParserUtil.parsePriority(priorityWithWhitespace));","lastModifiedDate":"2023-10-17"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public void parseTag_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":101,"author":{"gitId":"kiatkat"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTag(null));","lastModifiedDate":"2023-10-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void parseTag_invalidValue_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":106,"author":{"gitId":"kiatkat"},"content":"        Assert.assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(INVALID_TAG));","lastModifiedDate":"2023-10-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(VALID_TAG_1));","lastModifiedDate":"2017-05-30"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        String tagWithWhitespace \u003d WHITESPACE + VALID_TAG_1 + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(tagWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void parseTags_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":124,"author":{"gitId":"kiatkat"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTags(null));","lastModifiedDate":"2023-10-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithInvalidTags_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":129,"author":{"gitId":"kiatkat"},"content":"        Assert.assertThrows(ParseException.class, () -\u003e ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, INVALID_TAG)));","lastModifiedDate":"2023-10-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public void parseTags_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertTrue(ParserUtil.parseTags(Collections.emptyList()).isEmpty());","lastModifiedDate":"2017-05-22"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithValidTags_returnsTagSet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e actualTagSet \u003d ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, VALID_TAG_2));","lastModifiedDate":"2017-05-22"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e expectedTagSet \u003d new HashSet\u003cTag\u003e(Arrays.asList(new Tag(VALID_TAG_1), new Tag(VALID_TAG_2)));","lastModifiedDate":"2017-05-22"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        assertEquals(expectedTagSet, actualTagSet);","lastModifiedDate":"2017-05-22"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":144,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"kiatkat":14,"eyelessrhyme7":14,"-":113,"newway1814":3}},{"path":"src/test/java/profplan/logic/parser/ProfPlanParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kiatkat"},"content":"package profplan.logic.parser;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"kiatkat"},"content":"import static profplan.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"kiatkat"},"content":"import static profplan.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"kiatkat"},"content":"import profplan.logic.commands.AddCommand;","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"kiatkat"},"content":"import profplan.logic.commands.ClearCommand;","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"kiatkat"},"content":"import profplan.logic.commands.DeleteCommand;","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"kiatkat"},"content":"import profplan.logic.commands.EditCommand;","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"newway1814"},"content":"import profplan.logic.commands.EditCommand.EditTaskDescriptor;","lastModifiedDate":"2023-10-16"},{"lineNumber":19,"author":{"gitId":"kiatkat"},"content":"import profplan.logic.commands.ExitCommand;","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"kiatkat"},"content":"import profplan.logic.commands.FindCommand;","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"kiatkat"},"content":"import profplan.logic.commands.HelpCommand;","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"kiatkat"},"content":"import profplan.logic.commands.ListCommand;","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"kiatkat"},"content":"import profplan.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"newway1814"},"content":"import profplan.model.task.Task;","lastModifiedDate":"2023-10-16"},{"lineNumber":25,"author":{"gitId":"jack1e0"},"content":"import profplan.model.task.predicates.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-10-29"},{"lineNumber":26,"author":{"gitId":"kiatkat"},"content":"import profplan.testutil.Assert;","lastModifiedDate":"2023-10-14"},{"lineNumber":27,"author":{"gitId":"newway1814"},"content":"import profplan.testutil.EditTaskDescriptorBuilder;","lastModifiedDate":"2023-10-16"},{"lineNumber":28,"author":{"gitId":"newway1814"},"content":"import profplan.testutil.TaskBuilder;","lastModifiedDate":"2023-10-16"},{"lineNumber":29,"author":{"gitId":"newway1814"},"content":"import profplan.testutil.TaskUtil;","lastModifiedDate":"2023-10-16"},{"lineNumber":30,"author":{"gitId":"kiatkat"},"content":"import profplan.testutil.TypicalIndexes;","lastModifiedDate":"2023-10-14"},{"lineNumber":31,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"kiatkat"},"content":"public class ProfPlanParserTest {","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"kiatkat"},"content":"    private final ProfPlanParser parser \u003d new ProfPlanParser();","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"newway1814"},"content":"        Task task \u003d new TaskBuilder().build();","lastModifiedDate":"2023-10-16"},{"lineNumber":39,"author":{"gitId":"newway1814"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(TaskUtil.getAddCommand(task));","lastModifiedDate":"2023-10-16"},{"lineNumber":40,"author":{"gitId":"newway1814"},"content":"        assertEquals(new AddCommand(task), command);","lastModifiedDate":"2023-10-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"yarnmengnus"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(DeleteCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2023-10-30"},{"lineNumber":52,"author":{"gitId":"yarnmengnus"},"content":"            + TypicalIndexes.INDEX_FIRST_TASK.getOneBased());","lastModifiedDate":"2023-10-30"},{"lineNumber":53,"author":{"gitId":"newway1814"},"content":"        assertEquals(new DeleteCommand(TypicalIndexes.INDEX_FIRST_TASK), command);","lastModifiedDate":"2023-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"newway1814"},"content":"        Task task \u003d new TaskBuilder().build();","lastModifiedDate":"2023-10-16"},{"lineNumber":59,"author":{"gitId":"newway1814"},"content":"        EditTaskDescriptor descriptor \u003d new EditTaskDescriptorBuilder(task).build();","lastModifiedDate":"2023-10-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"yarnmengnus"},"content":"                + TypicalIndexes.INDEX_FIRST_TASK.getOneBased() + \" \"","lastModifiedDate":"2023-10-30"},{"lineNumber":62,"author":{"gitId":"yarnmengnus"},"content":"                + TaskUtil.getEditTaskDescriptorDetails(descriptor));","lastModifiedDate":"2023-10-30"},{"lineNumber":63,"author":{"gitId":"newway1814"},"content":"        assertEquals(new EditCommand(TypicalIndexes.INDEX_FIRST_TASK, descriptor), command);","lastModifiedDate":"2023-10-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12"},{"lineNumber":75,"author":{"gitId":"yarnmengnus"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(FindCommand.COMMAND_WORD + \" \" + keywords.stream()","lastModifiedDate":"2023-10-30"},{"lineNumber":76,"author":{"gitId":"yarnmengnus"},"content":"            .collect(Collectors.joining(\" \")));","lastModifiedDate":"2023-10-30"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertEquals(new FindCommand(new NameContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2017-06-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":92,"author":{"gitId":"kiatkat"},"content":"        Assert.assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-10-14"},{"lineNumber":93,"author":{"gitId":"kiatkat"},"content":"                HelpCommand.MESSAGE_USAGE), () -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2023-10-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":98,"author":{"gitId":"kiatkat"},"content":"        Assert.assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2023-10-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"yarnmengnus":6,"jack1e0":1,"kiatkat":21,"-":60,"newway1814":12}},{"path":"src/test/java/profplan/logic/parser/UnmarkCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"newway1814"},"content":"package profplan.logic.parser;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":3,"author":{"gitId":"newway1814"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-11-09"},{"lineNumber":4,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":5,"author":{"gitId":"newway1814"},"content":"import profplan.logic.commands.UnmarkCommand;","lastModifiedDate":"2023-11-09"},{"lineNumber":6,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":7,"author":{"gitId":"newway1814"},"content":"public class UnmarkCommandParserTest {","lastModifiedDate":"2023-11-09"},{"lineNumber":8,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":9,"author":{"gitId":"newway1814"},"content":"    private UnmarkCommandParser parser \u003d new UnmarkCommandParser();","lastModifiedDate":"2023-11-09"},{"lineNumber":10,"author":{"gitId":"newway1814"},"content":"    @Test","lastModifiedDate":"2023-11-09"},{"lineNumber":11,"author":{"gitId":"newway1814"},"content":"    public void parse_validArgs_returnsMarkCommand() {","lastModifiedDate":"2023-11-09"},{"lineNumber":12,"author":{"gitId":"newway1814"},"content":"        CommandParserTestUtil.assertParseSuccess(parser, \"1\", new UnmarkCommand(1));","lastModifiedDate":"2023-11-09"},{"lineNumber":13,"author":{"gitId":"newway1814"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":14,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":15,"author":{"gitId":"newway1814"},"content":"    @Test","lastModifiedDate":"2023-11-09"},{"lineNumber":16,"author":{"gitId":"newway1814"},"content":"    public void parse_negativeNumber_throwsParseException() {","lastModifiedDate":"2023-11-09"},{"lineNumber":17,"author":{"gitId":"newway1814"},"content":"        CommandParserTestUtil.assertParseFailure(parser, \"-1\", UnmarkCommand.MESSAGE_INVALID_NUMBER);","lastModifiedDate":"2023-11-09"},{"lineNumber":18,"author":{"gitId":"newway1814"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":19,"author":{"gitId":"newway1814"},"content":"    @Test","lastModifiedDate":"2023-11-09"},{"lineNumber":20,"author":{"gitId":"newway1814"},"content":"    public void parse_zero_throwsParseException() {","lastModifiedDate":"2023-11-09"},{"lineNumber":21,"author":{"gitId":"newway1814"},"content":"        CommandParserTestUtil.assertParseFailure(parser, \"0\", UnmarkCommand.MESSAGE_INVALID_NUMBER);","lastModifiedDate":"2023-11-09"},{"lineNumber":22,"author":{"gitId":"newway1814"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":23,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":24,"author":{"gitId":"newway1814"},"content":"    @Test","lastModifiedDate":"2023-11-09"},{"lineNumber":25,"author":{"gitId":"newway1814"},"content":"    public void parse_nonNumeric_throwsParseException() {","lastModifiedDate":"2023-11-09"},{"lineNumber":26,"author":{"gitId":"newway1814"},"content":"        CommandParserTestUtil.assertParseFailure(parser, \"a\", String.format(","lastModifiedDate":"2023-11-09"},{"lineNumber":27,"author":{"gitId":"yarnmengnus"},"content":"            UnmarkCommand.MESSAGE_FULL_HELP));","lastModifiedDate":"2023-11-11"},{"lineNumber":28,"author":{"gitId":"newway1814"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":29,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":30,"author":{"gitId":"newway1814"},"content":"    @Test","lastModifiedDate":"2023-11-09"},{"lineNumber":31,"author":{"gitId":"newway1814"},"content":"    public void parse_emptyString_throwsParseException() {","lastModifiedDate":"2023-11-09"},{"lineNumber":32,"author":{"gitId":"newway1814"},"content":"        CommandParserTestUtil.assertParseFailure(parser, \"\", String.format(","lastModifiedDate":"2023-11-09"},{"lineNumber":33,"author":{"gitId":"yarnmengnus"},"content":"            UnmarkCommand.MESSAGE_FULL_HELP));","lastModifiedDate":"2023-11-11"},{"lineNumber":34,"author":{"gitId":"newway1814"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":35,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":36,"author":{"gitId":"newway1814"},"content":"    @Test","lastModifiedDate":"2023-11-09"},{"lineNumber":37,"author":{"gitId":"newway1814"},"content":"    public void parse_whitespaceOnly_throwsParseException() {","lastModifiedDate":"2023-11-09"},{"lineNumber":38,"author":{"gitId":"newway1814"},"content":"        CommandParserTestUtil.assertParseFailure(parser, \"   \", String.format(","lastModifiedDate":"2023-11-09"},{"lineNumber":39,"author":{"gitId":"yarnmengnus"},"content":"            UnmarkCommand.MESSAGE_FULL_HELP));","lastModifiedDate":"2023-11-11"},{"lineNumber":40,"author":{"gitId":"newway1814"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":41,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":42,"author":{"gitId":"newway1814"},"content":"    @Test","lastModifiedDate":"2023-11-09"},{"lineNumber":43,"author":{"gitId":"newway1814"},"content":"    public void parse_validNumberWithWhitespace_returnsMarkCommand() {","lastModifiedDate":"2023-11-09"},{"lineNumber":44,"author":{"gitId":"newway1814"},"content":"        CommandParserTestUtil.assertParseSuccess(parser, \" 3 \", new UnmarkCommand(3));","lastModifiedDate":"2023-11-09"},{"lineNumber":45,"author":{"gitId":"newway1814"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":46,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":47,"author":{"gitId":"newway1814"},"content":"}","lastModifiedDate":"2023-11-09"}],"authorContributionMap":{"yarnmengnus":3,"newway1814":44}},{"path":"src/test/java/profplan/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kiatkat"},"content":"package profplan.model;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"newway1814"},"content":"import static profplan.model.Model.PREDICATE_SHOW_ALL_TASKS;","lastModifiedDate":"2023-10-16"},{"lineNumber":7,"author":{"gitId":"newway1814"},"content":"import static profplan.testutil.TypicalTasks.ALICE;","lastModifiedDate":"2023-11-10"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":15,"author":{"gitId":"kiatkat"},"content":"import profplan.commons.core.GuiSettings;","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"jack1e0"},"content":"import profplan.model.task.predicates.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-10-29"},{"lineNumber":17,"author":{"gitId":"kiatkat"},"content":"import profplan.testutil.Assert;","lastModifiedDate":"2023-10-14"},{"lineNumber":18,"author":{"gitId":"kiatkat"},"content":"import profplan.testutil.ProfPlanBuilder;","lastModifiedDate":"2023-10-14"},{"lineNumber":19,"author":{"gitId":"newway1814"},"content":"import profplan.testutil.TypicalTasks;","lastModifiedDate":"2023-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"kiatkat"},"content":"        assertEquals(new ProfPlan(), new ProfPlan(modelManager.getProfPlan()));","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"kiatkat"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"kiatkat"},"content":"        userPrefs.setProfPlanFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2023-10-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":47,"author":{"gitId":"kiatkat"},"content":"        userPrefs.setProfPlanFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2023-10-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"kiatkat"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2023-10-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"kiatkat"},"content":"    public void setProfPlanFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2023-10-13"},{"lineNumber":65,"author":{"gitId":"kiatkat"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e modelManager.setProfPlanFilePath(null));","lastModifiedDate":"2023-10-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"kiatkat"},"content":"    public void setProfPlanFilePath_validPath_setsProfPlanFilePath() {","lastModifiedDate":"2023-10-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"kiatkat"},"content":"        modelManager.setProfPlanFilePath(path);","lastModifiedDate":"2023-10-13"},{"lineNumber":72,"author":{"gitId":"kiatkat"},"content":"        assertEquals(path, modelManager.getProfPlanFilePath());","lastModifiedDate":"2023-10-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"newway1814"},"content":"    public void hasTask_nullTask_throwsNullPointerException() {","lastModifiedDate":"2023-10-16"},{"lineNumber":77,"author":{"gitId":"newway1814"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e modelManager.hasTask(null));","lastModifiedDate":"2023-10-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"newway1814"},"content":"    public void hasTask_taskNotInProfPlan_returnsFalse() {","lastModifiedDate":"2023-10-16"},{"lineNumber":82,"author":{"gitId":"newway1814"},"content":"        assertFalse(modelManager.hasTask(ALICE));","lastModifiedDate":"2023-11-10"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"newway1814"},"content":"    public void hasTask_taskInProfPlan_returnsTrue() {","lastModifiedDate":"2023-10-16"},{"lineNumber":87,"author":{"gitId":"newway1814"},"content":"        modelManager.addTask(ALICE);","lastModifiedDate":"2023-11-10"},{"lineNumber":88,"author":{"gitId":"newway1814"},"content":"        assertTrue(modelManager.hasTask(ALICE));","lastModifiedDate":"2023-11-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":92,"author":{"gitId":"newway1814"},"content":"    public void getFilteredTaskList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-10-16"},{"lineNumber":93,"author":{"gitId":"newway1814"},"content":"        Assert.assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredTaskList().remove(0));","lastModifiedDate":"2023-10-16"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"newway1814"},"content":"        ProfPlan profPlan \u003d new ProfPlanBuilder().withTask(","lastModifiedDate":"2023-10-16"},{"lineNumber":99,"author":{"gitId":"newway1814"},"content":"                ALICE).withTask(TypicalTasks.BENSON).build();","lastModifiedDate":"2023-11-10"},{"lineNumber":100,"author":{"gitId":"kiatkat"},"content":"        ProfPlan differentProfPlan \u003d new ProfPlan();","lastModifiedDate":"2023-10-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":102,"author":{"gitId":"kiatkat"},"content":"        UserConfigs userConfigs \u003d new UserConfigs();","lastModifiedDate":"2023-11-01"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":105,"author":{"gitId":"kiatkat"},"content":"        modelManager \u003d new ModelManager(profPlan, userPrefs, userConfigs);","lastModifiedDate":"2023-11-01"},{"lineNumber":106,"author":{"gitId":"kiatkat"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(profPlan, userPrefs, userConfigs);","lastModifiedDate":"2023-11-01"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        // different addressBook -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":119,"author":{"gitId":"kiatkat"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentProfPlan, userPrefs, userConfigs)));","lastModifiedDate":"2023-11-01"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":122,"author":{"gitId":"newway1814"},"content":"        String[] keywords \u003d ALICE.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2023-11-10"},{"lineNumber":123,"author":{"gitId":"newway1814"},"content":"        modelManager.updateFilteredTaskList(new NameContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2023-10-16"},{"lineNumber":124,"author":{"gitId":"kiatkat"},"content":"        assertFalse(modelManager.equals(new ModelManager(profPlan, userPrefs, userConfigs)));","lastModifiedDate":"2023-11-01"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":127,"author":{"gitId":"newway1814"},"content":"        modelManager.updateFilteredTaskList(PREDICATE_SHOW_ALL_TASKS);","lastModifiedDate":"2023-10-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":131,"author":{"gitId":"kiatkat"},"content":"        differentUserPrefs.setProfPlanFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2023-10-13"},{"lineNumber":132,"author":{"gitId":"kiatkat"},"content":"        assertFalse(modelManager.equals(new ModelManager(profPlan, differentUserPrefs, userConfigs)));","lastModifiedDate":"2023-11-01"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"jack1e0":1,"kiatkat":22,"-":94,"newway1814":17}},{"path":"src/test/java/profplan/model/ProfPlanTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kiatkat"},"content":"package profplan.model;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"kiatkat"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"kiatkat"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"kiatkat"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"kiatkat"},"content":"import static profplan.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"kiatkat"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"kiatkat"},"content":"import java.util.Collection;","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"kiatkat"},"content":"import java.util.Collections;","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"kiatkat"},"content":"import java.util.List;","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"kiatkat"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"kiatkat"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"kiatkat"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"newway1814"},"content":"import profplan.model.task.Task;","lastModifiedDate":"2023-10-16"},{"lineNumber":18,"author":{"gitId":"newway1814"},"content":"import profplan.model.task.exceptions.DuplicateTaskException;","lastModifiedDate":"2023-10-16"},{"lineNumber":19,"author":{"gitId":"kiatkat"},"content":"import profplan.testutil.Assert;","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"newway1814"},"content":"import profplan.testutil.TaskBuilder;","lastModifiedDate":"2023-10-16"},{"lineNumber":21,"author":{"gitId":"newway1814"},"content":"import profplan.testutil.TypicalTasks;","lastModifiedDate":"2023-10-16"},{"lineNumber":22,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"kiatkat"},"content":"public class ProfPlanTest {","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"kiatkat"},"content":"    private final ProfPlan profPlan \u003d new ProfPlan();","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"kiatkat"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"kiatkat"},"content":"    public void constructor() {","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"newway1814"},"content":"        assertEquals(Collections.emptyList(), profPlan.getTaskList());","lastModifiedDate":"2023-10-16"},{"lineNumber":30,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"kiatkat"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"kiatkat"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"kiatkat"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e profPlan.resetData(null));","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"kiatkat"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"kiatkat"},"content":"    public void resetData_withValidReadOnlyProfPlan_replacesData() {","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"newway1814"},"content":"        ProfPlan newData \u003d TypicalTasks.getTypicalProfPlan();","lastModifiedDate":"2023-10-16"},{"lineNumber":40,"author":{"gitId":"kiatkat"},"content":"        profPlan.resetData(newData);","lastModifiedDate":"2023-10-13"},{"lineNumber":41,"author":{"gitId":"kiatkat"},"content":"        assertEquals(newData, profPlan);","lastModifiedDate":"2023-10-13"},{"lineNumber":42,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":43,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":44,"author":{"gitId":"kiatkat"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":45,"author":{"gitId":"newway1814"},"content":"    public void resetData_withDuplicateTasks_throwsDuplicateTaskException() {","lastModifiedDate":"2023-10-16"},{"lineNumber":46,"author":{"gitId":"newway1814"},"content":"        // Two tasks with the same identity fields","lastModifiedDate":"2023-10-16"},{"lineNumber":47,"author":{"gitId":"kiatkat"},"content":"        Task editedAlice \u003d new TaskBuilder(TypicalTasks.ALICE)","lastModifiedDate":"2023-10-29"},{"lineNumber":48,"author":{"gitId":"kiatkat"},"content":"                .withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2023-10-14"},{"lineNumber":49,"author":{"gitId":"kiatkat"},"content":"                .build();","lastModifiedDate":"2023-10-13"},{"lineNumber":50,"author":{"gitId":"newway1814"},"content":"        List\u003cTask\u003e newTasks \u003d Arrays.asList(TypicalTasks.ALICE, editedAlice);","lastModifiedDate":"2023-10-16"},{"lineNumber":51,"author":{"gitId":"newway1814"},"content":"        ProfPlanStub newData \u003d new ProfPlanStub(newTasks);","lastModifiedDate":"2023-10-16"},{"lineNumber":52,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":53,"author":{"gitId":"newway1814"},"content":"        Assert.assertThrows(DuplicateTaskException.class, () -\u003e profPlan.resetData(newData));","lastModifiedDate":"2023-10-16"},{"lineNumber":54,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":55,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":56,"author":{"gitId":"kiatkat"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":57,"author":{"gitId":"newway1814"},"content":"    public void hasTask_nullTask_throwsNullPointerException() {","lastModifiedDate":"2023-10-16"},{"lineNumber":58,"author":{"gitId":"newway1814"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e profPlan.hasTask(null));","lastModifiedDate":"2023-10-16"},{"lineNumber":59,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":60,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":61,"author":{"gitId":"kiatkat"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":62,"author":{"gitId":"newway1814"},"content":"    public void hasTask_taskNotInProfPlan_returnsFalse() {","lastModifiedDate":"2023-10-16"},{"lineNumber":63,"author":{"gitId":"newway1814"},"content":"        assertFalse(profPlan.hasTask(TypicalTasks.ALICE));","lastModifiedDate":"2023-10-16"},{"lineNumber":64,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":65,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":66,"author":{"gitId":"kiatkat"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":67,"author":{"gitId":"newway1814"},"content":"    public void hasTask_taskInProfPlan_returnsTrue() {","lastModifiedDate":"2023-10-16"},{"lineNumber":68,"author":{"gitId":"newway1814"},"content":"        profPlan.addTask(TypicalTasks.ALICE);","lastModifiedDate":"2023-10-16"},{"lineNumber":69,"author":{"gitId":"newway1814"},"content":"        assertTrue(profPlan.hasTask(TypicalTasks.ALICE));","lastModifiedDate":"2023-10-16"},{"lineNumber":70,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":71,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":72,"author":{"gitId":"kiatkat"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":73,"author":{"gitId":"newway1814"},"content":"    public void hasTask_taskWithSameIdentityFieldsInProfPlan_returnsTrue() {","lastModifiedDate":"2023-10-16"},{"lineNumber":74,"author":{"gitId":"newway1814"},"content":"        profPlan.addTask(TypicalTasks.ALICE);","lastModifiedDate":"2023-10-16"},{"lineNumber":75,"author":{"gitId":"kiatkat"},"content":"        Task editedAlice \u003d new TaskBuilder(TypicalTasks.ALICE)","lastModifiedDate":"2023-10-29"},{"lineNumber":76,"author":{"gitId":"kiatkat"},"content":"                .withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2023-10-14"},{"lineNumber":77,"author":{"gitId":"kiatkat"},"content":"                .build();","lastModifiedDate":"2023-10-13"},{"lineNumber":78,"author":{"gitId":"newway1814"},"content":"        assertTrue(profPlan.hasTask(editedAlice));","lastModifiedDate":"2023-10-16"},{"lineNumber":79,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":80,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":81,"author":{"gitId":"newway1814"},"content":"    //    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":82,"author":{"gitId":"newway1814"},"content":"    //    public void getTaskList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-10-26"},{"lineNumber":83,"author":{"gitId":"newway1814"},"content":"    //        Assert.assertThrows(UnsupportedOperationException.class, () -\u003e profPlan.getTaskList().remove(0));","lastModifiedDate":"2023-10-26"},{"lineNumber":84,"author":{"gitId":"newway1814"},"content":"    //    }","lastModifiedDate":"2023-10-26"},{"lineNumber":85,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":86,"author":{"gitId":"kiatkat"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":87,"author":{"gitId":"kiatkat"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-13"},{"lineNumber":88,"author":{"gitId":"newway1814"},"content":"        String expected \u003d ProfPlan.class.getCanonicalName() + \"{tasks\u003d\" + profPlan.getTaskList() + \"}\";","lastModifiedDate":"2023-10-16"},{"lineNumber":89,"author":{"gitId":"kiatkat"},"content":"        assertEquals(expected, profPlan.toString());","lastModifiedDate":"2023-10-13"},{"lineNumber":90,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":91,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":92,"author":{"gitId":"kiatkat"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":93,"author":{"gitId":"newway1814"},"content":"     * A stub ReadOnlyAddressBook whose tasks list can violate interface constraints.","lastModifiedDate":"2023-10-16"},{"lineNumber":94,"author":{"gitId":"kiatkat"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":95,"author":{"gitId":"kiatkat"},"content":"    private static class ProfPlanStub implements ReadOnlyProfPlan {","lastModifiedDate":"2023-10-13"},{"lineNumber":96,"author":{"gitId":"newway1814"},"content":"        private final ObservableList\u003cTask\u003e tasks \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-10-16"},{"lineNumber":97,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":98,"author":{"gitId":"newway1814"},"content":"        ProfPlanStub(Collection\u003cTask\u003e tasks) {","lastModifiedDate":"2023-10-16"},{"lineNumber":99,"author":{"gitId":"newway1814"},"content":"            this.tasks.setAll(tasks);","lastModifiedDate":"2023-10-16"},{"lineNumber":100,"author":{"gitId":"kiatkat"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":101,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":102,"author":{"gitId":"kiatkat"},"content":"        @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":103,"author":{"gitId":"newway1814"},"content":"        public ObservableList\u003cTask\u003e getTaskList() {","lastModifiedDate":"2023-10-16"},{"lineNumber":104,"author":{"gitId":"newway1814"},"content":"            return tasks;","lastModifiedDate":"2023-10-16"},{"lineNumber":105,"author":{"gitId":"kiatkat"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":106,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":107,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":108,"author":{"gitId":"kiatkat"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"kiatkat":76,"newway1814":32}},{"path":"src/test/java/profplan/model/UserPrefsTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kiatkat"},"content":"package profplan.model;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"kiatkat"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":5,"author":{"gitId":"kiatkat"},"content":"import profplan.testutil.Assert;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"kiatkat"},"content":"public class UserPrefsTest {","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"kiatkat"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"kiatkat"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"kiatkat"},"content":"        UserPrefs userPref \u003d new UserPrefs();","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"kiatkat"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e userPref.setGuiSettings(null));","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"kiatkat"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"kiatkat"},"content":"    public void setProfPlanFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"kiatkat"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"kiatkat"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e userPrefs.setProfPlanFilePath(null));","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"kiatkat"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"kiatkat":21}},{"path":"src/test/java/profplan/model/tag/TagTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kiatkat"},"content":"package profplan.model.tag;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":5,"author":{"gitId":"kiatkat"},"content":"import profplan.testutil.Assert;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class TagTest {","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"kiatkat"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e new Tag(null));","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public void constructor_invalidTagName_throwsIllegalArgumentException() {","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        String invalidTagName \u003d \"\";","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"kiatkat"},"content":"        Assert.assertThrows(IllegalArgumentException.class, () -\u003e new Tag(invalidTagName));","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void isValidTagName() {","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // null tag name","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"kiatkat"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e Tag.isValidTagName(null));","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"kiatkat":6,"-":20}},{"path":"src/test/java/profplan/model/task/CombinedPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jack1e0"},"content":"package profplan.model.task;","lastModifiedDate":"2023-10-29"},{"lineNumber":2,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":3,"author":{"gitId":"jack1e0"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-29"},{"lineNumber":4,"author":{"gitId":"jack1e0"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-29"},{"lineNumber":5,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":6,"author":{"gitId":"jack1e0"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-29"},{"lineNumber":7,"author":{"gitId":"jack1e0"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-29"},{"lineNumber":8,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":9,"author":{"gitId":"jack1e0"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-29"},{"lineNumber":10,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":11,"author":{"gitId":"jack1e0"},"content":"import profplan.model.task.predicates.CombinedPredicate;","lastModifiedDate":"2023-10-29"},{"lineNumber":12,"author":{"gitId":"jack1e0"},"content":"import profplan.model.task.predicates.TaskDueDatePredicate;","lastModifiedDate":"2023-10-29"},{"lineNumber":13,"author":{"gitId":"jack1e0"},"content":"import profplan.model.task.predicates.TaskInMonthPredicate;","lastModifiedDate":"2023-10-29"},{"lineNumber":14,"author":{"gitId":"jack1e0"},"content":"import profplan.model.task.predicates.TaskPriorityPredicate;","lastModifiedDate":"2023-10-29"},{"lineNumber":15,"author":{"gitId":"jack1e0"},"content":"import profplan.model.task.predicates.TaskStatusPredicate;","lastModifiedDate":"2023-10-29"},{"lineNumber":16,"author":{"gitId":"jack1e0"},"content":"import profplan.testutil.TaskBuilder;","lastModifiedDate":"2023-10-29"},{"lineNumber":17,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":18,"author":{"gitId":"jack1e0"},"content":"public class CombinedPredicateTest {","lastModifiedDate":"2023-10-29"},{"lineNumber":19,"author":{"gitId":"jack1e0"},"content":"    @Test","lastModifiedDate":"2023-10-29"},{"lineNumber":20,"author":{"gitId":"jack1e0"},"content":"    public void equals() {","lastModifiedDate":"2023-10-29"},{"lineNumber":21,"author":{"gitId":"jack1e0"},"content":"        ArrayList\u003cPredicate\u003cTask\u003e\u003e preds \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-29"},{"lineNumber":22,"author":{"gitId":"jack1e0"},"content":"        preds.add(new TaskStatusPredicate(new Status(\"done\")));","lastModifiedDate":"2023-10-29"},{"lineNumber":23,"author":{"gitId":"jack1e0"},"content":"        preds.add(new TaskPriorityPredicate(new Priority(\"3\")));","lastModifiedDate":"2023-10-29"},{"lineNumber":24,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":25,"author":{"gitId":"jack1e0"},"content":"        CombinedPredicate one \u003d new CombinedPredicate(preds);","lastModifiedDate":"2023-10-29"},{"lineNumber":26,"author":{"gitId":"jack1e0"},"content":"        CombinedPredicate two \u003d new CombinedPredicate(preds);","lastModifiedDate":"2023-10-29"},{"lineNumber":27,"author":{"gitId":"jack1e0"},"content":"        assertTrue(one.equals(one));","lastModifiedDate":"2023-10-29"},{"lineNumber":28,"author":{"gitId":"jack1e0"},"content":"        assertTrue(one.equals(two));","lastModifiedDate":"2023-10-29"},{"lineNumber":29,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":30,"author":{"gitId":"jack1e0"},"content":"        ArrayList\u003cPredicate\u003cTask\u003e\u003e preds2 \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-29"},{"lineNumber":31,"author":{"gitId":"jack1e0"},"content":"        preds2.add(new TaskStatusPredicate(new Status(\"done\")));","lastModifiedDate":"2023-10-29"},{"lineNumber":32,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":33,"author":{"gitId":"jack1e0"},"content":"        CombinedPredicate not \u003d new CombinedPredicate(preds2);","lastModifiedDate":"2023-10-29"},{"lineNumber":34,"author":{"gitId":"jack1e0"},"content":"        assertFalse(one.equals(not));","lastModifiedDate":"2023-10-29"},{"lineNumber":35,"author":{"gitId":"jack1e0"},"content":"        assertFalse(one.equals(new TaskInMonthPredicate()));","lastModifiedDate":"2023-10-29"},{"lineNumber":36,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":37,"author":{"gitId":"jack1e0"},"content":"        assertTrue(one.toString().equals(two.toString()));","lastModifiedDate":"2023-10-29"},{"lineNumber":38,"author":{"gitId":"jack1e0"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":39,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":40,"author":{"gitId":"jack1e0"},"content":"    @Test","lastModifiedDate":"2023-10-29"},{"lineNumber":41,"author":{"gitId":"jack1e0"},"content":"    public void test() {","lastModifiedDate":"2023-10-29"},{"lineNumber":42,"author":{"gitId":"jack1e0"},"content":"        ArrayList\u003cPredicate\u003cTask\u003e\u003e preds \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-29"},{"lineNumber":43,"author":{"gitId":"jack1e0"},"content":"        preds.add(new TaskDueDatePredicate(new DueDate(\"01-01-2000\")));","lastModifiedDate":"2023-10-29"},{"lineNumber":44,"author":{"gitId":"jack1e0"},"content":"        preds.add(new TaskPriorityPredicate(new Priority(\"3\")));","lastModifiedDate":"2023-10-29"},{"lineNumber":45,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":46,"author":{"gitId":"jack1e0"},"content":"        CombinedPredicate predicate \u003d new CombinedPredicate(preds);","lastModifiedDate":"2023-10-29"},{"lineNumber":47,"author":{"gitId":"jack1e0"},"content":"        assertFalse(predicate.test(new TaskBuilder().withName(\"Alice\").build()));","lastModifiedDate":"2023-10-29"},{"lineNumber":48,"author":{"gitId":"jack1e0"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":49,"author":{"gitId":"jack1e0"},"content":"}","lastModifiedDate":"2023-10-29"}],"authorContributionMap":{"jack1e0":49}},{"path":"src/test/java/profplan/model/task/DueDateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jack1e0"},"content":"package profplan.model.task;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":3,"author":{"gitId":"jack1e0"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-11-12"},{"lineNumber":4,"author":{"gitId":"jack1e0"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-20"},{"lineNumber":5,"author":{"gitId":"jack1e0"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-20"},{"lineNumber":6,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":7,"author":{"gitId":"jack1e0"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-11-02"},{"lineNumber":8,"author":{"gitId":"jack1e0"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-11-02"},{"lineNumber":9,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":10,"author":{"gitId":"jack1e0"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-20"},{"lineNumber":11,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":12,"author":{"gitId":"jack1e0"},"content":"import profplan.testutil.Assert;","lastModifiedDate":"2023-10-20"},{"lineNumber":13,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":14,"author":{"gitId":"jack1e0"},"content":"public class DueDateTest {","lastModifiedDate":"2023-10-20"},{"lineNumber":15,"author":{"gitId":"jack1e0"},"content":"    private DateTimeFormatter dateTimeFormatter \u003d DueDate.getDateFormat();","lastModifiedDate":"2023-11-02"},{"lineNumber":16,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":17,"author":{"gitId":"jack1e0"},"content":"    @Test","lastModifiedDate":"2023-10-20"},{"lineNumber":18,"author":{"gitId":"jack1e0"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-10-20"},{"lineNumber":19,"author":{"gitId":"jack1e0"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e new DueDate(null));","lastModifiedDate":"2023-10-20"},{"lineNumber":20,"author":{"gitId":"jack1e0"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":21,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":22,"author":{"gitId":"jack1e0"},"content":"    @Test","lastModifiedDate":"2023-10-20"},{"lineNumber":23,"author":{"gitId":"jack1e0"},"content":"    public void isValidDate() {","lastModifiedDate":"2023-10-20"},{"lineNumber":24,"author":{"gitId":"jack1e0"},"content":"        // invalid dates","lastModifiedDate":"2023-10-20"},{"lineNumber":25,"author":{"gitId":"jack1e0"},"content":"        assertFalse(DueDate.isValidDate(\"01-01-2031\")); // max year is 2030","lastModifiedDate":"2023-10-20"},{"lineNumber":26,"author":{"gitId":"jack1e0"},"content":"        assertFalse(DueDate.isValidDate(\"01-01-1999\")); // max year is 2030","lastModifiedDate":"2023-11-12"},{"lineNumber":27,"author":{"gitId":"jack1e0"},"content":"        assertFalse(DueDate.isValidDate(\"01/01/2000\"));","lastModifiedDate":"2023-10-20"},{"lineNumber":28,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":29,"author":{"gitId":"jack1e0"},"content":"        // valid dates","lastModifiedDate":"2023-10-20"},{"lineNumber":30,"author":{"gitId":"jack1e0"},"content":"        assertTrue(DueDate.isValidDate(\"01-01-2000\"));","lastModifiedDate":"2023-10-20"},{"lineNumber":31,"author":{"gitId":"jack1e0"},"content":"        assertTrue(DueDate.isValidDate(\"31-02-2000\"));","lastModifiedDate":"2023-10-20"},{"lineNumber":32,"author":{"gitId":"jack1e0"},"content":"        assertTrue(DueDate.isValidDate(\"12-12-2030\"));","lastModifiedDate":"2023-10-20"},{"lineNumber":33,"author":{"gitId":"jack1e0"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":34,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":35,"author":{"gitId":"jack1e0"},"content":"    @Test","lastModifiedDate":"2023-10-29"},{"lineNumber":36,"author":{"gitId":"jack1e0"},"content":"    public void isDateBefore() {","lastModifiedDate":"2023-10-29"},{"lineNumber":37,"author":{"gitId":"jack1e0"},"content":"        DueDate before \u003d new DueDate(\"01-01-2023\");","lastModifiedDate":"2023-10-29"},{"lineNumber":38,"author":{"gitId":"jack1e0"},"content":"        DueDate after \u003d new DueDate(\"01-01-2024\");","lastModifiedDate":"2023-10-29"},{"lineNumber":39,"author":{"gitId":"jack1e0"},"content":"        assertTrue(before.isIncludedorBefore(after));","lastModifiedDate":"2023-10-29"},{"lineNumber":40,"author":{"gitId":"jack1e0"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":41,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":42,"author":{"gitId":"jack1e0"},"content":"    @Test","lastModifiedDate":"2023-10-29"},{"lineNumber":43,"author":{"gitId":"jack1e0"},"content":"    public void isDateWithinWeekMonth() {","lastModifiedDate":"2023-10-29"},{"lineNumber":44,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":45,"author":{"gitId":"jack1e0"},"content":"        LocalDate in4Days \u003d LocalDate.now().plusDays(4);","lastModifiedDate":"2023-11-02"},{"lineNumber":46,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":47,"author":{"gitId":"jack1e0"},"content":"        DueDate test \u003d new DueDate(dateTimeFormatter.format(in4Days));","lastModifiedDate":"2023-11-02"},{"lineNumber":48,"author":{"gitId":"jack1e0"},"content":"        assertTrue(test.isWithinWeek());","lastModifiedDate":"2023-10-29"},{"lineNumber":49,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":50,"author":{"gitId":"jack1e0"},"content":"        LocalDate in15Days \u003d LocalDate.now().plusDays(15);","lastModifiedDate":"2023-11-02"},{"lineNumber":51,"author":{"gitId":"jack1e0"},"content":"        DueDate test2 \u003d new DueDate(dateTimeFormatter.format(in15Days));","lastModifiedDate":"2023-11-02"},{"lineNumber":52,"author":{"gitId":"jack1e0"},"content":"        assertFalse(test2.isWithinWeek());","lastModifiedDate":"2023-10-29"},{"lineNumber":53,"author":{"gitId":"jack1e0"},"content":"        assertTrue(test2.isWithinMonth());","lastModifiedDate":"2023-10-29"},{"lineNumber":54,"author":{"gitId":"jack1e0"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":55,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":56,"author":{"gitId":"jack1e0"},"content":"    @Test","lastModifiedDate":"2023-11-12"},{"lineNumber":57,"author":{"gitId":"jack1e0"},"content":"    public void addDays() {","lastModifiedDate":"2023-11-12"},{"lineNumber":58,"author":{"gitId":"jack1e0"},"content":"        DueDate date \u003d new DueDate(\"01-01-2023\");","lastModifiedDate":"2023-11-12"},{"lineNumber":59,"author":{"gitId":"jack1e0"},"content":"        DueDate in5Days \u003d new DueDate(\"06-01-2023\");","lastModifiedDate":"2023-11-12"},{"lineNumber":60,"author":{"gitId":"jack1e0"},"content":"        assertEquals(date.addDays(5), in5Days);","lastModifiedDate":"2023-11-12"},{"lineNumber":61,"author":{"gitId":"jack1e0"},"content":"    }","lastModifiedDate":"2023-11-12"},{"lineNumber":62,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":63,"author":{"gitId":"jack1e0"},"content":"    @Test","lastModifiedDate":"2023-11-12"},{"lineNumber":64,"author":{"gitId":"jack1e0"},"content":"    public void addMonth() {","lastModifiedDate":"2023-11-12"},{"lineNumber":65,"author":{"gitId":"jack1e0"},"content":"        DueDate date \u003d new DueDate(\"01-01-2023\");","lastModifiedDate":"2023-11-12"},{"lineNumber":66,"author":{"gitId":"jack1e0"},"content":"        DueDate in1Month \u003d new DueDate(\"01-02-2023\");","lastModifiedDate":"2023-11-12"},{"lineNumber":67,"author":{"gitId":"jack1e0"},"content":"        assertEquals(date.addMonth(), in1Month);","lastModifiedDate":"2023-11-12"},{"lineNumber":68,"author":{"gitId":"jack1e0"},"content":"    }","lastModifiedDate":"2023-11-12"},{"lineNumber":69,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":70,"author":{"gitId":"jack1e0"},"content":"    @Test","lastModifiedDate":"2023-10-20"},{"lineNumber":71,"author":{"gitId":"jack1e0"},"content":"    public void equals() {","lastModifiedDate":"2023-10-20"},{"lineNumber":72,"author":{"gitId":"jack1e0"},"content":"        DueDate date \u003d new DueDate(\"01-01-2000\");","lastModifiedDate":"2023-10-20"},{"lineNumber":73,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":74,"author":{"gitId":"jack1e0"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-20"},{"lineNumber":75,"author":{"gitId":"jack1e0"},"content":"        assertTrue(date.equals(new DueDate(\"01-01-2000\")));","lastModifiedDate":"2023-10-20"},{"lineNumber":76,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":77,"author":{"gitId":"jack1e0"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-20"},{"lineNumber":78,"author":{"gitId":"jack1e0"},"content":"        assertTrue(date.equals(date));","lastModifiedDate":"2023-10-20"},{"lineNumber":79,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":80,"author":{"gitId":"jack1e0"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-20"},{"lineNumber":81,"author":{"gitId":"jack1e0"},"content":"        assertFalse(date.equals(null));","lastModifiedDate":"2023-10-20"},{"lineNumber":82,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":83,"author":{"gitId":"jack1e0"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-20"},{"lineNumber":84,"author":{"gitId":"jack1e0"},"content":"        assertFalse(date.equals(5.0f));","lastModifiedDate":"2023-10-20"},{"lineNumber":85,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":86,"author":{"gitId":"jack1e0"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2023-10-20"},{"lineNumber":87,"author":{"gitId":"jack1e0"},"content":"        assertFalse(date.equals(new DueDate(\"01-01-2030\")));","lastModifiedDate":"2023-10-20"},{"lineNumber":88,"author":{"gitId":"jack1e0"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":89,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":90,"author":{"gitId":"jack1e0"},"content":"    @Test","lastModifiedDate":"2023-11-12"},{"lineNumber":91,"author":{"gitId":"jack1e0"},"content":"    public void compareTo() {","lastModifiedDate":"2023-11-12"},{"lineNumber":92,"author":{"gitId":"jack1e0"},"content":"        DueDate date \u003d new DueDate(\"01-01-2023\");","lastModifiedDate":"2023-11-12"},{"lineNumber":93,"author":{"gitId":"jack1e0"},"content":"        DueDate later \u003d new DueDate(\"01-01-2024\");","lastModifiedDate":"2023-11-12"},{"lineNumber":94,"author":{"gitId":"jack1e0"},"content":"        DueDate earlier \u003d new DueDate(\"01-01-2022\");","lastModifiedDate":"2023-11-12"},{"lineNumber":95,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":96,"author":{"gitId":"jack1e0"},"content":"        assertEquals(date.compareTo(earlier), 1);","lastModifiedDate":"2023-11-12"},{"lineNumber":97,"author":{"gitId":"jack1e0"},"content":"        assertEquals(date.compareTo(later), -1);","lastModifiedDate":"2023-11-12"},{"lineNumber":98,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":99,"author":{"gitId":"jack1e0"},"content":"    }","lastModifiedDate":"2023-11-12"},{"lineNumber":100,"author":{"gitId":"jack1e0"},"content":"}","lastModifiedDate":"2023-10-20"}],"authorContributionMap":{"jack1e0":100}},{"path":"src/test/java/profplan/model/task/NameContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"newway1814"},"content":"package profplan.model.task;","lastModifiedDate":"2023-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"jack1e0"},"content":"import profplan.model.task.predicates.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-10-29"},{"lineNumber":14,"author":{"gitId":"newway1814"},"content":"import profplan.testutil.TaskBuilder;","lastModifiedDate":"2023-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicateTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d new NameContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicateCopy \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"newway1814"},"content":"        // different task -\u003e returns false","lastModifiedDate":"2023-10-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2017-08-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // One keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.singletonList(\"Alice\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":47,"author":{"gitId":"newway1814"},"content":"        assertTrue(predicate.test(new TaskBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2023-10-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // Multiple keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":51,"author":{"gitId":"newway1814"},"content":"        assertTrue(predicate.test(new TaskBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2023-10-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // Only one matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Bob\", \"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":55,"author":{"gitId":"newway1814"},"content":"        assertTrue(predicate.test(new TaskBuilder().withName(\"Alice Carol\").build()));","lastModifiedDate":"2023-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // Mixed-case keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"aLIce\", \"bOB\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":59,"author":{"gitId":"newway1814"},"content":"        assertTrue(predicate.test(new TaskBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2023-10-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2017-08-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // Zero keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"newway1814"},"content":"        assertFalse(predicate.test(new TaskBuilder().withName(\"Alice\").build()));","lastModifiedDate":"2023-10-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // Non-matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":70,"author":{"gitId":"newway1814"},"content":"        assertFalse(predicate.test(new TaskBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2023-10-16"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":72,"author":{"gitId":"kiatkat"},"content":"        // Keywords match priority but does not match name","lastModifiedDate":"2023-10-29"},{"lineNumber":73,"author":{"gitId":"kiatkat"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"5\"));","lastModifiedDate":"2023-10-29"},{"lineNumber":74,"author":{"gitId":"eyelessrhyme7"},"content":"        assertFalse(predicate.test(new TaskBuilder().withName(\"Alice\").withPriority(\"5\")","lastModifiedDate":"2023-10-17"},{"lineNumber":75,"author":{"gitId":"kiatkat"},"content":"                .build()));","lastModifiedDate":"2023-10-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d List.of(\"keyword1\", \"keyword2\");","lastModifiedDate":"2019-02-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(keywords);","lastModifiedDate":"2019-02-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        String expected \u003d NameContainsKeywordsPredicate.class.getCanonicalName() + \"{keywords\u003d\" + keywords + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertEquals(expected, predicate.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"jack1e0":1,"kiatkat":3,"eyelessrhyme7":1,"-":72,"newway1814":9}},{"path":"src/test/java/profplan/model/task/NameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"newway1814"},"content":"package profplan.model.task;","lastModifiedDate":"2023-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":8,"author":{"gitId":"kiatkat"},"content":"import profplan.testutil.Assert;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class NameTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":14,"author":{"gitId":"kiatkat"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e new Name(null));","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        String invalidName \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"kiatkat"},"content":"        Assert.assertThrows(IllegalArgumentException.class, () -\u003e new Name(invalidName));","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void isValidName() {","lastModifiedDate":"2017-01-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // null name","lastModifiedDate":"2017-12-04"},{"lineNumber":26,"author":{"gitId":"kiatkat"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e Name.isValidName(null));","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"peter*\")); // contains non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // valid name","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter jack\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"12345\")); // numbers only","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter the 2nd\")); // alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"Capital Tan\")); // with capital letters","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"David Roger Jackson Ray Jr 2nd\")); // long names","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Name name \u003d new Name(\"Valid Name\");","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertTrue(name.equals(new Name(\"Valid Name\")));","lastModifiedDate":"2019-02-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertTrue(name.equals(name));","lastModifiedDate":"2019-02-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(name.equals(null));","lastModifiedDate":"2019-02-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertFalse(name.equals(5.0f));","lastModifiedDate":"2019-02-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertFalse(name.equals(new Name(\"Other Valid Name\")));","lastModifiedDate":"2019-02-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"kiatkat":4,"-":56,"newway1814":1}},{"path":"src/test/java/profplan/model/task/PriorityTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"eyelessrhyme7"},"content":"package profplan.model.task;","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"eyelessrhyme7"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"eyelessrhyme7"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"eyelessrhyme7"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"eyelessrhyme7"},"content":"import profplan.testutil.Assert;","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"eyelessrhyme7"},"content":"public class PriorityTest {","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"eyelessrhyme7"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"eyelessrhyme7"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"eyelessrhyme7"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e new Priority(null));","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"eyelessrhyme7"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"eyelessrhyme7"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"eyelessrhyme7"},"content":"    public void constructor_invalidPriority_throwsIllegalArgumentException() {","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"eyelessrhyme7"},"content":"        String invalidPriority \u003d \"\";","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"eyelessrhyme7"},"content":"        Assert.assertThrows(IllegalArgumentException.class, () -\u003e new Priority(invalidPriority));","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"eyelessrhyme7"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"eyelessrhyme7"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"eyelessrhyme7"},"content":"    public void isValidPriority() {","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"eyelessrhyme7"},"content":"        // null priority number","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"eyelessrhyme7"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e Priority.isValidPriority(null));","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"eyelessrhyme7"},"content":"        // invalid priority numbers","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"eyelessrhyme7"},"content":"        assertFalse(Priority.isValidPriority(\"\")); // empty string","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"eyelessrhyme7"},"content":"        assertFalse(Priority.isValidPriority(\" \")); // spaces only","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"eyelessrhyme7"},"content":"        assertFalse(Priority.isValidPriority(\"0\")); // less than 1","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"eyelessrhyme7"},"content":"        assertFalse(Priority.isValidPriority(\"11\")); // more than 10","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"eyelessrhyme7"},"content":"        assertFalse(Priority.isValidPriority(\"priority\")); // non-numeric","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"eyelessrhyme7"},"content":"        assertFalse(Priority.isValidPriority(\"9p\")); // alphabets within digits","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"eyelessrhyme7"},"content":"        assertFalse(Priority.isValidPriority(\"9 1\")); // spaces within digits","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"eyelessrhyme7"},"content":"        // valid priority numbers","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"eyelessrhyme7"},"content":"        assertTrue(Priority.isValidPriority(\"1\")); // minimum valid priority","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"eyelessrhyme7"},"content":"        assertTrue(Priority.isValidPriority(\"10\")); // maximum valid priority","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"eyelessrhyme7"},"content":"        assertTrue(Priority.isValidPriority(\"3\")); // valid priority within the range","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"eyelessrhyme7"},"content":"        assertTrue(Priority.isValidPriority(\"6\"));","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"eyelessrhyme7"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"eyelessrhyme7"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"eyelessrhyme7"},"content":"    public void equals() {","lastModifiedDate":"2023-10-17"},{"lineNumber":46,"author":{"gitId":"eyelessrhyme7"},"content":"        Priority priority \u003d new Priority(\"9\");","lastModifiedDate":"2023-10-17"},{"lineNumber":47,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":48,"author":{"gitId":"eyelessrhyme7"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-17"},{"lineNumber":49,"author":{"gitId":"eyelessrhyme7"},"content":"        assertTrue(priority.equals(new Priority(\"9\")));","lastModifiedDate":"2023-10-17"},{"lineNumber":50,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":51,"author":{"gitId":"eyelessrhyme7"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-17"},{"lineNumber":52,"author":{"gitId":"eyelessrhyme7"},"content":"        assertTrue(priority.equals(priority));","lastModifiedDate":"2023-10-17"},{"lineNumber":53,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":54,"author":{"gitId":"eyelessrhyme7"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-17"},{"lineNumber":55,"author":{"gitId":"eyelessrhyme7"},"content":"        assertFalse(priority.equals(null));","lastModifiedDate":"2023-10-17"},{"lineNumber":56,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":57,"author":{"gitId":"eyelessrhyme7"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-17"},{"lineNumber":58,"author":{"gitId":"eyelessrhyme7"},"content":"        assertFalse(priority.equals(5.0f));","lastModifiedDate":"2023-10-17"},{"lineNumber":59,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":60,"author":{"gitId":"eyelessrhyme7"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2023-10-17"},{"lineNumber":61,"author":{"gitId":"eyelessrhyme7"},"content":"        assertFalse(priority.equals(new Priority(\"5\")));","lastModifiedDate":"2023-10-17"},{"lineNumber":62,"author":{"gitId":"eyelessrhyme7"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":63,"author":{"gitId":"eyelessrhyme7"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"eyelessrhyme7":63}},{"path":"src/test/java/profplan/model/task/StatusTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"newway1814"},"content":"package profplan.model.task;","lastModifiedDate":"2023-10-30"},{"lineNumber":2,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":3,"author":{"gitId":"newway1814"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-30"},{"lineNumber":4,"author":{"gitId":"newway1814"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-30"},{"lineNumber":5,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":6,"author":{"gitId":"newway1814"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-30"},{"lineNumber":7,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":8,"author":{"gitId":"newway1814"},"content":"import profplan.testutil.Assert;","lastModifiedDate":"2023-10-30"},{"lineNumber":9,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":10,"author":{"gitId":"newway1814"},"content":"public class StatusTest {","lastModifiedDate":"2023-10-30"},{"lineNumber":11,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":12,"author":{"gitId":"newway1814"},"content":"    @Test","lastModifiedDate":"2023-10-30"},{"lineNumber":13,"author":{"gitId":"newway1814"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-10-30"},{"lineNumber":14,"author":{"gitId":"newway1814"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e new Status(null));","lastModifiedDate":"2023-10-30"},{"lineNumber":15,"author":{"gitId":"newway1814"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":16,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":17,"author":{"gitId":"newway1814"},"content":"    @Test","lastModifiedDate":"2023-10-30"},{"lineNumber":18,"author":{"gitId":"newway1814"},"content":"    public void constructor_invalidPriority_throwsIllegalArgumentException() {","lastModifiedDate":"2023-10-30"},{"lineNumber":19,"author":{"gitId":"newway1814"},"content":"        String invalidStatus \u003d \"\";","lastModifiedDate":"2023-10-30"},{"lineNumber":20,"author":{"gitId":"newway1814"},"content":"        Assert.assertThrows(IllegalArgumentException.class, () -\u003e new Status(invalidStatus));","lastModifiedDate":"2023-10-30"},{"lineNumber":21,"author":{"gitId":"newway1814"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":22,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":23,"author":{"gitId":"newway1814"},"content":"    @Test","lastModifiedDate":"2023-10-30"},{"lineNumber":24,"author":{"gitId":"newway1814"},"content":"    public void isValidStatus() {","lastModifiedDate":"2023-10-30"},{"lineNumber":25,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":26,"author":{"gitId":"newway1814"},"content":"        //checks for invalid status","lastModifiedDate":"2023-10-30"},{"lineNumber":27,"author":{"gitId":"newway1814"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e Status.isValidStatus(null));","lastModifiedDate":"2023-10-30"},{"lineNumber":28,"author":{"gitId":"newway1814"},"content":"        assertFalse(Status.isValidStatus(\"\"));","lastModifiedDate":"2023-10-30"},{"lineNumber":29,"author":{"gitId":"newway1814"},"content":"        assertFalse(Status.isValidStatus(\" \"));","lastModifiedDate":"2023-10-30"},{"lineNumber":30,"author":{"gitId":"newway1814"},"content":"        assertFalse(Status.isValidStatus(\"0\"));","lastModifiedDate":"2023-10-30"},{"lineNumber":31,"author":{"gitId":"newway1814"},"content":"        assertFalse(Status.isValidStatus(\"11\"));","lastModifiedDate":"2023-10-30"},{"lineNumber":32,"author":{"gitId":"newway1814"},"content":"        assertFalse(Status.isValidStatus(\"status\"));","lastModifiedDate":"2023-10-30"},{"lineNumber":33,"author":{"gitId":"newway1814"},"content":"        assertFalse(Status.isValidStatus(\"9p\"));","lastModifiedDate":"2023-10-30"},{"lineNumber":34,"author":{"gitId":"newway1814"},"content":"        assertFalse(Status.isValidStatus(\"9 1\"));","lastModifiedDate":"2023-10-30"},{"lineNumber":35,"author":{"gitId":"newway1814"},"content":"        assertFalse(Status.isValidStatus(\"1\"));","lastModifiedDate":"2023-10-30"},{"lineNumber":36,"author":{"gitId":"newway1814"},"content":"        assertFalse(Status.isValidStatus(\"10\"));","lastModifiedDate":"2023-10-30"},{"lineNumber":37,"author":{"gitId":"newway1814"},"content":"        assertFalse(Status.isValidStatus(\"3\"));","lastModifiedDate":"2023-10-30"},{"lineNumber":38,"author":{"gitId":"newway1814"},"content":"        assertFalse(Status.isValidStatus(\"6\"));","lastModifiedDate":"2023-10-30"},{"lineNumber":39,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":40,"author":{"gitId":"newway1814"},"content":"        //checks for valid status","lastModifiedDate":"2023-10-30"},{"lineNumber":41,"author":{"gitId":"newway1814"},"content":"        assertTrue(Status.isValidStatus(\"done\"));","lastModifiedDate":"2023-10-30"},{"lineNumber":42,"author":{"gitId":"newway1814"},"content":"        assertTrue(Status.isValidStatus(\"undone\"));","lastModifiedDate":"2023-10-30"},{"lineNumber":43,"author":{"gitId":"newway1814"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":44,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":45,"author":{"gitId":"newway1814"},"content":"    @Test","lastModifiedDate":"2023-10-30"},{"lineNumber":46,"author":{"gitId":"newway1814"},"content":"    public void equals() {","lastModifiedDate":"2023-10-30"},{"lineNumber":47,"author":{"gitId":"newway1814"},"content":"        Status status \u003d new Status(\"done\");","lastModifiedDate":"2023-10-30"},{"lineNumber":48,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":49,"author":{"gitId":"newway1814"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-30"},{"lineNumber":50,"author":{"gitId":"newway1814"},"content":"        assertTrue(status.equals(new Status(\"done\")));","lastModifiedDate":"2023-10-30"},{"lineNumber":51,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":52,"author":{"gitId":"newway1814"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-30"},{"lineNumber":53,"author":{"gitId":"newway1814"},"content":"        assertTrue(status.equals(status));","lastModifiedDate":"2023-10-30"},{"lineNumber":54,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":55,"author":{"gitId":"newway1814"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-30"},{"lineNumber":56,"author":{"gitId":"newway1814"},"content":"        assertFalse(status.equals(5.0f));","lastModifiedDate":"2023-10-30"},{"lineNumber":57,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":58,"author":{"gitId":"newway1814"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2023-10-30"},{"lineNumber":59,"author":{"gitId":"newway1814"},"content":"        assertFalse(status.equals(new Status(\"undone\")));","lastModifiedDate":"2023-10-30"},{"lineNumber":60,"author":{"gitId":"newway1814"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":61,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":62,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":63,"author":{"gitId":"newway1814"},"content":"}","lastModifiedDate":"2023-10-30"}],"authorContributionMap":{"newway1814":63}},{"path":"src/test/java/profplan/model/task/TaskInMonthPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jack1e0"},"content":"package profplan.model.task;","lastModifiedDate":"2023-10-29"},{"lineNumber":2,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":3,"author":{"gitId":"jack1e0"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-29"},{"lineNumber":4,"author":{"gitId":"jack1e0"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-29"},{"lineNumber":5,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":6,"author":{"gitId":"jack1e0"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-29"},{"lineNumber":7,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":8,"author":{"gitId":"jack1e0"},"content":"import profplan.model.task.predicates.TaskInMonthPredicate;","lastModifiedDate":"2023-10-29"},{"lineNumber":9,"author":{"gitId":"jack1e0"},"content":"import profplan.model.task.predicates.TaskInWeekPredicate;","lastModifiedDate":"2023-10-29"},{"lineNumber":10,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":11,"author":{"gitId":"jack1e0"},"content":"public class TaskInMonthPredicateTest {","lastModifiedDate":"2023-10-29"},{"lineNumber":12,"author":{"gitId":"jack1e0"},"content":"    @Test","lastModifiedDate":"2023-10-29"},{"lineNumber":13,"author":{"gitId":"jack1e0"},"content":"    public void equals() {","lastModifiedDate":"2023-10-29"},{"lineNumber":14,"author":{"gitId":"jack1e0"},"content":"        TaskInMonthPredicate one \u003d new TaskInMonthPredicate();","lastModifiedDate":"2023-10-29"},{"lineNumber":15,"author":{"gitId":"jack1e0"},"content":"        TaskInMonthPredicate two \u003d new TaskInMonthPredicate();","lastModifiedDate":"2023-10-29"},{"lineNumber":16,"author":{"gitId":"jack1e0"},"content":"        assertTrue(one.equals(two));","lastModifiedDate":"2023-10-29"},{"lineNumber":17,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":18,"author":{"gitId":"jack1e0"},"content":"        TaskInWeekPredicate not \u003d new TaskInWeekPredicate();","lastModifiedDate":"2023-10-29"},{"lineNumber":19,"author":{"gitId":"jack1e0"},"content":"        assertFalse(one.equals(not));","lastModifiedDate":"2023-10-29"},{"lineNumber":20,"author":{"gitId":"jack1e0"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":21,"author":{"gitId":"jack1e0"},"content":"}","lastModifiedDate":"2023-10-29"}],"authorContributionMap":{"jack1e0":21}},{"path":"src/test/java/profplan/model/task/TaskInWeekPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jack1e0"},"content":"package profplan.model.task;","lastModifiedDate":"2023-10-29"},{"lineNumber":2,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":3,"author":{"gitId":"jack1e0"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-29"},{"lineNumber":4,"author":{"gitId":"jack1e0"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-29"},{"lineNumber":5,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":6,"author":{"gitId":"jack1e0"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-29"},{"lineNumber":7,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":8,"author":{"gitId":"jack1e0"},"content":"import profplan.model.task.predicates.TaskInMonthPredicate;","lastModifiedDate":"2023-10-29"},{"lineNumber":9,"author":{"gitId":"jack1e0"},"content":"import profplan.model.task.predicates.TaskInWeekPredicate;","lastModifiedDate":"2023-10-29"},{"lineNumber":10,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":11,"author":{"gitId":"jack1e0"},"content":"public class TaskInWeekPredicateTest {","lastModifiedDate":"2023-10-29"},{"lineNumber":12,"author":{"gitId":"jack1e0"},"content":"    @Test","lastModifiedDate":"2023-10-29"},{"lineNumber":13,"author":{"gitId":"jack1e0"},"content":"    public void equals() {","lastModifiedDate":"2023-10-29"},{"lineNumber":14,"author":{"gitId":"jack1e0"},"content":"        TaskInWeekPredicate one \u003d new TaskInWeekPredicate();","lastModifiedDate":"2023-10-29"},{"lineNumber":15,"author":{"gitId":"jack1e0"},"content":"        TaskInWeekPredicate two \u003d new TaskInWeekPredicate();","lastModifiedDate":"2023-10-29"},{"lineNumber":16,"author":{"gitId":"jack1e0"},"content":"        assertTrue(one.equals(two));","lastModifiedDate":"2023-10-29"},{"lineNumber":17,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":18,"author":{"gitId":"jack1e0"},"content":"        TaskInMonthPredicate not \u003d new TaskInMonthPredicate();","lastModifiedDate":"2023-10-29"},{"lineNumber":19,"author":{"gitId":"jack1e0"},"content":"        assertFalse(one.equals(not));","lastModifiedDate":"2023-10-29"},{"lineNumber":20,"author":{"gitId":"jack1e0"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":21,"author":{"gitId":"jack1e0"},"content":"}","lastModifiedDate":"2023-10-29"}],"authorContributionMap":{"jack1e0":21}},{"path":"src/test/java/profplan/model/task/TaskTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"newway1814"},"content":"package profplan.model.task;","lastModifiedDate":"2023-10-16"},{"lineNumber":2,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":3,"author":{"gitId":"newway1814"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-16"},{"lineNumber":4,"author":{"gitId":"newway1814"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-16"},{"lineNumber":5,"author":{"gitId":"newway1814"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-16"},{"lineNumber":6,"author":{"gitId":"newway1814"},"content":"import static profplan.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-10-16"},{"lineNumber":7,"author":{"gitId":"eyelessrhyme7"},"content":"import static profplan.logic.commands.CommandTestUtil.VALID_PRIORITY_BOB;","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"newway1814"},"content":"import static profplan.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-10-16"},{"lineNumber":9,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":10,"author":{"gitId":"jack1e0"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-11-12"},{"lineNumber":11,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":12,"author":{"gitId":"newway1814"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":14,"author":{"gitId":"jack1e0"},"content":"import profplan.model.task.Task.RecurringType;","lastModifiedDate":"2023-11-12"},{"lineNumber":15,"author":{"gitId":"newway1814"},"content":"import profplan.testutil.Assert;","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"newway1814"},"content":"import profplan.testutil.TaskBuilder;","lastModifiedDate":"2023-10-16"},{"lineNumber":17,"author":{"gitId":"newway1814"},"content":"import profplan.testutil.TypicalTasks;","lastModifiedDate":"2023-10-16"},{"lineNumber":18,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":19,"author":{"gitId":"newway1814"},"content":"public class TaskTest {","lastModifiedDate":"2023-10-16"},{"lineNumber":20,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":21,"author":{"gitId":"newway1814"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":22,"author":{"gitId":"newway1814"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-10-16"},{"lineNumber":23,"author":{"gitId":"newway1814"},"content":"        Task task \u003d new TaskBuilder().build();","lastModifiedDate":"2023-10-16"},{"lineNumber":24,"author":{"gitId":"newway1814"},"content":"        Assert.assertThrows(UnsupportedOperationException.class, () -\u003e task.getTags().remove(0));","lastModifiedDate":"2023-10-16"},{"lineNumber":25,"author":{"gitId":"newway1814"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":26,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":27,"author":{"gitId":"newway1814"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":28,"author":{"gitId":"newway1814"},"content":"    public void isSameTask() {","lastModifiedDate":"2023-10-16"},{"lineNumber":29,"author":{"gitId":"newway1814"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-16"},{"lineNumber":30,"author":{"gitId":"newway1814"},"content":"        assertTrue(TypicalTasks.ALICE.isSameTask(TypicalTasks.ALICE));","lastModifiedDate":"2023-10-16"},{"lineNumber":31,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":32,"author":{"gitId":"newway1814"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-16"},{"lineNumber":33,"author":{"gitId":"newway1814"},"content":"        assertFalse(TypicalTasks.ALICE.isSameTask(null));","lastModifiedDate":"2023-10-16"},{"lineNumber":34,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":35,"author":{"gitId":"newway1814"},"content":"        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2023-10-16"},{"lineNumber":36,"author":{"gitId":"eyelessrhyme7"},"content":"        Task editedAlice \u003d new TaskBuilder(TypicalTasks.ALICE).withPriority(VALID_PRIORITY_BOB)","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"kiatkat"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2023-10-29"},{"lineNumber":38,"author":{"gitId":"newway1814"},"content":"        assertTrue(TypicalTasks.ALICE.isSameTask(editedAlice));","lastModifiedDate":"2023-10-16"},{"lineNumber":39,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":40,"author":{"gitId":"newway1814"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2023-10-16"},{"lineNumber":41,"author":{"gitId":"newway1814"},"content":"        editedAlice \u003d new TaskBuilder(TypicalTasks.ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2023-10-16"},{"lineNumber":42,"author":{"gitId":"newway1814"},"content":"        assertFalse(TypicalTasks.ALICE.isSameTask(editedAlice));","lastModifiedDate":"2023-10-16"},{"lineNumber":43,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":44,"author":{"gitId":"newway1814"},"content":"        // name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2023-10-16"},{"lineNumber":45,"author":{"gitId":"newway1814"},"content":"        Task editedBob \u003d new TaskBuilder(TypicalTasks.BOB).withName(VALID_NAME_BOB.toLowerCase()).build();","lastModifiedDate":"2023-10-16"},{"lineNumber":46,"author":{"gitId":"newway1814"},"content":"        assertFalse(TypicalTasks.BOB.isSameTask(editedBob));","lastModifiedDate":"2023-10-16"},{"lineNumber":47,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":48,"author":{"gitId":"newway1814"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2023-10-16"},{"lineNumber":49,"author":{"gitId":"newway1814"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_BOB + \" \";","lastModifiedDate":"2023-10-16"},{"lineNumber":50,"author":{"gitId":"newway1814"},"content":"        editedBob \u003d new TaskBuilder(TypicalTasks.BOB).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2023-10-16"},{"lineNumber":51,"author":{"gitId":"newway1814"},"content":"        assertFalse(TypicalTasks.BOB.isSameTask(editedBob));","lastModifiedDate":"2023-10-16"},{"lineNumber":52,"author":{"gitId":"newway1814"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":53,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":54,"author":{"gitId":"newway1814"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":55,"author":{"gitId":"newway1814"},"content":"    public void equals() {","lastModifiedDate":"2023-10-16"},{"lineNumber":56,"author":{"gitId":"newway1814"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-16"},{"lineNumber":57,"author":{"gitId":"newway1814"},"content":"        Task aliceCopy \u003d new TaskBuilder(TypicalTasks.ALICE).build();","lastModifiedDate":"2023-10-16"},{"lineNumber":58,"author":{"gitId":"newway1814"},"content":"        assertTrue(TypicalTasks.ALICE.equals(aliceCopy));","lastModifiedDate":"2023-10-16"},{"lineNumber":59,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":60,"author":{"gitId":"newway1814"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-16"},{"lineNumber":61,"author":{"gitId":"newway1814"},"content":"        assertTrue(TypicalTasks.ALICE.equals(TypicalTasks.ALICE));","lastModifiedDate":"2023-10-16"},{"lineNumber":62,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":63,"author":{"gitId":"newway1814"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-16"},{"lineNumber":64,"author":{"gitId":"newway1814"},"content":"        assertFalse(TypicalTasks.ALICE.equals(null));","lastModifiedDate":"2023-10-16"},{"lineNumber":65,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":66,"author":{"gitId":"newway1814"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2023-10-16"},{"lineNumber":67,"author":{"gitId":"newway1814"},"content":"        assertFalse(TypicalTasks.ALICE.equals(5));","lastModifiedDate":"2023-10-16"},{"lineNumber":68,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":69,"author":{"gitId":"newway1814"},"content":"        // different task -\u003e returns false","lastModifiedDate":"2023-10-16"},{"lineNumber":70,"author":{"gitId":"newway1814"},"content":"        assertFalse(TypicalTasks.ALICE.equals(TypicalTasks.BOB));","lastModifiedDate":"2023-10-16"},{"lineNumber":71,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":72,"author":{"gitId":"newway1814"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2023-10-16"},{"lineNumber":73,"author":{"gitId":"newway1814"},"content":"        Task editedAlice \u003d new TaskBuilder(TypicalTasks.ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2023-10-16"},{"lineNumber":74,"author":{"gitId":"newway1814"},"content":"        assertFalse(TypicalTasks.ALICE.equals(editedAlice));","lastModifiedDate":"2023-10-16"},{"lineNumber":75,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":76,"author":{"gitId":"eyelessrhyme7"},"content":"        // different priority -\u003e returns false","lastModifiedDate":"2023-10-17"},{"lineNumber":77,"author":{"gitId":"eyelessrhyme7"},"content":"        editedAlice \u003d new TaskBuilder(TypicalTasks.ALICE).withPriority(VALID_PRIORITY_BOB).build();","lastModifiedDate":"2023-10-17"},{"lineNumber":78,"author":{"gitId":"newway1814"},"content":"        assertFalse(TypicalTasks.ALICE.equals(editedAlice));","lastModifiedDate":"2023-10-16"},{"lineNumber":79,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":80,"author":{"gitId":"newway1814"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2023-10-16"},{"lineNumber":81,"author":{"gitId":"newway1814"},"content":"        editedAlice \u003d new TaskBuilder(TypicalTasks.ALICE).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2023-10-16"},{"lineNumber":82,"author":{"gitId":"newway1814"},"content":"        assertFalse(TypicalTasks.ALICE.equals(editedAlice));","lastModifiedDate":"2023-10-16"},{"lineNumber":83,"author":{"gitId":"newway1814"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":84,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":85,"author":{"gitId":"newway1814"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":86,"author":{"gitId":"newway1814"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-16"},{"lineNumber":87,"author":{"gitId":"eyelessrhyme7"},"content":"        String expected \u003d Task.class.getCanonicalName() + \"{name\u003d\" + TypicalTasks.ALICE.getName() + \", priority\u003d\"","lastModifiedDate":"2023-10-17"},{"lineNumber":88,"author":{"gitId":"eyelessrhyme7"},"content":"                + TypicalTasks.ALICE.getPriority()","lastModifiedDate":"2023-10-17"},{"lineNumber":89,"author":{"gitId":"newway1814"},"content":"                + \", status\u003d\" + TypicalTasks.ALICE.getStatus()","lastModifiedDate":"2023-10-16"},{"lineNumber":90,"author":{"gitId":"jack1e0"},"content":"                + \", tags\u003d\" + TypicalTasks.ALICE.getTags()","lastModifiedDate":"2023-10-17"},{"lineNumber":91,"author":{"gitId":"jack1e0"},"content":"                + \", dueDate\u003d\" + TypicalTasks.ALICE.getDueDate()","lastModifiedDate":"2023-10-17"},{"lineNumber":92,"author":{"gitId":"jack1e0"},"content":"                + \", link\u003d\" + TypicalTasks.ALICE.getLink()","lastModifiedDate":"2023-10-25"},{"lineNumber":93,"author":{"gitId":"kiatkat"},"content":"                + \", description\u003d\" + TypicalTasks.ALICE.getDescription()","lastModifiedDate":"2023-10-26"},{"lineNumber":94,"author":{"gitId":"jack1e0"},"content":"                + \"}\";","lastModifiedDate":"2023-10-17"},{"lineNumber":95,"author":{"gitId":"newway1814"},"content":"        assertEquals(expected, TypicalTasks.ALICE.toString());","lastModifiedDate":"2023-10-16"},{"lineNumber":96,"author":{"gitId":"newway1814"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":97,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":98,"author":{"gitId":"jack1e0"},"content":"    @Test","lastModifiedDate":"2023-11-12"},{"lineNumber":99,"author":{"gitId":"jack1e0"},"content":"    public void recurringTask() {","lastModifiedDate":"2023-11-12"},{"lineNumber":100,"author":{"gitId":"jack1e0"},"content":"        Task daily \u003d new Task(new Name(\"daily\"), new Priority(\"3\"),","lastModifiedDate":"2023-11-12"},{"lineNumber":101,"author":{"gitId":"jack1e0"},"content":"                true, RecurringType.DAILY, new HashSet\u003c\u003e(),","lastModifiedDate":"2023-11-12"},{"lineNumber":102,"author":{"gitId":"jack1e0"},"content":"                new DueDate(\"01-01-2023\"), new Link(\"-\"), null);","lastModifiedDate":"2023-11-12"},{"lineNumber":103,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":104,"author":{"gitId":"jack1e0"},"content":"        daily.setStatus(Status.DONE_STATUS);","lastModifiedDate":"2023-11-12"},{"lineNumber":105,"author":{"gitId":"jack1e0"},"content":"        assertEquals(daily.getDueDate(), new DueDate(\"02-01-2023\"));","lastModifiedDate":"2023-11-12"},{"lineNumber":106,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":107,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":108,"author":{"gitId":"jack1e0"},"content":"        Task weekly \u003d new Task(new Name(\"weekly\"), new Priority(\"3\"),","lastModifiedDate":"2023-11-12"},{"lineNumber":109,"author":{"gitId":"jack1e0"},"content":"                true, RecurringType.WEEKLY, new HashSet\u003c\u003e(),","lastModifiedDate":"2023-11-12"},{"lineNumber":110,"author":{"gitId":"jack1e0"},"content":"                new DueDate(\"01-01-2023\"), new Link(\"-\"), null);","lastModifiedDate":"2023-11-12"},{"lineNumber":111,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":112,"author":{"gitId":"jack1e0"},"content":"        weekly.setStatus(Status.DONE_STATUS);","lastModifiedDate":"2023-11-12"},{"lineNumber":113,"author":{"gitId":"jack1e0"},"content":"        assertEquals(weekly.getDueDate(), new DueDate(\"08-01-2023\"));","lastModifiedDate":"2023-11-12"},{"lineNumber":114,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":115,"author":{"gitId":"jack1e0"},"content":"        Task monthly \u003d new Task(new Name(\"monthly\"), new Priority(\"3\"),","lastModifiedDate":"2023-11-12"},{"lineNumber":116,"author":{"gitId":"jack1e0"},"content":"                true, RecurringType.MONTHLY, new HashSet\u003c\u003e(),","lastModifiedDate":"2023-11-12"},{"lineNumber":117,"author":{"gitId":"jack1e0"},"content":"                new DueDate(\"01-01-2023\"), new Link(\"-\"), null);","lastModifiedDate":"2023-11-12"},{"lineNumber":118,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":119,"author":{"gitId":"jack1e0"},"content":"        monthly.setStatus(Status.DONE_STATUS);","lastModifiedDate":"2023-11-12"},{"lineNumber":120,"author":{"gitId":"jack1e0"},"content":"        assertEquals(monthly.getDueDate(), new DueDate(\"01-02-2023\"));","lastModifiedDate":"2023-11-12"},{"lineNumber":121,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":122,"author":{"gitId":"jack1e0"},"content":"        Task semesterly \u003d new Task(new Name(\"semly\"), new Priority(\"3\"),","lastModifiedDate":"2023-11-12"},{"lineNumber":123,"author":{"gitId":"jack1e0"},"content":"                true, RecurringType.SEMESTERLY, new HashSet\u003c\u003e(),","lastModifiedDate":"2023-11-12"},{"lineNumber":124,"author":{"gitId":"jack1e0"},"content":"                new DueDate(\"01-01-2023\"), new Link(\"-\"), null);","lastModifiedDate":"2023-11-12"},{"lineNumber":125,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":126,"author":{"gitId":"jack1e0"},"content":"        semesterly.setStatus(Status.DONE_STATUS);","lastModifiedDate":"2023-11-12"},{"lineNumber":127,"author":{"gitId":"jack1e0"},"content":"        assertEquals(semesterly.getDueDate(), new DueDate(\"30-06-2023\"));","lastModifiedDate":"2023-11-12"},{"lineNumber":128,"author":{"gitId":"jack1e0"},"content":"    }","lastModifiedDate":"2023-11-12"},{"lineNumber":129,"author":{"gitId":"newway1814"},"content":"}","lastModifiedDate":"2023-10-16"}],"authorContributionMap":{"jack1e0":39,"kiatkat":2,"eyelessrhyme7":6,"newway1814":82}},{"path":"src/test/java/profplan/model/task/UniqueTaskListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"newway1814"},"content":"package profplan.model.task;","lastModifiedDate":"2023-10-16"},{"lineNumber":2,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":3,"author":{"gitId":"newway1814"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-16"},{"lineNumber":4,"author":{"gitId":"newway1814"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-16"},{"lineNumber":5,"author":{"gitId":"newway1814"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-16"},{"lineNumber":6,"author":{"gitId":"newway1814"},"content":"import static profplan.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-10-16"},{"lineNumber":7,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":8,"author":{"gitId":"newway1814"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-16"},{"lineNumber":9,"author":{"gitId":"newway1814"},"content":"import java.util.Collections;","lastModifiedDate":"2023-10-16"},{"lineNumber":10,"author":{"gitId":"newway1814"},"content":"import java.util.List;","lastModifiedDate":"2023-10-16"},{"lineNumber":11,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":12,"author":{"gitId":"newway1814"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":14,"author":{"gitId":"newway1814"},"content":"import profplan.model.task.exceptions.DuplicateTaskException;","lastModifiedDate":"2023-10-16"},{"lineNumber":15,"author":{"gitId":"newway1814"},"content":"import profplan.model.task.exceptions.TaskNotFoundException;","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"newway1814"},"content":"import profplan.testutil.Assert;","lastModifiedDate":"2023-10-16"},{"lineNumber":17,"author":{"gitId":"newway1814"},"content":"import profplan.testutil.TaskBuilder;","lastModifiedDate":"2023-10-16"},{"lineNumber":18,"author":{"gitId":"newway1814"},"content":"import profplan.testutil.TypicalTasks;","lastModifiedDate":"2023-10-16"},{"lineNumber":19,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":20,"author":{"gitId":"newway1814"},"content":"public class UniqueTaskListTest {","lastModifiedDate":"2023-10-16"},{"lineNumber":21,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":22,"author":{"gitId":"newway1814"},"content":"    private final UniqueTaskList uniqueTaskList \u003d new UniqueTaskList();","lastModifiedDate":"2023-10-16"},{"lineNumber":23,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":24,"author":{"gitId":"newway1814"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":25,"author":{"gitId":"newway1814"},"content":"    public void contains_nullTask_throwsNullPointerException() {","lastModifiedDate":"2023-10-16"},{"lineNumber":26,"author":{"gitId":"newway1814"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e uniqueTaskList.contains(null));","lastModifiedDate":"2023-10-16"},{"lineNumber":27,"author":{"gitId":"newway1814"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":28,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":29,"author":{"gitId":"newway1814"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":30,"author":{"gitId":"newway1814"},"content":"    public void contains_taskNotInList_returnsFalse() {","lastModifiedDate":"2023-10-16"},{"lineNumber":31,"author":{"gitId":"newway1814"},"content":"        assertFalse(uniqueTaskList.contains(TypicalTasks.ALICE));","lastModifiedDate":"2023-10-16"},{"lineNumber":32,"author":{"gitId":"newway1814"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":33,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":34,"author":{"gitId":"newway1814"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":35,"author":{"gitId":"newway1814"},"content":"    public void contains_taskInList_returnsTrue() {","lastModifiedDate":"2023-10-16"},{"lineNumber":36,"author":{"gitId":"newway1814"},"content":"        uniqueTaskList.add(TypicalTasks.ALICE);","lastModifiedDate":"2023-10-16"},{"lineNumber":37,"author":{"gitId":"newway1814"},"content":"        assertTrue(uniqueTaskList.contains(TypicalTasks.ALICE));","lastModifiedDate":"2023-10-16"},{"lineNumber":38,"author":{"gitId":"newway1814"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":39,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":40,"author":{"gitId":"newway1814"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":41,"author":{"gitId":"newway1814"},"content":"    public void contains_taskWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2023-10-16"},{"lineNumber":42,"author":{"gitId":"newway1814"},"content":"        uniqueTaskList.add(TypicalTasks.ALICE);","lastModifiedDate":"2023-10-16"},{"lineNumber":43,"author":{"gitId":"kiatkat"},"content":"        Task editedAlice \u003d new TaskBuilder(TypicalTasks.ALICE)","lastModifiedDate":"2023-10-29"},{"lineNumber":44,"author":{"gitId":"newway1814"},"content":"                .withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2023-10-16"},{"lineNumber":45,"author":{"gitId":"newway1814"},"content":"                .build();","lastModifiedDate":"2023-10-16"},{"lineNumber":46,"author":{"gitId":"newway1814"},"content":"        assertTrue(uniqueTaskList.contains(editedAlice));","lastModifiedDate":"2023-10-16"},{"lineNumber":47,"author":{"gitId":"newway1814"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":48,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":49,"author":{"gitId":"newway1814"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":50,"author":{"gitId":"newway1814"},"content":"    public void add_nullTask_throwsNullPointerException() {","lastModifiedDate":"2023-10-16"},{"lineNumber":51,"author":{"gitId":"newway1814"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e uniqueTaskList.add(null));","lastModifiedDate":"2023-10-16"},{"lineNumber":52,"author":{"gitId":"newway1814"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":53,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":54,"author":{"gitId":"newway1814"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":55,"author":{"gitId":"newway1814"},"content":"    public void add_duplicateTask_throwsDuplicateTaskException() {","lastModifiedDate":"2023-10-16"},{"lineNumber":56,"author":{"gitId":"newway1814"},"content":"        uniqueTaskList.add(TypicalTasks.ALICE);","lastModifiedDate":"2023-10-16"},{"lineNumber":57,"author":{"gitId":"newway1814"},"content":"        Assert.assertThrows(DuplicateTaskException.class, () -\u003e uniqueTaskList.add(TypicalTasks.ALICE));","lastModifiedDate":"2023-10-16"},{"lineNumber":58,"author":{"gitId":"newway1814"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":59,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":60,"author":{"gitId":"newway1814"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":61,"author":{"gitId":"newway1814"},"content":"    public void setTask_nullTargetTask_throwsNullPointerException() {","lastModifiedDate":"2023-10-16"},{"lineNumber":62,"author":{"gitId":"newway1814"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e uniqueTaskList.setTask(null, TypicalTasks.ALICE));","lastModifiedDate":"2023-10-16"},{"lineNumber":63,"author":{"gitId":"newway1814"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":64,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":65,"author":{"gitId":"newway1814"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":66,"author":{"gitId":"newway1814"},"content":"    public void setTask_nullEditedTask_throwsNullPointerException() {","lastModifiedDate":"2023-10-16"},{"lineNumber":67,"author":{"gitId":"newway1814"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e uniqueTaskList.setTask(TypicalTasks.ALICE, null));","lastModifiedDate":"2023-10-16"},{"lineNumber":68,"author":{"gitId":"newway1814"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":69,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":70,"author":{"gitId":"newway1814"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":71,"author":{"gitId":"newway1814"},"content":"    public void setTask_targetTaskNotInList_throwsTaskNotFoundException() {","lastModifiedDate":"2023-10-16"},{"lineNumber":72,"author":{"gitId":"newway1814"},"content":"        Assert.assertThrows(TaskNotFoundException.class, () -\u003e uniqueTaskList.setTask(TypicalTasks.ALICE,","lastModifiedDate":"2023-10-16"},{"lineNumber":73,"author":{"gitId":"newway1814"},"content":"                TypicalTasks.ALICE));","lastModifiedDate":"2023-10-16"},{"lineNumber":74,"author":{"gitId":"newway1814"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":75,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":76,"author":{"gitId":"newway1814"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":77,"author":{"gitId":"newway1814"},"content":"    public void setTask_editedTaskIsSameTask_success() {","lastModifiedDate":"2023-10-16"},{"lineNumber":78,"author":{"gitId":"newway1814"},"content":"        uniqueTaskList.add(TypicalTasks.ALICE);","lastModifiedDate":"2023-10-16"},{"lineNumber":79,"author":{"gitId":"newway1814"},"content":"        uniqueTaskList.setTask(TypicalTasks.ALICE, TypicalTasks.ALICE);","lastModifiedDate":"2023-10-16"},{"lineNumber":80,"author":{"gitId":"newway1814"},"content":"        UniqueTaskList expectedUniqueTaskList \u003d new UniqueTaskList();","lastModifiedDate":"2023-10-16"},{"lineNumber":81,"author":{"gitId":"newway1814"},"content":"        expectedUniqueTaskList.add(TypicalTasks.ALICE);","lastModifiedDate":"2023-10-16"},{"lineNumber":82,"author":{"gitId":"newway1814"},"content":"        assertEquals(expectedUniqueTaskList, uniqueTaskList);","lastModifiedDate":"2023-10-16"},{"lineNumber":83,"author":{"gitId":"newway1814"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":84,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":85,"author":{"gitId":"newway1814"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":86,"author":{"gitId":"newway1814"},"content":"    public void setTask_editedTaskHasSameIdentity_success() {","lastModifiedDate":"2023-10-16"},{"lineNumber":87,"author":{"gitId":"newway1814"},"content":"        uniqueTaskList.add(TypicalTasks.ALICE);","lastModifiedDate":"2023-10-16"},{"lineNumber":88,"author":{"gitId":"kiatkat"},"content":"        Task editedAlice \u003d new TaskBuilder(TypicalTasks.ALICE)","lastModifiedDate":"2023-10-29"},{"lineNumber":89,"author":{"gitId":"newway1814"},"content":"                .withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2023-10-16"},{"lineNumber":90,"author":{"gitId":"newway1814"},"content":"                .build();","lastModifiedDate":"2023-10-16"},{"lineNumber":91,"author":{"gitId":"newway1814"},"content":"        uniqueTaskList.setTask(TypicalTasks.ALICE, editedAlice);","lastModifiedDate":"2023-10-16"},{"lineNumber":92,"author":{"gitId":"newway1814"},"content":"        UniqueTaskList expectedUniqueTaskList \u003d new UniqueTaskList();","lastModifiedDate":"2023-10-16"},{"lineNumber":93,"author":{"gitId":"newway1814"},"content":"        expectedUniqueTaskList.add(editedAlice);","lastModifiedDate":"2023-10-16"},{"lineNumber":94,"author":{"gitId":"newway1814"},"content":"        assertEquals(expectedUniqueTaskList, uniqueTaskList);","lastModifiedDate":"2023-10-16"},{"lineNumber":95,"author":{"gitId":"newway1814"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":96,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":97,"author":{"gitId":"newway1814"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":98,"author":{"gitId":"newway1814"},"content":"    public void setTask_editedTaskHasDifferentIdentity_success() {","lastModifiedDate":"2023-10-16"},{"lineNumber":99,"author":{"gitId":"newway1814"},"content":"        uniqueTaskList.add(TypicalTasks.ALICE);","lastModifiedDate":"2023-10-16"},{"lineNumber":100,"author":{"gitId":"newway1814"},"content":"        uniqueTaskList.setTask(TypicalTasks.ALICE, TypicalTasks.BOB);","lastModifiedDate":"2023-10-16"},{"lineNumber":101,"author":{"gitId":"newway1814"},"content":"        UniqueTaskList expectedUniqueTaskList \u003d new UniqueTaskList();","lastModifiedDate":"2023-10-16"},{"lineNumber":102,"author":{"gitId":"newway1814"},"content":"        expectedUniqueTaskList.add(TypicalTasks.BOB);","lastModifiedDate":"2023-10-16"},{"lineNumber":103,"author":{"gitId":"newway1814"},"content":"        assertEquals(expectedUniqueTaskList, uniqueTaskList);","lastModifiedDate":"2023-10-16"},{"lineNumber":104,"author":{"gitId":"newway1814"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":105,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":106,"author":{"gitId":"newway1814"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":107,"author":{"gitId":"newway1814"},"content":"    public void setTask_editedTaskHasNonUniqueIdentity_throwsDuplicateTaskException() {","lastModifiedDate":"2023-10-16"},{"lineNumber":108,"author":{"gitId":"newway1814"},"content":"        uniqueTaskList.add(TypicalTasks.ALICE);","lastModifiedDate":"2023-10-16"},{"lineNumber":109,"author":{"gitId":"newway1814"},"content":"        uniqueTaskList.add(TypicalTasks.BOB);","lastModifiedDate":"2023-10-16"},{"lineNumber":110,"author":{"gitId":"newway1814"},"content":"        Assert.assertThrows(DuplicateTaskException.class, () -\u003e uniqueTaskList.setTask(TypicalTasks.ALICE,","lastModifiedDate":"2023-10-16"},{"lineNumber":111,"author":{"gitId":"newway1814"},"content":"                TypicalTasks.BOB));","lastModifiedDate":"2023-10-16"},{"lineNumber":112,"author":{"gitId":"newway1814"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":113,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":114,"author":{"gitId":"newway1814"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":115,"author":{"gitId":"newway1814"},"content":"    public void remove_nullTask_throwsNullPointerException() {","lastModifiedDate":"2023-10-16"},{"lineNumber":116,"author":{"gitId":"newway1814"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e uniqueTaskList.remove(null));","lastModifiedDate":"2023-10-16"},{"lineNumber":117,"author":{"gitId":"newway1814"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":118,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":119,"author":{"gitId":"newway1814"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":120,"author":{"gitId":"newway1814"},"content":"    public void remove_taskDoesNotExist_throwsTaskNotFoundException() {","lastModifiedDate":"2023-10-16"},{"lineNumber":121,"author":{"gitId":"newway1814"},"content":"        Assert.assertThrows(TaskNotFoundException.class, () -\u003e uniqueTaskList.remove(TypicalTasks.ALICE));","lastModifiedDate":"2023-10-16"},{"lineNumber":122,"author":{"gitId":"newway1814"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":123,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":124,"author":{"gitId":"newway1814"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":125,"author":{"gitId":"newway1814"},"content":"    public void remove_existingTask_removesTask() {","lastModifiedDate":"2023-10-16"},{"lineNumber":126,"author":{"gitId":"newway1814"},"content":"        uniqueTaskList.add(TypicalTasks.ALICE);","lastModifiedDate":"2023-10-16"},{"lineNumber":127,"author":{"gitId":"newway1814"},"content":"        uniqueTaskList.remove(TypicalTasks.ALICE);","lastModifiedDate":"2023-10-16"},{"lineNumber":128,"author":{"gitId":"newway1814"},"content":"        UniqueTaskList expectedUniqueTaskList \u003d new UniqueTaskList();","lastModifiedDate":"2023-10-16"},{"lineNumber":129,"author":{"gitId":"newway1814"},"content":"        assertEquals(expectedUniqueTaskList, uniqueTaskList);","lastModifiedDate":"2023-10-16"},{"lineNumber":130,"author":{"gitId":"newway1814"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":131,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":132,"author":{"gitId":"newway1814"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":133,"author":{"gitId":"newway1814"},"content":"    public void setTasks_nullUniqueTaskList_throwsNullPointerException() {","lastModifiedDate":"2023-10-16"},{"lineNumber":134,"author":{"gitId":"newway1814"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e uniqueTaskList.setTasks((UniqueTaskList) null));","lastModifiedDate":"2023-10-16"},{"lineNumber":135,"author":{"gitId":"newway1814"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":136,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":137,"author":{"gitId":"newway1814"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":138,"author":{"gitId":"newway1814"},"content":"    public void setTasks_uniqueTaskList_replacesOwnListWithProvidedUniqueTaskList() {","lastModifiedDate":"2023-10-16"},{"lineNumber":139,"author":{"gitId":"newway1814"},"content":"        uniqueTaskList.add(TypicalTasks.ALICE);","lastModifiedDate":"2023-10-16"},{"lineNumber":140,"author":{"gitId":"newway1814"},"content":"        UniqueTaskList expectedUniqueTaskList \u003d new UniqueTaskList();","lastModifiedDate":"2023-10-16"},{"lineNumber":141,"author":{"gitId":"newway1814"},"content":"        expectedUniqueTaskList.add(TypicalTasks.BOB);","lastModifiedDate":"2023-10-16"},{"lineNumber":142,"author":{"gitId":"newway1814"},"content":"        uniqueTaskList.setTasks(expectedUniqueTaskList);","lastModifiedDate":"2023-10-16"},{"lineNumber":143,"author":{"gitId":"newway1814"},"content":"        assertEquals(expectedUniqueTaskList, uniqueTaskList);","lastModifiedDate":"2023-10-16"},{"lineNumber":144,"author":{"gitId":"newway1814"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":145,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":146,"author":{"gitId":"newway1814"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":147,"author":{"gitId":"newway1814"},"content":"    public void setTasks_nullList_throwsNullPointerException() {","lastModifiedDate":"2023-10-16"},{"lineNumber":148,"author":{"gitId":"newway1814"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e uniqueTaskList.setTasks((List\u003cTask\u003e) null));","lastModifiedDate":"2023-10-16"},{"lineNumber":149,"author":{"gitId":"newway1814"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":150,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":151,"author":{"gitId":"newway1814"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":152,"author":{"gitId":"newway1814"},"content":"    public void setTasks_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2023-10-16"},{"lineNumber":153,"author":{"gitId":"newway1814"},"content":"        uniqueTaskList.add(TypicalTasks.ALICE);","lastModifiedDate":"2023-10-16"},{"lineNumber":154,"author":{"gitId":"newway1814"},"content":"        List\u003cTask\u003e taskList \u003d Collections.singletonList(TypicalTasks.BOB);","lastModifiedDate":"2023-10-16"},{"lineNumber":155,"author":{"gitId":"newway1814"},"content":"        uniqueTaskList.setTasks(taskList);","lastModifiedDate":"2023-10-16"},{"lineNumber":156,"author":{"gitId":"newway1814"},"content":"        UniqueTaskList expectedUniqueTaskList \u003d new UniqueTaskList();","lastModifiedDate":"2023-10-16"},{"lineNumber":157,"author":{"gitId":"newway1814"},"content":"        expectedUniqueTaskList.add(TypicalTasks.BOB);","lastModifiedDate":"2023-10-16"},{"lineNumber":158,"author":{"gitId":"newway1814"},"content":"        assertEquals(expectedUniqueTaskList, uniqueTaskList);","lastModifiedDate":"2023-10-16"},{"lineNumber":159,"author":{"gitId":"newway1814"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":160,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":161,"author":{"gitId":"newway1814"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":162,"author":{"gitId":"newway1814"},"content":"    public void setTasks_listWithDuplicateTasks_throwsDuplicateTaskException() {","lastModifiedDate":"2023-10-16"},{"lineNumber":163,"author":{"gitId":"newway1814"},"content":"        List\u003cTask\u003e listWithDuplicateTasks \u003d Arrays.asList(TypicalTasks.ALICE, TypicalTasks.ALICE);","lastModifiedDate":"2023-10-16"},{"lineNumber":164,"author":{"gitId":"newway1814"},"content":"        Assert.assertThrows(DuplicateTaskException.class, () -\u003e uniqueTaskList.setTasks(","lastModifiedDate":"2023-10-16"},{"lineNumber":165,"author":{"gitId":"newway1814"},"content":"            listWithDuplicateTasks));","lastModifiedDate":"2023-10-16"},{"lineNumber":166,"author":{"gitId":"newway1814"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":167,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":168,"author":{"gitId":"newway1814"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":169,"author":{"gitId":"newway1814"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-10-16"},{"lineNumber":170,"author":{"gitId":"newway1814"},"content":"        Assert.assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2023-10-16"},{"lineNumber":171,"author":{"gitId":"newway1814"},"content":"            -\u003e uniqueTaskList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2023-10-16"},{"lineNumber":172,"author":{"gitId":"newway1814"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":173,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":174,"author":{"gitId":"newway1814"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":175,"author":{"gitId":"newway1814"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-16"},{"lineNumber":176,"author":{"gitId":"newway1814"},"content":"        assertEquals(uniqueTaskList.asUnmodifiableObservableList().toString(), uniqueTaskList.toString());","lastModifiedDate":"2023-10-16"},{"lineNumber":177,"author":{"gitId":"newway1814"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":178,"author":{"gitId":"newway1814"},"content":"}","lastModifiedDate":"2023-10-16"}],"authorContributionMap":{"kiatkat":2,"newway1814":176}},{"path":"src/test/java/profplan/storage/JsonAdaptedTaskTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kiatkat"},"content":"package profplan.storage;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"newway1814"},"content":"import static profplan.storage.JsonAdaptedTask.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2023-10-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"kiatkat"},"content":"import profplan.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"jack1e0"},"content":"import profplan.model.task.DueDate;","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"newway1814"},"content":"import profplan.model.task.Name;","lastModifiedDate":"2023-10-16"},{"lineNumber":15,"author":{"gitId":"eyelessrhyme7"},"content":"import profplan.model.task.Priority;","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"kiatkat"},"content":"import profplan.testutil.Assert;","lastModifiedDate":"2023-10-14"},{"lineNumber":17,"author":{"gitId":"newway1814"},"content":"import profplan.testutil.TypicalTasks;","lastModifiedDate":"2023-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"newway1814"},"content":"public class JsonAdaptedTaskTest {","lastModifiedDate":"2023-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"eyelessrhyme7"},"content":"    private static final String INVALID_PRIORITY \u003d \"+651234\";","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"jack1e0"},"content":"    private static final String INVALID_DUEDATE \u003d \"31/01/3000\";","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"newway1814"},"content":"    private static final String VALID_NAME \u003d TypicalTasks.BENSON.getName().toString();","lastModifiedDate":"2023-10-16"},{"lineNumber":26,"author":{"gitId":"eyelessrhyme7"},"content":"    private static final String VALID_PRIORITY \u003d TypicalTasks.BENSON.getPriority().toString();","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"newway1814"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d TypicalTasks.BENSON.getTags().stream()","lastModifiedDate":"2023-10-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"jack1e0"},"content":"    private static final String VALID_DUEDATE \u003d TypicalTasks.BENSON.getDueDate().toString();","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"kiatkat"},"content":"    private static final String VALID_DESCRIPTION \u003d TypicalTasks.BENSON.getDescription().toString();","lastModifiedDate":"2023-10-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"newway1814"},"content":"    public void toModelType_validTaskDetails_returnsTask() throws Exception {","lastModifiedDate":"2023-10-16"},{"lineNumber":36,"author":{"gitId":"newway1814"},"content":"        JsonAdaptedTask task \u003d new JsonAdaptedTask(TypicalTasks.BENSON);","lastModifiedDate":"2023-10-16"},{"lineNumber":37,"author":{"gitId":"newway1814"},"content":"        assertEquals(TypicalTasks.BENSON, task.toModelType());","lastModifiedDate":"2023-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"kiatkat"},"content":"        JsonAdaptedTask task \u003d new JsonAdaptedTask(INVALID_NAME, VALID_PRIORITY, false, null,","lastModifiedDate":"2023-10-30"},{"lineNumber":43,"author":{"gitId":"kiatkat"},"content":"                VALID_TAGS, \"undone\", VALID_DUEDATE,","lastModifiedDate":"2023-11-01"},{"lineNumber":44,"author":{"gitId":"kiatkat"},"content":"                null, VALID_DESCRIPTION);","lastModifiedDate":"2023-10-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"newway1814"},"content":"        Assert.assertThrows(IllegalValueException.class, expectedMessage, task::toModelType);","lastModifiedDate":"2023-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"kiatkat"},"content":"        JsonAdaptedTask task \u003d new JsonAdaptedTask(null, VALID_PRIORITY, false, null,","lastModifiedDate":"2023-10-30"},{"lineNumber":52,"author":{"gitId":"kiatkat"},"content":"                VALID_TAGS, \"undone\", VALID_DUEDATE,","lastModifiedDate":"2023-11-01"},{"lineNumber":53,"author":{"gitId":"kiatkat"},"content":"                null, VALID_DESCRIPTION);","lastModifiedDate":"2023-10-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"newway1814"},"content":"        Assert.assertThrows(IllegalValueException.class, expectedMessage, task::toModelType);","lastModifiedDate":"2023-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"eyelessrhyme7"},"content":"    public void toModelType_invalidPriority_throwsIllegalValueException() {","lastModifiedDate":"2023-10-17"},{"lineNumber":60,"author":{"gitId":"kiatkat"},"content":"        JsonAdaptedTask task \u003d new JsonAdaptedTask(VALID_NAME, INVALID_PRIORITY, false, null,","lastModifiedDate":"2023-10-30"},{"lineNumber":61,"author":{"gitId":"kiatkat"},"content":"                VALID_TAGS, \"undone\", VALID_DUEDATE,","lastModifiedDate":"2023-11-01"},{"lineNumber":62,"author":{"gitId":"kiatkat"},"content":"                null, VALID_DESCRIPTION);","lastModifiedDate":"2023-10-26"},{"lineNumber":63,"author":{"gitId":"eyelessrhyme7"},"content":"        String expectedMessage \u003d Priority.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-10-18"},{"lineNumber":64,"author":{"gitId":"newway1814"},"content":"        Assert.assertThrows(IllegalValueException.class, expectedMessage, task::toModelType);","lastModifiedDate":"2023-10-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"eyelessrhyme7"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"kiatkat"},"content":"        JsonAdaptedTask task \u003d new JsonAdaptedTask(VALID_NAME, null, false, null,","lastModifiedDate":"2023-10-30"},{"lineNumber":71,"author":{"gitId":"kiatkat"},"content":"                VALID_TAGS, \"undone\", VALID_DUEDATE,","lastModifiedDate":"2023-11-01"},{"lineNumber":72,"author":{"gitId":"kiatkat"},"content":"                null, VALID_DESCRIPTION);","lastModifiedDate":"2023-10-26"},{"lineNumber":73,"author":{"gitId":"eyelessrhyme7"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Priority.class.getSimpleName());","lastModifiedDate":"2023-10-17"},{"lineNumber":74,"author":{"gitId":"newway1814"},"content":"        Assert.assertThrows(IllegalValueException.class, expectedMessage, task::toModelType);","lastModifiedDate":"2023-10-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"kiatkat"},"content":"        JsonAdaptedTask task \u003d new JsonAdaptedTask(VALID_NAME, VALID_PRIORITY, false, null,","lastModifiedDate":"2023-10-30"},{"lineNumber":82,"author":{"gitId":"kiatkat"},"content":"                invalidTags, \"undone\", VALID_DUEDATE, null, VALID_DESCRIPTION);","lastModifiedDate":"2023-11-01"},{"lineNumber":83,"author":{"gitId":"newway1814"},"content":"        Assert.assertThrows(IllegalValueException.class, task::toModelType);","lastModifiedDate":"2023-10-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"jack1e0"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":87,"author":{"gitId":"jack1e0"},"content":"    public void toModelType_invalidDueDate_throwsIllegalValueException() {","lastModifiedDate":"2023-10-17"},{"lineNumber":88,"author":{"gitId":"kiatkat"},"content":"        JsonAdaptedTask task \u003d new JsonAdaptedTask(VALID_NAME, VALID_PRIORITY, false, null,","lastModifiedDate":"2023-10-30"},{"lineNumber":89,"author":{"gitId":"kiatkat"},"content":"                VALID_TAGS, \"undone\", INVALID_DUEDATE,","lastModifiedDate":"2023-11-01"},{"lineNumber":90,"author":{"gitId":"kiatkat"},"content":"                null, VALID_DESCRIPTION);","lastModifiedDate":"2023-10-26"},{"lineNumber":91,"author":{"gitId":"jack1e0"},"content":"        String expectedMessage \u003d DueDate.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-10-17"},{"lineNumber":92,"author":{"gitId":"jack1e0"},"content":"        Assert.assertThrows(IllegalValueException.class, expectedMessage, task::toModelType);","lastModifiedDate":"2023-10-17"},{"lineNumber":93,"author":{"gitId":"jack1e0"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":94,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":95,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"jack1e0":9,"kiatkat":21,"eyelessrhyme7":7,"-":44,"newway1814":14}},{"path":"src/test/java/profplan/storage/JsonProfPlanStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kiatkat"},"content":"package profplan.storage;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"kiatkat"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"kiatkat"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"kiatkat"},"content":"import java.io.IOException;","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"kiatkat"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"kiatkat"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"kiatkat"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"kiatkat"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"kiatkat"},"content":"import profplan.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-10-14"},{"lineNumber":14,"author":{"gitId":"kiatkat"},"content":"import profplan.model.ProfPlan;","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"kiatkat"},"content":"import profplan.model.ReadOnlyProfPlan;","lastModifiedDate":"2023-10-14"},{"lineNumber":16,"author":{"gitId":"kiatkat"},"content":"import profplan.testutil.Assert;","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"newway1814"},"content":"import profplan.testutil.TypicalTasks;","lastModifiedDate":"2023-10-16"},{"lineNumber":18,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"kiatkat"},"content":"public class JsonProfPlanStorageTest {","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"newway1814"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonProfPlanStorageTest\");","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"kiatkat"},"content":"    @TempDir","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"kiatkat"},"content":"    public Path testFolder;","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"kiatkat"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"kiatkat"},"content":"    public void readProfPlan_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"kiatkat"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e readProfPlan(null));","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"kiatkat"},"content":"    private java.util.Optional\u003cReadOnlyProfPlan\u003e readProfPlan(String filePath) throws Exception {","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"kiatkat"},"content":"        return new JsonProfPlanStorage(Paths.get(filePath)).readProfPlan(addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"kiatkat"},"content":"    private Path addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"kiatkat"},"content":"        return prefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"kiatkat"},"content":"                ? TEST_DATA_FOLDER.resolve(prefsFileInTestDataFolder)","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"kiatkat"},"content":"                : null;","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"kiatkat"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":41,"author":{"gitId":"kiatkat"},"content":"    public void read_missingFile_emptyResult() throws Exception {","lastModifiedDate":"2023-10-13"},{"lineNumber":42,"author":{"gitId":"kiatkat"},"content":"        assertFalse(readProfPlan(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2023-10-13"},{"lineNumber":43,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":44,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":45,"author":{"gitId":"kiatkat"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":46,"author":{"gitId":"kiatkat"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2023-10-13"},{"lineNumber":47,"author":{"gitId":"kiatkat"},"content":"        Assert.assertThrows(DataLoadingException.class, () -\u003e readProfPlan(\"notJsonFormatProfPlan.json\"));","lastModifiedDate":"2023-10-13"},{"lineNumber":48,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":49,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":50,"author":{"gitId":"kiatkat"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":51,"author":{"gitId":"newway1814"},"content":"    public void readProfPlan_invalidTaskProfPlan_throwDataLoadingException() {","lastModifiedDate":"2023-10-16"},{"lineNumber":52,"author":{"gitId":"newway1814"},"content":"        Assert.assertThrows(DataLoadingException.class, () -\u003e readProfPlan(\"invalidTaskProfPlan.json\"));","lastModifiedDate":"2023-10-16"},{"lineNumber":53,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":54,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":55,"author":{"gitId":"kiatkat"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":56,"author":{"gitId":"newway1814"},"content":"    public void readProfPlan_invalidAndValidTaskProfPlan_throwDataLoadingException() {","lastModifiedDate":"2023-10-16"},{"lineNumber":57,"author":{"gitId":"newway1814"},"content":"        Assert.assertThrows(DataLoadingException.class, () -\u003e readProfPlan(\"invalidAndValidTaskProfPlan.json\"));","lastModifiedDate":"2023-10-16"},{"lineNumber":58,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":59,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":60,"author":{"gitId":"kiatkat"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":61,"author":{"gitId":"kiatkat"},"content":"    public void readAndSaveProfPlan_allInOrder_success() throws Exception {","lastModifiedDate":"2023-10-13"},{"lineNumber":62,"author":{"gitId":"kiatkat"},"content":"        Path filePath \u003d testFolder.resolve(\"TempAddressBook.json\");","lastModifiedDate":"2023-10-13"},{"lineNumber":63,"author":{"gitId":"newway1814"},"content":"        ProfPlan original \u003d TypicalTasks.getTypicalProfPlan();","lastModifiedDate":"2023-10-16"},{"lineNumber":64,"author":{"gitId":"kiatkat"},"content":"        JsonProfPlanStorage jsonProfPlanStorage \u003d new JsonProfPlanStorage(filePath);","lastModifiedDate":"2023-10-13"},{"lineNumber":65,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":66,"author":{"gitId":"kiatkat"},"content":"        // Save in new file and read back","lastModifiedDate":"2023-10-13"},{"lineNumber":67,"author":{"gitId":"kiatkat"},"content":"        jsonProfPlanStorage.saveProfPlan(original, filePath);","lastModifiedDate":"2023-10-13"},{"lineNumber":68,"author":{"gitId":"kiatkat"},"content":"        ReadOnlyProfPlan readBack \u003d jsonProfPlanStorage.readProfPlan(filePath).get();","lastModifiedDate":"2023-10-13"},{"lineNumber":69,"author":{"gitId":"kiatkat"},"content":"        assertEquals(original, new ProfPlan(readBack));","lastModifiedDate":"2023-10-13"},{"lineNumber":70,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":71,"author":{"gitId":"kiatkat"},"content":"        // Modify data, overwrite exiting file, and read back","lastModifiedDate":"2023-10-13"},{"lineNumber":72,"author":{"gitId":"newway1814"},"content":"        original.addTask(TypicalTasks.HOON);","lastModifiedDate":"2023-10-16"},{"lineNumber":73,"author":{"gitId":"newway1814"},"content":"        original.removeTask(TypicalTasks.ALICE);","lastModifiedDate":"2023-10-16"},{"lineNumber":74,"author":{"gitId":"kiatkat"},"content":"        jsonProfPlanStorage.saveProfPlan(original, filePath);","lastModifiedDate":"2023-10-13"},{"lineNumber":75,"author":{"gitId":"kiatkat"},"content":"        readBack \u003d jsonProfPlanStorage.readProfPlan(filePath).get();","lastModifiedDate":"2023-10-13"},{"lineNumber":76,"author":{"gitId":"kiatkat"},"content":"        assertEquals(original, new ProfPlan(readBack));","lastModifiedDate":"2023-10-13"},{"lineNumber":77,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":78,"author":{"gitId":"kiatkat"},"content":"        // Save and read without specifying file path","lastModifiedDate":"2023-10-13"},{"lineNumber":79,"author":{"gitId":"newway1814"},"content":"        original.addTask(TypicalTasks.IDA);","lastModifiedDate":"2023-10-16"},{"lineNumber":80,"author":{"gitId":"kiatkat"},"content":"        jsonProfPlanStorage.saveProfPlan(original); // file path not specified","lastModifiedDate":"2023-10-13"},{"lineNumber":81,"author":{"gitId":"kiatkat"},"content":"        readBack \u003d jsonProfPlanStorage.readProfPlan().get(); // file path not specified","lastModifiedDate":"2023-10-13"},{"lineNumber":82,"author":{"gitId":"kiatkat"},"content":"        assertEquals(original, new ProfPlan(readBack));","lastModifiedDate":"2023-10-13"},{"lineNumber":83,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":84,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":85,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":86,"author":{"gitId":"kiatkat"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":87,"author":{"gitId":"kiatkat"},"content":"    public void saveProfPlan_nullProfPlan_throwsNullPointerException() {","lastModifiedDate":"2023-10-13"},{"lineNumber":88,"author":{"gitId":"kiatkat"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e saveProfPlan(null, \"SomeFile.json\"));","lastModifiedDate":"2023-10-13"},{"lineNumber":89,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":90,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":91,"author":{"gitId":"kiatkat"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":92,"author":{"gitId":"kiatkat"},"content":"     * Saves {@code addressBook} at the specified {@code filePath}.","lastModifiedDate":"2023-10-13"},{"lineNumber":93,"author":{"gitId":"kiatkat"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":94,"author":{"gitId":"kiatkat"},"content":"    private void saveProfPlan(ReadOnlyProfPlan profPlan, String filePath) {","lastModifiedDate":"2023-10-13"},{"lineNumber":95,"author":{"gitId":"kiatkat"},"content":"        try {","lastModifiedDate":"2023-10-13"},{"lineNumber":96,"author":{"gitId":"kiatkat"},"content":"            new JsonProfPlanStorage(Paths.get(filePath))","lastModifiedDate":"2023-10-13"},{"lineNumber":97,"author":{"gitId":"kiatkat"},"content":"                    .saveProfPlan(profPlan, addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2023-10-13"},{"lineNumber":98,"author":{"gitId":"kiatkat"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2023-10-13"},{"lineNumber":99,"author":{"gitId":"kiatkat"},"content":"            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);","lastModifiedDate":"2023-10-13"},{"lineNumber":100,"author":{"gitId":"kiatkat"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":101,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":102,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":103,"author":{"gitId":"kiatkat"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":104,"author":{"gitId":"kiatkat"},"content":"    public void saveProfPlan_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2023-10-13"},{"lineNumber":105,"author":{"gitId":"kiatkat"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e saveProfPlan(new ProfPlan(), null));","lastModifiedDate":"2023-10-13"},{"lineNumber":106,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":107,"author":{"gitId":"kiatkat"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"kiatkat":97,"newway1814":10}},{"path":"src/test/java/profplan/storage/JsonSerializableProfPlanTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kiatkat"},"content":"package profplan.storage;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"kiatkat"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"kiatkat"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"kiatkat"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"kiatkat"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"kiatkat"},"content":"import profplan.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-10-14"},{"lineNumber":11,"author":{"gitId":"kiatkat"},"content":"import profplan.commons.util.JsonUtil;","lastModifiedDate":"2023-10-14"},{"lineNumber":12,"author":{"gitId":"kiatkat"},"content":"import profplan.model.ProfPlan;","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"kiatkat"},"content":"import profplan.testutil.Assert;","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"newway1814"},"content":"import profplan.testutil.TypicalTasks;","lastModifiedDate":"2023-10-16"},{"lineNumber":15,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"kiatkat"},"content":"public class JsonSerializableProfPlanTest {","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"newway1814"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonSerializableProfPlanTest\");","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"newway1814"},"content":"    private static final Path TYPICAL_TASKS_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalTasksProfPlan.json\");","lastModifiedDate":"2023-10-16"},{"lineNumber":20,"author":{"gitId":"newway1814"},"content":"    private static final Path INVALID_TASK_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidTaskProfPlan.json\");","lastModifiedDate":"2023-10-16"},{"lineNumber":21,"author":{"gitId":"newway1814"},"content":"    private static final Path DUPLICATE_TASK_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicateTaskProfPlan.json\");","lastModifiedDate":"2023-10-16"},{"lineNumber":22,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"kiatkat"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"newway1814"},"content":"    public void toModelType_typicalTasksFile_success() throws Exception {","lastModifiedDate":"2023-10-16"},{"lineNumber":25,"author":{"gitId":"newway1814"},"content":"        JsonSerializableProfPlan dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_TASKS_FILE,","lastModifiedDate":"2023-10-16"},{"lineNumber":26,"author":{"gitId":"kiatkat"},"content":"                JsonSerializableProfPlan.class).get();","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"kiatkat"},"content":"        ProfPlan profPlanFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"newway1814"},"content":"        ProfPlan typicalTasksProfPlan \u003d TypicalTasks.getTypicalProfPlan();","lastModifiedDate":"2023-10-16"},{"lineNumber":29,"author":{"gitId":"newway1814"},"content":"        assertEquals(profPlanFromFile, typicalTasksProfPlan);","lastModifiedDate":"2023-10-16"},{"lineNumber":30,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"kiatkat"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"newway1814"},"content":"    public void toModelType_invalidTaskFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2023-10-16"},{"lineNumber":34,"author":{"gitId":"newway1814"},"content":"        JsonSerializableProfPlan dataFromFile \u003d JsonUtil.readJsonFile(INVALID_TASK_FILE,","lastModifiedDate":"2023-10-16"},{"lineNumber":35,"author":{"gitId":"kiatkat"},"content":"                JsonSerializableProfPlan.class).get();","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"kiatkat"},"content":"        Assert.assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"kiatkat"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"newway1814"},"content":"    public void toModelType_duplicateTasks_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2023-10-16"},{"lineNumber":41,"author":{"gitId":"newway1814"},"content":"        JsonSerializableProfPlan dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_TASK_FILE,","lastModifiedDate":"2023-10-16"},{"lineNumber":42,"author":{"gitId":"kiatkat"},"content":"                JsonSerializableProfPlan.class).get();","lastModifiedDate":"2023-10-13"},{"lineNumber":43,"author":{"gitId":"newway1814"},"content":"        Assert.assertThrows(IllegalValueException.class, JsonSerializableProfPlan.MESSAGE_DUPLICATE_TASK,","lastModifiedDate":"2023-10-16"},{"lineNumber":44,"author":{"gitId":"kiatkat"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2023-10-13"},{"lineNumber":45,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":46,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":47,"author":{"gitId":"kiatkat"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"kiatkat":33,"newway1814":14}},{"path":"src/test/java/profplan/storage/JsonUserPrefsStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kiatkat"},"content":"package profplan.storage;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":14,"author":{"gitId":"kiatkat"},"content":"import profplan.commons.core.GuiSettings;","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"kiatkat"},"content":"import profplan.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"kiatkat"},"content":"import profplan.model.UserPrefs;","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"kiatkat"},"content":"import profplan.testutil.Assert;","lastModifiedDate":"2023-10-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorageTest {","lastModifiedDate":"2016-10-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonUserPrefsStorageTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void readUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"kiatkat"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e readUserPrefs(null));","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Optional\u003cUserPrefs\u003e readUserPrefs(String userPrefsFileInTestDataFolder) throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d addToTestDataPathIfNotNull(userPrefsFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return new JsonUserPrefsStorage(prefsFilePath).readUserPrefs(prefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void readUserPrefs_missingFile_emptyResult() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(readUserPrefs(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void readUserPrefs_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":43,"author":{"gitId":"kiatkat"},"content":"        Assert.assertThrows(DataLoadingException.class, () -\u003e readUserPrefs(\"NotJsonFormatUserPrefs.json\"));","lastModifiedDate":"2023-10-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String userPrefsFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return userPrefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(userPrefsFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void readUserPrefs_fileInOrder_successfullyRead() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"TypicalUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void readUserPrefs_valuesMissingFromFile_defaultValuesUsed() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"EmptyUserPrefs.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void readUserPrefs_extraValuesInFile_extraValuesIgnored() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"ExtraValuesUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    private UserPrefs getTypicalUserPrefs() {","lastModifiedDate":"2017-02-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1000, 500, 300, 100));","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"kiatkat"},"content":"        userPrefs.setProfPlanFilePath(Paths.get(\"addressbook.json\"));","lastModifiedDate":"2023-10-30"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2017-02-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void savePrefs_nullPrefs_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":82,"author":{"gitId":"kiatkat"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(null, \"SomeFile.json\"));","lastModifiedDate":"2023-10-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":87,"author":{"gitId":"kiatkat"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(new UserPrefs(), null));","lastModifiedDate":"2023-10-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Saves {@code userPrefs} at the specified {@code prefsFileInTestDataFolder} filepath.","lastModifiedDate":"2017-08-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    private void saveUserPrefs(UserPrefs userPrefs, String prefsFileInTestDataFolder) {","lastModifiedDate":"2017-08-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            new JsonUserPrefsStorage(addToTestDataPathIfNotNull(prefsFileInTestDataFolder))","lastModifiedDate":"2016-10-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                    .saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file\", ioe);","lastModifiedDate":"2017-08-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_allInOrder_success() throws DataLoadingException, IOException {","lastModifiedDate":"2023-06-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(1200, 200, 0, 2));","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        Path pefsFilePath \u003d testFolder.resolve(\"TempPrefs.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage jsonUserPrefsStorage \u003d new JsonUserPrefsStorage(pefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        UserPrefs readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(5, 5, 5, 5));","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"kiatkat":10,"-":113}},{"path":"src/test/java/profplan/storage/StorageManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kiatkat"},"content":"package profplan.storage;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"kiatkat"},"content":"import profplan.commons.core.GuiSettings;","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"kiatkat"},"content":"import profplan.model.ProfPlan;","lastModifiedDate":"2023-10-14"},{"lineNumber":14,"author":{"gitId":"kiatkat"},"content":"import profplan.model.ReadOnlyProfPlan;","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"kiatkat"},"content":"import profplan.model.UserPrefs;","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"newway1814"},"content":"import profplan.testutil.TypicalTasks;","lastModifiedDate":"2023-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class StorageManagerTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private StorageManager storageManager;","lastModifiedDate":"2017-04-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"kiatkat"},"content":"        JsonProfPlanStorage addressBookStorage \u003d new JsonProfPlanStorage(getTempFilePath(\"ab\"));","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));","lastModifiedDate":"2017-02-25"},{"lineNumber":29,"author":{"gitId":"kiatkat"},"content":"        JsonUserConfigsStorage userConfigsStorage \u003d new JsonUserConfigsStorage(getTempFilePath(\"configs\"));","lastModifiedDate":"2023-11-01"},{"lineNumber":30,"author":{"gitId":"kiatkat"},"content":"        storageManager \u003d new StorageManager(addressBookStorage, userPrefsStorage, userConfigsStorage);","lastModifiedDate":"2023-11-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private Path getTempFilePath(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return testFolder.resolve(fileName);","lastModifiedDate":"2019-04-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void prefsReadSave() throws Exception {","lastModifiedDate":"2016-10-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-09-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-09-28"},{"lineNumber":41,"author":{"gitId":"-"},"content":"         * {@link JsonUserPrefsStorage} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonUserPrefsStorageTest} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-09-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(300, 600, 4, 6));","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        storageManager.saveUserPrefs(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        UserPrefs retrieved \u003d storageManager.readUserPrefs().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertEquals(original, retrieved);","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"kiatkat"},"content":"    public void profPlanReadSave() throws Exception {","lastModifiedDate":"2023-10-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-10-16"},{"lineNumber":55,"author":{"gitId":"kiatkat"},"content":"         * {@link JsonProfPlanStorage} class.","lastModifiedDate":"2023-10-13"},{"lineNumber":56,"author":{"gitId":"kiatkat"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonProfPlanStorageTest} class.","lastModifiedDate":"2023-10-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"newway1814"},"content":"        ProfPlan original \u003d TypicalTasks.getTypicalProfPlan();","lastModifiedDate":"2023-10-16"},{"lineNumber":59,"author":{"gitId":"kiatkat"},"content":"        storageManager.saveProfPlan(original);","lastModifiedDate":"2023-10-13"},{"lineNumber":60,"author":{"gitId":"kiatkat"},"content":"        ReadOnlyProfPlan retrieved \u003d storageManager.readProfPlan().get();","lastModifiedDate":"2023-10-13"},{"lineNumber":61,"author":{"gitId":"kiatkat"},"content":"        assertEquals(original, new ProfPlan(retrieved));","lastModifiedDate":"2023-10-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-01"},{"lineNumber":65,"author":{"gitId":"kiatkat"},"content":"    public void getProfPlanFilePath() {","lastModifiedDate":"2023-10-13"},{"lineNumber":66,"author":{"gitId":"kiatkat"},"content":"        assertNotNull(storageManager.getProfPlanFilePath());","lastModifiedDate":"2023-10-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"kiatkat":16,"-":51,"newway1814":2}},{"path":"src/test/java/profplan/testutil/Assert.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kiatkat"},"content":"package profplan.testutil;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2019-03-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.function.Executable;","lastModifiedDate":"2019-03-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * A set of assertion methods useful for writing tests.","lastModifiedDate":"2017-07-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class Assert {","lastModifiedDate":"2017-07-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Asserts that the {@code executable} throws the {@code expectedType} Exception.","lastModifiedDate":"2019-03-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * This is a wrapper method that invokes {@link Assertions#assertThrows(Class, Executable)}, to maintain consistency","lastModifiedDate":"2019-03-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * with our custom {@link #assertThrows(Class, String, Executable)} method.","lastModifiedDate":"2019-03-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * To standardize API calls in this project, users should use this method instead of","lastModifiedDate":"2019-03-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * {@link Assertions#assertThrows(Class, Executable)}.","lastModifiedDate":"2019-03-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static void assertThrows(Class\u003c? extends Throwable\u003e expectedType, Executable executable) {","lastModifiedDate":"2019-03-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        Assertions.assertThrows(expectedType, executable);","lastModifiedDate":"2019-03-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-02-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-02-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-02-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Asserts that the {@code executable} throws the {@code expectedType} Exception with the {@code expectedMessage}.","lastModifiedDate":"2019-03-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * If there\u0027s no need for the verification of the exception\u0027s error message, call","lastModifiedDate":"2018-02-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * {@link #assertThrows(Class, Executable)} instead.","lastModifiedDate":"2019-03-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2019-03-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @see #assertThrows(Class, Executable)","lastModifiedDate":"2019-03-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-02-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static void assertThrows(Class\u003c? extends Throwable\u003e expectedType, String expectedMessage,","lastModifiedDate":"2019-03-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            Executable executable) {","lastModifiedDate":"2019-03-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        Throwable thrownException \u003d Assertions.assertThrows(expectedType, executable);","lastModifiedDate":"2019-03-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(expectedMessage, thrownException.getMessage());","lastModifiedDate":"2019-03-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-17"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-17"}],"authorContributionMap":{"kiatkat":1,"-":33}},{"path":"src/test/java/profplan/testutil/EditTaskDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"newway1814"},"content":"package profplan.testutil;","lastModifiedDate":"2023-10-16"},{"lineNumber":2,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":3,"author":{"gitId":"newway1814"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-16"},{"lineNumber":4,"author":{"gitId":"newway1814"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-10-16"},{"lineNumber":5,"author":{"gitId":"newway1814"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-10-16"},{"lineNumber":6,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":7,"author":{"gitId":"newway1814"},"content":"import profplan.logic.commands.EditCommand.EditTaskDescriptor;","lastModifiedDate":"2023-10-16"},{"lineNumber":8,"author":{"gitId":"newway1814"},"content":"import profplan.model.tag.Tag;","lastModifiedDate":"2023-10-16"},{"lineNumber":9,"author":{"gitId":"yarnmengnus"},"content":"import profplan.model.task.Link;","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"newway1814"},"content":"import profplan.model.task.Name;","lastModifiedDate":"2023-10-16"},{"lineNumber":11,"author":{"gitId":"eyelessrhyme7"},"content":"import profplan.model.task.Priority;","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"newway1814"},"content":"import profplan.model.task.Task;","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":14,"author":{"gitId":"newway1814"},"content":"/**","lastModifiedDate":"2023-10-16"},{"lineNumber":15,"author":{"gitId":"newway1814"},"content":" * A utility class to help with building EditTaskDescriptor objects.","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"newway1814"},"content":" */","lastModifiedDate":"2023-10-16"},{"lineNumber":17,"author":{"gitId":"newway1814"},"content":"public class EditTaskDescriptorBuilder {","lastModifiedDate":"2023-10-16"},{"lineNumber":18,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":19,"author":{"gitId":"newway1814"},"content":"    private EditTaskDescriptor descriptor;","lastModifiedDate":"2023-10-16"},{"lineNumber":20,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":21,"author":{"gitId":"newway1814"},"content":"    public EditTaskDescriptorBuilder() {","lastModifiedDate":"2023-10-16"},{"lineNumber":22,"author":{"gitId":"newway1814"},"content":"        descriptor \u003d new EditTaskDescriptor();","lastModifiedDate":"2023-10-16"},{"lineNumber":23,"author":{"gitId":"newway1814"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":24,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":25,"author":{"gitId":"newway1814"},"content":"    public EditTaskDescriptorBuilder(EditTaskDescriptor descriptor) {","lastModifiedDate":"2023-10-16"},{"lineNumber":26,"author":{"gitId":"newway1814"},"content":"        this.descriptor \u003d new EditTaskDescriptor(descriptor);","lastModifiedDate":"2023-10-16"},{"lineNumber":27,"author":{"gitId":"newway1814"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":28,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":29,"author":{"gitId":"newway1814"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":30,"author":{"gitId":"newway1814"},"content":"     * Returns an {@code EditTaskDescriptor} with fields containing {@code task}\u0027s details","lastModifiedDate":"2023-10-16"},{"lineNumber":31,"author":{"gitId":"newway1814"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":32,"author":{"gitId":"newway1814"},"content":"    public EditTaskDescriptorBuilder(Task task) {","lastModifiedDate":"2023-10-16"},{"lineNumber":33,"author":{"gitId":"newway1814"},"content":"        descriptor \u003d new EditTaskDescriptor();","lastModifiedDate":"2023-10-16"},{"lineNumber":34,"author":{"gitId":"newway1814"},"content":"        descriptor.setName(task.getName());","lastModifiedDate":"2023-10-16"},{"lineNumber":35,"author":{"gitId":"eyelessrhyme7"},"content":"        descriptor.setPriority(task.getPriority());","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"newway1814"},"content":"        descriptor.setTags(task.getTags());","lastModifiedDate":"2023-10-16"},{"lineNumber":37,"author":{"gitId":"yarnmengnus"},"content":"        descriptor.setLink(task.getLink());","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"newway1814"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":39,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":40,"author":{"gitId":"newway1814"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":41,"author":{"gitId":"newway1814"},"content":"     * Sets the {@code Name} of the {@code EditTaskDescriptor} that we are building.","lastModifiedDate":"2023-10-16"},{"lineNumber":42,"author":{"gitId":"newway1814"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":43,"author":{"gitId":"newway1814"},"content":"    public EditTaskDescriptorBuilder withName(String name) {","lastModifiedDate":"2023-10-16"},{"lineNumber":44,"author":{"gitId":"newway1814"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2023-10-16"},{"lineNumber":45,"author":{"gitId":"newway1814"},"content":"        return this;","lastModifiedDate":"2023-10-16"},{"lineNumber":46,"author":{"gitId":"newway1814"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":47,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":48,"author":{"gitId":"newway1814"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":49,"author":{"gitId":"eyelessrhyme7"},"content":"     * Sets the {@code Priority} of the {@code EditTaskDescriptor} that we are building.","lastModifiedDate":"2023-10-17"},{"lineNumber":50,"author":{"gitId":"newway1814"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":51,"author":{"gitId":"eyelessrhyme7"},"content":"    public EditTaskDescriptorBuilder withPriority(String priority) {","lastModifiedDate":"2023-10-17"},{"lineNumber":52,"author":{"gitId":"eyelessrhyme7"},"content":"        descriptor.setPriority(new Priority(priority));","lastModifiedDate":"2023-10-17"},{"lineNumber":53,"author":{"gitId":"newway1814"},"content":"        return this;","lastModifiedDate":"2023-10-16"},{"lineNumber":54,"author":{"gitId":"newway1814"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":55,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":56,"author":{"gitId":"newway1814"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":57,"author":{"gitId":"newway1814"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditTaskDescriptor}","lastModifiedDate":"2023-10-16"},{"lineNumber":58,"author":{"gitId":"newway1814"},"content":"     * that we are building.","lastModifiedDate":"2023-10-16"},{"lineNumber":59,"author":{"gitId":"newway1814"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":60,"author":{"gitId":"newway1814"},"content":"    public EditTaskDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2023-10-16"},{"lineNumber":61,"author":{"gitId":"newway1814"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2023-10-16"},{"lineNumber":62,"author":{"gitId":"newway1814"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2023-10-16"},{"lineNumber":63,"author":{"gitId":"newway1814"},"content":"        return this;","lastModifiedDate":"2023-10-16"},{"lineNumber":64,"author":{"gitId":"newway1814"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":65,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":66,"author":{"gitId":"yarnmengnus"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":67,"author":{"gitId":"yarnmengnus"},"content":"    * Sets the {@code Link} of the {@code EditTaskDescriptor} that we are building.","lastModifiedDate":"2023-10-17"},{"lineNumber":68,"author":{"gitId":"yarnmengnus"},"content":"    */","lastModifiedDate":"2023-10-17"},{"lineNumber":69,"author":{"gitId":"yarnmengnus"},"content":"    public EditTaskDescriptorBuilder withLink(String link) {","lastModifiedDate":"2023-10-17"},{"lineNumber":70,"author":{"gitId":"yarnmengnus"},"content":"        descriptor.setLink(new Link(link));","lastModifiedDate":"2023-10-17"},{"lineNumber":71,"author":{"gitId":"yarnmengnus"},"content":"        return this;","lastModifiedDate":"2023-10-17"},{"lineNumber":72,"author":{"gitId":"yarnmengnus"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":73,"author":{"gitId":"yarnmengnus"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":74,"author":{"gitId":"newway1814"},"content":"    public EditTaskDescriptor build() {","lastModifiedDate":"2023-10-16"},{"lineNumber":75,"author":{"gitId":"newway1814"},"content":"        return descriptor;","lastModifiedDate":"2023-10-16"},{"lineNumber":76,"author":{"gitId":"newway1814"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":77,"author":{"gitId":"newway1814"},"content":"}","lastModifiedDate":"2023-10-16"}],"authorContributionMap":{"yarnmengnus":10,"eyelessrhyme7":5,"newway1814":62}},{"path":"src/test/java/profplan/testutil/ProfPlanBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kiatkat"},"content":"package profplan.testutil;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"kiatkat"},"content":"import profplan.model.ProfPlan;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"newway1814"},"content":"import profplan.model.task.Task;","lastModifiedDate":"2023-10-16"},{"lineNumber":5,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"kiatkat"},"content":"/**","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"kiatkat"},"content":" * A utility class to help with building ProfPlan objects.","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"kiatkat"},"content":" * Example usage: \u003cbr\u003e","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"newway1814"},"content":" *     {@code AddressBook ab \u003d new ProfPlanBuilder().withTask(\"John\", \"Doe\").build();}","lastModifiedDate":"2023-10-16"},{"lineNumber":10,"author":{"gitId":"kiatkat"},"content":" */","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"kiatkat"},"content":"public class ProfPlanBuilder {","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"kiatkat"},"content":"    private ProfPlan profPlan;","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"kiatkat"},"content":"    public ProfPlanBuilder() {","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"kiatkat"},"content":"        profPlan \u003d new ProfPlan();","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"kiatkat"},"content":"    public ProfPlanBuilder(ProfPlan profPlan) {","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"kiatkat"},"content":"        this.profPlan \u003d profPlan;","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"kiatkat"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"newway1814"},"content":"     * Adds a new {@code Task} to the {@code ProfPlan} that we are building.","lastModifiedDate":"2023-10-16"},{"lineNumber":25,"author":{"gitId":"kiatkat"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"newway1814"},"content":"    public ProfPlanBuilder withTask(Task task) {","lastModifiedDate":"2023-10-16"},{"lineNumber":27,"author":{"gitId":"newway1814"},"content":"        profPlan.addTask(task);","lastModifiedDate":"2023-10-16"},{"lineNumber":28,"author":{"gitId":"kiatkat"},"content":"        return this;","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"kiatkat"},"content":"    public ProfPlan build() {","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"kiatkat"},"content":"        return profPlan;","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"kiatkat"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"kiatkat":29,"newway1814":5}},{"path":"src/test/java/profplan/testutil/SerializableTestClass.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kiatkat"},"content":"package profplan.testutil;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * A class used to test serialization and deserialization","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class SerializableTestClass {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String JSON_STRING_REPRESENTATION \u003d String.format(\"{%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            + \"  \\\"name\\\" : \\\"This is a test class\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"  \\\"listOfLocalDateTimes\\\" : \"","lastModifiedDate":"2016-10-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"[ \\\"-999999999-01-01T00:00:00\\\", \\\"+999999999-12-31T23:59:59.999999999\\\", \"","lastModifiedDate":"2016-10-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"\\\"0001-01-01T01:01:00\\\" ],%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"  \\\"mapOfIntegerToString\\\" : {%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"    \\\"1\\\" : \\\"One\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"    \\\"2\\\" : \\\"Two\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"    \\\"3\\\" : \\\"Three\\\"%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"  }%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"}\");","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String NAME_TEST_VALUE \u003d \"This is a test class\";","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private String name;","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private List\u003cLocalDateTime\u003e listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private HashMap\u003cInteger, String\u003e mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static String getNameTestValue() {","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return NAME_TEST_VALUE;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static List\u003cLocalDateTime\u003e getListTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        List\u003cLocalDateTime\u003e listOfLocalDateTimes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.MIN);","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.MAX);","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.of(1, 1, 1, 1, 1));","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static HashMap\u003cInteger, String\u003e getHashMapTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        HashMap\u003cInteger, String\u003e mapOfIntegerToString \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(1, \"One\");","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(2, \"Two\");","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(3, \"Three\");","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void setTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        name \u003d getNameTestValue();","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes \u003d getListTestValues();","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        mapOfIntegerToString \u003d getHashMapTestValues();","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public String getName() {","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public List\u003cLocalDateTime\u003e getListOfLocalDateTimes() {","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public HashMap\u003cInteger, String\u003e getMapOfIntegerToString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"kiatkat":1,"-":71}},{"path":"src/test/java/profplan/testutil/TaskBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"newway1814"},"content":"package profplan.testutil;","lastModifiedDate":"2023-10-16"},{"lineNumber":2,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":3,"author":{"gitId":"newway1814"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-10-16"},{"lineNumber":4,"author":{"gitId":"newway1814"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-16"},{"lineNumber":5,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":6,"author":{"gitId":"newway1814"},"content":"import profplan.model.tag.Tag;","lastModifiedDate":"2023-10-16"},{"lineNumber":7,"author":{"gitId":"kiatkat"},"content":"import profplan.model.task.Description;","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"jack1e0"},"content":"import profplan.model.task.DueDate;","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"yarnmengnus"},"content":"import profplan.model.task.Link;","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"newway1814"},"content":"import profplan.model.task.Name;","lastModifiedDate":"2023-10-16"},{"lineNumber":11,"author":{"gitId":"eyelessrhyme7"},"content":"import profplan.model.task.Priority;","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"newway1814"},"content":"import profplan.model.task.Task;","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"newway1814"},"content":"import profplan.model.util.SampleDataUtil;","lastModifiedDate":"2023-10-16"},{"lineNumber":14,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":15,"author":{"gitId":"newway1814"},"content":"/**","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"newway1814"},"content":" * A utility class to help with building Task objects.","lastModifiedDate":"2023-10-16"},{"lineNumber":17,"author":{"gitId":"newway1814"},"content":" */","lastModifiedDate":"2023-10-16"},{"lineNumber":18,"author":{"gitId":"newway1814"},"content":"public class TaskBuilder {","lastModifiedDate":"2023-10-16"},{"lineNumber":19,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":20,"author":{"gitId":"newway1814"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2023-10-16"},{"lineNumber":21,"author":{"gitId":"eyelessrhyme7"},"content":"    public static final String DEFAULT_PRIORITY \u003d \"9\";","lastModifiedDate":"2023-11-10"},{"lineNumber":22,"author":{"gitId":"kiatkat"},"content":"    public static final boolean DEFAULT_RECURRING \u003d false;","lastModifiedDate":"2023-10-30"},{"lineNumber":23,"author":{"gitId":"kiatkat"},"content":"    public static final Task.RecurringType DEFAULT_RECURRING_TYPE \u003d null;","lastModifiedDate":"2023-10-30"},{"lineNumber":24,"author":{"gitId":"jack1e0"},"content":"    public static final String DEFAULT_DUEDATE \u003d \"01-01-2000\";","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"yarnmengnus"},"content":"    public static final String DEFAULT_LINK \u003d \"-\";","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"kiatkat"},"content":"    public static final String DEFUALT_DESCRIPTION \u003d \"\";","lastModifiedDate":"2023-10-26"},{"lineNumber":27,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":28,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":29,"author":{"gitId":"newway1814"},"content":"    private Name name;","lastModifiedDate":"2023-10-16"},{"lineNumber":30,"author":{"gitId":"eyelessrhyme7"},"content":"    private Priority priority;","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"kiatkat"},"content":"    private boolean isRecurring;","lastModifiedDate":"2023-10-30"},{"lineNumber":32,"author":{"gitId":"kiatkat"},"content":"    private Task.RecurringType recurringType;","lastModifiedDate":"2023-10-30"},{"lineNumber":33,"author":{"gitId":"newway1814"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2023-10-16"},{"lineNumber":34,"author":{"gitId":"jack1e0"},"content":"    private DueDate dueDate;","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"yarnmengnus"},"content":"    private Link link;","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"kiatkat"},"content":"    private Description description;","lastModifiedDate":"2023-10-26"},{"lineNumber":37,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":38,"author":{"gitId":"newway1814"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":39,"author":{"gitId":"newway1814"},"content":"     * Creates a {@code TaskBuilder} with the default details.","lastModifiedDate":"2023-10-16"},{"lineNumber":40,"author":{"gitId":"newway1814"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":41,"author":{"gitId":"newway1814"},"content":"    public TaskBuilder() {","lastModifiedDate":"2023-10-16"},{"lineNumber":42,"author":{"gitId":"newway1814"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2023-10-16"},{"lineNumber":43,"author":{"gitId":"eyelessrhyme7"},"content":"        priority \u003d new Priority(DEFAULT_PRIORITY);","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"kiatkat"},"content":"        isRecurring \u003d DEFAULT_RECURRING;","lastModifiedDate":"2023-10-30"},{"lineNumber":45,"author":{"gitId":"kiatkat"},"content":"        recurringType \u003d DEFAULT_RECURRING_TYPE;","lastModifiedDate":"2023-10-30"},{"lineNumber":46,"author":{"gitId":"newway1814"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-10-16"},{"lineNumber":47,"author":{"gitId":"jack1e0"},"content":"        dueDate \u003d new DueDate(DEFAULT_DUEDATE);","lastModifiedDate":"2023-10-17"},{"lineNumber":48,"author":{"gitId":"yarnmengnus"},"content":"        link \u003d new Link(DEFAULT_LINK);","lastModifiedDate":"2023-10-17"},{"lineNumber":49,"author":{"gitId":"kiatkat"},"content":"        description \u003d new Description(DEFUALT_DESCRIPTION);","lastModifiedDate":"2023-10-26"},{"lineNumber":50,"author":{"gitId":"newway1814"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":51,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":52,"author":{"gitId":"newway1814"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":53,"author":{"gitId":"newway1814"},"content":"     * Initializes the TaskBuilder with the data of {@code taskToCopy}.","lastModifiedDate":"2023-10-16"},{"lineNumber":54,"author":{"gitId":"newway1814"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":55,"author":{"gitId":"newway1814"},"content":"    public TaskBuilder(Task taskToCopy) {","lastModifiedDate":"2023-10-16"},{"lineNumber":56,"author":{"gitId":"newway1814"},"content":"        name \u003d taskToCopy.getName();","lastModifiedDate":"2023-10-16"},{"lineNumber":57,"author":{"gitId":"eyelessrhyme7"},"content":"        priority \u003d taskToCopy.getPriority();","lastModifiedDate":"2023-10-17"},{"lineNumber":58,"author":{"gitId":"newway1814"},"content":"        tags \u003d new HashSet\u003c\u003e(taskToCopy.getTags());","lastModifiedDate":"2023-10-16"},{"lineNumber":59,"author":{"gitId":"jack1e0"},"content":"        dueDate \u003d taskToCopy.getDueDate();","lastModifiedDate":"2023-10-17"},{"lineNumber":60,"author":{"gitId":"yarnmengnus"},"content":"        link \u003d taskToCopy.getLink();","lastModifiedDate":"2023-10-17"},{"lineNumber":61,"author":{"gitId":"kiatkat"},"content":"        description \u003d taskToCopy.getDescription();","lastModifiedDate":"2023-10-26"},{"lineNumber":62,"author":{"gitId":"newway1814"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":63,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":64,"author":{"gitId":"newway1814"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":65,"author":{"gitId":"newway1814"},"content":"     * Sets the {@code Name} of the {@code Task} that we are building.","lastModifiedDate":"2023-10-16"},{"lineNumber":66,"author":{"gitId":"newway1814"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":67,"author":{"gitId":"newway1814"},"content":"    public TaskBuilder withName(String name) {","lastModifiedDate":"2023-10-16"},{"lineNumber":68,"author":{"gitId":"newway1814"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2023-10-16"},{"lineNumber":69,"author":{"gitId":"newway1814"},"content":"        return this;","lastModifiedDate":"2023-10-16"},{"lineNumber":70,"author":{"gitId":"newway1814"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":71,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":72,"author":{"gitId":"newway1814"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":73,"author":{"gitId":"newway1814"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Task} that we are building.","lastModifiedDate":"2023-10-16"},{"lineNumber":74,"author":{"gitId":"newway1814"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":75,"author":{"gitId":"newway1814"},"content":"    public TaskBuilder withTags(String ... tags) {","lastModifiedDate":"2023-10-16"},{"lineNumber":76,"author":{"gitId":"newway1814"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2023-10-16"},{"lineNumber":77,"author":{"gitId":"newway1814"},"content":"        return this;","lastModifiedDate":"2023-10-16"},{"lineNumber":78,"author":{"gitId":"newway1814"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":79,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":80,"author":{"gitId":"newway1814"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":81,"author":{"gitId":"eyelessrhyme7"},"content":"     * Sets the {@code Priority} of the {@code Task} that we are building.","lastModifiedDate":"2023-10-17"},{"lineNumber":82,"author":{"gitId":"newway1814"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":83,"author":{"gitId":"eyelessrhyme7"},"content":"    public TaskBuilder withPriority(String priority) {","lastModifiedDate":"2023-10-17"},{"lineNumber":84,"author":{"gitId":"eyelessrhyme7"},"content":"        this.priority \u003d new Priority(priority);","lastModifiedDate":"2023-10-17"},{"lineNumber":85,"author":{"gitId":"newway1814"},"content":"        return this;","lastModifiedDate":"2023-10-16"},{"lineNumber":86,"author":{"gitId":"newway1814"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":87,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":88,"author":{"gitId":"jack1e0"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":89,"author":{"gitId":"jack1e0"},"content":"     * Sets the {@code DueDate} of the {@code Task} that we are building.","lastModifiedDate":"2023-10-17"},{"lineNumber":90,"author":{"gitId":"jack1e0"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":91,"author":{"gitId":"jack1e0"},"content":"    public TaskBuilder withDueDate(String date) {","lastModifiedDate":"2023-10-17"},{"lineNumber":92,"author":{"gitId":"jack1e0"},"content":"        this.dueDate \u003d new DueDate(date);","lastModifiedDate":"2023-10-17"},{"lineNumber":93,"author":{"gitId":"jack1e0"},"content":"        return this;","lastModifiedDate":"2023-10-17"},{"lineNumber":94,"author":{"gitId":"jack1e0"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":95,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":96,"author":{"gitId":"kiatkat"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":97,"author":{"gitId":"kiatkat"},"content":"     * Sets the {@code Description} of the {@code Task} that we are building.","lastModifiedDate":"2023-10-26"},{"lineNumber":98,"author":{"gitId":"kiatkat"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":99,"author":{"gitId":"kiatkat"},"content":"    public TaskBuilder withDescription(String description) {","lastModifiedDate":"2023-10-26"},{"lineNumber":100,"author":{"gitId":"kiatkat"},"content":"        this.description \u003d new Description(description);","lastModifiedDate":"2023-10-26"},{"lineNumber":101,"author":{"gitId":"kiatkat"},"content":"        return this;","lastModifiedDate":"2023-10-26"},{"lineNumber":102,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":103,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":104,"author":{"gitId":"kiatkat"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":105,"author":{"gitId":"kiatkat"},"content":"     * Builds a new task with the given fields.","lastModifiedDate":"2023-10-26"},{"lineNumber":106,"author":{"gitId":"kiatkat"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":107,"author":{"gitId":"newway1814"},"content":"    public Task build() {","lastModifiedDate":"2023-10-16"},{"lineNumber":108,"author":{"gitId":"kiatkat"},"content":"        return new Task(name, priority, isRecurring, recurringType, tags, dueDate,","lastModifiedDate":"2023-11-01"},{"lineNumber":109,"author":{"gitId":"kiatkat"},"content":"                link, description);","lastModifiedDate":"2023-10-26"},{"lineNumber":110,"author":{"gitId":"newway1814"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":111,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":112,"author":{"gitId":"newway1814"},"content":"}","lastModifiedDate":"2023-10-16"}],"authorContributionMap":{"yarnmengnus":5,"jack1e0":13,"kiatkat":24,"eyelessrhyme7":8,"newway1814":62}},{"path":"src/test/java/profplan/testutil/TaskUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kiatkat"},"content":"package profplan.testutil;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"kiatkat"},"content":"import static profplan.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"jack1e0"},"content":"import static profplan.logic.parser.CliSyntax.PREFIX_DUEDATE;","lastModifiedDate":"2023-10-27"},{"lineNumber":5,"author":{"gitId":"yarnmengnus"},"content":"import static profplan.logic.parser.CliSyntax.PREFIX_LINK;","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"kiatkat"},"content":"import static profplan.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"eyelessrhyme7"},"content":"import static profplan.logic.parser.CliSyntax.PREFIX_PRIORITY;","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"kiatkat"},"content":"import static profplan.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-03-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":12,"author":{"gitId":"kiatkat"},"content":"import profplan.logic.commands.AddCommand;","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"newway1814"},"content":"import profplan.logic.commands.EditCommand.EditTaskDescriptor;","lastModifiedDate":"2023-10-16"},{"lineNumber":14,"author":{"gitId":"kiatkat"},"content":"import profplan.model.tag.Tag;","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"newway1814"},"content":"import profplan.model.task.Task;","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":18,"author":{"gitId":"newway1814"},"content":" * A utility class for Task.","lastModifiedDate":"2023-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":20,"author":{"gitId":"newway1814"},"content":"public class TaskUtil {","lastModifiedDate":"2023-10-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"newway1814"},"content":"     * Returns an add command string for adding the {@code task}.","lastModifiedDate":"2023-10-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"newway1814"},"content":"    public static String getAddCommand(Task task) {","lastModifiedDate":"2023-10-16"},{"lineNumber":26,"author":{"gitId":"newway1814"},"content":"        return AddCommand.COMMAND_WORD + \" \" + getTaskDetails(task);","lastModifiedDate":"2023-10-16"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":30,"author":{"gitId":"newway1814"},"content":"     * Returns the part of command string for the given {@code task}\u0027s details.","lastModifiedDate":"2023-10-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":32,"author":{"gitId":"newway1814"},"content":"    public static String getTaskDetails(Task task) {","lastModifiedDate":"2023-10-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"newway1814"},"content":"        sb.append(PREFIX_NAME + task.getName().fullName + \" \");","lastModifiedDate":"2023-10-16"},{"lineNumber":35,"author":{"gitId":"eyelessrhyme7"},"content":"        sb.append(PREFIX_PRIORITY + task.getPriority().value + \" \");","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"newway1814"},"content":"        task.getTags().stream().forEach(","lastModifiedDate":"2023-10-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            s -\u003e sb.append(PREFIX_TAG + s.tagName + \" \")","lastModifiedDate":"2017-05-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2017-05-09"},{"lineNumber":39,"author":{"gitId":"eyelessrhyme7"},"content":"        sb.append(PREFIX_DUEDATE + task.getDueDate().toString() + \" \");","lastModifiedDate":"2023-11-13"},{"lineNumber":40,"author":{"gitId":"yarnmengnus"},"content":"        sb.append(PREFIX_LINK + task.getLink().value + \" \");","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"kiatkat"},"content":"        sb.append(PREFIX_DESCRIPTION + task.getDescription().description);","lastModifiedDate":"2023-10-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":46,"author":{"gitId":"newway1814"},"content":"     * Returns the part of command string for the given {@code EditTaskDescriptor}\u0027s details.","lastModifiedDate":"2023-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":48,"author":{"gitId":"newway1814"},"content":"    public static String getEditTaskDescriptorDetails(EditTaskDescriptor descriptor) {","lastModifiedDate":"2023-10-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":51,"author":{"gitId":"eyelessrhyme7"},"content":"        descriptor.getPriority().ifPresent(priority -\u003e sb.append(PREFIX_PRIORITY).append(priority.value).append(\" \"));","lastModifiedDate":"2023-10-17"},{"lineNumber":52,"author":{"gitId":"yarnmengnus"},"content":"        descriptor.getLink().ifPresent(link -\u003e sb.append(PREFIX_LINK).append(link.value).append(\" \"));","lastModifiedDate":"2023-10-17"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2018-03-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"                sb.append(PREFIX_TAG);","lastModifiedDate":"2018-03-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2018-03-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-03-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"yarnmengnus":3,"jack1e0":1,"kiatkat":7,"eyelessrhyme7":4,"-":35,"newway1814":13}},{"path":"src/test/java/profplan/testutil/TestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kiatkat"},"content":"package profplan.testutil;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"kiatkat"},"content":"import profplan.commons.core.index.Index;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"kiatkat"},"content":"import profplan.model.Model;","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"newway1814"},"content":"import profplan.model.task.Task;","lastModifiedDate":"2023-10-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A utility class for test cases.","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class TestUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Folder used for temp files created during testing. Ignored by Git.","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Path SANDBOX_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"sandbox\");","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Appends {@code fileName} to the sandbox folder path and returns the resulting path.","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates the sandbox folder if it doesn\u0027t exist.","lastModifiedDate":"2016-09-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static Path getFilePathInSandboxFolder(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            Files.createDirectories(SANDBOX_FOLDER);","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2016-09-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return SANDBOX_FOLDER.resolve(fileName);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":36,"author":{"gitId":"newway1814"},"content":"     * Returns the middle index of the task in the {@code model}\u0027s task list.","lastModifiedDate":"2023-10-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static Index getMidIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":39,"author":{"gitId":"newway1814"},"content":"        return Index.fromOneBased(model.getFilteredTaskList().size() / 2);","lastModifiedDate":"2023-10-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":43,"author":{"gitId":"newway1814"},"content":"     * Returns the last index of the task in the {@code model}\u0027s task list.","lastModifiedDate":"2023-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static Index getLastIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":46,"author":{"gitId":"newway1814"},"content":"        return Index.fromOneBased(model.getFilteredTaskList().size());","lastModifiedDate":"2023-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":50,"author":{"gitId":"newway1814"},"content":"     * Returns the task in the {@code model}\u0027s task list at {@code index}.","lastModifiedDate":"2023-10-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":52,"author":{"gitId":"newway1814"},"content":"    public static Task getTask(Model model, Index index) {","lastModifiedDate":"2023-10-16"},{"lineNumber":53,"author":{"gitId":"newway1814"},"content":"        return model.getFilteredTaskList().get(index.getZeroBased());","lastModifiedDate":"2023-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"kiatkat":3,"-":44,"newway1814":8}},{"path":"src/test/java/profplan/testutil/TypicalIndexes.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kiatkat"},"content":"package profplan.testutil;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":3,"author":{"gitId":"kiatkat"},"content":"import profplan.commons.core.index.Index;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Index} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class TypicalIndexes {","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"newway1814"},"content":"    public static final Index INDEX_FIRST_TASK \u003d Index.fromOneBased(1);","lastModifiedDate":"2023-10-16"},{"lineNumber":10,"author":{"gitId":"newway1814"},"content":"    public static final Index INDEX_SECOND_TASK \u003d Index.fromOneBased(2);","lastModifiedDate":"2023-10-16"},{"lineNumber":11,"author":{"gitId":"newway1814"},"content":"    public static final Index INDEX_THIRD_TASK \u003d Index.fromOneBased(3);","lastModifiedDate":"2023-10-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-08-05"}],"authorContributionMap":{"kiatkat":2,"-":7,"newway1814":3}},{"path":"src/test/java/profplan/testutil/TypicalTasks.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kiatkat"},"content":"package profplan.testutil;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"kiatkat"},"content":"import static profplan.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"kiatkat"},"content":"import static profplan.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"eyelessrhyme7"},"content":"import static profplan.logic.commands.CommandTestUtil.VALID_PRIORITY_AMY;","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"eyelessrhyme7"},"content":"import static profplan.logic.commands.CommandTestUtil.VALID_PRIORITY_BOB;","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"kiatkat"},"content":"import static profplan.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"kiatkat"},"content":"import static profplan.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":14,"author":{"gitId":"kiatkat"},"content":"import profplan.model.ProfPlan;","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"newway1814"},"content":"import profplan.model.task.Task;","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":18,"author":{"gitId":"newway1814"},"content":" * A utility class containing a list of {@code Task} objects to be used in tests.","lastModifiedDate":"2023-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":20,"author":{"gitId":"newway1814"},"content":"public class TypicalTasks {","lastModifiedDate":"2023-10-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":22,"author":{"gitId":"newway1814"},"content":"    public static final Task ALICE \u003d new TaskBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2023-10-16"},{"lineNumber":23,"author":{"gitId":"eyelessrhyme7"},"content":"            .withPriority(\"1\")","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"jack1e0"},"content":"            .withTags(\"friends\").withDueDate(\"01-01-2000\").build();","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"newway1814"},"content":"    public static final Task BENSON \u003d new TaskBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2023-10-16"},{"lineNumber":26,"author":{"gitId":"kiatkat"},"content":"            .withPriority(\"2\")","lastModifiedDate":"2023-10-29"},{"lineNumber":27,"author":{"gitId":"jack1e0"},"content":"            .withTags(\"owesMoney\", \"friends\").withDueDate(\"01-01-2000\").build();","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"eyelessrhyme7"},"content":"    public static final Task CARL \u003d new TaskBuilder().withName(\"Carl Kurz\").withPriority(\"3\")","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"jack1e0"},"content":"            .withDueDate(\"01-01-2000\").build();","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"eyelessrhyme7"},"content":"    public static final Task DANIEL \u003d new TaskBuilder().withName(\"Daniel Meier\").withPriority(\"4\")","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"jack1e0"},"content":"            .withTags(\"friends\").withDueDate(\"01-01-2000\").build();","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"eyelessrhyme7"},"content":"    public static final Task ELLE \u003d new TaskBuilder().withName(\"Elle Meyer\").withPriority(\"5\")","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"jack1e0"},"content":"            .withDueDate(\"01-01-2000\").build();","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"eyelessrhyme7"},"content":"    public static final Task FIONA \u003d new TaskBuilder().withName(\"Fiona Kunz\").withPriority(\"6\")","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"jack1e0"},"content":"            .withDueDate(\"01-01-2000\").build();","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"eyelessrhyme7"},"content":"    public static final Task GEORGE \u003d new TaskBuilder().withName(\"George Best\").withPriority(\"10\")","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"kiatkat"},"content":"            .withDueDate(\"01-01-2000\").build();","lastModifiedDate":"2023-10-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":40,"author":{"gitId":"eyelessrhyme7"},"content":"    public static final Task HOON \u003d new TaskBuilder().withName(\"Hoon Meier\").withPriority(\"1\")","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"jack1e0"},"content":"            .withDueDate(\"01-01-2000\").build();","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"eyelessrhyme7"},"content":"    public static final Task IDA \u003d new TaskBuilder().withName(\"Ida Mueller\").withPriority(\"5\")","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"jack1e0"},"content":"            .withDueDate(\"01-01-2000\").build();","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":45,"author":{"gitId":"newway1814"},"content":"    // Manually added - Task\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2023-10-16"},{"lineNumber":46,"author":{"gitId":"eyelessrhyme7"},"content":"    public static final Task AMY \u003d new TaskBuilder().withName(VALID_NAME_AMY).withPriority(VALID_PRIORITY_AMY)","lastModifiedDate":"2023-10-17"},{"lineNumber":47,"author":{"gitId":"eyelessrhyme7"},"content":"            .withTags(VALID_TAG_FRIEND).withDueDate(\"10-12-2023\").withDescription(\"\").build();","lastModifiedDate":"2023-11-11"},{"lineNumber":48,"author":{"gitId":"eyelessrhyme7"},"content":"    public static final Task BOB \u003d new TaskBuilder().withName(VALID_NAME_BOB).withPriority(VALID_PRIORITY_BOB)","lastModifiedDate":"2023-10-17"},{"lineNumber":49,"author":{"gitId":"kiatkat"},"content":"            .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND)","lastModifiedDate":"2023-10-29"},{"lineNumber":50,"author":{"gitId":"eyelessrhyme7"},"content":"            .withDueDate(\"10-12-2023\").build();","lastModifiedDate":"2023-11-11"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":54,"author":{"gitId":"newway1814"},"content":"    private TypicalTasks() {} // prevents instantiation","lastModifiedDate":"2023-10-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":57,"author":{"gitId":"newway1814"},"content":"     * Returns an {@code AddressBook} with all the typical tasks.","lastModifiedDate":"2023-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":59,"author":{"gitId":"kiatkat"},"content":"    public static ProfPlan getTypicalProfPlan() {","lastModifiedDate":"2023-10-13"},{"lineNumber":60,"author":{"gitId":"kiatkat"},"content":"        ProfPlan pp \u003d new ProfPlan();","lastModifiedDate":"2023-10-17"},{"lineNumber":61,"author":{"gitId":"newway1814"},"content":"        for (Task task : getTypicalTasks()) {","lastModifiedDate":"2023-10-16"},{"lineNumber":62,"author":{"gitId":"kiatkat"},"content":"            pp.addTask(task);","lastModifiedDate":"2023-10-17"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":64,"author":{"gitId":"kiatkat"},"content":"        return pp;","lastModifiedDate":"2023-10-17"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":67,"author":{"gitId":"newway1814"},"content":"    public static List\u003cTask\u003e getTypicalTasks() {","lastModifiedDate":"2023-10-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2017-08-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"jack1e0":8,"kiatkat":13,"eyelessrhyme7":14,"-":25,"newway1814":10}},{"path":"src/test/java/profplan/ui/TestFxmlObject.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kiatkat"},"content":"package profplan.ui;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.beans.DefaultProperty;","lastModifiedDate":"2016-12-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * A test object which can be constructed via an FXML file.","lastModifiedDate":"2016-12-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Unlike other JavaFX classes, this class can be constructed without the JavaFX toolkit being initialized.","lastModifiedDate":"2016-12-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"@DefaultProperty(\"text\")","lastModifiedDate":"2016-12-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class TestFxmlObject {","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private String text;","lastModifiedDate":"2016-12-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public TestFxmlObject() {}","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public TestFxmlObject(String text) {","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        setText(text);","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public String getText() {","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        return text;","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setText(String text) {","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.text \u003d text;","lastModifiedDate":"2016-12-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-12-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (!(other instanceof TestFxmlObject)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        TestFxmlObject otherTestFxmlObject \u003d (TestFxmlObject) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return Objects.equals(text, otherTestFxmlObject.text);","lastModifiedDate":"2023-07-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"kiatkat":1,"-":44}},{"path":"src/test/java/profplan/ui/UiPartTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kiatkat"},"content":"package profplan.ui;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.net.URL;","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2019-04-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"kiatkat"},"content":"import profplan.MainApp;","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"kiatkat"},"content":"import profplan.testutil.Assert;","lastModifiedDate":"2023-10-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class UiPartTest {","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final String MISSING_FILE_PATH \u003d \"UiPartTest/missingFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final String INVALID_FILE_PATH \u003d \"UiPartTest/invalidFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final String VALID_FILE_PATH \u003d \"UiPartTest/validFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String VALID_FILE_WITH_FX_ROOT_PATH \u003d \"UiPartTest/validFileWithFxRoot.fxml\";","lastModifiedDate":"2017-11-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final TestFxmlObject VALID_FILE_ROOT \u003d new TestFxmlObject(\"Hello World!\");","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void constructor_nullFileUrl_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"kiatkat"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((URL) null));","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"kiatkat"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((URL) null, new Object()));","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void constructor_missingFileUrl_throwsAssertionError() throws Exception {","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        URL missingFileUrl \u003d new URL(testFolder.toUri().toURL(), MISSING_FILE_PATH);","lastModifiedDate":"2019-04-25"},{"lineNumber":36,"author":{"gitId":"kiatkat"},"content":"        Assert.assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(missingFileUrl));","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"kiatkat"},"content":"        Assert.assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(missingFileUrl, new Object()));","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void constructor_invalidFileUrl_throwsAssertionError() {","lastModifiedDate":"2016-12-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        URL invalidFileUrl \u003d getTestFileUrl(INVALID_FILE_PATH);","lastModifiedDate":"2016-12-21"},{"lineNumber":43,"author":{"gitId":"kiatkat"},"content":"        Assert.assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(invalidFileUrl));","lastModifiedDate":"2023-10-13"},{"lineNumber":44,"author":{"gitId":"kiatkat"},"content":"        Assert.assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(invalidFileUrl, new Object()));","lastModifiedDate":"2023-10-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void constructor_validFileUrl_loadsFile() {","lastModifiedDate":"2016-12-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        URL validFileUrl \u003d getTestFileUrl(VALID_FILE_PATH);","lastModifiedDate":"2016-12-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertEquals(VALID_FILE_ROOT, new TestUiPart\u003cTestFxmlObject\u003e(validFileUrl).getRoot());","lastModifiedDate":"2016-12-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-11-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void constructor_validFileWithFxRootUrl_loadsFile() {","lastModifiedDate":"2017-11-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        URL validFileUrl \u003d getTestFileUrl(VALID_FILE_WITH_FX_ROOT_PATH);","lastModifiedDate":"2017-11-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        TestFxmlObject root \u003d new TestFxmlObject();","lastModifiedDate":"2017-11-29"},{"lineNumber":57,"author":{"gitId":"newway1814"},"content":"        assertEquals(VALID_FILE_ROOT, new TestUiPart\u003c\u003e(validFileUrl, root).getRoot());","lastModifiedDate":"2023-10-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void constructor_nullFileName_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":62,"author":{"gitId":"kiatkat"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((String) null));","lastModifiedDate":"2023-10-13"},{"lineNumber":63,"author":{"gitId":"kiatkat"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((String) null, new Object()));","lastModifiedDate":"2023-10-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void constructor_missingFileName_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":68,"author":{"gitId":"kiatkat"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e(MISSING_FILE_PATH));","lastModifiedDate":"2023-10-13"},{"lineNumber":69,"author":{"gitId":"kiatkat"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e(MISSING_FILE_PATH, new Object()));","lastModifiedDate":"2023-10-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void constructor_invalidFileName_throwsAssertionError() {","lastModifiedDate":"2016-12-21"},{"lineNumber":74,"author":{"gitId":"kiatkat"},"content":"        Assert.assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(INVALID_FILE_PATH));","lastModifiedDate":"2023-10-13"},{"lineNumber":75,"author":{"gitId":"kiatkat"},"content":"        Assert.assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(INVALID_FILE_PATH, new Object()));","lastModifiedDate":"2023-10-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    private URL getTestFileUrl(String testFilePath) {","lastModifiedDate":"2016-12-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        String testFilePathInView \u003d \"/view/\" + testFilePath;","lastModifiedDate":"2016-12-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        URL testFileUrl \u003d MainApp.class.getResource(testFilePathInView);","lastModifiedDate":"2016-12-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertNotNull(testFileUrl, testFilePathInView + \" does not exist.\");","lastModifiedDate":"2019-03-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return testFileUrl;","lastModifiedDate":"2016-12-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * UiPart used for testing.","lastModifiedDate":"2016-12-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * It should only be used with invalid FXML files or the valid file located at {@link VALID_FILE_PATH}.","lastModifiedDate":"2016-12-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private static class TestUiPart\u003cT\u003e extends UiPart\u003cT\u003e {","lastModifiedDate":"2016-12-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        @FXML","lastModifiedDate":"2016-12-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        private TestFxmlObject validFileRoot; // Check that @FXML annotations work","lastModifiedDate":"2016-12-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        TestUiPart(URL fxmlFileUrl, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            super(fxmlFileUrl, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        TestUiPart(String fxmlFileName, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            super(fxmlFileName, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        TestUiPart(URL fxmlFileUrl) {","lastModifiedDate":"2016-12-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            super(fxmlFileUrl);","lastModifiedDate":"2016-12-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            assertEquals(VALID_FILE_ROOT, validFileRoot);","lastModifiedDate":"2016-12-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        TestUiPart(String fxmlFileName) {","lastModifiedDate":"2016-12-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            super(fxmlFileName);","lastModifiedDate":"2016-12-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            assertEquals(VALID_FILE_ROOT, validFileRoot);","lastModifiedDate":"2016-12-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"kiatkat":15,"-":98,"newway1814":1}},{"path":"src/test/resources/view/UiPartTest/validFile.fxml","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-12-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"kiatkat"},"content":"\u003c?import profplan.ui.TestFxmlObject?\u003e","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003cTestFxmlObject xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:id\u003d\"validFileRoot\"\u003eHello World!\u003c/TestFxmlObject\u003e","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"kiatkat":1,"-":3}},{"path":"src/test/resources/view/UiPartTest/validFileWithFxRoot.fxml","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":2,"author":{"gitId":"newway1814"},"content":"\u003c?import profplan.ui.TestFxmlObject ?\u003e","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":4,"author":{"gitId":"kiatkat"},"content":"\u003cfx:root type\u003d\"TestFxmlObject\" xmlns\u003d\"http://javafx.com/javafx/17\"","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"newway1814"},"content":"         xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:id\u003d\"validFileRoot\"\u003e","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    \u003ctext\u003eHello World!\u003c/text\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"kiatkat":1,"-":4,"newway1814":2}}]

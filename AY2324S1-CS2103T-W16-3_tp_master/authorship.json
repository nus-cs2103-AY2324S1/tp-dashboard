[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"cyaoxuan"},"content":"[![CI Status](https://github.com/AY2324S1-CS2103T-W16-3/tp/actions/workflows/gradle.yml/badge.svg)](https://github.com/AY2324S1-CS2103T-W16-3/tp/actions/workflows/gradle.yml)","lastModifiedDate":"2023-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"[![codecov](https://codecov.io/gh/AY2324S1-CS2103T-W16-3/tp/graph/badge.svg?token\u003dDE29JYXOPU)](https://codecov.io/gh/AY2324S1-CS2103T-W16-3/tp)","lastModifiedDate":"2023-09-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"cyaoxuan"},"content":"# InsureIQ","lastModifiedDate":"2023-10-01"},{"lineNumber":5,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":8,"author":{"gitId":"cyaoxuan"},"content":"- InsureIQ is for car insurance agents who type fast over CLI and have to keep track of multiple customers\u0027 vehicles with the car insurance policies.","lastModifiedDate":"2023-10-01"},{"lineNumber":9,"author":{"gitId":"cyaoxuan"},"content":"- For the detailed documentation of this project, see the **[InsureIQ Product Website](https://ay2324s1-cs2103t-w16-3.github.io/tp/)**.","lastModifiedDate":"2023-10-01"},{"lineNumber":10,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":11,"author":{"gitId":"cyaoxuan"},"content":"This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2023-10-01"}],"authorContributionMap":{"-":4,"cyaoxuan":7}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"mainClassName \u003d \u0027seedu.address.Main\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-04-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        html.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        xml.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-07-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":69,"author":{"gitId":"brendanneojw"},"content":"    archiveFileName \u003d \u0027insureiq.jar\u0027","lastModifiedDate":"2023-10-24"},{"lineNumber":70,"author":{"gitId":"brendanneojw"},"content":"}","lastModifiedDate":"2023-10-24"},{"lineNumber":71,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":72,"author":{"gitId":"brendanneojw"},"content":"run {","lastModifiedDate":"2023-10-24"},{"lineNumber":73,"author":{"gitId":"brendanneojw"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2023-10-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"brendanneojw":5,"-":71}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"brendanneojw"},"content":"You can reach us at the email `insuremyiq@comp.nus.edu.sg`","lastModifiedDate":"2023-11-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"cyaoxuan"},"content":"### Brendan","lastModifiedDate":"2023-10-02"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"cyaoxuan"},"content":"\u003cimg src\u003d\"images/brendanneojw.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-10-02"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"cyaoxuan"},"content":"[[github](https://github.com/brendanneojw)]","lastModifiedDate":"2023-10-02"},{"lineNumber":17,"author":{"gitId":"cyaoxuan"},"content":"[[portfolio](team/brendanneojw.md)]","lastModifiedDate":"2023-10-02"},{"lineNumber":18,"author":{"gitId":"brendanneojw"},"content":"[[linkedin](https://www.linkedin.com/in/brendan-neo-jia-wei-a1a949217/)]","lastModifiedDate":"2023-10-02"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"cyaoxuan"},"content":"* Role: Team Lead","lastModifiedDate":"2023-10-02"},{"lineNumber":21,"author":{"gitId":"brendanneojw"},"content":"* Responsibilities: Responsible for overall project coordination","lastModifiedDate":"2023-10-02"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"cyaoxuan"},"content":"### Chai Yin","lastModifiedDate":"2023-10-02"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"KumChaiYin"},"content":"\u003cimg src\u003d\"images/kumchaiyin.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-10-02"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"cyaoxuan"},"content":"[[github](http://github.com/KumChaiYin)]","lastModifiedDate":"2023-10-02"},{"lineNumber":28,"author":{"gitId":"KumChaiYin"},"content":"[[portfolio](team/kumchaiyin.md)]","lastModifiedDate":"2023-10-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"cyaoxuan"},"content":"* Role: Documentation","lastModifiedDate":"2023-10-02"},{"lineNumber":31,"author":{"gitId":"brendanneojw"},"content":"* Responsibilities: Responsible for the quality of various project documents","lastModifiedDate":"2023-10-02"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"cyaoxuan"},"content":"### Rohan","lastModifiedDate":"2023-10-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"brendanneojw"},"content":"\u003cimg src\u003d\"images/rsxix.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-10-04"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"cyaoxuan"},"content":"[[github](http://github.com/RSXIX)]","lastModifiedDate":"2023-10-02"},{"lineNumber":38,"author":{"gitId":"brendanneojw"},"content":"[[portfolio](team/rsxix.md)]","lastModifiedDate":"2023-10-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"cyaoxuan"},"content":"* Role: Testing","lastModifiedDate":"2023-10-02"},{"lineNumber":41,"author":{"gitId":"brendanneojw"},"content":"* Responsibilities: Ensures the testing of the project is done properly and on time","lastModifiedDate":"2023-10-02"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"cyaoxuan"},"content":"### Suryansh","lastModifiedDate":"2023-10-02"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"cyaoxuan"},"content":"\u003cimg src\u003d\"images/suryanshkushwaha.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-10-02"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"cyaoxuan"},"content":"[[github](http://github.com/suryanshkushwaha)]","lastModifiedDate":"2023-10-02"},{"lineNumber":48,"author":{"gitId":"cyaoxuan"},"content":"[[portfolio](team/suryanshkushwaha.md)]","lastModifiedDate":"2023-10-02"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"cyaoxuan"},"content":"* Role: Code Quality","lastModifiedDate":"2023-10-02"},{"lineNumber":51,"author":{"gitId":"brendanneojw"},"content":"* Responsibilities: Responsible for the quality of various project documents","lastModifiedDate":"2023-10-02"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"cyaoxuan"},"content":"### Yao Xuan","lastModifiedDate":"2023-10-02"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"cyaoxuan"},"content":"\u003cimg src\u003d\"images/cyaoxuan.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-10-02"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"cyaoxuan"},"content":"[[github](http://github.com/cyaoxuan)]","lastModifiedDate":"2023-10-02"},{"lineNumber":58,"author":{"gitId":"cyaoxuan"},"content":"[[portfolio](team/cyaoxuan.md)]","lastModifiedDate":"2023-10-02"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"brendanneojw"},"content":"* Role: Git Expert","lastModifiedDate":"2023-10-02"},{"lineNumber":61,"author":{"gitId":"brendanneojw"},"content":"* Responsibilities: Help other team members with matters related to Github","lastModifiedDate":"2023-10-02"}],"authorContributionMap":{"brendanneojw":10,"KumChaiYin":2,"-":29,"cyaoxuan":20}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2023-11-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":12,"author":{"gitId":"cyaoxuan"},"content":"* This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org/). ","lastModifiedDate":"2023-11-12"},{"lineNumber":13,"author":{"gitId":"cyaoxuan"},"content":"* The `remark` command was implemented with reference to the [tutorial of adding a command](https://nus-cs2103-ay2324s1.github.io/tp/tutorials/AddRemark.html).","lastModifiedDate":"2023-11-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-11-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document `docs/diagrams` folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"cyaoxuan"},"content":"**`Main`** (consisting of classes [`Main`](https://github.com/AY2324S1-CS2103T-W16-3/tp/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/AY2324S1-CS2103T-W16-3/tp/tree/master/src/main/java/seedu/address/MainApp.java)) is in charge of the app launch and shut down.","lastModifiedDate":"2023-10-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* At app launch, it initializes the other components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"* At shut down, it shuts down the other components and invokes cleanup methods where necessary.","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"The bulk of the app\u0027s work is done by the following four components:","lastModifiedDate":"2023-09-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2023-09-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"brendanneojw"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point).","lastModifiedDate":"2023-11-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"cyaoxuan"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/AY2324S1-CS2103T-W16-3/tp/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2023-10-03"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"cyaoxuan"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/AY2324S1-CS2103T-W16-3/tp/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/AY2324S1-CS2103T-W16-3/tp/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2023-10-03"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":85,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"cyaoxuan"},"content":"**API** : [`Logic.java`](https://github.com/AY2324S1-CS2103T-W16-3/tp/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2023-10-03"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"The sequence diagram below illustrates the interactions within the `Logic` component, taking `execute(\"delete 1\")` API call as an example.","lastModifiedDate":"2023-09-03"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"KumChaiYin"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-11-14"},{"lineNumber":100,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2023-09-03"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":106,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it is passed to an `AddressBookParser` object which in turn creates a parser that matches the command (e.g., `DeleteCommandParser`) and uses it to parse the command.","lastModifiedDate":"2023-09-03"},{"lineNumber":107,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `DeleteCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2023-09-03"},{"lineNumber":108,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to delete a person).","lastModifiedDate":"2023-09-03"},{"lineNumber":109,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2023-09-03"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":111,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":120,"author":{"gitId":"cyaoxuan"},"content":"**API** : [`Model.java`](https://github.com/AY2324S1-CS2103T-W16-3/tp/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2023-10-03"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"brendanneojw"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"600\" /\u003e","lastModifiedDate":"2023-11-12"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"cyaoxuan"},"content":"* stores the client list data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2023-11-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":132,"author":{"gitId":"cyaoxuan"},"content":"The `Person` component,","lastModifiedDate":"2023-11-13"},{"lineNumber":133,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":134,"author":{"gitId":"cyaoxuan"},"content":"* Has 6 compulsory attributes (`Name`, `Phone`, `Address`, `Email`, `Nric`, `LicencePlate`) and 2 optional attributes ","lastModifiedDate":"2023-11-13"},{"lineNumber":135,"author":{"gitId":"cyaoxuan"},"content":"(`Remark` and `Tag`)","lastModifiedDate":"2023-11-13"},{"lineNumber":136,"author":{"gitId":"cyaoxuan"},"content":"* `Tag` can store any amount of tags","lastModifiedDate":"2023-11-13"},{"lineNumber":137,"author":{"gitId":"cyaoxuan"},"content":"* Has a `Policy`, which is optional for a person to have, but is stored in the `Person` class regardless","lastModifiedDate":"2023-10-27"},{"lineNumber":138,"author":{"gitId":"brendanneojw"},"content":"  * If a person has a policy attached to them, `Policy` will simply hold their information (i.e. `Company`, `PolicyNumber`, ","lastModifiedDate":"2023-10-27"},{"lineNumber":139,"author":{"gitId":"cyaoxuan"},"content":"  policy issue and expiry date as `PolicyDate`)","lastModifiedDate":"2023-10-27"},{"lineNumber":140,"author":{"gitId":"cyaoxuan"},"content":"  * If a person does not have a policy attached to them, `Policy` will hold default values ","lastModifiedDate":"2023-11-13"},{"lineNumber":141,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":142,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":144,"author":{"gitId":"brendanneojw"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"600\" /\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"KumChaiYin"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-11-14"},{"lineNumber":149,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":150,"author":{"gitId":"cyaoxuan"},"content":"#### Design considerations","lastModifiedDate":"2023-11-13"},{"lineNumber":151,"author":{"gitId":"cyaoxuan"},"content":"**Aspect: Whether `Policy` should be a class of its own**","lastModifiedDate":"2023-11-13"},{"lineNumber":152,"author":{"gitId":"brendanneojw"},"content":"* Alternative 1: Add policy fields directly as attributes of `Person`","lastModifiedDate":"2023-11-13"},{"lineNumber":153,"author":{"gitId":"cyaoxuan"},"content":"  * Pros: Less nested classes, easier implementation as AB3 already supports this style","lastModifiedDate":"2023-11-13"},{"lineNumber":154,"author":{"gitId":"cyaoxuan"},"content":"  * Cons: Hard to extend when more policy fields have to be added in the future (e.g. `PolicyType`)","lastModifiedDate":"2023-11-13"},{"lineNumber":155,"author":{"gitId":"brendanneojw"},"content":"* Alternative 2: (current choice) Abstract out `Policy` as its own class","lastModifiedDate":"2023-11-13"},{"lineNumber":156,"author":{"gitId":"cyaoxuan"},"content":"  * Pros: A more OOP implementation and allows for easier extension","lastModifiedDate":"2023-11-13"},{"lineNumber":157,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":158,"author":{"gitId":"cyaoxuan"},"content":"**Aspect: How to handle clients with no policy**","lastModifiedDate":"2023-11-13"},{"lineNumber":159,"author":{"gitId":"brendanneojw"},"content":"* Alternative 1: Make `Policy \u003d null` for `Person` with no policy. ","lastModifiedDate":"2023-11-13"},{"lineNumber":160,"author":{"gitId":"cyaoxuan"},"content":"  * This was unsafe as when `Person` is displayed in the UI, methods like `toString()` would throw errors, violating type safety.","lastModifiedDate":"2023-11-13"},{"lineNumber":161,"author":{"gitId":"brendanneojw"},"content":"* Alternative 2: Make policy fields `Company`, `PolicyNumber` and `PolicyDate` be `null`. ","lastModifiedDate":"2023-11-13"},{"lineNumber":162,"author":{"gitId":"cyaoxuan"},"content":"  * This was unsafe as the RegEx check (e.g. `isValidPolicyNumber()`) done in the constructors would have to be removed, leading to improper input validation.","lastModifiedDate":"2023-11-13"},{"lineNumber":163,"author":{"gitId":"brendanneojw"},"content":"* Alternative 3: (current choice) Have default policy parameters for policy fields.","lastModifiedDate":"2023-11-13"},{"lineNumber":164,"author":{"gitId":"cyaoxuan"},"content":"  * Though more checks have to be added when displaying the policies (which is a minor bug), it guarantees type safety and has input validation due to the more defensive programming approach taken","lastModifiedDate":"2023-11-13"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"cyaoxuan"},"content":"**API** : [`Storage.java`](https://github.com/AY2324S1-CS2103T-W16-3/tp/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2023-10-03"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":172,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"cyaoxuan"},"content":"* can save both client list data and user preference data in JSON format, and read them back into corresponding objects.","lastModifiedDate":"2023-11-13"},{"lineNumber":174,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31"},{"lineNumber":175,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"KumChaiYin"},"content":"### `batchdelete`","lastModifiedDate":"2023-10-26"},{"lineNumber":188,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":189,"author":{"gitId":"KumChaiYin"},"content":"The `batchdelete` command allows users to either batch delete people whose policy expiry date is in a specific month or ","lastModifiedDate":"2023-11-14"},{"lineNumber":190,"author":{"gitId":"KumChaiYin"},"content":"batch delete people whose policy was purchased from a specific company.","lastModifiedDate":"2023-11-14"},{"lineNumber":191,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":192,"author":{"gitId":"cyaoxuan"},"content":"#### Implementation","lastModifiedDate":"2023-11-13"},{"lineNumber":193,"author":{"gitId":"KumChaiYin"},"content":"In this section, we will use the case batch delete people whose policy expiry date is in a specific month to explain its implementation.","lastModifiedDate":"2023-11-14"},{"lineNumber":194,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":195,"author":{"gitId":"KumChaiYin"},"content":"The batch delete mechanism is facilitated by `DeleteMonth`.","lastModifiedDate":"2023-11-14"},{"lineNumber":196,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":197,"author":{"gitId":"KumChaiYin"},"content":"It is also facilitated by the operation:","lastModifiedDate":"2023-10-26"},{"lineNumber":198,"author":{"gitId":"cyaoxuan"},"content":"* `ModelManager#batchDeleteWithPredicate(Predicate\u003cPerson\u003e predicate)` - batch delete all people in the client list who fulfil the given predicate.","lastModifiedDate":"2023-11-13"},{"lineNumber":199,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":200,"author":{"gitId":"KumChaiYin"},"content":"This operation is exposed in the `Model` interface as `Model# batchDeleteWithPredicate(Predicate\u003cPerson\u003e predicate)`.","lastModifiedDate":"2023-11-14"},{"lineNumber":201,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":202,"author":{"gitId":"brendanneojw"},"content":"The following sequence diagram shows how the batch delete operation works:","lastModifiedDate":"2023-10-27"},{"lineNumber":203,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":204,"author":{"gitId":"KumChaiYin"},"content":"![BatchDeleteSequenceDiagram1](images/BatchDeleteSequenceDiagram1.png)","lastModifiedDate":"2023-10-26"},{"lineNumber":205,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":206,"author":{"gitId":"KumChaiYin"},"content":"* instance of `DeleteMonth` is constructed to construct a `BatchDeleteCommand`.","lastModifiedDate":"2023-11-14"},{"lineNumber":207,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":208,"author":{"gitId":"KumChaiYin"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `BatchDeleteCommand` and `BatchDeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2023-10-26"},{"lineNumber":209,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":210,"author":{"gitId":"KumChaiYin"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":211,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":212,"author":{"gitId":"KumChaiYin"},"content":"![BatchDeleteSequenceDiagram2](images/BatchDeleteSequenceDiagram2.png)","lastModifiedDate":"2023-10-26"},{"lineNumber":213,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":214,"author":{"gitId":"KumChaiYin"},"content":"* Calling method `updateFilteredPersonList` to get all people in the client list.","lastModifiedDate":"2023-11-14"},{"lineNumber":215,"author":{"gitId":"KumChaiYin"},"content":"* Using predicate p to get list of people to delete.","lastModifiedDate":"2023-11-14"},{"lineNumber":216,"author":{"gitId":"KumChaiYin"},"content":"* Delete all people in the list and return all people left in client list.","lastModifiedDate":"2023-11-14"},{"lineNumber":217,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":218,"author":{"gitId":"KumChaiYin"},"content":"Differences in the case batch delete people whose policy was purchased from a specific company:","lastModifiedDate":"2023-11-14"},{"lineNumber":219,"author":{"gitId":"KumChaiYin"},"content":"* When constructing an instance of `BatchDeleteCommand`, an instance of `Company` is passed as argument instead of `DeleteMonth`.","lastModifiedDate":"2023-11-14"},{"lineNumber":220,"author":{"gitId":"KumChaiYin"},"content":"* Construct an instance of  `CompanyContainsKeywordsPredicate` instead of `PolicyExpiryInDeleteMonthPredicate`.","lastModifiedDate":"2023-11-14"},{"lineNumber":221,"author":{"gitId":"KumChaiYin"},"content":"* Predicate above is used when calling the method `batchDeleteWithPredicate`.","lastModifiedDate":"2023-11-14"},{"lineNumber":222,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":223,"author":{"gitId":"cyaoxuan"},"content":"#### Design considerations","lastModifiedDate":"2023-11-13"},{"lineNumber":224,"author":{"gitId":"brendanneojw"},"content":"* Users may use batch delete to delete all people whose policy expiry is in the specified month and year. For example, delete people did not contact the user to renew their policies for one year. ","lastModifiedDate":"2023-11-14"},{"lineNumber":225,"author":{"gitId":"KumChaiYin"},"content":"* Besides, if users no longer work for an insurance company, they may like to delete people purchase policy from that company. ","lastModifiedDate":"2023-11-14"},{"lineNumber":226,"author":{"gitId":"KumChaiYin"},"content":"* Therefore, `Model#batchDeleteWithPredicate(Predicate\u003cPerson\u003e predicate)` is introduced to allow batch delete by month or company by passing different predicates.","lastModifiedDate":"2023-11-14"},{"lineNumber":227,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":228,"author":{"gitId":"suryanshkushwaha"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":229,"author":{"gitId":"suryanshkushwaha"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":230,"author":{"gitId":"brendanneojw"},"content":"### `edit`","lastModifiedDate":"2023-11-10"},{"lineNumber":231,"author":{"gitId":"suryanshkushwaha"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":232,"author":{"gitId":"cyaoxuan"},"content":"The `edit` command allows users to edit the details of a person in the client list.","lastModifiedDate":"2023-11-13"},{"lineNumber":233,"author":{"gitId":"suryanshkushwaha"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":234,"author":{"gitId":"cyaoxuan"},"content":"#### Implementation","lastModifiedDate":"2023-11-13"},{"lineNumber":235,"author":{"gitId":"suryanshkushwaha"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":236,"author":{"gitId":"suryanshkushwaha"},"content":"The edit mechanism is facilitated by `EditCommand`. It extends `Command` with an `EditPersonDescriptor` to store the details of the person to be edited. ","lastModifiedDate":"2023-10-26"},{"lineNumber":237,"author":{"gitId":"suryanshkushwaha"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":238,"author":{"gitId":"suryanshkushwaha"},"content":"Additionally, it implements the following operations:","lastModifiedDate":"2023-10-26"},{"lineNumber":239,"author":{"gitId":"suryanshkushwaha"},"content":"* `EditCommand#createEditedPerson(Person personToEdit, EditPersonDescriptor editPersonDescriptor)` — Creates and returns a `Person` with the details of `personToEdit` edited with `editPersonDescriptor`.","lastModifiedDate":"2023-10-26"},{"lineNumber":240,"author":{"gitId":"cyaoxuan"},"content":"* `EditCommand#execute(Model model)` — Edits the details of the `Person` in the client list.","lastModifiedDate":"2023-11-13"},{"lineNumber":241,"author":{"gitId":"suryanshkushwaha"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":242,"author":{"gitId":"cyaoxuan"},"content":"The changes are finally made to the client list by calling `Model#setPerson(Person target, Person editedPerson)`.","lastModifiedDate":"2023-11-13"},{"lineNumber":243,"author":{"gitId":"suryanshkushwaha"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":244,"author":{"gitId":"suryanshkushwaha"},"content":"Given below is the sequence diagram for the `edit` command:","lastModifiedDate":"2023-10-26"},{"lineNumber":245,"author":{"gitId":"suryanshkushwaha"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":246,"author":{"gitId":"suryanshkushwaha"},"content":"![EditFeatureSequenceDiagram](images/EditFeatureSequenceDiagram1.png)","lastModifiedDate":"2023-10-27"},{"lineNumber":247,"author":{"gitId":"suryanshkushwaha"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":248,"author":{"gitId":"brendanneojw"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `EditCommandParser` and `EditCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2023-11-13"},{"lineNumber":249,"author":{"gitId":"brendanneojw"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":250,"author":{"gitId":"suryanshkushwaha"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":251,"author":{"gitId":"suryanshkushwaha"},"content":"![EditFeatureSequenceDiagram](images/EditFeatureSequenceDiagram2.png)","lastModifiedDate":"2023-10-27"},{"lineNumber":252,"author":{"gitId":"cyaoxuan"},"content":"* Calling method setPerson to edit the person in client list.","lastModifiedDate":"2023-11-13"},{"lineNumber":253,"author":{"gitId":"cyaoxuan"},"content":"* Calling method updateFilteredPersonList to update the client list with the edited person.","lastModifiedDate":"2023-11-13"},{"lineNumber":254,"author":{"gitId":"suryanshkushwaha"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":255,"author":{"gitId":"cyaoxuan"},"content":"#### Design considerations","lastModifiedDate":"2023-11-13"},{"lineNumber":256,"author":{"gitId":"cyaoxuan"},"content":"* Users may like to edit the details of a person in the client list, in case of changes in the personal details or policy of the person. For example, users may like to update the policy number of a person.","lastModifiedDate":"2023-11-13"},{"lineNumber":257,"author":{"gitId":"cyaoxuan"},"content":"* Therefore, `EditCommand` is introduced to allow users to edit the details of a person in the client list.","lastModifiedDate":"2023-11-13"},{"lineNumber":258,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":259,"author":{"gitId":"suryanshkushwaha"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":260,"author":{"gitId":"suryanshkushwaha"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":261,"author":{"gitId":"brendanneojw"},"content":"### `remind`","lastModifiedDate":"2023-10-27"},{"lineNumber":262,"author":{"gitId":"brendanneojw"},"content":"The `remind` command allows the user to filter out people whose policy expiry date is approaching within the given number of days.","lastModifiedDate":"2023-10-27"},{"lineNumber":263,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":264,"author":{"gitId":"cyaoxuan"},"content":"#### Implementation","lastModifiedDate":"2023-11-13"},{"lineNumber":265,"author":{"gitId":"brendanneojw"},"content":"The filtered list will be displayed in the UI. The remind mechanism is facilitated by `Model` through the following operations:","lastModifiedDate":"2023-10-27"},{"lineNumber":266,"author":{"gitId":"brendanneojw"},"content":"* `Model#RemindPredicate(int days)` - The Predicate to be used for filtering. `days` represents the number of days from the current date given by the user.","lastModifiedDate":"2023-10-27"},{"lineNumber":267,"author":{"gitId":"brendanneojw"},"content":"* `Model#updateFilteredPersonList(Predicate\u003cPerson\u003e p)` - Filters the list of Persons to display by the Predicate `p`.","lastModifiedDate":"2023-10-27"},{"lineNumber":268,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":269,"author":{"gitId":"brendanneojw"},"content":"Given below is an example usage scenario and how the remind mechanism behaves at each step:","lastModifiedDate":"2023-10-27"},{"lineNumber":270,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":271,"author":{"gitId":"brendanneojw"},"content":"Step 1. The user realises that there may be a set of Persons whose policy expiry date is approaching within 30 days.","lastModifiedDate":"2023-10-27"},{"lineNumber":272,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":273,"author":{"gitId":"brendanneojw"},"content":"Step 2. The user executes `remind 30` command in an attempt to find this set of Persons. A `Model#RemindPredicate(int days)` instance with `days` being `30` will be created. As described in the [Logic Component](#logic-component) above, this will create a `RemindCommand` instance having the `RemindPredicate` instance as its field.","lastModifiedDate":"2023-10-27"},{"lineNumber":274,"author":{"gitId":"brendanneojw"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the number of days given is out of range, an error will be thrown and the application will re-prompt the user to input a valid value.\u003c/div\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":275,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":276,"author":{"gitId":"brendanneojw"},"content":"Step 3. The `LogicManager` will call `RemindCommand#execute()` to start filtering the Persons list with the given `RemindPredicate`. Then, `Model#updateFilteredPersonList(Predicate\u003cPerson\u003e p)` is called with the `RemindPredicate` as the input to perform the filtering of the list.","lastModifiedDate":"2023-10-27"},{"lineNumber":277,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":278,"author":{"gitId":"brendanneojw"},"content":"Step 4. Finally, a `CommandResult` instance will be created and returned to display filtered list of Persons to the user.","lastModifiedDate":"2023-10-27"},{"lineNumber":279,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":280,"author":{"gitId":"brendanneojw"},"content":"The following sequence diagram shows how the `remind` command works:","lastModifiedDate":"2023-10-27"},{"lineNumber":281,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":282,"author":{"gitId":"brendanneojw"},"content":"![RemindSequenceDiagram1](images/RemindSequenceDiagram1.png)","lastModifiedDate":"2023-10-27"},{"lineNumber":283,"author":{"gitId":"brendanneojw"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `RemindCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram. \u003c/div\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":284,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":285,"author":{"gitId":"brendanneojw"},"content":"![RemindSequenceDiagram2](images/RemindSequenceDiagram2.png)","lastModifiedDate":"2023-10-27"},{"lineNumber":286,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":287,"author":{"gitId":"KumChaiYin"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-11-14"},{"lineNumber":288,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":289,"author":{"gitId":"brendanneojw"},"content":"The following activity diagram summarises what happens when a user executes the command `remind 30`:","lastModifiedDate":"2023-10-27"},{"lineNumber":290,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":291,"author":{"gitId":"brendanneojw"},"content":"![RemindActivityDiagram](images/RemindActivityDiagram.png)","lastModifiedDate":"2023-10-27"},{"lineNumber":292,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":293,"author":{"gitId":"brendanneojw"},"content":"#### Design considerations","lastModifiedDate":"2023-10-27"},{"lineNumber":294,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":295,"author":{"gitId":"brendanneojw"},"content":"**Aspect: Whether `remind` command should take in a value:**","lastModifiedDate":"2023-10-27"},{"lineNumber":296,"author":{"gitId":"brendanneojw"},"content":"* Alternative 1: `remind` command without specifying the number of days, default 30 days (which is 1 month).","lastModifiedDate":"2023-10-27"},{"lineNumber":297,"author":{"gitId":"brendanneojw"},"content":"  * Pros: Shorter command for the user to use, simply just one word.","lastModifiedDate":"2023-10-27"},{"lineNumber":298,"author":{"gitId":"brendanneojw"},"content":"  * Cons: Not enough flexibility, user may want to find expiry dates beyond 30 days.","lastModifiedDate":"2023-10-27"},{"lineNumber":299,"author":{"gitId":"brendanneojw"},"content":"* Alternative 2 (current choice): `remind` command with number of days given by the user.","lastModifiedDate":"2023-10-27"},{"lineNumber":300,"author":{"gitId":"brendanneojw"},"content":"  * Pros: Allows more flexibility, now the user can find persons whose expiry dates is not only 30 days.","lastModifiedDate":"2023-10-27"},{"lineNumber":301,"author":{"gitId":"brendanneojw"},"content":"  * Cons: Need to determine the range of days allowed for the user to enter, security concerns such as integer overflow could occur if user decides to perform malicious activities.","lastModifiedDate":"2023-10-27"},{"lineNumber":302,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":303,"author":{"gitId":"suryanshkushwaha"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":304,"author":{"gitId":"suryanshkushwaha"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":305,"author":{"gitId":"RSXIX"},"content":"### `sort`","lastModifiedDate":"2023-10-27"},{"lineNumber":306,"author":{"gitId":"KumChaiYin"},"content":"The `sort` command allows the user to view the profiles arranged in order of earliest to latest policy expiry date, with those profiles that have no policy data placed at the end of the late","lastModifiedDate":"2023-11-13"},{"lineNumber":307,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":308,"author":{"gitId":"cyaoxuan"},"content":"#### Implementation","lastModifiedDate":"2023-11-13"},{"lineNumber":309,"author":{"gitId":"RSXIX"},"content":"The sorted list will be displayed in the UI. The remind mechanism is facilitated by `Model` through the following operations:","lastModifiedDate":"2023-10-27"},{"lineNumber":310,"author":{"gitId":"brendanneojw"},"content":"* `Model#SortData()` - The Unique Person List of the client list is sorted using a `PolicyExpirationDateComparator` that implements `Comparator\u003cPerson\u003e`","lastModifiedDate":"2023-11-13"},{"lineNumber":311,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":312,"author":{"gitId":"RSXIX"},"content":"Given below is an example usage scenario and how the sort mechanism behaves at each step:","lastModifiedDate":"2023-10-27"},{"lineNumber":313,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":314,"author":{"gitId":"RSXIX"},"content":"Step 1. The user wishes to see whose policy expires soon.","lastModifiedDate":"2023-10-27"},{"lineNumber":315,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":316,"author":{"gitId":"brendanneojw"},"content":"Step 2. The user executes `sort` command to determine the persons whose insurance is going to finish the soonest. The `Main Window` will call `LogicManager#execute(String s)`. The `LogicManager` in turn calls `AddressBookParser#parseCommand(String s)`. Here the input is matched to `SortCommandParser` and `ParseCommand#execute()` is called.","lastModifiedDate":"2023-11-13"},{"lineNumber":317,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":318,"author":{"gitId":"brendanneojw"},"content":"Step 3. `SortCommandParser` creates an instance of `SortCommand` that is returned to `LogicManager#execute(String) s`. The method `CommandResult#execute()` is then called where `Model#SortData()` is called.","lastModifiedDate":"2023-11-13"},{"lineNumber":319,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":320,"author":{"gitId":"brendanneojw"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note** If an additional argument is added following `sort` command, for instance `sort 2`, no error will be thrown and the sorted list will be shown as normal. This is because the implementation ignores the arguments.","lastModifiedDate":"2023-11-13"},{"lineNumber":321,"author":{"gitId":"brendanneojw"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":322,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":323,"author":{"gitId":"RSXIX"},"content":"Step 4. Finally, a `CommandResult` instance will be created and returned to display sorted list of Persons to the user.","lastModifiedDate":"2023-10-27"},{"lineNumber":324,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":325,"author":{"gitId":"RSXIX"},"content":"The following sequence diagram shows how the `sort` command works:","lastModifiedDate":"2023-10-27"},{"lineNumber":326,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":327,"author":{"gitId":"RSXIX"},"content":"![SortSequenceDiagram1](images/SortSequenceDiagram1.png)","lastModifiedDate":"2023-10-27"},{"lineNumber":328,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":329,"author":{"gitId":"RSXIX"},"content":"![SortSequenceDiagram2](images/SortSequenceDiagram2.png)","lastModifiedDate":"2023-10-27"},{"lineNumber":330,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":331,"author":{"gitId":"RSXIX"},"content":"#### Design considerations","lastModifiedDate":"2023-10-27"},{"lineNumber":332,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":333,"author":{"gitId":"brendanneojw"},"content":"**Aspect: Whether `sort` command should take in a value.**","lastModifiedDate":"2023-11-13"},{"lineNumber":334,"author":{"gitId":"KumChaiYin"},"content":"* Alternative 1 (current choice): `sort` command does not take in a value but does not throw an exception if an input is produced.","lastModifiedDate":"2023-11-14"},{"lineNumber":335,"author":{"gitId":"RSXIX"},"content":"  * Pros: Prevents the need for un necessary exceptions that might affect the running of the program","lastModifiedDate":"2023-10-27"},{"lineNumber":336,"author":{"gitId":"brendanneojw"},"content":"  * Cons: The arguments might be nonsensical, for instance `sort 2` could instead be used to provide the 2 most closely expiring profiles.","lastModifiedDate":"2023-11-13"},{"lineNumber":337,"author":{"gitId":"RSXIX"},"content":"* Alternative 2 : `sort` command does not take in a value and produces exception if an input is produced","lastModifiedDate":"2023-10-27"},{"lineNumber":338,"author":{"gitId":"RSXIX"},"content":"    * Pros: Prevents nonsensical inputs","lastModifiedDate":"2023-10-27"},{"lineNumber":339,"author":{"gitId":"RSXIX"},"content":"    * Cons: Lack of functionality as specified for alternative 1. There is also a lack of flexibility.","lastModifiedDate":"2023-10-27"},{"lineNumber":340,"author":{"gitId":"RSXIX"},"content":"* Alternative 3 : `sort` command takes in a value so the user can specify how many profiles they wish to view","lastModifiedDate":"2023-10-27"},{"lineNumber":341,"author":{"gitId":"RSXIX"},"content":"    * Pros: Provides maximum flexibility and functionality","lastModifiedDate":"2023-10-27"},{"lineNumber":342,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":343,"author":{"gitId":"cyaoxuan"},"content":"### `remark`","lastModifiedDate":"2023-10-27"},{"lineNumber":344,"author":{"gitId":"cyaoxuan"},"content":"The `remark` command allows the user to add optional remarks to a person.","lastModifiedDate":"2023-11-13"},{"lineNumber":345,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":346,"author":{"gitId":"cyaoxuan"},"content":"#### Implementation","lastModifiedDate":"2023-11-13"},{"lineNumber":347,"author":{"gitId":"cyaoxuan"},"content":"This was implemented according to the [tutorial of adding a command](https://nus-cs2103-ay2324s1.github.io/tp/tutorials/AddRemark.html). ","lastModifiedDate":"2023-11-13"},{"lineNumber":348,"author":{"gitId":"cyaoxuan"},"content":"`remark` works similarly to `edit`, but is only editing the `Remark` attribute of the `Person`. ","lastModifiedDate":"2023-10-27"},{"lineNumber":349,"author":{"gitId":"cyaoxuan"},"content":"To add this feature, the following were done:","lastModifiedDate":"2023-10-27"},{"lineNumber":350,"author":{"gitId":"cyaoxuan"},"content":"- Include optional `Remark` attribute in `Person` class","lastModifiedDate":"2023-10-27"},{"lineNumber":351,"author":{"gitId":"cyaoxuan"},"content":"- Add parsers to handle the `remark` command, with the functionality specified in the user guide","lastModifiedDate":"2023-11-13"},{"lineNumber":352,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":353,"author":{"gitId":"cyaoxuan"},"content":"#### Design considerations","lastModifiedDate":"2023-11-13"},{"lineNumber":354,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":355,"author":{"gitId":"cyaoxuan"},"content":"**Aspect: Whether the prefix `r/` is necessary.**","lastModifiedDate":"2023-11-13"},{"lineNumber":356,"author":{"gitId":"brendanneojw"},"content":"* Alternative (not taken):  To remove the need for the prefix such that the command format is `remark INDEX REMARK`","lastModifiedDate":"2023-11-13"},{"lineNumber":357,"author":{"gitId":"cyaoxuan"},"content":"  * Pros: For a fast typer, this would save time to not need to type special characters like `/`","lastModifiedDate":"2023-11-13"},{"lineNumber":358,"author":{"gitId":"cyaoxuan"},"content":"  * Cons: May lead to invalid behaviour not being flagged out appropriately, such as if user type `remark 1 2 Likes hiking!`, thinking it would add remarks to clients 1 and 2.","lastModifiedDate":"2023-11-13"},{"lineNumber":359,"author":{"gitId":"cyaoxuan"},"content":"  * Cons: Does not leverage on existing `ArgumentMultimap` as a separate parsing of input is necessary, which gives way to more potential errors.","lastModifiedDate":"2023-11-13"},{"lineNumber":360,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":361,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":362,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":363,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":364,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":365,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23"},{"lineNumber":366,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":367,"author":{"gitId":"cyaoxuan"},"content":"* `VersionedAddressBook#commit()` — Saves the current client list state in its history.","lastModifiedDate":"2023-11-13"},{"lineNumber":368,"author":{"gitId":"cyaoxuan"},"content":"* `VersionedAddressBook#undo()` — Restores the previous client list state from its history.","lastModifiedDate":"2023-11-13"},{"lineNumber":369,"author":{"gitId":"cyaoxuan"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone client list state from its history.","lastModifiedDate":"2023-11-13"},{"lineNumber":370,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":371,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":372,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":373,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":374,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":375,"author":{"gitId":"cyaoxuan"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial client list state, and the `currentStatePointer` pointing to that single client list state.","lastModifiedDate":"2023-11-13"},{"lineNumber":376,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":377,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":378,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":379,"author":{"gitId":"cyaoxuan"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the client list. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the client list after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted client list state.","lastModifiedDate":"2023-11-13"},{"lineNumber":380,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":381,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":382,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":383,"author":{"gitId":"cyaoxuan"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified client list state to be saved into the `addressBookStateList`.","lastModifiedDate":"2023-11-13"},{"lineNumber":384,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":385,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":386,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":387,"author":{"gitId":"cyaoxuan"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the client list state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2023-11-13"},{"lineNumber":388,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":389,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":391,"author":{"gitId":"cyaoxuan"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous client list state, and restores the client list to that state.","lastModifiedDate":"2023-11-13"},{"lineNumber":392,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":393,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":394,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":395,"author":{"gitId":"cyaoxuan"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial state, then there are no previous states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2023-11-13"},{"lineNumber":396,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":397,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":398,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":399,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":400,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":401,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":402,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":403,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":404,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":405,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":406,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":407,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":408,"author":{"gitId":"cyaoxuan"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the client list to that state.","lastModifiedDate":"2023-11-13"},{"lineNumber":409,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":410,"author":{"gitId":"cyaoxuan"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest client list state, then there are no undone states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2023-11-13"},{"lineNumber":411,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":412,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":413,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":414,"author":{"gitId":"cyaoxuan"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the client list, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2023-11-13"},{"lineNumber":415,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":416,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":417,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":418,"author":{"gitId":"KumChaiYin"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-11-14"},{"lineNumber":419,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":420,"author":{"gitId":"cyaoxuan"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all client list states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2023-11-13"},{"lineNumber":421,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":422,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":423,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":424,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":425,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":426,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":427,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":428,"author":{"gitId":"cyaoxuan"},"content":"#### Design considerations","lastModifiedDate":"2023-11-13"},{"lineNumber":429,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":430,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":431,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":432,"author":{"gitId":"cyaoxuan"},"content":"* **Alternative 1 (current choice):** Saves the entire client list.","lastModifiedDate":"2023-11-13"},{"lineNumber":433,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":434,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":435,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":436,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":437,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":438,"author":{"gitId":"-"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2020-05-23"},{"lineNumber":439,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":440,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":441,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":442,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":443,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":444,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":445,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":446,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":447,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":448,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":449,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":450,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":451,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":452,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":453,"author":{"gitId":"KumChaiYin"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-11-14"},{"lineNumber":454,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":455,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":456,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":457,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":458,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":459,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":460,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":461,"author":{"gitId":"brendanneojw"},"content":"* is a car insurance agent","lastModifiedDate":"2023-10-02"},{"lineNumber":462,"author":{"gitId":"-"},"content":"* has a need to manage a significant number of contacts","lastModifiedDate":"2020-05-23"},{"lineNumber":463,"author":{"gitId":"-"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2020-05-23"},{"lineNumber":464,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2020-05-23"},{"lineNumber":465,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26"},{"lineNumber":466,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2023-10-02"},{"lineNumber":467,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":468,"author":{"gitId":"brendanneojw"},"content":"**Value proposition**: Provide quick and easy contact management system for car insurance agents to keep track of multiple clients’ details and policies bought by them and have a better overview of the premium due dates.","lastModifiedDate":"2023-11-14"},{"lineNumber":469,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":470,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":471,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":472,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":473,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":474,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":475,"author":{"gitId":"cyaoxuan"},"content":"| Priority | As a …           | I want to …                                                                                         | So that I can…​                                                                     |","lastModifiedDate":"2023-11-13"},{"lineNumber":476,"author":{"gitId":"cyaoxuan"},"content":"|----------|------------------|-----------------------------------------------------------------------------------------------------|-------------------------------------------------------------------------------------|","lastModifiedDate":"2023-11-13"},{"lineNumber":477,"author":{"gitId":"cyaoxuan"},"content":"| `* * *`  | beginner user    | add a client                                                                                        | expand my client list                                                               |","lastModifiedDate":"2023-11-13"},{"lineNumber":478,"author":{"gitId":"cyaoxuan"},"content":"| `* * *`  | beginner user    | delete a client                                                                                     | remove entries who I am no longer working with                                      |","lastModifiedDate":"2023-11-13"},{"lineNumber":479,"author":{"gitId":"cyaoxuan"},"content":"| `* * *`  | beginner user    | find client(s) by fields                                                                            | locate details of clients without having to go through the entire list              |","lastModifiedDate":"2023-11-13"},{"lineNumber":480,"author":{"gitId":"cyaoxuan"},"content":"| `* * *`  | beginner user    | edit a client                                                                                       | make changes to details of a client                                                 |","lastModifiedDate":"2023-11-13"},{"lineNumber":481,"author":{"gitId":"cyaoxuan"},"content":"| `* * *`  | expert user      | export the InsureIQ data                                                                            | have a secured copy of all my clients\u0027 information                                  |","lastModifiedDate":"2023-11-13"},{"lineNumber":482,"author":{"gitId":"brendanneojw"},"content":"| `* *`    | first-time user  | see the layout of the application filled with dummy data                                            | learn how to use the application without corrupting my own data yet                 |","lastModifiedDate":"2023-10-02"},{"lineNumber":483,"author":{"gitId":"brendanneojw"},"content":"| `* *`    | first-time user  | delete all the dummy data                                                                           | start using the application for my own use                                          |","lastModifiedDate":"2023-10-02"},{"lineNumber":484,"author":{"gitId":"cyaoxuan"},"content":"| `* *`    | first-time user  | import existing data into the system                                                                | have all my clients in one place for different insurance companies I am working for |","lastModifiedDate":"2023-11-13"},{"lineNumber":485,"author":{"gitId":"brendanneojw"},"content":"| `* *`    | beginner-user    | check which policies are close to completion                                                        | perform follow-up actions outside of the application                                |","lastModifiedDate":"2023-10-02"},{"lineNumber":486,"author":{"gitId":"brendanneojw"},"content":"| `* *`    | experienced-user | have reminders for premium due dates expiry whenever I start the application                        | notify my clients about the upcoming payment                                        |","lastModifiedDate":"2023-10-02"},{"lineNumber":487,"author":{"gitId":"cyaoxuan"},"content":"| `* *`    | experienced-user | add remarks to a client                                                                             | better tailor my interactions with them                                             |","lastModifiedDate":"2023-11-13"},{"lineNumber":488,"author":{"gitId":"cyaoxuan"},"content":"| `* *`    | expert user      | sort clients by premium due date expiry                                                             | locate a client who needs to be urgently contacted                                  |","lastModifiedDate":"2023-11-13"},{"lineNumber":489,"author":{"gitId":"brendanneojw"},"content":"| `*`      | first-time user  | have a tutorial function                                                                            | familiarise myself with the features and understand how to use the application      |","lastModifiedDate":"2023-10-02"},{"lineNumber":490,"author":{"gitId":"cyaoxuan"},"content":"| `*`      | experienced user | schedule follow-up calls or meetings with clients directly from the contact number in their profile | save the hassle of reaching out to them using another avenue                        |","lastModifiedDate":"2023-11-13"},{"lineNumber":491,"author":{"gitId":"cyaoxuan"},"content":"| `*`      | experienced user | review and categorise clients as leads or clients                                                   | prioritise my outreach efforts                                                      |","lastModifiedDate":"2023-11-13"},{"lineNumber":492,"author":{"gitId":"cyaoxuan"},"content":"| `*`      | experienced user | categorise clients by insurance company                                                             | easily find out which insurance company the client bought insurance from            |","lastModifiedDate":"2023-11-13"},{"lineNumber":493,"author":{"gitId":"brendanneojw"},"content":"| `*`      | experienced user | customise the layout of the application                                                             | better suit my preferences                                                          |","lastModifiedDate":"2023-10-02"},{"lineNumber":494,"author":{"gitId":"brendanneojw"},"content":"| `*`      | expert user      | generate reports on policy renewals and customer interactions                                       | assess my performance                                                               |","lastModifiedDate":"2023-10-02"},{"lineNumber":495,"author":{"gitId":"brendanneojw"},"content":"| `*`      | expert user      | differentiate between polices based on coverage types                                               | provide tailored advice to clients                                                  |","lastModifiedDate":"2023-10-02"},{"lineNumber":496,"author":{"gitId":"cyaoxuan"},"content":"| `*`      | expert user      | track communication history with each client                                                        | provide personalised service                                                        |","lastModifiedDate":"2023-11-13"},{"lineNumber":497,"author":{"gitId":"cyaoxuan"},"content":"| `*`      | expert user      | automatically edit a client who made their payment for the premium before the due date              | save the hassle of editing the person manually                                      |","lastModifiedDate":"2023-11-13"},{"lineNumber":498,"author":{"gitId":"brendanneojw"},"content":"| `*`      | expert user      | create custom commands                                                                              | successfully perform tasks in a shorter time                                        |","lastModifiedDate":"2023-10-02"},{"lineNumber":499,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":500,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":501,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":502,"author":{"gitId":"brendanneojw"},"content":"(For all use cases below, the **System** is the `InsureIQ` and the **Actor** is the `User`, unless specified otherwise)","lastModifiedDate":"2023-11-13"},{"lineNumber":503,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":504,"author":{"gitId":"KumChaiYin"},"content":"**Use case: UC1 - List all clients**","lastModifiedDate":"2023-11-13"},{"lineNumber":505,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":506,"author":{"gitId":"cyaoxuan"},"content":"**MSS**","lastModifiedDate":"2023-10-03"},{"lineNumber":507,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":508,"author":{"gitId":"KumChaiYin"},"content":"1.  User requests to list all clients.","lastModifiedDate":"2023-11-13"},{"lineNumber":509,"author":{"gitId":"KumChaiYin"},"content":"2.  InsureIQ shows a list of all clients.","lastModifiedDate":"2023-11-13"},{"lineNumber":510,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":511,"author":{"gitId":"cyaoxuan"},"content":"    Use case ends.","lastModifiedDate":"2023-10-03"},{"lineNumber":512,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":513,"author":{"gitId":"KumChaiYin"},"content":"**Use case: UC2 - Find clients**","lastModifiedDate":"2023-11-13"},{"lineNumber":514,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":515,"author":{"gitId":"cyaoxuan"},"content":"**MSS**","lastModifiedDate":"2023-10-03"},{"lineNumber":516,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":517,"author":{"gitId":"KumChaiYin"},"content":"1.  User requests to list clients based on a specific condition.","lastModifiedDate":"2023-11-13"},{"lineNumber":518,"author":{"gitId":"KumChaiYin"},"content":"2.  InsureIQ shows a list of clients that satisfy the condition.","lastModifiedDate":"2023-11-13"},{"lineNumber":519,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":520,"author":{"gitId":"cyaoxuan"},"content":"    Use case ends.","lastModifiedDate":"2023-10-03"},{"lineNumber":521,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":522,"author":{"gitId":"cyaoxuan"},"content":"**Extensions**","lastModifiedDate":"2023-10-03"},{"lineNumber":523,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":524,"author":{"gitId":"cyaoxuan"},"content":"* 2a. The conditions specified are of invalid format.","lastModifiedDate":"2023-10-03"},{"lineNumber":525,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":526,"author":{"gitId":"cyaoxuan"},"content":"    * 2a1. InsureIQ shows an error message.","lastModifiedDate":"2023-10-03"},{"lineNumber":527,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":528,"author":{"gitId":"cyaoxuan"},"content":"      Use case ends.","lastModifiedDate":"2023-10-03"},{"lineNumber":529,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":530,"author":{"gitId":"KumChaiYin"},"content":"**Use case: UC3 - Add a client**","lastModifiedDate":"2023-11-13"},{"lineNumber":531,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":532,"author":{"gitId":"cyaoxuan"},"content":"**MSS**","lastModifiedDate":"2023-10-03"},{"lineNumber":533,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":534,"author":{"gitId":"KumChaiYin"},"content":"1.  User requests to add a client.","lastModifiedDate":"2023-11-13"},{"lineNumber":535,"author":{"gitId":"KumChaiYin"},"content":"2.  InsureIQ shows a confirmation message that the client was added.","lastModifiedDate":"2023-11-13"},{"lineNumber":536,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":537,"author":{"gitId":"cyaoxuan"},"content":"    Use case ends.","lastModifiedDate":"2023-10-03"},{"lineNumber":538,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":539,"author":{"gitId":"cyaoxuan"},"content":"**Extensions**","lastModifiedDate":"2023-10-03"},{"lineNumber":540,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":541,"author":{"gitId":"KumChaiYin"},"content":"* 2a. The adding of the client fails.","lastModifiedDate":"2023-11-13"},{"lineNumber":542,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":543,"author":{"gitId":"cyaoxuan"},"content":"    * 2a1. InsureIQ shows an error message.","lastModifiedDate":"2023-10-03"},{"lineNumber":544,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":545,"author":{"gitId":"cyaoxuan"},"content":"      Use case ends.","lastModifiedDate":"2023-10-03"},{"lineNumber":546,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":547,"author":{"gitId":"KumChaiYin"},"content":"**Use case: UC4 - Delete a client**","lastModifiedDate":"2023-11-13"},{"lineNumber":548,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":549,"author":{"gitId":"cyaoxuan"},"content":"**MSS**","lastModifiedDate":"2023-10-03"},{"lineNumber":550,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":551,"author":{"gitId":"KumChaiYin"},"content":"1.  User requests to \u003cu\u003elist all clients (UC1)\u003c/u\u003e or \u003cu\u003efind clients (UC2)\u003c/u\u003e.","lastModifiedDate":"2023-11-13"},{"lineNumber":552,"author":{"gitId":"KumChaiYin"},"content":"2.  InsureIQ shows a list of clients.","lastModifiedDate":"2023-11-13"},{"lineNumber":553,"author":{"gitId":"KumChaiYin"},"content":"3.  User requests to delete a specific client in the list.","lastModifiedDate":"2023-11-13"},{"lineNumber":554,"author":{"gitId":"KumChaiYin"},"content":"4.  InsureIQ shows a confirmation message that the client was deleted.","lastModifiedDate":"2023-11-13"},{"lineNumber":555,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":556,"author":{"gitId":"cyaoxuan"},"content":"    Use case ends.","lastModifiedDate":"2023-10-03"},{"lineNumber":557,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":558,"author":{"gitId":"cyaoxuan"},"content":"**Extensions**","lastModifiedDate":"2023-10-03"},{"lineNumber":559,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":560,"author":{"gitId":"cyaoxuan"},"content":"* 2a. The list is empty.","lastModifiedDate":"2023-10-03"},{"lineNumber":561,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":562,"author":{"gitId":"cyaoxuan"},"content":"  Use case ends.","lastModifiedDate":"2023-10-03"},{"lineNumber":563,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":564,"author":{"gitId":"cyaoxuan"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2023-10-03"},{"lineNumber":565,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":566,"author":{"gitId":"cyaoxuan"},"content":"    * 3a1. InsureIQ shows an error message.","lastModifiedDate":"2023-10-03"},{"lineNumber":567,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":568,"author":{"gitId":"cyaoxuan"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2023-10-03"},{"lineNumber":569,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":570,"author":{"gitId":"KumChaiYin"},"content":"**Use case: UC5 - Edit a client**","lastModifiedDate":"2023-11-13"},{"lineNumber":571,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":572,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":573,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":574,"author":{"gitId":"KumChaiYin"},"content":"1.  User requests to \u003cu\u003elist all clients (UC1)\u003c/u\u003e or \u003cu\u003efind clients (UC2)\u003c/u\u003e.","lastModifiedDate":"2023-11-13"},{"lineNumber":575,"author":{"gitId":"KumChaiYin"},"content":"2.  InsureIQ shows a list of clients.","lastModifiedDate":"2023-11-13"},{"lineNumber":576,"author":{"gitId":"KumChaiYin"},"content":"3.  User requests to edit a specific client in the list.","lastModifiedDate":"2023-11-13"},{"lineNumber":577,"author":{"gitId":"KumChaiYin"},"content":"4.  InsureIQ shows a confirmation message that the client was edited.","lastModifiedDate":"2023-11-13"},{"lineNumber":578,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":579,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":580,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":581,"author":{"gitId":"KumChaiYin"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-11-14"},{"lineNumber":582,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":583,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":584,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":585,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2020-05-23"},{"lineNumber":586,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":587,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":588,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":589,"author":{"gitId":"-"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2020-05-23"},{"lineNumber":590,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":591,"author":{"gitId":"cyaoxuan"},"content":"    * 3a1. InsureIQ shows an error message.","lastModifiedDate":"2023-10-03"},{"lineNumber":592,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":593,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2020-05-23"},{"lineNumber":594,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":595,"author":{"gitId":"cyaoxuan"},"content":"* 3b. The fields to be edited are of invalid format.","lastModifiedDate":"2023-10-03"},{"lineNumber":596,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":597,"author":{"gitId":"cyaoxuan"},"content":"    * 3b1. InsureIQ shows an error message.","lastModifiedDate":"2023-10-03"},{"lineNumber":598,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":599,"author":{"gitId":"cyaoxuan"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2023-10-03"},{"lineNumber":600,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":601,"author":{"gitId":"KumChaiYin"},"content":"**Use case: UC6 – Modify remark of a client**","lastModifiedDate":"2023-11-13"},{"lineNumber":602,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":603,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2023-11-13"},{"lineNumber":604,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":605,"author":{"gitId":"KumChaiYin"},"content":"1.  User requests to \u003cu\u003elist all clients (UC1)\u003c/u\u003e or \u003cu\u003efind clients (UC2)\u003c/u\u003e.","lastModifiedDate":"2023-11-13"},{"lineNumber":606,"author":{"gitId":"KumChaiYin"},"content":"2.  InsureIQ shows a list of clients.","lastModifiedDate":"2023-11-13"},{"lineNumber":607,"author":{"gitId":"KumChaiYin"},"content":"3.  User requests to add or remove remark for a specific client in the list.","lastModifiedDate":"2023-11-13"},{"lineNumber":608,"author":{"gitId":"KumChaiYin"},"content":"4.  InsureIQ shows a confirmation message that the remark was modified.","lastModifiedDate":"2023-11-13"},{"lineNumber":609,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":610,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2023-11-13"},{"lineNumber":611,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":612,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2023-11-13"},{"lineNumber":613,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":614,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2023-11-13"},{"lineNumber":615,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":616,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2023-11-13"},{"lineNumber":617,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":618,"author":{"gitId":"-"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2023-11-13"},{"lineNumber":619,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":620,"author":{"gitId":"KumChaiYin"},"content":"    * 3a1. InsureIQ shows an error message.","lastModifiedDate":"2023-11-13"},{"lineNumber":621,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":622,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2023-11-13"},{"lineNumber":623,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":624,"author":{"gitId":"KumChaiYin"},"content":"**Use case: UC7 – Get a reminder for clients with approaching policy expiry dates**","lastModifiedDate":"2023-11-13"},{"lineNumber":625,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":626,"author":{"gitId":"KumChaiYin"},"content":"**MSS**","lastModifiedDate":"2023-11-13"},{"lineNumber":627,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":628,"author":{"gitId":"KumChaiYin"},"content":"1.  User requests to get a reminder for clients with approaching policy expiry dates within a certain number of days.","lastModifiedDate":"2023-11-13"},{"lineNumber":629,"author":{"gitId":"KumChaiYin"},"content":"2.  InsureIQ filters the list based on the days given.","lastModifiedDate":"2023-11-13"},{"lineNumber":630,"author":{"gitId":"KumChaiYin"},"content":"3.  InsureIQ shows a confirmation message.","lastModifiedDate":"2023-11-13"},{"lineNumber":631,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":632,"author":{"gitId":"KumChaiYin"},"content":"    Use case ends.","lastModifiedDate":"2023-11-13"},{"lineNumber":633,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":634,"author":{"gitId":"KumChaiYin"},"content":"**Extensions**","lastModifiedDate":"2023-11-13"},{"lineNumber":635,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":636,"author":{"gitId":"KumChaiYin"},"content":"* 1a. The given number of days is invalid.","lastModifiedDate":"2023-11-13"},{"lineNumber":637,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":638,"author":{"gitId":"KumChaiYin"},"content":"    * 1a1. InsureIQ shows an error message.","lastModifiedDate":"2023-11-13"},{"lineNumber":639,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":640,"author":{"gitId":"KumChaiYin"},"content":"      Use case ends.","lastModifiedDate":"2023-11-13"},{"lineNumber":641,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":642,"author":{"gitId":"KumChaiYin"},"content":"**Use case: UC8 – Sort list of clients**","lastModifiedDate":"2023-11-13"},{"lineNumber":643,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":644,"author":{"gitId":"KumChaiYin"},"content":"**MSS**","lastModifiedDate":"2023-11-13"},{"lineNumber":645,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":646,"author":{"gitId":"KumChaiYin"},"content":"1.  User requests to sort clients by policy expiry date.","lastModifiedDate":"2023-11-13"},{"lineNumber":647,"author":{"gitId":"KumChaiYin"},"content":"2.  InsureIQ sorts the list of clients in the data file from earliest to latest policy expiry date.","lastModifiedDate":"2023-11-13"},{"lineNumber":648,"author":{"gitId":"KumChaiYin"},"content":"3.  InsureIQ shows a confirmation message that the list was sorted.","lastModifiedDate":"2023-11-13"},{"lineNumber":649,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":650,"author":{"gitId":"KumChaiYin"},"content":"    Use case ends.","lastModifiedDate":"2023-11-13"},{"lineNumber":651,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":652,"author":{"gitId":"KumChaiYin"},"content":"**Extensions**","lastModifiedDate":"2023-11-13"},{"lineNumber":653,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":654,"author":{"gitId":"KumChaiYin"},"content":"* 1a. There are no clients in the data file.","lastModifiedDate":"2023-11-13"},{"lineNumber":655,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":656,"author":{"gitId":"KumChaiYin"},"content":"  Use case ends.","lastModifiedDate":"2023-11-13"},{"lineNumber":657,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":658,"author":{"gitId":"KumChaiYin"},"content":"**Use case: UC9 – Batch delete clients**","lastModifiedDate":"2023-11-13"},{"lineNumber":659,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":660,"author":{"gitId":"KumChaiYin"},"content":"**MSS**","lastModifiedDate":"2023-11-13"},{"lineNumber":661,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":662,"author":{"gitId":"KumChaiYin"},"content":"1.  User requests to batch delete clients, either by the policy company or by the month of the policy expiry date.","lastModifiedDate":"2023-11-13"},{"lineNumber":663,"author":{"gitId":"KumChaiYin"},"content":"2.  InsureIQ delete all the clients who fulfil the specific condition in the data file.","lastModifiedDate":"2023-11-13"},{"lineNumber":664,"author":{"gitId":"KumChaiYin"},"content":"3.  InsureIQ shows a confirmation message that the specific clients were deleted.","lastModifiedDate":"2023-11-13"},{"lineNumber":665,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":666,"author":{"gitId":"KumChaiYin"},"content":"    Use case ends.","lastModifiedDate":"2023-11-13"},{"lineNumber":667,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":668,"author":{"gitId":"KumChaiYin"},"content":"**Extensions**","lastModifiedDate":"2023-11-13"},{"lineNumber":669,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":670,"author":{"gitId":"KumChaiYin"},"content":"* 1a. The conditions specified are of invalid format.","lastModifiedDate":"2023-11-13"},{"lineNumber":671,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":672,"author":{"gitId":"KumChaiYin"},"content":"    * 1a1. InsureIQ shows an error message.","lastModifiedDate":"2023-11-13"},{"lineNumber":673,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":674,"author":{"gitId":"KumChaiYin"},"content":"      Use case ends.","lastModifiedDate":"2023-11-13"},{"lineNumber":675,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":676,"author":{"gitId":"KumChaiYin"},"content":"**Use case: UC10 - Clear all clients**","lastModifiedDate":"2023-11-13"},{"lineNumber":677,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":678,"author":{"gitId":"KumChaiYin"},"content":"**MSS**","lastModifiedDate":"2023-11-13"},{"lineNumber":679,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":680,"author":{"gitId":"KumChaiYin"},"content":"1.  User requests to clear all clients.","lastModifiedDate":"2023-11-13"},{"lineNumber":681,"author":{"gitId":"KumChaiYin"},"content":"2.  InsureIQ clears all clients in the data file.","lastModifiedDate":"2023-11-13"},{"lineNumber":682,"author":{"gitId":"KumChaiYin"},"content":"3.  InsureIQ shows a confirmation message that all clients were cleared.","lastModifiedDate":"2023-11-13"},{"lineNumber":683,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":684,"author":{"gitId":"KumChaiYin"},"content":"    Use case ends.","lastModifiedDate":"2023-11-13"},{"lineNumber":685,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":686,"author":{"gitId":"KumChaiYin"},"content":"**Extensions**","lastModifiedDate":"2023-11-13"},{"lineNumber":687,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":688,"author":{"gitId":"KumChaiYin"},"content":"* 1a. There are no clients in the data file.","lastModifiedDate":"2023-11-13"},{"lineNumber":689,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":690,"author":{"gitId":"KumChaiYin"},"content":"  Use case ends.","lastModifiedDate":"2023-11-13"},{"lineNumber":691,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":692,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":693,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":694,"author":{"gitId":"suryanshkushwaha"},"content":"Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2023-10-02"},{"lineNumber":695,"author":{"gitId":"suryanshkushwaha"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":696,"author":{"gitId":"suryanshkushwaha"},"content":"1. **Performance Requirements:**","lastModifiedDate":"2023-10-02"},{"lineNumber":697,"author":{"gitId":"suryanshkushwaha"},"content":"    - The system should respond to user input within 1 second on average.","lastModifiedDate":"2023-10-02"},{"lineNumber":698,"author":{"gitId":"suryanshkushwaha"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":699,"author":{"gitId":"suryanshkushwaha"},"content":"2. **Scalability:**","lastModifiedDate":"2023-10-02"},{"lineNumber":700,"author":{"gitId":"cyaoxuan"},"content":"    - The system should be scalable to accommodate a growing number of car insurance policies and client records.","lastModifiedDate":"2023-11-13"},{"lineNumber":701,"author":{"gitId":"cyaoxuan"},"content":"    - It should support at least 100 client profiles initially and be able to scale to 1,000 over time.","lastModifiedDate":"2023-11-13"},{"lineNumber":702,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":703,"author":{"gitId":"brendanneojw"},"content":"3. **Usability:**","lastModifiedDate":"2023-11-13"},{"lineNumber":704,"author":{"gitId":"suryanshkushwaha"},"content":"    - A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2023-10-02"},{"lineNumber":705,"author":{"gitId":"suryanshkushwaha"},"content":"    - The CLI and GUI interfaces should be intuitive and user-friendly, allowing agents to perform tasks efficiently.","lastModifiedDate":"2023-10-02"},{"lineNumber":706,"author":{"gitId":"suryanshkushwaha"},"content":"    - The system should provide clear error messages and support for keyboard shortcuts for CLI users.","lastModifiedDate":"2023-10-02"},{"lineNumber":707,"author":{"gitId":"suryanshkushwaha"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":708,"author":{"gitId":"brendanneojw"},"content":"4. **Maintainability:**","lastModifiedDate":"2023-11-13"},{"lineNumber":709,"author":{"gitId":"suryanshkushwaha"},"content":"    - The codebase should follow industry best practices and be well-documented to facilitate maintenance and future updates.","lastModifiedDate":"2023-10-02"},{"lineNumber":710,"author":{"gitId":"suryanshkushwaha"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":711,"author":{"gitId":"brendanneojw"},"content":"5. **Interoperability:**","lastModifiedDate":"2023-11-13"},{"lineNumber":712,"author":{"gitId":"suryanshkushwaha"},"content":"    - The system should be compatible with various operating systems commonly used by insurance agents.","lastModifiedDate":"2023-10-02"},{"lineNumber":713,"author":{"gitId":"KumChaiYin"},"content":"    - It should support importing/exporting data in _standard formats_ for interoperability with other systems.","lastModifiedDate":"2023-10-02"},{"lineNumber":714,"author":{"gitId":"suryanshkushwaha"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":715,"author":{"gitId":"brendanneojw"},"content":"6. **Documentation:**","lastModifiedDate":"2023-11-13"},{"lineNumber":716,"author":{"gitId":"suryanshkushwaha"},"content":"   - Comprehensive documentation, including user manuals and technical guides, should be available to assist users and administrators.","lastModifiedDate":"2023-10-02"},{"lineNumber":717,"author":{"gitId":"suryanshkushwaha"},"content":"   - The documentation should be regularly updated to reflect changes and improvements to the system.","lastModifiedDate":"2023-10-02"},{"lineNumber":718,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":719,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":720,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":721,"author":{"gitId":"cyaoxuan"},"content":"* **User**: Car insurance agent using the InsureIQ app","lastModifiedDate":"2023-11-13"},{"lineNumber":722,"author":{"gitId":"cyaoxuan"},"content":"* **Client**: Buyers / potential buyers that car insurance agent is in contact with, such that it is stored inside InsureIQ","lastModifiedDate":"2023-11-13"},{"lineNumber":723,"author":{"gitId":"cyaoxuan"},"content":"* **Client list**: List of clients and their personal and policy details in the InsureIQ app","lastModifiedDate":"2023-11-13"},{"lineNumber":724,"author":{"gitId":"cyaoxuan"},"content":"* **Address book**: Same as client list. Kept in code and some explanation as it is the underlying functionality of InsureIQ","lastModifiedDate":"2023-11-13"},{"lineNumber":725,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2020-05-23"},{"lineNumber":726,"author":{"gitId":"brendanneojw"},"content":"* **Standard formats**: JSON","lastModifiedDate":"2023-11-13"},{"lineNumber":727,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":728,"author":{"gitId":"KumChaiYin"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The terms **person** and **client** can be used interchangeably.","lastModifiedDate":"2023-11-14"},{"lineNumber":729,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":730,"author":{"gitId":"KumChaiYin"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-11-14"},{"lineNumber":731,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":732,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":733,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":734,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":735,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":736,"author":{"gitId":"brendanneojw"},"content":"Given below are instructions to test the application manually.","lastModifiedDate":"2023-11-13"},{"lineNumber":737,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":738,"author":{"gitId":"RSXIX"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on and chart a path through the features;","lastModifiedDate":"2023-11-13"},{"lineNumber":739,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":740,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":741,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":742,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":743,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":744,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":745,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":746,"author":{"gitId":"brendanneojw"},"content":"   1. Download the jar file and copy into an empty folder.","lastModifiedDate":"2023-11-14"},{"lineNumber":747,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":748,"author":{"gitId":"brendanneojw"},"content":"   2. Double-click the jar file.\u003cbr\u003e","lastModifiedDate":"2023-11-14"},{"lineNumber":749,"author":{"gitId":"brendanneojw"},"content":"   Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2023-11-14"},{"lineNumber":750,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":751,"author":{"gitId":"brendanneojw"},"content":"2. Saving window preferences","lastModifiedDate":"2023-11-14"},{"lineNumber":752,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":753,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":754,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":755,"author":{"gitId":"brendanneojw"},"content":"   2. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2023-11-14"},{"lineNumber":756,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":757,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":758,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":759,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":760,"author":{"gitId":"RSXIX"},"content":"Deleting a person when persons are being shown","lastModifiedDate":"2023-11-13"},{"lineNumber":761,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":762,"author":{"gitId":"RSXIX"},"content":"   1. Prerequisites: Display persons using the `list` command or other alternative commands such as `find`. At least one person in the list.","lastModifiedDate":"2023-11-13"},{"lineNumber":763,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":764,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":765,"author":{"gitId":"RSXIX"},"content":"      Expected: First contact is deleted from the displayed list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2023-11-13"},{"lineNumber":766,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":767,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":768,"author":{"gitId":"-"},"content":"      Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":769,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":770,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":771,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":772,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":773,"author":{"gitId":"RSXIX"},"content":"### Adding a person","lastModifiedDate":"2023-11-13"},{"lineNumber":774,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":775,"author":{"gitId":"RSXIX"},"content":"1. Adding a client without a policy","lastModifiedDate":"2023-11-13"},{"lineNumber":776,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":777,"author":{"gitId":"RSXIX"},"content":"   1. Prerequisites: All compulsory parameters must be provided.","lastModifiedDate":"2023-11-13"},{"lineNumber":778,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":779,"author":{"gitId":"brendanneojw"},"content":"   1. Test case: `add n/Amy Johnson i/951Q p/12345678 e/amy.j@example.com a/123 Main Street t/friends l/SBC9876D`\u003cbr\u003e","lastModifiedDate":"2023-11-14"},{"lineNumber":780,"author":{"gitId":"brendanneojw"},"content":"     Expected: Robert Green is added to the data file without a policy. Details of the added person are shown in the status message. Timestamp in the status bar as well as the display list is updated.","lastModifiedDate":"2023-11-14"},{"lineNumber":781,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":782,"author":{"gitId":"brendanneojw"},"content":"   1. Test case: `add n/Robert Green i/234F e/robert.g@example.com a/456 Oak Avenue t/neighbors l/SYZ1234E`\u003cbr\u003e","lastModifiedDate":"2023-11-14"},{"lineNumber":783,"author":{"gitId":"RSXIX"},"content":"      Expected: Error details shown in the status message. Timestamp in the status bar is updated. Status bar as well as the display list remains the same.","lastModifiedDate":"2023-11-13"},{"lineNumber":784,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":785,"author":{"gitId":"brendanneojw"},"content":"   1. Test case: `add n/Amy Johnson i/951Q p/12345678 e/amy.j a/123 Main Street t/friends l/SBC9876D` \u003cbr\u003e","lastModifiedDate":"2023-11-14"},{"lineNumber":786,"author":{"gitId":"RSXIX"},"content":"      Expected: No person is added because one of the inputs is not in the correct format. Error details shown in the status. Timestamp in the status bar is updated. Status bar as well as the display list remains the same.","lastModifiedDate":"2023-11-13"},{"lineNumber":787,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":788,"author":{"gitId":"RSXIX"},"content":"1. Adding a client with a policy","lastModifiedDate":"2023-11-13"},{"lineNumber":789,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":790,"author":{"gitId":"RSXIX"},"content":"   1. Prerequisites: All policy parameters must also be provided along with the compulsory non policy parameters.","lastModifiedDate":"2023-11-13"},{"lineNumber":791,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":792,"author":{"gitId":"brendanneojw"},"content":"   1. Test case: `add n/Jennifer White i/789M p/98765432 e/jennifer.w@example.com a/789 Pine Street t/colleagues l/SEF5678P c/InsuranceCo pn/456X pi/10-11-2023 pe/09-11-2024`\u003cbr\u003e","lastModifiedDate":"2023-11-14"},{"lineNumber":793,"author":{"gitId":"RSXIX"},"content":"     Expected: Details of the added person with policy are shown in the status message. Timestamp in the status bar as well as the display list is updated.","lastModifiedDate":"2023-11-13"},{"lineNumber":794,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":795,"author":{"gitId":"RSXIX"},"content":"   1. Test case: `add n/Emily Lim i/345H p/34567890 e/emilylim@example.com a/Blk 345 Jurong t/family c/XYZ Insurance pn/789Z`\u003cbr\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":796,"author":{"gitId":"RSXIX"},"content":"      Expected: Error details shown in the status. Timestamp in the status bar is updated. Status bar as well as the display list remains the same.","lastModifiedDate":"2023-11-13"},{"lineNumber":797,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":798,"author":{"gitId":"brendanneojw"},"content":"   1. Test case: `add n/Jennifer White i/789M p/98765432 e/jennifer.w@example.com a/789 Pine Street t/colleagues l/SEF5678P c/InsuranceCo pn/456X pi/10-11-2023 pe/09-11-2022`\u003cbr\u003e","lastModifiedDate":"2023-11-14"},{"lineNumber":799,"author":{"gitId":"brendanneojw"},"content":"      Expected: No person is added to the data file because the policy issue date falls impossibly after the expiry date. Error details shown in the status message. Timestamp in the status bar is updated. Status bar as well as the display list remains the same.","lastModifiedDate":"2023-11-14"},{"lineNumber":800,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":801,"author":{"gitId":"brendanneojw"},"content":"   1. Test case: `add n/Jennifer White i/789M p/98765432 e/jennifer.w@example.com a/789 Pine Street t/colleagues l/SEF5678P c/InsuranceCo pn/456X pi/10-11-2023 pe/09-11-2024` in a data file where the same person has already been added.\u003cbr\u003e","lastModifiedDate":"2023-11-14"},{"lineNumber":802,"author":{"gitId":"brendanneojw"},"content":"      Expected: No person is added because the same person already exists in the data file. Furthermore, even if one compulsory field was different, the policy number cannot be reused.  Error details shown in the status message. Timestamp in the status bar is updated. Status bar as well as the display list remains the same.","lastModifiedDate":"2023-11-14"},{"lineNumber":803,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":804,"author":{"gitId":"RSXIX"},"content":"### Help command","lastModifiedDate":"2023-11-13"},{"lineNumber":805,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":806,"author":{"gitId":"RSXIX"},"content":"1.  Prerequisites: None","lastModifiedDate":"2023-11-13"},{"lineNumber":807,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":808,"author":{"gitId":"RSXIX"},"content":"1.  Test case: `help` \u003cbr\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":809,"author":{"gitId":"RSXIX"},"content":"      Expected: Details of the help page are shown in the status message. ","lastModifiedDate":"2023-11-13"},{"lineNumber":810,"author":{"gitId":"RSXIX"},"content":"1.  Other test cases that should work include `help ` or `help 2` \u003cbr\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":811,"author":{"gitId":"RSXIX"},"content":"      Expected: Similar to previous","lastModifiedDate":"2023-11-13"},{"lineNumber":812,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":813,"author":{"gitId":"RSXIX"},"content":"### List command","lastModifiedDate":"2023-11-13"},{"lineNumber":814,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":815,"author":{"gitId":"RSXIX"},"content":"1.  Prerequisites: None","lastModifiedDate":"2023-11-13"},{"lineNumber":816,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":817,"author":{"gitId":"RSXIX"},"content":"1.  Test case: `list` \u003cbr\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":818,"author":{"gitId":"brendanneojw"},"content":"    Expected: Successful listing message is shown in the status message. All the persons added to the program are displayed.","lastModifiedDate":"2023-11-14"},{"lineNumber":819,"author":{"gitId":"RSXIX"},"content":"1.  Other test cases that should work include `list ` or `list 2` \u003cbr\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":820,"author":{"gitId":"RSXIX"},"content":"    Expected: Similar to previous","lastModifiedDate":"2023-11-13"},{"lineNumber":821,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":822,"author":{"gitId":"RSXIX"},"content":"### Clear command","lastModifiedDate":"2023-11-13"},{"lineNumber":823,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":824,"author":{"gitId":"RSXIX"},"content":"1.  Prerequisites: None.","lastModifiedDate":"2023-11-13"},{"lineNumber":825,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":826,"author":{"gitId":"RSXIX"},"content":"1.  Test case: `clear` \u003cbr\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":827,"author":{"gitId":"brendanneojw"},"content":"    Expected: Successful clear message is shown in the status message. All clients in the data file are removed.","lastModifiedDate":"2023-11-14"},{"lineNumber":828,"author":{"gitId":"RSXIX"},"content":"1.  Other test cases that should work include `clear ` or `clear 2` \u003cbr\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":829,"author":{"gitId":"RSXIX"},"content":"    Expected: Similar to previous","lastModifiedDate":"2023-11-13"},{"lineNumber":830,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":831,"author":{"gitId":"RSXIX"},"content":"### Editing a person","lastModifiedDate":"2023-11-13"},{"lineNumber":832,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":833,"author":{"gitId":"RSXIX"},"content":"1. Editing a client without a policy","lastModifiedDate":"2023-11-13"},{"lineNumber":834,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":835,"author":{"gitId":"RSXIX"},"content":"   1. Prerequisites: Display persons using the `list` command or other alternative commands such as `find`. At least one person in the list. The person to be edited is specified using their index number in the shown list.","lastModifiedDate":"2023-11-13"},{"lineNumber":836,"author":{"gitId":"RSXIX"},"content":"      At least one parameter must be specified. If the policy is to be edited successfully, all four parameters must be specified or an error message is shown.","lastModifiedDate":"2023-11-13"},{"lineNumber":837,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":838,"author":{"gitId":"RSXIX"},"content":"   1. Test case: `edit 2`\u003cbr\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":839,"author":{"gitId":"RSXIX"},"content":"      Expected: Error details shown in the status message. Timestamp in the status bar is updated. Status bar remains the same.","lastModifiedDate":"2023-11-13"},{"lineNumber":840,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":841,"author":{"gitId":"RSXIX"},"content":"   1. Test case: `edit 2 n/Alfred a/Batcave`\u003cbr\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":842,"author":{"gitId":"RSXIX"},"content":"      Expected: Details of the edited person are shown in the status message. Timestamp in the status bar as well as the displayed list are updated.","lastModifiedDate":"2023-11-13"},{"lineNumber":843,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":844,"author":{"gitId":"RSXIX"},"content":"   1. Test case: `edit 2 c/Apple`\u003cbr\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":845,"author":{"gitId":"RSXIX"},"content":"     Expected: Error details shown in the status message. Timestamp in the status bar is updated. Status bar remains the same.","lastModifiedDate":"2023-11-13"},{"lineNumber":846,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":847,"author":{"gitId":"RSXIX"},"content":"   1. Test case: `edit 2 c/Apple pn/1234 pi/10-10-2003 pe/10-10-2004`\u003cbr\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":848,"author":{"gitId":"RSXIX"},"content":"     Expected: Details of the edited person are shown in the status message. Timestamp in the status bar as well as the displayed list are updated.","lastModifiedDate":"2023-11-13"},{"lineNumber":849,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":850,"author":{"gitId":"RSXIX"},"content":"   1. Other incorrect delete commands to try: `edit`, `edit x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":851,"author":{"gitId":"RSXIX"},"content":"      Expected: Similar to previous. Error details shown in the status message. Timestamp in the status bar is updated. Status bar remains the same.","lastModifiedDate":"2023-11-13"},{"lineNumber":852,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":853,"author":{"gitId":"RSXIX"},"content":"1. Editing a client with a policy","lastModifiedDate":"2023-11-13"},{"lineNumber":854,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":855,"author":{"gitId":"RSXIX"},"content":"    1. Prerequisites: At least one client must be displayed. The person to be edited is specified using their index number in the shown list.","lastModifiedDate":"2023-11-13"},{"lineNumber":856,"author":{"gitId":"RSXIX"},"content":"       At least one parameter must be specified. Not all policy parameters must be specified, but if one of the edits is the same as the respective default value, then the entire policy is deleted.","lastModifiedDate":"2023-11-13"},{"lineNumber":857,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":858,"author":{"gitId":"RSXIX"},"content":"    1. Test case: `edit 2 pn/6969`\u003cbr\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":859,"author":{"gitId":"RSXIX"},"content":"       The person at index 2 is edited with changes to `Policy Number`. Details of the edited person are shown in the status message. Timestamp in the status bar as well as the displayed list are updated.","lastModifiedDate":"2023-11-13"},{"lineNumber":860,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":861,"author":{"gitId":"RSXIX"},"content":"    1. Test case: `edit 2 pn/NOPOLICY`\u003cbr\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":862,"author":{"gitId":"brendanneojw"},"content":"       Expected: NOPOLICY is the default Policy Number value. The person at index 2 is edited with changes to all four policy parameters to default value such that there is `No Policy Found`. ","lastModifiedDate":"2023-11-14"},{"lineNumber":863,"author":{"gitId":"RSXIX"},"content":"   Details of the edited person are shown in the status message. Timestamp in the status bar as well as the displayed list are updated.","lastModifiedDate":"2023-11-13"},{"lineNumber":864,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":865,"author":{"gitId":"RSXIX"},"content":"### Finding a person","lastModifiedDate":"2023-11-13"},{"lineNumber":866,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":867,"author":{"gitId":"RSXIX"},"content":"1. Prerequisites: Display persons using the `list` command or other alternative commands such as `find`. At least one person in the list.","lastModifiedDate":"2023-11-13"},{"lineNumber":868,"author":{"gitId":"RSXIX"},"content":"       At least one parameter must be specified. Using find with default policy parameters will yield no results.","lastModifiedDate":"2023-11-13"},{"lineNumber":869,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":870,"author":{"gitId":"RSXIX"},"content":"1.  Test case: `find` \u003cbr\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":871,"author":{"gitId":"brendanneojw"},"content":"    Expected: Error details shown in the status message. Timestamp in the status bar is updated. Status bar as well the displayed list remains the same.","lastModifiedDate":"2023-11-14"},{"lineNumber":872,"author":{"gitId":"RSXIX"},"content":"   ","lastModifiedDate":"2023-11-13"},{"lineNumber":873,"author":{"gitId":"RSXIX"},"content":"1.  Test case: `find pn/NOPOLICY` \u003cbr\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":874,"author":{"gitId":"RSXIX"},"content":"       Expected: NOPOLICY is the default Policy Number value. Successful find command call is shown in the status message. No clients are displayed.","lastModifiedDate":"2023-11-13"},{"lineNumber":875,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":876,"author":{"gitId":"RSXIX"},"content":"1. Test case: `find n/John` \u003cbr\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":877,"author":{"gitId":"RSXIX"},"content":"        Expected: Successful find command call is shown in the status message. Clients with `Name` John are displayed.","lastModifiedDate":"2023-11-13"},{"lineNumber":878,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":879,"author":{"gitId":"RSXIX"},"content":"### Sort command","lastModifiedDate":"2023-11-13"},{"lineNumber":880,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":881,"author":{"gitId":"RSXIX"},"content":"1.  Prerequisites: Display persons using the `list` command or other alternative commands such as `find`. At least one person in the list.","lastModifiedDate":"2023-11-13"},{"lineNumber":882,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":883,"author":{"gitId":"RSXIX"},"content":"1.  Test case: `sort` \u003cbr\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":884,"author":{"gitId":"RSXIX"},"content":"    Expected: Successful sorting message is shown in the status message. Timestamp in the status bar as well as the displayed list are updated.","lastModifiedDate":"2023-11-13"},{"lineNumber":885,"author":{"gitId":"RSXIX"},"content":"1.  Other test cases that should work include `sort ` or `sort 2` \u003cbr\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":886,"author":{"gitId":"RSXIX"},"content":"    Expected: Similar to previous.","lastModifiedDate":"2023-11-13"},{"lineNumber":887,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":888,"author":{"gitId":"RSXIX"},"content":"### Batch Delete Command","lastModifiedDate":"2023-11-13"},{"lineNumber":889,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":890,"author":{"gitId":"RSXIX"},"content":"1.  Prerequisites: Batch Delete works on all clients and not just those that are displayed.","lastModifiedDate":"2023-11-13"},{"lineNumber":891,"author":{"gitId":"RSXIX"},"content":"    One of company or delete month parameters must be specified but not both.","lastModifiedDate":"2023-11-13"},{"lineNumber":892,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":893,"author":{"gitId":"RSXIX"},"content":"1.  Test case: `batchdelete dm/12-2019` \u003cbr\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":894,"author":{"gitId":"RSXIX"},"content":"    Expected: Successful batch delete message is shown in the status message. ","lastModifiedDate":"2023-11-13"},{"lineNumber":895,"author":{"gitId":"RSXIX"},"content":"    Timestamp in the status bar as well as the displayed list are updated.","lastModifiedDate":"2023-11-13"},{"lineNumber":896,"author":{"gitId":"RSXIX"},"content":"1.  Test case: `batchdelete dm/12-2016 c/Apple` \u003cbr\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":897,"author":{"gitId":"brendanneojw"},"content":"       Expected: Error details shown in the status message. Timestamp in the status bar is updated. Status bar as well the displayed list remains the same.","lastModifiedDate":"2023-11-14"},{"lineNumber":898,"author":{"gitId":"RSXIX"},"content":"1. Test case: `batchdelete` \u003cbr\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":899,"author":{"gitId":"brendanneojw"},"content":"          Expected: Error details shown in the status message. Timestamp in the status bar is updated. Status bar as well the displayed list remains the same.","lastModifiedDate":"2023-11-14"},{"lineNumber":900,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":901,"author":{"gitId":"RSXIX"},"content":"### Remind command","lastModifiedDate":"2023-11-13"},{"lineNumber":902,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":903,"author":{"gitId":"RSXIX"},"content":"1. Prerequisites: Remind works on all clients and not just those that are displayed.","lastModifiedDate":"2023-11-13"},{"lineNumber":904,"author":{"gitId":"RSXIX"},"content":"    The compulsory parameter must be of type integer and within the specified range.","lastModifiedDate":"2023-11-13"},{"lineNumber":905,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":906,"author":{"gitId":"RSXIX"},"content":"1.  Test case: `remind 420` \u003cbr\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":907,"author":{"gitId":"RSXIX"},"content":"    Expected: Successful remind message is shown in the status message.","lastModifiedDate":"2023-11-13"},{"lineNumber":908,"author":{"gitId":"RSXIX"},"content":"    Timestamp in the status bar as well as the displayed list are updated.","lastModifiedDate":"2023-11-13"},{"lineNumber":909,"author":{"gitId":"RSXIX"},"content":"1.  Test case: `remind` \u003cbr\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":910,"author":{"gitId":"brendanneojw"},"content":"    Expected: Error details shown in the status message. Timestamp in the status bar is updated. Status bar as well the displayed list remains the same.","lastModifiedDate":"2023-11-14"},{"lineNumber":911,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":912,"author":{"gitId":"RSXIX"},"content":"1. Test case: `remind -1` \u003cbr\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":913,"author":{"gitId":"brendanneojw"},"content":"   Expected: Error details shown in the status message. Timestamp in the status bar is updated. Status bar as well the displayed list remains the same.","lastModifiedDate":"2023-11-14"},{"lineNumber":914,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":915,"author":{"gitId":"RSXIX"},"content":"### Remark command","lastModifiedDate":"2023-11-13"},{"lineNumber":916,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":917,"author":{"gitId":"RSXIX"},"content":"1. Prerequisites: Display persons using the `list` command or other alternative commands such as `find`. At least one person in the list.","lastModifiedDate":"2023-11-13"},{"lineNumber":918,"author":{"gitId":"RSXIX"},"content":"    The person to whom we are removing or adding a remark is specified using index.","lastModifiedDate":"2023-11-13"},{"lineNumber":919,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":920,"author":{"gitId":"RSXIX"},"content":"1.  Test case: `remark 2 r/Contact soon` \u003cbr\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":921,"author":{"gitId":"RSXIX"},"content":"    Expected: Successful remark add message is shown in the status message.","lastModifiedDate":"2023-11-13"},{"lineNumber":922,"author":{"gitId":"RSXIX"},"content":"    Timestamp in the status bar as well as the displayed list are updated.","lastModifiedDate":"2023-11-13"},{"lineNumber":923,"author":{"gitId":"RSXIX"},"content":"1.  Test case: `remind 2` or `remark 2 r/` \u003cbr\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":924,"author":{"gitId":"brendanneojw"},"content":"    Expected: Successful remark add message is shown in the status message.","lastModifiedDate":"2023-11-14"},{"lineNumber":925,"author":{"gitId":"RSXIX"},"content":"    Timestamp in the status bar as well as the displayed list are updated.","lastModifiedDate":"2023-11-13"},{"lineNumber":926,"author":{"gitId":"RSXIX"},"content":"1. Test case: `remark` \u003cbr\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":927,"author":{"gitId":"brendanneojw"},"content":"   Expected: Error details shown in the status message. Timestamp in the status bar is updated. Status bar as well the displayed list remains the same.","lastModifiedDate":"2023-11-14"},{"lineNumber":928,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":929,"author":{"gitId":"RSXIX"},"content":"### Exit command","lastModifiedDate":"2023-11-13"},{"lineNumber":930,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":931,"author":{"gitId":"brendanneojw"},"content":"1. Prerequisites: None","lastModifiedDate":"2023-11-14"},{"lineNumber":932,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":933,"author":{"gitId":"RSXIX"},"content":"1.  Test case: `exit` \u003cbr\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":934,"author":{"gitId":"RSXIX"},"content":"    Expected: Successful exit message is shown in the status message. The program is then closed.","lastModifiedDate":"2023-11-13"},{"lineNumber":935,"author":{"gitId":"RSXIX"},"content":"1.  Other test cases that should work include `exit ` or `exit 2` \u003cbr\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":936,"author":{"gitId":"RSXIX"},"content":"    Expected: Similar to previous","lastModifiedDate":"2023-11-13"},{"lineNumber":937,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":938,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":939,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":940,"author":{"gitId":"brendanneojw"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-11-13"},{"lineNumber":941,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":942,"author":{"gitId":"KumChaiYin"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-11-14"},{"lineNumber":943,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":944,"author":{"gitId":"brendanneojw"},"content":"## **Appendix: Effort**","lastModifiedDate":"2023-11-13"},{"lineNumber":945,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":946,"author":{"gitId":"brendanneojw"},"content":"### Achievements of the project","lastModifiedDate":"2023-11-14"},{"lineNumber":947,"author":{"gitId":"cyaoxuan"},"content":"* `Policy` class was added with 4 attributes (company, policy number, issue date, expiry date)","lastModifiedDate":"2023-11-13"},{"lineNumber":948,"author":{"gitId":"cyaoxuan"},"content":"* `Person` class was extended to include new attributes (NRIC, licence plate, remark, `Policy`) to cater to car insurance agents managing clients","lastModifiedDate":"2023-11-13"},{"lineNumber":949,"author":{"gitId":"cyaoxuan"},"content":"* Features added: `batchdelete`, `remark`, `remind`, `sort`","lastModifiedDate":"2023-11-13"},{"lineNumber":950,"author":{"gitId":"cyaoxuan"},"content":"  * Decided after researching on car insurance and the work of some agents, with more description and justifications found in the main body","lastModifiedDate":"2023-11-13"},{"lineNumber":951,"author":{"gitId":"cyaoxuan"},"content":"* Enhancements to existing features:","lastModifiedDate":"2023-11-13"},{"lineNumber":952,"author":{"gitId":"cyaoxuan"},"content":"  * `find` searches by the various fields instead of only name as implemented in AB3 to facilitate car insurance agents\u0027 work","lastModifiedDate":"2023-11-13"},{"lineNumber":953,"author":{"gitId":"cyaoxuan"},"content":"  * Fields are case-insensitive (e.g. licence plate is stored in capital letters, but users can input small letters) to aid a fast typist","lastModifiedDate":"2023-11-13"},{"lineNumber":954,"author":{"gitId":"cyaoxuan"},"content":"* Enhanced testing of features, which led to code coverage increasing from 75% in AB3 to ~80% in InsureIQ","lastModifiedDate":"2023-11-13"},{"lineNumber":955,"author":{"gitId":"brendanneojw"},"content":"* \\\u003e8,000 LoCs added","lastModifiedDate":"2023-11-14"},{"lineNumber":956,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":957,"author":{"gitId":"brendanneojw"},"content":"### Challenges faced","lastModifiedDate":"2023-11-14"},{"lineNumber":958,"author":{"gitId":"cyaoxuan"},"content":"The challenges mainly arose due to the major extension of the `Model` class","lastModifiedDate":"2023-11-13"},{"lineNumber":959,"author":{"gitId":"brendanneojw"},"content":"  * Decision on how to handle the `Policy` details (design considerations mentioned in [`Model`](#model-component))","lastModifiedDate":"2023-11-14"},{"lineNumber":960,"author":{"gitId":"cyaoxuan"},"content":"  * Changes in almost all files to accommodate the newly extended fields, including changes in constructors and implementations to support the nested `Policy`","lastModifiedDate":"2023-11-13"},{"lineNumber":961,"author":{"gitId":"cyaoxuan"},"content":"  * Changes in UI to present the new fields clearly without making everything seemed to cluttered as they are all text based","lastModifiedDate":"2023-11-13"},{"lineNumber":962,"author":{"gitId":"cyaoxuan"},"content":"  * Testing required a lot more cases to handle different cases with different fields","lastModifiedDate":"2023-11-13"},{"lineNumber":963,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":964,"author":{"gitId":"brendanneojw"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-11-13"},{"lineNumber":965,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":966,"author":{"gitId":"brendanneojw"},"content":"## **Appendix: Planned Enhancements**","lastModifiedDate":"2023-11-13"},{"lineNumber":967,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":968,"author":{"gitId":"brendanneojw"},"content":"Below are the planned enhancements to add in the near future to existing features.","lastModifiedDate":"2023-11-13"},{"lineNumber":969,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":970,"author":{"gitId":"brendanneojw"},"content":"### Deleting policy attached to client","lastModifiedDate":"2023-11-13"},{"lineNumber":971,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":972,"author":{"gitId":"brendanneojw"},"content":"1. The current implementation of `edit` does not restrict the users to pass in the default values for the Policy fields ","lastModifiedDate":"2023-11-13"},{"lineNumber":973,"author":{"gitId":"brendanneojw"},"content":"i.e. `!@#NO_COMPANY!@#` for `Company`, `NOPOLICY` for `PolicyNumber` and `01-01-1000` for `PolicyDate`","lastModifiedDate":"2023-11-13"},{"lineNumber":974,"author":{"gitId":"brendanneojw"},"content":"2. Hence, if any of the default values of the Policy fields is passed in the `edit` command ","lastModifiedDate":"2023-11-13"},{"lineNumber":975,"author":{"gitId":"brendanneojw"},"content":"e.g. `edit 1 c/!@#NO_COMPANY!@#` or `edit 1 pn/NOPOLICY`, it deletes the policy attached to that client at index 1","lastModifiedDate":"2023-11-13"},{"lineNumber":976,"author":{"gitId":"brendanneojw"},"content":"3. We plan to make a separate command (potential name: `policydelete`) to allow users to delete the policy attached to a client, and restrict the user","lastModifiedDate":"2023-11-13"},{"lineNumber":977,"author":{"gitId":"brendanneojw"},"content":"from using the default values in the `edit` command","lastModifiedDate":"2023-11-13"},{"lineNumber":978,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":979,"author":{"gitId":"brendanneojw"},"content":"![DeletePolicyFromEdit](images/DeletePolicyFromEdit.png)","lastModifiedDate":"2023-11-13"},{"lineNumber":980,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":981,"author":{"gitId":"brendanneojw"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The `add` command does not restrict the user from using default values for the Policy fields as well. ","lastModifiedDate":"2023-11-13"},{"lineNumber":982,"author":{"gitId":"brendanneojw"},"content":"However, it doesn\u0027t matter since the Policy field in `add` is optional. \u003c/div\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":983,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":984,"author":{"gitId":"brendanneojw"},"content":"### Display clients with expired policy","lastModifiedDate":"2023-11-13"},{"lineNumber":985,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":986,"author":{"gitId":"brendanneojw"},"content":"1. The current implementation of `remind` only shows clients with policy expiry dates that are approaching within a certain number of days as specified by the user","lastModifiedDate":"2023-11-13"},{"lineNumber":987,"author":{"gitId":"brendanneojw"},"content":"e.g. `remind 30` will show clients with policy expiry dates within the next 30 days, `remind 60` will show clients with policy expiry dates within the next 60 days","lastModifiedDate":"2023-11-13"},{"lineNumber":988,"author":{"gitId":"brendanneojw"},"content":"2. However, for clients whose policy expiry dates passed the current date, `remind` does not display those clients","lastModifiedDate":"2023-11-13"},{"lineNumber":989,"author":{"gitId":"brendanneojw"},"content":"3. Hence, the `remind` command will not be able to accurately display the list of clients as it excludes those clients whose policy expiry dates passed the current date","lastModifiedDate":"2023-11-13"},{"lineNumber":990,"author":{"gitId":"brendanneojw"},"content":"4. We plan to make a separate command (potential name: `expiry`) to display the list of clients that has policy expiry dates passed the current date","lastModifiedDate":"2023-11-13"},{"lineNumber":991,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":992,"author":{"gitId":"brendanneojw"},"content":"### Retrieving previous successful commands","lastModifiedDate":"2023-11-14"},{"lineNumber":993,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":994,"author":{"gitId":"brendanneojw"},"content":"1. The current implementations of all commands is as such:","lastModifiedDate":"2023-11-13"},{"lineNumber":995,"author":{"gitId":"brendanneojw"},"content":"   1. If the command fails, the command will be highlighted in red and presents the error message in the result box","lastModifiedDate":"2023-11-13"},{"lineNumber":996,"author":{"gitId":"brendanneojw"},"content":"   ![CommandFail](images/CommandFail.png) \u003cbr\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":997,"author":{"gitId":"brendanneojw"},"content":"   2. If the command succeed, the result of the command will be shown in the result box and the changes to the client list","lastModifiedDate":"2023-11-13"},{"lineNumber":998,"author":{"gitId":"brendanneojw"},"content":"   ![CommandSuccess](images/CommandSuccess.png) \u003cbr\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":999,"author":{"gitId":"brendanneojw"},"content":"2. With each successful command, the command box will be cleared and the result box will show the latest successful command","lastModifiedDate":"2023-11-13"},{"lineNumber":1000,"author":{"gitId":"brendanneojw"},"content":"3. Hence, if there are multiple successful commands, the user will have no ability to keep track on what commands he used so far","lastModifiedDate":"2023-11-13"},{"lineNumber":1001,"author":{"gitId":"brendanneojw"},"content":"4. We plan to allow the recovery of previously succeeded commands using the _up arrow key_ (Just like in UNIX OS)","lastModifiedDate":"2023-11-13"},{"lineNumber":1002,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":1003,"author":{"gitId":"brendanneojw"},"content":"### Sort should not sort data file","lastModifiedDate":"2023-11-14"},{"lineNumber":1004,"author":{"gitId":"brendanneojw"},"content":"1. The current implementation of `sort` not only sorts the client list that is displayed to the user, but also sorts the storage file","lastModifiedDate":"2023-11-13"},{"lineNumber":1005,"author":{"gitId":"brendanneojw"},"content":"that stores the client details i.e. `[JAR file location]/data/insureiq.json`","lastModifiedDate":"2023-11-14"},{"lineNumber":1006,"author":{"gitId":"brendanneojw"},"content":"2. Hence, if the user restarts the application again, the client list displayed to the user will be the already sorted client list","lastModifiedDate":"2023-11-13"},{"lineNumber":1007,"author":{"gitId":"brendanneojw"},"content":"3. We plan to update the implementation of the `sort` command such that it will only display the sorted client list to the user,","lastModifiedDate":"2023-11-13"},{"lineNumber":1008,"author":{"gitId":"brendanneojw"},"content":"but does not sort the client list in the storage file","lastModifiedDate":"2023-11-14"},{"lineNumber":1009,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":1010,"author":{"gitId":"brendanneojw"},"content":"### Support for multiple policies for same client with same vehicle","lastModifiedDate":"2023-11-14"},{"lineNumber":1011,"author":{"gitId":"brendanneojw"},"content":"1. The current implementation of `add` and `edit` checks for duplicate client by comparing the basic details (Name, Licence Plate, Email, Phone and Address) and if 2 clients","lastModifiedDate":"2023-11-14"},{"lineNumber":1012,"author":{"gitId":"brendanneojw"},"content":"have these same fields, `add` and `edit` will display the error message to reflect that","lastModifiedDate":"2023-11-14"},{"lineNumber":1013,"author":{"gitId":"brendanneojw"},"content":"2. Essentially, `add` and `edit` only the same client with different vehicle to get a different policy","lastModifiedDate":"2023-11-14"},{"lineNumber":1014,"author":{"gitId":"brendanneojw"},"content":"3. Hence, if the same client with the same vehicle wants to get more than 1 policy, the `add` and `edit` commands restricts that","lastModifiedDate":"2023-11-14"},{"lineNumber":1015,"author":{"gitId":"brendanneojw"},"content":"4. We plan to update the implementation of the `add` and `edit` commands such that for the same client with the same vehicle, it will allow different policies attached to it","lastModifiedDate":"2023-11-14"}],"authorContributionMap":{"brendanneojw":162,"suryanshkushwaha":38,"RSXIX":173,"KumChaiYin":151,"-":325,"cyaoxuan":166}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"cyaoxuan"},"content":"Welcome to the user guide for InsureIQ, the ultimate **contact management system for car insurance agents to keep track of multiple clients\u0027 details and policies**. Designed with efficiency in mind, this tool combines the speed of a Command Line Interface (CLI) with the user-friendly benefits of a Graphical User Interface (GUI). Experience a faster and more efficient contact management solution tailored to the unique needs of car insurance agents!","lastModifiedDate":"2023-11-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"cyaoxuan"},"content":"## Glossary","lastModifiedDate":"2023-11-15"},{"lineNumber":14,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-11-15"},{"lineNumber":15,"author":{"gitId":"cyaoxuan"},"content":"* **Command Line Interface (CLI)**: A way of interacting with the software by typing textual commands","lastModifiedDate":"2023-11-15"},{"lineNumber":16,"author":{"gitId":"cyaoxuan"},"content":"* **Graphical User Interface (GUI)**: A way of interacting with the software using visual elements like buttons and windows","lastModifiedDate":"2023-11-15"},{"lineNumber":17,"author":{"gitId":"cyaoxuan"},"content":"* **Policy fields**: Refers to the company the policy is under, policy number, policy issue date and policy expiry date","lastModifiedDate":"2023-11-15"},{"lineNumber":18,"author":{"gitId":"cyaoxuan"},"content":"* **Client**: Buyers / potential buyers that car insurance agent is in contact with, such that it is stored inside InsureIQ","lastModifiedDate":"2023-11-15"},{"lineNumber":19,"author":{"gitId":"cyaoxuan"},"content":"* **Client list**: List of clients and their personal and policy details in the InsureIQ app","lastModifiedDate":"2023-11-15"},{"lineNumber":20,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-11-15"},{"lineNumber":21,"author":{"gitId":"cyaoxuan"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-11-15"},{"lineNumber":22,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-11-15"},{"lineNumber":23,"author":{"gitId":"brendanneojw"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":24,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"cyaoxuan"},"content":"1. Download the latest `insureiq.jar` from [here](https://github.com/AY2324S1-CS2103T-W16-3/tp/releases/tag/v1.4).","lastModifiedDate":"2023-11-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"cyaoxuan"},"content":"1. Copy the file to the folder you want to use as the _home folder_ for InsureIQ.","lastModifiedDate":"2023-10-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"brendanneojw"},"content":"1. Open a command terminal, `cd` into the folder you put the jar file in, and use the `java -jar insureiq.jar` command to run the application.\u003cbr\u003e","lastModifiedDate":"2023-10-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"   A GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2023-01-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"1. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"brendanneojw"},"content":"   * `list` : Lists all clients.","lastModifiedDate":"2023-11-02"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"brendanneojw"},"content":"   * `delete 3` : Deletes the 3rd client shown in the current list.","lastModifiedDate":"2023-11-02"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"brendanneojw"},"content":"   * `clear` : Deletes all clients.","lastModifiedDate":"2023-11-02"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"   * `exit` : Exits the app.","lastModifiedDate":"2023-01-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"1. Refer to the [Features](#features) below for details of each command. ","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"cyaoxuan"},"content":"1. Look out for additional information in these alert blocks to master the use of InsureIQ!","lastModifiedDate":"2023-11-15"},{"lineNumber":51,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-11-15"},{"lineNumber":52,"author":{"gitId":"cyaoxuan"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2023-11-15"},{"lineNumber":53,"author":{"gitId":"cyaoxuan"},"content":"**:information_source: Notes:**","lastModifiedDate":"2023-11-15"},{"lineNumber":54,"author":{"gitId":"cyaoxuan"},"content":"Additional information for your understanding.","lastModifiedDate":"2023-11-15"},{"lineNumber":55,"author":{"gitId":"cyaoxuan"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-11-15"},{"lineNumber":56,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-11-15"},{"lineNumber":57,"author":{"gitId":"cyaoxuan"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-success\"\u003e","lastModifiedDate":"2023-11-15"},{"lineNumber":58,"author":{"gitId":"cyaoxuan"},"content":"**:bulb: Tips:**","lastModifiedDate":"2023-11-15"},{"lineNumber":59,"author":{"gitId":"cyaoxuan"},"content":"Tips for you to maximise efficiency.","lastModifiedDate":"2023-11-15"},{"lineNumber":60,"author":{"gitId":"cyaoxuan"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-11-15"},{"lineNumber":61,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-11-15"},{"lineNumber":62,"author":{"gitId":"cyaoxuan"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e","lastModifiedDate":"2023-11-15"},{"lineNumber":63,"author":{"gitId":"cyaoxuan"},"content":"**:exclamation: Warnings:**","lastModifiedDate":"2023-11-15"},{"lineNumber":64,"author":{"gitId":"cyaoxuan"},"content":"Important information you need to be careful about!","lastModifiedDate":"2023-11-15"},{"lineNumber":65,"author":{"gitId":"cyaoxuan"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-11-15"},{"lineNumber":66,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-11-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"brendanneojw"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":71,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":72,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2023-11-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"cyaoxuan"},"content":"**:information_source: About the command format:**\u003cbr\u003e","lastModifiedDate":"2023-11-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"cyaoxuan"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by you.\u003cbr\u003e","lastModifiedDate":"2023-11-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"  e.g. in `add n/NAME`, `NAME` is a parameter which can be used as `add n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"  e.g `n/NAME [t/TAG]` can be used as `n/John Doe t/friend` or as `n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"* Items with `…`​ after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"  e.g. `[t/TAG]…​` can be used as ` ` (i.e. 0 times), `t/friend`, `t/friend t/family` etc.","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable.","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"brendanneojw"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, `exit`, `sort` and `clear`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2023-11-12"},{"lineNumber":92,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-02-03"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":94,"author":{"gitId":"-"},"content":"* If you are using a PDF version of this document, be careful when copying and pasting commands that span multiple lines as space characters surrounding line-breaks may be omitted when copied over to the application.","lastModifiedDate":"2023-06-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"### Viewing help : `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"cyaoxuan"},"content":"Leads you to the help page, which is this user guide.","lastModifiedDate":"2023-11-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"![help message](images/helpMessage.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"Format: `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"cyaoxuan"},"content":"### Listing all clients : `list`","lastModifiedDate":"2023-11-15"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-15"},{"lineNumber":108,"author":{"gitId":"cyaoxuan"},"content":"Shows you all clients in your client list.","lastModifiedDate":"2023-11-15"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-15"},{"lineNumber":110,"author":{"gitId":"cyaoxuan"},"content":"Format: `list`","lastModifiedDate":"2023-11-15"},{"lineNumber":111,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-11-15"},{"lineNumber":112,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-11-15"},{"lineNumber":113,"author":{"gitId":"brendanneojw"},"content":"### Adding a client : `add`","lastModifiedDate":"2023-11-01"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"cyaoxuan"},"content":"Adds client details to your client list. You can also choose to include policy details attached to a client.","lastModifiedDate":"2023-11-15"},{"lineNumber":116,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-11-15"},{"lineNumber":117,"author":{"gitId":"cyaoxuan"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-success\"\u003e","lastModifiedDate":"2023-11-15"},{"lineNumber":118,"author":{"gitId":"cyaoxuan"},"content":"**:bulb: Importing client information from a data file:**","lastModifiedDate":"2023-11-15"},{"lineNumber":119,"author":{"gitId":"cyaoxuan"},"content":"InsureIQ data is stored in a JSON file, which you can add clients directly into. More information can be found in the section [Editing the data file](#editing-the-data-file).","lastModifiedDate":"2023-11-15"},{"lineNumber":120,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-11-15"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"KumChaiYin"},"content":"Format: `add n/NAME i/NRIC p/CONTACT NUMBER e/EMAIL a/ADDRESS [t/TAG]... l/LICENCE PLATE [c/COMPANY","lastModifiedDate":"2023-11-09"},{"lineNumber":123,"author":{"gitId":"KumChaiYin"},"content":" pn/POLICY NUMBER pi/POLICY ISSUE DATE pe/POLICY EXPIRY DATE]`","lastModifiedDate":"2023-11-03"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"KumChaiYin"},"content":"* **All** client details **except tag** must be present when using this command.","lastModifiedDate":"2023-11-09"},{"lineNumber":126,"author":{"gitId":"brendanneojw"},"content":"* Tag is optional and this command allows multiple tags.","lastModifiedDate":"2023-11-13"},{"lineNumber":127,"author":{"gitId":"cyaoxuan"},"content":"* If adding a client’s policy, all 4 policy fields must be present when using this command:","lastModifiedDate":"2023-11-15"},{"lineNumber":128,"author":{"gitId":"brendanneojw"},"content":"  * `c/COMPANY`","lastModifiedDate":"2023-11-13"},{"lineNumber":129,"author":{"gitId":"brendanneojw"},"content":"  * `pn/POLICY NUMBER`","lastModifiedDate":"2023-11-13"},{"lineNumber":130,"author":{"gitId":"brendanneojw"},"content":"  * `pi/POLICY ISSUE DATE`","lastModifiedDate":"2023-11-13"},{"lineNumber":131,"author":{"gitId":"brendanneojw"},"content":"  * `pe/POLICY EXPIRY DATE`","lastModifiedDate":"2023-11-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"KumChaiYin"},"content":"* `add n/Irfan Ibrahim i/752X p/92492021 e/irfan@example.com a/Blk 47 Tampines Street 20,#17-35 t/classmates l/SBP8888T` adds a client Irfan without a policy.","lastModifiedDate":"2023-11-03"},{"lineNumber":135,"author":{"gitId":"cyaoxuan"},"content":"* `add n/Bob Anderson i/578A p/54783402 e/bobanderson@gmail.com a/Blk 233 Serangoon Avenue 3, #05-12 t/teacher l/SGP1208J c/DEF Insurance pn/263J pi/20-09-2023 pe/19-09-2024` adds a client Bob with the policy he bought.","lastModifiedDate":"2023-11-15"},{"lineNumber":136,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":137,"author":{"gitId":"KumChaiYin"},"content":"Acceptable values for each parameter:","lastModifiedDate":"2023-10-02"},{"lineNumber":138,"author":{"gitId":"KumChaiYin"},"content":"* `n/NAME`: Alphanumeric.","lastModifiedDate":"2023-11-09"},{"lineNumber":139,"author":{"gitId":"cyaoxuan"},"content":"* `i/NRIC`: Alphanumeric, _exactly_ 4 characters (3 digits + 1 letter).","lastModifiedDate":"2023-11-12"},{"lineNumber":140,"author":{"gitId":"KumChaiYin"},"content":"* `p/CONTACT NUMBER`: Numeric, _exactly_ 8 characters.","lastModifiedDate":"2023-11-03"},{"lineNumber":141,"author":{"gitId":"brendanneojw"},"content":"* `e/EMAIL`: Alphanumeric and/or special characters, no white spaces allowed, standard email format.","lastModifiedDate":"2023-11-03"},{"lineNumber":142,"author":{"gitId":"cyaoxuan"},"content":"* `a/ADDRESS`: Alphabets and/or special characters, white spaces allowed.","lastModifiedDate":"2023-11-12"},{"lineNumber":143,"author":{"gitId":"brendanneojw"},"content":"* `t/TAG`: Alphanumeric, no white spaces allowed.","lastModifiedDate":"2023-11-13"},{"lineNumber":144,"author":{"gitId":"cyaoxuan"},"content":"* `l/LICENCE PLATE`: Alphanumeric, _up to_ 8 characters.","lastModifiedDate":"2023-11-12"},{"lineNumber":145,"author":{"gitId":"brendanneojw"},"content":"* `c/COMPANY`: Alphanumeric and/or special characters, white spaces allowed.","lastModifiedDate":"2023-11-13"},{"lineNumber":146,"author":{"gitId":"KumChaiYin"},"content":"* `pn/POLICY NUMBER`: Alphanumeric, _up to_ 8 characters.","lastModifiedDate":"2023-11-09"},{"lineNumber":147,"author":{"gitId":"KumChaiYin"},"content":"* `pi/POLICY ISSUE DATE` and `pe/POLICY EXPIRY DATE`: Date in the format dd-mm-yyyy.","lastModifiedDate":"2023-11-03"},{"lineNumber":148,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":149,"author":{"gitId":"KumChaiYin"},"content":"Expected output upon success: \u003cbr\u003e","lastModifiedDate":"2023-11-03"},{"lineNumber":150,"author":{"gitId":"KumChaiYin"},"content":"![AddSuccess](images/AddSuccess.png)","lastModifiedDate":"2023-11-03"},{"lineNumber":151,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":152,"author":{"gitId":"KumChaiYin"},"content":"Expected output upon failure:","lastModifiedDate":"2023-10-02"},{"lineNumber":153,"author":{"gitId":"KumChaiYin"},"content":"* Missing any of the compulsory fields:\u003cbr\u003e","lastModifiedDate":"2023-11-03"},{"lineNumber":154,"author":{"gitId":"KumChaiYin"},"content":"```","lastModifiedDate":"2023-11-03"},{"lineNumber":155,"author":{"gitId":"KumChaiYin"},"content":"Invalid command format! ","lastModifiedDate":"2023-11-03"},{"lineNumber":156,"author":{"gitId":"KumChaiYin"},"content":"Error: Some of the required fields are missing. ","lastModifiedDate":"2023-11-03"},{"lineNumber":157,"author":{"gitId":"cyaoxuan"},"content":"Please include the following: - NRIC(i/) - Licence Plate(l/) ","lastModifiedDate":"2023-11-12"},{"lineNumber":158,"author":{"gitId":"KumChaiYin"},"content":"```","lastModifiedDate":"2023-11-03"},{"lineNumber":159,"author":{"gitId":"KumChaiYin"},"content":"* Incomplete policy details:\u003cbr\u003e","lastModifiedDate":"2023-11-03"},{"lineNumber":160,"author":{"gitId":"KumChaiYin"},"content":"```","lastModifiedDate":"2023-11-03"},{"lineNumber":161,"author":{"gitId":"KumChaiYin"},"content":"Invalid command format! ","lastModifiedDate":"2023-11-03"},{"lineNumber":162,"author":{"gitId":"KumChaiYin"},"content":"Please include either all or none of the policy variables. ","lastModifiedDate":"2023-11-03"},{"lineNumber":163,"author":{"gitId":"KumChaiYin"},"content":"You are missing the following: - Policy Expiry Date(pe/)","lastModifiedDate":"2023-11-03"},{"lineNumber":164,"author":{"gitId":"KumChaiYin"},"content":"```","lastModifiedDate":"2023-11-03"},{"lineNumber":165,"author":{"gitId":"KumChaiYin"},"content":"* Adding a client with an existing policy number:\u003cbr\u003e","lastModifiedDate":"2023-11-03"},{"lineNumber":166,"author":{"gitId":"cyaoxuan"},"content":"```","lastModifiedDate":"2023-11-12"},{"lineNumber":167,"author":{"gitId":"cyaoxuan"},"content":"Error: The policy number is already in use","lastModifiedDate":"2023-11-12"},{"lineNumber":168,"author":{"gitId":"cyaoxuan"},"content":"```","lastModifiedDate":"2023-11-12"},{"lineNumber":169,"author":{"gitId":"cyaoxuan"},"content":"* Adding a client that already exists:\u003cbr\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":170,"author":{"gitId":"cyaoxuan"},"content":"```","lastModifiedDate":"2023-11-13"},{"lineNumber":171,"author":{"gitId":"cyaoxuan"},"content":"Error: This person already exists in the address book","lastModifiedDate":"2023-11-13"},{"lineNumber":172,"author":{"gitId":"cyaoxuan"},"content":"```","lastModifiedDate":"2023-11-13"},{"lineNumber":173,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":174,"author":{"gitId":"cyaoxuan"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2023-11-15"},{"lineNumber":175,"author":{"gitId":"cyaoxuan"},"content":"**:information_source: Adding clients with duplicate fields:**","lastModifiedDate":"2023-11-15"},{"lineNumber":176,"author":{"gitId":"cyaoxuan"},"content":"The above error will only be raised when **ALL** fields in the client\u0027s details (name, NRIC, contact number, email, address) are the same.","lastModifiedDate":"2023-11-15"},{"lineNumber":177,"author":{"gitId":"cyaoxuan"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"brendanneojw"},"content":"### Editing a client : `edit`","lastModifiedDate":"2023-11-01"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"cyaoxuan"},"content":"Modify and/or updates existing policy information in your client list.","lastModifiedDate":"2023-11-15"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"suryanshkushwaha"},"content":"Format: `edit INDEX [n/NAME] [i/NRIC] [p/CONTACT NUMBER] [e/EMAIL] [a/ADDRESS] [t/TAG]... [c/COMPANY] [l/LICENCE PLATE]","lastModifiedDate":"2023-11-09"},{"lineNumber":185,"author":{"gitId":"suryanshkushwaha"},"content":" [pn/POLICY NUMBER] [pi/POLICY ISSUE DATE] [pe/POLICY EXPIRY DATE]`","lastModifiedDate":"2023-11-03"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"suryanshkushwaha"},"content":"* Edits the client policy details at the specified `INDEX`. The index refers to the index number shown in the displayed person list. The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2023-11-03"},{"lineNumber":188,"author":{"gitId":"suryanshkushwaha"},"content":"* **At least one** of the optional fields must be provided.","lastModifiedDate":"2023-10-02"},{"lineNumber":189,"author":{"gitId":"-"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"suryanshkushwaha"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":191,"author":{"gitId":"cyaoxuan"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2023-11-15"},{"lineNumber":192,"author":{"gitId":"cyaoxuan"},"content":"**:information_source: Important notes about usage:**","lastModifiedDate":"2023-11-15"},{"lineNumber":193,"author":{"gitId":"suryanshkushwaha"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":194,"author":{"gitId":"brendanneojw"},"content":"* If you are adding a new policy number to a client with no attached policy, you **must** also add the company, policy issue date and policy expiry date.","lastModifiedDate":"2023-11-13"},{"lineNumber":195,"author":{"gitId":"suryanshkushwaha"},"content":"* In case of already existing policy, individual updates to the policy number, company, policy issue date and policy expiry date are allowed.","lastModifiedDate":"2023-11-13"},{"lineNumber":196,"author":{"gitId":"suryanshkushwaha"},"content":"* To delete an existing policy from a user, you may use any one of the following (using more than one of the below, or using while updating another policy field will still result in the deletion of the policy)","lastModifiedDate":"2023-11-13"},{"lineNumber":197,"author":{"gitId":"suryanshkushwaha"},"content":"  * `c/!@#NO_COMPANY!@#` or ","lastModifiedDate":"2023-11-13"},{"lineNumber":198,"author":{"gitId":"suryanshkushwaha"},"content":"  * `pi/01-01-1000` or ","lastModifiedDate":"2023-11-13"},{"lineNumber":199,"author":{"gitId":"suryanshkushwaha"},"content":"  * `pe/01-01-1000` or ","lastModifiedDate":"2023-11-13"},{"lineNumber":200,"author":{"gitId":"cyaoxuan"},"content":"  * `pn/NOPOLICY`, as per the \u0027Format\u0027 mentioned above.","lastModifiedDate":"2023-11-13"},{"lineNumber":201,"author":{"gitId":"suryanshkushwaha"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":202,"author":{"gitId":"suryanshkushwaha"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":203,"author":{"gitId":"suryanshkushwaha"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":204,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"cyaoxuan"},"content":"*  `edit 1 l/SNB9876E` updates the policy at the INDEX number 1 with the new licence plate provided.","lastModifiedDate":"2023-11-12"},{"lineNumber":206,"author":{"gitId":"KumChaiYin"},"content":"*  `edit 2 pn/AB12345J pe/31-12-2024` updates the policy at the INDEX number 2 with the new policy number and expiry date.","lastModifiedDate":"2023-11-13"},{"lineNumber":207,"author":{"gitId":"suryanshkushwaha"},"content":"*  `edit 3 c/!@#NO_COMPANY!@#` deletes the policy at the INDEX number 3.","lastModifiedDate":"2023-11-13"},{"lineNumber":208,"author":{"gitId":"suryanshkushwaha"},"content":"*  `edit 4 pn/AB12345J c/!@#NO_COMPANY!@#` deletes the policy at the INDEX number 4.","lastModifiedDate":"2023-11-13"},{"lineNumber":209,"author":{"gitId":"suryanshkushwaha"},"content":"*  `edit 5 pn/NO_POLICY c/!@#NO_COMPANY!@# pe/01-01-1000` deletes the policy at the INDEX number 5.","lastModifiedDate":"2023-11-13"},{"lineNumber":210,"author":{"gitId":"suryanshkushwaha"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":211,"author":{"gitId":"suryanshkushwaha"},"content":"Acceptable values for each parameter:","lastModifiedDate":"2023-10-02"},{"lineNumber":212,"author":{"gitId":"suryanshkushwaha"},"content":"* `n/NAME`: Alphanumeric.","lastModifiedDate":"2023-11-09"},{"lineNumber":213,"author":{"gitId":"cyaoxuan"},"content":"* `i/NRIC`: Alphanumeric, _exactly_ 4 characters (3 digits + 1 letter).","lastModifiedDate":"2023-11-12"},{"lineNumber":214,"author":{"gitId":"suryanshkushwaha"},"content":"* `p/CONTACT NUMBER`: Numeric, _exactly_ 8 characters.","lastModifiedDate":"2023-11-03"},{"lineNumber":215,"author":{"gitId":"brendanneojw"},"content":"* `e/EMAIL`: Alphanumeric and/or special characters, no white spaces allowed, standard email format.","lastModifiedDate":"2023-11-03"},{"lineNumber":216,"author":{"gitId":"KumChaiYin"},"content":"* `a/ADDRESS`: Alphabets and/or special characters, white spaces allowed.","lastModifiedDate":"2023-11-03"},{"lineNumber":217,"author":{"gitId":"brendanneojw"},"content":"* `t/TAG`: Alphanumeric, no white spaces allowed.","lastModifiedDate":"2023-11-13"},{"lineNumber":218,"author":{"gitId":"cyaoxuan"},"content":"* `l/LICENCE PLATE`: Alphanumeric, _up to_ 8 characters.","lastModifiedDate":"2023-11-12"},{"lineNumber":219,"author":{"gitId":"brendanneojw"},"content":"* `c/COMPANY`: Alphanumeric and/or special characters, white spaces allowed.","lastModifiedDate":"2023-11-13"},{"lineNumber":220,"author":{"gitId":"suryanshkushwaha"},"content":"* `pn/POLICY NUMBER`: Alphanumeric, _up to_ 8 characters.","lastModifiedDate":"2023-11-09"},{"lineNumber":221,"author":{"gitId":"suryanshkushwaha"},"content":"* `pi/POLICY ISSUE DATE` and `pe/POLICY EXPIRY DATE`: Date in the format dd-mm-yyyy.","lastModifiedDate":"2023-10-02"},{"lineNumber":222,"author":{"gitId":"suryanshkushwaha"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":223,"author":{"gitId":"suryanshkushwaha"},"content":"Expected output upon success: \u003cbr\u003e","lastModifiedDate":"2023-11-03"},{"lineNumber":224,"author":{"gitId":"suryanshkushwaha"},"content":"![EditSuccess](images/EditSuccess.png)","lastModifiedDate":"2023-11-03"},{"lineNumber":225,"author":{"gitId":"suryanshkushwaha"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":226,"author":{"gitId":"suryanshkushwaha"},"content":"Expected output upon failure:","lastModifiedDate":"2023-10-02"},{"lineNumber":227,"author":{"gitId":"brendanneojw"},"content":"* Invalid command format or no specified `INDEX` or negative `INDEX`:\u003cbr\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":228,"author":{"gitId":"suryanshkushwaha"},"content":"```","lastModifiedDate":"2023-11-03"},{"lineNumber":229,"author":{"gitId":"suryanshkushwaha"},"content":"Invalid command format! ","lastModifiedDate":"2023-11-03"},{"lineNumber":230,"author":{"gitId":"suryanshkushwaha"},"content":"edit: Edits the details of the person identified by the index number used in the displayed person list. Existing values will be overwritten by the input values.","lastModifiedDate":"2023-11-03"},{"lineNumber":231,"author":{"gitId":"cyaoxuan"},"content":"Parameters: INDEX (must be a positive integer) [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/TAG]... [i/NRIC] [l/LICENCE_PLATE] [c/COMPANY] [pn/POLICY_NUMBER] [pi/POLICY_ISSUE_DATE] [pe/POLICY_EXPIRY_DATE] Example: edit 1 p/91234567 e/johndoe@example.com","lastModifiedDate":"2023-11-13"},{"lineNumber":232,"author":{"gitId":"suryanshkushwaha"},"content":"```","lastModifiedDate":"2023-11-03"},{"lineNumber":233,"author":{"gitId":"brendanneojw"},"content":"* No field provided:\u003cbr\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":234,"author":{"gitId":"cyaoxuan"},"content":"```","lastModifiedDate":"2023-11-12"},{"lineNumber":235,"author":{"gitId":"cyaoxuan"},"content":"At least one field to edit must be provided. ","lastModifiedDate":"2023-11-12"},{"lineNumber":236,"author":{"gitId":"cyaoxuan"},"content":"```","lastModifiedDate":"2023-11-12"},{"lineNumber":237,"author":{"gitId":"cyaoxuan"},"content":"* Editing a client such that all fields match with an existing client:","lastModifiedDate":"2023-11-15"},{"lineNumber":238,"author":{"gitId":"brendanneojw"},"content":"```","lastModifiedDate":"2023-11-13"},{"lineNumber":239,"author":{"gitId":"brendanneojw"},"content":"Error: This person already exists in the client list.","lastModifiedDate":"2023-11-13"},{"lineNumber":240,"author":{"gitId":"brendanneojw"},"content":"```","lastModifiedDate":"2023-11-13"},{"lineNumber":241,"author":{"gitId":"suryanshkushwaha"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":242,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-11-15"},{"lineNumber":243,"author":{"gitId":"brendanneojw"},"content":"### Locating clients by fields : `find`","lastModifiedDate":"2023-11-01"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"cyaoxuan"},"content":"Finds client(s) based on conditions you specify.","lastModifiedDate":"2023-11-15"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"cyaoxuan"},"content":"Format: `find [n/NAME] [i/NRIC] [p/CONTACT NUMBER] [l/LICENCE PLATE] [e/EMAIL] [t/TAG]","lastModifiedDate":"2023-11-12"},{"lineNumber":248,"author":{"gitId":"brendanneojw"},"content":"[c/COMPANY] [pn/POLICY NUMBER] [pi/POLICY ISSUE DATE] [pe/POLICY EXPIRY DATE]`","lastModifiedDate":"2023-11-01"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"brendanneojw"},"content":"* The search is case-insensitive e.g. `hans` will match `Hans`.","lastModifiedDate":"2023-11-13"},{"lineNumber":251,"author":{"gitId":"brendanneojw"},"content":"* **At least one** of the fields must be present.","lastModifiedDate":"2023-11-13"},{"lineNumber":252,"author":{"gitId":"brendanneojw"},"content":"* Value given with white spaces for each field is treated as 1 value e.g. `find n/Hans Bo` will return clients with ","lastModifiedDate":"2023-11-01"},{"lineNumber":253,"author":{"gitId":"brendanneojw"},"content":"names `Hans Bo` in it.","lastModifiedDate":"2023-11-13"},{"lineNumber":254,"author":{"gitId":"brendanneojw"},"content":"* Clients that partially matches with the field given will be returned e.g. `find l/SLA` will return all clients whose","lastModifiedDate":"2023-11-01"},{"lineNumber":255,"author":{"gitId":"brendanneojw"},"content":"licence plates contains `SLA`.","lastModifiedDate":"2023-11-13"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"brendanneojw"},"content":"* `find n/mary` returns all clients that has the name `Mary` such as `Mary Lim`, `Mary Koh`, `Mary White`.","lastModifiedDate":"2023-11-13"},{"lineNumber":259,"author":{"gitId":"brendanneojw"},"content":"* `find n/Hans Bo` returns all clients that has the name `Hans Bo` but not those with only `Hans` or `Bo` in it.","lastModifiedDate":"2023-11-13"},{"lineNumber":260,"author":{"gitId":"brendanneojw"},"content":"* `find n/john pn/AB12345J` returns all clients whose name contains `John` with policy number `AB12345J`.","lastModifiedDate":"2023-11-13"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":262,"author":{"gitId":"cyaoxuan"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2023-11-15"},{"lineNumber":263,"author":{"gitId":"cyaoxuan"},"content":"**:information_source: Format of values do not matter:**","lastModifiedDate":"2023-11-15"},{"lineNumber":264,"author":{"gitId":"cyaoxuan"},"content":"Unlike previous commands, the fields do not have to be in a specific format.","lastModifiedDate":"2023-11-15"},{"lineNumber":265,"author":{"gitId":"cyaoxuan"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-11-15"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":267,"author":{"gitId":"brendanneojw"},"content":"Expected output upon success:\u003cbr\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":268,"author":{"gitId":"brendanneojw"},"content":"![FindSuccess](images/FindSuccess.png)","lastModifiedDate":"2023-11-01"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":270,"author":{"gitId":"brendanneojw"},"content":"Expected output upon failure:","lastModifiedDate":"2023-10-02"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":272,"author":{"gitId":"KumChaiYin"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-11-14"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":274,"author":{"gitId":"brendanneojw"},"content":"* No field or invalid arguments given:","lastModifiedDate":"2023-11-02"},{"lineNumber":275,"author":{"gitId":"brendanneojw"},"content":"```","lastModifiedDate":"2023-11-02"},{"lineNumber":276,"author":{"gitId":"brendanneojw"},"content":"Invalid command format!  ","lastModifiedDate":"2023-11-02"},{"lineNumber":277,"author":{"gitId":"brendanneojw"},"content":"find: Finds all persons whose names contain any of the specified fields (case-insensitive for values) and displays them as a list with index numbers.  ","lastModifiedDate":"2023-11-01"},{"lineNumber":278,"author":{"gitId":"brendanneojw"},"content":"Parameters: [n/NAME] [l/LICENCE PLATE] [n/NAME] [i/NRIC] [p/CONTACT NUMBER] [l/LICENCE PLATE] [e/EMAIL] [c/COMPANY] [pn/POLICY NUMBER] [pi/POLICY ISSUE DATE] [pe/POLICY EXPIRY DATE]  ","lastModifiedDate":"2023-11-02"},{"lineNumber":279,"author":{"gitId":"brendanneojw"},"content":"At least one parameter must be present.  ","lastModifiedDate":"2023-11-01"},{"lineNumber":280,"author":{"gitId":"brendanneojw"},"content":"Example: find n/Alice Rodriguez","lastModifiedDate":"2023-11-02"},{"lineNumber":281,"author":{"gitId":"brendanneojw"},"content":"```","lastModifiedDate":"2023-11-02"},{"lineNumber":282,"author":{"gitId":"brendanneojw"},"content":"* Field prefix given but no value e.g. `n/ c/` :\u003cbr\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":283,"author":{"gitId":"cyaoxuan"},"content":"```","lastModifiedDate":"2023-11-12"},{"lineNumber":284,"author":{"gitId":"cyaoxuan"},"content":"Error: No value detected for the following field(s): n/ c/","lastModifiedDate":"2023-11-12"},{"lineNumber":285,"author":{"gitId":"cyaoxuan"},"content":"```","lastModifiedDate":"2023-11-12"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"brendanneojw"},"content":"### Deleting a client : `delete`","lastModifiedDate":"2023-11-01"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"cyaoxuan"},"content":"Deletes the specified client from your client list.","lastModifiedDate":"2023-11-15"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"-"},"content":"Format: `delete INDEX`","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"brendanneojw"},"content":"* Deletes the client at the specified `INDEX`.","lastModifiedDate":"2023-11-02"},{"lineNumber":294,"author":{"gitId":"brendanneojw"},"content":"* The index refers to the index number shown in the displayed list of clients and is a compulsory field.","lastModifiedDate":"2023-11-01"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":296,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"brendanneojw"},"content":"* `list` followed by `delete 2` deletes the 2nd client in the data file.","lastModifiedDate":"2023-11-13"},{"lineNumber":298,"author":{"gitId":"brendanneojw"},"content":"* `find n/Betsy` followed by `delete 1` deletes the 1st client in the results of the `find` command.","lastModifiedDate":"2023-11-02"},{"lineNumber":299,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":300,"author":{"gitId":"RSXIX"},"content":"Acceptable values for each parameter:","lastModifiedDate":"2023-10-03"},{"lineNumber":301,"author":{"gitId":"RSXIX"},"content":"* `INDEX` : It must be a **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2023-10-03"},{"lineNumber":302,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":303,"author":{"gitId":"RSXIX"},"content":"Expected output upon success :","lastModifiedDate":"2023-11-03"},{"lineNumber":304,"author":{"gitId":"RSXIX"},"content":"![DeleteSuccess](images/DeleteSuccess.png)","lastModifiedDate":"2023-11-03"},{"lineNumber":305,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":306,"author":{"gitId":"RSXIX"},"content":"Expected output upon failure:","lastModifiedDate":"2023-10-03"},{"lineNumber":307,"author":{"gitId":"brendanneojw"},"content":"* Profile at the specified `INDEX` cannot be found:\u003cbr\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":308,"author":{"gitId":"cyaoxuan"},"content":"```","lastModifiedDate":"2023-11-12"},{"lineNumber":309,"author":{"gitId":"cyaoxuan"},"content":"Error: Invalid Index","lastModifiedDate":"2023-11-12"},{"lineNumber":310,"author":{"gitId":"cyaoxuan"},"content":"```","lastModifiedDate":"2023-11-12"},{"lineNumber":311,"author":{"gitId":"brendanneojw"},"content":"* Missing `INDEX` parameter:\u003cbr\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":312,"author":{"gitId":"cyaoxuan"},"content":"```","lastModifiedDate":"2023-11-12"},{"lineNumber":313,"author":{"gitId":"cyaoxuan"},"content":"Error: Missing Index","lastModifiedDate":"2023-11-12"},{"lineNumber":314,"author":{"gitId":"cyaoxuan"},"content":"```","lastModifiedDate":"2023-11-12"},{"lineNumber":315,"author":{"gitId":"brendanneojw"},"content":"* Incorrect `INDEX` parameter:\u003cbr\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":316,"author":{"gitId":"cyaoxuan"},"content":"```","lastModifiedDate":"2023-11-12"},{"lineNumber":317,"author":{"gitId":"cyaoxuan"},"content":"Error: The parameter is not of the type positive integer","lastModifiedDate":"2023-11-12"},{"lineNumber":318,"author":{"gitId":"cyaoxuan"},"content":"```","lastModifiedDate":"2023-11-12"},{"lineNumber":319,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":320,"author":{"gitId":"cyaoxuan"},"content":"### Batch delete clients: `batchdelete`","lastModifiedDate":"2023-11-15"},{"lineNumber":321,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-11-15"},{"lineNumber":322,"author":{"gitId":"cyaoxuan"},"content":"Batch delete clients based on a specific condition.","lastModifiedDate":"2023-11-15"},{"lineNumber":323,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-11-15"},{"lineNumber":324,"author":{"gitId":"cyaoxuan"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-success\"\u003e","lastModifiedDate":"2023-11-15"},{"lineNumber":325,"author":{"gitId":"cyaoxuan"},"content":"**:bulb: Usage tip:**","lastModifiedDate":"2023-11-15"},{"lineNumber":326,"author":{"gitId":"cyaoxuan"},"content":"Use `batchdelete` to quickly delete clients whose policies have expired, or for companies you are no longer working with. ","lastModifiedDate":"2023-11-15"},{"lineNumber":327,"author":{"gitId":"cyaoxuan"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-11-15"},{"lineNumber":328,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-11-15"},{"lineNumber":329,"author":{"gitId":"cyaoxuan"},"content":"Format: `batchdelete [c/COMPANY] [dm/DELETE MONTH]`","lastModifiedDate":"2023-11-15"},{"lineNumber":330,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-11-15"},{"lineNumber":331,"author":{"gitId":"cyaoxuan"},"content":"* Batch delete specific clients in the data file.","lastModifiedDate":"2023-11-15"},{"lineNumber":332,"author":{"gitId":"cyaoxuan"},"content":"* **Only one** of the optional fields must be provided.","lastModifiedDate":"2023-11-15"},{"lineNumber":333,"author":{"gitId":"cyaoxuan"},"content":"* Clients that partially matches with the field given will be deleted e.g. `batchdelete c/NTUC` will delete all clients","lastModifiedDate":"2023-11-15"},{"lineNumber":334,"author":{"gitId":"cyaoxuan"},"content":"  who buy policy from companies `NTUC Company` and `NTUC Insurance`.","lastModifiedDate":"2023-11-15"},{"lineNumber":335,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-15"},{"lineNumber":336,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2023-11-15"},{"lineNumber":337,"author":{"gitId":"cyaoxuan"},"content":"* `batchdelete dm/07-2020` batch delete clients whose policy expiry date is in July 2020.","lastModifiedDate":"2023-11-15"},{"lineNumber":338,"author":{"gitId":"cyaoxuan"},"content":"* `batchdelete c/DEF Insurance` batch delete clients who buy policy from the company DEF Insurance.","lastModifiedDate":"2023-11-15"},{"lineNumber":339,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-11-15"},{"lineNumber":340,"author":{"gitId":"cyaoxuan"},"content":"Acceptable values for each parameter:","lastModifiedDate":"2023-11-15"},{"lineNumber":341,"author":{"gitId":"cyaoxuan"},"content":"* `c/COMPANY`: Alphanumeric and/or special characters, white spaces allowed.","lastModifiedDate":"2023-11-15"},{"lineNumber":342,"author":{"gitId":"cyaoxuan"},"content":"* `dm/DELETE MONTH`: Month and year in the format mm-yyyy.","lastModifiedDate":"2023-11-15"},{"lineNumber":343,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-11-15"},{"lineNumber":344,"author":{"gitId":"cyaoxuan"},"content":"Expected output upon success: \u003cbr\u003e","lastModifiedDate":"2023-11-15"},{"lineNumber":345,"author":{"gitId":"cyaoxuan"},"content":"![BatchDeleteSuccess](images/BatchDeleteSuccess.png)","lastModifiedDate":"2023-11-15"},{"lineNumber":346,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-11-15"},{"lineNumber":347,"author":{"gitId":"cyaoxuan"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2023-11-15"},{"lineNumber":348,"author":{"gitId":"cyaoxuan"},"content":"**:information_source: Confirmation message:**","lastModifiedDate":"2023-11-15"},{"lineNumber":349,"author":{"gitId":"cyaoxuan"},"content":"Even if no clients are deleted, InsureIQ will still show a confirmation message to let you know that the `batchdelete` ","lastModifiedDate":"2023-11-15"},{"lineNumber":350,"author":{"gitId":"cyaoxuan"},"content":"command has been successfully processed.","lastModifiedDate":"2023-11-15"},{"lineNumber":351,"author":{"gitId":"cyaoxuan"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-11-15"},{"lineNumber":352,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-11-15"},{"lineNumber":353,"author":{"gitId":"cyaoxuan"},"content":"Expected output upon failure:","lastModifiedDate":"2023-11-15"},{"lineNumber":354,"author":{"gitId":"cyaoxuan"},"content":"* No field provided:\u003cbr\u003e","lastModifiedDate":"2023-11-15"},{"lineNumber":355,"author":{"gitId":"cyaoxuan"},"content":"```","lastModifiedDate":"2023-11-15"},{"lineNumber":356,"author":{"gitId":"cyaoxuan"},"content":"Invalid command format! ","lastModifiedDate":"2023-11-15"},{"lineNumber":357,"author":{"gitId":"cyaoxuan"},"content":"batchdelete: batch delete people whose policy: ","lastModifiedDate":"2023-11-15"},{"lineNumber":358,"author":{"gitId":"cyaoxuan"},"content":"(i) expiry date is in the corresponding month and year OR ","lastModifiedDate":"2023-11-15"},{"lineNumber":359,"author":{"gitId":"cyaoxuan"},"content":"(ii) belongs to a company.","lastModifiedDate":"2023-11-15"},{"lineNumber":360,"author":{"gitId":"cyaoxuan"},"content":"(i) Parameter: dm/MM-yyyy","lastModifiedDate":"2023-11-15"},{"lineNumber":361,"author":{"gitId":"cyaoxuan"},"content":"Example: batchdelete dm/11-2022","lastModifiedDate":"2023-11-15"},{"lineNumber":362,"author":{"gitId":"cyaoxuan"},"content":"(ii) Parameter: c/COMPANY NAME","lastModifiedDate":"2023-11-15"},{"lineNumber":363,"author":{"gitId":"cyaoxuan"},"content":"Example: batchdelete c/Allianz ","lastModifiedDate":"2023-11-15"},{"lineNumber":364,"author":{"gitId":"cyaoxuan"},"content":"```","lastModifiedDate":"2023-11-15"},{"lineNumber":365,"author":{"gitId":"cyaoxuan"},"content":"* Both fields exist:\u003cbr\u003e","lastModifiedDate":"2023-11-15"},{"lineNumber":366,"author":{"gitId":"cyaoxuan"},"content":"```","lastModifiedDate":"2023-11-15"},{"lineNumber":367,"author":{"gitId":"cyaoxuan"},"content":"Error: Please contain only either one field of dm/ or c/.","lastModifiedDate":"2023-11-15"},{"lineNumber":368,"author":{"gitId":"cyaoxuan"},"content":"```","lastModifiedDate":"2023-11-15"},{"lineNumber":369,"author":{"gitId":"cyaoxuan"},"content":"* Incorrect format for delete month:\u003cbr\u003e","lastModifiedDate":"2023-11-15"},{"lineNumber":370,"author":{"gitId":"cyaoxuan"},"content":"```","lastModifiedDate":"2023-11-15"},{"lineNumber":371,"author":{"gitId":"cyaoxuan"},"content":"Delete month should be in the format MM-yyyy","lastModifiedDate":"2023-11-15"},{"lineNumber":372,"author":{"gitId":"cyaoxuan"},"content":"```","lastModifiedDate":"2023-11-15"},{"lineNumber":373,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-11-15"},{"lineNumber":374,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":375,"author":{"gitId":"KumChaiYin"},"content":"### Sorting clients by policy expiry date : `sort`","lastModifiedDate":"2023-11-13"},{"lineNumber":376,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":377,"author":{"gitId":"cyaoxuan"},"content":"Sorts the client list.","lastModifiedDate":"2023-11-15"},{"lineNumber":378,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":379,"author":{"gitId":"RSXIX"},"content":"Format: `sort`","lastModifiedDate":"2023-11-01"},{"lineNumber":380,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":381,"author":{"gitId":"brendanneojw"},"content":"* Sorts the data file from earliest to latest policy expiry date.","lastModifiedDate":"2023-11-13"},{"lineNumber":382,"author":{"gitId":"RSXIX"},"content":"* People in the list with no policy data will be at the end of the sorted list.","lastModifiedDate":"2023-11-01"},{"lineNumber":383,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":384,"author":{"gitId":"RSXIX"},"content":"Examples:","lastModifiedDate":"2023-11-01"},{"lineNumber":385,"author":{"gitId":"RSXIX"},"content":"* `sort` rearranges the displayed list to show which policies are expiring soonest.","lastModifiedDate":"2023-11-01"},{"lineNumber":386,"author":{"gitId":"RSXIX"},"content":"* `find c/Google` followed by `sort` shows the policies expiring soonest in the results of the `find` command.","lastModifiedDate":"2023-11-01"},{"lineNumber":387,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":388,"author":{"gitId":"RSXIX"},"content":"Expected output upon success :","lastModifiedDate":"2023-11-03"},{"lineNumber":389,"author":{"gitId":"RSXIX"},"content":"![SortSuccess](images/SortSuccess.png)","lastModifiedDate":"2023-11-03"},{"lineNumber":390,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":391,"author":{"gitId":"KumChaiYin"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-11-14"},{"lineNumber":392,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":393,"author":{"gitId":"KumChaiYin"},"content":"### Remind user of clients policy expiry date : `remind`","lastModifiedDate":"2023-11-13"},{"lineNumber":394,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":395,"author":{"gitId":"cyaoxuan"},"content":"Reminds you of clients that have approaching policy expiry date within a certain number of days.","lastModifiedDate":"2023-11-15"},{"lineNumber":396,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":397,"author":{"gitId":"brendanneojw"},"content":"Format: `remind NUMBER_OF_DAYS`","lastModifiedDate":"2023-11-01"},{"lineNumber":398,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":399,"author":{"gitId":"brendanneojw"},"content":"* Filters the list based on policy expiry date that is within `NUMBER_OF_DAYS` from current date","lastModifiedDate":"2023-11-01"},{"lineNumber":400,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":401,"author":{"gitId":"brendanneojw"},"content":"Examples:","lastModifiedDate":"2023-11-01"},{"lineNumber":402,"author":{"gitId":"brendanneojw"},"content":"* `remind 30` returns the all clients with policy expiry date within 30 days from current date","lastModifiedDate":"2023-11-01"},{"lineNumber":403,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":404,"author":{"gitId":"brendanneojw"},"content":"Acceptable values for each parameter:","lastModifiedDate":"2023-11-01"},{"lineNumber":405,"author":{"gitId":"brendanneojw"},"content":"* `NUMBER_OF_DAYS` : Numeric, range from _0_ to _7305_","lastModifiedDate":"2023-11-01"},{"lineNumber":406,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":407,"author":{"gitId":"cyaoxuan"},"content":"Expected output upon success (Current date is 12-11-2023):\u003cbr\u003e","lastModifiedDate":"2023-11-12"},{"lineNumber":408,"author":{"gitId":"brendanneojw"},"content":"![RemindSuccess](images/RemindSuccess.png)","lastModifiedDate":"2023-11-01"},{"lineNumber":409,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":410,"author":{"gitId":"brendanneojw"},"content":"Expected output upon failure:","lastModifiedDate":"2023-11-01"},{"lineNumber":411,"author":{"gitId":"brendanneojw"},"content":"* `NUMBER_OF_DAYS` not in range _0_ to _7305_:\u003cbr\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":412,"author":{"gitId":"cyaoxuan"},"content":"```","lastModifiedDate":"2023-11-12"},{"lineNumber":413,"author":{"gitId":"cyaoxuan"},"content":"Error: The value has to be between 0 and 7305 (both inclusive)","lastModifiedDate":"2023-11-12"},{"lineNumber":414,"author":{"gitId":"cyaoxuan"},"content":"```","lastModifiedDate":"2023-11-12"},{"lineNumber":415,"author":{"gitId":"brendanneojw"},"content":"* `NUMBER_OF_DAYS` not numeric:\u003cbr\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":416,"author":{"gitId":"cyaoxuan"},"content":"```","lastModifiedDate":"2023-11-12"},{"lineNumber":417,"author":{"gitId":"cyaoxuan"},"content":"Invalid command format! Error: The value is not a number","lastModifiedDate":"2023-11-12"},{"lineNumber":418,"author":{"gitId":"cyaoxuan"},"content":"```","lastModifiedDate":"2023-11-12"},{"lineNumber":419,"author":{"gitId":"brendanneojw"},"content":"* `NUMBER_OF_DAYS` not given:","lastModifiedDate":"2023-11-02"},{"lineNumber":420,"author":{"gitId":"brendanneojw"},"content":"```","lastModifiedDate":"2023-11-02"},{"lineNumber":421,"author":{"gitId":"brendanneojw"},"content":"Invalid command format!  ","lastModifiedDate":"2023-11-02"},{"lineNumber":422,"author":{"gitId":"brendanneojw"},"content":"remind: Finds all persons whose policy expiry dates is within the specified number of days.  ","lastModifiedDate":"2023-11-01"},{"lineNumber":423,"author":{"gitId":"brendanneojw"},"content":"Parameters: Number of days  ","lastModifiedDate":"2023-11-01"},{"lineNumber":424,"author":{"gitId":"brendanneojw"},"content":"Example: remind 30","lastModifiedDate":"2023-11-02"},{"lineNumber":425,"author":{"gitId":"brendanneojw"},"content":"```","lastModifiedDate":"2023-11-02"},{"lineNumber":426,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":427,"author":{"gitId":"KumChaiYin"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-11-14"},{"lineNumber":428,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":429,"author":{"gitId":"brendanneojw"},"content":"### Adding or removing remark to a client : `remark`","lastModifiedDate":"2023-11-13"},{"lineNumber":430,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":431,"author":{"gitId":"brendanneojw"},"content":"Adds or removes a remark to a client.","lastModifiedDate":"2023-11-13"},{"lineNumber":432,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":433,"author":{"gitId":"brendanneojw"},"content":"Format: `remark INDEX r/[REMARK]`","lastModifiedDate":"2023-11-01"},{"lineNumber":434,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":435,"author":{"gitId":"brendanneojw"},"content":"* `REMARK` is the remark that is going to be attached to the client","lastModifiedDate":"2023-11-01"},{"lineNumber":436,"author":{"gitId":"brendanneojw"},"content":"* `INDEX` refers to the index number shown in the displayed list of clients and is a compulsory field","lastModifiedDate":"2023-11-01"},{"lineNumber":437,"author":{"gitId":"brendanneojw"},"content":"* If `REMARK` is not given, it will remove the remark for the client at `INDEX`","lastModifiedDate":"2023-11-01"},{"lineNumber":438,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":439,"author":{"gitId":"brendanneojw"},"content":"Examples:","lastModifiedDate":"2023-11-01"},{"lineNumber":440,"author":{"gitId":"cyaoxuan"},"content":"* `remark 1 r/Wants cheaper policies!` will attach the comment `Wants cheaper policies!` to the client that is at index `1`","lastModifiedDate":"2023-11-12"},{"lineNumber":441,"author":{"gitId":"brendanneojw"},"content":"* `remark 1` or `remark 1 r/` will remove the comment that is attached to client that is at index `1`","lastModifiedDate":"2023-11-01"},{"lineNumber":442,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":443,"author":{"gitId":"brendanneojw"},"content":"Acceptable values for each parameter:","lastModifiedDate":"2023-11-01"},{"lineNumber":444,"author":{"gitId":"brendanneojw"},"content":"* `INDEX` : It **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2023-11-07"},{"lineNumber":445,"author":{"gitId":"brendanneojw"},"content":"* `REMARK` : Any characters","lastModifiedDate":"2023-11-01"},{"lineNumber":446,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":447,"author":{"gitId":"brendanneojw"},"content":"Expected output upon success:\u003cbr\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":448,"author":{"gitId":"cyaoxuan"},"content":"![RemindSuccess](images/RemarkSuccess.png)","lastModifiedDate":"2023-11-12"},{"lineNumber":449,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":450,"author":{"gitId":"brendanneojw"},"content":"Expected output upon failure:","lastModifiedDate":"2023-11-01"},{"lineNumber":451,"author":{"gitId":"brendanneojw"},"content":"* Invalid `INDEX` parameter or no `INDEX` :\u003cbr\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":452,"author":{"gitId":"brendanneojw"},"content":"```","lastModifiedDate":"2023-11-02"},{"lineNumber":453,"author":{"gitId":"brendanneojw"},"content":"Invalid command format!  ","lastModifiedDate":"2023-11-02"},{"lineNumber":454,"author":{"gitId":"brendanneojw"},"content":"remark: Edits the remark of the person identified by the index number used in the last person listing. Existing remark will be overwritten by the input.","lastModifiedDate":"2023-11-01"},{"lineNumber":455,"author":{"gitId":"brendanneojw"},"content":"Parameters: INDEX (must be a positive integer) r/REMARK","lastModifiedDate":"2023-11-01"},{"lineNumber":456,"author":{"gitId":"brendanneojw"},"content":"Example: remark 1 r/Likes to swim.","lastModifiedDate":"2023-11-02"},{"lineNumber":457,"author":{"gitId":"brendanneojw"},"content":"```","lastModifiedDate":"2023-11-02"},{"lineNumber":458,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":459,"author":{"gitId":"KumChaiYin"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-11-14"},{"lineNumber":460,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":461,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":462,"author":{"gitId":"-"},"content":"### Clearing all entries : `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":463,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":464,"author":{"gitId":"cyaoxuan"},"content":"Clears all entries from your client list.","lastModifiedDate":"2023-11-15"},{"lineNumber":465,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":466,"author":{"gitId":"-"},"content":"Format: `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":467,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":468,"author":{"gitId":"cyaoxuan"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e","lastModifiedDate":"2023-11-15"},{"lineNumber":469,"author":{"gitId":"cyaoxuan"},"content":"**:exclamation: Caution:**","lastModifiedDate":"2023-11-15"},{"lineNumber":470,"author":{"gitId":"cyaoxuan"},"content":"This action is irreversible! You can copy the data file before clearing to have a backup.","lastModifiedDate":"2023-11-15"},{"lineNumber":471,"author":{"gitId":"cyaoxuan"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-11-15"},{"lineNumber":472,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-11-15"},{"lineNumber":473,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":474,"author":{"gitId":"-"},"content":"### Exiting the program : `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":475,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":476,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2020-05-23"},{"lineNumber":477,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":478,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":479,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":480,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":481,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2020-05-23"},{"lineNumber":482,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":483,"author":{"gitId":"cyaoxuan"},"content":"InsureIQ data are saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2023-10-03"},{"lineNumber":484,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":485,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":486,"author":{"gitId":"-"},"content":"### Editing the data file","lastModifiedDate":"2021-02-04"},{"lineNumber":487,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":488,"author":{"gitId":"brendanneojw"},"content":"InsureIQ data are saved automatically as a JSON file `[JAR file location]/data/insureiq.json`. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2023-10-04"},{"lineNumber":489,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":490,"author":{"gitId":"cyaoxuan"},"content":"A sample client entry in the JSON file is as follows. The respective formats are specified in the [`add` feature guide](#adding-a-client--add).","lastModifiedDate":"2023-11-15"},{"lineNumber":491,"author":{"gitId":"cyaoxuan"},"content":"```","lastModifiedDate":"2023-11-15"},{"lineNumber":492,"author":{"gitId":"cyaoxuan"},"content":"{","lastModifiedDate":"2023-11-15"},{"lineNumber":493,"author":{"gitId":"cyaoxuan"},"content":"    \"name\" : \"Alex Yeoh\",","lastModifiedDate":"2023-11-15"},{"lineNumber":494,"author":{"gitId":"cyaoxuan"},"content":"    \"phone\" : \"87438807\",","lastModifiedDate":"2023-11-15"},{"lineNumber":495,"author":{"gitId":"cyaoxuan"},"content":"    \"email\" : \"alexyeoh@gmail.com\",","lastModifiedDate":"2023-11-15"},{"lineNumber":496,"author":{"gitId":"cyaoxuan"},"content":"    \"address\" : \"Blk 30 Geylang Street 29, #06-40\",","lastModifiedDate":"2023-11-15"},{"lineNumber":497,"author":{"gitId":"cyaoxuan"},"content":"    \"tags\" : [ \"friend\" ],","lastModifiedDate":"2023-11-15"},{"lineNumber":498,"author":{"gitId":"cyaoxuan"},"content":"    \"nric\" : \"023A\",","lastModifiedDate":"2023-11-15"},{"lineNumber":499,"author":{"gitId":"cyaoxuan"},"content":"    \"licencePlate\" : \"SNB9538E\",","lastModifiedDate":"2023-11-15"},{"lineNumber":500,"author":{"gitId":"cyaoxuan"},"content":"    \"remark\" : \"Wants cheap policies!\",","lastModifiedDate":"2023-11-15"},{"lineNumber":501,"author":{"gitId":"cyaoxuan"},"content":"    \"company\" : \"NTUC Income\",","lastModifiedDate":"2023-11-15"},{"lineNumber":502,"author":{"gitId":"cyaoxuan"},"content":"    \"policyNumber\" : \"NI11235\",","lastModifiedDate":"2023-11-15"},{"lineNumber":503,"author":{"gitId":"cyaoxuan"},"content":"    \"policyIssueDate\" : \"11-11-2023\",","lastModifiedDate":"2023-11-15"},{"lineNumber":504,"author":{"gitId":"cyaoxuan"},"content":"    \"policyExpiryDate\" : \"11-11-2024\"","lastModifiedDate":"2023-11-15"},{"lineNumber":505,"author":{"gitId":"cyaoxuan"},"content":"}","lastModifiedDate":"2023-11-15"},{"lineNumber":506,"author":{"gitId":"cyaoxuan"},"content":"```","lastModifiedDate":"2023-11-15"},{"lineNumber":507,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-11-15"},{"lineNumber":508,"author":{"gitId":"cyaoxuan"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e","lastModifiedDate":"2023-11-15"},{"lineNumber":509,"author":{"gitId":"cyaoxuan"},"content":"**:exclamation: Caution:** If your changes to the data file makes its format invalid, InsureIQ will discard all data and start with an empty data file at the next run. Hence, it is recommended to take a backup of the file before editing it.","lastModifiedDate":"2023-11-15"},{"lineNumber":510,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":511,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":512,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":513,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":514,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":515,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":516,"author":{"gitId":"KumChaiYin"},"content":"**Q1**: How do I check my Java version?\u003cbr\u003e","lastModifiedDate":"2023-11-15"},{"lineNumber":517,"author":{"gitId":"KumChaiYin"},"content":"**A1**: \u003cbr\u003e","lastModifiedDate":"2023-11-15"},{"lineNumber":518,"author":{"gitId":"KumChaiYin"},"content":"  1. For Window users, open Command Prompt.\u003cbr\u003e","lastModifiedDate":"2023-11-15"},{"lineNumber":519,"author":{"gitId":"KumChaiYin"},"content":"    * For Mac and Linux (Ubuntu) users, open Terminal.","lastModifiedDate":"2023-11-15"},{"lineNumber":520,"author":{"gitId":"KumChaiYin"},"content":"  2. Type `java -version` and press Enter.","lastModifiedDate":"2023-11-15"},{"lineNumber":521,"author":{"gitId":"KumChaiYin"},"content":"  3. If Java is installed, it will display the installed version.","lastModifiedDate":"2023-11-15"},{"lineNumber":522,"author":{"gitId":"KumChaiYin"},"content":"     ![CheckJavaVersion](images/CheckJavaVersion.png)","lastModifiedDate":"2023-11-15"},{"lineNumber":523,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-11-15"},{"lineNumber":524,"author":{"gitId":"KumChaiYin"},"content":"**Q2**: What should I do if Java 11 is not installed in my device?\u003cbr\u003e","lastModifiedDate":"2023-11-15"},{"lineNumber":525,"author":{"gitId":"KumChaiYin"},"content":"**A2**: \u003cbr\u003e","lastModifiedDate":"2023-11-15"},{"lineNumber":526,"author":{"gitId":"KumChaiYin"},"content":"No worries! You can download Java 11 by the instruction below:","lastModifiedDate":"2023-11-15"},{"lineNumber":527,"author":{"gitId":"KumChaiYin"},"content":"  1. If your device has other version of Java, we recommend you to uninstall it by visit the website below: \u003cbr\u003e","lastModifiedDate":"2023-11-15"},{"lineNumber":528,"author":{"gitId":"KumChaiYin"},"content":"    * Windows users: [uninstall Java on Windows](https://www.java.com/en/download/help/uninstall_java.html)\u003cbr\u003e","lastModifiedDate":"2023-11-15"},{"lineNumber":529,"author":{"gitId":"KumChaiYin"},"content":"    * Mac users: [uninstall Java on Mac](https://www.java.com/en/download/help/mac_uninstall_java.html)\u003cbr\u003e","lastModifiedDate":"2023-11-15"},{"lineNumber":530,"author":{"gitId":"KumChaiYin"},"content":"    * Linux users: [uninstall Java on Linux](https://www.java.com/en/download/help/linux_uninstall.html)","lastModifiedDate":"2023-11-15"},{"lineNumber":531,"author":{"gitId":"KumChaiYin"},"content":"  2. Visit [Oracle\u0027s Java SE Downloads Page](https://www.oracle.com/java/technologies/downloads/#java11).","lastModifiedDate":"2023-11-15"},{"lineNumber":532,"author":{"gitId":"KumChaiYin"},"content":"  3. Select the appropriate version for your operating system, click to accept the license agreement.","lastModifiedDate":"2023-11-15"},{"lineNumber":533,"author":{"gitId":"KumChaiYin"},"content":"  4. Download the installer for your operating system.","lastModifiedDate":"2023-11-15"},{"lineNumber":534,"author":{"gitId":"KumChaiYin"},"content":"  5. Run the installer and follow the installation instructions.","lastModifiedDate":"2023-11-15"},{"lineNumber":535,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-11-15"},{"lineNumber":536,"author":{"gitId":"KumChaiYin"},"content":"**Q3**: Can I transfer my InsureIQ data to another Computer?\u003cbr\u003e","lastModifiedDate":"2023-11-15"},{"lineNumber":537,"author":{"gitId":"KumChaiYin"},"content":"**A3**:\u003cbr\u003e","lastModifiedDate":"2023-11-15"},{"lineNumber":538,"author":{"gitId":"KumChaiYin"},"content":"Sure! you can transfer your data to another computer by the following steps below:","lastModifiedDate":"2023-11-15"},{"lineNumber":539,"author":{"gitId":"KumChaiYin"},"content":"1. In the original computer you use InsureIQ, open the InsureIQ home folder, you can see a folder named `data` inside.","lastModifiedDate":"2023-11-15"},{"lineNumber":540,"author":{"gitId":"KumChaiYin"},"content":"   ![Computer1Folder](images/Computer1Folder.png)","lastModifiedDate":"2023-11-15"},{"lineNumber":541,"author":{"gitId":"KumChaiYin"},"content":"2. Clicking this folder, you will see a JSON file named `insureiq`.","lastModifiedDate":"2023-11-15"},{"lineNumber":542,"author":{"gitId":"KumChaiYin"},"content":"   ![Computer1JSONFile](images/Computer1JSONFile.png)","lastModifiedDate":"2023-11-15"},{"lineNumber":543,"author":{"gitId":"KumChaiYin"},"content":"3. After installing InsureIQ in the other computer, open the InsureIQ home folder.","lastModifiedDate":"2023-11-15"},{"lineNumber":544,"author":{"gitId":"KumChaiYin"},"content":"4. If you see a `data` folder, open the folder, overwrite the file inside with the JSON file in step 2.","lastModifiedDate":"2023-11-15"},{"lineNumber":545,"author":{"gitId":"KumChaiYin"},"content":"5. If you don\u0027t see a `data` folder, create the folder, copy the JSON file in step 2 into the folder you created.","lastModifiedDate":"2023-11-15"},{"lineNumber":546,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":547,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":548,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":549,"author":{"gitId":"KumChaiYin"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-11-14"},{"lineNumber":550,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":551,"author":{"gitId":"-"},"content":"## Known issues","lastModifiedDate":"2023-09-08"},{"lineNumber":552,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":553,"author":{"gitId":"-"},"content":"1. **When using multiple screens**, if you move the application to a secondary screen, and later switch to using only the primary screen, the GUI will open off-screen. The remedy is to delete the `preferences.json` file created by the application before running the application again.","lastModifiedDate":"2023-09-08"},{"lineNumber":554,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":555,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-09-08"},{"lineNumber":556,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":557,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":558,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":559,"author":{"gitId":"suryanshkushwaha"},"content":"| Action          | Format, Examples                                                                                                                                                                                                                                                                            |","lastModifiedDate":"2023-10-02"},{"lineNumber":560,"author":{"gitId":"cyaoxuan"},"content":"|-----------------|---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2023-11-12"},{"lineNumber":561,"author":{"gitId":"cyaoxuan"},"content":"| **Add**         | `add n/NAME i/NRIC p/CONTACT NUMBER e/EMAIL a/ADDRESS [t/TAG]... l/LICENCE PLATE [c/COMPANY pn/POLICY NUMBER pi/POLICY ISSUE DATE pe/POLICY EXPIRY DATE]` \u003cbr\u003e e.g., `add n/Irfan Ibrahim i/752X p/92492021 e/irfan@example.com a/Blk 47 Tampines Street 20,#17-35 t/classmates l/SBP8888T` |","lastModifiedDate":"2023-11-12"},{"lineNumber":562,"author":{"gitId":"suryanshkushwaha"},"content":"| **Clear**       | `clear`                                                                                                                                                                                                                                                                                     |","lastModifiedDate":"2023-10-02"},{"lineNumber":563,"author":{"gitId":"suryanshkushwaha"},"content":"| **Delete**      | `delete INDEX`\u003cbr\u003e e.g., `delete 3`                                                                                                                                                                                                                                                         |","lastModifiedDate":"2023-10-02"},{"lineNumber":564,"author":{"gitId":"cyaoxuan"},"content":"| **Edit**        | `edit INDEX [n/NAME] [i/NRIC] [p/CONTACT NUMBER] [e/EMAIL] [a/ADDRESS] [t/TAG]... [c/COMPANY] [l/LICENCE PLATE] [pn/POLICY NUMBER] [pi/POLICY ISSUE DATE] [pe/POLICY EXPIRY DATE]`\u003cbr\u003e e.g.,`edit 2 n/Bernice Yeo p/88881111`                                                               |","lastModifiedDate":"2023-11-12"},{"lineNumber":565,"author":{"gitId":"cyaoxuan"},"content":"| **Exit**        | `exit`                                                                                                                                                                                                                                                                                      |","lastModifiedDate":"2023-11-12"},{"lineNumber":566,"author":{"gitId":"cyaoxuan"},"content":"| **Find**        | `find [n/NAME] [i/NRIC] [p/CONTACT NUMBER] [l/LICENCE PLATE] [e/EMAIL] [t/TAG] [c/COMPANY] [pn/POLICY NUMBER] [pi/POLICY ISSUE DATE] [pe/POLICY EXPIRY DATE]`\u003cbr\u003e e.g. `find n/John pn/AB12345J`                                                                                            |","lastModifiedDate":"2023-11-12"},{"lineNumber":567,"author":{"gitId":"suryanshkushwaha"},"content":"| **List**        | `list`                                                                                                                                                                                                                                                                                      |","lastModifiedDate":"2023-10-02"},{"lineNumber":568,"author":{"gitId":"suryanshkushwaha"},"content":"| **Help**        | `help`                                                                                                                                                                                                                                                                                      |","lastModifiedDate":"2023-10-02"},{"lineNumber":569,"author":{"gitId":"RSXIX"},"content":"| **Sort**        | `sort`                                                                                                                                                                                                                                                                                      |","lastModifiedDate":"2023-11-01"},{"lineNumber":570,"author":{"gitId":"brendanneojw"},"content":"| **Remind**      | `remind NUMBER_OF_DAYS`\u003cbr\u003e e.g. `remind 30`                                                                                                                                                                                                                                                | ","lastModifiedDate":"2023-11-01"},{"lineNumber":571,"author":{"gitId":"brendanneojw"},"content":"| **Remark**      | `remark INDEX r/[REMARK]`\u003cbr\u003e e.g. `remark 1 r/Likes to swim`                                                                                                                                                                                                                               |","lastModifiedDate":"2023-11-01"},{"lineNumber":572,"author":{"gitId":"KumChaiYin"},"content":" | **BatchDelete** | `batchdelete [c/COMPANY] [dm/DELETE MONTH]` \u003cbr\u003e e.g. `batchdelete c/DEF Insurance`                                                                                                                                                                                                         |","lastModifiedDate":"2023-11-03"},{"lineNumber":573,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-11-15"},{"lineNumber":574,"author":{"gitId":"KumChaiYin"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-11-15"},{"lineNumber":575,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-11-15"},{"lineNumber":576,"author":{"gitId":"cyaoxuan"},"content":"## Appendix: UG workload distribution","lastModifiedDate":"2023-11-15"},{"lineNumber":577,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-11-15"},{"lineNumber":578,"author":{"gitId":"KumChaiYin"},"content":"| Full Name of Team Member | Agreed allocated sections, duties, roles                                 | Changes if any, record date and reasons for changes | Actual contribution to the UG                                            |","lastModifiedDate":"2023-11-15"},{"lineNumber":579,"author":{"gitId":"KumChaiYin"},"content":"|--------------------------|--------------------------------------------------------------------------|-----------------------------------------------------|--------------------------------------------------------------------------|","lastModifiedDate":"2023-11-15"},{"lineNumber":580,"author":{"gitId":"KumChaiYin"},"content":"| Brendan Neo Jia Wei      | Features `find` and `remind`, standardise image size of screenshots      | No change                                           | Features `find` and `remind`, standardise image size of screenshots      |","lastModifiedDate":"2023-11-15"},{"lineNumber":581,"author":{"gitId":"cyaoxuan"},"content":"| Chua Yao Xuan            | Feature `remark`, rephrase UG to be user friendly                        | No change                                           | Feature `remark`, rephrase UG to be user friendly                        |","lastModifiedDate":"2023-11-15"},{"lineNumber":582,"author":{"gitId":"KumChaiYin"},"content":"| Kum Chai Yin             | Features `add` and `batchdelete`, update section FAQ, create UG PDF file | No change                                           | Features `add` and `batchdelete`, update section FAQ, create UG PDF file |","lastModifiedDate":"2023-11-15"},{"lineNumber":583,"author":{"gitId":"KumChaiYin"},"content":"| Rohan Sapra              | Features `delete` and `sort`                                             | No change                                           | Features `delete` and `sort`                                             |","lastModifiedDate":"2023-11-15"},{"lineNumber":584,"author":{"gitId":"KumChaiYin"},"content":"| Suryansh Kushwaha        | Feature `edit`                                                           | No change                                           | Feature `edit`                                                           |","lastModifiedDate":"2023-11-15"}],"authorContributionMap":{"brendanneojw":123,"suryanshkushwaha":38,"RSXIX":22,"KumChaiYin":78,"-":133,"cyaoxuan":190}},{"path":"docs/_sass/minima/_base.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"html {","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  font-size: $base-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Reset some basic elements","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"body, h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"p, blockquote, pre, hr,","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"dl, dd, ol, ul, figure {","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  margin: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  padding: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Basic styling","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"body {","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  font: $base-font-weight #{$base-font-size}/#{$base-line-height} $base-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  background-color: $background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  -webkit-text-size-adjust: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  -webkit-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     -moz-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"       -o-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  font-kerning: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  display: flex;","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  min-height: 100vh;","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  flex-direction: column;","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  overflow-wrap: break-word;","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":" * Set `margin-bottom` to maintain vertical rhythm","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"p, blockquote, pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"ul, ol, dl, figure,","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"%vertical-rhythm {","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"hr {","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  margin-top: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":" * `main` element","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"main {","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  display: block; /* Default value of `display` of `main` element is \u0027inline\u0027 in IE 11. */","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":" * Images","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"img {","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  max-width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  vertical-align: middle;","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":" * Figures","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"figure \u003e img {","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"figcaption {","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  font-size: $small-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":" * Lists","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"ul, ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  margin-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"li {","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  \u003e ul,","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"  \u003e ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":" * Headings","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6 {","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  font-weight: $base-font-weight;","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":" * Links","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"a {","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"  color: $link-base-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  \u0026:visited {","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    color: $link-visited-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"  \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"  .social-media-list \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    .username {","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"      text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":" * Blockquotes","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"blockquote {","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"  color: $brand-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  border-left: 4px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"  @include relative-font-size(1.125);","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"  font-style: italic;","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"  \u003e :last-child {","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"  i, em {","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    font-style: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * Code formatting","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"  font-family: $code-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"  font-size: 0.9375em;","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"  border: 1px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"  background-color: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"  padding: 1px 5px;","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"pre {","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"  padding: 8px 12px;","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"  overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"  \u003e code {","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    border: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    padding-right: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    padding-left: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":".highlight {","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"  background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"  @extend %vertical-rhythm;","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"  .highlighter-rouge \u0026 {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":" * Wrapper","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":".wrapper {","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"  max-width: calc(#{$content-width} - (#{$spacing-unit}));","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"  margin-right: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"  margin-left: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"  padding-right: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"  @extend %clearfix;","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"  @media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    max-width: calc(#{$content-width} - (#{$spacing-unit} * 2));","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    padding-right: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    padding-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":" * Clearfix","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"%clearfix:after {","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"  content: \"\";","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"  display: table;","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"  clear: both;","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":" * Icons","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":".orange {","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  color: #f66a0a;","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":".grey {","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"  color: #828282;","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":" * Tables","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"table {","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"  text-align: $table-text-align;","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"  color: $table-text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"  border-collapse: collapse;","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"  tr {","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    \u0026:nth-child(even) {","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"      background-color: $table-zebra-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"  th, td {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    padding: ($spacing-unit / 3) ($spacing-unit / 2);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"  th {","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    background-color: $table-header-bg-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    border: 1px solid $table-header-border;","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"  td {","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"  @include media-query($on-laptop) {","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -webkit-overflow-scrolling: touch;","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            -ms-overflow-style: -ms-autohiding-scrollbar;","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-11"},{"lineNumber":274,"author":{"gitId":"-"},"content":"@media print {","lastModifiedDate":"2021-01-12"},{"lineNumber":275,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-11"},{"lineNumber":276,"author":{"gitId":"-"},"content":"  * Prevents page break from cutting through content when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":277,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-11"},{"lineNumber":278,"author":{"gitId":"-"},"content":"  body {","lastModifiedDate":"2021-01-11"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2021-01-11"},{"lineNumber":280,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":281,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-12"},{"lineNumber":282,"author":{"gitId":"-"},"content":"  * Replaces the top navigation menu with the project name when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":283,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-12"},{"lineNumber":284,"author":{"gitId":"-"},"content":"  .site-header .wrapper {","lastModifiedDate":"2021-01-12"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    display: none;","lastModifiedDate":"2021-01-12"},{"lineNumber":286,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":287,"author":{"gitId":"-"},"content":"  .site-header {","lastModifiedDate":"2021-01-12"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    text-align: center;","lastModifiedDate":"2021-01-12"},{"lineNumber":289,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":290,"author":{"gitId":"-"},"content":"  .site-header:before {","lastModifiedDate":"2021-01-12"},{"lineNumber":291,"author":{"gitId":"brendanneojw"},"content":"    content: \"InsureIQ\";","lastModifiedDate":"2023-11-13"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    font-size: 32px;","lastModifiedDate":"2021-01-12"},{"lineNumber":293,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-01-12"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-12"}],"authorContributionMap":{"brendanneojw":1,"-":294}},{"path":"docs/assets/css/style.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"# Only the main Sass file needs front matter (the dashes are enough)","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"@import","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"  \"minima/skins/{{ site.minima.skin | default: \u0027classic\u0027 }}\",","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"  \"minima/initialize\";","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-01"},{"lineNumber":9,"author":{"gitId":"-"},"content":".icon {","lastModifiedDate":"2020-08-01"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    height: 21px;","lastModifiedDate":"2020-08-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    width: 21px","lastModifiedDate":"2020-08-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-01"},{"lineNumber":13,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":14,"author":{"gitId":"cyaoxuan"},"content":"pre {","lastModifiedDate":"2023-11-12"},{"lineNumber":15,"author":{"gitId":"cyaoxuan"},"content":"    white-space: pre-wrap;","lastModifiedDate":"2023-11-12"},{"lineNumber":16,"author":{"gitId":"cyaoxuan"},"content":"}","lastModifiedDate":"2023-11-12"}],"authorContributionMap":{"-":12,"cyaoxuan":4}},{"path":"docs/diagrams/BatchDeleteSequenceDiagram1.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"KumChaiYin"},"content":"@startuml","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"KumChaiYin"},"content":"!include style.puml","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"KumChaiYin"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"KumChaiYin"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"KumChaiYin"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"KumChaiYin"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"KumChaiYin"},"content":"participant \"bp:BatchDeleteCommandParser\" as BatchDeleteCommandParser LOGIC_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"KumChaiYin"},"content":"participant \"deleteMonth:DeleteMonth\" as DeleteMonth LOGIC_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"KumChaiYin"},"content":"participant \"b:BatchDeleteCommand\" as BatchDeleteCommand LOGIC_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"KumChaiYin"},"content":"end box","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"brendanneojw"},"content":"[-\u003e LogicManager : execute(batchdelete dm/09-2022)","lastModifiedDate":"2023-10-27"},{"lineNumber":14,"author":{"gitId":"KumChaiYin"},"content":"activate LogicManager","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"KumChaiYin"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"batchdelete dm/09-2022\")","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"KumChaiYin"},"content":"activate AddressBookParser","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"KumChaiYin"},"content":"create BatchDeleteCommandParser","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"KumChaiYin"},"content":"AddressBookParser -\u003e BatchDeleteCommandParser","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"KumChaiYin"},"content":"activate BatchDeleteCommandParser","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"KumChaiYin"},"content":"BatchDeleteCommandParser --\u003e AddressBookParser","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"KumChaiYin"},"content":"deactivate BatchDeleteCommandParser","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":25,"author":{"gitId":"KumChaiYin"},"content":"AddressBookParser -\u003e BatchDeleteCommandParser : parse(\"batchdelete dm/09-2022\")","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"KumChaiYin"},"content":"activate BatchDeleteCommandParser","lastModifiedDate":"2023-10-26"},{"lineNumber":27,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":28,"author":{"gitId":"KumChaiYin"},"content":"create DeleteMonth","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"KumChaiYin"},"content":"BatchDeleteCommandParser -\u003e DeleteMonth","lastModifiedDate":"2023-10-26"},{"lineNumber":30,"author":{"gitId":"KumChaiYin"},"content":"activate DeleteMonth","lastModifiedDate":"2023-10-26"},{"lineNumber":31,"author":{"gitId":"KumChaiYin"},"content":"DeleteMonth --\u003e BatchDeleteCommandParser : deleteMonth","lastModifiedDate":"2023-10-26"},{"lineNumber":32,"author":{"gitId":"KumChaiYin"},"content":"deactivate DeleteMonth","lastModifiedDate":"2023-10-26"},{"lineNumber":33,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":34,"author":{"gitId":"KumChaiYin"},"content":"create BatchDeleteCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":35,"author":{"gitId":"KumChaiYin"},"content":"BatchDeleteCommandParser -\u003e BatchDeleteCommand : BatchDeleteCommand(deleteMonth, null)","lastModifiedDate":"2023-11-14"},{"lineNumber":36,"author":{"gitId":"KumChaiYin"},"content":"activate BatchDeleteCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":37,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":38,"author":{"gitId":"KumChaiYin"},"content":"BatchDeleteCommand --\u003e BatchDeleteCommandParser : b","lastModifiedDate":"2023-10-26"},{"lineNumber":39,"author":{"gitId":"KumChaiYin"},"content":"deactivate BatchDeleteCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":40,"author":{"gitId":"KumChaiYin"},"content":"BatchDeleteCommandParser --\u003e AddressBookParser : b","lastModifiedDate":"2023-10-26"},{"lineNumber":41,"author":{"gitId":"KumChaiYin"},"content":"deactivate BatchDeleteCommandParser","lastModifiedDate":"2023-10-26"},{"lineNumber":42,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":43,"author":{"gitId":"KumChaiYin"},"content":"AddressBookParser --\u003e LogicManager : b","lastModifiedDate":"2023-10-26"},{"lineNumber":44,"author":{"gitId":"KumChaiYin"},"content":"deactivate AddressBookParser","lastModifiedDate":"2023-10-26"},{"lineNumber":45,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":46,"author":{"gitId":"KumChaiYin"},"content":"destroy BatchDeleteCommandParser","lastModifiedDate":"2023-10-26"},{"lineNumber":47,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":48,"author":{"gitId":"KumChaiYin"},"content":"BatchDeleteCommand -[hidden]-\u003e LogicManager : empty row","lastModifiedDate":"2023-10-26"},{"lineNumber":49,"author":{"gitId":"KumChaiYin"},"content":"ref over LogicManager, BatchDeleteCommand : execute BatchDeleteCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":50,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":51,"author":{"gitId":"KumChaiYin"},"content":"BatchDeleteCommand -[hidden]-\u003e LogicManager : empty row","lastModifiedDate":"2023-10-26"},{"lineNumber":52,"author":{"gitId":"KumChaiYin"},"content":"destroy BatchDeleteCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":53,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":54,"author":{"gitId":"KumChaiYin"},"content":"[\u003c--LogicManager","lastModifiedDate":"2023-10-26"},{"lineNumber":55,"author":{"gitId":"KumChaiYin"},"content":"deactivate LogicManager","lastModifiedDate":"2023-10-26"},{"lineNumber":56,"author":{"gitId":"KumChaiYin"},"content":"@enduml","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"brendanneojw":1,"KumChaiYin":55}},{"path":"docs/diagrams/BatchDeleteSequenceDiagram2.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"KumChaiYin"},"content":"@startuml","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"KumChaiYin"},"content":"mainframe **sd** execute BatchDeleteCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"KumChaiYin"},"content":"!include style.puml","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"KumChaiYin"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"KumChaiYin"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"KumChaiYin"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"KumChaiYin"},"content":"participant \"b:BatchDeleteCommand\" as BatchDeleteCommand LOGIC_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"KumChaiYin"},"content":"participant \"p:PolicyExpiryInDeleteMonthPredicate\" as PolicyExpiryInDeleteMonthPredicate LOGIC_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"KumChaiYin"},"content":"end box","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"KumChaiYin"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"KumChaiYin"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"KumChaiYin"},"content":"participant \":AddressBook\" as AddressBook MODEL_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"KumChaiYin"},"content":"end box","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"KumChaiYin"},"content":"LogicManager -\u003e BatchDeleteCommand : execute()","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"KumChaiYin"},"content":"activate BatchDeleteCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"KumChaiYin"},"content":"create PolicyExpiryInDeleteMonthPredicate","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"KumChaiYin"},"content":"BatchDeleteCommand -\u003e PolicyExpiryInDeleteMonthPredicate : PolicyExpiryInDeleteMonthPredicate(month)","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"KumChaiYin"},"content":"activate PolicyExpiryInDeleteMonthPredicate","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"KumChaiYin"},"content":"PolicyExpiryInDeleteMonthPredicate --\u003e BatchDeleteCommand : p","lastModifiedDate":"2023-10-26"},{"lineNumber":25,"author":{"gitId":"KumChaiYin"},"content":"deactivate PolicyExpiryInDeleteMonthPredicate","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":27,"author":{"gitId":"KumChaiYin"},"content":"BatchDeleteCommand -\u003e Model : batchDeleteWithPredicate(p)","lastModifiedDate":"2023-10-26"},{"lineNumber":28,"author":{"gitId":"KumChaiYin"},"content":"activate Model","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":30,"author":{"gitId":"KumChaiYin"},"content":"Model -\u003e Model : updateFilteredPersonList()","lastModifiedDate":"2023-10-26"},{"lineNumber":31,"author":{"gitId":"KumChaiYin"},"content":"Model -\u003e Model : updateFilteredPersonList(predicate)","lastModifiedDate":"2023-10-26"},{"lineNumber":32,"author":{"gitId":"KumChaiYin"},"content":"Model -\u003e Model : getFilteredPersonList()","lastModifiedDate":"2023-10-26"},{"lineNumber":33,"author":{"gitId":"KumChaiYin"},"content":"activate Model","lastModifiedDate":"2023-10-26"},{"lineNumber":34,"author":{"gitId":"KumChaiYin"},"content":"Model --\u003e Model : listToDelete","lastModifiedDate":"2023-10-26"},{"lineNumber":35,"author":{"gitId":"KumChaiYin"},"content":"deactivate Model","lastModifiedDate":"2023-10-26"},{"lineNumber":36,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":37,"author":{"gitId":"KumChaiYin"},"content":"loop all Person in listToDelete","lastModifiedDate":"2023-10-26"},{"lineNumber":38,"author":{"gitId":"KumChaiYin"},"content":"    Model -\u003e AddressBook : removePerson(person)","lastModifiedDate":"2023-10-26"},{"lineNumber":39,"author":{"gitId":"KumChaiYin"},"content":"    activate AddressBook","lastModifiedDate":"2023-10-26"},{"lineNumber":40,"author":{"gitId":"KumChaiYin"},"content":"    AddressBook --\u003e Model :","lastModifiedDate":"2023-10-26"},{"lineNumber":41,"author":{"gitId":"KumChaiYin"},"content":"    deactivate AddressBook","lastModifiedDate":"2023-10-26"},{"lineNumber":42,"author":{"gitId":"KumChaiYin"},"content":"end","lastModifiedDate":"2023-10-26"},{"lineNumber":43,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":44,"author":{"gitId":"KumChaiYin"},"content":"Model -\u003e Model : updateFilteredPersonList();","lastModifiedDate":"2023-10-26"},{"lineNumber":45,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":46,"author":{"gitId":"KumChaiYin"},"content":"Model --\u003e BatchDeleteCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":47,"author":{"gitId":"KumChaiYin"},"content":"deactivate Model","lastModifiedDate":"2023-10-26"},{"lineNumber":48,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":49,"author":{"gitId":"KumChaiYin"},"content":"BatchDeleteCommand --\u003e LogicManager : result","lastModifiedDate":"2023-10-26"},{"lineNumber":50,"author":{"gitId":"KumChaiYin"},"content":"deactivate BatchDeleteCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":51,"author":{"gitId":"KumChaiYin"},"content":"BatchDeleteCommand -[hidden]-\u003e LogicManager : result","lastModifiedDate":"2023-10-26"},{"lineNumber":52,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":53,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":54,"author":{"gitId":"KumChaiYin"},"content":"@enduml","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"KumChaiYin":54}},{"path":"docs/diagrams/BetterModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"AddressBook *-right-\u003e \"1\" UniquePersonList","lastModifiedDate":"2019-07-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"AddressBook *-right-\u003e \"1\" UniqueTagList","lastModifiedDate":"2019-07-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"UniqueTagList -[hidden]down- UniquePersonList","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"UniqueTagList -[hidden]down- UniquePersonList","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"UniqueTagList -right-\u003e \"*\" Tag","lastModifiedDate":"2023-01-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"UniquePersonList -right-\u003e Person","lastModifiedDate":"2021-07-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Person -up-\u003e \"*\" Tag","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Person *--\u003e Name","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Person *--\u003e Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Person *--\u003e Email","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Person *--\u003e Address","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"cyaoxuan"},"content":"Person *--\u003e Nric","lastModifiedDate":"2023-10-27"},{"lineNumber":22,"author":{"gitId":"cyaoxuan"},"content":"Person *--\u003e LicencePlate","lastModifiedDate":"2023-10-27"},{"lineNumber":23,"author":{"gitId":"cyaoxuan"},"content":"Person *--\u003e \"0..1\" Remark","lastModifiedDate":"2023-10-27"},{"lineNumber":24,"author":{"gitId":"cyaoxuan"},"content":"Person *--\u003e Policy","lastModifiedDate":"2023-10-27"},{"lineNumber":25,"author":{"gitId":"cyaoxuan"},"content":"Policy *--\u003e PolicyName","lastModifiedDate":"2023-10-27"},{"lineNumber":26,"author":{"gitId":"cyaoxuan"},"content":"Policy *--\u003e \"2\" PolicyDate","lastModifiedDate":"2023-10-27"},{"lineNumber":27,"author":{"gitId":"brendanneojw"},"content":"Policy *--\u003e Company","lastModifiedDate":"2023-10-27"},{"lineNumber":28,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"brendanneojw":1,"-":21,"cyaoxuan":7}},{"path":"docs/diagrams/EditFeatureSequenceDiagram1.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"suryanshkushwaha"},"content":"@startuml","lastModifiedDate":"2023-10-27"},{"lineNumber":2,"author":{"gitId":"suryanshkushwaha"},"content":"!include style.puml","lastModifiedDate":"2023-10-27"},{"lineNumber":3,"author":{"gitId":"suryanshkushwaha"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2023-10-27"},{"lineNumber":4,"author":{"gitId":"suryanshkushwaha"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":5,"author":{"gitId":"suryanshkushwaha"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2023-10-27"},{"lineNumber":6,"author":{"gitId":"suryanshkushwaha"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2023-10-27"},{"lineNumber":7,"author":{"gitId":"suryanshkushwaha"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2023-10-27"},{"lineNumber":8,"author":{"gitId":"suryanshkushwaha"},"content":"participant \"ep:EditCommandParser\" as EditCommandParser LOGIC_COLOR","lastModifiedDate":"2023-10-27"},{"lineNumber":9,"author":{"gitId":"suryanshkushwaha"},"content":"participant \"index:Index\" as Index LOGIC_COLOR","lastModifiedDate":"2023-10-27"},{"lineNumber":10,"author":{"gitId":"suryanshkushwaha"},"content":"participant \"editPersonDescriptor:EditPersonDescriptor\" as EditPersonDescriptor LOGIC_COLOR","lastModifiedDate":"2023-10-27"},{"lineNumber":11,"author":{"gitId":"suryanshkushwaha"},"content":"participant \"e:EditCommand\" as EditCommand LOGIC_COLOR","lastModifiedDate":"2023-10-27"},{"lineNumber":12,"author":{"gitId":"suryanshkushwaha"},"content":"end box","lastModifiedDate":"2023-10-27"},{"lineNumber":13,"author":{"gitId":"suryanshkushwaha"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":14,"author":{"gitId":"suryanshkushwaha"},"content":"[-\u003e LogicManager : execute(edit 1 c/ABCInsurance)","lastModifiedDate":"2023-10-27"},{"lineNumber":15,"author":{"gitId":"suryanshkushwaha"},"content":"activate LogicManager","lastModifiedDate":"2023-10-27"},{"lineNumber":16,"author":{"gitId":"suryanshkushwaha"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":17,"author":{"gitId":"suryanshkushwaha"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"edit 1 c/ABCInsurance\")","lastModifiedDate":"2023-10-27"},{"lineNumber":18,"author":{"gitId":"suryanshkushwaha"},"content":"activate AddressBookParser","lastModifiedDate":"2023-10-27"},{"lineNumber":19,"author":{"gitId":"suryanshkushwaha"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":20,"author":{"gitId":"suryanshkushwaha"},"content":"create EditCommandParser","lastModifiedDate":"2023-10-27"},{"lineNumber":21,"author":{"gitId":"suryanshkushwaha"},"content":"AddressBookParser -\u003e EditCommandParser","lastModifiedDate":"2023-10-27"},{"lineNumber":22,"author":{"gitId":"suryanshkushwaha"},"content":"activate EditCommandParser","lastModifiedDate":"2023-10-27"},{"lineNumber":23,"author":{"gitId":"suryanshkushwaha"},"content":"EditCommandParser --\u003e AddressBookParser","lastModifiedDate":"2023-10-27"},{"lineNumber":24,"author":{"gitId":"suryanshkushwaha"},"content":"deactivate EditCommandParser","lastModifiedDate":"2023-10-27"},{"lineNumber":25,"author":{"gitId":"suryanshkushwaha"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":26,"author":{"gitId":"suryanshkushwaha"},"content":"AddressBookParser -\u003e EditCommandParser : parse(\"edit 1 c/ABCInsurance\")","lastModifiedDate":"2023-10-27"},{"lineNumber":27,"author":{"gitId":"suryanshkushwaha"},"content":"activate EditCommandParser","lastModifiedDate":"2023-10-27"},{"lineNumber":28,"author":{"gitId":"suryanshkushwaha"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":29,"author":{"gitId":"suryanshkushwaha"},"content":"create Index","lastModifiedDate":"2023-10-27"},{"lineNumber":30,"author":{"gitId":"suryanshkushwaha"},"content":"EditCommandParser -\u003e Index","lastModifiedDate":"2023-10-27"},{"lineNumber":31,"author":{"gitId":"suryanshkushwaha"},"content":"activate Index","lastModifiedDate":"2023-10-27"},{"lineNumber":32,"author":{"gitId":"suryanshkushwaha"},"content":"Index --\u003e EditCommandParser : Index","lastModifiedDate":"2023-10-27"},{"lineNumber":33,"author":{"gitId":"suryanshkushwaha"},"content":"deactivate Index","lastModifiedDate":"2023-10-27"},{"lineNumber":34,"author":{"gitId":"suryanshkushwaha"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":35,"author":{"gitId":"suryanshkushwaha"},"content":"create EditPersonDescriptor","lastModifiedDate":"2023-10-27"},{"lineNumber":36,"author":{"gitId":"suryanshkushwaha"},"content":"EditCommandParser -\u003e EditPersonDescriptor","lastModifiedDate":"2023-10-27"},{"lineNumber":37,"author":{"gitId":"suryanshkushwaha"},"content":"activate EditPersonDescriptor","lastModifiedDate":"2023-10-27"},{"lineNumber":38,"author":{"gitId":"suryanshkushwaha"},"content":"EditPersonDescriptor --\u003e EditCommandParser : editPersonDescriptor","lastModifiedDate":"2023-10-27"},{"lineNumber":39,"author":{"gitId":"suryanshkushwaha"},"content":"deactivate EditPersonDescriptor","lastModifiedDate":"2023-10-27"},{"lineNumber":40,"author":{"gitId":"suryanshkushwaha"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":41,"author":{"gitId":"suryanshkushwaha"},"content":"create EditCommand","lastModifiedDate":"2023-10-27"},{"lineNumber":42,"author":{"gitId":"suryanshkushwaha"},"content":"EditCommandParser -\u003e EditCommand : EditCommand(index, editPersonDescriptor)","lastModifiedDate":"2023-10-27"},{"lineNumber":43,"author":{"gitId":"suryanshkushwaha"},"content":"activate EditCommand","lastModifiedDate":"2023-10-27"},{"lineNumber":44,"author":{"gitId":"suryanshkushwaha"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":45,"author":{"gitId":"suryanshkushwaha"},"content":"EditCommand --\u003e EditCommandParser : e","lastModifiedDate":"2023-10-27"},{"lineNumber":46,"author":{"gitId":"suryanshkushwaha"},"content":"deactivate EditCommand","lastModifiedDate":"2023-10-27"},{"lineNumber":47,"author":{"gitId":"suryanshkushwaha"},"content":"EditCommandParser --\u003e AddressBookParser : e","lastModifiedDate":"2023-10-27"},{"lineNumber":48,"author":{"gitId":"suryanshkushwaha"},"content":"deactivate EditCommandParser","lastModifiedDate":"2023-10-27"},{"lineNumber":49,"author":{"gitId":"suryanshkushwaha"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":50,"author":{"gitId":"suryanshkushwaha"},"content":"AddressBookParser --\u003e LogicManager : e","lastModifiedDate":"2023-10-27"},{"lineNumber":51,"author":{"gitId":"suryanshkushwaha"},"content":"deactivate AddressBookParser","lastModifiedDate":"2023-10-27"},{"lineNumber":52,"author":{"gitId":"suryanshkushwaha"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":53,"author":{"gitId":"suryanshkushwaha"},"content":"destroy EditCommandParser","lastModifiedDate":"2023-10-27"},{"lineNumber":54,"author":{"gitId":"suryanshkushwaha"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":55,"author":{"gitId":"suryanshkushwaha"},"content":"EditCommand -[hidden]-\u003e LogicManager : empty row","lastModifiedDate":"2023-10-27"},{"lineNumber":56,"author":{"gitId":"suryanshkushwaha"},"content":"ref over LogicManager, EditCommand : execute EditCommand","lastModifiedDate":"2023-10-27"},{"lineNumber":57,"author":{"gitId":"suryanshkushwaha"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":58,"author":{"gitId":"suryanshkushwaha"},"content":"EditCommand -[hidden]-\u003e LogicManager : empty row","lastModifiedDate":"2023-10-27"},{"lineNumber":59,"author":{"gitId":"suryanshkushwaha"},"content":"destroy EditCommand","lastModifiedDate":"2023-10-27"},{"lineNumber":60,"author":{"gitId":"suryanshkushwaha"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":61,"author":{"gitId":"suryanshkushwaha"},"content":"[\u003c--LogicManager","lastModifiedDate":"2023-10-27"},{"lineNumber":62,"author":{"gitId":"suryanshkushwaha"},"content":"deactivate LogicManager","lastModifiedDate":"2023-10-27"},{"lineNumber":63,"author":{"gitId":"suryanshkushwaha"},"content":"@enduml","lastModifiedDate":"2023-10-27"}],"authorContributionMap":{"suryanshkushwaha":63}},{"path":"docs/diagrams/EditFeatureSequenceDiagram2.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"suryanshkushwaha"},"content":"@startuml","lastModifiedDate":"2023-10-27"},{"lineNumber":2,"author":{"gitId":"suryanshkushwaha"},"content":"mainframe **sd** execute EditCommand","lastModifiedDate":"2023-10-27"},{"lineNumber":3,"author":{"gitId":"suryanshkushwaha"},"content":"!include style.puml","lastModifiedDate":"2023-10-27"},{"lineNumber":4,"author":{"gitId":"suryanshkushwaha"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2023-10-27"},{"lineNumber":5,"author":{"gitId":"suryanshkushwaha"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":6,"author":{"gitId":"suryanshkushwaha"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2023-10-27"},{"lineNumber":7,"author":{"gitId":"suryanshkushwaha"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2023-10-27"},{"lineNumber":8,"author":{"gitId":"suryanshkushwaha"},"content":"participant \"e:EditCommand\" as EditCommand LOGIC_COLOR","lastModifiedDate":"2023-10-27"},{"lineNumber":9,"author":{"gitId":"suryanshkushwaha"},"content":"end box","lastModifiedDate":"2023-10-27"},{"lineNumber":10,"author":{"gitId":"suryanshkushwaha"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":11,"author":{"gitId":"suryanshkushwaha"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2023-10-27"},{"lineNumber":12,"author":{"gitId":"suryanshkushwaha"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2023-10-27"},{"lineNumber":13,"author":{"gitId":"suryanshkushwaha"},"content":"participant \":AddressBook\" as AddressBook MODEL_COLOR","lastModifiedDate":"2023-10-27"},{"lineNumber":14,"author":{"gitId":"suryanshkushwaha"},"content":"end box","lastModifiedDate":"2023-10-27"},{"lineNumber":15,"author":{"gitId":"suryanshkushwaha"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":16,"author":{"gitId":"suryanshkushwaha"},"content":"LogicManager -\u003e EditCommand : execute()","lastModifiedDate":"2023-10-27"},{"lineNumber":17,"author":{"gitId":"suryanshkushwaha"},"content":"activate EditCommand","lastModifiedDate":"2023-10-27"},{"lineNumber":18,"author":{"gitId":"suryanshkushwaha"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":19,"author":{"gitId":"suryanshkushwaha"},"content":"EditCommand -\u003e Model : setPerson(personToEdit, editedPerson)","lastModifiedDate":"2023-10-27"},{"lineNumber":20,"author":{"gitId":"suryanshkushwaha"},"content":"activate Model","lastModifiedDate":"2023-10-27"},{"lineNumber":21,"author":{"gitId":"suryanshkushwaha"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":22,"author":{"gitId":"suryanshkushwaha"},"content":"Model -\u003e AddressBook : setPerson(target, editedPerson)","lastModifiedDate":"2023-10-27"},{"lineNumber":23,"author":{"gitId":"suryanshkushwaha"},"content":"activate AddressBook","lastModifiedDate":"2023-10-27"},{"lineNumber":24,"author":{"gitId":"suryanshkushwaha"},"content":"AddressBook --\u003e Model","lastModifiedDate":"2023-10-27"},{"lineNumber":25,"author":{"gitId":"suryanshkushwaha"},"content":"deactivate AddressBook","lastModifiedDate":"2023-10-27"},{"lineNumber":26,"author":{"gitId":"suryanshkushwaha"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":27,"author":{"gitId":"suryanshkushwaha"},"content":"EditCommand -\u003e Model : updateFilteredPersonList(predicate)","lastModifiedDate":"2023-10-27"},{"lineNumber":28,"author":{"gitId":"suryanshkushwaha"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":29,"author":{"gitId":"suryanshkushwaha"},"content":"Model --\u003e EditCommand","lastModifiedDate":"2023-10-27"},{"lineNumber":30,"author":{"gitId":"suryanshkushwaha"},"content":"deactivate Model","lastModifiedDate":"2023-10-27"},{"lineNumber":31,"author":{"gitId":"suryanshkushwaha"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":32,"author":{"gitId":"suryanshkushwaha"},"content":"EditCommand --\u003e LogicManager : result","lastModifiedDate":"2023-10-27"},{"lineNumber":33,"author":{"gitId":"suryanshkushwaha"},"content":"deactivate EditCommand","lastModifiedDate":"2023-10-27"},{"lineNumber":34,"author":{"gitId":"suryanshkushwaha"},"content":"EditCommand -[hidden]-\u003e LogicManager : result","lastModifiedDate":"2023-10-27"},{"lineNumber":35,"author":{"gitId":"suryanshkushwaha"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":36,"author":{"gitId":"suryanshkushwaha"},"content":"@enduml","lastModifiedDate":"2023-10-27"}],"authorContributionMap":{"suryanshkushwaha":36}},{"path":"docs/diagrams/ModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Package Model as ModelPackage \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2023-07-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyAddressBook\" as ReadOnlyAddressBook","lastModifiedDate":"2022-01-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyUserPrefs\" as ReadOnlyUserPrefs","lastModifiedDate":"2022-01-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nModel\" as Model","lastModifiedDate":"2022-01-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class AddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class ModelManager","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class UserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class UniquePersonList","lastModifiedDate":"2021-07-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class Person","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class Address","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class Email","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Class Name","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Class Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class Tag","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"brendanneojw"},"content":"Class Nric","lastModifiedDate":"2023-10-27"},{"lineNumber":23,"author":{"gitId":"brendanneojw"},"content":"Class LicencePlate","lastModifiedDate":"2023-10-27"},{"lineNumber":24,"author":{"gitId":"brendanneojw"},"content":"Class Policy","lastModifiedDate":"2023-10-27"},{"lineNumber":25,"author":{"gitId":"brendanneojw"},"content":"Class Remarks","lastModifiedDate":"2023-10-27"},{"lineNumber":26,"author":{"gitId":"brendanneojw"},"content":"Class PolicyNumber","lastModifiedDate":"2023-10-27"},{"lineNumber":27,"author":{"gitId":"brendanneojw"},"content":"Class PolicyDate","lastModifiedDate":"2023-10-27"},{"lineNumber":28,"author":{"gitId":"brendanneojw"},"content":"Class Company","lastModifiedDate":"2023-10-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"Class I #FFFFFF","lastModifiedDate":"2023-07-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"AddressBook .up.|\u003e ReadOnlyAddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"ModelManager .up.|\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"Model .right.\u003e ReadOnlyUserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":40,"author":{"gitId":"-"},"content":"Model .left.\u003e ReadOnlyAddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"ModelManager -left-\u003e \"1\" AddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":42,"author":{"gitId":"-"},"content":"ModelManager -right-\u003e \"1\" UserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":43,"author":{"gitId":"-"},"content":"UserPrefs .up.|\u003e ReadOnlyUserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"AddressBook *--\u003e \"1\" UniquePersonList","lastModifiedDate":"2019-07-30"},{"lineNumber":46,"author":{"gitId":"-"},"content":"UniquePersonList --\u003e \"~* all\" Person","lastModifiedDate":"2021-07-31"},{"lineNumber":47,"author":{"gitId":"-"},"content":"Person *--\u003e Name","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"Person *--\u003e Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"Person *--\u003e Email","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"Person *--\u003e Address","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"Person *--\u003e \"*\" Tag","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"cyaoxuan"},"content":"Person *--\u003e Nric","lastModifiedDate":"2023-10-27"},{"lineNumber":53,"author":{"gitId":"cyaoxuan"},"content":"Person *--\u003e LicencePlate","lastModifiedDate":"2023-10-27"},{"lineNumber":54,"author":{"gitId":"brendanneojw"},"content":"Person *--\u003e \"0..1\" Remarks","lastModifiedDate":"2023-10-27"},{"lineNumber":55,"author":{"gitId":"cyaoxuan"},"content":"Person *--\u003e Policy","lastModifiedDate":"2023-10-27"},{"lineNumber":56,"author":{"gitId":"brendanneojw"},"content":"Policy *--\u003e PolicyNumber","lastModifiedDate":"2023-10-27"},{"lineNumber":57,"author":{"gitId":"cyaoxuan"},"content":"Policy *--\u003e \"2\" PolicyDate","lastModifiedDate":"2023-10-27"},{"lineNumber":58,"author":{"gitId":"brendanneojw"},"content":"Policy *--\u003e Company","lastModifiedDate":"2023-10-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"Person -[hidden]up--\u003e I","lastModifiedDate":"2023-07-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"UniquePersonList -[hidden]right-\u003e I","lastModifiedDate":"2023-07-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"Name -[hidden]right-\u003e Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"Phone -[hidden]right-\u003e Address","lastModifiedDate":"2019-07-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"Address -[hidden]right-\u003e Email","lastModifiedDate":"2019-07-03"},{"lineNumber":66,"author":{"gitId":"cyaoxuan"},"content":"Address -[hidden]right-\u003e Tag","lastModifiedDate":"2023-10-27"},{"lineNumber":67,"author":{"gitId":"cyaoxuan"},"content":"Tag -[hidden]right-\u003e Nric","lastModifiedDate":"2023-10-27"},{"lineNumber":68,"author":{"gitId":"cyaoxuan"},"content":"Nric -[hidden]right-\u003e LicencePlate","lastModifiedDate":"2023-10-27"},{"lineNumber":69,"author":{"gitId":"cyaoxuan"},"content":"LicencePlate -[hidden]right-\u003e Remarks","lastModifiedDate":"2023-10-27"},{"lineNumber":70,"author":{"gitId":"cyaoxuan"},"content":"Remarks -[hidden]right-\u003e Policy","lastModifiedDate":"2023-10-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":72,"author":{"gitId":"-"},"content":"ModelManager --\u003e \"~* filtered\" Person","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"brendanneojw":10,"-":54,"cyaoxuan":9}},{"path":"docs/diagrams/RemindActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"brendanneojw"},"content":"@startuml","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"brendanneojw"},"content":"skin rose","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"brendanneojw"},"content":"skinparam ActivityFontSize 15","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"brendanneojw"},"content":"skinparam ArrowFontSize 13","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"brendanneojw"},"content":"start","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"brendanneojw"},"content":":User executes \"remind 30\" command;","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"brendanneojw"},"content":":Model goes through Address Book that contains Persons;","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"brendanneojw"},"content":"repeat","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"brendanneojw"},"content":"if () then ([Person have policy expiry date within 30 days])","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"brendanneojw"},"content":"    : Add Person to Filtered List;","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"brendanneojw"},"content":"else ([else])","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"brendanneojw"},"content":"endif","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"brendanneojw"},"content":"repeat while () is ([There is still Person to check])","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"brendanneojw"},"content":"-\u003e[else];","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"brendanneojw"},"content":":Displays Filtered List;","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"brendanneojw"},"content":"stop","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"brendanneojw"},"content":"@enduml","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"brendanneojw":20}},{"path":"docs/diagrams/RemindSequenceDiagram1.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"brendanneojw"},"content":"@startuml","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"brendanneojw"},"content":"!include style.puml","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"brendanneojw"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"brendanneojw"},"content":"box UI UI_COLOR_T1","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"brendanneojw"},"content":"participant \":MainWindow\" as MainWindow UI_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"brendanneojw"},"content":"end box","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"brendanneojw"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"brendanneojw"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"brendanneojw"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"brendanneojw"},"content":"participant \"rp:RemindCommandParser\" as RemindCommandParser LOGIC_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"brendanneojw"},"content":"participant \"r:RemindCommand\" as RemindCommand LOGIC_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"brendanneojw"},"content":"end box","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"brendanneojw"},"content":"MainWindow -\u003e LogicManager : execute(\"remind 30\")","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"brendanneojw"},"content":"activate LogicManager","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"brendanneojw"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"remind 30\")","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"brendanneojw"},"content":"activate AddressBookParser","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"brendanneojw"},"content":"create RemindCommandParser","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"brendanneojw"},"content":"AddressBookParser -\u003e RemindCommandParser : RemindCommandParser()","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"brendanneojw"},"content":"activate RemindCommandParser","lastModifiedDate":"2023-10-26"},{"lineNumber":25,"author":{"gitId":"brendanneojw"},"content":"RemindCommandParser --\u003e AddressBookParser","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"brendanneojw"},"content":"deactivate RemindCommandParser","lastModifiedDate":"2023-10-26"},{"lineNumber":27,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":28,"author":{"gitId":"brendanneojw"},"content":"AddressBookParser -\u003e RemindCommandParser : parse(\" 30\")","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"brendanneojw"},"content":"activate RemindCommandParser","lastModifiedDate":"2023-10-26"},{"lineNumber":30,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":31,"author":{"gitId":"brendanneojw"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2023-10-26"},{"lineNumber":32,"author":{"gitId":"brendanneojw"},"content":"participant \"p:RemindPredicate\" as RemindPredicate MODEL_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":33,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":34,"author":{"gitId":"brendanneojw"},"content":"create RemindPredicate","lastModifiedDate":"2023-10-26"},{"lineNumber":35,"author":{"gitId":"brendanneojw"},"content":"RemindCommandParser -\u003e RemindPredicate : RemindPredicate(30)","lastModifiedDate":"2023-10-26"},{"lineNumber":36,"author":{"gitId":"brendanneojw"},"content":"activate RemindPredicate","lastModifiedDate":"2023-10-26"},{"lineNumber":37,"author":{"gitId":"brendanneojw"},"content":"RemindPredicate --\u003e RemindCommandParser","lastModifiedDate":"2023-10-26"},{"lineNumber":38,"author":{"gitId":"brendanneojw"},"content":"deactivate RemindPredicate","lastModifiedDate":"2023-10-26"},{"lineNumber":39,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":40,"author":{"gitId":"brendanneojw"},"content":"RemindPredicate -[hidden]-\u003e RemindCommandParser","lastModifiedDate":"2023-10-26"},{"lineNumber":41,"author":{"gitId":"brendanneojw"},"content":"create RemindCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":42,"author":{"gitId":"brendanneojw"},"content":"RemindCommandParser -\u003e RemindCommand : RemindCommand(p)","lastModifiedDate":"2023-10-26"},{"lineNumber":43,"author":{"gitId":"brendanneojw"},"content":"activate RemindCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":44,"author":{"gitId":"brendanneojw"},"content":"RemindCommand --\u003e RemindCommandParser","lastModifiedDate":"2023-10-26"},{"lineNumber":45,"author":{"gitId":"brendanneojw"},"content":"deactivate RemindCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":46,"author":{"gitId":"brendanneojw"},"content":"RemindCommand -[hidden]-\u003e RemindCommandParser","lastModifiedDate":"2023-10-26"},{"lineNumber":47,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":48,"author":{"gitId":"brendanneojw"},"content":"RemindCommandParser --\u003e AddressBookParser","lastModifiedDate":"2023-10-26"},{"lineNumber":49,"author":{"gitId":"brendanneojw"},"content":"deactivate RemindCommandParser","lastModifiedDate":"2023-10-26"},{"lineNumber":50,"author":{"gitId":"brendanneojw"},"content":"RemindCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2023-10-26"},{"lineNumber":51,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":52,"author":{"gitId":"brendanneojw"},"content":"AddressBookParser --\u003e LogicManager","lastModifiedDate":"2023-10-26"},{"lineNumber":53,"author":{"gitId":"brendanneojw"},"content":"deactivate AddressBookParser","lastModifiedDate":"2023-10-26"},{"lineNumber":54,"author":{"gitId":"brendanneojw"},"content":"destroy RemindCommandParser","lastModifiedDate":"2023-10-26"},{"lineNumber":55,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":56,"author":{"gitId":"brendanneojw"},"content":"RemindPredicate -[hidden]-\u003e LogicManager : empty row","lastModifiedDate":"2023-10-26"},{"lineNumber":57,"author":{"gitId":"brendanneojw"},"content":"ref over LogicManager, RemindPredicate: execute RemindCommand","lastModifiedDate":"2023-11-13"},{"lineNumber":58,"author":{"gitId":"brendanneojw"},"content":"LogicManager -[hidden]-\u003e MainWindow : empty row","lastModifiedDate":"2023-10-26"},{"lineNumber":59,"author":{"gitId":"brendanneojw"},"content":"LogicManager --\u003e MainWindow","lastModifiedDate":"2023-10-26"},{"lineNumber":60,"author":{"gitId":"brendanneojw"},"content":"deactivate LogicManager","lastModifiedDate":"2023-10-26"},{"lineNumber":61,"author":{"gitId":"brendanneojw"},"content":"@enduml","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"brendanneojw":61}},{"path":"docs/diagrams/RemindSequenceDiagram2.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"brendanneojw"},"content":"@startuml","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"brendanneojw"},"content":"mainframe **sd** execute RemindCommand","lastModifiedDate":"2023-11-13"},{"lineNumber":3,"author":{"gitId":"brendanneojw"},"content":"!include style.puml","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"brendanneojw"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"brendanneojw"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"brendanneojw"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"brendanneojw"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"brendanneojw"},"content":"participant \"r:RemindCommand\" as RemindCommand LOGIC_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"brendanneojw"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"brendanneojw"},"content":"end box","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"brendanneojw"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"brendanneojw"},"content":"participant \"p:RemindPredicate\" as RemindPredicate MODEL_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"brendanneojw"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"brendanneojw"},"content":"participant \":FilteredList\" as FilteredList MODEL_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"brendanneojw"},"content":"LogicManager -\u003e RemindCommand : execute()","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"brendanneojw"},"content":"activate RemindCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"brendanneojw"},"content":"RemindCommand -\u003e Model : updateFilteredPersonList(p)","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"brendanneojw"},"content":"activate Model","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"brendanneojw"},"content":"Model -\u003e FilteredList : setPredicate(p)","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"brendanneojw"},"content":"activate FilteredList","lastModifiedDate":"2023-10-26"},{"lineNumber":25,"author":{"gitId":"brendanneojw"},"content":"FilteredList -[hidden]-\u003e Model","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"brendanneojw"},"content":"FilteredList --\u003e Model","lastModifiedDate":"2023-10-26"},{"lineNumber":27,"author":{"gitId":"brendanneojw"},"content":"deactivate FilteredList","lastModifiedDate":"2023-10-26"},{"lineNumber":28,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"brendanneojw"},"content":"Model -[hidden]-\u003e RemindCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":30,"author":{"gitId":"brendanneojw"},"content":"Model --\u003e RemindCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":31,"author":{"gitId":"brendanneojw"},"content":"deactivate Model","lastModifiedDate":"2023-10-26"},{"lineNumber":32,"author":{"gitId":"brendanneojw"},"content":"Model -[hidden]-\u003e RemindCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":33,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":34,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":35,"author":{"gitId":"brendanneojw"},"content":"create CommandResult","lastModifiedDate":"2023-10-26"},{"lineNumber":36,"author":{"gitId":"brendanneojw"},"content":"RemindCommand -\u003e CommandResult : CommandResult()","lastModifiedDate":"2023-10-26"},{"lineNumber":37,"author":{"gitId":"brendanneojw"},"content":"activate CommandResult","lastModifiedDate":"2023-10-26"},{"lineNumber":38,"author":{"gitId":"brendanneojw"},"content":"CommandResult --\u003e RemindCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":39,"author":{"gitId":"brendanneojw"},"content":"deactivate CommandResult","lastModifiedDate":"2023-10-26"},{"lineNumber":40,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":41,"author":{"gitId":"brendanneojw"},"content":"RemindCommand -[hidden]-\u003e LogicManager","lastModifiedDate":"2023-10-26"},{"lineNumber":42,"author":{"gitId":"brendanneojw"},"content":"RemindCommand --\u003e LogicManager","lastModifiedDate":"2023-10-26"},{"lineNumber":43,"author":{"gitId":"brendanneojw"},"content":"deactivate RemindCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":44,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":45,"author":{"gitId":"brendanneojw"},"content":"@enduml","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"brendanneojw":45}},{"path":"docs/diagrams/SortSequenceDiagram1.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"RSXIX"},"content":"@startuml","lastModifiedDate":"2023-10-27"},{"lineNumber":2,"author":{"gitId":"RSXIX"},"content":"!include style.puml","lastModifiedDate":"2023-10-27"},{"lineNumber":3,"author":{"gitId":"RSXIX"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2023-10-27"},{"lineNumber":4,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":5,"author":{"gitId":"brendanneojw"},"content":"box UI UI_COLOR_T1","lastModifiedDate":"2023-11-13"},{"lineNumber":6,"author":{"gitId":"RSXIX"},"content":"participant \":MainWindow\" as MainWindow UI_COLOR","lastModifiedDate":"2023-10-27"},{"lineNumber":7,"author":{"gitId":"RSXIX"},"content":"end box","lastModifiedDate":"2023-10-27"},{"lineNumber":8,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":9,"author":{"gitId":"RSXIX"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2023-10-27"},{"lineNumber":10,"author":{"gitId":"RSXIX"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2023-10-27"},{"lineNumber":11,"author":{"gitId":"RSXIX"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2023-10-27"},{"lineNumber":12,"author":{"gitId":"RSXIX"},"content":"participant \"sp:SortCommandParser\" as SortCommandParser LOGIC_COLOR","lastModifiedDate":"2023-10-27"},{"lineNumber":13,"author":{"gitId":"RSXIX"},"content":"participant \"s:SortCommand\" as SortCommand LOGIC_COLOR","lastModifiedDate":"2023-10-27"},{"lineNumber":14,"author":{"gitId":"RSXIX"},"content":"end box","lastModifiedDate":"2023-10-27"},{"lineNumber":15,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":16,"author":{"gitId":"RSXIX"},"content":"MainWindow -\u003e LogicManager : execute(\"sort\")","lastModifiedDate":"2023-10-27"},{"lineNumber":17,"author":{"gitId":"RSXIX"},"content":"activate LogicManager","lastModifiedDate":"2023-10-27"},{"lineNumber":18,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":19,"author":{"gitId":"RSXIX"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"sort\")","lastModifiedDate":"2023-10-27"},{"lineNumber":20,"author":{"gitId":"RSXIX"},"content":"activate AddressBookParser","lastModifiedDate":"2023-10-27"},{"lineNumber":21,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":22,"author":{"gitId":"RSXIX"},"content":"create SortCommandParser","lastModifiedDate":"2023-10-27"},{"lineNumber":23,"author":{"gitId":"RSXIX"},"content":"AddressBookParser -\u003e SortCommandParser : SortCommandParser()","lastModifiedDate":"2023-10-27"},{"lineNumber":24,"author":{"gitId":"RSXIX"},"content":"activate SortCommandParser","lastModifiedDate":"2023-10-27"},{"lineNumber":25,"author":{"gitId":"RSXIX"},"content":"SortCommandParser --\u003e AddressBookParser","lastModifiedDate":"2023-10-27"},{"lineNumber":26,"author":{"gitId":"RSXIX"},"content":"deactivate SortCommandParser","lastModifiedDate":"2023-10-27"},{"lineNumber":27,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":28,"author":{"gitId":"RSXIX"},"content":"AddressBookParser -\u003e SortCommandParser : parse(\"\")","lastModifiedDate":"2023-10-27"},{"lineNumber":29,"author":{"gitId":"RSXIX"},"content":"activate SortCommandParser","lastModifiedDate":"2023-10-27"},{"lineNumber":30,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":31,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":32,"author":{"gitId":"RSXIX"},"content":"create SortCommand","lastModifiedDate":"2023-10-27"},{"lineNumber":33,"author":{"gitId":"RSXIX"},"content":"SortCommandParser -\u003e SortCommand : Sort)","lastModifiedDate":"2023-10-27"},{"lineNumber":34,"author":{"gitId":"RSXIX"},"content":"activate SortCommand","lastModifiedDate":"2023-10-27"},{"lineNumber":35,"author":{"gitId":"RSXIX"},"content":"SortCommand --\u003e SortCommandParser","lastModifiedDate":"2023-10-27"},{"lineNumber":36,"author":{"gitId":"RSXIX"},"content":"deactivate SortCommand","lastModifiedDate":"2023-10-27"},{"lineNumber":37,"author":{"gitId":"RSXIX"},"content":"SortCommand -[hidden]-\u003e SortCommandParser","lastModifiedDate":"2023-10-27"},{"lineNumber":38,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":39,"author":{"gitId":"RSXIX"},"content":"SortCommandParser --\u003e AddressBookParser","lastModifiedDate":"2023-10-27"},{"lineNumber":40,"author":{"gitId":"RSXIX"},"content":"deactivate SortCommandParser","lastModifiedDate":"2023-10-27"},{"lineNumber":41,"author":{"gitId":"RSXIX"},"content":"SortCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2023-10-27"},{"lineNumber":42,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":43,"author":{"gitId":"RSXIX"},"content":"AddressBookParser --\u003e LogicManager","lastModifiedDate":"2023-10-27"},{"lineNumber":44,"author":{"gitId":"RSXIX"},"content":"deactivate AddressBookParser","lastModifiedDate":"2023-10-27"},{"lineNumber":45,"author":{"gitId":"RSXIX"},"content":"destroy SortCommandParser","lastModifiedDate":"2023-10-27"},{"lineNumber":46,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":47,"author":{"gitId":"brendanneojw"},"content":"LogicManager -[hidden]-\u003e MainWindow : empty row","lastModifiedDate":"2023-11-13"},{"lineNumber":48,"author":{"gitId":"brendanneojw"},"content":"ref over LogicManager, SortCommand: execute SortCommand","lastModifiedDate":"2023-11-13"},{"lineNumber":49,"author":{"gitId":"RSXIX"},"content":"LogicManager -[hidden]-\u003e MainWindow : empty row","lastModifiedDate":"2023-10-27"},{"lineNumber":50,"author":{"gitId":"RSXIX"},"content":"LogicManager --\u003e MainWindow","lastModifiedDate":"2023-10-27"},{"lineNumber":51,"author":{"gitId":"RSXIX"},"content":"deactivate LogicManager","lastModifiedDate":"2023-10-27"},{"lineNumber":52,"author":{"gitId":"RSXIX"},"content":"@enduml","lastModifiedDate":"2023-10-27"}],"authorContributionMap":{"brendanneojw":3,"RSXIX":49}},{"path":"docs/diagrams/SortSequenceDiagram2.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"RSXIX"},"content":"@startuml","lastModifiedDate":"2023-10-27"},{"lineNumber":2,"author":{"gitId":"brendanneojw"},"content":"mainframe **sd** execute SortCommand","lastModifiedDate":"2023-11-13"},{"lineNumber":3,"author":{"gitId":"RSXIX"},"content":"!include style.puml","lastModifiedDate":"2023-10-27"},{"lineNumber":4,"author":{"gitId":"RSXIX"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2023-10-27"},{"lineNumber":5,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":6,"author":{"gitId":"RSXIX"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2023-10-27"},{"lineNumber":7,"author":{"gitId":"RSXIX"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2023-10-27"},{"lineNumber":8,"author":{"gitId":"RSXIX"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2023-10-27"},{"lineNumber":9,"author":{"gitId":"RSXIX"},"content":"participant \"s:SortCommand\" as SortCommand LOGIC_COLOR","lastModifiedDate":"2023-10-27"},{"lineNumber":10,"author":{"gitId":"RSXIX"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2023-10-27"},{"lineNumber":11,"author":{"gitId":"RSXIX"},"content":"end box","lastModifiedDate":"2023-10-27"},{"lineNumber":12,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":13,"author":{"gitId":"RSXIX"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2023-10-27"},{"lineNumber":14,"author":{"gitId":"RSXIX"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2023-10-27"},{"lineNumber":15,"author":{"gitId":"RSXIX"},"content":"participant \":AddressBook\" as AddressBook MODEL_COLOR","lastModifiedDate":"2023-10-27"},{"lineNumber":16,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":17,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":18,"author":{"gitId":"RSXIX"},"content":"LogicManager -\u003e SortCommand : execute()","lastModifiedDate":"2023-10-27"},{"lineNumber":19,"author":{"gitId":"RSXIX"},"content":"activate SortCommand","lastModifiedDate":"2023-10-27"},{"lineNumber":20,"author":{"gitId":"RSXIX"},"content":"SortCommand -\u003e Model : SortData","lastModifiedDate":"2023-10-27"},{"lineNumber":21,"author":{"gitId":"RSXIX"},"content":"activate Model","lastModifiedDate":"2023-10-27"},{"lineNumber":22,"author":{"gitId":"RSXIX"},"content":"Model -\u003e AddressBook : SortData","lastModifiedDate":"2023-10-27"},{"lineNumber":23,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":24,"author":{"gitId":"RSXIX"},"content":"activate AddressBook","lastModifiedDate":"2023-10-27"},{"lineNumber":25,"author":{"gitId":"RSXIX"},"content":"AddressBook -[hidden]-\u003e Model","lastModifiedDate":"2023-10-27"},{"lineNumber":26,"author":{"gitId":"RSXIX"},"content":"AddressBook --\u003e Model","lastModifiedDate":"2023-10-27"},{"lineNumber":27,"author":{"gitId":"RSXIX"},"content":"deactivate AddressBook","lastModifiedDate":"2023-10-27"},{"lineNumber":28,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":29,"author":{"gitId":"RSXIX"},"content":"Model -[hidden]-\u003e SortCommand","lastModifiedDate":"2023-10-27"},{"lineNumber":30,"author":{"gitId":"RSXIX"},"content":"Model --\u003e SortCommand","lastModifiedDate":"2023-10-27"},{"lineNumber":31,"author":{"gitId":"RSXIX"},"content":"deactivate Model","lastModifiedDate":"2023-10-27"},{"lineNumber":32,"author":{"gitId":"RSXIX"},"content":"Model -[hidden]-\u003e SortCommand","lastModifiedDate":"2023-10-27"},{"lineNumber":33,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":34,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":35,"author":{"gitId":"RSXIX"},"content":"create CommandResult","lastModifiedDate":"2023-10-27"},{"lineNumber":36,"author":{"gitId":"RSXIX"},"content":"SortCommand -\u003e CommandResult : CommandResult()","lastModifiedDate":"2023-10-27"},{"lineNumber":37,"author":{"gitId":"RSXIX"},"content":"activate CommandResult","lastModifiedDate":"2023-10-27"},{"lineNumber":38,"author":{"gitId":"RSXIX"},"content":"CommandResult --\u003e SortCommand","lastModifiedDate":"2023-10-27"},{"lineNumber":39,"author":{"gitId":"RSXIX"},"content":"deactivate CommandResult","lastModifiedDate":"2023-10-27"},{"lineNumber":40,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":41,"author":{"gitId":"RSXIX"},"content":"SortCommand -[hidden]-\u003e LogicManager","lastModifiedDate":"2023-10-27"},{"lineNumber":42,"author":{"gitId":"RSXIX"},"content":"SortCommand --\u003e LogicManager","lastModifiedDate":"2023-10-27"},{"lineNumber":43,"author":{"gitId":"RSXIX"},"content":"deactivate SortCommand","lastModifiedDate":"2023-10-27"},{"lineNumber":44,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":45,"author":{"gitId":"RSXIX"},"content":"@enduml","lastModifiedDate":"2023-10-27"}],"authorContributionMap":{"brendanneojw":1,"RSXIX":44}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"cyaoxuan"},"content":"title: InsureIQ","lastModifiedDate":"2023-10-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"cyaoxuan"},"content":"[![CI Status](https://github.com/AY2324S1-CS2103T-W16-3/tp/actions/workflows/gradle.yml/badge.svg)](https://github.com/AY2324S1-CS2103T-W16-3/tp/actions/workflows/gradle.yml)","lastModifiedDate":"2023-10-03"},{"lineNumber":7,"author":{"gitId":"cyaoxuan"},"content":"[![codecov](https://codecov.io/gh/AY2324S1-CS2103T-W16-3/tp/graph/badge.svg?token\u003dDE29JYXOPU)](https://codecov.io/gh/AY2324S1-CS2103T-W16-3/tp)","lastModifiedDate":"2023-10-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"cyaoxuan"},"content":"**InsureIQ is a desktop application for car insurance agents who type fast over CLI and have to keep track of multiple customers\u0027 vehicles with the car insurance policies.** While it has a GUI, most of the user interactions happen using a CLI (Command Line Interface).","lastModifiedDate":"2023-10-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"cyaoxuan"},"content":"* If you are interested in using InsureIQ, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2023-10-03"},{"lineNumber":14,"author":{"gitId":"cyaoxuan"},"content":"* If you are interested about developing InsureIQ, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2023-10-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"-":13,"cyaoxuan":6}},{"path":"docs/team/brendanneojw.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"brendanneojw"},"content":"---","lastModifiedDate":"2023-10-02"},{"lineNumber":2,"author":{"gitId":"brendanneojw"},"content":"layout: page","lastModifiedDate":"2023-10-02"},{"lineNumber":3,"author":{"gitId":"brendanneojw"},"content":"title: Brendan\u0027s Project Portfolio Page","lastModifiedDate":"2023-10-02"},{"lineNumber":4,"author":{"gitId":"brendanneojw"},"content":"---","lastModifiedDate":"2023-10-02"},{"lineNumber":5,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":6,"author":{"gitId":"brendanneojw"},"content":"### Project: InsureIQ","lastModifiedDate":"2023-10-02"},{"lineNumber":7,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":8,"author":{"gitId":"brendanneojw"},"content":"InsureIQ is for car insurance agents who type fast over CLI and have to keep track of multiple customers\u0027 vehicles ","lastModifiedDate":"2023-11-10"},{"lineNumber":9,"author":{"gitId":"brendanneojw"},"content":"with the car insurance policies. The user interacts with it using a CLI, and it has a GUI created with JavaFX.","lastModifiedDate":"2023-11-10"},{"lineNumber":10,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":11,"author":{"gitId":"brendanneojw"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-10-02"},{"lineNumber":12,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":13,"author":{"gitId":"brendanneojw"},"content":"* **New Feature**: Added the ability to `remind` agents of upcoming policy expiry dates","lastModifiedDate":"2023-11-10"},{"lineNumber":14,"author":{"gitId":"brendanneojw"},"content":"  * What it does: Filters and displays the client list according to the specified number of days remaining until each ","lastModifiedDate":"2023-11-10"},{"lineNumber":15,"author":{"gitId":"brendanneojw"},"content":"  client\u0027s policy expiry date, as determined by the agent from the current date","lastModifiedDate":"2023-11-10"},{"lineNumber":16,"author":{"gitId":"brendanneojw"},"content":"  * Justification: This feature will be able to quickly narrow down the list of clients with approaching policy expiry ","lastModifiedDate":"2023-11-10"},{"lineNumber":17,"author":{"gitId":"brendanneojw"},"content":"  date in 1 command","lastModifiedDate":"2023-11-10"},{"lineNumber":18,"author":{"gitId":"brendanneojw"},"content":"  * Highlights:","lastModifiedDate":"2023-11-10"},{"lineNumber":19,"author":{"gitId":"brendanneojw"},"content":"    * The initial implementation does not allow the agents to enter any parameters, so it will only show the clients ","lastModifiedDate":"2023-11-10"},{"lineNumber":20,"author":{"gitId":"brendanneojw"},"content":"    with policy expiry date within the next 30 days","lastModifiedDate":"2023-11-10"},{"lineNumber":21,"author":{"gitId":"brendanneojw"},"content":"    * However, we decided to allow more flexibility for the agents and allow them to specify the number of days ","lastModifiedDate":"2023-11-10"},{"lineNumber":22,"author":{"gitId":"brendanneojw"},"content":"    remaining until each client\u0027s policy expiry date","lastModifiedDate":"2023-11-10"},{"lineNumber":23,"author":{"gitId":"brendanneojw"},"content":"    * Hence, the feature can be used with `remind NUMBER_OF_DAYS` where `NUMBER_OF_DAYS` can only range from 0 to 7305 ","lastModifiedDate":"2023-11-10"},{"lineNumber":24,"author":{"gitId":"brendanneojw"},"content":"    (equivalent to 20 years, the maximum lifespan of a car in Singapore)","lastModifiedDate":"2023-11-10"},{"lineNumber":25,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":26,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":27,"author":{"gitId":"brendanneojw"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2324s1.github.io/tp-dashboard/?search\u003dbrendanneojw\u0026breakdown\u003dtrue)","lastModifiedDate":"2023-10-02"},{"lineNumber":28,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":29,"author":{"gitId":"brendanneojw"},"content":"* **Project management**:","lastModifiedDate":"2023-10-02"},{"lineNumber":30,"author":{"gitId":"brendanneojw"},"content":"  * Team lead role","lastModifiedDate":"2023-11-10"},{"lineNumber":31,"author":{"gitId":"brendanneojw"},"content":"    * Take charge of agendas during group meetings","lastModifiedDate":"2023-11-10"},{"lineNumber":32,"author":{"gitId":"brendanneojw"},"content":"    * Delegate tasks for the week to the team members","lastModifiedDate":"2023-11-10"},{"lineNumber":33,"author":{"gitId":"brendanneojw"},"content":"    * Oversee overall team progress for each week\u0027s tasks","lastModifiedDate":"2023-11-10"},{"lineNumber":34,"author":{"gitId":"brendanneojw"},"content":"    * Resolve any disagreements or conflicts within the team","lastModifiedDate":"2023-11-10"},{"lineNumber":35,"author":{"gitId":"brendanneojw"},"content":"  * Maintained issue tracker in the team\u0027s GitHub repository","lastModifiedDate":"2023-11-10"},{"lineNumber":36,"author":{"gitId":"brendanneojw"},"content":"  * Maintained milestones `v1.2` to `v1.4` (5 milestones) on GitHub","lastModifiedDate":"2023-11-10"},{"lineNumber":37,"author":{"gitId":"brendanneojw"},"content":"  * Managed releases `v1.3(trial)` to `v1.3.1` (2 releases) on GitHub","lastModifiedDate":"2023-11-10"},{"lineNumber":38,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":39,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":40,"author":{"gitId":"brendanneojw"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-10-02"},{"lineNumber":41,"author":{"gitId":"brendanneojw"},"content":"  * Updated the implementation of `find` feature where it previously only find clients by their names","lastModifiedDate":"2023-11-10"},{"lineNumber":42,"author":{"gitId":"brendanneojw"},"content":"    * `find` now requires the prefix to be given to find for different fields","lastModifiedDate":"2023-11-10"},{"lineNumber":43,"author":{"gitId":"brendanneojw"},"content":"      * Basic details: `n/` for Name field, `i/` for NRIC field, `p/` for Contact Number field, `l/` for Licence ","lastModifiedDate":"2023-11-13"},{"lineNumber":44,"author":{"gitId":"brendanneojw"},"content":"      Plate field, `e/` for Email field and `t/` for Tag field","lastModifiedDate":"2023-11-13"},{"lineNumber":45,"author":{"gitId":"brendanneojw"},"content":"      * Policy details: `c/` for Company field, `pn/` for Policy Number field, `pi/` for Policy Issue Date field,","lastModifiedDate":"2023-11-13"},{"lineNumber":46,"author":{"gitId":"brendanneojw"},"content":"      `pe/` for Policy Expiry Date field","lastModifiedDate":"2023-11-13"},{"lineNumber":47,"author":{"gitId":"brendanneojw"},"content":"    * Added 9 more predicates, total of 10 predicates to support this feature","lastModifiedDate":"2023-11-10"},{"lineNumber":48,"author":{"gitId":"brendanneojw"},"content":"  * Updated `find` command such that the values given for each prefix is treated as 1 value rather than separate values","lastModifiedDate":"2023-11-10"},{"lineNumber":49,"author":{"gitId":"brendanneojw"},"content":"    * For example, `find n/Hans Bo` no longer returns clients with names `Hans` or `Bo`, but only clients with names ","lastModifiedDate":"2023-11-10"},{"lineNumber":50,"author":{"gitId":"brendanneojw"},"content":"    `Hans Bo` in it","lastModifiedDate":"2023-11-10"},{"lineNumber":51,"author":{"gitId":"brendanneojw"},"content":"  * Updated `find` command to support partial matching of values","lastModifiedDate":"2023-11-10"},{"lineNumber":52,"author":{"gitId":"brendanneojw"},"content":"    * For example, `find n/Ha` will return all clients with names that has the characters `Ha` in it","lastModifiedDate":"2023-11-10"},{"lineNumber":53,"author":{"gitId":"brendanneojw"},"content":"  * Updated the storage file name from `addressbook.json` to `insureiq.json`","lastModifiedDate":"2023-11-10"},{"lineNumber":54,"author":{"gitId":"brendanneojw"},"content":"  * Updated the URL given in the help window from the `help` feature to reflect the team\u0027s ","lastModifiedDate":"2023-11-10"},{"lineNumber":55,"author":{"gitId":"brendanneojw"},"content":"  [User Guide](https://ay2324s1-cs2103t-w16-3.github.io/tp/UserGuide.html)","lastModifiedDate":"2023-11-10"},{"lineNumber":56,"author":{"gitId":"brendanneojw"},"content":"  * Updated the display of `PersonCard` for the policy details","lastModifiedDate":"2023-11-10"},{"lineNumber":57,"author":{"gitId":"brendanneojw"},"content":"  * Constantly updates the version number in `MainApp.java` to correctly reflect the version of `insureiq.jar`","lastModifiedDate":"2023-11-10"},{"lineNumber":58,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":59,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":60,"author":{"gitId":"brendanneojw"},"content":"* **Documentation**:","lastModifiedDate":"2023-10-02"},{"lineNumber":61,"author":{"gitId":"brendanneojw"},"content":"  * User Guide:","lastModifiedDate":"2023-10-02"},{"lineNumber":62,"author":{"gitId":"brendanneojw"},"content":"    * Replaced all occurrences of `person` to `client` to better suit our target users","lastModifiedDate":"2023-11-10"},{"lineNumber":63,"author":{"gitId":"brendanneojw"},"content":"    * Replaced all occurrences of `addressbook.jar` to `insureiq.jar`","lastModifiedDate":"2023-11-10"},{"lineNumber":64,"author":{"gitId":"brendanneojw"},"content":"    * Added documentation for the features `find` and `remind`","lastModifiedDate":"2023-11-10"},{"lineNumber":65,"author":{"gitId":"brendanneojw"},"content":"  * Developer Guide:","lastModifiedDate":"2023-10-02"},{"lineNumber":66,"author":{"gitId":"brendanneojw"},"content":"    * Added implementation details of the `remind` feature","lastModifiedDate":"2023-11-10"},{"lineNumber":67,"author":{"gitId":"brendanneojw"},"content":"    * Added sequence diagram and activity to illustrate the flow for `remind` feature","lastModifiedDate":"2023-11-10"},{"lineNumber":68,"author":{"gitId":"brendanneojw"},"content":"    * Added in _User Stories_ in **Appendix: Requirements** section","lastModifiedDate":"2023-11-10"},{"lineNumber":69,"author":{"gitId":"brendanneojw"},"content":"    * Added **Appendix: Planned Enhancements** section","lastModifiedDate":"2023-11-13"},{"lineNumber":70,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":71,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":72,"author":{"gitId":"brendanneojw"},"content":"* **Community**:","lastModifiedDate":"2023-10-02"},{"lineNumber":73,"author":{"gitId":"brendanneojw"},"content":"  * PRs reviewed (with non-trivial comments): [\\#67](https://github.com/AY2324S1-CS2103T-W16-3/tp/pull/67), [\\#75](https://github.com/AY2324S1-CS2103T-W16-3/tp/pull/75), ","lastModifiedDate":"2023-11-10"},{"lineNumber":74,"author":{"gitId":"brendanneojw"},"content":"  [\\#81](https://github.com/AY2324S1-CS2103T-W16-3/tp/pull/81), [\\#89](https://github.com/AY2324S1-CS2103T-W16-3/tp/pull/89), [\\#92](https://github.com/AY2324S1-CS2103T-W16-3/tp/pull/92),","lastModifiedDate":"2023-11-10"},{"lineNumber":75,"author":{"gitId":"brendanneojw"},"content":"  [\\#98](https://github.com/AY2324S1-CS2103T-W16-3/tp/pull/98), [\\#110](https://github.com/AY2324S1-CS2103T-W16-3/tp/pull/110), [\\#129](https://github.com/AY2324S1-CS2103T-W16-3/tp/pull/129),","lastModifiedDate":"2023-11-10"},{"lineNumber":76,"author":{"gitId":"brendanneojw"},"content":"  [\\#143](https://github.com/AY2324S1-CS2103T-W16-3/tp/pull/143), [\\#199](https://github.com/AY2324S1-CS2103T-W16-3/tp/pull/199), [\\#204](https://github.com/AY2324S1-CS2103T-W16-3/tp/pull/204)","lastModifiedDate":"2023-11-10"},{"lineNumber":77,"author":{"gitId":"brendanneojw"},"content":"  * Contributed to verbal discussions during tutorial sessions","lastModifiedDate":"2023-11-10"},{"lineNumber":78,"author":{"gitId":"brendanneojw"},"content":"  * Reported 12 [bugs and suggestions](https://github.com/brendanneojw/ped/issues) for another team during the PE dry run","lastModifiedDate":"2023-11-10"},{"lineNumber":79,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":80,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":81,"author":{"gitId":"brendanneojw"},"content":"* **Tools**:","lastModifiedDate":"2023-10-02"},{"lineNumber":82,"author":{"gitId":"brendanneojw"},"content":"  * JavaFX for design of InsureIQ GUI","lastModifiedDate":"2023-11-10"}],"authorContributionMap":{"brendanneojw":82}},{"path":"docs/team/cyaoxuan.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"cyaoxuan"},"content":"---","lastModifiedDate":"2023-10-02"},{"lineNumber":2,"author":{"gitId":"cyaoxuan"},"content":"layout: page","lastModifiedDate":"2023-10-02"},{"lineNumber":3,"author":{"gitId":"cyaoxuan"},"content":"title: Yao Xuan\u0027s Project Portfolio Page","lastModifiedDate":"2023-10-02"},{"lineNumber":4,"author":{"gitId":"cyaoxuan"},"content":"---","lastModifiedDate":"2023-10-02"},{"lineNumber":5,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":6,"author":{"gitId":"cyaoxuan"},"content":"### Project: InsureIQ","lastModifiedDate":"2023-10-02"},{"lineNumber":7,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":8,"author":{"gitId":"cyaoxuan"},"content":"InsureIQ is for car insurance agents who type fast over CLI and have to keep track of multiple customers\u0027 vehicles with the car insurance policies. ","lastModifiedDate":"2023-10-02"},{"lineNumber":9,"author":{"gitId":"cyaoxuan"},"content":"The user interacts with it using a CLI, and it has a GUI created with JavaFX.","lastModifiedDate":"2023-10-02"},{"lineNumber":10,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":11,"author":{"gitId":"cyaoxuan"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-10-02"},{"lineNumber":12,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":13,"author":{"gitId":"cyaoxuan"},"content":"* **New Feature**: Added the ability to add remarks to person","lastModifiedDate":"2023-11-09"},{"lineNumber":14,"author":{"gitId":"cyaoxuan"},"content":"  * What it does: Allows the user to add comments / remarks to a client to remember special notes related to them","lastModifiedDate":"2023-11-09"},{"lineNumber":15,"author":{"gitId":"cyaoxuan"},"content":"  * Justification: This feature is useful to car insurance agents who have a large client base as they can better personalise their client engagement based on certain characteristics clients have (e.g. \"prefers policies with longer coverage\")","lastModifiedDate":"2023-11-09"},{"lineNumber":16,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":17,"author":{"gitId":"cyaoxuan"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2324s1.github.io/tp-dashboard/?search\u003dcyaoxuan\u0026breakdown\u003dtrue)","lastModifiedDate":"2023-11-13"},{"lineNumber":18,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":19,"author":{"gitId":"cyaoxuan"},"content":"* **Project management**:","lastModifiedDate":"2023-11-13"},{"lineNumber":20,"author":{"gitId":"cyaoxuan"},"content":"  * Assigned issues to the team and manage milestones in `v1.1` and `v1.4`","lastModifiedDate":"2023-11-13"},{"lineNumber":21,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":22,"author":{"gitId":"cyaoxuan"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-10-02"},{"lineNumber":23,"author":{"gitId":"cyaoxuan"},"content":"  * Extended the current `Model` to include more information to model the car insurance context","lastModifiedDate":"2023-11-09"},{"lineNumber":24,"author":{"gitId":"cyaoxuan"},"content":"    * New attributes in `Person` class: NRIC, licence plate, remark, policy","lastModifiedDate":"2023-11-09"},{"lineNumber":25,"author":{"gitId":"cyaoxuan"},"content":"    * New `Policy` class: company, policy number, policy date (encapsulates issue and expiry date)","lastModifiedDate":"2023-11-09"},{"lineNumber":26,"author":{"gitId":"cyaoxuan"},"content":"  * Handled exceptions for `find` command that came from functionality changes to search by other fields","lastModifiedDate":"2023-11-09"},{"lineNumber":27,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":28,"author":{"gitId":"cyaoxuan"},"content":"* **Documentation**:","lastModifiedDate":"2023-10-02"},{"lineNumber":29,"author":{"gitId":"cyaoxuan"},"content":"  * User Guide:","lastModifiedDate":"2023-10-02"},{"lineNumber":30,"author":{"gitId":"cyaoxuan"},"content":"    * Added documentation for `remark` feature","lastModifiedDate":"2023-11-09"},{"lineNumber":31,"author":{"gitId":"cyaoxuan"},"content":"    * Checked through format and content","lastModifiedDate":"2023-11-13"},{"lineNumber":32,"author":{"gitId":"cyaoxuan"},"content":"  * Developer Guide:","lastModifiedDate":"2023-10-02"},{"lineNumber":33,"author":{"gitId":"cyaoxuan"},"content":"    * Added implementation for `remark` feature","lastModifiedDate":"2023-11-09"},{"lineNumber":34,"author":{"gitId":"cyaoxuan"},"content":"    * Extended documentation for the `Model` component on the new attributes added and design considerations","lastModifiedDate":"2023-11-13"},{"lineNumber":35,"author":{"gitId":"cyaoxuan"},"content":"    * Add use cases for features in MVP (UC1 - 5)","lastModifiedDate":"2023-11-13"},{"lineNumber":36,"author":{"gitId":"cyaoxuan"},"content":"    * Extend glossary","lastModifiedDate":"2023-11-13"},{"lineNumber":37,"author":{"gitId":"cyaoxuan"},"content":"    * Add Appendix: Effort section","lastModifiedDate":"2023-11-13"},{"lineNumber":38,"author":{"gitId":"cyaoxuan"},"content":"    * Checked through format and content","lastModifiedDate":"2023-11-13"},{"lineNumber":39,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":40,"author":{"gitId":"cyaoxuan"},"content":"* **Community**:","lastModifiedDate":"2023-11-09"},{"lineNumber":41,"author":{"gitId":"KumChaiYin"},"content":"  * PRs reviewed (with non-trivial comments): [\\#74](https://github.com/AY2324S1-CS2103T-W16-3/tp/pull/74), [\\#77](https://github.com/AY2324S1-CS2103T-W16-3/tp/pull/77)","lastModifiedDate":"2023-11-10"},{"lineNumber":42,"author":{"gitId":"cyaoxuan"},"content":"  * Had the role of a \"Git expert\" in the team, and guided the team on how to use the Git CLI and forking workflow ","lastModifiedDate":"2023-11-09"}],"authorContributionMap":{"KumChaiYin":1,"cyaoxuan":41}},{"path":"docs/team/kumchaiyin.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"KumChaiYin"},"content":"---","lastModifiedDate":"2023-10-02"},{"lineNumber":2,"author":{"gitId":"KumChaiYin"},"content":"layout: page","lastModifiedDate":"2023-10-02"},{"lineNumber":3,"author":{"gitId":"KumChaiYin"},"content":"title: Kum Chai Yin\u0027s Project Portfolio Page","lastModifiedDate":"2023-10-02"},{"lineNumber":4,"author":{"gitId":"KumChaiYin"},"content":"---","lastModifiedDate":"2023-10-02"},{"lineNumber":5,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":6,"author":{"gitId":"KumChaiYin"},"content":"### Project: InsureIQ","lastModifiedDate":"2023-10-02"},{"lineNumber":7,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":8,"author":{"gitId":"KumChaiYin"},"content":"InsureIQ is for car insurance agents who type fast over CLI and have to keep track of multiple customers\u0027 vehicles ","lastModifiedDate":"2023-11-10"},{"lineNumber":9,"author":{"gitId":"KumChaiYin"},"content":"with the car insurance policies. The user interacts with it using a CLI, and it has a GUI created with JavaFX.","lastModifiedDate":"2023-11-10"},{"lineNumber":10,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":11,"author":{"gitId":"KumChaiYin"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-10-02"},{"lineNumber":12,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":13,"author":{"gitId":"KumChaiYin"},"content":"* **New Feature**: Added the ability to `batchdelete` clients with given condition.","lastModifiedDate":"2023-11-10"},{"lineNumber":14,"author":{"gitId":"KumChaiYin"},"content":"  * What it does: Allows the agent to batch delete clients whose policy expiry date in a specific month or policy purchased from a specific company  ","lastModifiedDate":"2023-11-10"},{"lineNumber":15,"author":{"gitId":"KumChaiYin"},"content":"  * Justification: This feature will be useful for a car insurance agent to manage client list in the following scenario:","lastModifiedDate":"2023-11-10"},{"lineNumber":16,"author":{"gitId":"KumChaiYin"},"content":"    * The agent want to delete all clients whose policy expiry date in a specific month. ","lastModifiedDate":"2023-11-10"},{"lineNumber":17,"author":{"gitId":"KumChaiYin"},"content":"      For example, clients whose policy expiry date is 6 months; this indicates that they chose not to have this ","lastModifiedDate":"2023-11-10"},{"lineNumber":18,"author":{"gitId":"KumChaiYin"},"content":"      agent assist them in renewing their car insurance.","lastModifiedDate":"2023-11-10"},{"lineNumber":19,"author":{"gitId":"KumChaiYin"},"content":"    * The agent no longer work for a specific insurance company.","lastModifiedDate":"2023-11-10"},{"lineNumber":20,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":21,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":22,"author":{"gitId":"KumChaiYin"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2324s1.github.io/tp-dashboard/?search\u003dKumChaiYin\u0026breakdown\u003dtrue)","lastModifiedDate":"2023-10-02"},{"lineNumber":23,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":24,"author":{"gitId":"KumChaiYin"},"content":"* **Project management**:","lastModifiedDate":"2023-10-02"},{"lineNumber":25,"author":{"gitId":"KumChaiYin"},"content":"  * Documentation role","lastModifiedDate":"2023-11-10"},{"lineNumber":26,"author":{"gitId":"KumChaiYin"},"content":"    * Ensured the quality of various project documents","lastModifiedDate":"2023-11-10"},{"lineNumber":27,"author":{"gitId":"KumChaiYin"},"content":"    * Standardised the format and structure of project documents","lastModifiedDate":"2023-11-10"},{"lineNumber":28,"author":{"gitId":"KumChaiYin"},"content":"  * Did the UI mockup of our intended final product","lastModifiedDate":"2023-11-10"},{"lineNumber":29,"author":{"gitId":"KumChaiYin"},"content":"  * Took the initiative to modify sequence diagram in DG","lastModifiedDate":"2023-11-10"},{"lineNumber":30,"author":{"gitId":"KumChaiYin"},"content":"    * Used ref frame to break complicated sequence diagram into two parts","lastModifiedDate":"2023-11-10"},{"lineNumber":31,"author":{"gitId":"KumChaiYin"},"content":"  * Prepared pdf files of UG and DG, and ensured their quality.","lastModifiedDate":"2023-11-14"},{"lineNumber":32,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":33,"author":{"gitId":"KumChaiYin"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-10-02"},{"lineNumber":34,"author":{"gitId":"KumChaiYin"},"content":"  * Extended the current `add` command to deal with the updated `Person` fields as listed below.","lastModifiedDate":"2023-11-10"},{"lineNumber":35,"author":{"gitId":"KumChaiYin"},"content":"    * New attributes in `Person` class: NRIC, Licence plate, Policy","lastModifiedDate":"2023-11-10"},{"lineNumber":36,"author":{"gitId":"KumChaiYin"},"content":"    * New `Policy` class: Company, Policy number, Policy date (encapsulates issue and expiry date)","lastModifiedDate":"2023-11-10"},{"lineNumber":37,"author":{"gitId":"KumChaiYin"},"content":"  * Introduced flexible `add` command, user can choose to:","lastModifiedDate":"2023-11-10"},{"lineNumber":38,"author":{"gitId":"KumChaiYin"},"content":"    * Add a client\u0027s details without a policy or with complete policy details","lastModifiedDate":"2023-11-10"},{"lineNumber":39,"author":{"gitId":"KumChaiYin"},"content":"  * Extended the Model interface to include an abstract method `batchDeleteWithPredicate`:","lastModifiedDate":"2023-11-10"},{"lineNumber":40,"author":{"gitId":"KumChaiYin"},"content":"    * This method is designed to delete all clients from the list who satisfy the give predicate","lastModifiedDate":"2023-11-10"},{"lineNumber":41,"author":{"gitId":"KumChaiYin"},"content":"    * The `ModelManager` class implements this method","lastModifiedDate":"2023-11-10"},{"lineNumber":42,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":43,"author":{"gitId":"KumChaiYin"},"content":"* **Documentation**:","lastModifiedDate":"2023-10-02"},{"lineNumber":44,"author":{"gitId":"KumChaiYin"},"content":"  * User Guide:","lastModifiedDate":"2023-10-02"},{"lineNumber":45,"author":{"gitId":"KumChaiYin"},"content":"    * Updated documentation for `add` command.","lastModifiedDate":"2023-11-10"},{"lineNumber":46,"author":{"gitId":"KumChaiYin"},"content":"    * Added documentation for `batchdelete` command.","lastModifiedDate":"2023-11-10"},{"lineNumber":47,"author":{"gitId":"KumChaiYin"},"content":"  * Developer Guide:","lastModifiedDate":"2023-10-02"},{"lineNumber":48,"author":{"gitId":"KumChaiYin"},"content":"    * Added implementation for `batchdelete` command.","lastModifiedDate":"2023-11-10"},{"lineNumber":49,"author":{"gitId":"KumChaiYin"},"content":"    * Updated **Use cases** section.","lastModifiedDate":"2023-11-13"},{"lineNumber":50,"author":{"gitId":"KumChaiYin"},"content":"      * Updated UC1 - 5","lastModifiedDate":"2023-11-13"},{"lineNumber":51,"author":{"gitId":"KumChaiYin"},"content":"      * Add UC6 - 10","lastModifiedDate":"2023-11-13"},{"lineNumber":52,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":53,"author":{"gitId":"KumChaiYin"},"content":"* **Community**:","lastModifiedDate":"2023-10-02"},{"lineNumber":54,"author":{"gitId":"KumChaiYin"},"content":"  * PRs reviewed (with non-trivial comments): [#81](https://github.com/AY2324S1-CS2103T-W16-3/tp/pull/81), [#122](https://github.com/AY2324S1-CS2103T-W16-3/tp/pull/122)","lastModifiedDate":"2023-11-10"},{"lineNumber":55,"author":{"gitId":"KumChaiYin"},"content":"  * Had the role of a \"Documentation\" in the team, maintained the quality of various project documents.","lastModifiedDate":"2023-11-10"}],"authorContributionMap":{"KumChaiYin":55}},{"path":"docs/team/rsxix.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"RSXIX"},"content":"---","lastModifiedDate":"2023-10-03"},{"lineNumber":2,"author":{"gitId":"RSXIX"},"content":"layout: page","lastModifiedDate":"2023-10-03"},{"lineNumber":3,"author":{"gitId":"RSXIX"},"content":"title: Rohan Sapra\u0027s Project Portfolio Page","lastModifiedDate":"2023-10-03"},{"lineNumber":4,"author":{"gitId":"RSXIX"},"content":"---","lastModifiedDate":"2023-10-03"},{"lineNumber":5,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":6,"author":{"gitId":"RSXIX"},"content":"### Project: InsureIQ","lastModifiedDate":"2023-10-03"},{"lineNumber":7,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":8,"author":{"gitId":"RSXIX"},"content":"InsureIQ is for car insurance agents who type fast over CLI and have to keep track of multiple customers\u0027 vehicles with the car insurance policies.","lastModifiedDate":"2023-10-03"},{"lineNumber":9,"author":{"gitId":"RSXIX"},"content":"The user interacts with it using a CLI, and it has a GUI created with JavaFX.","lastModifiedDate":"2023-10-03"},{"lineNumber":10,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":11,"author":{"gitId":"RSXIX"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-10-03"},{"lineNumber":12,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":13,"author":{"gitId":"RSXIX"},"content":"* **New Feature**: Added the ability to `sort` the client list.","lastModifiedDate":"2023-11-10"},{"lineNumber":14,"author":{"gitId":"KumChaiYin"},"content":"    * What it does: Allows the user to `sort` clients based on their policy expiry date, from those expiring earliest to those without policy data.","lastModifiedDate":"2023-11-13"},{"lineNumber":15,"author":{"gitId":"RSXIX"},"content":"    * Justification: The feature is useful to car insurance agents who will want to know which policies expiry fast so they can respond appropiately and not risk losing their business.","lastModifiedDate":"2023-11-10"},{"lineNumber":16,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":17,"author":{"gitId":"RSXIX"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2324s1.github.io/tp-dashboard/?search\u003dRSXIX\u0026breakdown\u003dtrue)","lastModifiedDate":"2023-10-03"},{"lineNumber":18,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":19,"author":{"gitId":"RSXIX"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-10-03"},{"lineNumber":20,"author":{"gitId":"RSXIX"},"content":"    * Throw exceptions for incomplete `add` and `edit` features, specifying the missing parameters.","lastModifiedDate":"2023-11-10"},{"lineNumber":21,"author":{"gitId":"RSXIX"},"content":"    * Throw exceptions for `delete` feature with erroneous index number.","lastModifiedDate":"2023-11-10"},{"lineNumber":22,"author":{"gitId":"RSXIX"},"content":"    * Add checks in the `Policy` class so that policy expiry date must fall after issue date.","lastModifiedDate":"2023-11-10"},{"lineNumber":23,"author":{"gitId":"RSXIX"},"content":"    * Allow duplicate names in `Person` class as long as there is another attribute that does not resemble the existing list of persons in the client list.","lastModifiedDate":"2023-11-10"},{"lineNumber":24,"author":{"gitId":"RSXIX"},"content":"    * Disallow policy numbers from being reused in the `Policy` class.","lastModifiedDate":"2023-11-10"},{"lineNumber":25,"author":{"gitId":"RSXIX"},"content":"    * Change `edit` for complete policies to be reverted to default policy if any policy parameter is made to the default value.","lastModifiedDate":"2023-11-13"},{"lineNumber":26,"author":{"gitId":"RSXIX"},"content":"    * Added tests for DeleteCommand, DeleteCommandParser, SortCommand, SortCommandParser, Person, Policy and PolicyExpirationDateComparator classes.","lastModifiedDate":"2023-11-13"},{"lineNumber":27,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":28,"author":{"gitId":"RSXIX"},"content":"* **Documentation**:","lastModifiedDate":"2023-10-03"},{"lineNumber":29,"author":{"gitId":"RSXIX"},"content":"    * User Guide:","lastModifiedDate":"2023-10-03"},{"lineNumber":30,"author":{"gitId":"RSXIX"},"content":"        * Added documentation for the `sort` feature.","lastModifiedDate":"2023-11-10"},{"lineNumber":31,"author":{"gitId":"RSXIX"},"content":"    * Developer Guide:","lastModifiedDate":"2023-10-03"},{"lineNumber":32,"author":{"gitId":"RSXIX"},"content":"        * Added implementation for the `sort` feature.","lastModifiedDate":"2023-11-13"},{"lineNumber":33,"author":{"gitId":"RSXIX"},"content":"        * Added manual testing guidance.","lastModifiedDate":"2023-11-13"},{"lineNumber":34,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":35,"author":{"gitId":"RSXIX"},"content":"* **Project management**:","lastModifiedDate":"2023-11-10"},{"lineNumber":36,"author":{"gitId":"RSXIX"},"content":"    * Added issues for exceptions in the `add` and `edit` features.","lastModifiedDate":"2023-11-10"},{"lineNumber":37,"author":{"gitId":"RSXIX"},"content":"    * Assigned a few issues in v1.3.","lastModifiedDate":"2023-11-10"},{"lineNumber":38,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":39,"author":{"gitId":"RSXIX"},"content":"* **Community**:","lastModifiedDate":"2023-10-03"},{"lineNumber":40,"author":{"gitId":"KumChaiYin"},"content":"    * PRs reviewed (with non-trivial comments) : [\\#106](https://github.com/AY2324S1-CS2103T-W16-3/tp/pull/106)","lastModifiedDate":"2023-11-10"},{"lineNumber":41,"author":{"gitId":"RSXIX"},"content":"    * Had the responsibility \"Testing\" in the team, and helped implement and oversee error handling.","lastModifiedDate":"2023-11-10"},{"lineNumber":42,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":43,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-10-03"}],"authorContributionMap":{"RSXIX":41,"KumChaiYin":2}},{"path":"docs/team/suryanshkushwaha.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"suryanshkushwaha"},"content":"---","lastModifiedDate":"2023-10-02"},{"lineNumber":2,"author":{"gitId":"suryanshkushwaha"},"content":"layout: page","lastModifiedDate":"2023-10-02"},{"lineNumber":3,"author":{"gitId":"suryanshkushwaha"},"content":"title: Suryansh Kushwaha\u0027s Project Portfolio Page","lastModifiedDate":"2023-10-02"},{"lineNumber":4,"author":{"gitId":"suryanshkushwaha"},"content":"---","lastModifiedDate":"2023-10-02"},{"lineNumber":5,"author":{"gitId":"suryanshkushwaha"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":6,"author":{"gitId":"suryanshkushwaha"},"content":"### Project: InsureIQ","lastModifiedDate":"2023-10-02"},{"lineNumber":7,"author":{"gitId":"suryanshkushwaha"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":8,"author":{"gitId":"suryanshkushwaha"},"content":"InsureIQ is for car insurance agents who type fast over CLI and have to keep track of multiple customers\u0027 vehicles with the car insurance policies.","lastModifiedDate":"2023-10-02"},{"lineNumber":9,"author":{"gitId":"suryanshkushwaha"},"content":"The user interacts with it using a CLI, and it has a GUI created with JavaFX.","lastModifiedDate":"2023-10-02"},{"lineNumber":10,"author":{"gitId":"suryanshkushwaha"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":11,"author":{"gitId":"suryanshkushwaha"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-10-02"},{"lineNumber":12,"author":{"gitId":"suryanshkushwaha"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":13,"author":{"gitId":"suryanshkushwaha"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2324s1.github.io/tp-dashboard/?search\u003dsuryanshkushwaha\u0026breakdown\u003dtrue)","lastModifiedDate":"2023-10-02"},{"lineNumber":14,"author":{"gitId":"suryanshkushwaha"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":15,"author":{"gitId":"suryanshkushwaha"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":16,"author":{"gitId":"suryanshkushwaha"},"content":"* **New Feature**: Added the `Company` field to the `Policy` class.","lastModifiedDate":"2023-11-10"},{"lineNumber":17,"author":{"gitId":"suryanshkushwaha"},"content":"  * What it does: Allows the user to add the company name to the policy.","lastModifiedDate":"2023-11-10"},{"lineNumber":18,"author":{"gitId":"suryanshkushwaha"},"content":"  * Justification: This feature allows the car insurance agent to add the company name to the policy, allowing him to handle multiple company clients efficiently.","lastModifiedDate":"2023-11-10"},{"lineNumber":19,"author":{"gitId":"suryanshkushwaha"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":20,"author":{"gitId":"suryanshkushwaha"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":21,"author":{"gitId":"suryanshkushwaha"},"content":"* **Project management**:","lastModifiedDate":"2023-10-02"},{"lineNumber":22,"author":{"gitId":"suryanshkushwaha"},"content":"  * Responsible for the qualify of code and ensuring that the code is up to the standards, in the created PRs.","lastModifiedDate":"2023-11-10"},{"lineNumber":23,"author":{"gitId":"suryanshkushwaha"},"content":"  * Releasing of the final Jar file (v1.4) for the project.","lastModifiedDate":"2023-11-14"},{"lineNumber":24,"author":{"gitId":"suryanshkushwaha"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":25,"author":{"gitId":"suryanshkushwaha"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":26,"author":{"gitId":"suryanshkushwaha"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-10-02"},{"lineNumber":27,"author":{"gitId":"suryanshkushwaha"},"content":"  * Extended the current `edit` command to deal with the updated `Person` fields as listed below.","lastModifiedDate":"2023-11-10"},{"lineNumber":28,"author":{"gitId":"suryanshkushwaha"},"content":"    * New attributes in `Person` class: NRIC, Licence plate, Remark, Policy","lastModifiedDate":"2023-11-10"},{"lineNumber":29,"author":{"gitId":"suryanshkushwaha"},"content":"    * New `Policy` class: Company, Policy number, Policy date (encapsulates issue and expiry date)","lastModifiedDate":"2023-11-10"},{"lineNumber":30,"author":{"gitId":"suryanshkushwaha"},"content":"  * Handled exceptions for `edit` command","lastModifiedDate":"2023-11-10"},{"lineNumber":31,"author":{"gitId":"suryanshkushwaha"},"content":"    * Updated and added test cases for the same.","lastModifiedDate":"2023-11-10"},{"lineNumber":32,"author":{"gitId":"suryanshkushwaha"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":33,"author":{"gitId":"suryanshkushwaha"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":34,"author":{"gitId":"suryanshkushwaha"},"content":"* **Documentation**:","lastModifiedDate":"2023-10-02"},{"lineNumber":35,"author":{"gitId":"suryanshkushwaha"},"content":"  * User Guide:","lastModifiedDate":"2023-10-02"},{"lineNumber":36,"author":{"gitId":"suryanshkushwaha"},"content":"    * Added documentation for `edit` command.","lastModifiedDate":"2023-11-10"},{"lineNumber":37,"author":{"gitId":"suryanshkushwaha"},"content":"  * Developer Guide:","lastModifiedDate":"2023-10-02"},{"lineNumber":38,"author":{"gitId":"suryanshkushwaha"},"content":"    * Added implementation for `edit` command.","lastModifiedDate":"2023-11-10"},{"lineNumber":39,"author":{"gitId":"suryanshkushwaha"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":40,"author":{"gitId":"suryanshkushwaha"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":41,"author":{"gitId":"suryanshkushwaha"},"content":"* **Community**:","lastModifiedDate":"2023-11-10"},{"lineNumber":42,"author":{"gitId":"KumChaiYin"},"content":"  * PRs reviewed (with non-trivial comments): [#93](https://github.com/AY2324S1-CS2103T-W16-3/tp/pull/93), [#99](https://github.com/AY2324S1-CS2103T-W16-3/tp/pull/99)","lastModifiedDate":"2023-11-10"},{"lineNumber":43,"author":{"gitId":"suryanshkushwaha"},"content":"  * Had the role of a \"Code Quality\" in the team, and guided the team on how to write good code and how to maintain the code quality.","lastModifiedDate":"2023-11-10"}],"authorContributionMap":{"suryanshkushwaha":42,"KumChaiYin":1}},{"path":"docs/tutorials/AddRemark.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Adding a command\"","lastModifiedDate":"2020-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Let\u0027s walk you through the implementation of a new command — `remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"This command allows users of the AddressBook application to add optional remarks to people in their address book and edit it if required. The command should have the following format:","lastModifiedDate":"2020-07-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"`remark INDEX r/REMARK` (e.g., `remark 2 r/Likes baseball`)","lastModifiedDate":"2020-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"We’ll assume that you have already set up the development environment as outlined in the Developer’s Guide.","lastModifiedDate":"2020-07-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Create a new `remark` command","lastModifiedDate":"2020-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Looking in the `logic.command` package, you will notice that each existing command have their own class. All the commands inherit from the abstract class `Command` which means that they must override `execute()`. Each `Command` returns an instance of `CommandResult` upon success and `CommandResult#feedbackToUser` is printed to the `ResultDisplay`.","lastModifiedDate":"2020-07-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Let’s start by creating a new `RemarkCommand` class in the `src/main/java/seedu/address/logic/command` directory.","lastModifiedDate":"2020-07-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"For now, let’s keep `RemarkCommand` as simple as possible and print some output. We accomplish that by returning a `CommandResult` with an accompanying message.","lastModifiedDate":"2020-07-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2020-07-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2020-07-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Changes the remark of an existing person in the address book.","lastModifiedDate":"2020-07-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"remark\";","lastModifiedDate":"2020-07-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2020-07-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return new CommandResult(\"Hello from remark\");","lastModifiedDate":"2020-07-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"### Hook `RemarkCommand` into the application","lastModifiedDate":"2020-07-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"Now that we have our `RemarkCommand` ready to be executed, we need to update `AddressBookParser#parseCommand()` to recognize the `remark` keyword. Add the new command to the `switch` block by creating a new `case` that returns a new instance of `RemarkCommand`.","lastModifiedDate":"2020-07-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"You can refer to the changes in this [diff](https://github.com/se-edu/addressbook-level3/commit/35eb7286f18a029d39cb7a29df8f172a001e4fd8#diff-399c284cb892c20b7c04a69116fcff6ccc0666c5230a1db8e4a9145def8fa4ee).","lastModifiedDate":"2022-01-02"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"### Run the application","lastModifiedDate":"2020-07-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"Run `Main#main` and try out your new `RemarkCommand`. If everything went well, you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"![Output displayed](../images/add-remark/RemarkHello.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"## Change `RemarkCommand` to throw an exception","lastModifiedDate":"2020-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"While we have successfully printed a message to `ResultDisplay`, the command does not do what it is supposed to do. Let’s change the command to throw a `CommandException` to accurately reflect that our command is still a work in progress.","lastModifiedDate":"2020-12-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"![The relationship between RemarkCommand and Command](../images/add-remark/RemarkCommandClass.png)","lastModifiedDate":"2023-09-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"Following the convention in other commands, we add relevant messages as constants and use them.","lastModifiedDate":"2020-07-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-08-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            + \": Edits the remark of the person identified \"","lastModifiedDate":"2021-08-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            + \"by the index number used in the last person listing. \"","lastModifiedDate":"2020-07-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            + \"Existing remark will be overwritten by the input.\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2020-07-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            + \"r/ [REMARK]\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2020-07-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            + \"r/ Likes to swim.\";","lastModifiedDate":"2020-07-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_IMPLEMENTED_YET \u003d","lastModifiedDate":"2021-08-01"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            \"Remark command not implemented yet\";","lastModifiedDate":"2021-08-01"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        throw new CommandException(MESSAGE_NOT_IMPLEMENTED_YET);","lastModifiedDate":"2020-07-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"## Enhancing `RemarkCommand`","lastModifiedDate":"2020-07-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` to parse input from the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"### Make the command accept parameters","lastModifiedDate":"2020-07-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"We start by modifying the constructor of `RemarkCommand` to accept an `Index` and a `String`. While we are at it, let’s change the error message to echo the values. While this is not a replacement for tests, it is an obvious way to tell if our code is functioning as intended.","lastModifiedDate":"2020-07-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":94,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2020-07-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ARGUMENTS \u003d \"Index: %1$d, Remark: %2$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private final String remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit the remark","lastModifiedDate":"2020-07-29"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * @param remark of the person to be updated to","lastModifiedDate":"2020-07-29"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public RemarkCommand(Index index, String remark) {","lastModifiedDate":"2020-07-29"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        requireAllNonNull(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2020-07-29"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        throw new CommandException(","lastModifiedDate":"2021-08-01"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_ARGUMENTS, index.getOneBased(), remark));","lastModifiedDate":"2021-08-01"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2020-07-29"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2020-07-29"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2020-07-29"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2020-07-29"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        if (!(other instanceof RemarkCommand)) {","lastModifiedDate":"2020-07-29"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2020-07-29"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        RemarkCommand e \u003d (RemarkCommand) other;","lastModifiedDate":"2020-07-29"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2020-07-29"},{"lineNumber":132,"author":{"gitId":"-"},"content":"                \u0026\u0026 remark.equals(e.remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":135,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":137,"author":{"gitId":"-"},"content":"Your code should look something like [this](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-a8e35af8f9c251525063fae36c9852922a7e7195763018eacec60f3a4d87c594) after you are done.","lastModifiedDate":"2022-01-02"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":139,"author":{"gitId":"-"},"content":"### Parse user input","lastModifiedDate":"2020-07-29"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":141,"author":{"gitId":"-"},"content":"Now let’s move on to writing a parser that will extract the index and remark from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":143,"author":{"gitId":"-"},"content":"Create a `RemarkCommandParser` class in the `seedu.address.logic.parser` package. The class must extend the `Parser` interface.","lastModifiedDate":"2020-07-29"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":145,"author":{"gitId":"-"},"content":"![The relationship between Parser and RemarkCommandParser](../images/add-remark/RemarkCommandParserClass.png)","lastModifiedDate":"2023-09-12"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":147,"author":{"gitId":"-"},"content":"Thankfully, `ArgumentTokenizer#tokenize()` makes it trivial to parse user input. Let’s take a look at the JavaDoc provided for the function to understand what it does.","lastModifiedDate":"2020-07-29"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":149,"author":{"gitId":"-"},"content":"**`ArgumentTokenizer.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":151,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":152,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":153,"author":{"gitId":"-"},"content":" * Tokenizes an arguments string and returns an {@code ArgumentMultimap}","lastModifiedDate":"2020-07-29"},{"lineNumber":154,"author":{"gitId":"-"},"content":" * object that maps prefixes to their respective argument values. Only the","lastModifiedDate":"2020-07-29"},{"lineNumber":155,"author":{"gitId":"-"},"content":" * given prefixes will be recognized in the arguments string.","lastModifiedDate":"2020-07-29"},{"lineNumber":156,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2020-07-29"},{"lineNumber":157,"author":{"gitId":"-"},"content":" * @param argsString Arguments string of the form:","lastModifiedDate":"2020-07-29"},{"lineNumber":158,"author":{"gitId":"-"},"content":" * {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2020-07-29"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2020-07-29"},{"lineNumber":160,"author":{"gitId":"-"},"content":" * @return           ArgumentMultimap object that maps prefixes to their","lastModifiedDate":"2020-07-29"},{"lineNumber":161,"author":{"gitId":"-"},"content":" * arguments","lastModifiedDate":"2020-07-29"},{"lineNumber":162,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":163,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":165,"author":{"gitId":"-"},"content":"We can tell `ArgumentTokenizer#tokenize()` to look out for our new prefix `r/` and it will return us an instance of `ArgumentMultimap`. Now let’s find out what we need to do in order to obtain the Index and String that we need. Let’s look through `ArgumentMultimap` :","lastModifiedDate":"2020-07-29"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":167,"author":{"gitId":"-"},"content":"**`ArgumentMultimap.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":169,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":170,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":171,"author":{"gitId":"-"},"content":" * Returns the last value of {@code prefix}.","lastModifiedDate":"2020-07-29"},{"lineNumber":172,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":173,"author":{"gitId":"-"},"content":"public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2020-07-29"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2020-07-29"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    return values.isEmpty() ? Optional.empty() :","lastModifiedDate":"2020-07-29"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2020-07-29"},{"lineNumber":177,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":178,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":180,"author":{"gitId":"-"},"content":"This appears to be what we need to get a String of the remark. But what about the Index? Let\u0027s take a quick peek at existing `Command` that uses an index to see how it is done.","lastModifiedDate":"2020-07-29"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":182,"author":{"gitId":"-"},"content":"**`DeleteCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":184,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":185,"author":{"gitId":"-"},"content":"Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":186,"author":{"gitId":"-"},"content":"return new DeleteCommand(index);","lastModifiedDate":"2020-07-29"},{"lineNumber":187,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":189,"author":{"gitId":"-"},"content":"There appears to be another utility class that obtains an `Index` from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":191,"author":{"gitId":"-"},"content":"Now that we have the know-how to extract the data that we need from the user’s input, we can parse the user command and create a new instance of `RemarkCommand`, as given below.","lastModifiedDate":"2020-07-29"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":193,"author":{"gitId":"-"},"content":"**`RemarkCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":195,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":196,"author":{"gitId":"-"},"content":"public RemarkCommand parse(String args) throws ParseException {","lastModifiedDate":"2020-07-29"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    requireNonNull(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2020-07-29"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        PREFIX_REMARK);","lastModifiedDate":"2020-07-29"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    try {","lastModifiedDate":"2020-07-29"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2020-07-29"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    } catch (IllegalValueException ive) {","lastModifiedDate":"2020-07-29"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2020-07-29"},{"lineNumber":206,"author":{"gitId":"-"},"content":"            RemarkCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2020-07-29"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    String remark \u003d argMultimap.getValue(PREFIX_REMARK).orElse(\"\");","lastModifiedDate":"2020-07-29"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    return new RemarkCommand(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":212,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":213,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":215,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":217,"author":{"gitId":"-"},"content":":information_source: Don’t forget to update `AddressBookParser` to use our new `RemarkCommandParser`!","lastModifiedDate":"2020-07-29"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":219,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":221,"author":{"gitId":"-"},"content":"If you are stuck, check out the sample","lastModifiedDate":"2020-07-29"},{"lineNumber":222,"author":{"gitId":"-"},"content":"[here](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-8bf239e8e9529369b577701303ddd96af93178b4ed6735f91c2d8488b20c6b4a).","lastModifiedDate":"2022-01-02"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":224,"author":{"gitId":"-"},"content":"## Add `Remark` to the model","lastModifiedDate":"2020-07-29"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":226,"author":{"gitId":"-"},"content":"Now that we have all the information that we need, let’s lay the groundwork for propagating the remarks added into the in-memory storage of person data. We achieve that by working with the `Person` model. Each field in a Person is implemented as a separate class (e.g. a `Name` object represents the person’s name). That means we should add a `Remark` class so that we can use a `Remark` object to represent a remark given to a person.","lastModifiedDate":"2020-07-29"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":228,"author":{"gitId":"-"},"content":"### Add a new `Remark` class","lastModifiedDate":"2020-07-29"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":230,"author":{"gitId":"-"},"content":"Create a new `Remark` in `seedu.address.model.person`. Since a `Remark` is a field that is similar to `Address`, we can reuse a significant bit of code.","lastModifiedDate":"2020-07-29"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":232,"author":{"gitId":"-"},"content":"A copy-paste and search-replace later, you should have something like [this](https://github.com/se-edu/addressbook-level3/commit/4516e099699baa9e2d51801bd26f016d812dedcc#diff-41bb13c581e280c686198251ad6cc337cd5e27032772f06ed9bf7f1440995ece). Note how `Remark` has no constrains and thus does not require input","lastModifiedDate":"2022-01-02"},{"lineNumber":233,"author":{"gitId":"-"},"content":"validation.","lastModifiedDate":"2020-07-29"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":235,"author":{"gitId":"-"},"content":"### Make use of `Remark`","lastModifiedDate":"2020-07-29"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":237,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` and `RemarkCommandParser` to use the new `Remark` class instead of plain `String`. These should be relatively simple changes.","lastModifiedDate":"2020-07-29"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":239,"author":{"gitId":"-"},"content":"## Add a placeholder element for remark to the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":241,"author":{"gitId":"-"},"content":"Without getting too deep into `fxml`, let’s go on a 5 minute adventure to get some placeholder text to show up for each person.","lastModifiedDate":"2020-07-29"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":243,"author":{"gitId":"-"},"content":"Simply add the following to [`seedu.address.ui.PersonCard`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-639834f1e05afe2276a86372adf0fe5f69314642c2d93cfa543d614ce5a76688).","lastModifiedDate":"2022-01-02"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":245,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":247,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":248,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-07-29"},{"lineNumber":249,"author":{"gitId":"-"},"content":"private Label remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":250,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":253,"author":{"gitId":"-"},"content":"`@FXML` is an annotation that marks a private or protected field and makes it accessible to FXML. It might sound like Greek to you right now, don’t worry — we will get back to it later.","lastModifiedDate":"2020-07-29"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":255,"author":{"gitId":"-"},"content":"Then insert the following into [`main/resources/view/PersonListCard.fxml`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-d44c4f51c24f6253c277a2bb9bc440b8064d9c15ad7cb7ceda280bca032efce9).","lastModifiedDate":"2022-01-02"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":257,"author":{"gitId":"-"},"content":"**`PersonListCard.fxml`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":259,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-07-29"},{"lineNumber":260,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"remark\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$remark\" /\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":261,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":263,"author":{"gitId":"-"},"content":"That’s it! Fire up the application again and you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":265,"author":{"gitId":"-"},"content":"![$remark shows up in each entry](../images/add-remark/$Remark.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":267,"author":{"gitId":"-"},"content":"## Modify `Person` to support a `Remark` field","lastModifiedDate":"2020-07-29"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":269,"author":{"gitId":"-"},"content":"Since `PersonCard` displays data from a `Person`, we need to update `Person` to get our `Remark` displayed!","lastModifiedDate":"2020-07-29"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":271,"author":{"gitId":"-"},"content":"### Modify `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":273,"author":{"gitId":"-"},"content":"We change the constructor of `Person` to take a `Remark`. We will also need to define new fields and accessors accordingly to store our new addition.","lastModifiedDate":"2020-07-29"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":275,"author":{"gitId":"-"},"content":"### Update other usages of `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":277,"author":{"gitId":"-"},"content":"Unfortunately, a change to `Person` will cause other commands to break, you will have to modify these commands to use the updated `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":279,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":281,"author":{"gitId":"-"},"content":":bulb: Use the `Find Usages` feature in IntelliJ IDEA on the `Person` class to find these commands.","lastModifiedDate":"2020-07-29"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":283,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":285,"author":{"gitId":"-"},"content":"Refer to [this commit](https://github.com/se-edu/addressbook-level3/commit/ce998c37e65b92d35c91d28c7822cd139c2c0a5c) and check that you have got everything in order!","lastModifiedDate":"2020-07-29"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":288,"author":{"gitId":"-"},"content":"## Updating Storage","lastModifiedDate":"2020-07-29"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":290,"author":{"gitId":"-"},"content":"AddressBook stores data by serializing `JsonAdaptedPerson` into `json` with the help of an external library — Jackson. Let’s update `JsonAdaptedPerson` to work with our new `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":292,"author":{"gitId":"-"},"content":"While the changes to code may be minimal, the test data will have to be updated as well.","lastModifiedDate":"2020-07-29"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":294,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":296,"author":{"gitId":"brendanneojw"},"content":":exclamation: You must delete AddressBook’s storage file located at `/data/insureiq.json` before running it! Not doing so will cause AddressBook to default to an empty address book!","lastModifiedDate":"2023-11-02"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":298,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":300,"author":{"gitId":"-"},"content":"Check out [this commit](https://github.com/se-edu/addressbook-level3/commit/556cbd0e03ff224d7a68afba171ad2eb0ce56bbf)","lastModifiedDate":"2020-07-29"},{"lineNumber":301,"author":{"gitId":"-"},"content":"to see what the changes entail.","lastModifiedDate":"2020-07-29"},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":303,"author":{"gitId":"-"},"content":"## Finalizing the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":305,"author":{"gitId":"-"},"content":"Now that we have finalized the `Person` class and its dependencies, we can now bind the `Remark` field to the UI.","lastModifiedDate":"2020-07-29"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":307,"author":{"gitId":"-"},"content":"Just add [this one line of code!](https://github.com/se-edu/addressbook-level3/commit/5b98fee11b6b3f5749b6b943c4f3bd3aa049b692)","lastModifiedDate":"2020-07-29"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":309,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":311,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":312,"author":{"gitId":"-"},"content":"public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2020-07-29"},{"lineNumber":313,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":314,"author":{"gitId":"-"},"content":"    remark.setText(person.getRemark().value);","lastModifiedDate":"2020-07-29"},{"lineNumber":315,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":316,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":317,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":318,"author":{"gitId":"-"},"content":"![The remark label is bound properly!](../images/add-remark/RemarkBound.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":320,"author":{"gitId":"-"},"content":"## Putting everything together","lastModifiedDate":"2020-07-29"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":322,"author":{"gitId":"-"},"content":"After the previous step, we notice a peculiar regression — we went from displaying something to nothing at all. However, this is expected behavior as we are yet to update the `RemarkCommand` to make use of the code we\u0027ve been adding in the last few steps.","lastModifiedDate":"2020-07-29"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":324,"author":{"gitId":"-"},"content":"### Update `RemarkCommand` and `RemarkCommandParser`","lastModifiedDate":"2020-07-29"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":326,"author":{"gitId":"-"},"content":"In this last step, we modify `RemarkCommand#execute()` to change the `Remark` of a `Person`. Since all fields in a `Person` are immutable, we create a new instance of a `Person` with the values that we want and","lastModifiedDate":"2020-07-29"},{"lineNumber":327,"author":{"gitId":"-"},"content":"save it with `Model#setPerson()`.","lastModifiedDate":"2020-07-29"},{"lineNumber":328,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":329,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":331,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":332,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":333,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ADD_REMARK_SUCCESS \u003d \"Added remark to Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":334,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_REMARK_SUCCESS \u003d \"Removed remark from Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":335,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":337,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":338,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2020-07-29"},{"lineNumber":339,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":340,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2020-07-29"},{"lineNumber":341,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2020-07-29"},{"lineNumber":342,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":343,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":344,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2020-07-29"},{"lineNumber":345,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new Person(","lastModifiedDate":"2021-08-01"},{"lineNumber":346,"author":{"gitId":"-"},"content":"                personToEdit.getName(), personToEdit.getPhone(), personToEdit.getEmail(),","lastModifiedDate":"2021-08-01"},{"lineNumber":347,"author":{"gitId":"-"},"content":"                personToEdit.getAddress(), remark, personToEdit.getTags());","lastModifiedDate":"2020-07-29"},{"lineNumber":348,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":349,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2020-07-29"},{"lineNumber":350,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2020-07-29"},{"lineNumber":351,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":352,"author":{"gitId":"-"},"content":"        return new CommandResult(generateSuccessMessage(editedPerson));","lastModifiedDate":"2020-07-29"},{"lineNumber":353,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":354,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":355,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":356,"author":{"gitId":"-"},"content":"     * Generates a command execution success message based on whether","lastModifiedDate":"2021-08-01"},{"lineNumber":357,"author":{"gitId":"-"},"content":"     * the remark is added to or removed from","lastModifiedDate":"2021-08-01"},{"lineNumber":358,"author":{"gitId":"-"},"content":"     * {@code personToEdit}.","lastModifiedDate":"2020-07-29"},{"lineNumber":359,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":360,"author":{"gitId":"-"},"content":"    private String generateSuccessMessage(Person personToEdit) {","lastModifiedDate":"2020-07-29"},{"lineNumber":361,"author":{"gitId":"-"},"content":"        String message \u003d !remark.value.isEmpty() ? MESSAGE_ADD_REMARK_SUCCESS : MESSAGE_DELETE_REMARK_SUCCESS;","lastModifiedDate":"2020-07-29"},{"lineNumber":362,"author":{"gitId":"-"},"content":"        return String.format(message, personToEdit);","lastModifiedDate":"2020-07-29"},{"lineNumber":363,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":364,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":365,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":366,"author":{"gitId":"-"},"content":"![Congratulations!](../images/add-remark/RemarkComplete.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":368,"author":{"gitId":"-"},"content":"## Writing tests","lastModifiedDate":"2020-07-29"},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":370,"author":{"gitId":"-"},"content":"Tests are crucial to ensuring that bugs don’t slip into the codebase unnoticed. This is especially true for large code bases where a change might lead to unintended behavior.","lastModifiedDate":"2020-07-29"},{"lineNumber":371,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":372,"author":{"gitId":"-"},"content":"Let’s verify the correctness of our code by writing some tests!","lastModifiedDate":"2020-07-29"},{"lineNumber":373,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":374,"author":{"gitId":"-"},"content":"Of course you can simply add the test cases manually, like you\u0027ve been doing all along this tutorial. The result would be like the test cases in [here](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-ff58f7c10338b34f76645df49b71ecb2bafaf7611b20e7ff59ebc98475538a01). Alternatively, you can get the help of IntelliJ to generate the skeletons of the test cases, as explained in the next section.","lastModifiedDate":"2022-01-02"},{"lineNumber":375,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":376,"author":{"gitId":"-"},"content":"### Automatically generating tests","lastModifiedDate":"2020-07-29"},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":378,"author":{"gitId":"-"},"content":"The goal is to write effective and efficient tests to ensure that `RemarkCommand#execute()` behaves as expected.","lastModifiedDate":"2020-07-29"},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":380,"author":{"gitId":"-"},"content":"The convention for test names is `methodName_testScenario_expectedResult`. An example would be","lastModifiedDate":"2020-07-29"},{"lineNumber":381,"author":{"gitId":"-"},"content":"`execute_filteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":382,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":383,"author":{"gitId":"-"},"content":"Let’s create a test for `RemarkCommand#execute()` to test that adding a remark works. On `IntelliJ IDEA` you can bring up the context menu and choose to `Go To` \\\u003e `Test` or use the appropriate keyboard shortcut.","lastModifiedDate":"2020-07-29"},{"lineNumber":384,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":385,"author":{"gitId":"-"},"content":"![Using the context menu to jump to tests](../images/add-remark/ContextMenu.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":386,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":387,"author":{"gitId":"-"},"content":"Then, create a test for the `execute` method.","lastModifiedDate":"2020-07-29"},{"lineNumber":388,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":389,"author":{"gitId":"-"},"content":"![Creating a test for `execute`.](../images/add-remark/CreateTest.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":391,"author":{"gitId":"-"},"content":"Following convention, let’s change the name of the generated method to `execute_addRemarkUnfilteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":392,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":393,"author":{"gitId":"-"},"content":"Let’s use the utility functions provided in `CommandTestUtil`. The functions ensure that commands produce the expected `CommandResult` and output the correct message. In this case, `CommandTestUtil#assertCommandSuccess` is the best fit as we are testing that a `RemarkCommand` will successfully add a `Remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":394,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":395,"author":{"gitId":"-"},"content":"You should end up with a test that looks something like [this](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-ff58f7c10338b34f76645df49b71ecb2bafaf7611b20e7ff59ebc98475538a01R36-R49).","lastModifiedDate":"2022-01-02"},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":397,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-07-29"},{"lineNumber":398,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":399,"author":{"gitId":"-"},"content":"This concludes the tutorial for adding a new `Command` to AddressBook.","lastModifiedDate":"2020-07-29"}],"authorContributionMap":{"brendanneojw":1,"-":398}},{"path":"docs/tutorials/RemovingFields.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Removing Fields\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e —  Antoine de Saint-Exupery","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"When working on an existing code base, you will most likely find that some features that are no longer necessary.","lastModifiedDate":"2021-08-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"This tutorial aims to give you some practice on such a code \u0027removal\u0027 activity by removing the `address` field from `Person` class.","lastModifiedDate":"2021-08-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-success\"\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"**If you have done the [Add `remark` command tutorial](AddRemark.html)  already**, you should know where the code had to be updated to add the field `remark`. From that experience, you can deduce where the code needs to be changed to _remove_ that field too. The removing of the `address` field can be done similarly.","lastModifiedDate":"2021-08-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"However, if you have no such prior knowledge, removing a field can take a quite a bit of detective work. This tutorial takes you through that process. **At least have a read even if you don\u0027t actually do the steps yourself.**","lastModifiedDate":"2021-08-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"## Safely deleting `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"IntelliJ IDEA provides a refactoring tool that can identify *most* parts of a removal easily. Let’s try to use it as much as we can.","lastModifiedDate":"2021-08-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Assisted refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"The `address` field in `Person` is actually an instance of the `seedu.address.model.person.Address` class. Since removing the `Address` class will break the application, we start by identifying `Address`\u0027s usages. This allows us to see code that depends on `Address` to function properly and edit them on a case-by-case basis. Right-click the `Address` class and select `Refactor` \\\u003e `Safe Delete` through the menu.","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"* :bulb: To make things simpler, you can unselect the options `Search in comments and strings` and `Search for text occurrences`","lastModifiedDate":"2021-08-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"![Usages detected](../images/remove/UnsafeDelete.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"Choose to `View Usages` and you should be presented with a list of `Safe Delete Conflicts`. These conflicts describe locations in which the `Address` class is used.","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"![List of conflicts](../images/remove/SafeDeleteConflicts.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"Remove usages of `Address` by performing `Safe Delete`s on each entry i.e., double-click on the entry (which takes you to the code in concern, right-click on that entity, and choose `Refactor` -\u003e `Safe delete` as before). You will need to exercise discretion when removing usages of `Address`. Functions like `ParserUtil#parseAddress()` can be safely removed but its usages must be removed as well. Other usages like in `EditPersonDescriptor` may require more careful inspection.","lastModifiedDate":"2021-08-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"Let’s try removing references to `Address` in `EditPersonDescriptor`.","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"1. Safe delete the field `address` in `EditPersonDescriptor`.","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"1. Select `Yes` when prompted to remove getters and setters.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"1. Select `View Usages` again.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"   ![UnsafeDeleteOnField](../images/remove/UnsafeDeleteOnField.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"1. Remove the usages of `address` and select `Do refactor` when you are done.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"   :bulb: **Tip:** Removing usages may result in errors. Exercise discretion and fix them. For example, removing the `address` field from the `Person` class will require you to modify its constructor.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"1. Repeat the steps for the remaining usages of `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"After you are done, verify that the application still works by compiling and running it again.","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"### Manual refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"Unfortunately, there are usages of `Address` that IntelliJ IDEA cannot identify. You can find them by searching for instances of the word `address` in your code (`Edit` \\\u003e `Find` \\\u003e `Find in path`).","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"Places of interest to look out for would be resources used by the application. `main/resources` contains images and `fxml` files used by the application and `test/resources` contains test data. For example, there is a `$address` in each `PersonCard` that has not been removed nor identified.","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"![$address](../images/remove/$address.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"A quick look at the `PersonCard` class and its `fxml` file quickly reveals why it slipped past the automated refactoring.","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"**`PersonCard.java`**","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"private Label address;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"**`PersonCard.fxml`**","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"After removing the `Label`, we can proceed to formally test our code. If everything went well, you should have most of your tests pass. Fix any remaining errors until the tests all pass.","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"## Tidying up","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"At this point, your application is working as intended and all your tests are passing. What’s left to do is to clean up references to `Address` in test data and documentation.","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"In `src/test/data/`, data meant for testing purposes are stored. While keeping the `address` field in the json files does not cause the tests to fail, it is not good practice to let cruft from old features accumulate.","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"**`invalidPersonAddressBook.json`:**","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"```json","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"   \"persons\": [ {","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"brendanneojw"},"content":"      \"name\": \"Hans Muster\",","lastModifiedDate":"2023-11-02"},{"lineNumber":105,"author":{"gitId":"-"},"content":"      \"phone\": \"9482424\",","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"brendanneojw"},"content":"      \"email\": \"invalid@email!3e\",","lastModifiedDate":"2023-11-02"},{"lineNumber":107,"author":{"gitId":"brendanneojw"},"content":"      \"address\": \"4th street\",","lastModifiedDate":"2023-11-02"},{"lineNumber":108,"author":{"gitId":"brendanneojw"},"content":"      \"nric\" : \"362D\",","lastModifiedDate":"2023-11-02"},{"lineNumber":109,"author":{"gitId":"brendanneojw"},"content":"      \"licencePlate\" : \"SLR5E\",","lastModifiedDate":"2023-11-02"},{"lineNumber":110,"author":{"gitId":"brendanneojw"},"content":"      \"company\" : \"☺\",","lastModifiedDate":"2023-11-02"},{"lineNumber":111,"author":{"gitId":"brendanneojw"},"content":"      \"policyNumber\" : \"B3425\",","lastModifiedDate":"2023-11-02"},{"lineNumber":112,"author":{"gitId":"brendanneojw"},"content":"      \"policyIssueDate\" : \"01-01-2020\",","lastModifiedDate":"2023-11-02"},{"lineNumber":113,"author":{"gitId":"brendanneojw"},"content":"      \"policyExpiryDate\" : \"01-01-2030\"","lastModifiedDate":"2023-11-02"},{"lineNumber":114,"author":{"gitId":"-"},"content":"   } ]","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"You can go through each individual `json` file and manually remove the `address` field.","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"brendanneojw":9,"-":109}},{"path":"src/main/java/seedu/address/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Config;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Version;","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-06-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ConfigUtil;","lastModifiedDate":"2016-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.LogicManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-01-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-01-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-01-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-01-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-01-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2016-12-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.storage.AddressBookStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.storage.UserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.ui.Ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.ui.UiManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"brendanneojw"},"content":"    public static final Version VERSION \u003d new Version(1, 4, 0, true);","lastModifiedDate":"2023-11-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing AddressBook ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2023-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        AddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(userPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2017-02-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s address book and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * The data from the sample address book will be used instead if {@code storage}\u0027s address book is not found,","lastModifiedDate":"2017-08-16"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * or an empty address book will be used instead if errors occur when reading {@code storage}\u0027s address book.","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        logger.info(\"Using data file : \" + storage.getAddressBookFilePath());","lastModifiedDate":"2023-07-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        Optional\u003cReadOnlyAddressBook\u003e addressBookOptional;","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook initialData;","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            addressBookOptional \u003d storage.readAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            if (!addressBookOptional.isPresent()) {","lastModifiedDate":"2016-09-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                logger.info(\"Creating a new data file \" + storage.getAddressBookFilePath()","lastModifiedDate":"2023-05-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":"                        + \" populated with a sample AddressBook.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            initialData \u003d addressBookOptional.orElseGet(SampleDataUtil::getSampleAddressBook);","lastModifiedDate":"2016-12-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            logger.warning(\"Data file at \" + storage.getAddressBookFilePath() + \" could not be loaded.\"","lastModifiedDate":"2023-06-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                    + \" Will be starting with an empty AddressBook.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            initialData \u003d new AddressBook();","lastModifiedDate":"2016-09-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return new ModelManager(initialData, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            if (!configOptional.isPresent()) {","lastModifiedDate":"2023-01-03"},{"lineNumber":121,"author":{"gitId":"-"},"content":"                logger.info(\"Creating new config file \" + configFilePathUsed);","lastModifiedDate":"2023-05-15"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-01-03"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" could not be loaded.\"","lastModifiedDate":"2023-06-15"},{"lineNumber":126,"author":{"gitId":"-"},"content":"                    + \" Using default config properties.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        logger.info(\"Using preference file : \" + prefsFilePath);","lastModifiedDate":"2023-05-15"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            if (!prefsOptional.isPresent()) {","lastModifiedDate":"2023-01-03"},{"lineNumber":152,"author":{"gitId":"-"},"content":"                logger.info(\"Creating new preference file \" + prefsFilePath);","lastModifiedDate":"2023-05-15"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-01-03"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            logger.warning(\"Preference file at \" + prefsFilePath + \" could not be loaded.\"","lastModifiedDate":"2023-06-15"},{"lineNumber":157,"author":{"gitId":"-"},"content":"                    + \" Using default preferences.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        logger.info(\"Starting AddressBook \" + MainApp.VERSION);","lastModifiedDate":"2016-09-29"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping Address Book ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":181,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":183,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":186,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"brendanneojw":1,"-":185}},{"path":"src/main/java/seedu/address/commons/util/PredicateUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"brendanneojw"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2023-10-14"},{"lineNumber":2,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":3,"author":{"gitId":"brendanneojw"},"content":"import java.util.List;","lastModifiedDate":"2023-10-14"},{"lineNumber":4,"author":{"gitId":"brendanneojw"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-14"},{"lineNumber":5,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":6,"author":{"gitId":"brendanneojw"},"content":"/**","lastModifiedDate":"2023-10-14"},{"lineNumber":7,"author":{"gitId":"brendanneojw"},"content":" * Helper function for combining multiple predicates","lastModifiedDate":"2023-10-14"},{"lineNumber":8,"author":{"gitId":"brendanneojw"},"content":" */","lastModifiedDate":"2023-10-14"},{"lineNumber":9,"author":{"gitId":"brendanneojw"},"content":"public class PredicateUtil {","lastModifiedDate":"2023-10-14"},{"lineNumber":10,"author":{"gitId":"brendanneojw"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":11,"author":{"gitId":"brendanneojw"},"content":"     * Combines all the predicates in the list with the AND logic and returns the predicate.","lastModifiedDate":"2023-10-14"},{"lineNumber":12,"author":{"gitId":"brendanneojw"},"content":"     *","lastModifiedDate":"2023-10-14"},{"lineNumber":13,"author":{"gitId":"brendanneojw"},"content":"     * @param predicates list of predicates.","lastModifiedDate":"2023-10-14"},{"lineNumber":14,"author":{"gitId":"brendanneojw"},"content":"     * @param \u003cT\u003e the type of value in the Predicate instance.","lastModifiedDate":"2023-10-14"},{"lineNumber":15,"author":{"gitId":"brendanneojw"},"content":"     * @return the predicate after performing AND operations on all.","lastModifiedDate":"2023-10-14"},{"lineNumber":16,"author":{"gitId":"brendanneojw"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":17,"author":{"gitId":"brendanneojw"},"content":"    public static \u003cT\u003e Predicate\u003cT\u003e combinePredicates(List\u003cPredicate\u003cT\u003e\u003e predicates) {","lastModifiedDate":"2023-10-14"},{"lineNumber":18,"author":{"gitId":"brendanneojw"},"content":"        return predicates.stream().reduce(p -\u003e true, Predicate::and);","lastModifiedDate":"2023-10-14"},{"lineNumber":19,"author":{"gitId":"brendanneojw"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":20,"author":{"gitId":"brendanneojw"},"content":"}","lastModifiedDate":"2023-10-14"}],"authorContributionMap":{"brendanneojw":20}},{"path":"src/main/java/seedu/address/commons/util/StringUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.StringWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Helper functions for handling strings.","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class StringUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * Returns true if the {@code sentence} contains the {@code word}.","lastModifiedDate":"2016-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     *   Ignores case, but a full word match is required.","lastModifiedDate":"2016-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     *   \u003cbr\u003eexamples:\u003cpre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"abc\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"DEF\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"AB\") \u003d\u003d false //not a full word match","lastModifiedDate":"2016-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *       \u003c/pre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @param sentence cannot be null","lastModifiedDate":"2016-10-13"},{"lineNumber":23,"author":{"gitId":"brendanneojw"},"content":"     * @param word cannot be null, cannot be empty","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static boolean containsWordIgnoreCase(String sentence, String word) {","lastModifiedDate":"2016-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        requireNonNull(sentence);","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        requireNonNull(word);","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        String preppedWord \u003d word.trim();","lastModifiedDate":"2016-10-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        checkArgument(!preppedWord.isEmpty(), \"Word parameter cannot be empty\");","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":32,"author":{"gitId":"brendanneojw"},"content":"        return sentence.toLowerCase().contains(preppedWord.toLowerCase());","lastModifiedDate":"2023-10-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Returns a detailed message of the t, including the stack trace.","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static String getDetails(Throwable t) {","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        requireNonNull(t);","lastModifiedDate":"2017-05-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        StringWriter sw \u003d new StringWriter();","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        t.printStackTrace(new PrintWriter(sw));","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return t.getMessage() + \"\\n\" + sw.toString();","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-22"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Returns true if {@code s} represents a non-zero unsigned integer","lastModifiedDate":"2017-06-02"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * e.g. 1, 2, 3, ..., {@code Integer.MAX_VALUE} \u003cbr\u003e","lastModifiedDate":"2017-06-02"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Will return false for any other non-null string input","lastModifiedDate":"2017-06-02"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * e.g. empty string, \"-1\", \"0\", \"+1\", and \" 2 \" (untrimmed), \"3 0\" (contains whitespace), \"1 a\" (contains letters)","lastModifiedDate":"2017-06-02"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code s} is null.","lastModifiedDate":"2017-06-02"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static boolean isNonZeroUnsignedInteger(String s) {","lastModifiedDate":"2017-06-02"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        requireNonNull(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-06-02"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            int value \u003d Integer.parseInt(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            return value \u003e 0 \u0026\u0026 !s.startsWith(\"+\"); // \"+1\" is successfully parsed by Integer#parseInt(String)","lastModifiedDate":"2017-06-02"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2017-06-02"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-06-02"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-02"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"brendanneojw":2,"-":60}},{"path":"src/main/java/seedu/address/logic/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2023-07-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2023-07-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-07-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-07-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2023-07-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"RSXIX"},"content":"    public static final String MESSAGE_NOT_FOUND_INDEX \u003d \"Error: Invalid Index\";","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"RSXIX"},"content":"    public static final String MESSAGE_MISSING_INDEX \u003d \"Error: Missing Index\";","lastModifiedDate":"2023-10-16"},{"lineNumber":17,"author":{"gitId":"RSXIX"},"content":"    public static final String MESSAGE_IMPOSSIBLE_INDEX \u003d \"Error: The parameter is not of the type positive integer\";","lastModifiedDate":"2023-10-16"},{"lineNumber":18,"author":{"gitId":"RSXIX"},"content":"    public static final String MESSAGE_PREAMBLE_DETECTED \u003d \"Error: Preamble Detected\";","lastModifiedDate":"2023-10-20"},{"lineNumber":19,"author":{"gitId":"RSXIX"},"content":"    public static final String MESSAGE_USED_POLICY_NUMBER \u003d \"Error: The policy number is already in use\";","lastModifiedDate":"2023-10-22"},{"lineNumber":20,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":21,"author":{"gitId":"RSXIX"},"content":"    public static final String MESSAGE_DATES_NOT_COMPATIBLE \u003d \"Error: \"","lastModifiedDate":"2023-11-08"},{"lineNumber":22,"author":{"gitId":"RSXIX"},"content":"            + \"The Policy Issue Date falls after Policy Expiry Date\";","lastModifiedDate":"2023-11-08"},{"lineNumber":23,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":24,"author":{"gitId":"RSXIX"},"content":"    public static final String MESSAGE_INCOMPLETE_POLICY_EDIT \u003d \"Error: \"","lastModifiedDate":"2023-11-01"},{"lineNumber":25,"author":{"gitId":"RSXIX"},"content":"            + \"You must provide edits for all policy parameters\";","lastModifiedDate":"2023-11-01"},{"lineNumber":26,"author":{"gitId":"RSXIX"},"content":"    public static final String MESSAGE_MISSING_FIELDS_FOR_ADD_COMMAND \u003d \"Error: \"","lastModifiedDate":"2023-11-09"},{"lineNumber":27,"author":{"gitId":"RSXIX"},"content":"            + \"Some of the required fields are missing. \"","lastModifiedDate":"2023-11-09"},{"lineNumber":28,"author":{"gitId":"RSXIX"},"content":"            + \"\\n\"","lastModifiedDate":"2023-10-20"},{"lineNumber":29,"author":{"gitId":"RSXIX"},"content":"            + \"Please include the following: \";","lastModifiedDate":"2023-10-20"},{"lineNumber":30,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":31,"author":{"gitId":"RSXIX"},"content":"    public static final String MESSAGE_MISSING_FIELDS_POLICY_FOR_EDIT_COMMAND \u003d \"Error: \"","lastModifiedDate":"2023-11-09"},{"lineNumber":32,"author":{"gitId":"RSXIX"},"content":"            + \"Please provide all the policy parameters when editing a policy with no existing policy data. \"","lastModifiedDate":"2023-11-09"},{"lineNumber":33,"author":{"gitId":"RSXIX"},"content":"            + \"\\n\"","lastModifiedDate":"2023-11-09"},{"lineNumber":34,"author":{"gitId":"RSXIX"},"content":"            + \"Please include the following: \";","lastModifiedDate":"2023-11-09"},{"lineNumber":35,"author":{"gitId":"RSXIX"},"content":"    public static final String MESSAGE_MISSING_FIELDS_POLICY_FOR_ADD_COMMAND \u003d \"Error: \"","lastModifiedDate":"2023-11-09"},{"lineNumber":36,"author":{"gitId":"RSXIX"},"content":"            + \"Please include either all or none of the policy variables. \"","lastModifiedDate":"2023-11-09"},{"lineNumber":37,"author":{"gitId":"RSXIX"},"content":"            + \"\\n\"","lastModifiedDate":"2023-10-20"},{"lineNumber":38,"author":{"gitId":"RSXIX"},"content":"            + \"You are missing the following: \";","lastModifiedDate":"2023-10-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_PERSON_DISPLAYED_INDEX \u003d \"The person index provided is invalid\";","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1$d persons listed!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_FIELDS \u003d","lastModifiedDate":"2023-07-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                \"Multiple values specified for the following single-valued field(s): \";","lastModifiedDate":"2023-07-14"},{"lineNumber":45,"author":{"gitId":"brendanneojw"},"content":"    public static final String MESSAGE_NOT_NUMBERS \u003d \"Error: The value is not a number\";","lastModifiedDate":"2023-10-26"},{"lineNumber":46,"author":{"gitId":"brendanneojw"},"content":"    public static final String MESSAGE_NOT_IN_RANGE \u003d","lastModifiedDate":"2023-10-31"},{"lineNumber":47,"author":{"gitId":"brendanneojw"},"content":"            \"Error: The value has to be between %1$d and %2$d (both inclusive)\";","lastModifiedDate":"2023-10-31"},{"lineNumber":48,"author":{"gitId":"KumChaiYin"},"content":"    public static final String MESSAGE_INVALID_TWO_FIELD \u003d \"Error: Please contain only either \"","lastModifiedDate":"2023-11-02"},{"lineNumber":49,"author":{"gitId":"cyaoxuan"},"content":"            + \"one field of %1$s or %2$s.\";","lastModifiedDate":"2023-11-02"},{"lineNumber":50,"author":{"gitId":"cyaoxuan"},"content":"    public static final String MESSAGE_EMPTY_FIELDS \u003d \"Error: No value detected for the following field(s): %1$s\";","lastModifiedDate":"2023-11-02"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-07-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Returns an error message indicating the duplicate prefixes.","lastModifiedDate":"2023-07-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-07-14"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static String getErrorMessageForDuplicatePrefixes(Prefix... duplicatePrefixes) {","lastModifiedDate":"2023-07-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assert duplicatePrefixes.length \u003e 0;","lastModifiedDate":"2023-07-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Set\u003cString\u003e duplicateFields \u003d","lastModifiedDate":"2023-07-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                Stream.of(duplicatePrefixes).map(Prefix::toString).collect(Collectors.toSet());","lastModifiedDate":"2023-07-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return MESSAGE_DUPLICATE_FIELDS + String.join(\" \", duplicateFields);","lastModifiedDate":"2023-07-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-02-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * Formats the {@code person} for display to the user.","lastModifiedDate":"2019-02-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-02-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static String format(Person person) {","lastModifiedDate":"2019-02-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2019-02-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        builder.append(person.getName())","lastModifiedDate":"2019-02-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2019-02-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                .append(person.getPhone())","lastModifiedDate":"2019-02-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2019-02-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"                .append(person.getEmail())","lastModifiedDate":"2019-02-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                .append(\"; Address: \")","lastModifiedDate":"2019-02-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                .append(person.getAddress())","lastModifiedDate":"2019-02-23"},{"lineNumber":76,"author":{"gitId":"brendanneojw"},"content":"                .append(\"; NRIC: \")","lastModifiedDate":"2023-10-13"},{"lineNumber":77,"author":{"gitId":"brendanneojw"},"content":"                .append(person.getNric())","lastModifiedDate":"2023-10-13"},{"lineNumber":78,"author":{"gitId":"brendanneojw"},"content":"                .append(\"; Licence Plate: \")","lastModifiedDate":"2023-10-13"},{"lineNumber":79,"author":{"gitId":"brendanneojw"},"content":"                .append(person.getLicencePlate())","lastModifiedDate":"2023-10-13"},{"lineNumber":80,"author":{"gitId":"brendanneojw"},"content":"                .append(\"\\nPolicy Details (Company, Policy Number, Policy Issue Date and Policy Expiry Date): \")","lastModifiedDate":"2023-10-25"},{"lineNumber":81,"author":{"gitId":"brendanneojw"},"content":"                .append(person.getPolicy().toDisplay(false))","lastModifiedDate":"2023-10-13"},{"lineNumber":82,"author":{"gitId":"brendanneojw"},"content":"                .append(\"\\nTags: \");","lastModifiedDate":"2023-10-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        person.getTags().forEach(builder::append);","lastModifiedDate":"2019-02-23"},{"lineNumber":84,"author":{"gitId":"brendanneojw"},"content":"        builder.append(\"\\nRemark: \").append(person.getRemark());","lastModifiedDate":"2023-11-01"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"brendanneojw":11,"RSXIX":24,"KumChaiYin":1,"-":50,"cyaoxuan":2}},{"path":"src/main/java/seedu/address/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"RSXIX"},"content":"import static seedu.address.logic.Messages.MESSAGE_USED_POLICY_NUMBER;","lastModifiedDate":"2023-10-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-10-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-10-19"},{"lineNumber":7,"author":{"gitId":"KumChaiYin"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LICENCE_PLATE;","lastModifiedDate":"2023-10-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-19"},{"lineNumber":9,"author":{"gitId":"KumChaiYin"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NRIC;","lastModifiedDate":"2023-10-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-10-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-10-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-01-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"RSXIX"},"content":" * Adds a person to the address book","lastModifiedDate":"2023-11-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"RSXIX"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a person to the client list. \"","lastModifiedDate":"2023-11-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2017-06-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2017-05-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2017-05-09"},{"lineNumber":31,"author":{"gitId":"KumChaiYin"},"content":"            + PREFIX_NRIC + \"NRIC\"","lastModifiedDate":"2023-10-19"},{"lineNumber":32,"author":{"gitId":"KumChaiYin"},"content":"            + PREFIX_LICENCE_PLATE + \"LICENCE PLATE\"","lastModifiedDate":"2023-10-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"ADDRESS \"","lastModifiedDate":"2017-05-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2017-06-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2017-05-09"},{"lineNumber":39,"author":{"gitId":"KumChaiYin"},"content":"            + PREFIX_NRIC + \"627A\"","lastModifiedDate":"2023-10-19"},{"lineNumber":40,"author":{"gitId":"KumChaiYin"},"content":"            + PREFIX_LICENCE_PLATE + \"SLU5237J\"","lastModifiedDate":"2023-10-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"311, Clementi Ave 2, #02-25 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"friends \"","lastModifiedDate":"2017-05-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"owesMoney\";","lastModifiedDate":"2017-05-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New person added: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"RSXIX"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"Error: This person already exists in the address book\";","lastModifiedDate":"2023-10-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private final Person toAdd;","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Creates an AddCommand to add the specified {@code Person}","lastModifiedDate":"2018-01-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public AddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        toAdd \u003d person;","lastModifiedDate":"2018-01-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        if (model.hasPerson(toAdd)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":66,"author":{"gitId":"RSXIX"},"content":"        if (model.hasSamePolicyNumber(toAdd)) {","lastModifiedDate":"2023-10-24"},{"lineNumber":67,"author":{"gitId":"RSXIX"},"content":"            throw new CommandException(MESSAGE_USED_POLICY_NUMBER);","lastModifiedDate":"2023-10-22"},{"lineNumber":68,"author":{"gitId":"RSXIX"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":69,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        model.addPerson(toAdd);","lastModifiedDate":"2016-09-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, Messages.format(toAdd)));","lastModifiedDate":"2019-02-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        if (!(other instanceof AddCommand)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        AddCommand otherAddCommand \u003d (AddCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return toAdd.equals(otherAddCommand.toAdd);","lastModifiedDate":"2023-07-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"                .add(\"toAdd\", toAdd)","lastModifiedDate":"2019-02-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"RSXIX":8,"KumChaiYin":6,"-":81}},{"path":"src/main/java/seedu/address/logic/commands/BatchDeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"KumChaiYin"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-25"},{"lineNumber":2,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":3,"author":{"gitId":"KumChaiYin"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-25"},{"lineNumber":4,"author":{"gitId":"KumChaiYin"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-11-02"},{"lineNumber":5,"author":{"gitId":"KumChaiYin"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_COMPANY;","lastModifiedDate":"2023-11-02"},{"lineNumber":6,"author":{"gitId":"KumChaiYin"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DELETE_MONTH;","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"KumChaiYin"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-11-09"},{"lineNumber":9,"author":{"gitId":"KumChaiYin"},"content":"import java.util.List;","lastModifiedDate":"2023-11-09"},{"lineNumber":10,"author":{"gitId":"KumChaiYin"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"KumChaiYin"},"content":"import seedu.address.commons.util.PredicateUtil;","lastModifiedDate":"2023-11-09"},{"lineNumber":13,"author":{"gitId":"KumChaiYin"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"KumChaiYin"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"KumChaiYin"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"KumChaiYin"},"content":"import seedu.address.model.month.DeleteMonth;","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"KumChaiYin"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-25"},{"lineNumber":18,"author":{"gitId":"brendanneojw"},"content":"import seedu.address.model.person.predicates.CompanyContainsKeywordsPredicate;","lastModifiedDate":"2023-11-11"},{"lineNumber":19,"author":{"gitId":"brendanneojw"},"content":"import seedu.address.model.person.predicates.HasPolicyPredicate;","lastModifiedDate":"2023-11-11"},{"lineNumber":20,"author":{"gitId":"brendanneojw"},"content":"import seedu.address.model.person.predicates.PolicyExpiryInDeleteMonthPredicate;","lastModifiedDate":"2023-11-11"},{"lineNumber":21,"author":{"gitId":"KumChaiYin"},"content":"import seedu.address.model.policy.Company;","lastModifiedDate":"2023-11-02"},{"lineNumber":22,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"KumChaiYin"},"content":"/**","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"KumChaiYin"},"content":" * Deletes all people who policy expiry date is in the specific month.","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"KumChaiYin"},"content":" */","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"KumChaiYin"},"content":"public class BatchDeleteCommand extends Command {","lastModifiedDate":"2023-10-25"},{"lineNumber":27,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":28,"author":{"gitId":"KumChaiYin"},"content":"    public static final String COMMAND_WORD \u003d \"batchdelete\";","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":30,"author":{"gitId":"KumChaiYin"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": batch delete people whose policy: \\n\"","lastModifiedDate":"2023-11-02"},{"lineNumber":31,"author":{"gitId":"KumChaiYin"},"content":"            + \"(i) expiry date is in the corresponding month and year OR \\n\"","lastModifiedDate":"2023-11-02"},{"lineNumber":32,"author":{"gitId":"KumChaiYin"},"content":"            + \"(ii) belongs to a company.\\n\"","lastModifiedDate":"2023-11-02"},{"lineNumber":33,"author":{"gitId":"KumChaiYin"},"content":"            + \"(i) Parameter: \"","lastModifiedDate":"2023-11-02"},{"lineNumber":34,"author":{"gitId":"KumChaiYin"},"content":"            + PREFIX_DELETE_MONTH + \"MM-yyyy\\n\"","lastModifiedDate":"2023-10-25"},{"lineNumber":35,"author":{"gitId":"KumChaiYin"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2023-10-25"},{"lineNumber":36,"author":{"gitId":"KumChaiYin"},"content":"            + PREFIX_DELETE_MONTH + \"11-2022\\n\"","lastModifiedDate":"2023-11-02"},{"lineNumber":37,"author":{"gitId":"KumChaiYin"},"content":"            + \"(ii) Parameter: \"","lastModifiedDate":"2023-11-02"},{"lineNumber":38,"author":{"gitId":"KumChaiYin"},"content":"            + PREFIX_COMPANY + \"COMPANY NAME\\n\"","lastModifiedDate":"2023-11-02"},{"lineNumber":39,"author":{"gitId":"KumChaiYin"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2023-11-02"},{"lineNumber":40,"author":{"gitId":"KumChaiYin"},"content":"            + PREFIX_COMPANY + \"Allianz\";","lastModifiedDate":"2023-11-02"},{"lineNumber":41,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":42,"author":{"gitId":"KumChaiYin"},"content":"    public static final String MESSAGE_DELETE_PEOPLE_SUCCESS \u003d \"Batch delete people whose policy %1$s\";","lastModifiedDate":"2023-11-09"},{"lineNumber":43,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":44,"author":{"gitId":"KumChaiYin"},"content":"    public static final String MESSAGE_MONTH_DESCRIPTION \u003d \"expiry date is in \";","lastModifiedDate":"2023-11-13"},{"lineNumber":45,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":46,"author":{"gitId":"KumChaiYin"},"content":"    public static final String MESSAGE_COMPANY_DESCRIPTION \u003d \"company contains keyword: \";","lastModifiedDate":"2023-11-13"},{"lineNumber":47,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":48,"author":{"gitId":"KumChaiYin"},"content":"    private DeleteMonth month \u003d null;","lastModifiedDate":"2023-11-02"},{"lineNumber":49,"author":{"gitId":"KumChaiYin"},"content":"    private Company company \u003d null;","lastModifiedDate":"2023-11-02"},{"lineNumber":50,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":51,"author":{"gitId":"KumChaiYin"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":52,"author":{"gitId":"KumChaiYin"},"content":"     * Creates an BatchDeleteCommand to batch delete the specified {@code Person}","lastModifiedDate":"2023-10-25"},{"lineNumber":53,"author":{"gitId":"KumChaiYin"},"content":"     * based on policy expiry date or company","lastModifiedDate":"2023-11-13"},{"lineNumber":54,"author":{"gitId":"KumChaiYin"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":55,"author":{"gitId":"KumChaiYin"},"content":"    public BatchDeleteCommand(DeleteMonth deleteMonth, Company company) {","lastModifiedDate":"2023-11-13"},{"lineNumber":56,"author":{"gitId":"KumChaiYin"},"content":"        this.month \u003d deleteMonth;","lastModifiedDate":"2023-11-02"},{"lineNumber":57,"author":{"gitId":"KumChaiYin"},"content":"        this.company \u003d company;","lastModifiedDate":"2023-11-02"},{"lineNumber":58,"author":{"gitId":"KumChaiYin"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":59,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":60,"author":{"gitId":"KumChaiYin"},"content":"    @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":61,"author":{"gitId":"KumChaiYin"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-25"},{"lineNumber":62,"author":{"gitId":"KumChaiYin"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-25"},{"lineNumber":63,"author":{"gitId":"KumChaiYin"},"content":"        Predicate\u003cPerson\u003e p;","lastModifiedDate":"2023-11-02"},{"lineNumber":64,"author":{"gitId":"KumChaiYin"},"content":"        String resultInfo;","lastModifiedDate":"2023-11-02"},{"lineNumber":65,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":66,"author":{"gitId":"KumChaiYin"},"content":"        if ((month \u003d\u003d null \u0026\u0026 company \u003d\u003d null) || (month !\u003d null \u0026\u0026 company !\u003d null)) {","lastModifiedDate":"2023-11-13"},{"lineNumber":67,"author":{"gitId":"KumChaiYin"},"content":"            throw new CommandException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-11-13"},{"lineNumber":68,"author":{"gitId":"KumChaiYin"},"content":"                    BatchDeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-11-13"},{"lineNumber":69,"author":{"gitId":"KumChaiYin"},"content":"        }","lastModifiedDate":"2023-11-13"},{"lineNumber":70,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":71,"author":{"gitId":"KumChaiYin"},"content":"        if (month !\u003d null) {","lastModifiedDate":"2023-11-02"},{"lineNumber":72,"author":{"gitId":"KumChaiYin"},"content":"            p \u003d new PolicyExpiryInDeleteMonthPredicate(month);","lastModifiedDate":"2023-11-02"},{"lineNumber":73,"author":{"gitId":"KumChaiYin"},"content":"            resultInfo \u003d MESSAGE_MONTH_DESCRIPTION + month.toString();","lastModifiedDate":"2023-11-13"},{"lineNumber":74,"author":{"gitId":"KumChaiYin"},"content":"        } else {","lastModifiedDate":"2023-11-02"},{"lineNumber":75,"author":{"gitId":"KumChaiYin"},"content":"            // company !\u003d null","lastModifiedDate":"2023-11-13"},{"lineNumber":76,"author":{"gitId":"KumChaiYin"},"content":"            p \u003d new CompanyContainsKeywordsPredicate(company.toString());","lastModifiedDate":"2023-11-13"},{"lineNumber":77,"author":{"gitId":"KumChaiYin"},"content":"            resultInfo \u003d MESSAGE_COMPANY_DESCRIPTION + company.toString();","lastModifiedDate":"2023-11-13"},{"lineNumber":78,"author":{"gitId":"KumChaiYin"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":79,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":80,"author":{"gitId":"KumChaiYin"},"content":"        model.batchDeleteWithPredicate(addHasPolicyPredicate(p));","lastModifiedDate":"2023-11-09"},{"lineNumber":81,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":82,"author":{"gitId":"KumChaiYin"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_PEOPLE_SUCCESS, resultInfo));","lastModifiedDate":"2023-11-02"},{"lineNumber":83,"author":{"gitId":"KumChaiYin"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":84,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":85,"author":{"gitId":"KumChaiYin"},"content":"    /**","lastModifiedDate":"2023-11-09"},{"lineNumber":86,"author":{"gitId":"KumChaiYin"},"content":"     * Combines given predicate with predicate that checks a person has policy.","lastModifiedDate":"2023-11-09"},{"lineNumber":87,"author":{"gitId":"KumChaiYin"},"content":"     *","lastModifiedDate":"2023-11-09"},{"lineNumber":88,"author":{"gitId":"KumChaiYin"},"content":"     * @param p A predicate used to test a person.","lastModifiedDate":"2023-11-09"},{"lineNumber":89,"author":{"gitId":"KumChaiYin"},"content":"     * @return A predicate which is combination of given predicate and predicate that checks a person has policy.","lastModifiedDate":"2023-11-09"},{"lineNumber":90,"author":{"gitId":"KumChaiYin"},"content":"     */","lastModifiedDate":"2023-11-09"},{"lineNumber":91,"author":{"gitId":"KumChaiYin"},"content":"    private Predicate\u003cPerson\u003e addHasPolicyPredicate(Predicate\u003cPerson\u003e p) {","lastModifiedDate":"2023-11-09"},{"lineNumber":92,"author":{"gitId":"KumChaiYin"},"content":"        List\u003cPredicate\u003cPerson\u003e\u003e predicates \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-11-09"},{"lineNumber":93,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":94,"author":{"gitId":"KumChaiYin"},"content":"        predicates.add(new HasPolicyPredicate());","lastModifiedDate":"2023-11-09"},{"lineNumber":95,"author":{"gitId":"KumChaiYin"},"content":"        predicates.add(p);","lastModifiedDate":"2023-11-09"},{"lineNumber":96,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":97,"author":{"gitId":"KumChaiYin"},"content":"        Predicate\u003cPerson\u003e newPredicate \u003d PredicateUtil.combinePredicates(predicates);","lastModifiedDate":"2023-11-09"},{"lineNumber":98,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":99,"author":{"gitId":"KumChaiYin"},"content":"        return newPredicate;","lastModifiedDate":"2023-11-09"},{"lineNumber":100,"author":{"gitId":"KumChaiYin"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":101,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":102,"author":{"gitId":"KumChaiYin"},"content":"    @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":103,"author":{"gitId":"KumChaiYin"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-25"},{"lineNumber":104,"author":{"gitId":"KumChaiYin"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-25"},{"lineNumber":105,"author":{"gitId":"KumChaiYin"},"content":"            return true;","lastModifiedDate":"2023-10-25"},{"lineNumber":106,"author":{"gitId":"KumChaiYin"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":107,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":108,"author":{"gitId":"KumChaiYin"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-25"},{"lineNumber":109,"author":{"gitId":"KumChaiYin"},"content":"        if (!(other instanceof BatchDeleteCommand)) {","lastModifiedDate":"2023-10-25"},{"lineNumber":110,"author":{"gitId":"KumChaiYin"},"content":"            return false;","lastModifiedDate":"2023-10-25"},{"lineNumber":111,"author":{"gitId":"KumChaiYin"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":112,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":113,"author":{"gitId":"KumChaiYin"},"content":"        BatchDeleteCommand otherBatchDeleteCommand \u003d (BatchDeleteCommand) other;","lastModifiedDate":"2023-10-25"},{"lineNumber":114,"author":{"gitId":"KumChaiYin"},"content":"        if (month !\u003d null) {","lastModifiedDate":"2023-11-13"},{"lineNumber":115,"author":{"gitId":"KumChaiYin"},"content":"            return month.equals(otherBatchDeleteCommand.month);","lastModifiedDate":"2023-10-25"},{"lineNumber":116,"author":{"gitId":"KumChaiYin"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":117,"author":{"gitId":"KumChaiYin"},"content":"        assert company !\u003d null : \"Company should not be null if month is null\";","lastModifiedDate":"2023-11-13"},{"lineNumber":118,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":119,"author":{"gitId":"KumChaiYin"},"content":"        return company.equals(otherBatchDeleteCommand.company);","lastModifiedDate":"2023-11-13"},{"lineNumber":120,"author":{"gitId":"KumChaiYin"},"content":"    }","lastModifiedDate":"2023-11-13"},{"lineNumber":121,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":122,"author":{"gitId":"KumChaiYin"},"content":"    @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":123,"author":{"gitId":"KumChaiYin"},"content":"    public String toString() {","lastModifiedDate":"2023-10-25"},{"lineNumber":124,"author":{"gitId":"KumChaiYin"},"content":"        String month \u003d this.month \u003d\u003d null ? \"[not applicable]\" : this.month.toString();","lastModifiedDate":"2023-11-13"},{"lineNumber":125,"author":{"gitId":"KumChaiYin"},"content":"        String company \u003d this.company \u003d\u003d null ? \"[not applicable]\" : this.company.toString();","lastModifiedDate":"2023-11-13"},{"lineNumber":126,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":127,"author":{"gitId":"KumChaiYin"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-25"},{"lineNumber":128,"author":{"gitId":"KumChaiYin"},"content":"                .add(\"toBatchDeleteMonth\", month)","lastModifiedDate":"2023-11-13"},{"lineNumber":129,"author":{"gitId":"KumChaiYin"},"content":"                .add(\"toBatchDeleteCompany\", company)","lastModifiedDate":"2023-11-13"},{"lineNumber":130,"author":{"gitId":"KumChaiYin"},"content":"                .toString();","lastModifiedDate":"2023-10-25"},{"lineNumber":131,"author":{"gitId":"KumChaiYin"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":132,"author":{"gitId":"KumChaiYin"},"content":"}","lastModifiedDate":"2023-10-25"}],"authorContributionMap":{"brendanneojw":3,"KumChaiYin":129}},{"path":"src/main/java/seedu/address/logic/commands/ClearCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Clears the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ClearCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"clear\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"brendanneojw"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Client list has been cleared!\";","lastModifiedDate":"2023-11-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        model.setAddressBook(new AddressBook());","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"brendanneojw":1,"-":22}},{"path":"src/main/java/seedu/address/logic/commands/CommandResult.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-12-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Represents the result of a command execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class CommandResult {","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final String feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /** Help information should be shown to the user. */","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final boolean showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /** The application should exit. */","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final boolean exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified fields.","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser, boolean showHelp, boolean exit) {","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.showHelp \u003d showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this.exit \u003d exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser},","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * and other fields set to their default value.","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this(feedbackToUser, false, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public String getFeedbackToUser() {","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public boolean isShowHelp() {","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean isExit() {","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"KumChaiYin"},"content":"    public boolean isBatchDelete() {","lastModifiedDate":"2023-10-25"},{"lineNumber":52,"author":{"gitId":"KumChaiYin"},"content":"        return feedbackToUser.contains(\"Batch delete people\");","lastModifiedDate":"2023-10-25"},{"lineNumber":53,"author":{"gitId":"KumChaiYin"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":54,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        if (!(other instanceof CommandResult)) {","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-12-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        CommandResult otherCommandResult \u003d (CommandResult) other;","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return feedbackToUser.equals(otherCommandResult.feedbackToUser)","lastModifiedDate":"2018-12-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                \u0026\u0026 showHelp \u003d\u003d otherCommandResult.showHelp","lastModifiedDate":"2018-12-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"                \u0026\u0026 exit \u003d\u003d otherCommandResult.exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return Objects.hash(feedbackToUser, showHelp, exit);","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                .add(\"feedbackToUser\", feedbackToUser)","lastModifiedDate":"2019-02-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"                .add(\"showHelp\", showHelp)","lastModifiedDate":"2019-02-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                .add(\"exit\", exit)","lastModifiedDate":"2019-02-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"KumChaiYin":4,"-":82}},{"path":"src/main/java/seedu/address/logic/commands/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-09-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Deletes a person identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2018-04-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \": Deletes the person identified by the index number used in the displayed person list.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2016-09-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_PERSON_SUCCESS \u003d \"Deleted Person: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Index targetIndex;","lastModifiedDate":"2017-06-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public DeleteCommand(Index targetIndex) {","lastModifiedDate":"2017-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2016-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":40,"author":{"gitId":"RSXIX"},"content":"            throw new CommandException(Messages.MESSAGE_NOT_FOUND_INDEX);","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        model.deletePerson(personToDelete);","lastModifiedDate":"2016-09-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_PERSON_SUCCESS, Messages.format(personToDelete)));","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (!(other instanceof DeleteCommand)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        DeleteCommand otherDeleteCommand \u003d (DeleteCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return targetIndex.equals(otherDeleteCommand.targetIndex);","lastModifiedDate":"2023-07-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                .add(\"targetIndex\", targetIndex)","lastModifiedDate":"2019-02-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"RSXIX":1,"-":68}},{"path":"src/main/java/seedu/address/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-12-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"RSXIX"},"content":"import static seedu.address.logic.Messages.MESSAGE_DATES_NOT_COMPATIBLE;","lastModifiedDate":"2023-11-08"},{"lineNumber":5,"author":{"gitId":"RSXIX"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-11-09"},{"lineNumber":6,"author":{"gitId":"RSXIX"},"content":"import static seedu.address.logic.Messages.MESSAGE_MISSING_FIELDS_POLICY_FOR_EDIT_COMMAND;","lastModifiedDate":"2023-11-09"},{"lineNumber":7,"author":{"gitId":"RSXIX"},"content":"import static seedu.address.logic.Messages.MESSAGE_USED_POLICY_NUMBER;","lastModifiedDate":"2023-10-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"suryanshkushwaha"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_COMPANY;","lastModifiedDate":"2023-10-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"suryanshkushwaha"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LICENCE_PLATE;","lastModifiedDate":"2023-10-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":13,"author":{"gitId":"suryanshkushwaha"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NRIC;","lastModifiedDate":"2023-10-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":15,"author":{"gitId":"suryanshkushwaha"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_POLICY_EXPIRY_DATE;","lastModifiedDate":"2023-10-23"},{"lineNumber":16,"author":{"gitId":"suryanshkushwaha"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_POLICY_ISSUE_DATE;","lastModifiedDate":"2023-10-23"},{"lineNumber":17,"author":{"gitId":"suryanshkushwaha"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_POLICY_NUMBER;","lastModifiedDate":"2023-10-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2023-07-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2016-12-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2016-12-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-26"},{"lineNumber":36,"author":{"gitId":"cyaoxuan"},"content":"import seedu.address.model.person.LicencePlate;","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-26"},{"lineNumber":38,"author":{"gitId":"cyaoxuan"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-26"},{"lineNumber":41,"author":{"gitId":"cyaoxuan"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2023-11-01"},{"lineNumber":42,"author":{"gitId":"suryanshkushwaha"},"content":"import seedu.address.model.policy.Company;","lastModifiedDate":"2023-10-23"},{"lineNumber":43,"author":{"gitId":"cyaoxuan"},"content":"import seedu.address.model.policy.Policy;","lastModifiedDate":"2023-10-13"},{"lineNumber":44,"author":{"gitId":"cyaoxuan"},"content":"import seedu.address.model.policy.PolicyDate;","lastModifiedDate":"2023-10-13"},{"lineNumber":45,"author":{"gitId":"cyaoxuan"},"content":"import seedu.address.model.policy.PolicyNumber;","lastModifiedDate":"2023-10-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":" * Edits the details of an existing person in the address book.","lastModifiedDate":"2016-12-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the person identified \"","lastModifiedDate":"2016-12-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            + \"by the index number used in the displayed person list. \"","lastModifiedDate":"2018-04-01"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":64,"author":{"gitId":"suryanshkushwaha"},"content":"            + \"[\" + PREFIX_NRIC + \"NRIC] \"","lastModifiedDate":"2023-10-23"},{"lineNumber":65,"author":{"gitId":"suryanshkushwaha"},"content":"            + \"[\" + PREFIX_LICENCE_PLATE + \"LICENCE_PLATE] \"","lastModifiedDate":"2023-10-23"},{"lineNumber":66,"author":{"gitId":"suryanshkushwaha"},"content":"            + \"[\" + PREFIX_COMPANY + \"COMPANY] \"","lastModifiedDate":"2023-10-23"},{"lineNumber":67,"author":{"gitId":"suryanshkushwaha"},"content":"            + \"[\" + PREFIX_POLICY_NUMBER + \"POLICY_NUMBER] \"","lastModifiedDate":"2023-10-23"},{"lineNumber":68,"author":{"gitId":"suryanshkushwaha"},"content":"            + \"[\" + PREFIX_POLICY_ISSUE_DATE + \"POLICY_ISSUE_DATE] \"","lastModifiedDate":"2023-10-23"},{"lineNumber":69,"author":{"gitId":"suryanshkushwaha"},"content":"            + \"[\" + PREFIX_POLICY_EXPIRY_DATE + \"POLICY_EXPIRY_DATE] \"","lastModifiedDate":"2023-10-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2017-05-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited Person: %1$s\";","lastModifiedDate":"2016-12-26"},{"lineNumber":75,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":77,"author":{"gitId":"RSXIX"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"Error: This person already exists in the client list.\";","lastModifiedDate":"2023-11-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    private final EditPersonDescriptor editPersonDescriptor;","lastModifiedDate":"2016-12-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * @param index                of the person in the filtered person list to edit","lastModifiedDate":"2017-05-25"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @param editPersonDescriptor details to edit the person with","lastModifiedDate":"2016-12-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public EditCommand(Index index, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2017-05-25"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        this.editPersonDescriptor \u003d new EditPersonDescriptor(editPersonDescriptor);","lastModifiedDate":"2016-12-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":106,"author":{"gitId":"RSXIX"},"content":"        if (personToEdit.hasDefaultPolicy()) {","lastModifiedDate":"2023-11-01"},{"lineNumber":107,"author":{"gitId":"RSXIX"},"content":"            if (!editedPerson.hasDefaultPolicy() \u0026\u0026 editedPerson.hasAnyDefaultPolicyParameters()) {","lastModifiedDate":"2023-11-01"},{"lineNumber":108,"author":{"gitId":"RSXIX"},"content":"                String errorMessage \u003d MESSAGE_MISSING_FIELDS_POLICY_FOR_EDIT_COMMAND;","lastModifiedDate":"2023-11-09"},{"lineNumber":109,"author":{"gitId":"RSXIX"},"content":"                if (editedPerson.hasDefaultCompanyPolicyParameter()) {","lastModifiedDate":"2023-11-09"},{"lineNumber":110,"author":{"gitId":"RSXIX"},"content":"                    errorMessage +\u003d \"- Company(\" + PREFIX_COMPANY + \") \";","lastModifiedDate":"2023-11-09"},{"lineNumber":111,"author":{"gitId":"RSXIX"},"content":"                }","lastModifiedDate":"2023-11-09"},{"lineNumber":112,"author":{"gitId":"RSXIX"},"content":"                if (editedPerson.hasDefaultPolicyNumberParameter()) {","lastModifiedDate":"2023-11-09"},{"lineNumber":113,"author":{"gitId":"RSXIX"},"content":"                    errorMessage +\u003d \"- Policy Number(\" + PREFIX_POLICY_NUMBER + \") \";","lastModifiedDate":"2023-11-09"},{"lineNumber":114,"author":{"gitId":"RSXIX"},"content":"                }","lastModifiedDate":"2023-11-09"},{"lineNumber":115,"author":{"gitId":"RSXIX"},"content":"                if (editedPerson.hasDefaultPolicyIssueDateParameter()) {","lastModifiedDate":"2023-11-09"},{"lineNumber":116,"author":{"gitId":"RSXIX"},"content":"                    errorMessage +\u003d \"- Policy Issue Date(\" + PREFIX_POLICY_ISSUE_DATE + \") \";","lastModifiedDate":"2023-11-09"},{"lineNumber":117,"author":{"gitId":"RSXIX"},"content":"                }","lastModifiedDate":"2023-11-09"},{"lineNumber":118,"author":{"gitId":"RSXIX"},"content":"                if (editedPerson.hasDefaultPolicyExpiryDateParameter()) {","lastModifiedDate":"2023-11-09"},{"lineNumber":119,"author":{"gitId":"RSXIX"},"content":"                    errorMessage +\u003d \"- Policy Expiry Date(\" + PREFIX_POLICY_EXPIRY_DATE + \") \";","lastModifiedDate":"2023-11-09"},{"lineNumber":120,"author":{"gitId":"RSXIX"},"content":"                }","lastModifiedDate":"2023-11-09"},{"lineNumber":121,"author":{"gitId":"RSXIX"},"content":"                throw new CommandException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, errorMessage));","lastModifiedDate":"2023-11-09"},{"lineNumber":122,"author":{"gitId":"RSXIX"},"content":"            }","lastModifiedDate":"2023-11-01"},{"lineNumber":123,"author":{"gitId":"RSXIX"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":124,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":129,"author":{"gitId":"RSXIX"},"content":"        if (!editedPerson.comparePolicyNumber(personToEdit) \u0026\u0026 model.hasSamePolicyNumber(editedPerson)) {","lastModifiedDate":"2023-10-24"},{"lineNumber":130,"author":{"gitId":"RSXIX"},"content":"            throw new CommandException(MESSAGE_USED_POLICY_NUMBER);","lastModifiedDate":"2023-10-22"},{"lineNumber":131,"author":{"gitId":"RSXIX"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":132,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":133,"author":{"gitId":"RSXIX"},"content":"        if (editedPerson.comparePolicyDates() \u003c 0) {","lastModifiedDate":"2023-11-08"},{"lineNumber":134,"author":{"gitId":"RSXIX"},"content":"            throw new CommandException(MESSAGE_DATES_NOT_COMPATIBLE);","lastModifiedDate":"2023-11-08"},{"lineNumber":135,"author":{"gitId":"RSXIX"},"content":"        }","lastModifiedDate":"2023-11-08"},{"lineNumber":136,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":137,"author":{"gitId":"RSXIX"},"content":"        //If an edit is to a default policy parameter, it should make it a default policy","lastModifiedDate":"2023-11-12"},{"lineNumber":138,"author":{"gitId":"RSXIX"},"content":"        if (editedPerson.hasAnyDefaultPolicyParameters() \u0026\u0026 !personToEdit.hasAnyDefaultPolicyParameters()) {","lastModifiedDate":"2023-11-12"},{"lineNumber":139,"author":{"gitId":"RSXIX"},"content":"            Person editedPersonWithoutPolicy \u003d editedPerson.cloneWithoutPolicy();","lastModifiedDate":"2023-11-12"},{"lineNumber":140,"author":{"gitId":"RSXIX"},"content":"            model.setPerson(personToEdit, editedPersonWithoutPolicy);","lastModifiedDate":"2023-11-12"},{"lineNumber":141,"author":{"gitId":"RSXIX"},"content":"            model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2023-11-12"},{"lineNumber":142,"author":{"gitId":"RSXIX"},"content":"            return new CommandResult(","lastModifiedDate":"2023-11-12"},{"lineNumber":143,"author":{"gitId":"RSXIX"},"content":"                    String.format(MESSAGE_EDIT_PERSON_SUCCESS,","lastModifiedDate":"2023-11-12"},{"lineNumber":144,"author":{"gitId":"RSXIX"},"content":"                            Messages.format(editedPersonWithoutPolicy)));","lastModifiedDate":"2023-11-12"},{"lineNumber":145,"author":{"gitId":"RSXIX"},"content":"        }","lastModifiedDate":"2023-11-12"},{"lineNumber":146,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":149,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson)));","lastModifiedDate":"2019-02-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2016-12-26"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2016-12-26"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    private static Person createEditedPerson(Person personToEdit, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2018-01-10"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2016-12-26"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        Name updatedName \u003d editPersonDescriptor.getName().orElse(personToEdit.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        Phone updatedPhone \u003d editPersonDescriptor.getPhone().orElse(personToEdit.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        Email updatedEmail \u003d editPersonDescriptor.getEmail().orElse(personToEdit.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        Address updatedAddress \u003d editPersonDescriptor.getAddress().orElse(personToEdit.getAddress());","lastModifiedDate":"2017-06-21"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e updatedTags \u003d editPersonDescriptor.getTags().orElse(personToEdit.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":165,"author":{"gitId":"suryanshkushwaha"},"content":"        Nric updatedNric \u003d editPersonDescriptor.getNric().orElse(personToEdit.getNric());","lastModifiedDate":"2023-10-17"},{"lineNumber":166,"author":{"gitId":"suryanshkushwaha"},"content":"        LicencePlate updatedLicencePlate \u003d","lastModifiedDate":"2023-10-17"},{"lineNumber":167,"author":{"gitId":"suryanshkushwaha"},"content":"                editPersonDescriptor.getLicencePlate().orElse(personToEdit.getLicencePlate());","lastModifiedDate":"2023-10-17"},{"lineNumber":168,"author":{"gitId":"cyaoxuan"},"content":"        Remark updatedRemark \u003d personToEdit.getRemark(); // edit command does not allow editing remarks","lastModifiedDate":"2023-09-28"},{"lineNumber":169,"author":{"gitId":"suryanshkushwaha"},"content":"        Policy updatedPolicy \u003d getUpdatedPolicy(personToEdit, editPersonDescriptor);","lastModifiedDate":"2023-10-17"},{"lineNumber":170,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":171,"author":{"gitId":"cyaoxuan"},"content":"        return new Person(updatedName, updatedPhone, updatedEmail, updatedAddress, updatedTags, updatedNric,","lastModifiedDate":"2023-10-13"},{"lineNumber":172,"author":{"gitId":"cyaoxuan"},"content":"                updatedLicencePlate, updatedRemark, updatedPolicy);","lastModifiedDate":"2023-11-01"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":175,"author":{"gitId":"suryanshkushwaha"},"content":"    private static Policy getUpdatedPolicy(Person personToEdit, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2023-10-17"},{"lineNumber":176,"author":{"gitId":"suryanshkushwaha"},"content":"        Company updatedCompany \u003d editPersonDescriptor.getCompany().orElse(personToEdit.getPolicy().getCompany());","lastModifiedDate":"2023-10-23"},{"lineNumber":177,"author":{"gitId":"suryanshkushwaha"},"content":"        PolicyNumber updatedPolicyNumber \u003d","lastModifiedDate":"2023-10-17"},{"lineNumber":178,"author":{"gitId":"suryanshkushwaha"},"content":"                editPersonDescriptor.getPolicyNumber().orElse(personToEdit.getPolicy().getPolicyNumber());","lastModifiedDate":"2023-10-17"},{"lineNumber":179,"author":{"gitId":"suryanshkushwaha"},"content":"        PolicyDate updatedPolicyIssueDate \u003d","lastModifiedDate":"2023-10-17"},{"lineNumber":180,"author":{"gitId":"suryanshkushwaha"},"content":"                editPersonDescriptor.getPolicyIssueDate().orElse(personToEdit.getPolicy().getPolicyIssueDate());","lastModifiedDate":"2023-10-17"},{"lineNumber":181,"author":{"gitId":"suryanshkushwaha"},"content":"        PolicyDate updatedPolicyExpiryDate \u003d","lastModifiedDate":"2023-10-17"},{"lineNumber":182,"author":{"gitId":"suryanshkushwaha"},"content":"                editPersonDescriptor.getPolicyExpiryDate().orElse(personToEdit.getPolicy().getPolicyExpiryDate());","lastModifiedDate":"2023-10-17"},{"lineNumber":183,"author":{"gitId":"suryanshkushwaha"},"content":"        return new Policy(updatedCompany, updatedPolicyNumber, updatedPolicyIssueDate, updatedPolicyExpiryDate);","lastModifiedDate":"2023-10-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":189,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        EditCommand otherEditCommand \u003d (EditCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        return index.equals(otherEditCommand.index)","lastModifiedDate":"2023-07-13"},{"lineNumber":199,"author":{"gitId":"-"},"content":"                \u0026\u0026 editPersonDescriptor.equals(otherEditCommand.editPersonDescriptor);","lastModifiedDate":"2023-07-13"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"                .add(\"index\", index)","lastModifiedDate":"2019-02-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"                .add(\"editPersonDescriptor\", editPersonDescriptor)","lastModifiedDate":"2019-02-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":211,"author":{"gitId":"-"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2016-12-26"},{"lineNumber":212,"author":{"gitId":"-"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2016-12-26"},{"lineNumber":213,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":214,"author":{"gitId":"-"},"content":"    public static class EditPersonDescriptor {","lastModifiedDate":"2016-12-26"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        private Address address;","lastModifiedDate":"2017-06-21"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-06-21"},{"lineNumber":220,"author":{"gitId":"suryanshkushwaha"},"content":"        private Nric nric;","lastModifiedDate":"2023-10-17"},{"lineNumber":221,"author":{"gitId":"suryanshkushwaha"},"content":"        private LicencePlate licencePlate;","lastModifiedDate":"2023-10-17"},{"lineNumber":222,"author":{"gitId":"suryanshkushwaha"},"content":"        private Company company;","lastModifiedDate":"2023-10-23"},{"lineNumber":223,"author":{"gitId":"suryanshkushwaha"},"content":"        private PolicyNumber policyNumber;","lastModifiedDate":"2023-10-17"},{"lineNumber":224,"author":{"gitId":"suryanshkushwaha"},"content":"        private PolicyDate policyIssueDate;","lastModifiedDate":"2023-10-17"},{"lineNumber":225,"author":{"gitId":"suryanshkushwaha"},"content":"        private PolicyDate policyExpiryDate;","lastModifiedDate":"2023-10-17"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":227,"author":{"gitId":"suryanshkushwaha"},"content":"        public EditPersonDescriptor() {","lastModifiedDate":"2023-10-17"},{"lineNumber":228,"author":{"gitId":"suryanshkushwaha"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":230,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":231,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":232,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":233,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor(EditPersonDescriptor toCopy) {","lastModifiedDate":"2016-12-26"},{"lineNumber":235,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":236,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":237,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":238,"author":{"gitId":"-"},"content":"            setAddress(toCopy.address);","lastModifiedDate":"2018-01-15"},{"lineNumber":239,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2018-01-11"},{"lineNumber":240,"author":{"gitId":"suryanshkushwaha"},"content":"            setNric(toCopy.nric);","lastModifiedDate":"2023-10-17"},{"lineNumber":241,"author":{"gitId":"suryanshkushwaha"},"content":"            setLicencePlate(toCopy.licencePlate);","lastModifiedDate":"2023-10-17"},{"lineNumber":242,"author":{"gitId":"suryanshkushwaha"},"content":"            setCompany(toCopy.company);","lastModifiedDate":"2023-10-23"},{"lineNumber":243,"author":{"gitId":"suryanshkushwaha"},"content":"            setPolicyNumber(toCopy.policyNumber);","lastModifiedDate":"2023-10-17"},{"lineNumber":244,"author":{"gitId":"suryanshkushwaha"},"content":"            setPolicyIssueDate(toCopy.policyIssueDate);","lastModifiedDate":"2023-10-17"},{"lineNumber":245,"author":{"gitId":"suryanshkushwaha"},"content":"            setPolicyExpiryDate(toCopy.policyExpiryDate);","lastModifiedDate":"2023-10-17"},{"lineNumber":246,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":248,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":249,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":250,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":251,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":252,"author":{"gitId":"suryanshkushwaha"},"content":"            return CollectionUtil.isAnyNonNull(","lastModifiedDate":"2023-10-17"},{"lineNumber":253,"author":{"gitId":"suryanshkushwaha"},"content":"                    name,","lastModifiedDate":"2023-10-17"},{"lineNumber":254,"author":{"gitId":"suryanshkushwaha"},"content":"                    phone,","lastModifiedDate":"2023-10-17"},{"lineNumber":255,"author":{"gitId":"suryanshkushwaha"},"content":"                    email,","lastModifiedDate":"2023-10-17"},{"lineNumber":256,"author":{"gitId":"suryanshkushwaha"},"content":"                    address,","lastModifiedDate":"2023-10-17"},{"lineNumber":257,"author":{"gitId":"suryanshkushwaha"},"content":"                    tags,","lastModifiedDate":"2023-10-17"},{"lineNumber":258,"author":{"gitId":"suryanshkushwaha"},"content":"                    nric,","lastModifiedDate":"2023-10-17"},{"lineNumber":259,"author":{"gitId":"suryanshkushwaha"},"content":"                    licencePlate,","lastModifiedDate":"2023-10-17"},{"lineNumber":260,"author":{"gitId":"suryanshkushwaha"},"content":"                    company,","lastModifiedDate":"2023-10-23"},{"lineNumber":261,"author":{"gitId":"suryanshkushwaha"},"content":"                    policyNumber,","lastModifiedDate":"2023-10-17"},{"lineNumber":262,"author":{"gitId":"suryanshkushwaha"},"content":"                    policyIssueDate,","lastModifiedDate":"2023-10-17"},{"lineNumber":263,"author":{"gitId":"suryanshkushwaha"},"content":"                    policyExpiryDate","lastModifiedDate":"2023-10-17"},{"lineNumber":264,"author":{"gitId":"suryanshkushwaha"},"content":"            );","lastModifiedDate":"2023-10-17"},{"lineNumber":265,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":267,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":268,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":269,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":271,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":272,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":273,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":275,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2017-06-21"},{"lineNumber":276,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":277,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":279,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26"},{"lineNumber":280,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21"},{"lineNumber":281,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":283,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2017-06-21"},{"lineNumber":284,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2017-06-21"},{"lineNumber":285,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":287,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26"},{"lineNumber":288,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21"},{"lineNumber":289,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":291,"author":{"gitId":"-"},"content":"        public void setAddress(Address address) {","lastModifiedDate":"2017-06-21"},{"lineNumber":292,"author":{"gitId":"-"},"content":"            this.address \u003d address;","lastModifiedDate":"2017-06-21"},{"lineNumber":293,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":295,"author":{"gitId":"-"},"content":"        public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2016-12-26"},{"lineNumber":296,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(address);","lastModifiedDate":"2017-06-21"},{"lineNumber":297,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":299,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":300,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2018-01-11"},{"lineNumber":301,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":302,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":303,"author":{"gitId":"-"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-06-21"},{"lineNumber":304,"author":{"gitId":"-"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2018-01-11"},{"lineNumber":305,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":307,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":308,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2018-01-11"},{"lineNumber":309,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":310,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2018-01-11"},{"lineNumber":311,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":312,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":313,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2018-01-11"},{"lineNumber":314,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":315,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":316,"author":{"gitId":"suryanshkushwaha"},"content":"        public void setNric(Nric nric) {","lastModifiedDate":"2023-10-17"},{"lineNumber":317,"author":{"gitId":"suryanshkushwaha"},"content":"            this.nric \u003d nric;","lastModifiedDate":"2023-10-17"},{"lineNumber":318,"author":{"gitId":"suryanshkushwaha"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":319,"author":{"gitId":"suryanshkushwaha"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":320,"author":{"gitId":"suryanshkushwaha"},"content":"        public Optional\u003cNric\u003e getNric() {","lastModifiedDate":"2023-10-17"},{"lineNumber":321,"author":{"gitId":"suryanshkushwaha"},"content":"            return Optional.ofNullable(nric);","lastModifiedDate":"2023-10-17"},{"lineNumber":322,"author":{"gitId":"suryanshkushwaha"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":323,"author":{"gitId":"suryanshkushwaha"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":324,"author":{"gitId":"suryanshkushwaha"},"content":"        public void setLicencePlate(LicencePlate licencePlate) {","lastModifiedDate":"2023-10-17"},{"lineNumber":325,"author":{"gitId":"suryanshkushwaha"},"content":"            this.licencePlate \u003d licencePlate;","lastModifiedDate":"2023-10-17"},{"lineNumber":326,"author":{"gitId":"suryanshkushwaha"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":327,"author":{"gitId":"suryanshkushwaha"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":328,"author":{"gitId":"suryanshkushwaha"},"content":"        public Optional\u003cLicencePlate\u003e getLicencePlate() {","lastModifiedDate":"2023-10-17"},{"lineNumber":329,"author":{"gitId":"suryanshkushwaha"},"content":"            return Optional.ofNullable(licencePlate);","lastModifiedDate":"2023-10-17"},{"lineNumber":330,"author":{"gitId":"suryanshkushwaha"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":331,"author":{"gitId":"suryanshkushwaha"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":332,"author":{"gitId":"suryanshkushwaha"},"content":"        public void setCompany(Company company) {","lastModifiedDate":"2023-10-23"},{"lineNumber":333,"author":{"gitId":"suryanshkushwaha"},"content":"            this.company \u003d company;","lastModifiedDate":"2023-10-23"},{"lineNumber":334,"author":{"gitId":"suryanshkushwaha"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":335,"author":{"gitId":"suryanshkushwaha"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":336,"author":{"gitId":"suryanshkushwaha"},"content":"        public Optional\u003cCompany\u003e getCompany() {","lastModifiedDate":"2023-10-23"},{"lineNumber":337,"author":{"gitId":"suryanshkushwaha"},"content":"            return Optional.ofNullable(company);","lastModifiedDate":"2023-10-23"},{"lineNumber":338,"author":{"gitId":"suryanshkushwaha"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":339,"author":{"gitId":"suryanshkushwaha"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":340,"author":{"gitId":"suryanshkushwaha"},"content":"        public void setPolicyNumber(PolicyNumber policyNumber) {","lastModifiedDate":"2023-10-17"},{"lineNumber":341,"author":{"gitId":"suryanshkushwaha"},"content":"            this.policyNumber \u003d policyNumber;","lastModifiedDate":"2023-10-17"},{"lineNumber":342,"author":{"gitId":"suryanshkushwaha"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":343,"author":{"gitId":"suryanshkushwaha"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":344,"author":{"gitId":"suryanshkushwaha"},"content":"        public Optional\u003cPolicyNumber\u003e getPolicyNumber() {","lastModifiedDate":"2023-10-17"},{"lineNumber":345,"author":{"gitId":"suryanshkushwaha"},"content":"            return Optional.ofNullable(policyNumber);","lastModifiedDate":"2023-10-17"},{"lineNumber":346,"author":{"gitId":"suryanshkushwaha"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":347,"author":{"gitId":"suryanshkushwaha"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":348,"author":{"gitId":"suryanshkushwaha"},"content":"        public void setPolicyIssueDate(PolicyDate policyIssueDate) {","lastModifiedDate":"2023-10-17"},{"lineNumber":349,"author":{"gitId":"suryanshkushwaha"},"content":"            this.policyIssueDate \u003d policyIssueDate;","lastModifiedDate":"2023-10-17"},{"lineNumber":350,"author":{"gitId":"suryanshkushwaha"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":351,"author":{"gitId":"suryanshkushwaha"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":352,"author":{"gitId":"suryanshkushwaha"},"content":"        public Optional\u003cPolicyDate\u003e getPolicyIssueDate() {","lastModifiedDate":"2023-10-17"},{"lineNumber":353,"author":{"gitId":"suryanshkushwaha"},"content":"            return Optional.ofNullable(policyIssueDate);","lastModifiedDate":"2023-10-17"},{"lineNumber":354,"author":{"gitId":"suryanshkushwaha"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":355,"author":{"gitId":"suryanshkushwaha"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":356,"author":{"gitId":"suryanshkushwaha"},"content":"        public void setPolicyExpiryDate(PolicyDate policyExpiryDate) {","lastModifiedDate":"2023-10-17"},{"lineNumber":357,"author":{"gitId":"suryanshkushwaha"},"content":"            this.policyExpiryDate \u003d policyExpiryDate;","lastModifiedDate":"2023-10-17"},{"lineNumber":358,"author":{"gitId":"suryanshkushwaha"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":359,"author":{"gitId":"suryanshkushwaha"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":360,"author":{"gitId":"suryanshkushwaha"},"content":"        public Optional\u003cPolicyDate\u003e getPolicyExpiryDate() {","lastModifiedDate":"2023-10-17"},{"lineNumber":361,"author":{"gitId":"suryanshkushwaha"},"content":"            return Optional.ofNullable(policyExpiryDate);","lastModifiedDate":"2023-10-17"},{"lineNumber":362,"author":{"gitId":"suryanshkushwaha"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":363,"author":{"gitId":"suryanshkushwaha"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":364,"author":{"gitId":"suryanshkushwaha"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":365,"author":{"gitId":"suryanshkushwaha"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":366,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":367,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":368,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":369,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":370,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":371,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":372,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":373,"author":{"gitId":"-"},"content":"            if (!(other instanceof EditPersonDescriptor)) {","lastModifiedDate":"2017-05-05"},{"lineNumber":374,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":375,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":376,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":377,"author":{"gitId":"-"},"content":"            EditPersonDescriptor otherEditPersonDescriptor \u003d (EditPersonDescriptor) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":378,"author":{"gitId":"-"},"content":"            return Objects.equals(name, otherEditPersonDescriptor.name)","lastModifiedDate":"2023-07-13"},{"lineNumber":379,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(phone, otherEditPersonDescriptor.phone)","lastModifiedDate":"2023-07-13"},{"lineNumber":380,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(email, otherEditPersonDescriptor.email)","lastModifiedDate":"2023-07-13"},{"lineNumber":381,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(address, otherEditPersonDescriptor.address)","lastModifiedDate":"2023-07-13"},{"lineNumber":382,"author":{"gitId":"suryanshkushwaha"},"content":"                    \u0026\u0026 Objects.equals(tags, otherEditPersonDescriptor.tags)","lastModifiedDate":"2023-10-17"},{"lineNumber":383,"author":{"gitId":"suryanshkushwaha"},"content":"                    \u0026\u0026 Objects.equals(nric, otherEditPersonDescriptor.nric)","lastModifiedDate":"2023-10-17"},{"lineNumber":384,"author":{"gitId":"suryanshkushwaha"},"content":"                    \u0026\u0026 Objects.equals(licencePlate, otherEditPersonDescriptor.licencePlate)","lastModifiedDate":"2023-10-17"},{"lineNumber":385,"author":{"gitId":"suryanshkushwaha"},"content":"                    \u0026\u0026 Objects.equals(company, otherEditPersonDescriptor.company)","lastModifiedDate":"2023-10-23"},{"lineNumber":386,"author":{"gitId":"suryanshkushwaha"},"content":"                    \u0026\u0026 Objects.equals(policyNumber, otherEditPersonDescriptor.policyNumber)","lastModifiedDate":"2023-10-17"},{"lineNumber":387,"author":{"gitId":"suryanshkushwaha"},"content":"                    \u0026\u0026 Objects.equals(policyIssueDate, otherEditPersonDescriptor.policyIssueDate)","lastModifiedDate":"2023-10-17"},{"lineNumber":388,"author":{"gitId":"suryanshkushwaha"},"content":"                    \u0026\u0026 Objects.equals(policyExpiryDate, otherEditPersonDescriptor.policyExpiryDate);","lastModifiedDate":"2023-10-17"},{"lineNumber":389,"author":{"gitId":"suryanshkushwaha"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":390,"author":{"gitId":"suryanshkushwaha"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":391,"author":{"gitId":"suryanshkushwaha"},"content":"        protected String getPolicy() {","lastModifiedDate":"2023-10-17"},{"lineNumber":392,"author":{"gitId":"suryanshkushwaha"},"content":"            return new ToStringBuilder(this)","lastModifiedDate":"2023-10-17"},{"lineNumber":393,"author":{"gitId":"suryanshkushwaha"},"content":"                    .add(\"company\", company)","lastModifiedDate":"2023-10-23"},{"lineNumber":394,"author":{"gitId":"suryanshkushwaha"},"content":"                    .add(\"policyNumber\", policyNumber)","lastModifiedDate":"2023-10-17"},{"lineNumber":395,"author":{"gitId":"suryanshkushwaha"},"content":"                    .add(\"policyIssueDate\", policyIssueDate)","lastModifiedDate":"2023-10-17"},{"lineNumber":396,"author":{"gitId":"suryanshkushwaha"},"content":"                    .add(\"policyExpiryDate\", policyExpiryDate)","lastModifiedDate":"2023-10-17"},{"lineNumber":397,"author":{"gitId":"suryanshkushwaha"},"content":"                    .toString();","lastModifiedDate":"2023-10-17"},{"lineNumber":398,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":399,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":400,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":401,"author":{"gitId":"-"},"content":"        public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":402,"author":{"gitId":"-"},"content":"            return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":403,"author":{"gitId":"-"},"content":"                    .add(\"name\", name)","lastModifiedDate":"2019-02-23"},{"lineNumber":404,"author":{"gitId":"-"},"content":"                    .add(\"phone\", phone)","lastModifiedDate":"2019-02-23"},{"lineNumber":405,"author":{"gitId":"-"},"content":"                    .add(\"email\", email)","lastModifiedDate":"2019-02-23"},{"lineNumber":406,"author":{"gitId":"-"},"content":"                    .add(\"address\", address)","lastModifiedDate":"2019-02-23"},{"lineNumber":407,"author":{"gitId":"-"},"content":"                    .add(\"tags\", tags)","lastModifiedDate":"2019-02-23"},{"lineNumber":408,"author":{"gitId":"suryanshkushwaha"},"content":"                    .add(\"nric\", nric)","lastModifiedDate":"2023-10-17"},{"lineNumber":409,"author":{"gitId":"suryanshkushwaha"},"content":"                    .add(\"licencePlate\", licencePlate)","lastModifiedDate":"2023-10-17"},{"lineNumber":410,"author":{"gitId":"suryanshkushwaha"},"content":"                    .add(\"policy\", getPolicy())","lastModifiedDate":"2023-10-17"},{"lineNumber":411,"author":{"gitId":"-"},"content":"                    .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":412,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-02-23"},{"lineNumber":413,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":414,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"suryanshkushwaha":122,"RSXIX":44,"-":238,"cyaoxuan":10}},{"path":"src/main/java/seedu/address/logic/commands/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Terminates the program.","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"exit\";","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"RSXIX"},"content":"    public static final String MESSAGE_EXIT_ACKNOWLEDGEMENT \u003d \"Exiting Client List as requested ...\";","lastModifiedDate":"2023-11-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"RSXIX":1,"-":18}},{"path":"src/main/java/seedu/address/logic/commands/FindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"brendanneojw"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-14"},{"lineNumber":6,"author":{"gitId":"brendanneojw"},"content":"import java.util.List;","lastModifiedDate":"2023-10-14"},{"lineNumber":7,"author":{"gitId":"brendanneojw"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-14"},{"lineNumber":8,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":9,"author":{"gitId":"brendanneojw"},"content":"import seedu.address.commons.util.PredicateUtil;","lastModifiedDate":"2023-10-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"brendanneojw"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-14"},{"lineNumber":14,"author":{"gitId":"brendanneojw"},"content":"import seedu.address.model.person.predicates.CompanyContainsKeywordsPredicate;","lastModifiedDate":"2023-11-11"},{"lineNumber":15,"author":{"gitId":"brendanneojw"},"content":"import seedu.address.model.person.predicates.EmailContainsKeywordsPredicate;","lastModifiedDate":"2023-11-11"},{"lineNumber":16,"author":{"gitId":"brendanneojw"},"content":"import seedu.address.model.person.predicates.LicenceContainsKeywordsPredicate;","lastModifiedDate":"2023-11-11"},{"lineNumber":17,"author":{"gitId":"brendanneojw"},"content":"import seedu.address.model.person.predicates.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-11-11"},{"lineNumber":18,"author":{"gitId":"brendanneojw"},"content":"import seedu.address.model.person.predicates.NricContainsKeywordsPredicate;","lastModifiedDate":"2023-11-11"},{"lineNumber":19,"author":{"gitId":"brendanneojw"},"content":"import seedu.address.model.person.predicates.PhoneContainsKeywordsPredicate;","lastModifiedDate":"2023-11-11"},{"lineNumber":20,"author":{"gitId":"brendanneojw"},"content":"import seedu.address.model.person.predicates.PolicyExpiryContainsKeywordsPredicate;","lastModifiedDate":"2023-11-11"},{"lineNumber":21,"author":{"gitId":"brendanneojw"},"content":"import seedu.address.model.person.predicates.PolicyIssueContainsKeywordsPredicate;","lastModifiedDate":"2023-11-11"},{"lineNumber":22,"author":{"gitId":"brendanneojw"},"content":"import seedu.address.model.person.predicates.PolicyNumberContainsKeywordsPredicate;","lastModifiedDate":"2023-11-11"},{"lineNumber":23,"author":{"gitId":"brendanneojw"},"content":"import seedu.address.model.person.predicates.TagContainsKeywordsPredicate;","lastModifiedDate":"2023-11-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * Finds and lists all persons in address book whose name contains any of the argument keywords.","lastModifiedDate":"2016-09-22"},{"lineNumber":27,"author":{"gitId":"brendanneojw"},"content":" * Keyword matching is case-insensitive.","lastModifiedDate":"2023-10-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2016-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all persons whose names contain any of \"","lastModifiedDate":"2016-09-22"},{"lineNumber":34,"author":{"gitId":"brendanneojw"},"content":"            + \"the specified fields (case-insensitive for values) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2023-10-14"},{"lineNumber":35,"author":{"gitId":"brendanneojw"},"content":"            + \"Parameters: [n/NAME] [i/NRIC] [p/CONTACT NUMBER] [l/LICENCE PLATE] [e/EMAIL] [t/TAG]\"","lastModifiedDate":"2023-11-07"},{"lineNumber":36,"author":{"gitId":"brendanneojw"},"content":"            + \"[c/COMPANY] [pn/POLICY NUMBER] [pi/POLICY ISSUE DATE] [pe/POLICY EXPIRY DATE]\\n\"","lastModifiedDate":"2023-11-01"},{"lineNumber":37,"author":{"gitId":"brendanneojw"},"content":"            + \"At least one parameter must be present.\\n\"","lastModifiedDate":"2023-11-01"},{"lineNumber":38,"author":{"gitId":"brendanneojw"},"content":"            + \"Example: \" + COMMAND_WORD + \" n/Alice Rodriguez\";","lastModifiedDate":"2023-10-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":40,"author":{"gitId":"brendanneojw"},"content":"    private final NameContainsKeywordsPredicate namePredicate;","lastModifiedDate":"2023-10-13"},{"lineNumber":41,"author":{"gitId":"brendanneojw"},"content":"    private final PhoneContainsKeywordsPredicate phonePredicate;","lastModifiedDate":"2023-10-18"},{"lineNumber":42,"author":{"gitId":"brendanneojw"},"content":"    private final EmailContainsKeywordsPredicate emailPredicate;","lastModifiedDate":"2023-10-18"},{"lineNumber":43,"author":{"gitId":"suryanshkushwaha"},"content":"    private final TagContainsKeywordsPredicate tagPredicate;","lastModifiedDate":"2023-10-23"},{"lineNumber":44,"author":{"gitId":"suryanshkushwaha"},"content":"    private final NricContainsKeywordsPredicate nricPredicate;","lastModifiedDate":"2023-10-23"},{"lineNumber":45,"author":{"gitId":"suryanshkushwaha"},"content":"    private final LicenceContainsKeywordsPredicate licencePredicate;","lastModifiedDate":"2023-10-23"},{"lineNumber":46,"author":{"gitId":"suryanshkushwaha"},"content":"    private final CompanyContainsKeywordsPredicate companyPredicate;","lastModifiedDate":"2023-10-23"},{"lineNumber":47,"author":{"gitId":"suryanshkushwaha"},"content":"    private final PolicyNumberContainsKeywordsPredicate policyNumberPredicate;","lastModifiedDate":"2023-10-23"},{"lineNumber":48,"author":{"gitId":"brendanneojw"},"content":"    private final PolicyIssueContainsKeywordsPredicate policyIssuePredicate;","lastModifiedDate":"2023-10-18"},{"lineNumber":49,"author":{"gitId":"suryanshkushwaha"},"content":"    private final PolicyExpiryContainsKeywordsPredicate policyExpiryPredicate;","lastModifiedDate":"2023-10-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":51,"author":{"gitId":"brendanneojw"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":52,"author":{"gitId":"brendanneojw"},"content":"     * Constructor for FindCommand","lastModifiedDate":"2023-10-13"},{"lineNumber":53,"author":{"gitId":"brendanneojw"},"content":"     *","lastModifiedDate":"2023-10-13"},{"lineNumber":54,"author":{"gitId":"brendanneojw"},"content":"     * @param namePredicate the predicate to be used for finding by name","lastModifiedDate":"2023-10-13"},{"lineNumber":55,"author":{"gitId":"brendanneojw"},"content":"     * @param licencePredicate the predicate to be used for finding by licence plate number","lastModifiedDate":"2023-10-13"},{"lineNumber":56,"author":{"gitId":"brendanneojw"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":57,"author":{"gitId":"brendanneojw"},"content":"    public FindCommand(NameContainsKeywordsPredicate namePredicate,","lastModifiedDate":"2023-10-13"},{"lineNumber":58,"author":{"gitId":"brendanneojw"},"content":"                       LicenceContainsKeywordsPredicate licencePredicate,","lastModifiedDate":"2023-10-18"},{"lineNumber":59,"author":{"gitId":"brendanneojw"},"content":"                       NricContainsKeywordsPredicate nricPredicate,","lastModifiedDate":"2023-10-18"},{"lineNumber":60,"author":{"gitId":"brendanneojw"},"content":"                       PhoneContainsKeywordsPredicate phonePredicate,","lastModifiedDate":"2023-10-18"},{"lineNumber":61,"author":{"gitId":"brendanneojw"},"content":"                       PolicyNumberContainsKeywordsPredicate policyNumberPredicate,","lastModifiedDate":"2023-10-18"},{"lineNumber":62,"author":{"gitId":"brendanneojw"},"content":"                       TagContainsKeywordsPredicate tagPredicate,","lastModifiedDate":"2023-10-18"},{"lineNumber":63,"author":{"gitId":"brendanneojw"},"content":"                       PolicyExpiryContainsKeywordsPredicate policyExpiryPredicate,","lastModifiedDate":"2023-10-18"},{"lineNumber":64,"author":{"gitId":"brendanneojw"},"content":"                       EmailContainsKeywordsPredicate emailPredicate,","lastModifiedDate":"2023-10-18"},{"lineNumber":65,"author":{"gitId":"suryanshkushwaha"},"content":"                       PolicyIssueContainsKeywordsPredicate policyIssuePredicate,","lastModifiedDate":"2023-10-23"},{"lineNumber":66,"author":{"gitId":"suryanshkushwaha"},"content":"                       CompanyContainsKeywordsPredicate companyPredicate) {","lastModifiedDate":"2023-10-23"},{"lineNumber":67,"author":{"gitId":"brendanneojw"},"content":"        this.namePredicate \u003d namePredicate;","lastModifiedDate":"2023-10-13"},{"lineNumber":68,"author":{"gitId":"brendanneojw"},"content":"        this.licencePredicate \u003d licencePredicate;","lastModifiedDate":"2023-10-13"},{"lineNumber":69,"author":{"gitId":"brendanneojw"},"content":"        this.nricPredicate \u003d nricPredicate;","lastModifiedDate":"2023-10-18"},{"lineNumber":70,"author":{"gitId":"brendanneojw"},"content":"        this.phonePredicate \u003d phonePredicate;","lastModifiedDate":"2023-10-18"},{"lineNumber":71,"author":{"gitId":"brendanneojw"},"content":"        this.policyNumberPredicate \u003d policyNumberPredicate;","lastModifiedDate":"2023-10-18"},{"lineNumber":72,"author":{"gitId":"brendanneojw"},"content":"        this.tagPredicate \u003d tagPredicate;","lastModifiedDate":"2023-10-18"},{"lineNumber":73,"author":{"gitId":"brendanneojw"},"content":"        this.policyExpiryPredicate \u003d policyExpiryPredicate;","lastModifiedDate":"2023-10-18"},{"lineNumber":74,"author":{"gitId":"brendanneojw"},"content":"        this.emailPredicate \u003d emailPredicate;","lastModifiedDate":"2023-10-18"},{"lineNumber":75,"author":{"gitId":"brendanneojw"},"content":"        this.policyIssuePredicate \u003d policyIssuePredicate;","lastModifiedDate":"2023-10-18"},{"lineNumber":76,"author":{"gitId":"suryanshkushwaha"},"content":"        this.companyPredicate \u003d companyPredicate;","lastModifiedDate":"2023-10-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"brendanneojw"},"content":"        assert namePredicate !\u003d null : \"Name Predicate should never be null\";","lastModifiedDate":"2023-10-26"},{"lineNumber":83,"author":{"gitId":"brendanneojw"},"content":"        assert licencePredicate !\u003d null : \"Licence plate predicate should never be null\";","lastModifiedDate":"2023-10-26"},{"lineNumber":84,"author":{"gitId":"brendanneojw"},"content":"        assert nricPredicate !\u003d null : \"NRIC predicate should never be null\";","lastModifiedDate":"2023-10-26"},{"lineNumber":85,"author":{"gitId":"brendanneojw"},"content":"        assert phonePredicate !\u003d null : \"Phone predicate should never be null\";","lastModifiedDate":"2023-10-26"},{"lineNumber":86,"author":{"gitId":"brendanneojw"},"content":"        assert policyNumberPredicate !\u003d null : \"Policy number predicate should never be null\";","lastModifiedDate":"2023-10-26"},{"lineNumber":87,"author":{"gitId":"brendanneojw"},"content":"        assert tagPredicate !\u003d null : \"Tag predicate should never be null\";","lastModifiedDate":"2023-10-26"},{"lineNumber":88,"author":{"gitId":"brendanneojw"},"content":"        assert policyExpiryPredicate !\u003d null : \"Policy expiry predicate should never be null\";","lastModifiedDate":"2023-10-26"},{"lineNumber":89,"author":{"gitId":"brendanneojw"},"content":"        assert emailPredicate !\u003d null : \"Email predicate should never be null\";","lastModifiedDate":"2023-10-26"},{"lineNumber":90,"author":{"gitId":"brendanneojw"},"content":"        assert policyIssuePredicate !\u003d null : \"Policy issue predicate should never be null\";","lastModifiedDate":"2023-10-26"},{"lineNumber":91,"author":{"gitId":"brendanneojw"},"content":"        assert companyPredicate !\u003d null : \"Company predicate should never be null\";","lastModifiedDate":"2023-10-26"},{"lineNumber":92,"author":{"gitId":"brendanneojw"},"content":"        List\u003cPredicate\u003cPerson\u003e\u003e predicates \u003d addAllToPredicatesList();","lastModifiedDate":"2023-10-18"},{"lineNumber":93,"author":{"gitId":"brendanneojw"},"content":"        model.updateFilteredPersonList(PredicateUtil.combinePredicates(predicates));","lastModifiedDate":"2023-10-14"},{"lineNumber":94,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        return new CommandResult(","lastModifiedDate":"2018-04-01"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, model.getFilteredPersonList().size()));","lastModifiedDate":"2018-04-01"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        if (!(other instanceof FindCommand)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        FindCommand otherFindCommand \u003d (FindCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":111,"author":{"gitId":"brendanneojw"},"content":"        return namePredicate.equals(otherFindCommand.namePredicate)","lastModifiedDate":"2023-10-13"},{"lineNumber":112,"author":{"gitId":"suryanshkushwaha"},"content":"                \u0026\u0026 phonePredicate.equals(otherFindCommand.phonePredicate)","lastModifiedDate":"2023-10-23"},{"lineNumber":113,"author":{"gitId":"suryanshkushwaha"},"content":"                \u0026\u0026 emailPredicate.equals(otherFindCommand.emailPredicate)","lastModifiedDate":"2023-10-23"},{"lineNumber":114,"author":{"gitId":"suryanshkushwaha"},"content":"                \u0026\u0026 tagPredicate.equals(otherFindCommand.tagPredicate)","lastModifiedDate":"2023-10-23"},{"lineNumber":115,"author":{"gitId":"suryanshkushwaha"},"content":"                \u0026\u0026 nricPredicate.equals(otherFindCommand.nricPredicate)","lastModifiedDate":"2023-10-23"},{"lineNumber":116,"author":{"gitId":"suryanshkushwaha"},"content":"                \u0026\u0026 licencePredicate.equals(otherFindCommand.licencePredicate)","lastModifiedDate":"2023-10-23"},{"lineNumber":117,"author":{"gitId":"suryanshkushwaha"},"content":"                \u0026\u0026 companyPredicate.equals(otherFindCommand.companyPredicate)","lastModifiedDate":"2023-10-23"},{"lineNumber":118,"author":{"gitId":"suryanshkushwaha"},"content":"                \u0026\u0026 policyNumberPredicate.equals(otherFindCommand.policyNumberPredicate)","lastModifiedDate":"2023-10-23"},{"lineNumber":119,"author":{"gitId":"suryanshkushwaha"},"content":"                \u0026\u0026 policyExpiryPredicate.equals(otherFindCommand.policyExpiryPredicate)","lastModifiedDate":"2023-10-23"},{"lineNumber":120,"author":{"gitId":"suryanshkushwaha"},"content":"                \u0026\u0026 policyIssuePredicate.equals(otherFindCommand.policyIssuePredicate);","lastModifiedDate":"2023-10-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":126,"author":{"gitId":"brendanneojw"},"content":"                .add(\"name predicate\", namePredicate)","lastModifiedDate":"2023-10-13"},{"lineNumber":127,"author":{"gitId":"brendanneojw"},"content":"                .add(\"licence predicate\", licencePredicate)","lastModifiedDate":"2023-10-13"},{"lineNumber":128,"author":{"gitId":"brendanneojw"},"content":"                .add(\"nric predicate\", nricPredicate)","lastModifiedDate":"2023-10-18"},{"lineNumber":129,"author":{"gitId":"brendanneojw"},"content":"                .add(\"phone predicate\", phonePredicate)","lastModifiedDate":"2023-10-18"},{"lineNumber":130,"author":{"gitId":"brendanneojw"},"content":"                .add(\"policy number predicate\", policyNumberPredicate)","lastModifiedDate":"2023-10-18"},{"lineNumber":131,"author":{"gitId":"brendanneojw"},"content":"                .add(\"tag predicate\", tagPredicate)","lastModifiedDate":"2023-10-18"},{"lineNumber":132,"author":{"gitId":"brendanneojw"},"content":"                .add(\"policy expiry predicate\", policyExpiryPredicate)","lastModifiedDate":"2023-10-18"},{"lineNumber":133,"author":{"gitId":"brendanneojw"},"content":"                .add(\"email predicate\", emailPredicate)","lastModifiedDate":"2023-10-18"},{"lineNumber":134,"author":{"gitId":"brendanneojw"},"content":"                .add(\"policy issue predicate\", policyIssuePredicate)","lastModifiedDate":"2023-10-18"},{"lineNumber":135,"author":{"gitId":"suryanshkushwaha"},"content":"                .add(\"company predicate\", companyPredicate)","lastModifiedDate":"2023-10-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":138,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":139,"author":{"gitId":"brendanneojw"},"content":"    private List\u003cPredicate\u003cPerson\u003e\u003e addAllToPredicatesList() {","lastModifiedDate":"2023-10-18"},{"lineNumber":140,"author":{"gitId":"brendanneojw"},"content":"        List\u003cPredicate\u003cPerson\u003e\u003e predicates \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-14"},{"lineNumber":141,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":142,"author":{"gitId":"brendanneojw"},"content":"        if (!namePredicate.isEmpty()) {","lastModifiedDate":"2023-10-14"},{"lineNumber":143,"author":{"gitId":"brendanneojw"},"content":"            predicates.add(namePredicate);","lastModifiedDate":"2023-10-14"},{"lineNumber":144,"author":{"gitId":"brendanneojw"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":145,"author":{"gitId":"brendanneojw"},"content":"        if (!licencePredicate.isEmpty()) {","lastModifiedDate":"2023-10-14"},{"lineNumber":146,"author":{"gitId":"brendanneojw"},"content":"            predicates.add(licencePredicate);","lastModifiedDate":"2023-10-14"},{"lineNumber":147,"author":{"gitId":"brendanneojw"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":148,"author":{"gitId":"brendanneojw"},"content":"        if (!nricPredicate.isEmpty()) {","lastModifiedDate":"2023-10-18"},{"lineNumber":149,"author":{"gitId":"brendanneojw"},"content":"            predicates.add(nricPredicate);","lastModifiedDate":"2023-10-18"},{"lineNumber":150,"author":{"gitId":"brendanneojw"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":151,"author":{"gitId":"brendanneojw"},"content":"        if (!phonePredicate.isEmpty()) {","lastModifiedDate":"2023-10-18"},{"lineNumber":152,"author":{"gitId":"brendanneojw"},"content":"            predicates.add(phonePredicate);","lastModifiedDate":"2023-10-18"},{"lineNumber":153,"author":{"gitId":"brendanneojw"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":154,"author":{"gitId":"brendanneojw"},"content":"        if (!policyNumberPredicate.isEmpty()) {","lastModifiedDate":"2023-10-18"},{"lineNumber":155,"author":{"gitId":"brendanneojw"},"content":"            predicates.add(policyNumberPredicate);","lastModifiedDate":"2023-10-18"},{"lineNumber":156,"author":{"gitId":"brendanneojw"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":157,"author":{"gitId":"brendanneojw"},"content":"        if (!tagPredicate.isEmpty()) {","lastModifiedDate":"2023-10-18"},{"lineNumber":158,"author":{"gitId":"brendanneojw"},"content":"            predicates.add(tagPredicate);","lastModifiedDate":"2023-10-18"},{"lineNumber":159,"author":{"gitId":"brendanneojw"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":160,"author":{"gitId":"brendanneojw"},"content":"        if (!policyExpiryPredicate.isEmpty()) {","lastModifiedDate":"2023-10-18"},{"lineNumber":161,"author":{"gitId":"brendanneojw"},"content":"            predicates.add(policyExpiryPredicate);","lastModifiedDate":"2023-10-18"},{"lineNumber":162,"author":{"gitId":"brendanneojw"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":163,"author":{"gitId":"brendanneojw"},"content":"        if (!emailPredicate.isEmpty()) {","lastModifiedDate":"2023-10-18"},{"lineNumber":164,"author":{"gitId":"brendanneojw"},"content":"            predicates.add(emailPredicate);","lastModifiedDate":"2023-10-18"},{"lineNumber":165,"author":{"gitId":"brendanneojw"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":166,"author":{"gitId":"brendanneojw"},"content":"        if (!policyIssuePredicate.isEmpty()) {","lastModifiedDate":"2023-10-18"},{"lineNumber":167,"author":{"gitId":"brendanneojw"},"content":"            predicates.add(policyIssuePredicate);","lastModifiedDate":"2023-10-18"},{"lineNumber":168,"author":{"gitId":"brendanneojw"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":169,"author":{"gitId":"suryanshkushwaha"},"content":"        if (!companyPredicate.isEmpty()) {","lastModifiedDate":"2023-10-23"},{"lineNumber":170,"author":{"gitId":"suryanshkushwaha"},"content":"            predicates.add(companyPredicate);","lastModifiedDate":"2023-10-23"},{"lineNumber":171,"author":{"gitId":"suryanshkushwaha"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":172,"author":{"gitId":"brendanneojw"},"content":"        return predicates;","lastModifiedDate":"2023-10-14"},{"lineNumber":173,"author":{"gitId":"brendanneojw"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":174,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"brendanneojw":105,"suryanshkushwaha":22,"-":47}},{"path":"src/main/java/seedu/address/logic/commands/RemarkCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cyaoxuan"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-09-28"},{"lineNumber":2,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":3,"author":{"gitId":"cyaoxuan"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-09-28"},{"lineNumber":4,"author":{"gitId":"cyaoxuan"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2023-09-28"},{"lineNumber":5,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":6,"author":{"gitId":"cyaoxuan"},"content":"import java.util.List;","lastModifiedDate":"2023-09-28"},{"lineNumber":7,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":8,"author":{"gitId":"cyaoxuan"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-09-28"},{"lineNumber":9,"author":{"gitId":"cyaoxuan"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-09-28"},{"lineNumber":10,"author":{"gitId":"cyaoxuan"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-09-28"},{"lineNumber":11,"author":{"gitId":"cyaoxuan"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-09-28"},{"lineNumber":12,"author":{"gitId":"cyaoxuan"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-09-28"},{"lineNumber":13,"author":{"gitId":"cyaoxuan"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2023-09-28"},{"lineNumber":14,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":15,"author":{"gitId":"cyaoxuan"},"content":"/**","lastModifiedDate":"2023-09-28"},{"lineNumber":16,"author":{"gitId":"cyaoxuan"},"content":" * Changes the remark of an existing person in the address book.","lastModifiedDate":"2023-09-28"},{"lineNumber":17,"author":{"gitId":"cyaoxuan"},"content":" */","lastModifiedDate":"2023-09-28"},{"lineNumber":18,"author":{"gitId":"cyaoxuan"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2023-09-28"},{"lineNumber":19,"author":{"gitId":"cyaoxuan"},"content":"    public static final String COMMAND_WORD \u003d \"remark\";","lastModifiedDate":"2023-09-28"},{"lineNumber":20,"author":{"gitId":"cyaoxuan"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-09-28"},{"lineNumber":21,"author":{"gitId":"cyaoxuan"},"content":"            + \": Edits the remark of the person identified \"","lastModifiedDate":"2023-09-28"},{"lineNumber":22,"author":{"gitId":"cyaoxuan"},"content":"            + \"by the index number used in the last person listing. \"","lastModifiedDate":"2023-09-28"},{"lineNumber":23,"author":{"gitId":"cyaoxuan"},"content":"            + \"Existing remark will be overwritten by the input.\\n\"","lastModifiedDate":"2023-09-28"},{"lineNumber":24,"author":{"gitId":"cyaoxuan"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2023-09-28"},{"lineNumber":25,"author":{"gitId":"cyaoxuan"},"content":"            + \"r/[REMARK]\\n\"","lastModifiedDate":"2023-09-28"},{"lineNumber":26,"author":{"gitId":"cyaoxuan"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2023-09-28"},{"lineNumber":27,"author":{"gitId":"cyaoxuan"},"content":"            + \"r/Likes to swim.\";","lastModifiedDate":"2023-09-28"},{"lineNumber":28,"author":{"gitId":"cyaoxuan"},"content":"    public static final String MESSAGE_ARGUMENTS \u003d \"Index: %1$d, Remark: %2$s\";","lastModifiedDate":"2023-09-28"},{"lineNumber":29,"author":{"gitId":"cyaoxuan"},"content":"    public static final String MESSAGE_ADD_REMARK_SUCCESS \u003d \"Added remark to Person: %1$s\";","lastModifiedDate":"2023-09-28"},{"lineNumber":30,"author":{"gitId":"cyaoxuan"},"content":"    public static final String MESSAGE_DELETE_REMARK_SUCCESS \u003d \"Removed remark from Person: %1$s\";","lastModifiedDate":"2023-09-28"},{"lineNumber":31,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":32,"author":{"gitId":"cyaoxuan"},"content":"    private final Index index;","lastModifiedDate":"2023-09-28"},{"lineNumber":33,"author":{"gitId":"cyaoxuan"},"content":"    private final Remark remark;","lastModifiedDate":"2023-09-28"},{"lineNumber":34,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":35,"author":{"gitId":"cyaoxuan"},"content":"    /**","lastModifiedDate":"2023-09-28"},{"lineNumber":36,"author":{"gitId":"cyaoxuan"},"content":"     * @param index of the person in the filtered person list to edit the remark","lastModifiedDate":"2023-09-28"},{"lineNumber":37,"author":{"gitId":"cyaoxuan"},"content":"     * @param remark of the person to be updated to","lastModifiedDate":"2023-09-28"},{"lineNumber":38,"author":{"gitId":"cyaoxuan"},"content":"     */","lastModifiedDate":"2023-09-28"},{"lineNumber":39,"author":{"gitId":"cyaoxuan"},"content":"    public RemarkCommand(Index index, Remark remark) {","lastModifiedDate":"2023-09-28"},{"lineNumber":40,"author":{"gitId":"cyaoxuan"},"content":"        requireAllNonNull(index, remark);","lastModifiedDate":"2023-09-28"},{"lineNumber":41,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":42,"author":{"gitId":"cyaoxuan"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-09-28"},{"lineNumber":43,"author":{"gitId":"cyaoxuan"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2023-09-28"},{"lineNumber":44,"author":{"gitId":"cyaoxuan"},"content":"    }","lastModifiedDate":"2023-09-28"},{"lineNumber":45,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":46,"author":{"gitId":"cyaoxuan"},"content":"    @Override","lastModifiedDate":"2023-09-28"},{"lineNumber":47,"author":{"gitId":"cyaoxuan"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-09-28"},{"lineNumber":48,"author":{"gitId":"cyaoxuan"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2023-09-28"},{"lineNumber":49,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":50,"author":{"gitId":"cyaoxuan"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-09-28"},{"lineNumber":51,"author":{"gitId":"cyaoxuan"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-09-28"},{"lineNumber":52,"author":{"gitId":"cyaoxuan"},"content":"        }","lastModifiedDate":"2023-09-28"},{"lineNumber":53,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":54,"author":{"gitId":"cyaoxuan"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2023-09-28"},{"lineNumber":55,"author":{"gitId":"cyaoxuan"},"content":"        Person editedPerson \u003d new Person(","lastModifiedDate":"2023-09-28"},{"lineNumber":56,"author":{"gitId":"cyaoxuan"},"content":"                personToEdit.getName(), personToEdit.getPhone(), personToEdit.getEmail(),","lastModifiedDate":"2023-09-28"},{"lineNumber":57,"author":{"gitId":"cyaoxuan"},"content":"                personToEdit.getAddress(), personToEdit.getTags(), personToEdit.getNric(),","lastModifiedDate":"2023-11-01"},{"lineNumber":58,"author":{"gitId":"cyaoxuan"},"content":"                personToEdit.getLicencePlate(), remark, personToEdit.getPolicy());","lastModifiedDate":"2023-11-01"},{"lineNumber":59,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":60,"author":{"gitId":"cyaoxuan"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2023-09-28"},{"lineNumber":61,"author":{"gitId":"cyaoxuan"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2023-09-28"},{"lineNumber":62,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":63,"author":{"gitId":"cyaoxuan"},"content":"        return new CommandResult(generateSuccessMessage(editedPerson));","lastModifiedDate":"2023-09-28"},{"lineNumber":64,"author":{"gitId":"cyaoxuan"},"content":"    }","lastModifiedDate":"2023-09-28"},{"lineNumber":65,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":66,"author":{"gitId":"cyaoxuan"},"content":"    /**","lastModifiedDate":"2023-09-28"},{"lineNumber":67,"author":{"gitId":"cyaoxuan"},"content":"     * Generates a command execution success message based on whether","lastModifiedDate":"2023-09-28"},{"lineNumber":68,"author":{"gitId":"cyaoxuan"},"content":"     * the remark is added to or removed from","lastModifiedDate":"2023-09-28"},{"lineNumber":69,"author":{"gitId":"cyaoxuan"},"content":"     * {@code personToEdit}.","lastModifiedDate":"2023-09-28"},{"lineNumber":70,"author":{"gitId":"cyaoxuan"},"content":"     */","lastModifiedDate":"2023-09-28"},{"lineNumber":71,"author":{"gitId":"cyaoxuan"},"content":"    private String generateSuccessMessage(Person personToEdit) {","lastModifiedDate":"2023-09-28"},{"lineNumber":72,"author":{"gitId":"cyaoxuan"},"content":"        String message \u003d !remark.value.isEmpty() ? MESSAGE_ADD_REMARK_SUCCESS : MESSAGE_DELETE_REMARK_SUCCESS;","lastModifiedDate":"2023-09-28"},{"lineNumber":73,"author":{"gitId":"brendanneojw"},"content":"        return String.format(message, Messages.format(personToEdit));","lastModifiedDate":"2023-11-01"},{"lineNumber":74,"author":{"gitId":"cyaoxuan"},"content":"    }","lastModifiedDate":"2023-09-28"},{"lineNumber":75,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":76,"author":{"gitId":"cyaoxuan"},"content":"    @Override","lastModifiedDate":"2023-09-28"},{"lineNumber":77,"author":{"gitId":"cyaoxuan"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-09-28"},{"lineNumber":78,"author":{"gitId":"cyaoxuan"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-09-28"},{"lineNumber":79,"author":{"gitId":"cyaoxuan"},"content":"            return true;","lastModifiedDate":"2023-09-28"},{"lineNumber":80,"author":{"gitId":"cyaoxuan"},"content":"        }","lastModifiedDate":"2023-09-28"},{"lineNumber":81,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":82,"author":{"gitId":"cyaoxuan"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-09-28"},{"lineNumber":83,"author":{"gitId":"cyaoxuan"},"content":"        if (!(other instanceof RemarkCommand)) {","lastModifiedDate":"2023-09-28"},{"lineNumber":84,"author":{"gitId":"cyaoxuan"},"content":"            return false;","lastModifiedDate":"2023-09-28"},{"lineNumber":85,"author":{"gitId":"cyaoxuan"},"content":"        }","lastModifiedDate":"2023-09-28"},{"lineNumber":86,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":87,"author":{"gitId":"cyaoxuan"},"content":"        RemarkCommand e \u003d (RemarkCommand) other;","lastModifiedDate":"2023-09-28"},{"lineNumber":88,"author":{"gitId":"cyaoxuan"},"content":"        return index.equals(e.index)","lastModifiedDate":"2023-09-28"},{"lineNumber":89,"author":{"gitId":"cyaoxuan"},"content":"                \u0026\u0026 remark.equals(e.remark);","lastModifiedDate":"2023-09-28"},{"lineNumber":90,"author":{"gitId":"cyaoxuan"},"content":"    }","lastModifiedDate":"2023-09-28"},{"lineNumber":91,"author":{"gitId":"cyaoxuan"},"content":"}","lastModifiedDate":"2023-09-28"}],"authorContributionMap":{"brendanneojw":1,"cyaoxuan":90}},{"path":"src/main/java/seedu/address/logic/commands/RemindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"brendanneojw"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-25"},{"lineNumber":2,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":3,"author":{"gitId":"brendanneojw"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-25"},{"lineNumber":4,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":5,"author":{"gitId":"brendanneojw"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-11-12"},{"lineNumber":6,"author":{"gitId":"brendanneojw"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"brendanneojw"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"brendanneojw"},"content":"import seedu.address.model.person.predicates.RemindPredicate;","lastModifiedDate":"2023-11-11"},{"lineNumber":9,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"brendanneojw"},"content":"/**","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"brendanneojw"},"content":" * Finds and lists all persons in address book whose policy expiry date is approaching within a certain period.","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"brendanneojw"},"content":" */","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"brendanneojw"},"content":"public class RemindCommand extends Command {","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"brendanneojw"},"content":"    public static final String COMMAND_WORD \u003d \"remind\";","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"brendanneojw"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all persons whose policy expiry dates is within \"","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"brendanneojw"},"content":"            + \"the specified number of days.\\n\"","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"brendanneojw"},"content":"            + \"Parameters: Number of days\\n\"","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"brendanneojw"},"content":"            + \"Example: \" + COMMAND_WORD + \" 30\";","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"brendanneojw"},"content":"    private final RemindPredicate remindPredicate;","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":25,"author":{"gitId":"brendanneojw"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"brendanneojw"},"content":"     * Constructor for RemindCommand.","lastModifiedDate":"2023-10-26"},{"lineNumber":27,"author":{"gitId":"brendanneojw"},"content":"     *","lastModifiedDate":"2023-10-25"},{"lineNumber":28,"author":{"gitId":"brendanneojw"},"content":"     * @param remindPredicate the predicate to be used for filtering the persons list based on policy expiry date.","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"brendanneojw"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":30,"author":{"gitId":"brendanneojw"},"content":"    public RemindCommand(RemindPredicate remindPredicate) {","lastModifiedDate":"2023-10-25"},{"lineNumber":31,"author":{"gitId":"brendanneojw"},"content":"        this.remindPredicate \u003d remindPredicate;","lastModifiedDate":"2023-10-25"},{"lineNumber":32,"author":{"gitId":"brendanneojw"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":33,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":34,"author":{"gitId":"brendanneojw"},"content":"    @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":35,"author":{"gitId":"brendanneojw"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2023-10-25"},{"lineNumber":36,"author":{"gitId":"brendanneojw"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-25"},{"lineNumber":37,"author":{"gitId":"brendanneojw"},"content":"        assert remindPredicate !\u003d null : \"Predicate should never be null\";","lastModifiedDate":"2023-10-26"},{"lineNumber":38,"author":{"gitId":"brendanneojw"},"content":"        model.updateFilteredPersonList(remindPredicate);","lastModifiedDate":"2023-10-25"},{"lineNumber":39,"author":{"gitId":"brendanneojw"},"content":"        return new CommandResult(","lastModifiedDate":"2023-10-25"},{"lineNumber":40,"author":{"gitId":"brendanneojw"},"content":"                String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, model.getFilteredPersonList().size()));","lastModifiedDate":"2023-10-25"},{"lineNumber":41,"author":{"gitId":"brendanneojw"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":42,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":43,"author":{"gitId":"brendanneojw"},"content":"    @Override","lastModifiedDate":"2023-11-12"},{"lineNumber":44,"author":{"gitId":"brendanneojw"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-11-12"},{"lineNumber":45,"author":{"gitId":"brendanneojw"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-11-12"},{"lineNumber":46,"author":{"gitId":"brendanneojw"},"content":"            return true;","lastModifiedDate":"2023-11-12"},{"lineNumber":47,"author":{"gitId":"brendanneojw"},"content":"        }","lastModifiedDate":"2023-11-12"},{"lineNumber":48,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":49,"author":{"gitId":"brendanneojw"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-11-12"},{"lineNumber":50,"author":{"gitId":"brendanneojw"},"content":"        if (!(other instanceof RemindCommand)) {","lastModifiedDate":"2023-11-12"},{"lineNumber":51,"author":{"gitId":"brendanneojw"},"content":"            return false;","lastModifiedDate":"2023-11-12"},{"lineNumber":52,"author":{"gitId":"brendanneojw"},"content":"        }","lastModifiedDate":"2023-11-12"},{"lineNumber":53,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":54,"author":{"gitId":"brendanneojw"},"content":"        RemindCommand otherFindCommand \u003d (RemindCommand) other;","lastModifiedDate":"2023-11-12"},{"lineNumber":55,"author":{"gitId":"brendanneojw"},"content":"        return remindPredicate.equals(otherFindCommand.remindPredicate);","lastModifiedDate":"2023-11-12"},{"lineNumber":56,"author":{"gitId":"brendanneojw"},"content":"    }","lastModifiedDate":"2023-11-12"},{"lineNumber":57,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":58,"author":{"gitId":"brendanneojw"},"content":"    @Override","lastModifiedDate":"2023-11-12"},{"lineNumber":59,"author":{"gitId":"brendanneojw"},"content":"    public String toString() {","lastModifiedDate":"2023-11-12"},{"lineNumber":60,"author":{"gitId":"brendanneojw"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-11-12"},{"lineNumber":61,"author":{"gitId":"brendanneojw"},"content":"                .add(\"remind predicate\", remindPredicate)","lastModifiedDate":"2023-11-12"},{"lineNumber":62,"author":{"gitId":"brendanneojw"},"content":"                .toString();","lastModifiedDate":"2023-11-12"},{"lineNumber":63,"author":{"gitId":"brendanneojw"},"content":"    }","lastModifiedDate":"2023-11-12"},{"lineNumber":64,"author":{"gitId":"brendanneojw"},"content":"}","lastModifiedDate":"2023-10-25"}],"authorContributionMap":{"brendanneojw":64}},{"path":"src/main/java/seedu/address/logic/commands/SortCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RSXIX"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-24"},{"lineNumber":2,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":3,"author":{"gitId":"RSXIX"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-24"},{"lineNumber":4,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":5,"author":{"gitId":"RSXIX"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-24"},{"lineNumber":6,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":7,"author":{"gitId":"RSXIX"},"content":"/**","lastModifiedDate":"2023-10-24"},{"lineNumber":8,"author":{"gitId":"RSXIX"},"content":" * Sorts the address book.","lastModifiedDate":"2023-10-24"},{"lineNumber":9,"author":{"gitId":"RSXIX"},"content":" */","lastModifiedDate":"2023-10-24"},{"lineNumber":10,"author":{"gitId":"RSXIX"},"content":"public class SortCommand extends Command {","lastModifiedDate":"2023-10-24"},{"lineNumber":11,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":12,"author":{"gitId":"RSXIX"},"content":"    public static final String COMMAND_WORD \u003d \"sort\";","lastModifiedDate":"2023-10-24"},{"lineNumber":13,"author":{"gitId":"RSXIX"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Client list has been sorted!\";","lastModifiedDate":"2023-11-09"},{"lineNumber":14,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":15,"author":{"gitId":"RSXIX"},"content":"    @Override","lastModifiedDate":"2023-10-24"},{"lineNumber":16,"author":{"gitId":"RSXIX"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2023-10-24"},{"lineNumber":17,"author":{"gitId":"RSXIX"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-24"},{"lineNumber":18,"author":{"gitId":"RSXIX"},"content":"        model.sortData();","lastModifiedDate":"2023-10-24"},{"lineNumber":19,"author":{"gitId":"RSXIX"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2023-10-24"},{"lineNumber":20,"author":{"gitId":"RSXIX"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":21,"author":{"gitId":"RSXIX"},"content":"}","lastModifiedDate":"2023-10-24"}],"authorContributionMap":{"RSXIX":21}},{"path":"src/main/java/seedu/address/logic/commands/exceptions/CommandException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands.exceptions;","lastModifiedDate":"2017-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"suryanshkushwaha"},"content":" * Represents an error which occurs during execution of a {@link seedu.address.logic.commands.Command}.","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CommandException extends Exception {","lastModifiedDate":"2017-02-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    public CommandException(String message) {","lastModifiedDate":"2017-02-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Constructs a new {@code CommandException} with the specified detail {@code message} and {@code cause}.","lastModifiedDate":"2018-08-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public CommandException(String message, Throwable cause) {","lastModifiedDate":"2018-08-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2018-08-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"suryanshkushwaha":1,"-":16}},{"path":"src/main/java/seedu/address/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"RSXIX"},"content":"import static seedu.address.logic.Messages.MESSAGE_DATES_NOT_COMPATIBLE;","lastModifiedDate":"2023-11-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":5,"author":{"gitId":"RSXIX"},"content":"import static seedu.address.logic.Messages.MESSAGE_MISSING_FIELDS_FOR_ADD_COMMAND;","lastModifiedDate":"2023-10-20"},{"lineNumber":6,"author":{"gitId":"RSXIX"},"content":"import static seedu.address.logic.Messages.MESSAGE_MISSING_FIELDS_POLICY_FOR_ADD_COMMAND;","lastModifiedDate":"2023-10-20"},{"lineNumber":7,"author":{"gitId":"RSXIX"},"content":"import static seedu.address.logic.Messages.MESSAGE_PREAMBLE_DETECTED;","lastModifiedDate":"2023-10-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"suryanshkushwaha"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_COMPANY;","lastModifiedDate":"2023-10-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-02-05"},{"lineNumber":11,"author":{"gitId":"KumChaiYin"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LICENCE_PLATE;","lastModifiedDate":"2023-10-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":13,"author":{"gitId":"KumChaiYin"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NRIC;","lastModifiedDate":"2023-10-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-02-05"},{"lineNumber":15,"author":{"gitId":"KumChaiYin"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_POLICY_EXPIRY_DATE;","lastModifiedDate":"2023-10-19"},{"lineNumber":16,"author":{"gitId":"KumChaiYin"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_POLICY_ISSUE_DATE;","lastModifiedDate":"2023-10-19"},{"lineNumber":17,"author":{"gitId":"KumChaiYin"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_POLICY_NUMBER;","lastModifiedDate":"2023-10-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-02-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-03-17"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-03-17"},{"lineNumber":27,"author":{"gitId":"cyaoxuan"},"content":"import seedu.address.model.person.LicencePlate;","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-03-17"},{"lineNumber":29,"author":{"gitId":"cyaoxuan"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-03-17"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-03-17"},{"lineNumber":32,"author":{"gitId":"cyaoxuan"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2023-11-01"},{"lineNumber":33,"author":{"gitId":"suryanshkushwaha"},"content":"import seedu.address.model.policy.Company;","lastModifiedDate":"2023-10-23"},{"lineNumber":34,"author":{"gitId":"cyaoxuan"},"content":"import seedu.address.model.policy.Policy;","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"cyaoxuan"},"content":"import seedu.address.model.policy.PolicyDate;","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"cyaoxuan"},"content":"import seedu.address.model.policy.PolicyNumber;","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-17"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":51,"author":{"gitId":"KumChaiYin"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_NRIC,","lastModifiedDate":"2023-10-19"},{"lineNumber":52,"author":{"gitId":"suryanshkushwaha"},"content":"                        PREFIX_LICENCE_PLATE, PREFIX_ADDRESS, PREFIX_TAG, PREFIX_COMPANY,","lastModifiedDate":"2023-10-23"},{"lineNumber":53,"author":{"gitId":"suryanshkushwaha"},"content":"                        PREFIX_POLICY_NUMBER, PREFIX_POLICY_ISSUE_DATE, PREFIX_POLICY_EXPIRY_DATE);","lastModifiedDate":"2023-10-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":55,"author":{"gitId":"RSXIX"},"content":"        if (!argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-10-20"},{"lineNumber":56,"author":{"gitId":"RSXIX"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, MESSAGE_PREAMBLE_DETECTED));","lastModifiedDate":"2023-10-20"},{"lineNumber":57,"author":{"gitId":"RSXIX"},"content":"        }","lastModifiedDate":"2023-10-20"},{"lineNumber":58,"author":{"gitId":"KumChaiYin"},"content":"        if (!hasAllCompulsoryPrefixes(argMultimap)) {","lastModifiedDate":"2023-11-13"},{"lineNumber":59,"author":{"gitId":"KumChaiYin"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-11-13"},{"lineNumber":60,"author":{"gitId":"KumChaiYin"},"content":"                    generateMissingCompulsoryFieldsErrorMessages(argMultimap)));","lastModifiedDate":"2023-11-13"},{"lineNumber":61,"author":{"gitId":"KumChaiYin"},"content":"        }","lastModifiedDate":"2023-11-13"},{"lineNumber":62,"author":{"gitId":"KumChaiYin"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_NRIC,","lastModifiedDate":"2023-11-13"},{"lineNumber":63,"author":{"gitId":"KumChaiYin"},"content":"                PREFIX_LICENCE_PLATE, PREFIX_ADDRESS);","lastModifiedDate":"2023-11-13"},{"lineNumber":64,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":65,"author":{"gitId":"KumChaiYin"},"content":"        Policy policy;","lastModifiedDate":"2023-11-13"},{"lineNumber":66,"author":{"gitId":"KumChaiYin"},"content":"        if (hasCompletePolicyInputsAndNoDuplicate(argMultimap)) {","lastModifiedDate":"2023-11-13"},{"lineNumber":67,"author":{"gitId":"KumChaiYin"},"content":"            policy \u003d createPolicy(argMultimap);","lastModifiedDate":"2023-11-13"},{"lineNumber":68,"author":{"gitId":"KumChaiYin"},"content":"        } else {","lastModifiedDate":"2023-11-13"},{"lineNumber":69,"author":{"gitId":"KumChaiYin"},"content":"            policy \u003d Policy.createNewDefaultPolicy();","lastModifiedDate":"2023-11-13"},{"lineNumber":70,"author":{"gitId":"KumChaiYin"},"content":"        }","lastModifiedDate":"2023-11-13"},{"lineNumber":71,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":72,"author":{"gitId":"KumChaiYin"},"content":"        Person person \u003d createPerson(argMultimap, policy);","lastModifiedDate":"2023-11-13"},{"lineNumber":73,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":74,"author":{"gitId":"KumChaiYin"},"content":"        return new AddCommand(person);","lastModifiedDate":"2023-11-13"},{"lineNumber":75,"author":{"gitId":"KumChaiYin"},"content":"    }","lastModifiedDate":"2023-11-13"},{"lineNumber":76,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":77,"author":{"gitId":"KumChaiYin"},"content":"    /**","lastModifiedDate":"2023-11-13"},{"lineNumber":78,"author":{"gitId":"KumChaiYin"},"content":"     * Returns true if all compulsory prefixes exist in the given {@code ArgumentMultimap}.","lastModifiedDate":"2023-11-13"},{"lineNumber":79,"author":{"gitId":"KumChaiYin"},"content":"     */","lastModifiedDate":"2023-11-13"},{"lineNumber":80,"author":{"gitId":"KumChaiYin"},"content":"    private boolean hasAllCompulsoryPrefixes(ArgumentMultimap argMultimap) {","lastModifiedDate":"2023-11-13"},{"lineNumber":81,"author":{"gitId":"KumChaiYin"},"content":"        if (arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_NRIC,","lastModifiedDate":"2023-11-13"},{"lineNumber":82,"author":{"gitId":"RSXIX"},"content":"                PREFIX_LICENCE_PLATE, PREFIX_ADDRESS)) {","lastModifiedDate":"2023-10-20"},{"lineNumber":83,"author":{"gitId":"KumChaiYin"},"content":"            return true;","lastModifiedDate":"2023-11-13"},{"lineNumber":84,"author":{"gitId":"KumChaiYin"},"content":"        } else {","lastModifiedDate":"2023-11-13"},{"lineNumber":85,"author":{"gitId":"KumChaiYin"},"content":"            return false;","lastModifiedDate":"2023-11-13"},{"lineNumber":86,"author":{"gitId":"KumChaiYin"},"content":"        }","lastModifiedDate":"2023-11-13"},{"lineNumber":87,"author":{"gitId":"KumChaiYin"},"content":"    }","lastModifiedDate":"2023-11-13"},{"lineNumber":88,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":89,"author":{"gitId":"KumChaiYin"},"content":"    /**","lastModifiedDate":"2023-11-13"},{"lineNumber":90,"author":{"gitId":"KumChaiYin"},"content":"     * Returns error message indicates which compulsory fields are missing in the given","lastModifiedDate":"2023-11-13"},{"lineNumber":91,"author":{"gitId":"KumChaiYin"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2023-11-13"},{"lineNumber":92,"author":{"gitId":"KumChaiYin"},"content":"     */","lastModifiedDate":"2023-11-13"},{"lineNumber":93,"author":{"gitId":"KumChaiYin"},"content":"    private String generateMissingCompulsoryFieldsErrorMessages(ArgumentMultimap argMultimap) {","lastModifiedDate":"2023-11-13"},{"lineNumber":94,"author":{"gitId":"RSXIX"},"content":"        String errorMessage \u003d MESSAGE_MISSING_FIELDS_FOR_ADD_COMMAND;","lastModifiedDate":"2023-10-20"},{"lineNumber":95,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":96,"author":{"gitId":"RSXIX"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isEmpty()) {","lastModifiedDate":"2023-10-20"},{"lineNumber":97,"author":{"gitId":"brendanneojw"},"content":"            errorMessage +\u003d \"- Name(\" + PREFIX_NAME + \") \";","lastModifiedDate":"2023-10-20"},{"lineNumber":98,"author":{"gitId":"RSXIX"},"content":"        }","lastModifiedDate":"2023-10-20"},{"lineNumber":99,"author":{"gitId":"RSXIX"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isEmpty()) {","lastModifiedDate":"2023-10-20"},{"lineNumber":100,"author":{"gitId":"brendanneojw"},"content":"            errorMessage +\u003d \"- Phone(\" + PREFIX_PHONE + \") \";","lastModifiedDate":"2023-10-20"},{"lineNumber":101,"author":{"gitId":"RSXIX"},"content":"        }","lastModifiedDate":"2023-10-20"},{"lineNumber":102,"author":{"gitId":"RSXIX"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isEmpty()) {","lastModifiedDate":"2023-10-20"},{"lineNumber":103,"author":{"gitId":"brendanneojw"},"content":"            errorMessage +\u003d \"- Email(\" + PREFIX_EMAIL + \") \";","lastModifiedDate":"2023-10-20"},{"lineNumber":104,"author":{"gitId":"RSXIX"},"content":"        }","lastModifiedDate":"2023-10-20"},{"lineNumber":105,"author":{"gitId":"RSXIX"},"content":"        if (argMultimap.getValue(PREFIX_NRIC).isEmpty()) {","lastModifiedDate":"2023-10-20"},{"lineNumber":106,"author":{"gitId":"brendanneojw"},"content":"            errorMessage +\u003d \"- NRIC(\" + PREFIX_NRIC + \") \";","lastModifiedDate":"2023-10-20"},{"lineNumber":107,"author":{"gitId":"RSXIX"},"content":"        }","lastModifiedDate":"2023-10-20"},{"lineNumber":108,"author":{"gitId":"RSXIX"},"content":"        if (argMultimap.getValue(PREFIX_LICENCE_PLATE).isEmpty()) {","lastModifiedDate":"2023-10-20"},{"lineNumber":109,"author":{"gitId":"cyaoxuan"},"content":"            errorMessage +\u003d \"- Licence Plate(\" + PREFIX_LICENCE_PLATE + \") \";","lastModifiedDate":"2023-11-12"},{"lineNumber":110,"author":{"gitId":"RSXIX"},"content":"        }","lastModifiedDate":"2023-10-20"},{"lineNumber":111,"author":{"gitId":"RSXIX"},"content":"        if (argMultimap.getValue(PREFIX_ADDRESS).isEmpty()) {","lastModifiedDate":"2023-10-20"},{"lineNumber":112,"author":{"gitId":"brendanneojw"},"content":"            errorMessage +\u003d \"- Address(\" + PREFIX_ADDRESS + \") \";","lastModifiedDate":"2023-10-20"},{"lineNumber":113,"author":{"gitId":"RSXIX"},"content":"        }","lastModifiedDate":"2023-10-20"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":115,"author":{"gitId":"KumChaiYin"},"content":"        return errorMessage;","lastModifiedDate":"2023-11-13"},{"lineNumber":116,"author":{"gitId":"KumChaiYin"},"content":"    }","lastModifiedDate":"2023-11-13"},{"lineNumber":117,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":118,"author":{"gitId":"KumChaiYin"},"content":"    /**","lastModifiedDate":"2023-11-13"},{"lineNumber":119,"author":{"gitId":"KumChaiYin"},"content":"     * Returns true if all prefixes about policy exist and contain values in the given {@code ArgumentMultimap}.","lastModifiedDate":"2023-11-13"},{"lineNumber":120,"author":{"gitId":"KumChaiYin"},"content":"     * @throws ParseException if it contains incomplete information about policy","lastModifiedDate":"2023-11-13"},{"lineNumber":121,"author":{"gitId":"KumChaiYin"},"content":"     */","lastModifiedDate":"2023-11-13"},{"lineNumber":122,"author":{"gitId":"KumChaiYin"},"content":"    private boolean hasCompletePolicyInputsAndNoDuplicate(ArgumentMultimap argMultimap) throws ParseException {","lastModifiedDate":"2023-11-13"},{"lineNumber":123,"author":{"gitId":"KumChaiYin"},"content":"        if (arePrefixesAbsent(argMultimap, PREFIX_COMPANY, PREFIX_POLICY_NUMBER, PREFIX_POLICY_ISSUE_DATE,","lastModifiedDate":"2023-11-13"},{"lineNumber":124,"author":{"gitId":"RSXIX"},"content":"                PREFIX_POLICY_EXPIRY_DATE)) {","lastModifiedDate":"2023-10-20"},{"lineNumber":125,"author":{"gitId":"KumChaiYin"},"content":"            return false;","lastModifiedDate":"2023-11-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-11-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":128,"author":{"gitId":"suryanshkushwaha"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_COMPANY, PREFIX_POLICY_NUMBER, PREFIX_POLICY_ISSUE_DATE,","lastModifiedDate":"2023-10-23"},{"lineNumber":129,"author":{"gitId":"RSXIX"},"content":"                PREFIX_POLICY_EXPIRY_DATE)) {","lastModifiedDate":"2023-10-20"},{"lineNumber":130,"author":{"gitId":"KumChaiYin"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-11-13"},{"lineNumber":131,"author":{"gitId":"KumChaiYin"},"content":"                    generateMissingPolicyFieldsErrorMessages(argMultimap)));","lastModifiedDate":"2023-11-13"},{"lineNumber":132,"author":{"gitId":"KumChaiYin"},"content":"        } else {","lastModifiedDate":"2023-11-13"},{"lineNumber":133,"author":{"gitId":"KumChaiYin"},"content":"            // all prefixes related to policy present","lastModifiedDate":"2023-11-13"},{"lineNumber":134,"author":{"gitId":"KumChaiYin"},"content":"            argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_COMPANY, PREFIX_POLICY_NUMBER,","lastModifiedDate":"2023-11-13"},{"lineNumber":135,"author":{"gitId":"KumChaiYin"},"content":"                    PREFIX_POLICY_ISSUE_DATE, PREFIX_POLICY_EXPIRY_DATE);","lastModifiedDate":"2023-11-13"},{"lineNumber":136,"author":{"gitId":"KumChaiYin"},"content":"            return true;","lastModifiedDate":"2023-11-13"},{"lineNumber":137,"author":{"gitId":"KumChaiYin"},"content":"        }","lastModifiedDate":"2023-11-13"},{"lineNumber":138,"author":{"gitId":"KumChaiYin"},"content":"    }","lastModifiedDate":"2023-11-13"},{"lineNumber":139,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":140,"author":{"gitId":"KumChaiYin"},"content":"    /**","lastModifiedDate":"2023-11-13"},{"lineNumber":141,"author":{"gitId":"KumChaiYin"},"content":"     * Returns error message indicates which policy fields are missing in the given","lastModifiedDate":"2023-11-13"},{"lineNumber":142,"author":{"gitId":"KumChaiYin"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2023-11-13"},{"lineNumber":143,"author":{"gitId":"KumChaiYin"},"content":"     */","lastModifiedDate":"2023-11-13"},{"lineNumber":144,"author":{"gitId":"KumChaiYin"},"content":"    private String generateMissingPolicyFieldsErrorMessages(ArgumentMultimap argMultimap) {","lastModifiedDate":"2023-11-13"},{"lineNumber":145,"author":{"gitId":"RSXIX"},"content":"        String errorMessage \u003d MESSAGE_MISSING_FIELDS_POLICY_FOR_ADD_COMMAND;","lastModifiedDate":"2023-10-20"},{"lineNumber":146,"author":{"gitId":"suryanshkushwaha"},"content":"        if (argMultimap.getValue(PREFIX_COMPANY).isEmpty()) {","lastModifiedDate":"2023-10-23"},{"lineNumber":147,"author":{"gitId":"suryanshkushwaha"},"content":"            errorMessage +\u003d \"- Company(\" + PREFIX_COMPANY + \") \";","lastModifiedDate":"2023-10-23"},{"lineNumber":148,"author":{"gitId":"suryanshkushwaha"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":149,"author":{"gitId":"RSXIX"},"content":"        if (argMultimap.getValue(PREFIX_POLICY_NUMBER).isEmpty()) {","lastModifiedDate":"2023-10-20"},{"lineNumber":150,"author":{"gitId":"brendanneojw"},"content":"            errorMessage +\u003d \"- Policy Number(\" + PREFIX_POLICY_NUMBER + \") \";","lastModifiedDate":"2023-10-20"},{"lineNumber":151,"author":{"gitId":"RSXIX"},"content":"        }","lastModifiedDate":"2023-10-20"},{"lineNumber":152,"author":{"gitId":"RSXIX"},"content":"        if (argMultimap.getValue(PREFIX_POLICY_ISSUE_DATE).isEmpty()) {","lastModifiedDate":"2023-10-20"},{"lineNumber":153,"author":{"gitId":"brendanneojw"},"content":"            errorMessage +\u003d \"- Policy Issue Date(\" + PREFIX_POLICY_ISSUE_DATE + \") \";","lastModifiedDate":"2023-10-20"},{"lineNumber":154,"author":{"gitId":"RSXIX"},"content":"        }","lastModifiedDate":"2023-10-20"},{"lineNumber":155,"author":{"gitId":"RSXIX"},"content":"        if (argMultimap.getValue(PREFIX_POLICY_EXPIRY_DATE).isEmpty()) {","lastModifiedDate":"2023-10-20"},{"lineNumber":156,"author":{"gitId":"brendanneojw"},"content":"            errorMessage +\u003d \"- Policy Expiry Date(\" + PREFIX_POLICY_EXPIRY_DATE + \") \";","lastModifiedDate":"2023-10-20"},{"lineNumber":157,"author":{"gitId":"RSXIX"},"content":"        }","lastModifiedDate":"2023-10-20"},{"lineNumber":158,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":159,"author":{"gitId":"KumChaiYin"},"content":"        return errorMessage;","lastModifiedDate":"2023-11-13"},{"lineNumber":160,"author":{"gitId":"KumChaiYin"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":161,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":162,"author":{"gitId":"KumChaiYin"},"content":"    /**","lastModifiedDate":"2023-11-13"},{"lineNumber":163,"author":{"gitId":"KumChaiYin"},"content":"     * Returns a policy based on the given {@code ArgumentMultimap}.","lastModifiedDate":"2023-11-13"},{"lineNumber":164,"author":{"gitId":"KumChaiYin"},"content":"     * @throws ParseException if the value does not conform the expected format or","lastModifiedDate":"2023-11-13"},{"lineNumber":165,"author":{"gitId":"KumChaiYin"},"content":"     *     policy expiry date is not after policy issue date","lastModifiedDate":"2023-11-13"},{"lineNumber":166,"author":{"gitId":"KumChaiYin"},"content":"     */","lastModifiedDate":"2023-11-13"},{"lineNumber":167,"author":{"gitId":"KumChaiYin"},"content":"    private Policy createPolicy(ArgumentMultimap argMultimap) throws ParseException {","lastModifiedDate":"2023-11-13"},{"lineNumber":168,"author":{"gitId":"KumChaiYin"},"content":"        Company company \u003d ParserUtil.parseCompany(argMultimap.getValue(PREFIX_COMPANY).get());","lastModifiedDate":"2023-11-13"},{"lineNumber":169,"author":{"gitId":"KumChaiYin"},"content":"        PolicyNumber policyNumber \u003d ParserUtil.parsePolicyNumber(argMultimap.getValue(PREFIX_POLICY_NUMBER).get());","lastModifiedDate":"2023-11-13"},{"lineNumber":170,"author":{"gitId":"KumChaiYin"},"content":"        PolicyDate policyIssueDate \u003d ParserUtil.parsePolicyIssueDate(argMultimap","lastModifiedDate":"2023-11-13"},{"lineNumber":171,"author":{"gitId":"KumChaiYin"},"content":"                .getValue(PREFIX_POLICY_ISSUE_DATE).get());","lastModifiedDate":"2023-11-13"},{"lineNumber":172,"author":{"gitId":"KumChaiYin"},"content":"        PolicyDate policyExpiryDate \u003d ParserUtil.parsePolicyExpiryDate(argMultimap","lastModifiedDate":"2023-11-13"},{"lineNumber":173,"author":{"gitId":"KumChaiYin"},"content":"                .getValue(PREFIX_POLICY_EXPIRY_DATE).get());","lastModifiedDate":"2023-11-13"},{"lineNumber":174,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":175,"author":{"gitId":"RSXIX"},"content":"        if (policyIssueDate.compareTo(policyExpiryDate) \u003e 0) {","lastModifiedDate":"2023-11-08"},{"lineNumber":176,"author":{"gitId":"RSXIX"},"content":"            throw new ParseException(MESSAGE_DATES_NOT_COMPATIBLE);","lastModifiedDate":"2023-11-08"},{"lineNumber":177,"author":{"gitId":"RSXIX"},"content":"        }","lastModifiedDate":"2023-11-08"},{"lineNumber":178,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":179,"author":{"gitId":"KumChaiYin"},"content":"        return new Policy(company, policyNumber, policyIssueDate, policyExpiryDate);","lastModifiedDate":"2023-11-13"},{"lineNumber":180,"author":{"gitId":"KumChaiYin"},"content":"    }","lastModifiedDate":"2023-11-13"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":182,"author":{"gitId":"KumChaiYin"},"content":"    /**","lastModifiedDate":"2023-11-13"},{"lineNumber":183,"author":{"gitId":"KumChaiYin"},"content":"     * Returns a person based on the given {@code ArgumentMultimap} and {@code Policy}.","lastModifiedDate":"2023-11-13"},{"lineNumber":184,"author":{"gitId":"KumChaiYin"},"content":"     * @throws ParseException if the value does not conform the expected format","lastModifiedDate":"2023-11-13"},{"lineNumber":185,"author":{"gitId":"KumChaiYin"},"content":"     */","lastModifiedDate":"2023-11-13"},{"lineNumber":186,"author":{"gitId":"KumChaiYin"},"content":"    private Person createPerson(ArgumentMultimap argMultimap, Policy policy) throws ParseException {","lastModifiedDate":"2023-11-13"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2023-11-13"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2023-11-13"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2023-11-13"},{"lineNumber":190,"author":{"gitId":"KumChaiYin"},"content":"        Nric nric \u003d ParserUtil.parseNric(argMultimap.getValue(PREFIX_NRIC).get());","lastModifiedDate":"2023-11-13"},{"lineNumber":191,"author":{"gitId":"KumChaiYin"},"content":"        LicencePlate licencePlate \u003d ParserUtil.parseLicencePlate(argMultimap.getValue(PREFIX_LICENCE_PLATE).get());","lastModifiedDate":"2023-11-13"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        Address address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());","lastModifiedDate":"2023-11-13"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2023-11-13"},{"lineNumber":194,"author":{"gitId":"KumChaiYin"},"content":"        Remark remark \u003d new Remark(\"\");","lastModifiedDate":"2023-11-13"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":196,"author":{"gitId":"KumChaiYin"},"content":"        return new Person(name, phone, email, address, tagList, nric, licencePlate, remark, policy);","lastModifiedDate":"2023-11-13"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":200,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17"},{"lineNumber":201,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":202,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":207,"author":{"gitId":"RSXIX"},"content":"    /**","lastModifiedDate":"2023-10-20"},{"lineNumber":208,"author":{"gitId":"KumChaiYin"},"content":"     * Returns true if all prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2023-11-13"},{"lineNumber":209,"author":{"gitId":"RSXIX"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2023-10-20"},{"lineNumber":210,"author":{"gitId":"RSXIX"},"content":"     */","lastModifiedDate":"2023-10-20"},{"lineNumber":211,"author":{"gitId":"RSXIX"},"content":"    private static boolean arePrefixesAbsent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-10-20"},{"lineNumber":212,"author":{"gitId":"RSXIX"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isEmpty());","lastModifiedDate":"2023-10-20"},{"lineNumber":213,"author":{"gitId":"RSXIX"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":214,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":215,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"brendanneojw":8,"suryanshkushwaha":8,"RSXIX":43,"KumChaiYin":94,"-":55,"cyaoxuan":7}},{"path":"src/main/java/seedu/address/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":12,"author":{"gitId":"KumChaiYin"},"content":"import seedu.address.logic.commands.BatchDeleteCommand;","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2017-01-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":21,"author":{"gitId":"cyaoxuan"},"content":"import seedu.address.logic.commands.RemarkCommand;","lastModifiedDate":"2023-11-01"},{"lineNumber":22,"author":{"gitId":"brendanneojw"},"content":"import seedu.address.logic.commands.RemindCommand;","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"RSXIX"},"content":"import seedu.address.logic.commands.SortCommand;","lastModifiedDate":"2023-10-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(AddressBookParser.class);","lastModifiedDate":"2023-07-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // Note to developers: Change the log level in config.json to enable lower level (i.e., FINE, FINER and lower)","lastModifiedDate":"2023-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // log messages such as the one below.","lastModifiedDate":"2023-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // Lower level log messages are used sparingly to minimize noise in the code.","lastModifiedDate":"2023-07-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        logger.fine(\"Command word: \" + commandWord + \"; Arguments: \" + arguments);","lastModifiedDate":"2023-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"RSXIX"},"content":"        case SortCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-24"},{"lineNumber":61,"author":{"gitId":"RSXIX"},"content":"            return new SortCommandParser().parse(arguments);","lastModifiedDate":"2023-10-24"},{"lineNumber":62,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":63,"author":{"gitId":"brendanneojw"},"content":"        case RemindCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-25"},{"lineNumber":64,"author":{"gitId":"brendanneojw"},"content":"            return new RemindCommandParser().parse(arguments);","lastModifiedDate":"2023-10-25"},{"lineNumber":65,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":90,"author":{"gitId":"KumChaiYin"},"content":"        case BatchDeleteCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-25"},{"lineNumber":91,"author":{"gitId":"KumChaiYin"},"content":"            return new BatchDeleteCommandParser().parse(arguments);","lastModifiedDate":"2023-10-25"},{"lineNumber":92,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":93,"author":{"gitId":"cyaoxuan"},"content":"        case RemarkCommand.COMMAND_WORD:","lastModifiedDate":"2023-09-28"},{"lineNumber":94,"author":{"gitId":"cyaoxuan"},"content":"            return new RemarkCommandParser().parse(arguments);","lastModifiedDate":"2023-09-28"},{"lineNumber":95,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            logger.finer(\"This user input caused a ParseException: \" + userInput);","lastModifiedDate":"2023-07-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"brendanneojw":3,"RSXIX":5,"KumChaiYin":4,"-":86,"cyaoxuan":4}},{"path":"src/main/java/seedu/address/logic/parser/BatchDeleteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"KumChaiYin"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-25"},{"lineNumber":2,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":3,"author":{"gitId":"KumChaiYin"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-25"},{"lineNumber":4,"author":{"gitId":"KumChaiYin"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_TWO_FIELD;","lastModifiedDate":"2023-11-02"},{"lineNumber":5,"author":{"gitId":"KumChaiYin"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_COMPANY;","lastModifiedDate":"2023-11-02"},{"lineNumber":6,"author":{"gitId":"KumChaiYin"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DELETE_MONTH;","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"KumChaiYin"},"content":"import seedu.address.logic.commands.BatchDeleteCommand;","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"KumChaiYin"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"KumChaiYin"},"content":"import seedu.address.model.month.DeleteMonth;","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"KumChaiYin"},"content":"import seedu.address.model.policy.Company;","lastModifiedDate":"2023-11-02"},{"lineNumber":12,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"KumChaiYin"},"content":"/**","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"KumChaiYin"},"content":" * Parses input arguments and creates a new DeleteCommand object","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"KumChaiYin"},"content":" */","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"KumChaiYin"},"content":"public class BatchDeleteCommandParser implements Parser\u003cBatchDeleteCommand\u003e {","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":18,"author":{"gitId":"KumChaiYin"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"KumChaiYin"},"content":"     * Parses the given {@code String} of arguments in the context of the BatchDeleteCommand","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"KumChaiYin"},"content":"     * and returns a BatchDeleteCommand object for execution.","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"KumChaiYin"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"KumChaiYin"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"KumChaiYin"},"content":"    public BatchDeleteCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"KumChaiYin"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_DELETE_MONTH, PREFIX_COMPANY);","lastModifiedDate":"2023-11-02"},{"lineNumber":25,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"KumChaiYin"},"content":"        boolean hasDeleteMonth \u003d argMultimap.getValue(PREFIX_DELETE_MONTH).isPresent();","lastModifiedDate":"2023-11-02"},{"lineNumber":27,"author":{"gitId":"KumChaiYin"},"content":"        boolean hasCompany \u003d argMultimap.getValue(PREFIX_COMPANY).isPresent();","lastModifiedDate":"2023-11-02"},{"lineNumber":28,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":29,"author":{"gitId":"KumChaiYin"},"content":"        if (hasDeleteMonth \u0026\u0026 hasCompany) {","lastModifiedDate":"2023-11-02"},{"lineNumber":30,"author":{"gitId":"KumChaiYin"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_TWO_FIELD, PREFIX_DELETE_MONTH, PREFIX_COMPANY));","lastModifiedDate":"2023-11-02"},{"lineNumber":31,"author":{"gitId":"KumChaiYin"},"content":"        } else if (!hasDeleteMonth \u0026\u0026 !hasCompany) {","lastModifiedDate":"2023-11-02"},{"lineNumber":32,"author":{"gitId":"KumChaiYin"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, BatchDeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-25"},{"lineNumber":33,"author":{"gitId":"KumChaiYin"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":34,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":35,"author":{"gitId":"KumChaiYin"},"content":"        if (hasDeleteMonth) {","lastModifiedDate":"2023-11-02"},{"lineNumber":36,"author":{"gitId":"KumChaiYin"},"content":"            argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_DELETE_MONTH);","lastModifiedDate":"2023-11-02"},{"lineNumber":37,"author":{"gitId":"KumChaiYin"},"content":"            DeleteMonth deleteMonth \u003d ParserUtil.parseDeleteMonth(argMultimap.getValue(PREFIX_DELETE_MONTH).get());","lastModifiedDate":"2023-10-25"},{"lineNumber":38,"author":{"gitId":"KumChaiYin"},"content":"            assert !deleteMonth.equals(null) : \"wrong input for deleteMonth\";","lastModifiedDate":"2023-10-25"},{"lineNumber":39,"author":{"gitId":"KumChaiYin"},"content":"            return new BatchDeleteCommand(deleteMonth, null);","lastModifiedDate":"2023-11-13"},{"lineNumber":40,"author":{"gitId":"KumChaiYin"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":41,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":42,"author":{"gitId":"KumChaiYin"},"content":"        // else: hasCompany is true, hasDeleteMonth is false","lastModifiedDate":"2023-11-02"},{"lineNumber":43,"author":{"gitId":"KumChaiYin"},"content":"        assert hasCompany : \"should has input for company\";","lastModifiedDate":"2023-11-02"},{"lineNumber":44,"author":{"gitId":"KumChaiYin"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_COMPANY);","lastModifiedDate":"2023-11-02"},{"lineNumber":45,"author":{"gitId":"KumChaiYin"},"content":"        Company company \u003d ParserUtil.parseCompany(argMultimap.getValue(PREFIX_COMPANY).get());","lastModifiedDate":"2023-11-02"},{"lineNumber":46,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":47,"author":{"gitId":"KumChaiYin"},"content":"        return new BatchDeleteCommand(null, company);","lastModifiedDate":"2023-11-13"},{"lineNumber":48,"author":{"gitId":"KumChaiYin"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":49,"author":{"gitId":"KumChaiYin"},"content":"}","lastModifiedDate":"2023-10-25"}],"authorContributionMap":{"KumChaiYin":49}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"a/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"cyaoxuan"},"content":"    public static final Prefix PREFIX_NRIC \u003d new Prefix(\"i/\");","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"cyaoxuan"},"content":"    public static final Prefix PREFIX_LICENCE_PLATE \u003d new Prefix(\"l/\");","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"cyaoxuan"},"content":"    public static final Prefix PREFIX_COMPANY \u003d new Prefix(\"c/\");","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"cyaoxuan"},"content":"    public static final Prefix PREFIX_POLICY_NUMBER \u003d new Prefix(\"pn/\");","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"cyaoxuan"},"content":"    public static final Prefix PREFIX_POLICY_ISSUE_DATE \u003d new Prefix(\"pi/\");","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"cyaoxuan"},"content":"    public static final Prefix PREFIX_POLICY_EXPIRY_DATE \u003d new Prefix(\"pe/\");","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"KumChaiYin"},"content":"    public static final Prefix PREFIX_DELETE_MONTH \u003d new Prefix(\"dm/\");","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"cyaoxuan"},"content":"    public static final Prefix PREFIX_REMARK \u003d new Prefix(\"r/\");","lastModifiedDate":"2023-09-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"KumChaiYin":1,"-":14,"cyaoxuan":7}},{"path":"src/main/java/seedu/address/logic/parser/DeleteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":4,"author":{"gitId":"RSXIX"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"RSXIX"},"content":"import seedu.address.logic.parser.exceptions.ImpossibleIndexException;","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"RSXIX"},"content":"import seedu.address.logic.parser.exceptions.MissingIndexException;","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new DeleteCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class DeleteCommandParser implements Parser\u003cDeleteCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public DeleteCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2017-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            return new DeleteCommand(index);","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"RSXIX"},"content":"        } catch (ImpossibleIndexException pe) {","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"RSXIX"},"content":"            throw new ImpossibleIndexException(","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"RSXIX"},"content":"                    Messages.MESSAGE_IMPOSSIBLE_INDEX, pe);","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"RSXIX"},"content":"        } catch (MissingIndexException pe) {","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"RSXIX"},"content":"            throw new MissingIndexException(","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"RSXIX"},"content":"                    Messages.MESSAGE_MISSING_INDEX, pe);","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"RSXIX":9,"-":24}},{"path":"src/main/java/seedu/address/logic/parser/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"suryanshkushwaha"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_COMPANY;","lastModifiedDate":"2023-10-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-01-26"},{"lineNumber":8,"author":{"gitId":"suryanshkushwaha"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LICENCE_PLATE;","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"suryanshkushwaha"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NRIC;","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"suryanshkushwaha"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_POLICY_EXPIRY_DATE;","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"suryanshkushwaha"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_POLICY_ISSUE_DATE;","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"suryanshkushwaha"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_POLICY_NUMBER;","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-01-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"public class EditCommandParser implements Parser\u003cEditCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":36,"author":{"gitId":"suryanshkushwaha"},"content":"     *","lastModifiedDate":"2023-10-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public EditCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":42,"author":{"gitId":"suryanshkushwaha"},"content":"                ArgumentTokenizer.tokenize(","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"suryanshkushwaha"},"content":"                        args,","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"suryanshkushwaha"},"content":"                        PREFIX_NAME,","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"suryanshkushwaha"},"content":"                        PREFIX_PHONE,","lastModifiedDate":"2023-10-17"},{"lineNumber":46,"author":{"gitId":"suryanshkushwaha"},"content":"                        PREFIX_EMAIL,","lastModifiedDate":"2023-10-17"},{"lineNumber":47,"author":{"gitId":"suryanshkushwaha"},"content":"                        PREFIX_ADDRESS,","lastModifiedDate":"2023-10-17"},{"lineNumber":48,"author":{"gitId":"suryanshkushwaha"},"content":"                        PREFIX_TAG,","lastModifiedDate":"2023-10-17"},{"lineNumber":49,"author":{"gitId":"suryanshkushwaha"},"content":"                        PREFIX_NRIC,","lastModifiedDate":"2023-10-17"},{"lineNumber":50,"author":{"gitId":"suryanshkushwaha"},"content":"                        PREFIX_LICENCE_PLATE,","lastModifiedDate":"2023-10-17"},{"lineNumber":51,"author":{"gitId":"suryanshkushwaha"},"content":"                        PREFIX_COMPANY,","lastModifiedDate":"2023-10-23"},{"lineNumber":52,"author":{"gitId":"suryanshkushwaha"},"content":"                        PREFIX_POLICY_NUMBER,","lastModifiedDate":"2023-10-17"},{"lineNumber":53,"author":{"gitId":"suryanshkushwaha"},"content":"                        PREFIX_POLICY_ISSUE_DATE,","lastModifiedDate":"2023-10-17"},{"lineNumber":54,"author":{"gitId":"suryanshkushwaha"},"content":"                        PREFIX_POLICY_EXPIRY_DATE","lastModifiedDate":"2023-10-17"},{"lineNumber":55,"author":{"gitId":"suryanshkushwaha"},"content":"                );","lastModifiedDate":"2023-10-17"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2017-06-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS);","lastModifiedDate":"2023-07-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-01-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_ADDRESS).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setAddress(ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":81,"author":{"gitId":"suryanshkushwaha"},"content":"        if (argMultimap.getValue(PREFIX_NRIC).isPresent()) {","lastModifiedDate":"2023-10-17"},{"lineNumber":82,"author":{"gitId":"suryanshkushwaha"},"content":"            editPersonDescriptor.setNric(ParserUtil.parseNric(argMultimap.getValue(PREFIX_NRIC).get()));","lastModifiedDate":"2023-10-17"},{"lineNumber":83,"author":{"gitId":"suryanshkushwaha"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":84,"author":{"gitId":"suryanshkushwaha"},"content":"        if (argMultimap.getValue(PREFIX_LICENCE_PLATE).isPresent()) {","lastModifiedDate":"2023-10-17"},{"lineNumber":85,"author":{"gitId":"suryanshkushwaha"},"content":"            editPersonDescriptor.setLicencePlate(","lastModifiedDate":"2023-10-17"},{"lineNumber":86,"author":{"gitId":"suryanshkushwaha"},"content":"                    ParserUtil.parseLicencePlate(argMultimap.getValue(PREFIX_LICENCE_PLATE).get()));","lastModifiedDate":"2023-10-17"},{"lineNumber":87,"author":{"gitId":"suryanshkushwaha"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":88,"author":{"gitId":"suryanshkushwaha"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":89,"author":{"gitId":"suryanshkushwaha"},"content":"        if (argMultimap.getValue(PREFIX_COMPANY).isPresent()) {","lastModifiedDate":"2023-10-23"},{"lineNumber":90,"author":{"gitId":"suryanshkushwaha"},"content":"            editPersonDescriptor.setCompany(","lastModifiedDate":"2023-10-23"},{"lineNumber":91,"author":{"gitId":"suryanshkushwaha"},"content":"                    ParserUtil.parseCompany(argMultimap.getValue(PREFIX_COMPANY).get()));","lastModifiedDate":"2023-10-23"},{"lineNumber":92,"author":{"gitId":"suryanshkushwaha"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":93,"author":{"gitId":"suryanshkushwaha"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":94,"author":{"gitId":"suryanshkushwaha"},"content":"        if (argMultimap.getValue(PREFIX_POLICY_NUMBER).isPresent()) {","lastModifiedDate":"2023-10-17"},{"lineNumber":95,"author":{"gitId":"suryanshkushwaha"},"content":"            editPersonDescriptor.setPolicyNumber(","lastModifiedDate":"2023-10-17"},{"lineNumber":96,"author":{"gitId":"suryanshkushwaha"},"content":"                    ParserUtil.parsePolicyNumber(argMultimap.getValue(PREFIX_POLICY_NUMBER).get()));","lastModifiedDate":"2023-10-17"},{"lineNumber":97,"author":{"gitId":"suryanshkushwaha"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":98,"author":{"gitId":"suryanshkushwaha"},"content":"        if (argMultimap.getValue(PREFIX_POLICY_ISSUE_DATE).isPresent()) {","lastModifiedDate":"2023-10-17"},{"lineNumber":99,"author":{"gitId":"suryanshkushwaha"},"content":"            editPersonDescriptor.setPolicyIssueDate(","lastModifiedDate":"2023-10-17"},{"lineNumber":100,"author":{"gitId":"suryanshkushwaha"},"content":"                    ParserUtil.parsePolicyIssueDate(argMultimap.getValue(PREFIX_POLICY_ISSUE_DATE).get()));","lastModifiedDate":"2023-10-17"},{"lineNumber":101,"author":{"gitId":"suryanshkushwaha"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":102,"author":{"gitId":"suryanshkushwaha"},"content":"        if (argMultimap.getValue(PREFIX_POLICY_EXPIRY_DATE).isPresent()) {","lastModifiedDate":"2023-10-17"},{"lineNumber":103,"author":{"gitId":"suryanshkushwaha"},"content":"            editPersonDescriptor.setPolicyExpiryDate(","lastModifiedDate":"2023-10-17"},{"lineNumber":104,"author":{"gitId":"suryanshkushwaha"},"content":"                    ParserUtil.parsePolicyExpiryDate(argMultimap.getValue(PREFIX_POLICY_EXPIRY_DATE).get()));","lastModifiedDate":"2023-10-17"},{"lineNumber":105,"author":{"gitId":"suryanshkushwaha"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editPersonDescriptor::setTags);","lastModifiedDate":"2017-06-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        if (!editPersonDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-03-11"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        return new EditCommand(index, editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2017-03-07"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2017-01-26"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2017-03-07"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2017-01-26"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2017-01-26"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2017-01-26"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2017-01-26"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":130,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"suryanshkushwaha":46,"-":84}},{"path":"src/main/java/seedu/address/logic/parser/FindCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"cyaoxuan"},"content":"import static seedu.address.logic.Messages.MESSAGE_EMPTY_FIELDS;","lastModifiedDate":"2023-11-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":5,"author":{"gitId":"cyaoxuan"},"content":"import static seedu.address.logic.Messages.MESSAGE_PREAMBLE_DETECTED;","lastModifiedDate":"2023-11-06"},{"lineNumber":6,"author":{"gitId":"suryanshkushwaha"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_COMPANY;","lastModifiedDate":"2023-10-23"},{"lineNumber":7,"author":{"gitId":"brendanneojw"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"brendanneojw"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LICENCE_PLATE;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"brendanneojw"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"brendanneojw"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NRIC;","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"brendanneojw"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"brendanneojw"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_POLICY_EXPIRY_DATE;","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"brendanneojw"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_POLICY_ISSUE_DATE;","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"brendanneojw"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_POLICY_NUMBER;","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"brendanneojw"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-11-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":21,"author":{"gitId":"brendanneojw"},"content":"import seedu.address.model.person.predicates.CompanyContainsKeywordsPredicate;","lastModifiedDate":"2023-11-11"},{"lineNumber":22,"author":{"gitId":"brendanneojw"},"content":"import seedu.address.model.person.predicates.EmailContainsKeywordsPredicate;","lastModifiedDate":"2023-11-11"},{"lineNumber":23,"author":{"gitId":"brendanneojw"},"content":"import seedu.address.model.person.predicates.LicenceContainsKeywordsPredicate;","lastModifiedDate":"2023-11-11"},{"lineNumber":24,"author":{"gitId":"brendanneojw"},"content":"import seedu.address.model.person.predicates.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-11-11"},{"lineNumber":25,"author":{"gitId":"brendanneojw"},"content":"import seedu.address.model.person.predicates.NricContainsKeywordsPredicate;","lastModifiedDate":"2023-11-11"},{"lineNumber":26,"author":{"gitId":"brendanneojw"},"content":"import seedu.address.model.person.predicates.PhoneContainsKeywordsPredicate;","lastModifiedDate":"2023-11-11"},{"lineNumber":27,"author":{"gitId":"brendanneojw"},"content":"import seedu.address.model.person.predicates.PolicyExpiryContainsKeywordsPredicate;","lastModifiedDate":"2023-11-11"},{"lineNumber":28,"author":{"gitId":"brendanneojw"},"content":"import seedu.address.model.person.predicates.PolicyIssueContainsKeywordsPredicate;","lastModifiedDate":"2023-11-11"},{"lineNumber":29,"author":{"gitId":"brendanneojw"},"content":"import seedu.address.model.person.predicates.PolicyNumberContainsKeywordsPredicate;","lastModifiedDate":"2023-11-11"},{"lineNumber":30,"author":{"gitId":"brendanneojw"},"content":"import seedu.address.model.person.predicates.TagContainsKeywordsPredicate;","lastModifiedDate":"2023-11-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"public class FindCommandParser implements Parser\u003cFindCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the FindCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * and returns a FindCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":39,"author":{"gitId":"suryanshkushwaha"},"content":"     *","lastModifiedDate":"2023-10-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public FindCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":43,"author":{"gitId":"cyaoxuan"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL,","lastModifiedDate":"2023-11-13"},{"lineNumber":44,"author":{"gitId":"cyaoxuan"},"content":"                PREFIX_TAG, PREFIX_NRIC, PREFIX_LICENCE_PLATE, PREFIX_COMPANY, PREFIX_POLICY_NUMBER,","lastModifiedDate":"2023-11-13"},{"lineNumber":45,"author":{"gitId":"cyaoxuan"},"content":"                PREFIX_POLICY_ISSUE_DATE, PREFIX_POLICY_EXPIRY_DATE);","lastModifiedDate":"2023-11-13"},{"lineNumber":46,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":47,"author":{"gitId":"cyaoxuan"},"content":"        if (!argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-11-06"},{"lineNumber":48,"author":{"gitId":"cyaoxuan"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, MESSAGE_PREAMBLE_DETECTED));","lastModifiedDate":"2023-11-06"},{"lineNumber":49,"author":{"gitId":"cyaoxuan"},"content":"        }","lastModifiedDate":"2023-11-06"},{"lineNumber":50,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":51,"author":{"gitId":"brendanneojw"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_TAG, PREFIX_COMPANY,","lastModifiedDate":"2023-10-24"},{"lineNumber":52,"author":{"gitId":"brendanneojw"},"content":"                PREFIX_NRIC, PREFIX_LICENCE_PLATE, PREFIX_POLICY_NUMBER, PREFIX_POLICY_ISSUE_DATE,","lastModifiedDate":"2023-10-18"},{"lineNumber":53,"author":{"gitId":"brendanneojw"},"content":"                PREFIX_POLICY_EXPIRY_DATE);","lastModifiedDate":"2023-10-13"},{"lineNumber":54,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":55,"author":{"gitId":"cyaoxuan"},"content":"        String[] keywords \u003d getKeywords(argMultimap, PREFIX_NAME, PREFIX_LICENCE_PLATE, PREFIX_NRIC, PREFIX_PHONE,","lastModifiedDate":"2023-11-13"},{"lineNumber":56,"author":{"gitId":"cyaoxuan"},"content":"                PREFIX_POLICY_NUMBER, PREFIX_TAG, PREFIX_POLICY_EXPIRY_DATE, PREFIX_EMAIL,","lastModifiedDate":"2023-11-13"},{"lineNumber":57,"author":{"gitId":"cyaoxuan"},"content":"                PREFIX_POLICY_ISSUE_DATE, PREFIX_COMPANY);","lastModifiedDate":"2023-11-13"},{"lineNumber":58,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":59,"author":{"gitId":"cyaoxuan"},"content":"        return new FindCommand(","lastModifiedDate":"2023-11-13"},{"lineNumber":60,"author":{"gitId":"cyaoxuan"},"content":"                new NameContainsKeywordsPredicate(keywords[0]),","lastModifiedDate":"2023-11-13"},{"lineNumber":61,"author":{"gitId":"cyaoxuan"},"content":"                new LicenceContainsKeywordsPredicate(keywords[1]),","lastModifiedDate":"2023-11-13"},{"lineNumber":62,"author":{"gitId":"cyaoxuan"},"content":"                new NricContainsKeywordsPredicate(keywords[2]),","lastModifiedDate":"2023-11-13"},{"lineNumber":63,"author":{"gitId":"cyaoxuan"},"content":"                new PhoneContainsKeywordsPredicate(keywords[3]),","lastModifiedDate":"2023-11-13"},{"lineNumber":64,"author":{"gitId":"cyaoxuan"},"content":"                new PolicyNumberContainsKeywordsPredicate(keywords[4]),","lastModifiedDate":"2023-11-13"},{"lineNumber":65,"author":{"gitId":"cyaoxuan"},"content":"                new TagContainsKeywordsPredicate(keywords[5]),","lastModifiedDate":"2023-11-13"},{"lineNumber":66,"author":{"gitId":"cyaoxuan"},"content":"                new PolicyExpiryContainsKeywordsPredicate(keywords[6]),","lastModifiedDate":"2023-11-13"},{"lineNumber":67,"author":{"gitId":"cyaoxuan"},"content":"                new EmailContainsKeywordsPredicate(keywords[7]),","lastModifiedDate":"2023-11-13"},{"lineNumber":68,"author":{"gitId":"cyaoxuan"},"content":"                new PolicyIssueContainsKeywordsPredicate(keywords[8]),","lastModifiedDate":"2023-11-13"},{"lineNumber":69,"author":{"gitId":"cyaoxuan"},"content":"                new CompanyContainsKeywordsPredicate(keywords[9])","lastModifiedDate":"2023-11-13"},{"lineNumber":70,"author":{"gitId":"cyaoxuan"},"content":"        );","lastModifiedDate":"2023-11-13"},{"lineNumber":71,"author":{"gitId":"cyaoxuan"},"content":"    }","lastModifiedDate":"2023-11-13"},{"lineNumber":72,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":73,"author":{"gitId":"cyaoxuan"},"content":"    private String[] getKeywords(ArgumentMultimap argMultimap, Prefix... prefixes) throws ParseException {","lastModifiedDate":"2023-11-13"},{"lineNumber":74,"author":{"gitId":"cyaoxuan"},"content":"        String[] keywords \u003d new String[prefixes.length];","lastModifiedDate":"2023-11-13"},{"lineNumber":75,"author":{"gitId":"cyaoxuan"},"content":"        Arrays.fill(keywords, \"\");","lastModifiedDate":"2023-11-13"},{"lineNumber":76,"author":{"gitId":"cyaoxuan"},"content":"        StringBuilder emptyPrefixes \u003d new StringBuilder();","lastModifiedDate":"2023-11-13"},{"lineNumber":77,"author":{"gitId":"cyaoxuan"},"content":"        boolean atLeastOneFieldPresent \u003d false;","lastModifiedDate":"2023-11-02"},{"lineNumber":78,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":79,"author":{"gitId":"cyaoxuan"},"content":"        for (int i \u003d 0; i \u003c prefixes.length; i++) {","lastModifiedDate":"2023-11-13"},{"lineNumber":80,"author":{"gitId":"cyaoxuan"},"content":"            if (argMultimap.getValue(prefixes[i]).isPresent()) {","lastModifiedDate":"2023-11-13"},{"lineNumber":81,"author":{"gitId":"cyaoxuan"},"content":"                keywords[i] \u003d argMultimap.getValue(prefixes[i]).get();","lastModifiedDate":"2023-11-13"},{"lineNumber":82,"author":{"gitId":"cyaoxuan"},"content":"                if (keywords[i].isEmpty()) {","lastModifiedDate":"2023-11-13"},{"lineNumber":83,"author":{"gitId":"cyaoxuan"},"content":"                    emptyPrefixes.append(prefixes[i]).append(\" \");","lastModifiedDate":"2023-11-13"},{"lineNumber":84,"author":{"gitId":"cyaoxuan"},"content":"                }","lastModifiedDate":"2023-11-02"},{"lineNumber":85,"author":{"gitId":"cyaoxuan"},"content":"                atLeastOneFieldPresent \u003d true;","lastModifiedDate":"2023-11-02"},{"lineNumber":86,"author":{"gitId":"brendanneojw"},"content":"            }","lastModifiedDate":"2023-10-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":89,"author":{"gitId":"cyaoxuan"},"content":"        if (!atLeastOneFieldPresent) {","lastModifiedDate":"2023-11-02"},{"lineNumber":90,"author":{"gitId":"cyaoxuan"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-11-13"},{"lineNumber":91,"author":{"gitId":"cyaoxuan"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":92,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":93,"author":{"gitId":"cyaoxuan"},"content":"        if (emptyPrefixes.length() \u003e 0) {","lastModifiedDate":"2023-11-13"},{"lineNumber":94,"author":{"gitId":"cyaoxuan"},"content":"            throw new ParseException(String.format(MESSAGE_EMPTY_FIELDS, emptyPrefixes.toString().trim()));","lastModifiedDate":"2023-11-13"},{"lineNumber":95,"author":{"gitId":"suryanshkushwaha"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":97,"author":{"gitId":"cyaoxuan"},"content":"        return keywords;","lastModifiedDate":"2023-11-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"brendanneojw":26,"suryanshkushwaha":3,"-":25,"cyaoxuan":46}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"RSXIX"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"RSXIX"},"content":"import seedu.address.logic.parser.exceptions.ImpossibleIndexException;","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"RSXIX"},"content":"import seedu.address.logic.parser.exceptions.MissingIndexException;","lastModifiedDate":"2023-10-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":15,"author":{"gitId":"KumChaiYin"},"content":"import seedu.address.model.month.DeleteMonth;","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-02-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-02-11"},{"lineNumber":18,"author":{"gitId":"suryanshkushwaha"},"content":"import seedu.address.model.person.LicencePlate;","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-02-11"},{"lineNumber":20,"author":{"gitId":"suryanshkushwaha"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-02-11"},{"lineNumber":22,"author":{"gitId":"suryanshkushwaha"},"content":"import seedu.address.model.policy.Company;","lastModifiedDate":"2023-10-23"},{"lineNumber":23,"author":{"gitId":"suryanshkushwaha"},"content":"import seedu.address.model.policy.PolicyDate;","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"suryanshkushwaha"},"content":"import seedu.address.model.policy.PolicyNumber;","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-02-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":39,"author":{"gitId":"RSXIX"},"content":"        if (trimmedIndex.isEmpty()) {","lastModifiedDate":"2023-10-16"},{"lineNumber":40,"author":{"gitId":"RSXIX"},"content":"            throw new MissingIndexException(Messages.MESSAGE_MISSING_INDEX);","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"RSXIX"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":43,"author":{"gitId":"RSXIX"},"content":"            throw new ImpossibleIndexException(Messages.MESSAGE_IMPOSSIBLE_INDEX);","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":48,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":135,"author":{"gitId":"suryanshkushwaha"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":136,"author":{"gitId":"suryanshkushwaha"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":137,"author":{"gitId":"suryanshkushwaha"},"content":"     * Parses a {@code String nric} into an {@code Nric}.","lastModifiedDate":"2023-10-17"},{"lineNumber":138,"author":{"gitId":"suryanshkushwaha"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-10-17"},{"lineNumber":139,"author":{"gitId":"suryanshkushwaha"},"content":"     *","lastModifiedDate":"2023-10-17"},{"lineNumber":140,"author":{"gitId":"suryanshkushwaha"},"content":"     * @throws ParseException if the given {@code nric} is invalid.","lastModifiedDate":"2023-10-17"},{"lineNumber":141,"author":{"gitId":"suryanshkushwaha"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":142,"author":{"gitId":"suryanshkushwaha"},"content":"    public static Nric parseNric(String nric) throws ParseException {","lastModifiedDate":"2023-10-17"},{"lineNumber":143,"author":{"gitId":"suryanshkushwaha"},"content":"        requireNonNull(nric);","lastModifiedDate":"2023-10-17"},{"lineNumber":144,"author":{"gitId":"suryanshkushwaha"},"content":"        String trimmedNric \u003d nric.trim();","lastModifiedDate":"2023-10-17"},{"lineNumber":145,"author":{"gitId":"suryanshkushwaha"},"content":"        if (!Nric.isValidNric(trimmedNric)) {","lastModifiedDate":"2023-10-17"},{"lineNumber":146,"author":{"gitId":"suryanshkushwaha"},"content":"            throw new ParseException(Nric.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-17"},{"lineNumber":147,"author":{"gitId":"suryanshkushwaha"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":148,"author":{"gitId":"suryanshkushwaha"},"content":"        return new Nric(trimmedNric);","lastModifiedDate":"2023-10-17"},{"lineNumber":149,"author":{"gitId":"suryanshkushwaha"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":150,"author":{"gitId":"suryanshkushwaha"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":151,"author":{"gitId":"suryanshkushwaha"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":152,"author":{"gitId":"suryanshkushwaha"},"content":"     * Parses a {@code String licencePlate} into an {@code LicencePlate}.","lastModifiedDate":"2023-10-17"},{"lineNumber":153,"author":{"gitId":"suryanshkushwaha"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-10-17"},{"lineNumber":154,"author":{"gitId":"suryanshkushwaha"},"content":"     *","lastModifiedDate":"2023-10-17"},{"lineNumber":155,"author":{"gitId":"suryanshkushwaha"},"content":"     * @throws ParseException if the given {@code licencePlate} is invalid.","lastModifiedDate":"2023-10-17"},{"lineNumber":156,"author":{"gitId":"suryanshkushwaha"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":157,"author":{"gitId":"suryanshkushwaha"},"content":"    public static LicencePlate parseLicencePlate(String licencePlate) throws ParseException {","lastModifiedDate":"2023-10-17"},{"lineNumber":158,"author":{"gitId":"suryanshkushwaha"},"content":"        requireNonNull(licencePlate);","lastModifiedDate":"2023-10-17"},{"lineNumber":159,"author":{"gitId":"suryanshkushwaha"},"content":"        String trimmedLicencePlate \u003d licencePlate.trim();","lastModifiedDate":"2023-10-17"},{"lineNumber":160,"author":{"gitId":"suryanshkushwaha"},"content":"        if (!LicencePlate.isValidLicencePlate(trimmedLicencePlate)) {","lastModifiedDate":"2023-10-17"},{"lineNumber":161,"author":{"gitId":"suryanshkushwaha"},"content":"            throw new ParseException(LicencePlate.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-17"},{"lineNumber":162,"author":{"gitId":"suryanshkushwaha"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":163,"author":{"gitId":"suryanshkushwaha"},"content":"        return new LicencePlate(trimmedLicencePlate);","lastModifiedDate":"2023-10-17"},{"lineNumber":164,"author":{"gitId":"suryanshkushwaha"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":165,"author":{"gitId":"suryanshkushwaha"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":166,"author":{"gitId":"suryanshkushwaha"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":167,"author":{"gitId":"suryanshkushwaha"},"content":"     * Parses a {@code String policyNumber} into an {@code PolicyNumber}.","lastModifiedDate":"2023-10-17"},{"lineNumber":168,"author":{"gitId":"suryanshkushwaha"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-10-17"},{"lineNumber":169,"author":{"gitId":"suryanshkushwaha"},"content":"     *","lastModifiedDate":"2023-10-17"},{"lineNumber":170,"author":{"gitId":"suryanshkushwaha"},"content":"     * @throws ParseException if the given {@code policyNumber} is invalid.","lastModifiedDate":"2023-10-17"},{"lineNumber":171,"author":{"gitId":"suryanshkushwaha"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":172,"author":{"gitId":"suryanshkushwaha"},"content":"    public static PolicyNumber parsePolicyNumber(String policyNumber) throws ParseException {","lastModifiedDate":"2023-10-17"},{"lineNumber":173,"author":{"gitId":"suryanshkushwaha"},"content":"        requireNonNull(policyNumber);","lastModifiedDate":"2023-10-17"},{"lineNumber":174,"author":{"gitId":"suryanshkushwaha"},"content":"        String trimmedPolicyNumber \u003d policyNumber.trim();","lastModifiedDate":"2023-10-17"},{"lineNumber":175,"author":{"gitId":"suryanshkushwaha"},"content":"        if (!PolicyNumber.isValidPolicyNumber(trimmedPolicyNumber)) {","lastModifiedDate":"2023-10-17"},{"lineNumber":176,"author":{"gitId":"suryanshkushwaha"},"content":"            throw new ParseException(PolicyNumber.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-17"},{"lineNumber":177,"author":{"gitId":"suryanshkushwaha"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":178,"author":{"gitId":"suryanshkushwaha"},"content":"        return new PolicyNumber(trimmedPolicyNumber);","lastModifiedDate":"2023-10-17"},{"lineNumber":179,"author":{"gitId":"suryanshkushwaha"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":180,"author":{"gitId":"suryanshkushwaha"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":181,"author":{"gitId":"suryanshkushwaha"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":182,"author":{"gitId":"suryanshkushwaha"},"content":"     * Parses a {@code String policyIssueDate} into an {@code PolicyIssueDate}.","lastModifiedDate":"2023-10-17"},{"lineNumber":183,"author":{"gitId":"suryanshkushwaha"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-10-17"},{"lineNumber":184,"author":{"gitId":"suryanshkushwaha"},"content":"     *","lastModifiedDate":"2023-10-17"},{"lineNumber":185,"author":{"gitId":"suryanshkushwaha"},"content":"     * @throws ParseException if the given {@code policyIssueDate} is invalid.","lastModifiedDate":"2023-10-17"},{"lineNumber":186,"author":{"gitId":"suryanshkushwaha"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":187,"author":{"gitId":"suryanshkushwaha"},"content":"    public static PolicyDate parsePolicyIssueDate(String policyIssueDate) throws ParseException {","lastModifiedDate":"2023-10-17"},{"lineNumber":188,"author":{"gitId":"suryanshkushwaha"},"content":"        requireNonNull(policyIssueDate);","lastModifiedDate":"2023-10-17"},{"lineNumber":189,"author":{"gitId":"suryanshkushwaha"},"content":"        String trimmedPolicyIssueDate \u003d policyIssueDate.trim();","lastModifiedDate":"2023-10-17"},{"lineNumber":190,"author":{"gitId":"suryanshkushwaha"},"content":"        if (!PolicyDate.isValidPolicyDate(trimmedPolicyIssueDate)) {","lastModifiedDate":"2023-10-17"},{"lineNumber":191,"author":{"gitId":"suryanshkushwaha"},"content":"            throw new ParseException(PolicyDate.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-17"},{"lineNumber":192,"author":{"gitId":"suryanshkushwaha"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":193,"author":{"gitId":"suryanshkushwaha"},"content":"        return new PolicyDate(trimmedPolicyIssueDate);","lastModifiedDate":"2023-10-17"},{"lineNumber":194,"author":{"gitId":"suryanshkushwaha"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":195,"author":{"gitId":"suryanshkushwaha"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":196,"author":{"gitId":"suryanshkushwaha"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":197,"author":{"gitId":"suryanshkushwaha"},"content":"     * Parses a {@code String policyExpiryDate} into an {@code PolicyExpiryDate}.","lastModifiedDate":"2023-10-17"},{"lineNumber":198,"author":{"gitId":"suryanshkushwaha"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-10-17"},{"lineNumber":199,"author":{"gitId":"suryanshkushwaha"},"content":"     *","lastModifiedDate":"2023-10-17"},{"lineNumber":200,"author":{"gitId":"suryanshkushwaha"},"content":"     * @throws ParseException if the given {@code policyExpiryDate} is invalid.","lastModifiedDate":"2023-10-17"},{"lineNumber":201,"author":{"gitId":"suryanshkushwaha"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":202,"author":{"gitId":"suryanshkushwaha"},"content":"    public static PolicyDate parsePolicyExpiryDate(String policyExpiryDate) throws ParseException {","lastModifiedDate":"2023-10-17"},{"lineNumber":203,"author":{"gitId":"suryanshkushwaha"},"content":"        requireNonNull(policyExpiryDate);","lastModifiedDate":"2023-10-17"},{"lineNumber":204,"author":{"gitId":"suryanshkushwaha"},"content":"        String trimmedPolicyExpiryDate \u003d policyExpiryDate.trim();","lastModifiedDate":"2023-10-17"},{"lineNumber":205,"author":{"gitId":"suryanshkushwaha"},"content":"        if (!PolicyDate.isValidPolicyDate(trimmedPolicyExpiryDate)) {","lastModifiedDate":"2023-10-17"},{"lineNumber":206,"author":{"gitId":"suryanshkushwaha"},"content":"            throw new ParseException(PolicyDate.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-17"},{"lineNumber":207,"author":{"gitId":"suryanshkushwaha"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":208,"author":{"gitId":"suryanshkushwaha"},"content":"        return new PolicyDate(trimmedPolicyExpiryDate);","lastModifiedDate":"2023-10-17"},{"lineNumber":209,"author":{"gitId":"suryanshkushwaha"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":210,"author":{"gitId":"suryanshkushwaha"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":211,"author":{"gitId":"suryanshkushwaha"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":212,"author":{"gitId":"suryanshkushwaha"},"content":"     * Parses a {@code String company} into an {@code Company}.","lastModifiedDate":"2023-10-23"},{"lineNumber":213,"author":{"gitId":"suryanshkushwaha"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-10-23"},{"lineNumber":214,"author":{"gitId":"suryanshkushwaha"},"content":"     *","lastModifiedDate":"2023-10-23"},{"lineNumber":215,"author":{"gitId":"suryanshkushwaha"},"content":"     * @throws ParseException if the given {@code company} is invalid.","lastModifiedDate":"2023-10-23"},{"lineNumber":216,"author":{"gitId":"suryanshkushwaha"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":217,"author":{"gitId":"suryanshkushwaha"},"content":"    public static Company parseCompany(String company) throws ParseException {","lastModifiedDate":"2023-10-23"},{"lineNumber":218,"author":{"gitId":"suryanshkushwaha"},"content":"        requireNonNull(company);","lastModifiedDate":"2023-10-23"},{"lineNumber":219,"author":{"gitId":"suryanshkushwaha"},"content":"        String trimmedCompany \u003d company.trim();","lastModifiedDate":"2023-10-23"},{"lineNumber":220,"author":{"gitId":"suryanshkushwaha"},"content":"        if (!Company.isValidCompany(trimmedCompany)) {","lastModifiedDate":"2023-10-23"},{"lineNumber":221,"author":{"gitId":"suryanshkushwaha"},"content":"            throw new ParseException(Company.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-23"},{"lineNumber":222,"author":{"gitId":"suryanshkushwaha"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":223,"author":{"gitId":"suryanshkushwaha"},"content":"        return new Company(trimmedCompany);","lastModifiedDate":"2023-10-23"},{"lineNumber":224,"author":{"gitId":"suryanshkushwaha"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":225,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":226,"author":{"gitId":"KumChaiYin"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":227,"author":{"gitId":"KumChaiYin"},"content":"     * Parses a {@code String deleteMonth} into an {@code DeleteMonth}.","lastModifiedDate":"2023-10-25"},{"lineNumber":228,"author":{"gitId":"KumChaiYin"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-10-25"},{"lineNumber":229,"author":{"gitId":"KumChaiYin"},"content":"     *","lastModifiedDate":"2023-10-25"},{"lineNumber":230,"author":{"gitId":"KumChaiYin"},"content":"     * @throws ParseException if the given {@code deleteMonth} is invalid.","lastModifiedDate":"2023-10-25"},{"lineNumber":231,"author":{"gitId":"KumChaiYin"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":232,"author":{"gitId":"KumChaiYin"},"content":"    public static DeleteMonth parseDeleteMonth(String deleteMonth) throws ParseException {","lastModifiedDate":"2023-10-25"},{"lineNumber":233,"author":{"gitId":"KumChaiYin"},"content":"        requireNonNull(deleteMonth);","lastModifiedDate":"2023-10-25"},{"lineNumber":234,"author":{"gitId":"KumChaiYin"},"content":"        String trimmedDeleteMonth \u003d deleteMonth.trim();","lastModifiedDate":"2023-10-25"},{"lineNumber":235,"author":{"gitId":"KumChaiYin"},"content":"        if (!DeleteMonth.isValidDeleteMonth(trimmedDeleteMonth)) {","lastModifiedDate":"2023-10-25"},{"lineNumber":236,"author":{"gitId":"KumChaiYin"},"content":"            throw new ParseException(DeleteMonth.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-25"},{"lineNumber":237,"author":{"gitId":"KumChaiYin"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":238,"author":{"gitId":"KumChaiYin"},"content":"        return new DeleteMonth(trimmedDeleteMonth);","lastModifiedDate":"2023-10-25"},{"lineNumber":239,"author":{"gitId":"KumChaiYin"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":240,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"suryanshkushwaha":95,"RSXIX":8,"KumChaiYin":16,"-":121}},{"path":"src/main/java/seedu/address/logic/parser/RemarkCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cyaoxuan"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-09-28"},{"lineNumber":2,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":3,"author":{"gitId":"cyaoxuan"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-09-28"},{"lineNumber":4,"author":{"gitId":"cyaoxuan"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-09-28"},{"lineNumber":5,"author":{"gitId":"cyaoxuan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2023-09-28"},{"lineNumber":6,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":7,"author":{"gitId":"cyaoxuan"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-09-28"},{"lineNumber":8,"author":{"gitId":"cyaoxuan"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-09-28"},{"lineNumber":9,"author":{"gitId":"cyaoxuan"},"content":"import seedu.address.logic.commands.RemarkCommand;","lastModifiedDate":"2023-09-28"},{"lineNumber":10,"author":{"gitId":"cyaoxuan"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-09-28"},{"lineNumber":11,"author":{"gitId":"cyaoxuan"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2023-09-28"},{"lineNumber":12,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":13,"author":{"gitId":"cyaoxuan"},"content":"/**","lastModifiedDate":"2023-09-28"},{"lineNumber":14,"author":{"gitId":"cyaoxuan"},"content":" * Parses input arguments and creates a new RemarkCommand object","lastModifiedDate":"2023-09-28"},{"lineNumber":15,"author":{"gitId":"cyaoxuan"},"content":" */","lastModifiedDate":"2023-09-28"},{"lineNumber":16,"author":{"gitId":"brendanneojw"},"content":"public class RemarkCommandParser implements Parser\u003cRemarkCommand\u003e {","lastModifiedDate":"2023-11-13"},{"lineNumber":17,"author":{"gitId":"cyaoxuan"},"content":"    /**","lastModifiedDate":"2023-09-28"},{"lineNumber":18,"author":{"gitId":"cyaoxuan"},"content":"     * Parses the given {@code String} of arguments in the context of the RemarkCommand","lastModifiedDate":"2023-09-28"},{"lineNumber":19,"author":{"gitId":"cyaoxuan"},"content":"     * and returns a RemarkCommand object for execution.","lastModifiedDate":"2023-09-28"},{"lineNumber":20,"author":{"gitId":"cyaoxuan"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-09-28"},{"lineNumber":21,"author":{"gitId":"cyaoxuan"},"content":"     */","lastModifiedDate":"2023-09-28"},{"lineNumber":22,"author":{"gitId":"cyaoxuan"},"content":"    public RemarkCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-09-28"},{"lineNumber":23,"author":{"gitId":"cyaoxuan"},"content":"        requireNonNull(args);","lastModifiedDate":"2023-09-28"},{"lineNumber":24,"author":{"gitId":"cyaoxuan"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2023-09-28"},{"lineNumber":25,"author":{"gitId":"cyaoxuan"},"content":"                PREFIX_REMARK);","lastModifiedDate":"2023-09-28"},{"lineNumber":26,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":27,"author":{"gitId":"cyaoxuan"},"content":"        Index index;","lastModifiedDate":"2023-09-28"},{"lineNumber":28,"author":{"gitId":"cyaoxuan"},"content":"        try {","lastModifiedDate":"2023-09-28"},{"lineNumber":29,"author":{"gitId":"cyaoxuan"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2023-09-28"},{"lineNumber":30,"author":{"gitId":"cyaoxuan"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2023-09-28"},{"lineNumber":31,"author":{"gitId":"cyaoxuan"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-09-28"},{"lineNumber":32,"author":{"gitId":"cyaoxuan"},"content":"                    RemarkCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2023-09-28"},{"lineNumber":33,"author":{"gitId":"cyaoxuan"},"content":"        }","lastModifiedDate":"2023-09-28"},{"lineNumber":34,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":35,"author":{"gitId":"cyaoxuan"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_REMARK);","lastModifiedDate":"2023-11-06"},{"lineNumber":36,"author":{"gitId":"cyaoxuan"},"content":"        String remark \u003d argMultimap.getValue(PREFIX_REMARK).orElse(\"\");","lastModifiedDate":"2023-09-28"},{"lineNumber":37,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":38,"author":{"gitId":"cyaoxuan"},"content":"        return new RemarkCommand(index, new Remark(remark));","lastModifiedDate":"2023-09-28"},{"lineNumber":39,"author":{"gitId":"cyaoxuan"},"content":"    }","lastModifiedDate":"2023-09-28"},{"lineNumber":40,"author":{"gitId":"cyaoxuan"},"content":"}","lastModifiedDate":"2023-09-28"}],"authorContributionMap":{"brendanneojw":1,"cyaoxuan":39}},{"path":"src/main/java/seedu/address/logic/parser/RemindCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"brendanneojw"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-25"},{"lineNumber":2,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":3,"author":{"gitId":"brendanneojw"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"brendanneojw"},"content":"import seedu.address.logic.commands.RemindCommand;","lastModifiedDate":"2023-10-25"},{"lineNumber":5,"author":{"gitId":"brendanneojw"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"brendanneojw"},"content":"import seedu.address.model.person.predicates.RemindPredicate;","lastModifiedDate":"2023-11-11"},{"lineNumber":7,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"brendanneojw"},"content":"/**","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"brendanneojw"},"content":" * Parses input arguments and creates a new RemindCommand object","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"brendanneojw"},"content":" */","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"brendanneojw"},"content":"public class RemindCommandParser implements Parser\u003cRemindCommand\u003e {","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":13,"author":{"gitId":"brendanneojw"},"content":"    private static final int VALID_DAYS_FROM \u003d 0;","lastModifiedDate":"2023-10-31"},{"lineNumber":14,"author":{"gitId":"brendanneojw"},"content":"    private static final int VALID_DAYS_TO \u003d 7305;","lastModifiedDate":"2023-10-31"},{"lineNumber":15,"author":{"gitId":"brendanneojw"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"brendanneojw"},"content":"     * Parses the given {@code String} of arguments in the context of the RemindCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"brendanneojw"},"content":"     * and returns a RemindCommand object for execution.","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"brendanneojw"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"brendanneojw"},"content":"    public RemindCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"brendanneojw"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"brendanneojw"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"brendanneojw"},"content":"            throw new ParseException(","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"brendanneojw"},"content":"                    String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, RemindCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-26"},{"lineNumber":25,"author":{"gitId":"brendanneojw"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":27,"author":{"gitId":"brendanneojw"},"content":"        try {","lastModifiedDate":"2023-10-26"},{"lineNumber":28,"author":{"gitId":"brendanneojw"},"content":"            int parsedArgs \u003d Integer.parseInt(trimmedArgs);","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"suryanshkushwaha"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":30,"author":{"gitId":"brendanneojw"},"content":"            if (parsedArgs \u003c VALID_DAYS_FROM || parsedArgs \u003e VALID_DAYS_TO) {","lastModifiedDate":"2023-10-31"},{"lineNumber":31,"author":{"gitId":"brendanneojw"},"content":"                throw new ParseException(String.format(Messages.MESSAGE_NOT_IN_RANGE, VALID_DAYS_FROM, VALID_DAYS_TO));","lastModifiedDate":"2023-10-31"},{"lineNumber":32,"author":{"gitId":"brendanneojw"},"content":"            }","lastModifiedDate":"2023-10-26"},{"lineNumber":33,"author":{"gitId":"brendanneojw"},"content":"            return new RemindCommand(new RemindPredicate(parsedArgs));","lastModifiedDate":"2023-10-26"},{"lineNumber":34,"author":{"gitId":"brendanneojw"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-10-26"},{"lineNumber":35,"author":{"gitId":"brendanneojw"},"content":"            throw new ParseException(String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-10-26"},{"lineNumber":36,"author":{"gitId":"brendanneojw"},"content":"                    Messages.MESSAGE_NOT_NUMBERS));","lastModifiedDate":"2023-10-26"},{"lineNumber":37,"author":{"gitId":"brendanneojw"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":38,"author":{"gitId":"brendanneojw"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":39,"author":{"gitId":"brendanneojw"},"content":"}","lastModifiedDate":"2023-10-25"}],"authorContributionMap":{"brendanneojw":38,"suryanshkushwaha":1}},{"path":"src/main/java/seedu/address/logic/parser/SortCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RSXIX"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-24"},{"lineNumber":2,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":3,"author":{"gitId":"RSXIX"},"content":"import seedu.address.logic.commands.SortCommand;","lastModifiedDate":"2023-10-24"},{"lineNumber":4,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":5,"author":{"gitId":"RSXIX"},"content":"/**","lastModifiedDate":"2023-10-24"},{"lineNumber":6,"author":{"gitId":"RSXIX"},"content":" * Parses input arguments and creates a new SortCommand object","lastModifiedDate":"2023-10-24"},{"lineNumber":7,"author":{"gitId":"RSXIX"},"content":" */","lastModifiedDate":"2023-10-24"},{"lineNumber":8,"author":{"gitId":"RSXIX"},"content":"public class SortCommandParser implements Parser\u003cSortCommand\u003e {","lastModifiedDate":"2023-10-24"},{"lineNumber":9,"author":{"gitId":"RSXIX"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":10,"author":{"gitId":"RSXIX"},"content":"     * Parses the given {@code String} of arguments in the context of the SortCommand","lastModifiedDate":"2023-10-24"},{"lineNumber":11,"author":{"gitId":"RSXIX"},"content":"     * and returns a SortCommand object for execution.","lastModifiedDate":"2023-10-24"},{"lineNumber":12,"author":{"gitId":"RSXIX"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":13,"author":{"gitId":"RSXIX"},"content":"    public SortCommand parse(String args) {","lastModifiedDate":"2023-10-24"},{"lineNumber":14,"author":{"gitId":"RSXIX"},"content":"        return new SortCommand();","lastModifiedDate":"2023-10-24"},{"lineNumber":15,"author":{"gitId":"RSXIX"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":16,"author":{"gitId":"RSXIX"},"content":"}","lastModifiedDate":"2023-10-24"}],"authorContributionMap":{"RSXIX":16}},{"path":"src/main/java/seedu/address/logic/parser/exceptions/ImpossibleIndexException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RSXIX"},"content":"package seedu.address.logic.parser.exceptions;","lastModifiedDate":"2023-10-16"},{"lineNumber":2,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":3,"author":{"gitId":"RSXIX"},"content":"/**","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"RSXIX"},"content":" * Represents a non negative index error encountered by a parser.","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"RSXIX"},"content":" */","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"RSXIX"},"content":"public class ImpossibleIndexException extends ParseException {","lastModifiedDate":"2023-10-16"},{"lineNumber":7,"author":{"gitId":"RSXIX"},"content":"    public ImpossibleIndexException(String message) {","lastModifiedDate":"2023-10-16"},{"lineNumber":8,"author":{"gitId":"RSXIX"},"content":"        super(message);","lastModifiedDate":"2023-10-16"},{"lineNumber":9,"author":{"gitId":"RSXIX"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":10,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":11,"author":{"gitId":"RSXIX"},"content":"    public ImpossibleIndexException(String message, Throwable cause) {","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"RSXIX"},"content":"        super(message, cause);","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"RSXIX"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"RSXIX"},"content":"}","lastModifiedDate":"2023-10-16"}],"authorContributionMap":{"RSXIX":15}},{"path":"src/main/java/seedu/address/logic/parser/exceptions/MissingIndexException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RSXIX"},"content":"package seedu.address.logic.parser.exceptions;","lastModifiedDate":"2023-10-16"},{"lineNumber":2,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":3,"author":{"gitId":"RSXIX"},"content":"/**","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"RSXIX"},"content":" * Represents a missing index error encountered by a parser.","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"RSXIX"},"content":" */","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"RSXIX"},"content":"public class MissingIndexException extends ParseException {","lastModifiedDate":"2023-10-16"},{"lineNumber":7,"author":{"gitId":"RSXIX"},"content":"    public MissingIndexException(String message) {","lastModifiedDate":"2023-10-16"},{"lineNumber":8,"author":{"gitId":"RSXIX"},"content":"        super(message);","lastModifiedDate":"2023-10-16"},{"lineNumber":9,"author":{"gitId":"RSXIX"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":10,"author":{"gitId":"RSXIX"},"content":"    public MissingIndexException(String message, Throwable cause) {","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"RSXIX"},"content":"        super(message, cause);","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"RSXIX"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"RSXIX"},"content":"}","lastModifiedDate":"2023-10-16"}],"authorContributionMap":{"RSXIX":13}},{"path":"src/main/java/seedu/address/logic/parser/exceptions/ParseException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser.exceptions;","lastModifiedDate":"2017-03-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2017-03-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Represents a parse error encountered by a parser.","lastModifiedDate":"2017-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ParseException extends IllegalValueException {","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public ParseException(String message) {","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2017-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public ParseException(String message, Throwable cause) {","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-11"}],"authorContributionMap":{"RSXIX":1,"-":17}},{"path":"src/main/java/seedu/address/model/AddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.UniquePersonList;","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Duplicates are not allowed (by .isSamePerson comparison)","lastModifiedDate":"2018-04-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class AddressBook implements ReadOnlyAddressBook {","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final UniquePersonList persons;","lastModifiedDate":"2016-08-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        persons \u003d new UniquePersonList();","lastModifiedDate":"2016-08-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public AddressBook() {}","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Creates an AddressBook using the Persons in the {@code toBeCopied}","lastModifiedDate":"2018-03-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public AddressBook(ReadOnlyAddressBook toBeCopied) {","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Replaces the contents of the person list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        this.persons.setPersons(persons);","lastModifiedDate":"2016-10-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code AddressBook} with {@code newData}.","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyAddressBook newData) {","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        setPersons(newData.getPersonList());","lastModifiedDate":"2018-03-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"RSXIX"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":61,"author":{"gitId":"RSXIX"},"content":"     * Sorts the existing data of this {@code AddressBook}","lastModifiedDate":"2023-10-24"},{"lineNumber":62,"author":{"gitId":"RSXIX"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":63,"author":{"gitId":"RSXIX"},"content":"    public void sortData() {","lastModifiedDate":"2023-10-24"},{"lineNumber":64,"author":{"gitId":"RSXIX"},"content":"        persons.sort();","lastModifiedDate":"2023-10-24"},{"lineNumber":65,"author":{"gitId":"RSXIX"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":66,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    //// person-level operations","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return persons.contains(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"RSXIX"},"content":"    /**","lastModifiedDate":"2023-10-22"},{"lineNumber":78,"author":{"gitId":"RSXIX"},"content":"     * Returns true if a person with the same policy number as {@code person} in the address book.","lastModifiedDate":"2023-10-22"},{"lineNumber":79,"author":{"gitId":"RSXIX"},"content":"     */","lastModifiedDate":"2023-10-22"},{"lineNumber":80,"author":{"gitId":"RSXIX"},"content":"    public boolean hasSamePolicyNumber(Person person) {","lastModifiedDate":"2023-10-24"},{"lineNumber":81,"author":{"gitId":"RSXIX"},"content":"        requireNonNull(person);","lastModifiedDate":"2023-10-22"},{"lineNumber":82,"author":{"gitId":"RSXIX"},"content":"        return persons.hasSamePolicyNumber(person);","lastModifiedDate":"2023-10-22"},{"lineNumber":83,"author":{"gitId":"RSXIX"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":84,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Adds a person to the address book.","lastModifiedDate":"2016-09-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * The person must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void addPerson(Person p) {","lastModifiedDate":"2018-08-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        persons.add(p);","lastModifiedDate":"2018-03-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2018-01-10"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        requireNonNull(editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        persons.setPerson(target, editedPerson);","lastModifiedDate":"2018-03-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2017-08-16"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public void removePerson(Person key) {","lastModifiedDate":"2018-08-07"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        persons.remove(key);","lastModifiedDate":"2018-02-28"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                .add(\"persons\", persons)","lastModifiedDate":"2019-02-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList();","lastModifiedDate":"2018-04-05"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        if (!(other instanceof AddressBook)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        AddressBook otherAddressBook \u003d (AddressBook) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        return persons.equals(otherAddressBook.persons);","lastModifiedDate":"2023-07-13"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        return persons.hashCode();","lastModifiedDate":"2018-03-29"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":145,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"RSXIX":15,"-":130}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","lastModifiedDate":"2018-01-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    void setAddressBook(ReadOnlyAddressBook addressBook);","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /** Returns the AddressBook */","lastModifiedDate":"2016-09-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    boolean hasPerson(Person person);","lastModifiedDate":"2018-08-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"RSXIX"},"content":"    /**","lastModifiedDate":"2023-10-22"},{"lineNumber":61,"author":{"gitId":"RSXIX"},"content":"     * Returns true if a person with the same policy number as {@code person} in the address book.","lastModifiedDate":"2023-10-22"},{"lineNumber":62,"author":{"gitId":"RSXIX"},"content":"     */","lastModifiedDate":"2023-10-22"},{"lineNumber":63,"author":{"gitId":"RSXIX"},"content":"    boolean hasSamePolicyNumber(Person person);","lastModifiedDate":"2023-10-24"},{"lineNumber":64,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * Deletes the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * The person must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    void deletePerson(Person target);","lastModifiedDate":"2018-08-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Adds the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * {@code person} must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    void addPerson(Person person);","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    void setPerson(Person target, Person editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":84,"author":{"gitId":"RSXIX"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":85,"author":{"gitId":"KumChaiYin"},"content":"     * Sorts the list by policy expiry date","lastModifiedDate":"2023-11-13"},{"lineNumber":86,"author":{"gitId":"RSXIX"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":87,"author":{"gitId":"RSXIX"},"content":"    void sortData();","lastModifiedDate":"2023-10-24"},{"lineNumber":88,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered person list */","lastModifiedDate":"2017-09-01"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Updates the filter of the filtered person list to filter by the given {@code predicate}.","lastModifiedDate":"2017-08-05"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2018-01-10"},{"lineNumber":97,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":98,"author":{"gitId":"KumChaiYin"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":99,"author":{"gitId":"KumChaiYin"},"content":"     * Delete all people fulfil the predicate, show all people in address book.","lastModifiedDate":"2023-10-25"},{"lineNumber":100,"author":{"gitId":"KumChaiYin"},"content":"     * @param predicate Predicate indicate whether a person should be deleted.","lastModifiedDate":"2023-10-25"},{"lineNumber":101,"author":{"gitId":"KumChaiYin"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":102,"author":{"gitId":"KumChaiYin"},"content":"    void batchDeleteWithPredicate(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2023-10-25"},{"lineNumber":103,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"RSXIX":9,"KumChaiYin":7,"-":87}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"KumChaiYin"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"KumChaiYin"},"content":"import java.util.List;","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final FilteredList\u003cPerson\u003e filteredPersons;","lastModifiedDate":"2018-01-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        requireAllNonNull(addressBook, userPrefs);","lastModifiedDate":"2017-05-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        filteredPersons \u003d new FilteredList\u003c\u003e(this.addressBook.getPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this(new AddressBook(), new UserPrefs());","lastModifiedDate":"2016-09-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        this.addressBook.resetData(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2016-09-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        return addressBook.hasPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":98,"author":{"gitId":"RSXIX"},"content":"    @Override","lastModifiedDate":"2023-10-24"},{"lineNumber":99,"author":{"gitId":"RSXIX"},"content":"    public void sortData() {","lastModifiedDate":"2023-10-24"},{"lineNumber":100,"author":{"gitId":"RSXIX"},"content":"        addressBook.sortData();","lastModifiedDate":"2023-10-24"},{"lineNumber":101,"author":{"gitId":"RSXIX"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":102,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2018-08-15"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        addressBook.removePerson(target);","lastModifiedDate":"2019-01-25"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        addressBook.addPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":114,"author":{"gitId":"RSXIX"},"content":"    /**","lastModifiedDate":"2023-10-22"},{"lineNumber":115,"author":{"gitId":"RSXIX"},"content":"     * Returns true if a person with the same policy number as {@code person} in the address book.","lastModifiedDate":"2023-10-22"},{"lineNumber":116,"author":{"gitId":"RSXIX"},"content":"     */","lastModifiedDate":"2023-10-22"},{"lineNumber":117,"author":{"gitId":"RSXIX"},"content":"    public boolean hasSamePolicyNumber(Person person) {","lastModifiedDate":"2023-10-24"},{"lineNumber":118,"author":{"gitId":"RSXIX"},"content":"        requireNonNull(person);","lastModifiedDate":"2023-10-22"},{"lineNumber":119,"author":{"gitId":"RSXIX"},"content":"        return addressBook.hasSamePolicyNumber(person);","lastModifiedDate":"2023-10-24"},{"lineNumber":120,"author":{"gitId":"RSXIX"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":121,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2017-06-07"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        addressBook.setPerson(target, editedPerson);","lastModifiedDate":"2019-01-25"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-10-12"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2018-01-10"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        return filteredPersons;","lastModifiedDate":"2018-12-09"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        filteredPersons.setPredicate(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":146,"author":{"gitId":"KumChaiYin"},"content":"    @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":147,"author":{"gitId":"KumChaiYin"},"content":"    public void batchDeleteWithPredicate(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2023-10-25"},{"lineNumber":148,"author":{"gitId":"KumChaiYin"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2023-10-25"},{"lineNumber":149,"author":{"gitId":"KumChaiYin"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2023-10-25"},{"lineNumber":150,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":151,"author":{"gitId":"KumChaiYin"},"content":"        this.updateFilteredPersonList(predicate);","lastModifiedDate":"2023-10-26"},{"lineNumber":152,"author":{"gitId":"KumChaiYin"},"content":"        ObservableList\u003cPerson\u003e listToDelete \u003d this.getFilteredPersonList();","lastModifiedDate":"2023-10-25"},{"lineNumber":153,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":154,"author":{"gitId":"KumChaiYin"},"content":"        List\u003cPerson\u003e copyList \u003d new ArrayList\u003c\u003e(listToDelete);","lastModifiedDate":"2023-10-25"},{"lineNumber":155,"author":{"gitId":"KumChaiYin"},"content":"        for (Person person : copyList) {","lastModifiedDate":"2023-10-25"},{"lineNumber":156,"author":{"gitId":"KumChaiYin"},"content":"            addressBook.removePerson(person);","lastModifiedDate":"2023-10-25"},{"lineNumber":157,"author":{"gitId":"KumChaiYin"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":158,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":159,"author":{"gitId":"KumChaiYin"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2023-10-25"},{"lineNumber":160,"author":{"gitId":"KumChaiYin"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":161,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-07-13"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        if (!(other instanceof ModelManager)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":170,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        ModelManager otherModelManager \u003d (ModelManager) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        return addressBook.equals(otherModelManager.addressBook)","lastModifiedDate":"2023-07-13"},{"lineNumber":175,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(otherModelManager.userPrefs)","lastModifiedDate":"2023-07-13"},{"lineNumber":176,"author":{"gitId":"-"},"content":"                \u0026\u0026 filteredPersons.equals(otherModelManager.filteredPersons);","lastModifiedDate":"2023-07-13"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":179,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"RSXIX":13,"KumChaiYin":18,"-":148}},{"path":"src/main/java/seedu/address/model/UserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents User\u0027s preferences.","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class UserPrefs implements ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"brendanneojw"},"content":"    private Path addressBookFilePath \u003d Paths.get(\"data\" , \"insureiq.json\");","lastModifiedDate":"2023-11-02"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with default values.","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public UserPrefs() {}","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with the prefs in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public UserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code UserPrefs} with {@code newUserPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyUserPrefs newUserPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireNonNull(newUserPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        setGuiSettings(newUserPrefs.getGuiSettings());","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        setAddressBookFilePath(newUserPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return guiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.guiSettings \u003d guiSettings;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return addressBookFilePath;","lastModifiedDate":"2017-02-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        this.addressBookFilePath \u003d addressBookFilePath;","lastModifiedDate":"2017-02-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        if (!(other instanceof UserPrefs)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        UserPrefs otherUserPrefs \u003d (UserPrefs) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return guiSettings.equals(otherUserPrefs.guiSettings)","lastModifiedDate":"2023-07-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                \u0026\u0026 addressBookFilePath.equals(otherUserPrefs.addressBookFilePath);","lastModifiedDate":"2023-07-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return Objects.hash(guiSettings, addressBookFilePath);","lastModifiedDate":"2018-08-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-02-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        sb.append(\"Gui Settings : \" + guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        sb.append(\"\\nLocal data file location : \" + addressBookFilePath);","lastModifiedDate":"2017-02-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-02-25"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"brendanneojw":1,"-":87}},{"path":"src/main/java/seedu/address/model/month/DeleteMonth.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"KumChaiYin"},"content":"package seedu.address.model.month;","lastModifiedDate":"2023-10-25"},{"lineNumber":2,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":3,"author":{"gitId":"KumChaiYin"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-25"},{"lineNumber":4,"author":{"gitId":"KumChaiYin"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-10-25"},{"lineNumber":5,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"KumChaiYin"},"content":"import java.time.YearMonth;","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"KumChaiYin"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"KumChaiYin"},"content":"/**","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"KumChaiYin"},"content":" * Represents a month in a Year in the format MM-yyyy.","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"KumChaiYin"},"content":" */","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"KumChaiYin"},"content":"public class DeleteMonth {","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"KumChaiYin"},"content":"    public static final String VALIDATION_MONTH_FORMAT \u003d \"MM-yyyy\";","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"cyaoxuan"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Delete month should be in the format \" + VALIDATION_MONTH_FORMAT;","lastModifiedDate":"2023-11-12"},{"lineNumber":16,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"KumChaiYin"},"content":"    public final YearMonth month;","lastModifiedDate":"2023-10-25"},{"lineNumber":18,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"KumChaiYin"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"KumChaiYin"},"content":"     * Constructs a {@code DeleteMonth}.","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"KumChaiYin"},"content":"     *","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"KumChaiYin"},"content":"     * @param deleteMonth A valid month with year.","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"KumChaiYin"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"KumChaiYin"},"content":"    public DeleteMonth(String deleteMonth) {","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"KumChaiYin"},"content":"        requireNonNull(deleteMonth);","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"KumChaiYin"},"content":"        checkArgument(isValidDeleteMonth(deleteMonth), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-25"},{"lineNumber":27,"author":{"gitId":"KumChaiYin"},"content":"        this.month \u003d YearMonth.parse(deleteMonth, DateTimeFormatter.ofPattern(VALIDATION_MONTH_FORMAT));","lastModifiedDate":"2023-10-25"},{"lineNumber":28,"author":{"gitId":"KumChaiYin"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":30,"author":{"gitId":"KumChaiYin"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":31,"author":{"gitId":"KumChaiYin"},"content":"     * Returns true if a given string is a valid date in the format MM-yyyy.","lastModifiedDate":"2023-10-25"},{"lineNumber":32,"author":{"gitId":"KumChaiYin"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":33,"author":{"gitId":"KumChaiYin"},"content":"    public static boolean isValidDeleteMonth(String test) {","lastModifiedDate":"2023-10-25"},{"lineNumber":34,"author":{"gitId":"KumChaiYin"},"content":"        String regex \u003d \"^(0[1-9]|1[0-2])-(\\\\d{4})$\"; // MM-yyyy format","lastModifiedDate":"2023-10-25"},{"lineNumber":35,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":36,"author":{"gitId":"KumChaiYin"},"content":"        if (test.matches(regex)) {","lastModifiedDate":"2023-10-25"},{"lineNumber":37,"author":{"gitId":"KumChaiYin"},"content":"            return true;","lastModifiedDate":"2023-10-25"},{"lineNumber":38,"author":{"gitId":"KumChaiYin"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":39,"author":{"gitId":"KumChaiYin"},"content":"        return false;","lastModifiedDate":"2023-10-25"},{"lineNumber":40,"author":{"gitId":"KumChaiYin"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":41,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":42,"author":{"gitId":"KumChaiYin"},"content":"    public int getYear() {","lastModifiedDate":"2023-10-25"},{"lineNumber":43,"author":{"gitId":"KumChaiYin"},"content":"        return month.getYear();","lastModifiedDate":"2023-10-25"},{"lineNumber":44,"author":{"gitId":"KumChaiYin"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":45,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":46,"author":{"gitId":"KumChaiYin"},"content":"    public int getMonth() {","lastModifiedDate":"2023-10-25"},{"lineNumber":47,"author":{"gitId":"KumChaiYin"},"content":"        return month.getMonthValue();","lastModifiedDate":"2023-10-25"},{"lineNumber":48,"author":{"gitId":"KumChaiYin"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":49,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":50,"author":{"gitId":"KumChaiYin"},"content":"    @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":51,"author":{"gitId":"KumChaiYin"},"content":"    public String toString() {","lastModifiedDate":"2023-10-25"},{"lineNumber":52,"author":{"gitId":"KumChaiYin"},"content":"        return month.format(DateTimeFormatter.ofPattern(VALIDATION_MONTH_FORMAT));","lastModifiedDate":"2023-10-25"},{"lineNumber":53,"author":{"gitId":"KumChaiYin"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":54,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":55,"author":{"gitId":"KumChaiYin"},"content":"    @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":56,"author":{"gitId":"KumChaiYin"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-25"},{"lineNumber":57,"author":{"gitId":"KumChaiYin"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-25"},{"lineNumber":58,"author":{"gitId":"KumChaiYin"},"content":"            return true;","lastModifiedDate":"2023-10-25"},{"lineNumber":59,"author":{"gitId":"KumChaiYin"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":60,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":61,"author":{"gitId":"KumChaiYin"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-25"},{"lineNumber":62,"author":{"gitId":"KumChaiYin"},"content":"        if (!(other instanceof DeleteMonth)) {","lastModifiedDate":"2023-10-25"},{"lineNumber":63,"author":{"gitId":"KumChaiYin"},"content":"            return false;","lastModifiedDate":"2023-10-25"},{"lineNumber":64,"author":{"gitId":"KumChaiYin"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":65,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":66,"author":{"gitId":"KumChaiYin"},"content":"        DeleteMonth otherDeleteMonth \u003d (DeleteMonth) other;","lastModifiedDate":"2023-10-25"},{"lineNumber":67,"author":{"gitId":"KumChaiYin"},"content":"        return month.equals(otherDeleteMonth.month);","lastModifiedDate":"2023-10-25"},{"lineNumber":68,"author":{"gitId":"KumChaiYin"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":69,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":70,"author":{"gitId":"KumChaiYin"},"content":"    @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":71,"author":{"gitId":"KumChaiYin"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-25"},{"lineNumber":72,"author":{"gitId":"KumChaiYin"},"content":"        return month.hashCode();","lastModifiedDate":"2023-10-25"},{"lineNumber":73,"author":{"gitId":"KumChaiYin"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":74,"author":{"gitId":"KumChaiYin"},"content":"}","lastModifiedDate":"2023-10-25"}],"authorContributionMap":{"KumChaiYin":73,"cyaoxuan":1}},{"path":"src/main/java/seedu/address/model/person/Address.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s address in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidAddress(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Address {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Addresses can take any values, and it should not be blank\";","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @param address A valid address.","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public Address(String address) {","lastModifiedDate":"2017-05-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        checkArgument(isValidAddress(address), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        value \u003d address;","lastModifiedDate":"2018-08-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"cyaoxuan"},"content":"     * Returns true if a given string is a valid address.","lastModifiedDate":"2023-10-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static boolean isValidAddress(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (!(other instanceof Address)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        Address otherAddress \u003d (Address) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return value.equals(otherAddress.value);","lastModifiedDate":"2023-07-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":64,"cyaoxuan":1}},{"path":"src/main/java/seedu/address/model/person/LicencePlate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cyaoxuan"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-11"},{"lineNumber":2,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":3,"author":{"gitId":"cyaoxuan"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-11"},{"lineNumber":4,"author":{"gitId":"cyaoxuan"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-10-11"},{"lineNumber":5,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":6,"author":{"gitId":"cyaoxuan"},"content":"/**","lastModifiedDate":"2023-10-11"},{"lineNumber":7,"author":{"gitId":"cyaoxuan"},"content":" * Represents a Person\u0027s car licence plate in the address book.","lastModifiedDate":"2023-10-11"},{"lineNumber":8,"author":{"gitId":"cyaoxuan"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidLicencePlate(String)}","lastModifiedDate":"2023-10-11"},{"lineNumber":9,"author":{"gitId":"cyaoxuan"},"content":" */","lastModifiedDate":"2023-10-11"},{"lineNumber":10,"author":{"gitId":"cyaoxuan"},"content":"public class LicencePlate {","lastModifiedDate":"2023-10-11"},{"lineNumber":11,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":12,"author":{"gitId":"cyaoxuan"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"cyaoxuan"},"content":"            \"Licence plates should be in the format Sxx####y which follows the following constraints:\\n\"","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"cyaoxuan"},"content":"            + \"1. S - starts with the letter S, which stands for private vehicle\\n\"","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"cyaoxuan"},"content":"            + \"2. x - Alphabetical series (all except \u0027I\u0027 and \u0027O\u0027)\\n\"","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"suryanshkushwaha"},"content":"            + \"3. #### - Numerical series (from 1 to 9999, without leading zeroes)\\n\"","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"suryanshkushwaha"},"content":"            + \"4. y - Checksum letter (all except \u0027F\u0027, \u0027I\u0027, \u0027N\u0027, \u0027O\u0027, \u0027Q\u0027, \u0027V\u0027 and \u0027W\u0027\";","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":19,"author":{"gitId":"cyaoxuan"},"content":"    /*","lastModifiedDate":"2023-10-11"},{"lineNumber":20,"author":{"gitId":"cyaoxuan"},"content":"     * Should be an alphanumeric string satisfying the above constraints","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"cyaoxuan"},"content":"     */","lastModifiedDate":"2023-10-11"},{"lineNumber":22,"author":{"gitId":"cyaoxuan"},"content":"    public static final String VALIDATION_REGEX \u003d \"^S[^IO]{2}\\\\d{1,4}[A-EGHJKLMPRSTUXYZ]$\";","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":24,"author":{"gitId":"cyaoxuan"},"content":"    public final String value;","lastModifiedDate":"2023-10-11"},{"lineNumber":25,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":26,"author":{"gitId":"cyaoxuan"},"content":"    /**","lastModifiedDate":"2023-10-11"},{"lineNumber":27,"author":{"gitId":"cyaoxuan"},"content":"     * Constructs a {@code LicencePlate}.","lastModifiedDate":"2023-10-11"},{"lineNumber":28,"author":{"gitId":"cyaoxuan"},"content":"     *","lastModifiedDate":"2023-10-11"},{"lineNumber":29,"author":{"gitId":"cyaoxuan"},"content":"     * @param licencePlate A valid licence plate.","lastModifiedDate":"2023-10-11"},{"lineNumber":30,"author":{"gitId":"cyaoxuan"},"content":"     */","lastModifiedDate":"2023-10-11"},{"lineNumber":31,"author":{"gitId":"cyaoxuan"},"content":"    public LicencePlate(String licencePlate) {","lastModifiedDate":"2023-10-11"},{"lineNumber":32,"author":{"gitId":"cyaoxuan"},"content":"        requireNonNull(licencePlate);","lastModifiedDate":"2023-10-11"},{"lineNumber":33,"author":{"gitId":"cyaoxuan"},"content":"        checkArgument(isValidLicencePlate(licencePlate), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-11"},{"lineNumber":34,"author":{"gitId":"cyaoxuan"},"content":"        value \u003d licencePlate.toUpperCase();","lastModifiedDate":"2023-11-11"},{"lineNumber":35,"author":{"gitId":"cyaoxuan"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":36,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":37,"author":{"gitId":"cyaoxuan"},"content":"    /**","lastModifiedDate":"2023-10-11"},{"lineNumber":38,"author":{"gitId":"cyaoxuan"},"content":"     * Returns true if a given string is a valid licence plate.","lastModifiedDate":"2023-10-11"},{"lineNumber":39,"author":{"gitId":"cyaoxuan"},"content":"     */","lastModifiedDate":"2023-10-11"},{"lineNumber":40,"author":{"gitId":"cyaoxuan"},"content":"    public static boolean isValidLicencePlate(String test) {","lastModifiedDate":"2023-10-11"},{"lineNumber":41,"author":{"gitId":"cyaoxuan"},"content":"        return test.toUpperCase().matches(VALIDATION_REGEX);","lastModifiedDate":"2023-11-11"},{"lineNumber":42,"author":{"gitId":"cyaoxuan"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":43,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":44,"author":{"gitId":"cyaoxuan"},"content":"    @Override","lastModifiedDate":"2023-10-11"},{"lineNumber":45,"author":{"gitId":"cyaoxuan"},"content":"    public String toString() {","lastModifiedDate":"2023-10-11"},{"lineNumber":46,"author":{"gitId":"cyaoxuan"},"content":"        return value;","lastModifiedDate":"2023-10-11"},{"lineNumber":47,"author":{"gitId":"cyaoxuan"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":48,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":49,"author":{"gitId":"cyaoxuan"},"content":"    @Override","lastModifiedDate":"2023-10-11"},{"lineNumber":50,"author":{"gitId":"cyaoxuan"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-11"},{"lineNumber":51,"author":{"gitId":"cyaoxuan"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-11"},{"lineNumber":52,"author":{"gitId":"cyaoxuan"},"content":"            return true;","lastModifiedDate":"2023-10-11"},{"lineNumber":53,"author":{"gitId":"cyaoxuan"},"content":"        }","lastModifiedDate":"2023-10-11"},{"lineNumber":54,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":55,"author":{"gitId":"cyaoxuan"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-11"},{"lineNumber":56,"author":{"gitId":"cyaoxuan"},"content":"        if (!(other instanceof LicencePlate)) {","lastModifiedDate":"2023-10-11"},{"lineNumber":57,"author":{"gitId":"cyaoxuan"},"content":"            return false;","lastModifiedDate":"2023-10-11"},{"lineNumber":58,"author":{"gitId":"cyaoxuan"},"content":"        }","lastModifiedDate":"2023-10-11"},{"lineNumber":59,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":60,"author":{"gitId":"cyaoxuan"},"content":"        LicencePlate otherLicencePlate \u003d (LicencePlate) other;","lastModifiedDate":"2023-10-11"},{"lineNumber":61,"author":{"gitId":"cyaoxuan"},"content":"        return value.equals(otherLicencePlate.value);","lastModifiedDate":"2023-10-11"},{"lineNumber":62,"author":{"gitId":"cyaoxuan"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":63,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":64,"author":{"gitId":"cyaoxuan"},"content":"    @Override","lastModifiedDate":"2023-10-11"},{"lineNumber":65,"author":{"gitId":"cyaoxuan"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-11"},{"lineNumber":66,"author":{"gitId":"cyaoxuan"},"content":"        return value.hashCode();","lastModifiedDate":"2023-10-11"},{"lineNumber":67,"author":{"gitId":"cyaoxuan"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":68,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":69,"author":{"gitId":"cyaoxuan"},"content":"}","lastModifiedDate":"2023-10-11"}],"authorContributionMap":{"suryanshkushwaha":2,"cyaoxuan":67}},{"path":"src/main/java/seedu/address/model/person/Nric.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cyaoxuan"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-11"},{"lineNumber":2,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":3,"author":{"gitId":"cyaoxuan"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-11"},{"lineNumber":4,"author":{"gitId":"cyaoxuan"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-10-11"},{"lineNumber":5,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":6,"author":{"gitId":"cyaoxuan"},"content":"/**","lastModifiedDate":"2023-10-11"},{"lineNumber":7,"author":{"gitId":"cyaoxuan"},"content":" * Represents a Person\u0027s NRIC (last 4 digits only) in the address book.","lastModifiedDate":"2023-10-11"},{"lineNumber":8,"author":{"gitId":"cyaoxuan"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidNric(String)}","lastModifiedDate":"2023-10-11"},{"lineNumber":9,"author":{"gitId":"cyaoxuan"},"content":" */","lastModifiedDate":"2023-10-11"},{"lineNumber":10,"author":{"gitId":"cyaoxuan"},"content":"public class Nric {","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":12,"author":{"gitId":"cyaoxuan"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"NRIC should be the last 3 numbers + 1 letter of your NRIC\";","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":14,"author":{"gitId":"cyaoxuan"},"content":"    /*","lastModifiedDate":"2023-10-11"},{"lineNumber":15,"author":{"gitId":"cyaoxuan"},"content":"     * Should be an alphanumeric string with 4 characters, with the first 3","lastModifiedDate":"2023-10-11"},{"lineNumber":16,"author":{"gitId":"cyaoxuan"},"content":"     * being numbers and the last being a letter.","lastModifiedDate":"2023-10-11"},{"lineNumber":17,"author":{"gitId":"cyaoxuan"},"content":"     */","lastModifiedDate":"2023-10-11"},{"lineNumber":18,"author":{"gitId":"suryanshkushwaha"},"content":"    public static final String VALIDATION_REGEX \u003d \"^\\\\d{3}[A-Za-z]$\";","lastModifiedDate":"2023-11-09"},{"lineNumber":19,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":20,"author":{"gitId":"cyaoxuan"},"content":"    public final String value;","lastModifiedDate":"2023-10-11"},{"lineNumber":21,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":22,"author":{"gitId":"cyaoxuan"},"content":"    /**","lastModifiedDate":"2023-10-11"},{"lineNumber":23,"author":{"gitId":"cyaoxuan"},"content":"     * Constructs a {@code NRIC}.","lastModifiedDate":"2023-10-11"},{"lineNumber":24,"author":{"gitId":"cyaoxuan"},"content":"     *","lastModifiedDate":"2023-10-11"},{"lineNumber":25,"author":{"gitId":"cyaoxuan"},"content":"     * @param nric A valid NRIC.","lastModifiedDate":"2023-10-11"},{"lineNumber":26,"author":{"gitId":"cyaoxuan"},"content":"     */","lastModifiedDate":"2023-10-11"},{"lineNumber":27,"author":{"gitId":"cyaoxuan"},"content":"    public Nric(String nric) {","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"cyaoxuan"},"content":"        requireNonNull(nric);","lastModifiedDate":"2023-10-11"},{"lineNumber":29,"author":{"gitId":"cyaoxuan"},"content":"        checkArgument(isValidNric(nric), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-11"},{"lineNumber":30,"author":{"gitId":"suryanshkushwaha"},"content":"        value \u003d nric.toUpperCase();","lastModifiedDate":"2023-11-09"},{"lineNumber":31,"author":{"gitId":"cyaoxuan"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":32,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":33,"author":{"gitId":"cyaoxuan"},"content":"    /**","lastModifiedDate":"2023-10-11"},{"lineNumber":34,"author":{"gitId":"cyaoxuan"},"content":"     * Returns true if a given string is a valid NRIC.","lastModifiedDate":"2023-10-11"},{"lineNumber":35,"author":{"gitId":"cyaoxuan"},"content":"     */","lastModifiedDate":"2023-10-11"},{"lineNumber":36,"author":{"gitId":"cyaoxuan"},"content":"    public static boolean isValidNric(String test) {","lastModifiedDate":"2023-10-11"},{"lineNumber":37,"author":{"gitId":"cyaoxuan"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-10-11"},{"lineNumber":38,"author":{"gitId":"cyaoxuan"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":39,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":40,"author":{"gitId":"cyaoxuan"},"content":"    @Override","lastModifiedDate":"2023-10-11"},{"lineNumber":41,"author":{"gitId":"cyaoxuan"},"content":"    public String toString() {","lastModifiedDate":"2023-10-11"},{"lineNumber":42,"author":{"gitId":"cyaoxuan"},"content":"        return value;","lastModifiedDate":"2023-10-11"},{"lineNumber":43,"author":{"gitId":"cyaoxuan"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":44,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":45,"author":{"gitId":"cyaoxuan"},"content":"    @Override","lastModifiedDate":"2023-10-11"},{"lineNumber":46,"author":{"gitId":"cyaoxuan"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-11"},{"lineNumber":47,"author":{"gitId":"cyaoxuan"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-11"},{"lineNumber":48,"author":{"gitId":"cyaoxuan"},"content":"            return true;","lastModifiedDate":"2023-10-11"},{"lineNumber":49,"author":{"gitId":"cyaoxuan"},"content":"        }","lastModifiedDate":"2023-10-11"},{"lineNumber":50,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":51,"author":{"gitId":"cyaoxuan"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-11"},{"lineNumber":52,"author":{"gitId":"cyaoxuan"},"content":"        if (!(other instanceof Nric)) {","lastModifiedDate":"2023-10-13"},{"lineNumber":53,"author":{"gitId":"cyaoxuan"},"content":"            return false;","lastModifiedDate":"2023-10-11"},{"lineNumber":54,"author":{"gitId":"cyaoxuan"},"content":"        }","lastModifiedDate":"2023-10-11"},{"lineNumber":55,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":56,"author":{"gitId":"cyaoxuan"},"content":"        Nric otherNric \u003d (Nric) other;","lastModifiedDate":"2023-10-13"},{"lineNumber":57,"author":{"gitId":"cyaoxuan"},"content":"        return value.equals(otherNric.value);","lastModifiedDate":"2023-10-11"},{"lineNumber":58,"author":{"gitId":"cyaoxuan"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":59,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":60,"author":{"gitId":"cyaoxuan"},"content":"    @Override","lastModifiedDate":"2023-10-11"},{"lineNumber":61,"author":{"gitId":"cyaoxuan"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-11"},{"lineNumber":62,"author":{"gitId":"cyaoxuan"},"content":"        return value.hashCode();","lastModifiedDate":"2023-10-11"},{"lineNumber":63,"author":{"gitId":"cyaoxuan"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":64,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":65,"author":{"gitId":"cyaoxuan"},"content":"}","lastModifiedDate":"2023-10-11"}],"authorContributionMap":{"suryanshkushwaha":2,"cyaoxuan":63}},{"path":"src/main/java/seedu/address/model/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":11,"author":{"gitId":"cyaoxuan"},"content":"import seedu.address.model.policy.Policy;","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Represents a Person in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class Person {","lastModifiedDate":"2018-01-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final Address address;","lastModifiedDate":"2018-04-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":28,"author":{"gitId":"cyaoxuan"},"content":"    private final Nric nric;","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"cyaoxuan"},"content":"    private final LicencePlate licencePlate;","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"cyaoxuan"},"content":"    private final Policy policy;","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"cyaoxuan"},"content":"    private final Remark remark;","lastModifiedDate":"2023-09-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"cyaoxuan"},"content":"     * In the case of leads with null policy fields, default values will be put in place by the respective classes.","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"cyaoxuan"},"content":"    public Person(Name name, Phone phone, Email email, Address address, Set\u003cTag\u003e tags, Nric nric,","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"cyaoxuan"},"content":"                  LicencePlate licencePlate, Remark remark, Policy policy) {","lastModifiedDate":"2023-11-01"},{"lineNumber":38,"author":{"gitId":"cyaoxuan"},"content":"        requireAllNonNull(name, phone, email, nric, licencePlate, address, tags, remark, policy);","lastModifiedDate":"2023-11-01"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2017-12-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":44,"author":{"gitId":"cyaoxuan"},"content":"        this.nric \u003d nric;","lastModifiedDate":"2023-10-13"},{"lineNumber":45,"author":{"gitId":"cyaoxuan"},"content":"        this.licencePlate \u003d licencePlate;","lastModifiedDate":"2023-10-13"},{"lineNumber":46,"author":{"gitId":"cyaoxuan"},"content":"        this.policy \u003d policy;","lastModifiedDate":"2023-10-13"},{"lineNumber":47,"author":{"gitId":"cyaoxuan"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2023-09-28"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public Address getAddress() {","lastModifiedDate":"2017-07-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return address;","lastModifiedDate":"2017-12-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2017-03-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":74,"author":{"gitId":"cyaoxuan"},"content":"    public Nric getNric() {","lastModifiedDate":"2023-10-13"},{"lineNumber":75,"author":{"gitId":"cyaoxuan"},"content":"        return nric;","lastModifiedDate":"2023-10-13"},{"lineNumber":76,"author":{"gitId":"cyaoxuan"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":77,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":78,"author":{"gitId":"cyaoxuan"},"content":"    public LicencePlate getLicencePlate() {","lastModifiedDate":"2023-10-13"},{"lineNumber":79,"author":{"gitId":"cyaoxuan"},"content":"        return licencePlate;","lastModifiedDate":"2023-10-13"},{"lineNumber":80,"author":{"gitId":"cyaoxuan"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":81,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":82,"author":{"gitId":"cyaoxuan"},"content":"    public Policy getPolicy() {","lastModifiedDate":"2023-10-13"},{"lineNumber":83,"author":{"gitId":"cyaoxuan"},"content":"        return policy;","lastModifiedDate":"2023-10-13"},{"lineNumber":84,"author":{"gitId":"cyaoxuan"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":85,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-11-08"},{"lineNumber":87,"author":{"gitId":"KumChaiYin"},"content":"     * Compares the policy issue date to the policy expiry date to see which comes first.","lastModifiedDate":"2023-11-13"},{"lineNumber":88,"author":{"gitId":"RSXIX"},"content":"     * Returns more than 0 if expiry date is later and less than 0 otherwise","lastModifiedDate":"2023-11-08"},{"lineNumber":89,"author":{"gitId":"RSXIX"},"content":"     * @return int","lastModifiedDate":"2023-11-08"},{"lineNumber":90,"author":{"gitId":"RSXIX"},"content":"     */","lastModifiedDate":"2023-11-08"},{"lineNumber":91,"author":{"gitId":"RSXIX"},"content":"    public int comparePolicyDates() {","lastModifiedDate":"2023-11-08"},{"lineNumber":92,"author":{"gitId":"RSXIX"},"content":"        return this.policy.compareDates();","lastModifiedDate":"2023-11-09"},{"lineNumber":93,"author":{"gitId":"RSXIX"},"content":"    }","lastModifiedDate":"2023-11-08"},{"lineNumber":94,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":95,"author":{"gitId":"cyaoxuan"},"content":"    public Remark getRemark() {","lastModifiedDate":"2023-09-28"},{"lineNumber":96,"author":{"gitId":"cyaoxuan"},"content":"        return remark;","lastModifiedDate":"2023-09-28"},{"lineNumber":97,"author":{"gitId":"cyaoxuan"},"content":"    }","lastModifiedDate":"2023-09-28"},{"lineNumber":98,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":100,"author":{"gitId":"RSXIX"},"content":"     * Returns true if both persons have the same attributes.","lastModifiedDate":"2023-10-22"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public boolean isSamePerson(Person otherPerson) {","lastModifiedDate":"2018-04-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        if (otherPerson \u003d\u003d this) {","lastModifiedDate":"2018-04-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        return otherPerson !\u003d null","lastModifiedDate":"2018-04-19"},{"lineNumber":109,"author":{"gitId":"RSXIX"},"content":"                \u0026\u0026 otherPerson.getName().equals(getName())","lastModifiedDate":"2023-10-22"},{"lineNumber":110,"author":{"gitId":"RSXIX"},"content":"                \u0026\u0026 otherPerson.getAddress().equals(getAddress())","lastModifiedDate":"2023-10-22"},{"lineNumber":111,"author":{"gitId":"RSXIX"},"content":"                \u0026\u0026 otherPerson.getPhone().equals(getPhone())","lastModifiedDate":"2023-10-22"},{"lineNumber":112,"author":{"gitId":"RSXIX"},"content":"                \u0026\u0026 otherPerson.getNric().equals(getNric())","lastModifiedDate":"2023-10-22"},{"lineNumber":113,"author":{"gitId":"RSXIX"},"content":"                \u0026\u0026 otherPerson.getLicencePlate().equals(getLicencePlate())","lastModifiedDate":"2023-10-22"},{"lineNumber":114,"author":{"gitId":"RSXIX"},"content":"                \u0026\u0026 otherPerson.getEmail().equals(getEmail());","lastModifiedDate":"2023-10-22"},{"lineNumber":115,"author":{"gitId":"RSXIX"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":116,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":117,"author":{"gitId":"RSXIX"},"content":"    /**","lastModifiedDate":"2023-11-01"},{"lineNumber":118,"author":{"gitId":"RSXIX"},"content":"     * Returns true if the specified person has the default policy parameters","lastModifiedDate":"2023-11-01"},{"lineNumber":119,"author":{"gitId":"RSXIX"},"content":"     */","lastModifiedDate":"2023-11-01"},{"lineNumber":120,"author":{"gitId":"RSXIX"},"content":"    public boolean hasDefaultPolicy() {","lastModifiedDate":"2023-11-01"},{"lineNumber":121,"author":{"gitId":"RSXIX"},"content":"        return this.policy.isDefaultPolicyProfile();","lastModifiedDate":"2023-11-09"},{"lineNumber":122,"author":{"gitId":"RSXIX"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":123,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":124,"author":{"gitId":"RSXIX"},"content":"    /**","lastModifiedDate":"2023-11-01"},{"lineNumber":125,"author":{"gitId":"RSXIX"},"content":"     * Returns true if the specified person has any policy parameters equal to the default","lastModifiedDate":"2023-11-01"},{"lineNumber":126,"author":{"gitId":"RSXIX"},"content":"     */","lastModifiedDate":"2023-11-01"},{"lineNumber":127,"author":{"gitId":"RSXIX"},"content":"    public boolean hasAnyDefaultPolicyParameters() {","lastModifiedDate":"2023-11-01"},{"lineNumber":128,"author":{"gitId":"RSXIX"},"content":"        return this.policy.hasDefaultParameter();","lastModifiedDate":"2023-11-09"},{"lineNumber":129,"author":{"gitId":"RSXIX"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":130,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":131,"author":{"gitId":"RSXIX"},"content":"    /**","lastModifiedDate":"2023-10-22"},{"lineNumber":132,"author":{"gitId":"RSXIX"},"content":"     * Returns true if both persons have the same policy number","lastModifiedDate":"2023-10-22"},{"lineNumber":133,"author":{"gitId":"RSXIX"},"content":"     */","lastModifiedDate":"2023-10-22"},{"lineNumber":134,"author":{"gitId":"RSXIX"},"content":"    public boolean comparePolicyNumber(Person otherPerson) {","lastModifiedDate":"2023-10-22"},{"lineNumber":135,"author":{"gitId":"RSXIX"},"content":"        return this.policy.hasSamePolicyNumber(otherPerson.policy);","lastModifiedDate":"2023-11-09"},{"lineNumber":136,"author":{"gitId":"RSXIX"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":137,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":138,"author":{"gitId":"RSXIX"},"content":"    /**","lastModifiedDate":"2023-11-09"},{"lineNumber":139,"author":{"gitId":"RSXIX"},"content":"     * Returns true if the person has the default company parameter","lastModifiedDate":"2023-11-09"},{"lineNumber":140,"author":{"gitId":"RSXIX"},"content":"     */","lastModifiedDate":"2023-11-09"},{"lineNumber":141,"author":{"gitId":"RSXIX"},"content":"    public boolean hasDefaultCompanyPolicyParameter() {","lastModifiedDate":"2023-11-09"},{"lineNumber":142,"author":{"gitId":"RSXIX"},"content":"        return this.policy.hasDefaultCompanyParameter();","lastModifiedDate":"2023-11-09"},{"lineNumber":143,"author":{"gitId":"RSXIX"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":144,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":145,"author":{"gitId":"RSXIX"},"content":"    /**","lastModifiedDate":"2023-11-09"},{"lineNumber":146,"author":{"gitId":"RSXIX"},"content":"     * Returns true if the person has the default policy issue date parameter","lastModifiedDate":"2023-11-09"},{"lineNumber":147,"author":{"gitId":"RSXIX"},"content":"     */","lastModifiedDate":"2023-11-09"},{"lineNumber":148,"author":{"gitId":"RSXIX"},"content":"    public boolean hasDefaultPolicyIssueDateParameter() {","lastModifiedDate":"2023-11-09"},{"lineNumber":149,"author":{"gitId":"RSXIX"},"content":"        return this.policy.hasDefaultIssueDateParameter();","lastModifiedDate":"2023-11-09"},{"lineNumber":150,"author":{"gitId":"RSXIX"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":151,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":152,"author":{"gitId":"RSXIX"},"content":"    /**","lastModifiedDate":"2023-11-09"},{"lineNumber":153,"author":{"gitId":"RSXIX"},"content":"     * Returns true if the person has the default policy expiry date parameter","lastModifiedDate":"2023-11-09"},{"lineNumber":154,"author":{"gitId":"RSXIX"},"content":"     */","lastModifiedDate":"2023-11-09"},{"lineNumber":155,"author":{"gitId":"RSXIX"},"content":"    public boolean hasDefaultPolicyExpiryDateParameter() {","lastModifiedDate":"2023-11-09"},{"lineNumber":156,"author":{"gitId":"RSXIX"},"content":"        return this.policy.hasDefaultExpiryDateParameter();","lastModifiedDate":"2023-11-09"},{"lineNumber":157,"author":{"gitId":"RSXIX"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":158,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":159,"author":{"gitId":"RSXIX"},"content":"    /**","lastModifiedDate":"2023-11-09"},{"lineNumber":160,"author":{"gitId":"RSXIX"},"content":"     * Returns true if the person has the default policy number parameter","lastModifiedDate":"2023-11-09"},{"lineNumber":161,"author":{"gitId":"RSXIX"},"content":"     */","lastModifiedDate":"2023-11-09"},{"lineNumber":162,"author":{"gitId":"RSXIX"},"content":"    public boolean hasDefaultPolicyNumberParameter() {","lastModifiedDate":"2023-11-09"},{"lineNumber":163,"author":{"gitId":"RSXIX"},"content":"        return this.policy.hasDefaultNumberParameter();","lastModifiedDate":"2023-11-09"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":166,"author":{"gitId":"RSXIX"},"content":"    /**","lastModifiedDate":"2023-11-12"},{"lineNumber":167,"author":{"gitId":"RSXIX"},"content":"     * Returns a person with the same non policy attributes but default policy attributes","lastModifiedDate":"2023-11-12"},{"lineNumber":168,"author":{"gitId":"RSXIX"},"content":"     */","lastModifiedDate":"2023-11-12"},{"lineNumber":169,"author":{"gitId":"RSXIX"},"content":"    public Person cloneWithoutPolicy() {","lastModifiedDate":"2023-11-12"},{"lineNumber":170,"author":{"gitId":"RSXIX"},"content":"        Policy newDefaultPolicy \u003d Policy.createNewDefaultPolicy();","lastModifiedDate":"2023-11-12"},{"lineNumber":171,"author":{"gitId":"RSXIX"},"content":"        return new Person(name, phone, email, address, tags, nric, licencePlate, remark, newDefaultPolicy);","lastModifiedDate":"2023-11-12"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-11-12"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":175,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2018-04-19"},{"lineNumber":176,"author":{"gitId":"-"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":177,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":181,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        if (!(other instanceof Person)) {","lastModifiedDate":"2018-01-10"},{"lineNumber":186,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        Person otherPerson \u003d (Person) other;","lastModifiedDate":"2018-01-10"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        return name.equals(otherPerson.name)","lastModifiedDate":"2023-07-13"},{"lineNumber":191,"author":{"gitId":"-"},"content":"                \u0026\u0026 phone.equals(otherPerson.phone)","lastModifiedDate":"2023-07-13"},{"lineNumber":192,"author":{"gitId":"-"},"content":"                \u0026\u0026 email.equals(otherPerson.email)","lastModifiedDate":"2023-07-13"},{"lineNumber":193,"author":{"gitId":"-"},"content":"                \u0026\u0026 address.equals(otherPerson.address)","lastModifiedDate":"2023-07-13"},{"lineNumber":194,"author":{"gitId":"cyaoxuan"},"content":"                \u0026\u0026 tags.equals(otherPerson.tags)","lastModifiedDate":"2023-10-13"},{"lineNumber":195,"author":{"gitId":"cyaoxuan"},"content":"                \u0026\u0026 nric.equals(otherPerson.nric)","lastModifiedDate":"2023-10-13"},{"lineNumber":196,"author":{"gitId":"cyaoxuan"},"content":"                \u0026\u0026 licencePlate.equals(otherPerson.licencePlate)","lastModifiedDate":"2023-10-13"},{"lineNumber":197,"author":{"gitId":"cyaoxuan"},"content":"                \u0026\u0026 policy.equals(otherPerson.policy)","lastModifiedDate":"2023-11-01"},{"lineNumber":198,"author":{"gitId":"cyaoxuan"},"content":"                \u0026\u0026 remark.equals(otherPerson.remark);","lastModifiedDate":"2023-09-28"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":204,"author":{"gitId":"cyaoxuan"},"content":"        return Objects.hash(name, phone, email, address, tags, nric, licencePlate, remark, policy);","lastModifiedDate":"2023-11-01"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"                .add(\"name\", name)","lastModifiedDate":"2019-02-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"                .add(\"phone\", phone)","lastModifiedDate":"2019-02-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"                .add(\"email\", email)","lastModifiedDate":"2019-02-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"                .add(\"address\", address)","lastModifiedDate":"2019-02-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"                .add(\"tags\", tags)","lastModifiedDate":"2019-02-23"},{"lineNumber":215,"author":{"gitId":"cyaoxuan"},"content":"                .add(\"nric\", nric)","lastModifiedDate":"2023-10-13"},{"lineNumber":216,"author":{"gitId":"cyaoxuan"},"content":"                .add(\"licence plate\", licencePlate)","lastModifiedDate":"2023-10-13"},{"lineNumber":217,"author":{"gitId":"cyaoxuan"},"content":"                .add(\"remark\", remark)","lastModifiedDate":"2023-09-28"},{"lineNumber":218,"author":{"gitId":"cyaoxuan"},"content":"                .add(\"policy\", policy)","lastModifiedDate":"2023-10-13"},{"lineNumber":219,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":222,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"RSXIX":69,"KumChaiYin":1,"-":113,"cyaoxuan":39}},{"path":"src/main/java/seedu/address/model/person/Phone.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s phone number in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidPhone(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Phone {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"cyaoxuan"},"content":"            \"Phone numbers should only contain numbers, and it should exactly 8 digits long\";","lastModifiedDate":"2023-11-06"},{"lineNumber":15,"author":{"gitId":"cyaoxuan"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d{8}\";","lastModifiedDate":"2023-11-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Constructs a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @param phone A valid phone number.","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public Phone(String phone) {","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        checkArgument(isValidPhone(phone), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        value \u003d phone;","lastModifiedDate":"2018-08-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid phone number.","lastModifiedDate":"2018-04-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static boolean isValidPhone(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (!(other instanceof Phone)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Phone otherPhone \u003d (Phone) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return value.equals(otherPhone.value);","lastModifiedDate":"2023-07-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":59,"cyaoxuan":2}},{"path":"src/main/java/seedu/address/model/person/Remark.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cyaoxuan"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-09-28"},{"lineNumber":2,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":3,"author":{"gitId":"cyaoxuan"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-09-28"},{"lineNumber":4,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":5,"author":{"gitId":"cyaoxuan"},"content":"/**","lastModifiedDate":"2023-09-28"},{"lineNumber":6,"author":{"gitId":"cyaoxuan"},"content":" * Represents a Person\u0027s remark in the address book.","lastModifiedDate":"2023-09-28"},{"lineNumber":7,"author":{"gitId":"cyaoxuan"},"content":" * Guarantees: immutable; is always valid","lastModifiedDate":"2023-09-28"},{"lineNumber":8,"author":{"gitId":"cyaoxuan"},"content":" */","lastModifiedDate":"2023-09-28"},{"lineNumber":9,"author":{"gitId":"cyaoxuan"},"content":"public class Remark {","lastModifiedDate":"2023-09-28"},{"lineNumber":10,"author":{"gitId":"cyaoxuan"},"content":"    public final String value;","lastModifiedDate":"2023-09-28"},{"lineNumber":11,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":12,"author":{"gitId":"cyaoxuan"},"content":"    /**","lastModifiedDate":"2023-09-28"},{"lineNumber":13,"author":{"gitId":"cyaoxuan"},"content":"     * Constructs a {@code Remark}.","lastModifiedDate":"2023-09-28"},{"lineNumber":14,"author":{"gitId":"cyaoxuan"},"content":"     *","lastModifiedDate":"2023-09-28"},{"lineNumber":15,"author":{"gitId":"cyaoxuan"},"content":"     * @param remark A remark of any format.","lastModifiedDate":"2023-09-28"},{"lineNumber":16,"author":{"gitId":"cyaoxuan"},"content":"     */","lastModifiedDate":"2023-09-28"},{"lineNumber":17,"author":{"gitId":"cyaoxuan"},"content":"    public Remark(String remark) {","lastModifiedDate":"2023-09-28"},{"lineNumber":18,"author":{"gitId":"cyaoxuan"},"content":"        requireNonNull(remark);","lastModifiedDate":"2023-09-28"},{"lineNumber":19,"author":{"gitId":"cyaoxuan"},"content":"        value \u003d remark;","lastModifiedDate":"2023-09-28"},{"lineNumber":20,"author":{"gitId":"cyaoxuan"},"content":"    }","lastModifiedDate":"2023-09-28"},{"lineNumber":21,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":22,"author":{"gitId":"cyaoxuan"},"content":"    @Override","lastModifiedDate":"2023-09-28"},{"lineNumber":23,"author":{"gitId":"cyaoxuan"},"content":"    public String toString() {","lastModifiedDate":"2023-09-28"},{"lineNumber":24,"author":{"gitId":"cyaoxuan"},"content":"        return value;","lastModifiedDate":"2023-09-28"},{"lineNumber":25,"author":{"gitId":"cyaoxuan"},"content":"    }","lastModifiedDate":"2023-09-28"},{"lineNumber":26,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":27,"author":{"gitId":"cyaoxuan"},"content":"    @Override","lastModifiedDate":"2023-09-28"},{"lineNumber":28,"author":{"gitId":"cyaoxuan"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-09-28"},{"lineNumber":29,"author":{"gitId":"cyaoxuan"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-09-28"},{"lineNumber":30,"author":{"gitId":"cyaoxuan"},"content":"                || (other instanceof Remark // instanceof handles nulls","lastModifiedDate":"2023-09-28"},{"lineNumber":31,"author":{"gitId":"cyaoxuan"},"content":"                \u0026\u0026 value.equals(((Remark) other).value)); // state check","lastModifiedDate":"2023-09-28"},{"lineNumber":32,"author":{"gitId":"cyaoxuan"},"content":"    }","lastModifiedDate":"2023-09-28"},{"lineNumber":33,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":34,"author":{"gitId":"cyaoxuan"},"content":"    @Override","lastModifiedDate":"2023-09-28"},{"lineNumber":35,"author":{"gitId":"cyaoxuan"},"content":"    public int hashCode() {","lastModifiedDate":"2023-09-28"},{"lineNumber":36,"author":{"gitId":"cyaoxuan"},"content":"        return value.hashCode();","lastModifiedDate":"2023-09-28"},{"lineNumber":37,"author":{"gitId":"cyaoxuan"},"content":"    }","lastModifiedDate":"2023-09-28"},{"lineNumber":38,"author":{"gitId":"cyaoxuan"},"content":"}","lastModifiedDate":"2023-09-28"}],"authorContributionMap":{"cyaoxuan":38}},{"path":"src/main/java/seedu/address/model/person/UniquePersonList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Iterator;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2017-06-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"RSXIX"},"content":"import seedu.address.model.policy.PolicyExpirationDateComparator;","lastModifiedDate":"2023-10-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * A list of persons that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * A person is considered unique by comparing using {@code Person#isSamePerson(Person)}. As such, adding and updating of","lastModifiedDate":"2018-04-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * persons uses Person#isSamePerson(Person) for equality so as to ensure that the person being added or updated is","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * unique in terms of identity in the UniquePersonList. However, the removal of a person uses Person#equals(Object) so","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * as to ensure that the person with exactly the same fields will be removed.","lastModifiedDate":"2018-04-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * @see Person#isSamePerson(Person)","lastModifiedDate":"2018-04-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class UniquePersonList implements Iterable\u003cPerson\u003e {","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2016-10-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Returns true if the list contains an equivalent person as the given argument.","lastModifiedDate":"2016-09-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public boolean contains(Person toCheck) {","lastModifiedDate":"2018-01-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return internalList.stream().anyMatch(toCheck::isSamePerson);","lastModifiedDate":"2018-04-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"RSXIX"},"content":"    /**","lastModifiedDate":"2023-10-22"},{"lineNumber":41,"author":{"gitId":"RSXIX"},"content":"     * Returns true if the list contains a particular Nric.","lastModifiedDate":"2023-10-22"},{"lineNumber":42,"author":{"gitId":"RSXIX"},"content":"     */","lastModifiedDate":"2023-10-22"},{"lineNumber":43,"author":{"gitId":"RSXIX"},"content":"    public boolean hasSamePolicyNumber(Person toCheck) {","lastModifiedDate":"2023-10-22"},{"lineNumber":44,"author":{"gitId":"RSXIX"},"content":"        return internalList.stream().anyMatch(toCheck::comparePolicyNumber);","lastModifiedDate":"2023-10-22"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Adds a person to the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * The person must not already exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void add(Person toAdd) {","lastModifiedDate":"2018-08-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2017-05-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2018-01-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Replaces the person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2017-06-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2017-06-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2017-06-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        if (!target.isSamePerson(editedPerson) \u0026\u0026 contains(editedPerson)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-12-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        internalList.set(index, editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":79,"author":{"gitId":"RSXIX"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":80,"author":{"gitId":"KumChaiYin"},"content":"     * Sorts the people in the list based off the policy expiry date","lastModifiedDate":"2023-11-13"},{"lineNumber":81,"author":{"gitId":"RSXIX"},"content":"     * Those with no policy are at the end of the list","lastModifiedDate":"2023-10-24"},{"lineNumber":82,"author":{"gitId":"RSXIX"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":83,"author":{"gitId":"RSXIX"},"content":"    public void sort() {","lastModifiedDate":"2023-10-24"},{"lineNumber":84,"author":{"gitId":"RSXIX"},"content":"        FXCollections.sort(internalList, new PolicyExpirationDateComparator());","lastModifiedDate":"2023-10-24"},{"lineNumber":85,"author":{"gitId":"RSXIX"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":86,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Removes the equivalent person from the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * The person must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void remove(Person toRemove) {","lastModifiedDate":"2018-08-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2017-05-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2018-02-28"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2016-08-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public void setPersons(UniquePersonList replacement) {","lastModifiedDate":"2016-10-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2018-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2018-08-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * Replaces the contents of this list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        requireAllNonNull(persons);","lastModifiedDate":"2018-01-10"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        if (!personsAreUnique(persons)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2018-01-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        internalList.setAll(persons);","lastModifiedDate":"2018-08-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-09-01"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2017-09-01"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-09-01"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2018-04-05"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2018-12-09"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public Iterator\u003cPerson\u003e iterator() {","lastModifiedDate":"2016-08-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        return internalList.iterator();","lastModifiedDate":"2016-08-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        if (!(other instanceof UniquePersonList)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        UniquePersonList otherUniquePersonList \u003d (UniquePersonList) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        return internalList.equals(otherUniquePersonList.internalList);","lastModifiedDate":"2023-07-13"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        return internalList.hashCode();","lastModifiedDate":"2016-09-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        return internalList.toString();","lastModifiedDate":"2019-02-24"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-24"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-24"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     * Returns true if {@code persons} contains only unique persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    private boolean personsAreUnique(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-04-19"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c persons.size() - 1; i++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            for (int j \u003d i + 1; j \u003c persons.size(); j++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":159,"author":{"gitId":"-"},"content":"                if (persons.get(i).isSamePerson(persons.get(j))) {","lastModifiedDate":"2018-04-19"},{"lineNumber":160,"author":{"gitId":"-"},"content":"                    return false;","lastModifiedDate":"2018-04-19"},{"lineNumber":161,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2018-04-19"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-04-19"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":166,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"RSXIX":13,"KumChaiYin":1,"-":152}},{"path":"src/main/java/seedu/address/model/person/predicates/CompanyContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"brendanneojw"},"content":"package seedu.address.model.person.predicates;","lastModifiedDate":"2023-11-11"},{"lineNumber":2,"author":{"gitId":"suryanshkushwaha"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":3,"author":{"gitId":"suryanshkushwaha"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2023-10-23"},{"lineNumber":4,"author":{"gitId":"brendanneojw"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-11-11"},{"lineNumber":5,"author":{"gitId":"suryanshkushwaha"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":6,"author":{"gitId":"suryanshkushwaha"},"content":"/**","lastModifiedDate":"2023-10-23"},{"lineNumber":7,"author":{"gitId":"suryanshkushwaha"},"content":" * Tests that a {@code Person}\u0027s {@code Company} matches any of the keywords given.","lastModifiedDate":"2023-10-23"},{"lineNumber":8,"author":{"gitId":"suryanshkushwaha"},"content":" */","lastModifiedDate":"2023-10-23"},{"lineNumber":9,"author":{"gitId":"suryanshkushwaha"},"content":"public class CompanyContainsKeywordsPredicate extends FieldPredicates {","lastModifiedDate":"2023-10-23"},{"lineNumber":10,"author":{"gitId":"suryanshkushwaha"},"content":"    public CompanyContainsKeywordsPredicate(String keyword) {","lastModifiedDate":"2023-10-23"},{"lineNumber":11,"author":{"gitId":"suryanshkushwaha"},"content":"        super(keyword);","lastModifiedDate":"2023-10-23"},{"lineNumber":12,"author":{"gitId":"suryanshkushwaha"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":13,"author":{"gitId":"suryanshkushwaha"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":14,"author":{"gitId":"suryanshkushwaha"},"content":"    @Override","lastModifiedDate":"2023-10-23"},{"lineNumber":15,"author":{"gitId":"suryanshkushwaha"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2023-10-23"},{"lineNumber":16,"author":{"gitId":"brendanneojw"},"content":"        return !person.hasDefaultPolicy() \u0026\u0026 keywords.stream().anyMatch(","lastModifiedDate":"2023-11-09"},{"lineNumber":17,"author":{"gitId":"brendanneojw"},"content":"                keyword -\u003e StringUtil.containsWordIgnoreCase(person.getPolicy().getCompany().value, keyword));","lastModifiedDate":"2023-11-07"},{"lineNumber":18,"author":{"gitId":"suryanshkushwaha"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":19,"author":{"gitId":"suryanshkushwaha"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":20,"author":{"gitId":"suryanshkushwaha"},"content":"    @Override","lastModifiedDate":"2023-10-23"},{"lineNumber":21,"author":{"gitId":"suryanshkushwaha"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-23"},{"lineNumber":22,"author":{"gitId":"suryanshkushwaha"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-23"},{"lineNumber":23,"author":{"gitId":"suryanshkushwaha"},"content":"            return true;","lastModifiedDate":"2023-10-23"},{"lineNumber":24,"author":{"gitId":"suryanshkushwaha"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":25,"author":{"gitId":"suryanshkushwaha"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":26,"author":{"gitId":"suryanshkushwaha"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-23"},{"lineNumber":27,"author":{"gitId":"suryanshkushwaha"},"content":"        if (!(other instanceof CompanyContainsKeywordsPredicate)) {","lastModifiedDate":"2023-10-23"},{"lineNumber":28,"author":{"gitId":"suryanshkushwaha"},"content":"            return false;","lastModifiedDate":"2023-10-23"},{"lineNumber":29,"author":{"gitId":"suryanshkushwaha"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":30,"author":{"gitId":"suryanshkushwaha"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":31,"author":{"gitId":"suryanshkushwaha"},"content":"        CompanyContainsKeywordsPredicate otherNameContainsKeywordsPredicate \u003d","lastModifiedDate":"2023-10-23"},{"lineNumber":32,"author":{"gitId":"suryanshkushwaha"},"content":"                (CompanyContainsKeywordsPredicate) other;","lastModifiedDate":"2023-10-23"},{"lineNumber":33,"author":{"gitId":"suryanshkushwaha"},"content":"        return keywords.equals(otherNameContainsKeywordsPredicate.keywords);","lastModifiedDate":"2023-10-23"},{"lineNumber":34,"author":{"gitId":"suryanshkushwaha"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":35,"author":{"gitId":"suryanshkushwaha"},"content":"}","lastModifiedDate":"2023-10-23"}],"authorContributionMap":{"brendanneojw":4,"suryanshkushwaha":31}},{"path":"src/main/java/seedu/address/model/person/predicates/EmailContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"brendanneojw"},"content":"package seedu.address.model.person.predicates;","lastModifiedDate":"2023-11-11"},{"lineNumber":2,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":3,"author":{"gitId":"brendanneojw"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2023-10-18"},{"lineNumber":4,"author":{"gitId":"brendanneojw"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-11-11"},{"lineNumber":5,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"brendanneojw"},"content":"/**","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"brendanneojw"},"content":" * Tests that a {@code Person}\u0027s {@code Email} matches any of the keywords given.","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"brendanneojw"},"content":" */","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"brendanneojw"},"content":"public class EmailContainsKeywordsPredicate extends FieldPredicates {","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"brendanneojw"},"content":"    public EmailContainsKeywordsPredicate(String keyword) {","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"brendanneojw"},"content":"        super(keyword);","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"brendanneojw"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"brendanneojw"},"content":"    @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"brendanneojw"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"brendanneojw"},"content":"        return keywords.stream()","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"brendanneojw"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(person.getEmail().value, keyword));","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"brendanneojw"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"brendanneojw"},"content":"    @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"brendanneojw"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"brendanneojw"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"brendanneojw"},"content":"            return true;","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"brendanneojw"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"brendanneojw"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-18"},{"lineNumber":28,"author":{"gitId":"brendanneojw"},"content":"        if (!(other instanceof EmailContainsKeywordsPredicate)) {","lastModifiedDate":"2023-10-18"},{"lineNumber":29,"author":{"gitId":"brendanneojw"},"content":"            return false;","lastModifiedDate":"2023-10-18"},{"lineNumber":30,"author":{"gitId":"brendanneojw"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":31,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":32,"author":{"gitId":"brendanneojw"},"content":"        EmailContainsKeywordsPredicate otherNameContainsKeywordsPredicate \u003d (EmailContainsKeywordsPredicate) other;","lastModifiedDate":"2023-10-18"},{"lineNumber":33,"author":{"gitId":"brendanneojw"},"content":"        return keywords.equals(otherNameContainsKeywordsPredicate.keywords);","lastModifiedDate":"2023-10-18"},{"lineNumber":34,"author":{"gitId":"brendanneojw"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":35,"author":{"gitId":"brendanneojw"},"content":"}","lastModifiedDate":"2023-10-18"}],"authorContributionMap":{"brendanneojw":35}},{"path":"src/main/java/seedu/address/model/person/predicates/FieldPredicates.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"brendanneojw"},"content":"package seedu.address.model.person.predicates;","lastModifiedDate":"2023-11-11"},{"lineNumber":2,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":3,"author":{"gitId":"brendanneojw"},"content":"import java.util.Collections;","lastModifiedDate":"2023-10-18"},{"lineNumber":4,"author":{"gitId":"brendanneojw"},"content":"import java.util.List;","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"brendanneojw"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"brendanneojw"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"brendanneojw"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-11-11"},{"lineNumber":9,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"brendanneojw"},"content":"/**","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"brendanneojw"},"content":" * An abstract class to represent a Predicate","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"brendanneojw"},"content":" * Subclasses must implement the abstract methods to test for the Predicate","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"brendanneojw"},"content":" */","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"brendanneojw"},"content":"public abstract class FieldPredicates implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"brendanneojw"},"content":"    protected final List\u003cString\u003e keywords;","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"brendanneojw"},"content":"    public FieldPredicates(String keyword) {","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"brendanneojw"},"content":"        keywords \u003d Collections.singletonList(keyword);","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"brendanneojw"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"brendanneojw"},"content":"    @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"brendanneojw"},"content":"    public abstract boolean test(Person person);","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"brendanneojw"},"content":"    @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"brendanneojw"},"content":"    public abstract boolean equals(Object other);","lastModifiedDate":"2023-10-18"},{"lineNumber":28,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":29,"author":{"gitId":"brendanneojw"},"content":"    @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":30,"author":{"gitId":"brendanneojw"},"content":"    public String toString() {","lastModifiedDate":"2023-10-18"},{"lineNumber":31,"author":{"gitId":"brendanneojw"},"content":"        return new ToStringBuilder(this).add(\"keywords\", keywords).toString();","lastModifiedDate":"2023-10-18"},{"lineNumber":32,"author":{"gitId":"brendanneojw"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":33,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":34,"author":{"gitId":"brendanneojw"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":35,"author":{"gitId":"brendanneojw"},"content":"     * Checks if the list of keywords in the predicate contain an empty string.","lastModifiedDate":"2023-10-18"},{"lineNumber":36,"author":{"gitId":"brendanneojw"},"content":"     *","lastModifiedDate":"2023-10-18"},{"lineNumber":37,"author":{"gitId":"brendanneojw"},"content":"     * @return true if the list of keywords contain an empty string, false otherwise.","lastModifiedDate":"2023-10-18"},{"lineNumber":38,"author":{"gitId":"brendanneojw"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":39,"author":{"gitId":"brendanneojw"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2023-10-18"},{"lineNumber":40,"author":{"gitId":"brendanneojw"},"content":"        return keywords.contains(\"\");","lastModifiedDate":"2023-10-18"},{"lineNumber":41,"author":{"gitId":"brendanneojw"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":42,"author":{"gitId":"brendanneojw"},"content":"}","lastModifiedDate":"2023-10-18"}],"authorContributionMap":{"brendanneojw":42}},{"path":"src/main/java/seedu/address/model/person/predicates/HasPolicyPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"brendanneojw"},"content":"package seedu.address.model.person.predicates;","lastModifiedDate":"2023-11-11"},{"lineNumber":2,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":3,"author":{"gitId":"KumChaiYin"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-11-09"},{"lineNumber":4,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":5,"author":{"gitId":"brendanneojw"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-11-11"},{"lineNumber":6,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":7,"author":{"gitId":"KumChaiYin"},"content":"/**","lastModifiedDate":"2023-11-09"},{"lineNumber":8,"author":{"gitId":"KumChaiYin"},"content":" * Tests that a {@code Person} has policy.","lastModifiedDate":"2023-11-09"},{"lineNumber":9,"author":{"gitId":"KumChaiYin"},"content":" */","lastModifiedDate":"2023-11-09"},{"lineNumber":10,"author":{"gitId":"KumChaiYin"},"content":"public class HasPolicyPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2023-11-09"},{"lineNumber":11,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":12,"author":{"gitId":"KumChaiYin"},"content":"    @Override","lastModifiedDate":"2023-11-09"},{"lineNumber":13,"author":{"gitId":"KumChaiYin"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2023-11-09"},{"lineNumber":14,"author":{"gitId":"KumChaiYin"},"content":"        return !person.hasDefaultPolicy();","lastModifiedDate":"2023-11-09"},{"lineNumber":15,"author":{"gitId":"KumChaiYin"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":16,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":17,"author":{"gitId":"KumChaiYin"},"content":"    @Override","lastModifiedDate":"2023-11-09"},{"lineNumber":18,"author":{"gitId":"KumChaiYin"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-11-09"},{"lineNumber":19,"author":{"gitId":"KumChaiYin"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-11-09"},{"lineNumber":20,"author":{"gitId":"KumChaiYin"},"content":"            return true;","lastModifiedDate":"2023-11-09"},{"lineNumber":21,"author":{"gitId":"KumChaiYin"},"content":"        }","lastModifiedDate":"2023-11-09"},{"lineNumber":22,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":23,"author":{"gitId":"KumChaiYin"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-11-09"},{"lineNumber":24,"author":{"gitId":"KumChaiYin"},"content":"        if (!(other instanceof HasPolicyPredicate)) {","lastModifiedDate":"2023-11-09"},{"lineNumber":25,"author":{"gitId":"KumChaiYin"},"content":"            return false;","lastModifiedDate":"2023-11-09"},{"lineNumber":26,"author":{"gitId":"KumChaiYin"},"content":"        }","lastModifiedDate":"2023-11-09"},{"lineNumber":27,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":28,"author":{"gitId":"KumChaiYin"},"content":"        return true;","lastModifiedDate":"2023-11-09"},{"lineNumber":29,"author":{"gitId":"KumChaiYin"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":30,"author":{"gitId":"KumChaiYin"},"content":"}","lastModifiedDate":"2023-11-09"}],"authorContributionMap":{"brendanneojw":3,"KumChaiYin":27}},{"path":"src/main/java/seedu/address/model/person/predicates/LicenceContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"brendanneojw"},"content":"package seedu.address.model.person.predicates;","lastModifiedDate":"2023-11-11"},{"lineNumber":2,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"brendanneojw"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"brendanneojw"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-11-11"},{"lineNumber":5,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"brendanneojw"},"content":"/**","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"brendanneojw"},"content":" * Tests that a {@code Person}\u0027s {@code Licence Plate} matches any of the keywords given.","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"brendanneojw"},"content":" */","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"brendanneojw"},"content":"public class LicenceContainsKeywordsPredicate extends FieldPredicates {","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"brendanneojw"},"content":"    public LicenceContainsKeywordsPredicate(String keyword) {","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"brendanneojw"},"content":"        super(keyword);","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"brendanneojw"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"brendanneojw"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"brendanneojw"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"brendanneojw"},"content":"        return keywords.stream()","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"brendanneojw"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(person.getLicencePlate().value, keyword));","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"brendanneojw"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"brendanneojw"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"brendanneojw"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"brendanneojw"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"brendanneojw"},"content":"            return true;","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"brendanneojw"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"brendanneojw"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"brendanneojw"},"content":"        if (!(other instanceof LicenceContainsKeywordsPredicate)) {","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"brendanneojw"},"content":"            return false;","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"brendanneojw"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"brendanneojw"},"content":"        LicenceContainsKeywordsPredicate otherNameContainsKeywordsPredicate \u003d (LicenceContainsKeywordsPredicate) other;","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"brendanneojw"},"content":"        return keywords.equals(otherNameContainsKeywordsPredicate.keywords);","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"brendanneojw"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"brendanneojw"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"brendanneojw":34}},{"path":"src/main/java/seedu/address/model/person/predicates/NameContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"brendanneojw"},"content":"package seedu.address.model.person.predicates;","lastModifiedDate":"2023-11-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-06-12"},{"lineNumber":4,"author":{"gitId":"brendanneojw"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-11-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Tests that a {@code Person}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2018-01-10"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"brendanneojw"},"content":"public class NameContainsKeywordsPredicate extends FieldPredicates {","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"brendanneojw"},"content":"    public NameContainsKeywordsPredicate(String keyword) {","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"brendanneojw"},"content":"        super(keyword);","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        return keywords.stream()","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(person.getName().fullName, keyword));","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        if (!(other instanceof NameContainsKeywordsPredicate)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate otherNameContainsKeywordsPredicate \u003d (NameContainsKeywordsPredicate) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return keywords.equals(otherNameContainsKeywordsPredicate.keywords);","lastModifiedDate":"2023-07-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"brendanneojw":5,"-":29}},{"path":"src/main/java/seedu/address/model/person/predicates/NricContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"brendanneojw"},"content":"package seedu.address.model.person.predicates;","lastModifiedDate":"2023-11-11"},{"lineNumber":2,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":3,"author":{"gitId":"brendanneojw"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2023-10-18"},{"lineNumber":4,"author":{"gitId":"brendanneojw"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-11-11"},{"lineNumber":5,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"brendanneojw"},"content":"/**","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"brendanneojw"},"content":" * Tests that a {@code Person}\u0027s {@code NRIC} matches any of the keywords given.","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"brendanneojw"},"content":" */","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"brendanneojw"},"content":"public class NricContainsKeywordsPredicate extends FieldPredicates {","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"brendanneojw"},"content":"    public NricContainsKeywordsPredicate(String keyword) {","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"brendanneojw"},"content":"        super(keyword);","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"brendanneojw"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"brendanneojw"},"content":"    @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"brendanneojw"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"brendanneojw"},"content":"        return keywords.stream()","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"brendanneojw"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(person.getNric().value, keyword));","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"brendanneojw"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"brendanneojw"},"content":"    @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"brendanneojw"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"brendanneojw"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"brendanneojw"},"content":"            return true;","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"brendanneojw"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"brendanneojw"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-18"},{"lineNumber":28,"author":{"gitId":"brendanneojw"},"content":"        if (!(other instanceof NricContainsKeywordsPredicate)) {","lastModifiedDate":"2023-10-18"},{"lineNumber":29,"author":{"gitId":"brendanneojw"},"content":"            return false;","lastModifiedDate":"2023-10-18"},{"lineNumber":30,"author":{"gitId":"brendanneojw"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":31,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":32,"author":{"gitId":"brendanneojw"},"content":"        NricContainsKeywordsPredicate otherNameContainsKeywordsPredicate \u003d (NricContainsKeywordsPredicate) other;","lastModifiedDate":"2023-10-18"},{"lineNumber":33,"author":{"gitId":"brendanneojw"},"content":"        return keywords.equals(otherNameContainsKeywordsPredicate.keywords);","lastModifiedDate":"2023-10-18"},{"lineNumber":34,"author":{"gitId":"brendanneojw"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":35,"author":{"gitId":"brendanneojw"},"content":"}","lastModifiedDate":"2023-10-18"}],"authorContributionMap":{"brendanneojw":35}},{"path":"src/main/java/seedu/address/model/person/predicates/PhoneContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"brendanneojw"},"content":"package seedu.address.model.person.predicates;","lastModifiedDate":"2023-11-11"},{"lineNumber":2,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":3,"author":{"gitId":"brendanneojw"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2023-10-18"},{"lineNumber":4,"author":{"gitId":"brendanneojw"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-11-11"},{"lineNumber":5,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"brendanneojw"},"content":"/**","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"brendanneojw"},"content":" * Tests that a {@code Person}\u0027s {@code Phone Number} matches any of the keywords given.","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"brendanneojw"},"content":" */","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"brendanneojw"},"content":"public class PhoneContainsKeywordsPredicate extends FieldPredicates {","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"brendanneojw"},"content":"    public PhoneContainsKeywordsPredicate(String keyword) {","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"brendanneojw"},"content":"        super(keyword);","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"brendanneojw"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"brendanneojw"},"content":"    @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"brendanneojw"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"brendanneojw"},"content":"        return keywords.stream()","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"brendanneojw"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(person.getPhone().value, keyword));","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"brendanneojw"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"brendanneojw"},"content":"    @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"brendanneojw"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"brendanneojw"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"brendanneojw"},"content":"            return true;","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"brendanneojw"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"brendanneojw"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-18"},{"lineNumber":28,"author":{"gitId":"brendanneojw"},"content":"        if (!(other instanceof PhoneContainsKeywordsPredicate)) {","lastModifiedDate":"2023-10-18"},{"lineNumber":29,"author":{"gitId":"brendanneojw"},"content":"            return false;","lastModifiedDate":"2023-10-18"},{"lineNumber":30,"author":{"gitId":"brendanneojw"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":31,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":32,"author":{"gitId":"brendanneojw"},"content":"        PhoneContainsKeywordsPredicate otherNameContainsKeywordsPredicate \u003d (PhoneContainsKeywordsPredicate) other;","lastModifiedDate":"2023-10-18"},{"lineNumber":33,"author":{"gitId":"brendanneojw"},"content":"        return keywords.equals(otherNameContainsKeywordsPredicate.keywords);","lastModifiedDate":"2023-10-18"},{"lineNumber":34,"author":{"gitId":"brendanneojw"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":35,"author":{"gitId":"brendanneojw"},"content":"}","lastModifiedDate":"2023-10-18"}],"authorContributionMap":{"brendanneojw":35}},{"path":"src/main/java/seedu/address/model/person/predicates/PolicyExpiryContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"brendanneojw"},"content":"package seedu.address.model.person.predicates;","lastModifiedDate":"2023-11-11"},{"lineNumber":2,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":3,"author":{"gitId":"brendanneojw"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2023-10-18"},{"lineNumber":4,"author":{"gitId":"brendanneojw"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-11-11"},{"lineNumber":5,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"brendanneojw"},"content":"/**","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"brendanneojw"},"content":" * Tests that a {@code Person}\u0027s {@code Policy Expiry date} matches any of the keywords given.","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"brendanneojw"},"content":" */","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"brendanneojw"},"content":"public class PolicyExpiryContainsKeywordsPredicate extends FieldPredicates {","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"brendanneojw"},"content":"    public PolicyExpiryContainsKeywordsPredicate(String keyword) {","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"brendanneojw"},"content":"        super(keyword);","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"brendanneojw"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"brendanneojw"},"content":"    @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"brendanneojw"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"brendanneojw"},"content":"        return !person.hasDefaultPolicy() \u0026\u0026 keywords.stream().anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(","lastModifiedDate":"2023-11-09"},{"lineNumber":18,"author":{"gitId":"brendanneojw"},"content":"                        person.getPolicy().getPolicyExpiryDate().toString(), keyword));","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"brendanneojw"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"brendanneojw"},"content":"    @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"brendanneojw"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"brendanneojw"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"brendanneojw"},"content":"            return true;","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"brendanneojw"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"brendanneojw"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-18"},{"lineNumber":28,"author":{"gitId":"brendanneojw"},"content":"        if (!(other instanceof PolicyExpiryContainsKeywordsPredicate)) {","lastModifiedDate":"2023-10-18"},{"lineNumber":29,"author":{"gitId":"brendanneojw"},"content":"            return false;","lastModifiedDate":"2023-10-18"},{"lineNumber":30,"author":{"gitId":"brendanneojw"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":31,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":32,"author":{"gitId":"brendanneojw"},"content":"        PolicyExpiryContainsKeywordsPredicate otherNameContainsKeywordsPredicate \u003d","lastModifiedDate":"2023-10-18"},{"lineNumber":33,"author":{"gitId":"brendanneojw"},"content":"                (PolicyExpiryContainsKeywordsPredicate) other;","lastModifiedDate":"2023-10-18"},{"lineNumber":34,"author":{"gitId":"brendanneojw"},"content":"        return keywords.equals(otherNameContainsKeywordsPredicate.keywords);","lastModifiedDate":"2023-10-18"},{"lineNumber":35,"author":{"gitId":"brendanneojw"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":36,"author":{"gitId":"brendanneojw"},"content":"}","lastModifiedDate":"2023-10-18"}],"authorContributionMap":{"brendanneojw":36}},{"path":"src/main/java/seedu/address/model/person/predicates/PolicyExpiryInDeleteMonthPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"brendanneojw"},"content":"package seedu.address.model.person.predicates;","lastModifiedDate":"2023-11-11"},{"lineNumber":2,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":3,"author":{"gitId":"KumChaiYin"},"content":"import seedu.address.model.month.DeleteMonth;","lastModifiedDate":"2023-10-25"},{"lineNumber":4,"author":{"gitId":"brendanneojw"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-11-11"},{"lineNumber":5,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"KumChaiYin"},"content":"/**","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"KumChaiYin"},"content":" * Tests that a {@code Person}\u0027s {@code Policy Expiry date} is in delete month.","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"KumChaiYin"},"content":" */","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"KumChaiYin"},"content":"public class PolicyExpiryInDeleteMonthPredicate extends FieldPredicates {","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"KumChaiYin"},"content":"    private final DeleteMonth deleteMonth;","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"KumChaiYin"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"KumChaiYin"},"content":"     * Constructs a PolicyExpiryInDeleteMonthPredicate object.","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"KumChaiYin"},"content":"     * @param deleteMonth Month with year.","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"KumChaiYin"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"KumChaiYin"},"content":"    public PolicyExpiryInDeleteMonthPredicate(DeleteMonth deleteMonth) {","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"KumChaiYin"},"content":"        super(deleteMonth.toString());","lastModifiedDate":"2023-10-25"},{"lineNumber":18,"author":{"gitId":"KumChaiYin"},"content":"        this.deleteMonth \u003d deleteMonth;","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"KumChaiYin"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"KumChaiYin"},"content":"    @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"KumChaiYin"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"KumChaiYin"},"content":"        return person.getPolicy().getPolicyExpiryDate().isInMonth(deleteMonth);","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"KumChaiYin"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"KumChaiYin"},"content":"    @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":27,"author":{"gitId":"KumChaiYin"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-25"},{"lineNumber":28,"author":{"gitId":"KumChaiYin"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"KumChaiYin"},"content":"            return true;","lastModifiedDate":"2023-10-25"},{"lineNumber":30,"author":{"gitId":"KumChaiYin"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":31,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":32,"author":{"gitId":"KumChaiYin"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-25"},{"lineNumber":33,"author":{"gitId":"KumChaiYin"},"content":"        if (!(other instanceof PolicyExpiryInDeleteMonthPredicate)) {","lastModifiedDate":"2023-10-25"},{"lineNumber":34,"author":{"gitId":"KumChaiYin"},"content":"            return false;","lastModifiedDate":"2023-10-25"},{"lineNumber":35,"author":{"gitId":"KumChaiYin"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":36,"author":{"gitId":"KumChaiYin"},"content":"        PolicyExpiryInDeleteMonthPredicate otherPolicyExpiryInDeleteMonthPredicate \u003d","lastModifiedDate":"2023-10-25"},{"lineNumber":37,"author":{"gitId":"KumChaiYin"},"content":"                (PolicyExpiryInDeleteMonthPredicate) other;","lastModifiedDate":"2023-10-25"},{"lineNumber":38,"author":{"gitId":"KumChaiYin"},"content":"        return keywords.equals(otherPolicyExpiryInDeleteMonthPredicate.keywords);","lastModifiedDate":"2023-10-25"},{"lineNumber":39,"author":{"gitId":"KumChaiYin"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":40,"author":{"gitId":"KumChaiYin"},"content":"}","lastModifiedDate":"2023-10-25"}],"authorContributionMap":{"brendanneojw":2,"KumChaiYin":38}},{"path":"src/main/java/seedu/address/model/person/predicates/PolicyIssueContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"brendanneojw"},"content":"package seedu.address.model.person.predicates;","lastModifiedDate":"2023-11-11"},{"lineNumber":2,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":3,"author":{"gitId":"brendanneojw"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2023-10-18"},{"lineNumber":4,"author":{"gitId":"brendanneojw"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-11-11"},{"lineNumber":5,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"brendanneojw"},"content":"/**","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"brendanneojw"},"content":" * Tests that a {@code Person}\u0027s {@code Policy Issue date} matches any of the keywords given.","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"brendanneojw"},"content":" */","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"brendanneojw"},"content":"public class PolicyIssueContainsKeywordsPredicate extends FieldPredicates {","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"brendanneojw"},"content":"    public PolicyIssueContainsKeywordsPredicate(String keyword) {","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"brendanneojw"},"content":"        super(keyword);","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"brendanneojw"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"brendanneojw"},"content":"    @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"brendanneojw"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"brendanneojw"},"content":"        return !person.hasDefaultPolicy() \u0026\u0026 keywords.stream().anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(","lastModifiedDate":"2023-11-09"},{"lineNumber":18,"author":{"gitId":"brendanneojw"},"content":"                        person.getPolicy().getPolicyIssueDate().toString(), keyword));","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"brendanneojw"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"brendanneojw"},"content":"    @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"brendanneojw"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"brendanneojw"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"brendanneojw"},"content":"            return true;","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"brendanneojw"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"brendanneojw"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-18"},{"lineNumber":28,"author":{"gitId":"brendanneojw"},"content":"        if (!(other instanceof PolicyIssueContainsKeywordsPredicate)) {","lastModifiedDate":"2023-10-18"},{"lineNumber":29,"author":{"gitId":"brendanneojw"},"content":"            return false;","lastModifiedDate":"2023-10-18"},{"lineNumber":30,"author":{"gitId":"brendanneojw"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":31,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":32,"author":{"gitId":"brendanneojw"},"content":"        PolicyIssueContainsKeywordsPredicate otherNameContainsKeywordsPredicate \u003d","lastModifiedDate":"2023-10-18"},{"lineNumber":33,"author":{"gitId":"brendanneojw"},"content":"                (PolicyIssueContainsKeywordsPredicate) other;","lastModifiedDate":"2023-10-18"},{"lineNumber":34,"author":{"gitId":"brendanneojw"},"content":"        return keywords.equals(otherNameContainsKeywordsPredicate.keywords);","lastModifiedDate":"2023-10-18"},{"lineNumber":35,"author":{"gitId":"brendanneojw"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":36,"author":{"gitId":"brendanneojw"},"content":"}","lastModifiedDate":"2023-10-18"}],"authorContributionMap":{"brendanneojw":36}},{"path":"src/main/java/seedu/address/model/person/predicates/PolicyNumberContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"brendanneojw"},"content":"package seedu.address.model.person.predicates;","lastModifiedDate":"2023-11-11"},{"lineNumber":2,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":3,"author":{"gitId":"brendanneojw"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2023-10-18"},{"lineNumber":4,"author":{"gitId":"brendanneojw"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-11-11"},{"lineNumber":5,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"brendanneojw"},"content":"/**","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"brendanneojw"},"content":" * Tests that a {@code Person}\u0027s {@code Policy Number} matches any of the keywords given.","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"brendanneojw"},"content":" */","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"brendanneojw"},"content":"public class PolicyNumberContainsKeywordsPredicate extends FieldPredicates {","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"brendanneojw"},"content":"    public PolicyNumberContainsKeywordsPredicate(String keyword) {","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"brendanneojw"},"content":"        super(keyword);","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"brendanneojw"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"brendanneojw"},"content":"    @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"brendanneojw"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"brendanneojw"},"content":"        return !person.hasDefaultPolicy() \u0026\u0026 keywords.stream().anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(","lastModifiedDate":"2023-11-12"},{"lineNumber":18,"author":{"gitId":"brendanneojw"},"content":"                        person.getPolicy().getPolicyNumber().value, keyword));","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"brendanneojw"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"brendanneojw"},"content":"    @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"brendanneojw"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"brendanneojw"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"brendanneojw"},"content":"            return true;","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"brendanneojw"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"brendanneojw"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-18"},{"lineNumber":28,"author":{"gitId":"brendanneojw"},"content":"        if (!(other instanceof PolicyNumberContainsKeywordsPredicate)) {","lastModifiedDate":"2023-10-18"},{"lineNumber":29,"author":{"gitId":"brendanneojw"},"content":"            return false;","lastModifiedDate":"2023-10-18"},{"lineNumber":30,"author":{"gitId":"brendanneojw"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":31,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":32,"author":{"gitId":"brendanneojw"},"content":"        PolicyNumberContainsKeywordsPredicate otherNameContainsKeywordsPredicate \u003d","lastModifiedDate":"2023-10-18"},{"lineNumber":33,"author":{"gitId":"brendanneojw"},"content":"                (PolicyNumberContainsKeywordsPredicate) other;","lastModifiedDate":"2023-10-18"},{"lineNumber":34,"author":{"gitId":"brendanneojw"},"content":"        return keywords.equals(otherNameContainsKeywordsPredicate.keywords);","lastModifiedDate":"2023-10-18"},{"lineNumber":35,"author":{"gitId":"brendanneojw"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":36,"author":{"gitId":"brendanneojw"},"content":"}","lastModifiedDate":"2023-10-18"}],"authorContributionMap":{"brendanneojw":36}},{"path":"src/main/java/seedu/address/model/person/predicates/RemindPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"brendanneojw"},"content":"package seedu.address.model.person.predicates;","lastModifiedDate":"2023-11-11"},{"lineNumber":2,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":3,"author":{"gitId":"brendanneojw"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-10-25"},{"lineNumber":4,"author":{"gitId":"brendanneojw"},"content":"import java.time.temporal.ChronoUnit;","lastModifiedDate":"2023-10-25"},{"lineNumber":5,"author":{"gitId":"brendanneojw"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"brendanneojw"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-11-12"},{"lineNumber":8,"author":{"gitId":"brendanneojw"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-11-11"},{"lineNumber":9,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":10,"author":{"gitId":"brendanneojw"},"content":"/**","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"brendanneojw"},"content":" * Tests that a {@code Person}\u0027s {@code Policy Expiry Date} is within a certain period from the current date.","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"brendanneojw"},"content":" */","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"brendanneojw"},"content":"public class RemindPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"brendanneojw"},"content":"    private static final int NON_EXPIRY_DAY \u003d 0;","lastModifiedDate":"2023-11-07"},{"lineNumber":15,"author":{"gitId":"brendanneojw"},"content":"    private final int days;","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"brendanneojw"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"brendanneojw"},"content":"     * Constructor for RemindPredicate.","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"brendanneojw"},"content":"     *","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"brendanneojw"},"content":"     * @param days the number of days to be used for the range to check with.","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"brendanneojw"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"brendanneojw"},"content":"    public RemindPredicate(int days) {","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"brendanneojw"},"content":"        assert days \u003e\u003d 0;","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"brendanneojw"},"content":"        this.days \u003d days;","lastModifiedDate":"2023-10-26"},{"lineNumber":25,"author":{"gitId":"brendanneojw"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":27,"author":{"gitId":"brendanneojw"},"content":"    @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":28,"author":{"gitId":"brendanneojw"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"brendanneojw"},"content":"        long dayDifference \u003d ChronoUnit.DAYS.between(LocalDate.now(), person.getPolicy().getPolicyExpiryDate().date);","lastModifiedDate":"2023-11-07"},{"lineNumber":30,"author":{"gitId":"brendanneojw"},"content":"        return !person.hasDefaultPolicy() \u0026\u0026 dayDifference \u003e\u003d NON_EXPIRY_DAY \u0026\u0026 dayDifference \u003c\u003d days;","lastModifiedDate":"2023-11-12"},{"lineNumber":31,"author":{"gitId":"brendanneojw"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":32,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":33,"author":{"gitId":"brendanneojw"},"content":"    @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":34,"author":{"gitId":"brendanneojw"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-26"},{"lineNumber":35,"author":{"gitId":"brendanneojw"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-26"},{"lineNumber":36,"author":{"gitId":"brendanneojw"},"content":"            return true;","lastModifiedDate":"2023-10-26"},{"lineNumber":37,"author":{"gitId":"brendanneojw"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":38,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":39,"author":{"gitId":"brendanneojw"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-26"},{"lineNumber":40,"author":{"gitId":"brendanneojw"},"content":"        if (!(other instanceof RemindPredicate)) {","lastModifiedDate":"2023-10-26"},{"lineNumber":41,"author":{"gitId":"brendanneojw"},"content":"            return false;","lastModifiedDate":"2023-10-26"},{"lineNumber":42,"author":{"gitId":"brendanneojw"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":43,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":44,"author":{"gitId":"brendanneojw"},"content":"        RemindPredicate otherNameContainsKeywordsPredicate \u003d","lastModifiedDate":"2023-10-26"},{"lineNumber":45,"author":{"gitId":"brendanneojw"},"content":"                (RemindPredicate) other;","lastModifiedDate":"2023-10-26"},{"lineNumber":46,"author":{"gitId":"brendanneojw"},"content":"        return days \u003d\u003d otherNameContainsKeywordsPredicate.days;","lastModifiedDate":"2023-10-26"},{"lineNumber":47,"author":{"gitId":"brendanneojw"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":48,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":49,"author":{"gitId":"brendanneojw"},"content":"    @Override","lastModifiedDate":"2023-11-12"},{"lineNumber":50,"author":{"gitId":"brendanneojw"},"content":"    public String toString() {","lastModifiedDate":"2023-11-12"},{"lineNumber":51,"author":{"gitId":"brendanneojw"},"content":"        return new ToStringBuilder(this).add(\"days\", days).toString();","lastModifiedDate":"2023-11-12"},{"lineNumber":52,"author":{"gitId":"brendanneojw"},"content":"    }","lastModifiedDate":"2023-11-12"},{"lineNumber":53,"author":{"gitId":"brendanneojw"},"content":"}","lastModifiedDate":"2023-10-25"}],"authorContributionMap":{"brendanneojw":53}},{"path":"src/main/java/seedu/address/model/person/predicates/TagContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"brendanneojw"},"content":"package seedu.address.model.person.predicates;","lastModifiedDate":"2023-11-11"},{"lineNumber":2,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":3,"author":{"gitId":"brendanneojw"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2023-10-18"},{"lineNumber":4,"author":{"gitId":"brendanneojw"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-11-11"},{"lineNumber":5,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"brendanneojw"},"content":"/**","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"brendanneojw"},"content":" * Tests that a {@code Person}\u0027s {@code Tags} matches any of the keywords given.","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"brendanneojw"},"content":" */","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"brendanneojw"},"content":"public class TagContainsKeywordsPredicate extends FieldPredicates {","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"brendanneojw"},"content":"    public TagContainsKeywordsPredicate(String keyword) {","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"brendanneojw"},"content":"        super(keyword);","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"brendanneojw"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"brendanneojw"},"content":"    @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"brendanneojw"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"brendanneojw"},"content":"        return keywords.stream()","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"brendanneojw"},"content":"                .anyMatch(keyword -\u003e person.getTags().stream().anyMatch(","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"brendanneojw"},"content":"                        tag -\u003e StringUtil.containsWordIgnoreCase(tag.tagName, keyword)));","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"brendanneojw"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"brendanneojw"},"content":"    @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"brendanneojw"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"brendanneojw"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"brendanneojw"},"content":"            return true;","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"brendanneojw"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"brendanneojw"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-18"},{"lineNumber":28,"author":{"gitId":"brendanneojw"},"content":"        if (!(other instanceof TagContainsKeywordsPredicate)) {","lastModifiedDate":"2023-10-18"},{"lineNumber":29,"author":{"gitId":"brendanneojw"},"content":"            return false;","lastModifiedDate":"2023-10-18"},{"lineNumber":30,"author":{"gitId":"brendanneojw"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":31,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":32,"author":{"gitId":"brendanneojw"},"content":"        TagContainsKeywordsPredicate otherNameContainsKeywordsPredicate \u003d (TagContainsKeywordsPredicate) other;","lastModifiedDate":"2023-10-18"},{"lineNumber":33,"author":{"gitId":"brendanneojw"},"content":"        return keywords.equals(otherNameContainsKeywordsPredicate.keywords);","lastModifiedDate":"2023-10-18"},{"lineNumber":34,"author":{"gitId":"brendanneojw"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":35,"author":{"gitId":"brendanneojw"},"content":"}","lastModifiedDate":"2023-10-18"}],"authorContributionMap":{"brendanneojw":35}},{"path":"src/main/java/seedu/address/model/policy/Company.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"suryanshkushwaha"},"content":"package seedu.address.model.policy;","lastModifiedDate":"2023-10-23"},{"lineNumber":2,"author":{"gitId":"suryanshkushwaha"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":3,"author":{"gitId":"suryanshkushwaha"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-23"},{"lineNumber":4,"author":{"gitId":"suryanshkushwaha"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-10-23"},{"lineNumber":5,"author":{"gitId":"suryanshkushwaha"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":6,"author":{"gitId":"suryanshkushwaha"},"content":"/**","lastModifiedDate":"2023-10-23"},{"lineNumber":7,"author":{"gitId":"suryanshkushwaha"},"content":" * Represents a car insurance company in the address book.","lastModifiedDate":"2023-10-23"},{"lineNumber":8,"author":{"gitId":"suryanshkushwaha"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidCompany(String)}","lastModifiedDate":"2023-10-23"},{"lineNumber":9,"author":{"gitId":"suryanshkushwaha"},"content":" */","lastModifiedDate":"2023-10-23"},{"lineNumber":10,"author":{"gitId":"suryanshkushwaha"},"content":"public class Company {","lastModifiedDate":"2023-10-23"},{"lineNumber":11,"author":{"gitId":"suryanshkushwaha"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":12,"author":{"gitId":"cyaoxuan"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-11-11"},{"lineNumber":13,"author":{"gitId":"cyaoxuan"},"content":"            \"Company name should not be empty, and can contain alphanumeric and/or special characters and whitespaces.\";","lastModifiedDate":"2023-11-12"},{"lineNumber":14,"author":{"gitId":"suryanshkushwaha"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":15,"author":{"gitId":"suryanshkushwaha"},"content":"    /*","lastModifiedDate":"2023-10-23"},{"lineNumber":16,"author":{"gitId":"cyaoxuan"},"content":"     * Company name should not be empty, and can contain alphanumeric and/or special characters and whitespaces.","lastModifiedDate":"2023-11-12"},{"lineNumber":17,"author":{"gitId":"suryanshkushwaha"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":18,"author":{"gitId":"cyaoxuan"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\S.*\";","lastModifiedDate":"2023-11-11"},{"lineNumber":19,"author":{"gitId":"brendanneojw"},"content":"    public static final String DEFAULT_VALUE \u003d \"!@#NO_COMPANY!@#\";","lastModifiedDate":"2023-11-13"},{"lineNumber":20,"author":{"gitId":"suryanshkushwaha"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":21,"author":{"gitId":"suryanshkushwaha"},"content":"    public final String value;","lastModifiedDate":"2023-10-23"},{"lineNumber":22,"author":{"gitId":"suryanshkushwaha"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":23,"author":{"gitId":"suryanshkushwaha"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":24,"author":{"gitId":"suryanshkushwaha"},"content":"     * Constructs a {@code Company}.","lastModifiedDate":"2023-10-23"},{"lineNumber":25,"author":{"gitId":"suryanshkushwaha"},"content":"     *","lastModifiedDate":"2023-10-23"},{"lineNumber":26,"author":{"gitId":"suryanshkushwaha"},"content":"     * @param company A valid company.","lastModifiedDate":"2023-10-23"},{"lineNumber":27,"author":{"gitId":"suryanshkushwaha"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":28,"author":{"gitId":"suryanshkushwaha"},"content":"    public Company(String company) {","lastModifiedDate":"2023-10-23"},{"lineNumber":29,"author":{"gitId":"suryanshkushwaha"},"content":"        requireNonNull(company);","lastModifiedDate":"2023-10-23"},{"lineNumber":30,"author":{"gitId":"suryanshkushwaha"},"content":"        checkArgument(isValidCompany(company), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-23"},{"lineNumber":31,"author":{"gitId":"suryanshkushwaha"},"content":"        value \u003d company;","lastModifiedDate":"2023-10-23"},{"lineNumber":32,"author":{"gitId":"suryanshkushwaha"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":33,"author":{"gitId":"suryanshkushwaha"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":34,"author":{"gitId":"suryanshkushwaha"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":35,"author":{"gitId":"suryanshkushwaha"},"content":"     * Returns true if a given string is a valid company.","lastModifiedDate":"2023-10-23"},{"lineNumber":36,"author":{"gitId":"suryanshkushwaha"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":37,"author":{"gitId":"suryanshkushwaha"},"content":"    public static boolean isValidCompany(String test) {","lastModifiedDate":"2023-10-23"},{"lineNumber":38,"author":{"gitId":"suryanshkushwaha"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-10-23"},{"lineNumber":39,"author":{"gitId":"suryanshkushwaha"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":40,"author":{"gitId":"suryanshkushwaha"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":41,"author":{"gitId":"suryanshkushwaha"},"content":"    @Override","lastModifiedDate":"2023-10-23"},{"lineNumber":42,"author":{"gitId":"suryanshkushwaha"},"content":"    public String toString() {","lastModifiedDate":"2023-10-23"},{"lineNumber":43,"author":{"gitId":"suryanshkushwaha"},"content":"        return value;","lastModifiedDate":"2023-10-23"},{"lineNumber":44,"author":{"gitId":"suryanshkushwaha"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":45,"author":{"gitId":"suryanshkushwaha"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":46,"author":{"gitId":"suryanshkushwaha"},"content":"    @Override","lastModifiedDate":"2023-10-23"},{"lineNumber":47,"author":{"gitId":"suryanshkushwaha"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-23"},{"lineNumber":48,"author":{"gitId":"suryanshkushwaha"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-23"},{"lineNumber":49,"author":{"gitId":"suryanshkushwaha"},"content":"            return true;","lastModifiedDate":"2023-10-23"},{"lineNumber":50,"author":{"gitId":"suryanshkushwaha"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":51,"author":{"gitId":"suryanshkushwaha"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":52,"author":{"gitId":"suryanshkushwaha"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-23"},{"lineNumber":53,"author":{"gitId":"suryanshkushwaha"},"content":"        if (!(other instanceof Company)) {","lastModifiedDate":"2023-10-23"},{"lineNumber":54,"author":{"gitId":"suryanshkushwaha"},"content":"            return false;","lastModifiedDate":"2023-10-23"},{"lineNumber":55,"author":{"gitId":"suryanshkushwaha"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":56,"author":{"gitId":"suryanshkushwaha"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":57,"author":{"gitId":"suryanshkushwaha"},"content":"        Company otherCompany \u003d (Company) other;","lastModifiedDate":"2023-10-23"},{"lineNumber":58,"author":{"gitId":"suryanshkushwaha"},"content":"        return value.equals(otherCompany.value);","lastModifiedDate":"2023-10-23"},{"lineNumber":59,"author":{"gitId":"suryanshkushwaha"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":60,"author":{"gitId":"suryanshkushwaha"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":61,"author":{"gitId":"suryanshkushwaha"},"content":"    @Override","lastModifiedDate":"2023-10-23"},{"lineNumber":62,"author":{"gitId":"suryanshkushwaha"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-23"},{"lineNumber":63,"author":{"gitId":"suryanshkushwaha"},"content":"        return value.hashCode();","lastModifiedDate":"2023-10-23"},{"lineNumber":64,"author":{"gitId":"suryanshkushwaha"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":65,"author":{"gitId":"suryanshkushwaha"},"content":"}","lastModifiedDate":"2023-10-23"}],"authorContributionMap":{"brendanneojw":1,"suryanshkushwaha":60,"cyaoxuan":4}},{"path":"src/main/java/seedu/address/model/policy/Policy.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cyaoxuan"},"content":"package seedu.address.model.policy;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"cyaoxuan"},"content":"import java.util.Objects;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"cyaoxuan"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"cyaoxuan"},"content":"/**","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"cyaoxuan"},"content":" * Represents a person\u0027s policy in the address book.","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"cyaoxuan"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"cyaoxuan"},"content":" */","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"cyaoxuan"},"content":"public class Policy {","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"suryanshkushwaha"},"content":"    private final Company company;","lastModifiedDate":"2023-10-23"},{"lineNumber":13,"author":{"gitId":"cyaoxuan"},"content":"    private final PolicyNumber policyNumber;","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"cyaoxuan"},"content":"    private final PolicyDate policyIssueDate;","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"cyaoxuan"},"content":"    private final PolicyDate policyExpiryDate;","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"cyaoxuan"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"cyaoxuan"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"cyaoxuan"},"content":"     * In the case of leads with null policy fields, default values will be put in place by the respective classes.","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"cyaoxuan"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"suryanshkushwaha"},"content":"    public Policy(Company company, PolicyNumber policyNumber, PolicyDate policyIssueDate, PolicyDate policyExpiryDate) {","lastModifiedDate":"2023-10-23"},{"lineNumber":22,"author":{"gitId":"suryanshkushwaha"},"content":"        this.company \u003d company;","lastModifiedDate":"2023-10-23"},{"lineNumber":23,"author":{"gitId":"cyaoxuan"},"content":"        this.policyNumber \u003d policyNumber;","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"cyaoxuan"},"content":"        this.policyIssueDate \u003d policyIssueDate;","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"cyaoxuan"},"content":"        this.policyExpiryDate \u003d policyExpiryDate;","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"cyaoxuan"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"suryanshkushwaha"},"content":"    public Company getCompany() {","lastModifiedDate":"2023-10-23"},{"lineNumber":29,"author":{"gitId":"suryanshkushwaha"},"content":"        return company;","lastModifiedDate":"2023-10-23"},{"lineNumber":30,"author":{"gitId":"suryanshkushwaha"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":31,"author":{"gitId":"cyaoxuan"},"content":"    public PolicyNumber getPolicyNumber() {","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"cyaoxuan"},"content":"        return policyNumber;","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"cyaoxuan"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"cyaoxuan"},"content":"    public PolicyDate getPolicyIssueDate() {","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"cyaoxuan"},"content":"        return policyIssueDate;","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"cyaoxuan"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"cyaoxuan"},"content":"    public PolicyDate getPolicyExpiryDate() {","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"cyaoxuan"},"content":"        return policyExpiryDate;","lastModifiedDate":"2023-10-13"},{"lineNumber":41,"author":{"gitId":"cyaoxuan"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":42,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":43,"author":{"gitId":"cyaoxuan"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":44,"author":{"gitId":"cyaoxuan"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-13"},{"lineNumber":45,"author":{"gitId":"cyaoxuan"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-13"},{"lineNumber":46,"author":{"gitId":"cyaoxuan"},"content":"            return true;","lastModifiedDate":"2023-10-13"},{"lineNumber":47,"author":{"gitId":"cyaoxuan"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":48,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":49,"author":{"gitId":"cyaoxuan"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-13"},{"lineNumber":50,"author":{"gitId":"cyaoxuan"},"content":"        if (!(other instanceof Policy)) {","lastModifiedDate":"2023-10-13"},{"lineNumber":51,"author":{"gitId":"cyaoxuan"},"content":"            return false;","lastModifiedDate":"2023-10-13"},{"lineNumber":52,"author":{"gitId":"cyaoxuan"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":53,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":54,"author":{"gitId":"cyaoxuan"},"content":"        Policy otherPolicy \u003d (Policy) other;","lastModifiedDate":"2023-10-13"},{"lineNumber":55,"author":{"gitId":"suryanshkushwaha"},"content":"        return company.equals(otherPolicy.company)","lastModifiedDate":"2023-10-23"},{"lineNumber":56,"author":{"gitId":"suryanshkushwaha"},"content":"                \u0026\u0026 policyNumber.equals(otherPolicy.policyNumber)","lastModifiedDate":"2023-10-23"},{"lineNumber":57,"author":{"gitId":"cyaoxuan"},"content":"                \u0026\u0026 policyIssueDate.equals(otherPolicy.policyIssueDate)","lastModifiedDate":"2023-10-13"},{"lineNumber":58,"author":{"gitId":"cyaoxuan"},"content":"                \u0026\u0026 policyExpiryDate.equals(otherPolicy.policyExpiryDate);","lastModifiedDate":"2023-10-13"},{"lineNumber":59,"author":{"gitId":"cyaoxuan"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":60,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":61,"author":{"gitId":"cyaoxuan"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":62,"author":{"gitId":"cyaoxuan"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-13"},{"lineNumber":63,"author":{"gitId":"suryanshkushwaha"},"content":"        return Objects.hash(company, policyNumber, policyIssueDate, policyExpiryDate);","lastModifiedDate":"2023-10-23"},{"lineNumber":64,"author":{"gitId":"cyaoxuan"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":65,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":66,"author":{"gitId":"cyaoxuan"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":67,"author":{"gitId":"cyaoxuan"},"content":"    public String toString() {","lastModifiedDate":"2023-10-13"},{"lineNumber":68,"author":{"gitId":"cyaoxuan"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-13"},{"lineNumber":69,"author":{"gitId":"suryanshkushwaha"},"content":"                .add(\"company\", company)","lastModifiedDate":"2023-10-23"},{"lineNumber":70,"author":{"gitId":"cyaoxuan"},"content":"                .add(\"policy number\", policyNumber)","lastModifiedDate":"2023-10-13"},{"lineNumber":71,"author":{"gitId":"cyaoxuan"},"content":"                .add(\"policy issue date\", policyIssueDate)","lastModifiedDate":"2023-10-13"},{"lineNumber":72,"author":{"gitId":"cyaoxuan"},"content":"                .add(\"policy expiry date\", policyExpiryDate)","lastModifiedDate":"2023-10-13"},{"lineNumber":73,"author":{"gitId":"cyaoxuan"},"content":"                .toString();","lastModifiedDate":"2023-10-13"},{"lineNumber":74,"author":{"gitId":"cyaoxuan"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":75,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":76,"author":{"gitId":"RSXIX"},"content":"    /**","lastModifiedDate":"2023-11-09"},{"lineNumber":77,"author":{"gitId":"RSXIX"},"content":"     * Compares the policy\u0027s issue date and expiry date","lastModifiedDate":"2023-11-09"},{"lineNumber":78,"author":{"gitId":"RSXIX"},"content":"     * Returns more than 1 if the expiry date is after issue date","lastModifiedDate":"2023-11-09"},{"lineNumber":79,"author":{"gitId":"RSXIX"},"content":"     * Returns less than 1 otherwise","lastModifiedDate":"2023-11-09"},{"lineNumber":80,"author":{"gitId":"RSXIX"},"content":"     * @return int","lastModifiedDate":"2023-11-09"},{"lineNumber":81,"author":{"gitId":"RSXIX"},"content":"     */","lastModifiedDate":"2023-11-09"},{"lineNumber":82,"author":{"gitId":"RSXIX"},"content":"    public int compareDates() {","lastModifiedDate":"2023-11-09"},{"lineNumber":83,"author":{"gitId":"RSXIX"},"content":"        return this.policyExpiryDate.compareTo(policyIssueDate);","lastModifiedDate":"2023-11-09"},{"lineNumber":84,"author":{"gitId":"RSXIX"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":85,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":86,"author":{"gitId":"RSXIX"},"content":"    /**","lastModifiedDate":"2023-11-09"},{"lineNumber":87,"author":{"gitId":"RSXIX"},"content":"     * Returns true if policy is same as default","lastModifiedDate":"2023-11-09"},{"lineNumber":88,"author":{"gitId":"RSXIX"},"content":"     */","lastModifiedDate":"2023-11-09"},{"lineNumber":89,"author":{"gitId":"RSXIX"},"content":"    public boolean isDefaultPolicyProfile() {","lastModifiedDate":"2023-11-09"},{"lineNumber":90,"author":{"gitId":"RSXIX"},"content":"        return this.policyNumber.value.equals(PolicyNumber.DEFAULT_VALUE)","lastModifiedDate":"2023-11-09"},{"lineNumber":91,"author":{"gitId":"RSXIX"},"content":"                \u0026\u0026 this.policyExpiryDate.date.toString().equals(PolicyDate.DEFAULT_COMPARISON_VALUE)","lastModifiedDate":"2023-11-09"},{"lineNumber":92,"author":{"gitId":"RSXIX"},"content":"                \u0026\u0026 this.policyIssueDate.date.toString().equals(PolicyDate.DEFAULT_COMPARISON_VALUE)","lastModifiedDate":"2023-11-09"},{"lineNumber":93,"author":{"gitId":"RSXIX"},"content":"                \u0026\u0026 this.company.value.equals(Company.DEFAULT_VALUE);","lastModifiedDate":"2023-11-09"},{"lineNumber":94,"author":{"gitId":"RSXIX"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":95,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":96,"author":{"gitId":"RSXIX"},"content":"    /**","lastModifiedDate":"2023-11-09"},{"lineNumber":97,"author":{"gitId":"RSXIX"},"content":"     * Returns true if the policy has the default issue date","lastModifiedDate":"2023-11-09"},{"lineNumber":98,"author":{"gitId":"RSXIX"},"content":"     */","lastModifiedDate":"2023-11-09"},{"lineNumber":99,"author":{"gitId":"RSXIX"},"content":"    public boolean hasDefaultIssueDateParameter() {","lastModifiedDate":"2023-11-09"},{"lineNumber":100,"author":{"gitId":"RSXIX"},"content":"        return this.policyIssueDate.date.toString().equals(PolicyDate.DEFAULT_COMPARISON_VALUE);","lastModifiedDate":"2023-11-09"},{"lineNumber":101,"author":{"gitId":"RSXIX"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":102,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":103,"author":{"gitId":"RSXIX"},"content":"    /**","lastModifiedDate":"2023-11-09"},{"lineNumber":104,"author":{"gitId":"RSXIX"},"content":"     * Returns true if the policy has the default expiry date","lastModifiedDate":"2023-11-09"},{"lineNumber":105,"author":{"gitId":"RSXIX"},"content":"     */","lastModifiedDate":"2023-11-09"},{"lineNumber":106,"author":{"gitId":"RSXIX"},"content":"    public boolean hasDefaultExpiryDateParameter() {","lastModifiedDate":"2023-11-09"},{"lineNumber":107,"author":{"gitId":"RSXIX"},"content":"        return this.policyExpiryDate.date.toString().equals(PolicyDate.DEFAULT_COMPARISON_VALUE);","lastModifiedDate":"2023-11-09"},{"lineNumber":108,"author":{"gitId":"RSXIX"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":109,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":110,"author":{"gitId":"RSXIX"},"content":"    /**","lastModifiedDate":"2023-11-09"},{"lineNumber":111,"author":{"gitId":"RSXIX"},"content":"     * Returns true if the policy has the default number","lastModifiedDate":"2023-11-09"},{"lineNumber":112,"author":{"gitId":"RSXIX"},"content":"     */","lastModifiedDate":"2023-11-09"},{"lineNumber":113,"author":{"gitId":"RSXIX"},"content":"    public boolean hasDefaultNumberParameter() {","lastModifiedDate":"2023-11-09"},{"lineNumber":114,"author":{"gitId":"RSXIX"},"content":"        return this.policyNumber.value.equals(PolicyNumber.DEFAULT_VALUE);","lastModifiedDate":"2023-11-09"},{"lineNumber":115,"author":{"gitId":"RSXIX"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":116,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":117,"author":{"gitId":"RSXIX"},"content":"    /**","lastModifiedDate":"2023-11-09"},{"lineNumber":118,"author":{"gitId":"RSXIX"},"content":"     * Returns true if both policies have the same number","lastModifiedDate":"2023-11-09"},{"lineNumber":119,"author":{"gitId":"cyaoxuan"},"content":"     * @param otherPolicy policy compared to","lastModifiedDate":"2023-11-11"},{"lineNumber":120,"author":{"gitId":"cyaoxuan"},"content":"     * @return whether policies have the same number","lastModifiedDate":"2023-11-11"},{"lineNumber":121,"author":{"gitId":"RSXIX"},"content":"     */","lastModifiedDate":"2023-11-09"},{"lineNumber":122,"author":{"gitId":"RSXIX"},"content":"    public boolean hasSamePolicyNumber(Policy otherPolicy) {","lastModifiedDate":"2023-11-09"},{"lineNumber":123,"author":{"gitId":"RSXIX"},"content":"        if (!this.policyNumber.toString().equals(PolicyNumber.DEFAULT_VALUE)","lastModifiedDate":"2023-11-09"},{"lineNumber":124,"author":{"gitId":"RSXIX"},"content":"                \u0026\u0026 this.policyNumber.equals(otherPolicy.policyNumber)) {","lastModifiedDate":"2023-11-09"},{"lineNumber":125,"author":{"gitId":"RSXIX"},"content":"            return true;","lastModifiedDate":"2023-11-09"},{"lineNumber":126,"author":{"gitId":"RSXIX"},"content":"        }","lastModifiedDate":"2023-11-09"},{"lineNumber":127,"author":{"gitId":"RSXIX"},"content":"        return false;","lastModifiedDate":"2023-11-09"},{"lineNumber":128,"author":{"gitId":"RSXIX"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":129,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":130,"author":{"gitId":"RSXIX"},"content":"    /**","lastModifiedDate":"2023-11-09"},{"lineNumber":131,"author":{"gitId":"RSXIX"},"content":"     * Returns true if any parameter is the default","lastModifiedDate":"2023-11-09"},{"lineNumber":132,"author":{"gitId":"RSXIX"},"content":"     */","lastModifiedDate":"2023-11-09"},{"lineNumber":133,"author":{"gitId":"RSXIX"},"content":"    public boolean hasDefaultParameter() {","lastModifiedDate":"2023-11-09"},{"lineNumber":134,"author":{"gitId":"RSXIX"},"content":"        return this.policyNumber.value.equals(PolicyNumber.DEFAULT_VALUE)","lastModifiedDate":"2023-11-09"},{"lineNumber":135,"author":{"gitId":"RSXIX"},"content":"                || this.policyExpiryDate.date.toString().equals(PolicyDate.DEFAULT_COMPARISON_VALUE)","lastModifiedDate":"2023-11-09"},{"lineNumber":136,"author":{"gitId":"RSXIX"},"content":"                || this.policyIssueDate.date.toString().equals(PolicyDate.DEFAULT_COMPARISON_VALUE)","lastModifiedDate":"2023-11-09"},{"lineNumber":137,"author":{"gitId":"RSXIX"},"content":"                || this.company.value.equals(Company.DEFAULT_VALUE);","lastModifiedDate":"2023-11-09"},{"lineNumber":138,"author":{"gitId":"RSXIX"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":139,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":140,"author":{"gitId":"RSXIX"},"content":"    /**","lastModifiedDate":"2023-11-12"},{"lineNumber":141,"author":{"gitId":"RSXIX"},"content":"     * Returns a new default policy","lastModifiedDate":"2023-11-12"},{"lineNumber":142,"author":{"gitId":"RSXIX"},"content":"     */","lastModifiedDate":"2023-11-12"},{"lineNumber":143,"author":{"gitId":"RSXIX"},"content":"    public static Policy createNewDefaultPolicy() {","lastModifiedDate":"2023-11-12"},{"lineNumber":144,"author":{"gitId":"RSXIX"},"content":"        Company company \u003d new Company(Company.DEFAULT_VALUE);","lastModifiedDate":"2023-11-12"},{"lineNumber":145,"author":{"gitId":"RSXIX"},"content":"        PolicyNumber policyNumber \u003d new PolicyNumber(PolicyNumber.DEFAULT_VALUE);","lastModifiedDate":"2023-11-12"},{"lineNumber":146,"author":{"gitId":"RSXIX"},"content":"        PolicyDate policyIssueDate \u003d new PolicyDate(PolicyDate.DEFAULT_VALUE);","lastModifiedDate":"2023-11-12"},{"lineNumber":147,"author":{"gitId":"RSXIX"},"content":"        PolicyDate policyExpiryDate \u003d new PolicyDate(PolicyDate.DEFAULT_VALUE);","lastModifiedDate":"2023-11-12"},{"lineNumber":148,"author":{"gitId":"RSXIX"},"content":"        return new Policy(company, policyNumber, policyIssueDate, policyExpiryDate);","lastModifiedDate":"2023-11-12"},{"lineNumber":149,"author":{"gitId":"RSXIX"},"content":"    }","lastModifiedDate":"2023-11-12"},{"lineNumber":150,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":151,"author":{"gitId":"RSXIX"},"content":"    /**","lastModifiedDate":"2023-11-09"},{"lineNumber":152,"author":{"gitId":"RSXIX"},"content":"     * Returns true if the company is the same as default","lastModifiedDate":"2023-11-09"},{"lineNumber":153,"author":{"gitId":"RSXIX"},"content":"     */","lastModifiedDate":"2023-11-09"},{"lineNumber":154,"author":{"gitId":"RSXIX"},"content":"    public boolean hasDefaultCompanyParameter() {","lastModifiedDate":"2023-11-09"},{"lineNumber":155,"author":{"gitId":"RSXIX"},"content":"        return this.company.value.equals(Company.DEFAULT_VALUE);","lastModifiedDate":"2023-11-09"},{"lineNumber":156,"author":{"gitId":"RSXIX"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":157,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":158,"author":{"gitId":"brendanneojw"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":159,"author":{"gitId":"brendanneojw"},"content":"     * Return a string representation of the Policy that will be displayed on the Person\u0027s Card or the successful","lastModifiedDate":"2023-10-13"},{"lineNumber":160,"author":{"gitId":"brendanneojw"},"content":"     * command box.","lastModifiedDate":"2023-10-13"},{"lineNumber":161,"author":{"gitId":"brendanneojw"},"content":"     *","lastModifiedDate":"2023-10-13"},{"lineNumber":162,"author":{"gitId":"brendanneojw"},"content":"     * @param isPersonCard true if the display is for the Person card, false otherwise.","lastModifiedDate":"2023-10-13"},{"lineNumber":163,"author":{"gitId":"brendanneojw"},"content":"     * @return the string representation of the Policy.","lastModifiedDate":"2023-10-13"},{"lineNumber":164,"author":{"gitId":"brendanneojw"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":165,"author":{"gitId":"brendanneojw"},"content":"    public String toDisplay(boolean isPersonCard) {","lastModifiedDate":"2023-10-13"},{"lineNumber":166,"author":{"gitId":"cyaoxuan"},"content":"        if (this.hasDefaultParameter()) {","lastModifiedDate":"2023-11-11"},{"lineNumber":167,"author":{"gitId":"brendanneojw"},"content":"            // Policy does not actually exist","lastModifiedDate":"2023-10-13"},{"lineNumber":168,"author":{"gitId":"brendanneojw"},"content":"            return \"No Policy Found\";","lastModifiedDate":"2023-10-13"},{"lineNumber":169,"author":{"gitId":"brendanneojw"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":170,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":171,"author":{"gitId":"brendanneojw"},"content":"        if (isPersonCard) {","lastModifiedDate":"2023-10-13"},{"lineNumber":172,"author":{"gitId":"brendanneojw"},"content":"            return \"Company: \" + company + \"\\n\" + \"Policy Number: \" + policyNumber + \"\\n\"","lastModifiedDate":"2023-11-01"},{"lineNumber":173,"author":{"gitId":"brendanneojw"},"content":"                    + \"Policy Issue Date: \" + policyIssueDate + \"\\n\" + \"Policy Expiry Date: \" + policyExpiryDate;","lastModifiedDate":"2023-11-01"},{"lineNumber":174,"author":{"gitId":"brendanneojw"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":175,"author":{"gitId":"suryanshkushwaha"},"content":"        return company + \", \" + policyNumber + \", \" + policyIssueDate + \", \" + policyExpiryDate;","lastModifiedDate":"2023-10-23"},{"lineNumber":176,"author":{"gitId":"brendanneojw"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":177,"author":{"gitId":"cyaoxuan"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"brendanneojw":17,"suryanshkushwaha":11,"RSXIX":80,"cyaoxuan":69}},{"path":"src/main/java/seedu/address/model/policy/PolicyDate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cyaoxuan"},"content":"package seedu.address.model.policy;","lastModifiedDate":"2023-10-11"},{"lineNumber":2,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":3,"author":{"gitId":"cyaoxuan"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-11"},{"lineNumber":4,"author":{"gitId":"cyaoxuan"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-10-11"},{"lineNumber":5,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":6,"author":{"gitId":"cyaoxuan"},"content":"import java.text.ParseException;","lastModifiedDate":"2023-10-11"},{"lineNumber":7,"author":{"gitId":"cyaoxuan"},"content":"import java.text.SimpleDateFormat;","lastModifiedDate":"2023-10-11"},{"lineNumber":8,"author":{"gitId":"cyaoxuan"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-10-11"},{"lineNumber":9,"author":{"gitId":"cyaoxuan"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-10-11"},{"lineNumber":10,"author":{"gitId":"cyaoxuan"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-11-11"},{"lineNumber":11,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":12,"author":{"gitId":"KumChaiYin"},"content":"import seedu.address.model.month.DeleteMonth;","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"cyaoxuan"},"content":"/**","lastModifiedDate":"2023-10-11"},{"lineNumber":15,"author":{"gitId":"cyaoxuan"},"content":" * Represents a car insurance policy issue / expiry date in the address book.","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"cyaoxuan"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidPolicyDate(String)}","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"cyaoxuan"},"content":" */","lastModifiedDate":"2023-10-11"},{"lineNumber":18,"author":{"gitId":"RSXIX"},"content":"public class PolicyDate implements Comparable\u003cPolicyDate\u003e {","lastModifiedDate":"2023-10-24"},{"lineNumber":19,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":20,"author":{"gitId":"cyaoxuan"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Policy issue / expiry date should be in the format dd-mm-yyyy\";","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":22,"author":{"gitId":"cyaoxuan"},"content":"    /*","lastModifiedDate":"2023-10-11"},{"lineNumber":23,"author":{"gitId":"cyaoxuan"},"content":"     * Should be in the format dd-mm-yyyy, checked with SimpleDateFormat","lastModifiedDate":"2023-10-11"},{"lineNumber":24,"author":{"gitId":"cyaoxuan"},"content":"     */","lastModifiedDate":"2023-10-11"},{"lineNumber":25,"author":{"gitId":"cyaoxuan"},"content":"    public static final String VALIDATION_DATE_FORMAT \u003d \"dd-MM-yyyy\";","lastModifiedDate":"2023-10-11"},{"lineNumber":26,"author":{"gitId":"cyaoxuan"},"content":"    public static final String DEFAULT_VALUE \u003d \"01-01-1000\";","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":28,"author":{"gitId":"RSXIX"},"content":"    public static final String DEFAULT_COMPARISON_VALUE \u003d \"1000-01-01\";","lastModifiedDate":"2023-10-24"},{"lineNumber":29,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":30,"author":{"gitId":"cyaoxuan"},"content":"    public final LocalDate date;","lastModifiedDate":"2023-10-11"},{"lineNumber":31,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":32,"author":{"gitId":"cyaoxuan"},"content":"    /**","lastModifiedDate":"2023-10-11"},{"lineNumber":33,"author":{"gitId":"cyaoxuan"},"content":"     * Constructs a {@code PolicyDate}.","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"cyaoxuan"},"content":"     *","lastModifiedDate":"2023-10-11"},{"lineNumber":35,"author":{"gitId":"cyaoxuan"},"content":"     * @param policyDate A valid policy expiry date.","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"cyaoxuan"},"content":"     */","lastModifiedDate":"2023-10-11"},{"lineNumber":37,"author":{"gitId":"cyaoxuan"},"content":"    public PolicyDate(String policyDate) {","lastModifiedDate":"2023-10-12"},{"lineNumber":38,"author":{"gitId":"cyaoxuan"},"content":"        requireNonNull(policyDate);","lastModifiedDate":"2023-10-12"},{"lineNumber":39,"author":{"gitId":"cyaoxuan"},"content":"        checkArgument(isValidPolicyDate(policyDate), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"cyaoxuan"},"content":"        date \u003d LocalDate.parse(policyDate, DateTimeFormatter.ofPattern(VALIDATION_DATE_FORMAT));","lastModifiedDate":"2023-11-11"},{"lineNumber":41,"author":{"gitId":"cyaoxuan"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":42,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":43,"author":{"gitId":"cyaoxuan"},"content":"    /**","lastModifiedDate":"2023-10-11"},{"lineNumber":44,"author":{"gitId":"cyaoxuan"},"content":"     * Returns true if a given string is a valid date in the format dd-mm-yyyy.","lastModifiedDate":"2023-10-12"},{"lineNumber":45,"author":{"gitId":"cyaoxuan"},"content":"     */","lastModifiedDate":"2023-10-11"},{"lineNumber":46,"author":{"gitId":"cyaoxuan"},"content":"    public static boolean isValidPolicyDate(String test) {","lastModifiedDate":"2023-10-12"},{"lineNumber":47,"author":{"gitId":"cyaoxuan"},"content":"        try {","lastModifiedDate":"2023-10-11"},{"lineNumber":48,"author":{"gitId":"cyaoxuan"},"content":"            // Check that it is indeed in dd-MM-yyyy","lastModifiedDate":"2023-11-11"},{"lineNumber":49,"author":{"gitId":"cyaoxuan"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(VALIDATION_DATE_FORMAT);","lastModifiedDate":"2023-11-11"},{"lineNumber":50,"author":{"gitId":"cyaoxuan"},"content":"            formatter.parse(test);","lastModifiedDate":"2023-11-11"},{"lineNumber":51,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":52,"author":{"gitId":"cyaoxuan"},"content":"            // Check that dates are valid (e.g. no 29 feb in non-leap years","lastModifiedDate":"2023-11-11"},{"lineNumber":53,"author":{"gitId":"cyaoxuan"},"content":"            SimpleDateFormat format \u003d new SimpleDateFormat(VALIDATION_DATE_FORMAT);","lastModifiedDate":"2023-10-11"},{"lineNumber":54,"author":{"gitId":"cyaoxuan"},"content":"            format.setLenient(false);","lastModifiedDate":"2023-11-06"},{"lineNumber":55,"author":{"gitId":"cyaoxuan"},"content":"            format.parse(test);","lastModifiedDate":"2023-10-11"},{"lineNumber":56,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":57,"author":{"gitId":"cyaoxuan"},"content":"            return true;","lastModifiedDate":"2023-10-11"},{"lineNumber":58,"author":{"gitId":"cyaoxuan"},"content":"        } catch (ParseException | DateTimeParseException e) {","lastModifiedDate":"2023-11-11"},{"lineNumber":59,"author":{"gitId":"cyaoxuan"},"content":"            return false;","lastModifiedDate":"2023-10-11"},{"lineNumber":60,"author":{"gitId":"cyaoxuan"},"content":"        }","lastModifiedDate":"2023-10-11"},{"lineNumber":61,"author":{"gitId":"cyaoxuan"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":62,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":63,"author":{"gitId":"KumChaiYin"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":64,"author":{"gitId":"KumChaiYin"},"content":"     * Returns true if this date is in the month and year.","lastModifiedDate":"2023-10-25"},{"lineNumber":65,"author":{"gitId":"KumChaiYin"},"content":"     * @param deleteMonth DeleteMonth object.","lastModifiedDate":"2023-10-25"},{"lineNumber":66,"author":{"gitId":"KumChaiYin"},"content":"     * @return True if the date is in the month and year.","lastModifiedDate":"2023-10-25"},{"lineNumber":67,"author":{"gitId":"KumChaiYin"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":68,"author":{"gitId":"KumChaiYin"},"content":"    public boolean isInMonth(DeleteMonth deleteMonth) {","lastModifiedDate":"2023-10-25"},{"lineNumber":69,"author":{"gitId":"KumChaiYin"},"content":"        int year \u003d date.getYear();","lastModifiedDate":"2023-10-25"},{"lineNumber":70,"author":{"gitId":"KumChaiYin"},"content":"        int month \u003d date.getMonthValue();","lastModifiedDate":"2023-10-25"},{"lineNumber":71,"author":{"gitId":"KumChaiYin"},"content":"        return (year \u003d\u003d deleteMonth.getYear()) \u0026\u0026 (month \u003d\u003d deleteMonth.getMonth());","lastModifiedDate":"2023-10-25"},{"lineNumber":72,"author":{"gitId":"KumChaiYin"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":73,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":74,"author":{"gitId":"cyaoxuan"},"content":"    @Override","lastModifiedDate":"2023-10-11"},{"lineNumber":75,"author":{"gitId":"cyaoxuan"},"content":"    public String toString() {","lastModifiedDate":"2023-10-11"},{"lineNumber":76,"author":{"gitId":"cyaoxuan"},"content":"        return date.format(DateTimeFormatter.ofPattern(\"dd-MM-yyyy\"));","lastModifiedDate":"2023-10-13"},{"lineNumber":77,"author":{"gitId":"cyaoxuan"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":78,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":79,"author":{"gitId":"cyaoxuan"},"content":"    @Override","lastModifiedDate":"2023-10-11"},{"lineNumber":80,"author":{"gitId":"cyaoxuan"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-11"},{"lineNumber":81,"author":{"gitId":"cyaoxuan"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-11"},{"lineNumber":82,"author":{"gitId":"cyaoxuan"},"content":"            return true;","lastModifiedDate":"2023-10-11"},{"lineNumber":83,"author":{"gitId":"cyaoxuan"},"content":"        }","lastModifiedDate":"2023-10-11"},{"lineNumber":84,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":85,"author":{"gitId":"cyaoxuan"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-11"},{"lineNumber":86,"author":{"gitId":"cyaoxuan"},"content":"        if (!(other instanceof PolicyDate)) {","lastModifiedDate":"2023-10-12"},{"lineNumber":87,"author":{"gitId":"cyaoxuan"},"content":"            return false;","lastModifiedDate":"2023-10-11"},{"lineNumber":88,"author":{"gitId":"cyaoxuan"},"content":"        }","lastModifiedDate":"2023-10-11"},{"lineNumber":89,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":90,"author":{"gitId":"cyaoxuan"},"content":"        PolicyDate otherPolicyDate \u003d (PolicyDate) other;","lastModifiedDate":"2023-10-12"},{"lineNumber":91,"author":{"gitId":"cyaoxuan"},"content":"        return date.equals(otherPolicyDate.date);","lastModifiedDate":"2023-10-12"},{"lineNumber":92,"author":{"gitId":"cyaoxuan"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":93,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":94,"author":{"gitId":"cyaoxuan"},"content":"    @Override","lastModifiedDate":"2023-10-11"},{"lineNumber":95,"author":{"gitId":"cyaoxuan"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-11"},{"lineNumber":96,"author":{"gitId":"cyaoxuan"},"content":"        return date.hashCode();","lastModifiedDate":"2023-10-11"},{"lineNumber":97,"author":{"gitId":"cyaoxuan"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":98,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":99,"author":{"gitId":"RSXIX"},"content":"    @Override","lastModifiedDate":"2023-10-24"},{"lineNumber":100,"author":{"gitId":"RSXIX"},"content":"    public int compareTo(PolicyDate other) {","lastModifiedDate":"2023-10-24"},{"lineNumber":101,"author":{"gitId":"RSXIX"},"content":"        return date.compareTo(other.date);","lastModifiedDate":"2023-10-24"},{"lineNumber":102,"author":{"gitId":"RSXIX"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":103,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":104,"author":{"gitId":"cyaoxuan"},"content":"}","lastModifiedDate":"2023-10-11"}],"authorContributionMap":{"RSXIX":8,"KumChaiYin":13,"cyaoxuan":83}},{"path":"src/main/java/seedu/address/model/policy/PolicyExpirationDateComparator.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RSXIX"},"content":"package seedu.address.model.policy;","lastModifiedDate":"2023-10-24"},{"lineNumber":2,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":3,"author":{"gitId":"RSXIX"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-10-24"},{"lineNumber":4,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":5,"author":{"gitId":"RSXIX"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-24"},{"lineNumber":6,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":7,"author":{"gitId":"RSXIX"},"content":"/**","lastModifiedDate":"2023-10-24"},{"lineNumber":8,"author":{"gitId":"RSXIX"},"content":" * A comparator used to rank persons in the database for sort","lastModifiedDate":"2023-10-24"},{"lineNumber":9,"author":{"gitId":"RSXIX"},"content":" */","lastModifiedDate":"2023-10-24"},{"lineNumber":10,"author":{"gitId":"RSXIX"},"content":"public class PolicyExpirationDateComparator implements Comparator\u003cPerson\u003e {","lastModifiedDate":"2023-10-24"},{"lineNumber":11,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":12,"author":{"gitId":"RSXIX"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":13,"author":{"gitId":"RSXIX"},"content":"     * Designates the person with the earlier policy expiration date as lesser","lastModifiedDate":"2023-10-24"},{"lineNumber":14,"author":{"gitId":"RSXIX"},"content":"     * Policies with default policy values are kept at the end","lastModifiedDate":"2023-10-24"},{"lineNumber":15,"author":{"gitId":"RSXIX"},"content":"     * @param person1 the first object to be compared.","lastModifiedDate":"2023-10-24"},{"lineNumber":16,"author":{"gitId":"RSXIX"},"content":"     * @param person2 the second object to be compared.","lastModifiedDate":"2023-10-24"},{"lineNumber":17,"author":{"gitId":"RSXIX"},"content":"     * @return","lastModifiedDate":"2023-10-24"},{"lineNumber":18,"author":{"gitId":"RSXIX"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":19,"author":{"gitId":"RSXIX"},"content":"    @Override","lastModifiedDate":"2023-10-24"},{"lineNumber":20,"author":{"gitId":"RSXIX"},"content":"    public int compare(Person person1, Person person2) {","lastModifiedDate":"2023-10-24"},{"lineNumber":21,"author":{"gitId":"RSXIX"},"content":"        PolicyDate expirationDate1 \u003d person1.getPolicy().getPolicyExpiryDate();","lastModifiedDate":"2023-10-24"},{"lineNumber":22,"author":{"gitId":"RSXIX"},"content":"        PolicyDate expirationDate2 \u003d person2.getPolicy().getPolicyExpiryDate();","lastModifiedDate":"2023-10-24"},{"lineNumber":23,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":24,"author":{"gitId":"RSXIX"},"content":"        if (expirationDate1.date.toString().equals(PolicyDate.DEFAULT_COMPARISON_VALUE)) {","lastModifiedDate":"2023-10-24"},{"lineNumber":25,"author":{"gitId":"RSXIX"},"content":"            return 1;","lastModifiedDate":"2023-10-24"},{"lineNumber":26,"author":{"gitId":"RSXIX"},"content":"        } else if (expirationDate2.date.toString().equals(PolicyDate.DEFAULT_COMPARISON_VALUE)) {","lastModifiedDate":"2023-10-24"},{"lineNumber":27,"author":{"gitId":"RSXIX"},"content":"            return -1;","lastModifiedDate":"2023-10-24"},{"lineNumber":28,"author":{"gitId":"RSXIX"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":29,"author":{"gitId":"RSXIX"},"content":"        return expirationDate1.compareTo(expirationDate2);","lastModifiedDate":"2023-10-24"},{"lineNumber":30,"author":{"gitId":"RSXIX"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":31,"author":{"gitId":"RSXIX"},"content":"}","lastModifiedDate":"2023-10-24"},{"lineNumber":32,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-10-24"}],"authorContributionMap":{"RSXIX":32}},{"path":"src/main/java/seedu/address/model/policy/PolicyNumber.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cyaoxuan"},"content":"package seedu.address.model.policy;","lastModifiedDate":"2023-10-11"},{"lineNumber":2,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":3,"author":{"gitId":"cyaoxuan"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-11"},{"lineNumber":4,"author":{"gitId":"cyaoxuan"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-10-11"},{"lineNumber":5,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":6,"author":{"gitId":"cyaoxuan"},"content":"/**","lastModifiedDate":"2023-10-11"},{"lineNumber":7,"author":{"gitId":"cyaoxuan"},"content":" * Represents a car insurance policy number in the address book.","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"cyaoxuan"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidPolicyNumber(String)}","lastModifiedDate":"2023-10-11"},{"lineNumber":9,"author":{"gitId":"cyaoxuan"},"content":" */","lastModifiedDate":"2023-10-11"},{"lineNumber":10,"author":{"gitId":"cyaoxuan"},"content":"public class PolicyNumber {","lastModifiedDate":"2023-10-11"},{"lineNumber":11,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":12,"author":{"gitId":"cyaoxuan"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"cyaoxuan"},"content":"            \"Policy numbers should be an alphanumeric string with 1-8 characters\";","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":15,"author":{"gitId":"cyaoxuan"},"content":"    /*","lastModifiedDate":"2023-10-11"},{"lineNumber":16,"author":{"gitId":"cyaoxuan"},"content":"     * Should be an alphanumeric string with 1-8 characters","lastModifiedDate":"2023-10-11"},{"lineNumber":17,"author":{"gitId":"cyaoxuan"},"content":"     */","lastModifiedDate":"2023-10-11"},{"lineNumber":18,"author":{"gitId":"cyaoxuan"},"content":"    public static final String VALIDATION_REGEX \u003d \"^[a-zA-Z0-9]{1,8}$\";","lastModifiedDate":"2023-10-11"},{"lineNumber":19,"author":{"gitId":"cyaoxuan"},"content":"    public static final String DEFAULT_VALUE \u003d \"NOPOLICY\";","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":21,"author":{"gitId":"cyaoxuan"},"content":"    public final String value;","lastModifiedDate":"2023-10-11"},{"lineNumber":22,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":23,"author":{"gitId":"cyaoxuan"},"content":"    /**","lastModifiedDate":"2023-10-11"},{"lineNumber":24,"author":{"gitId":"cyaoxuan"},"content":"     * Constructs a {@code PolicyNumber}.","lastModifiedDate":"2023-10-11"},{"lineNumber":25,"author":{"gitId":"cyaoxuan"},"content":"     *","lastModifiedDate":"2023-10-11"},{"lineNumber":26,"author":{"gitId":"cyaoxuan"},"content":"     * @param policyNumber A valid policy number.","lastModifiedDate":"2023-10-11"},{"lineNumber":27,"author":{"gitId":"cyaoxuan"},"content":"     */","lastModifiedDate":"2023-10-11"},{"lineNumber":28,"author":{"gitId":"cyaoxuan"},"content":"    public PolicyNumber(String policyNumber) {","lastModifiedDate":"2023-10-11"},{"lineNumber":29,"author":{"gitId":"cyaoxuan"},"content":"        requireNonNull(policyNumber);","lastModifiedDate":"2023-10-11"},{"lineNumber":30,"author":{"gitId":"cyaoxuan"},"content":"        checkArgument(isValidPolicyNumber(policyNumber), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-11"},{"lineNumber":31,"author":{"gitId":"brendanneojw"},"content":"        value \u003d policyNumber.toUpperCase();","lastModifiedDate":"2023-11-12"},{"lineNumber":32,"author":{"gitId":"cyaoxuan"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":33,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":34,"author":{"gitId":"cyaoxuan"},"content":"    /**","lastModifiedDate":"2023-10-11"},{"lineNumber":35,"author":{"gitId":"cyaoxuan"},"content":"     * Returns true if a given string is a valid policy number.","lastModifiedDate":"2023-10-11"},{"lineNumber":36,"author":{"gitId":"cyaoxuan"},"content":"     */","lastModifiedDate":"2023-10-11"},{"lineNumber":37,"author":{"gitId":"cyaoxuan"},"content":"    public static boolean isValidPolicyNumber(String test) {","lastModifiedDate":"2023-10-11"},{"lineNumber":38,"author":{"gitId":"cyaoxuan"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-10-11"},{"lineNumber":39,"author":{"gitId":"cyaoxuan"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":40,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":41,"author":{"gitId":"cyaoxuan"},"content":"    @Override","lastModifiedDate":"2023-10-11"},{"lineNumber":42,"author":{"gitId":"cyaoxuan"},"content":"    public String toString() {","lastModifiedDate":"2023-10-11"},{"lineNumber":43,"author":{"gitId":"cyaoxuan"},"content":"        return value;","lastModifiedDate":"2023-10-11"},{"lineNumber":44,"author":{"gitId":"cyaoxuan"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":45,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":46,"author":{"gitId":"cyaoxuan"},"content":"    @Override","lastModifiedDate":"2023-10-11"},{"lineNumber":47,"author":{"gitId":"cyaoxuan"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-11"},{"lineNumber":48,"author":{"gitId":"cyaoxuan"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-11"},{"lineNumber":49,"author":{"gitId":"cyaoxuan"},"content":"            return true;","lastModifiedDate":"2023-10-11"},{"lineNumber":50,"author":{"gitId":"cyaoxuan"},"content":"        }","lastModifiedDate":"2023-10-11"},{"lineNumber":51,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":52,"author":{"gitId":"cyaoxuan"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-11"},{"lineNumber":53,"author":{"gitId":"cyaoxuan"},"content":"        if (!(other instanceof PolicyNumber)) {","lastModifiedDate":"2023-10-11"},{"lineNumber":54,"author":{"gitId":"cyaoxuan"},"content":"            return false;","lastModifiedDate":"2023-10-11"},{"lineNumber":55,"author":{"gitId":"cyaoxuan"},"content":"        }","lastModifiedDate":"2023-10-11"},{"lineNumber":56,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":57,"author":{"gitId":"cyaoxuan"},"content":"        PolicyNumber otherPolicyNumber \u003d (PolicyNumber) other;","lastModifiedDate":"2023-10-11"},{"lineNumber":58,"author":{"gitId":"cyaoxuan"},"content":"        return value.equals(otherPolicyNumber.value);","lastModifiedDate":"2023-10-11"},{"lineNumber":59,"author":{"gitId":"cyaoxuan"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":60,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":61,"author":{"gitId":"cyaoxuan"},"content":"    @Override","lastModifiedDate":"2023-10-11"},{"lineNumber":62,"author":{"gitId":"cyaoxuan"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-11"},{"lineNumber":63,"author":{"gitId":"cyaoxuan"},"content":"        return value.hashCode();","lastModifiedDate":"2023-10-11"},{"lineNumber":64,"author":{"gitId":"cyaoxuan"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":65,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":66,"author":{"gitId":"cyaoxuan"},"content":"}","lastModifiedDate":"2023-10-11"}],"authorContributionMap":{"brendanneojw":1,"cyaoxuan":65}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2016-12-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-20"},{"lineNumber":11,"author":{"gitId":"cyaoxuan"},"content":"import seedu.address.model.person.LicencePlate;","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-20"},{"lineNumber":13,"author":{"gitId":"cyaoxuan"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-20"},{"lineNumber":16,"author":{"gitId":"cyaoxuan"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2023-11-01"},{"lineNumber":17,"author":{"gitId":"suryanshkushwaha"},"content":"import seedu.address.model.policy.Company;","lastModifiedDate":"2023-10-23"},{"lineNumber":18,"author":{"gitId":"cyaoxuan"},"content":"import seedu.address.model.policy.Policy;","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"cyaoxuan"},"content":"import seedu.address.model.policy.PolicyDate;","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"cyaoxuan"},"content":"import seedu.address.model.policy.PolicyNumber;","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":27,"author":{"gitId":"cyaoxuan"},"content":"    public static final Remark EMPTY_REMARK \u003d new Remark(\"\");","lastModifiedDate":"2023-09-28"},{"lineNumber":28,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static Person[] getSamplePersons() {","lastModifiedDate":"2016-12-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return new Person[]{","lastModifiedDate":"2016-12-20"},{"lineNumber":31,"author":{"gitId":"suryanshkushwaha"},"content":"            new Person(","lastModifiedDate":"2023-10-23"},{"lineNumber":32,"author":{"gitId":"suryanshkushwaha"},"content":"                new Name(\"Alex Yeoh\"),","lastModifiedDate":"2023-10-23"},{"lineNumber":33,"author":{"gitId":"suryanshkushwaha"},"content":"                new Phone(\"87438807\"),","lastModifiedDate":"2023-10-23"},{"lineNumber":34,"author":{"gitId":"brendanneojw"},"content":"                new Email(\"alexyeoh@gmail.com\"),","lastModifiedDate":"2023-11-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                new Address(\"Blk 30 Geylang Street 29, #06-40\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":36,"author":{"gitId":"brendanneojw"},"content":"                getTagSet(\"friend\"),","lastModifiedDate":"2023-11-12"},{"lineNumber":37,"author":{"gitId":"suryanshkushwaha"},"content":"                new Nric(\"023A\"),","lastModifiedDate":"2023-10-23"},{"lineNumber":38,"author":{"gitId":"suryanshkushwaha"},"content":"                new LicencePlate(\"SNB9538E\"),","lastModifiedDate":"2023-10-23"},{"lineNumber":39,"author":{"gitId":"brendanneojw"},"content":"                new Remark(\"Wants cheap policies!\"),","lastModifiedDate":"2023-11-12"},{"lineNumber":40,"author":{"gitId":"suryanshkushwaha"},"content":"                new Policy(","lastModifiedDate":"2023-10-23"},{"lineNumber":41,"author":{"gitId":"brendanneojw"},"content":"                    new Company(\"NTUC Income\"),","lastModifiedDate":"2023-11-12"},{"lineNumber":42,"author":{"gitId":"brendanneojw"},"content":"                    new PolicyNumber(\"NI11235\"),","lastModifiedDate":"2023-11-12"},{"lineNumber":43,"author":{"gitId":"brendanneojw"},"content":"                    new PolicyDate(\"11-11-2023\"),","lastModifiedDate":"2023-11-12"},{"lineNumber":44,"author":{"gitId":"brendanneojw"},"content":"                    new PolicyDate(\"11-11-2024\")","lastModifiedDate":"2023-11-12"},{"lineNumber":45,"author":{"gitId":"suryanshkushwaha"},"content":"                )","lastModifiedDate":"2023-10-23"},{"lineNumber":46,"author":{"gitId":"suryanshkushwaha"},"content":"            ),","lastModifiedDate":"2023-10-23"},{"lineNumber":47,"author":{"gitId":"suryanshkushwaha"},"content":"            new Person(","lastModifiedDate":"2023-10-23"},{"lineNumber":48,"author":{"gitId":"suryanshkushwaha"},"content":"                new Name(\"Bernice Yu\"),","lastModifiedDate":"2023-10-23"},{"lineNumber":49,"author":{"gitId":"suryanshkushwaha"},"content":"                new Phone(\"99272758\"),","lastModifiedDate":"2023-10-23"},{"lineNumber":50,"author":{"gitId":"brendanneojw"},"content":"                new Email(\"berniceyu@gmail.com\"),","lastModifiedDate":"2023-11-12"},{"lineNumber":51,"author":{"gitId":"brendanneojw"},"content":"                new Address(\"Blk 30 Woodleigh Crescent, #07-18\"),","lastModifiedDate":"2023-11-14"},{"lineNumber":52,"author":{"gitId":"suryanshkushwaha"},"content":"                getTagSet(\"colleagues\", \"friends\"),","lastModifiedDate":"2023-10-23"},{"lineNumber":53,"author":{"gitId":"suryanshkushwaha"},"content":"                new Nric(\"362D\"),","lastModifiedDate":"2023-10-23"},{"lineNumber":54,"author":{"gitId":"brendanneojw"},"content":"                new LicencePlate(\"SLR5694E\"),","lastModifiedDate":"2023-11-12"},{"lineNumber":55,"author":{"gitId":"brendanneojw"},"content":"                new Remark(\"Friends for 4 years! Likes to hang out\"),","lastModifiedDate":"2023-11-12"},{"lineNumber":56,"author":{"gitId":"suryanshkushwaha"},"content":"                new Policy(","lastModifiedDate":"2023-10-23"},{"lineNumber":57,"author":{"gitId":"brendanneojw"},"content":"                    new Company(\"AXA Insurance\"),","lastModifiedDate":"2023-11-12"},{"lineNumber":58,"author":{"gitId":"brendanneojw"},"content":"                    new PolicyNumber(\"AI38495\"),","lastModifiedDate":"2023-11-12"},{"lineNumber":59,"author":{"gitId":"brendanneojw"},"content":"                    new PolicyDate(\"11-10-2023\"),","lastModifiedDate":"2023-11-12"},{"lineNumber":60,"author":{"gitId":"brendanneojw"},"content":"                    new PolicyDate(\"11-10-2024\")","lastModifiedDate":"2023-11-12"},{"lineNumber":61,"author":{"gitId":"suryanshkushwaha"},"content":"                )","lastModifiedDate":"2023-10-23"},{"lineNumber":62,"author":{"gitId":"suryanshkushwaha"},"content":"            ),","lastModifiedDate":"2023-10-23"},{"lineNumber":63,"author":{"gitId":"suryanshkushwaha"},"content":"            new Person(","lastModifiedDate":"2023-10-23"},{"lineNumber":64,"author":{"gitId":"brendanneojw"},"content":"                new Name(\"Eva Ng\"),","lastModifiedDate":"2023-11-12"},{"lineNumber":65,"author":{"gitId":"brendanneojw"},"content":"                new Phone(\"89326549\"),","lastModifiedDate":"2023-11-12"},{"lineNumber":66,"author":{"gitId":"brendanneojw"},"content":"                new Email(\"evang@example.com\"),","lastModifiedDate":"2023-11-12"},{"lineNumber":67,"author":{"gitId":"brendanneojw"},"content":"                new Address(\"Blk 101 Bukit Timah Road, #15-20\"),","lastModifiedDate":"2023-11-12"},{"lineNumber":68,"author":{"gitId":"suryanshkushwaha"},"content":"                getTagSet(\"neighbours\"),","lastModifiedDate":"2023-10-23"},{"lineNumber":69,"author":{"gitId":"brendanneojw"},"content":"                new Nric(\"123A\"),","lastModifiedDate":"2023-11-12"},{"lineNumber":70,"author":{"gitId":"brendanneojw"},"content":"                new LicencePlate(\"SGP6535A\"),","lastModifiedDate":"2023-11-12"},{"lineNumber":71,"author":{"gitId":"brendanneojw"},"content":"                new Remark(\"Neighbours at current residence for 15 years already!\"),","lastModifiedDate":"2023-11-12"},{"lineNumber":72,"author":{"gitId":"suryanshkushwaha"},"content":"                new Policy(","lastModifiedDate":"2023-10-23"},{"lineNumber":73,"author":{"gitId":"brendanneojw"},"content":"                    new Company(\"HSBC Insurance\"),","lastModifiedDate":"2023-11-12"},{"lineNumber":74,"author":{"gitId":"brendanneojw"},"content":"                    new PolicyNumber(\"HI23593\"),","lastModifiedDate":"2023-11-12"},{"lineNumber":75,"author":{"gitId":"brendanneojw"},"content":"                    new PolicyDate(\"30-12-2022\"),","lastModifiedDate":"2023-11-12"},{"lineNumber":76,"author":{"gitId":"brendanneojw"},"content":"                    new PolicyDate(\"30-12-2023\")","lastModifiedDate":"2023-11-12"},{"lineNumber":77,"author":{"gitId":"suryanshkushwaha"},"content":"                )","lastModifiedDate":"2023-10-23"},{"lineNumber":78,"author":{"gitId":"suryanshkushwaha"},"content":"            ),","lastModifiedDate":"2023-10-23"},{"lineNumber":79,"author":{"gitId":"suryanshkushwaha"},"content":"            new Person(","lastModifiedDate":"2023-10-23"},{"lineNumber":80,"author":{"gitId":"suryanshkushwaha"},"content":"                new Name(\"David Li\"),","lastModifiedDate":"2023-10-23"},{"lineNumber":81,"author":{"gitId":"suryanshkushwaha"},"content":"                new Phone(\"91031282\"),","lastModifiedDate":"2023-10-23"},{"lineNumber":82,"author":{"gitId":"brendanneojw"},"content":"                new Email(\"lidavid@outlook.com\"),","lastModifiedDate":"2023-11-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                new Address(\"Blk 436 Serangoon Gardens Street 26, #16-43\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":84,"author":{"gitId":"suryanshkushwaha"},"content":"                getTagSet(\"family\"),","lastModifiedDate":"2023-10-23"},{"lineNumber":85,"author":{"gitId":"suryanshkushwaha"},"content":"                new Nric(\"362D\"),","lastModifiedDate":"2023-10-23"},{"lineNumber":86,"author":{"gitId":"suryanshkushwaha"},"content":"                new LicencePlate(\"SDN5345A\"),","lastModifiedDate":"2023-10-23"},{"lineNumber":87,"author":{"gitId":"cyaoxuan"},"content":"                EMPTY_REMARK,","lastModifiedDate":"2023-11-01"},{"lineNumber":88,"author":{"gitId":"suryanshkushwaha"},"content":"                new Policy(","lastModifiedDate":"2023-10-23"},{"lineNumber":89,"author":{"gitId":"brendanneojw"},"content":"                    new Company(Company.DEFAULT_VALUE),","lastModifiedDate":"2023-10-24"},{"lineNumber":90,"author":{"gitId":"suryanshkushwaha"},"content":"                    new PolicyNumber(PolicyNumber.DEFAULT_VALUE),","lastModifiedDate":"2023-10-23"},{"lineNumber":91,"author":{"gitId":"suryanshkushwaha"},"content":"                    new PolicyDate(PolicyDate.DEFAULT_VALUE),","lastModifiedDate":"2023-10-23"},{"lineNumber":92,"author":{"gitId":"suryanshkushwaha"},"content":"                    new PolicyDate(PolicyDate.DEFAULT_VALUE)","lastModifiedDate":"2023-10-23"},{"lineNumber":93,"author":{"gitId":"suryanshkushwaha"},"content":"                )","lastModifiedDate":"2023-10-23"},{"lineNumber":94,"author":{"gitId":"suryanshkushwaha"},"content":"            ),","lastModifiedDate":"2023-10-23"},{"lineNumber":95,"author":{"gitId":"suryanshkushwaha"},"content":"            new Person(","lastModifiedDate":"2023-10-23"},{"lineNumber":96,"author":{"gitId":"suryanshkushwaha"},"content":"                new Name(\"Irfan Ibrahim\"),","lastModifiedDate":"2023-10-23"},{"lineNumber":97,"author":{"gitId":"suryanshkushwaha"},"content":"                new Phone(\"92492021\"),","lastModifiedDate":"2023-10-23"},{"lineNumber":98,"author":{"gitId":"brendanneojw"},"content":"                new Email(\"irfan@gmail.com\"),","lastModifiedDate":"2023-11-12"},{"lineNumber":99,"author":{"gitId":"-"},"content":"                new Address(\"Blk 47 Tampines Street 20, #17-35\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":100,"author":{"gitId":"suryanshkushwaha"},"content":"                getTagSet(\"classmates\"),","lastModifiedDate":"2023-10-23"},{"lineNumber":101,"author":{"gitId":"suryanshkushwaha"},"content":"                new Nric(\"752X\"),","lastModifiedDate":"2023-10-23"},{"lineNumber":102,"author":{"gitId":"brendanneojw"},"content":"                new LicencePlate(\"SBP5950T\"),","lastModifiedDate":"2023-11-12"},{"lineNumber":103,"author":{"gitId":"brendanneojw"},"content":"                new Remark(\"Classmate from high school\"),","lastModifiedDate":"2023-11-12"},{"lineNumber":104,"author":{"gitId":"suryanshkushwaha"},"content":"                new Policy(","lastModifiedDate":"2023-10-23"},{"lineNumber":105,"author":{"gitId":"brendanneojw"},"content":"                    new Company(\"NTUC Income\"),","lastModifiedDate":"2023-11-12"},{"lineNumber":106,"author":{"gitId":"brendanneojw"},"content":"                    new PolicyNumber(\"NI294759\"),","lastModifiedDate":"2023-11-12"},{"lineNumber":107,"author":{"gitId":"brendanneojw"},"content":"                    new PolicyDate(\"20-12-2022\"),","lastModifiedDate":"2023-11-12"},{"lineNumber":108,"author":{"gitId":"brendanneojw"},"content":"                    new PolicyDate(\"20-12-2023\")","lastModifiedDate":"2023-11-12"},{"lineNumber":109,"author":{"gitId":"suryanshkushwaha"},"content":"                )","lastModifiedDate":"2023-10-23"},{"lineNumber":110,"author":{"gitId":"suryanshkushwaha"},"content":"            ),","lastModifiedDate":"2023-10-23"},{"lineNumber":111,"author":{"gitId":"suryanshkushwaha"},"content":"            new Person(","lastModifiedDate":"2023-10-23"},{"lineNumber":112,"author":{"gitId":"suryanshkushwaha"},"content":"                new Name(\"Roy Balakrishnan\"),","lastModifiedDate":"2023-10-23"},{"lineNumber":113,"author":{"gitId":"suryanshkushwaha"},"content":"                new Phone(\"92624417\"),","lastModifiedDate":"2023-10-23"},{"lineNumber":114,"author":{"gitId":"brendanneojw"},"content":"                new Email(\"royb@yahoo.com\"),","lastModifiedDate":"2023-11-12"},{"lineNumber":115,"author":{"gitId":"-"},"content":"                new Address(\"Blk 45 Aljunied Street 85, #11-31\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":116,"author":{"gitId":"suryanshkushwaha"},"content":"                getTagSet(\"colleagues\"),","lastModifiedDate":"2023-10-23"},{"lineNumber":117,"author":{"gitId":"suryanshkushwaha"},"content":"                new Nric(\"764J\"),","lastModifiedDate":"2023-10-23"},{"lineNumber":118,"author":{"gitId":"suryanshkushwaha"},"content":"                new LicencePlate(\"SJD6453Y\"),","lastModifiedDate":"2023-10-23"},{"lineNumber":119,"author":{"gitId":"brendanneojw"},"content":"                new Remark(\"Colleagues since 2 years ago\"),","lastModifiedDate":"2023-11-12"},{"lineNumber":120,"author":{"gitId":"suryanshkushwaha"},"content":"                new Policy(","lastModifiedDate":"2023-10-23"},{"lineNumber":121,"author":{"gitId":"brendanneojw"},"content":"                    new Company(Company.DEFAULT_VALUE),","lastModifiedDate":"2023-10-24"},{"lineNumber":122,"author":{"gitId":"suryanshkushwaha"},"content":"                    new PolicyNumber(PolicyNumber.DEFAULT_VALUE),","lastModifiedDate":"2023-10-23"},{"lineNumber":123,"author":{"gitId":"suryanshkushwaha"},"content":"                    new PolicyDate(PolicyDate.DEFAULT_VALUE),","lastModifiedDate":"2023-10-23"},{"lineNumber":124,"author":{"gitId":"suryanshkushwaha"},"content":"                    new PolicyDate(PolicyDate.DEFAULT_VALUE)","lastModifiedDate":"2023-10-23"},{"lineNumber":125,"author":{"gitId":"suryanshkushwaha"},"content":"                )","lastModifiedDate":"2023-10-23"},{"lineNumber":126,"author":{"gitId":"brendanneojw"},"content":"            ),","lastModifiedDate":"2023-10-26"},{"lineNumber":127,"author":{"gitId":"brendanneojw"},"content":"            new Person(","lastModifiedDate":"2023-10-26"},{"lineNumber":128,"author":{"gitId":"brendanneojw"},"content":"                new Name(\"Amirah Abdullah\"),","lastModifiedDate":"2023-11-12"},{"lineNumber":129,"author":{"gitId":"brendanneojw"},"content":"                new Phone(\"86532542\"),","lastModifiedDate":"2023-11-12"},{"lineNumber":130,"author":{"gitId":"brendanneojw"},"content":"                new Email(\"amirah@gmail.com.com\"),","lastModifiedDate":"2023-11-12"},{"lineNumber":131,"author":{"gitId":"brendanneojw"},"content":"                new Address(\"Blk 456 Serangoon Avenue 3, #05-12\"),","lastModifiedDate":"2023-10-26"},{"lineNumber":132,"author":{"gitId":"brendanneojw"},"content":"                getTagSet(\"colleagues\"),","lastModifiedDate":"2023-10-26"},{"lineNumber":133,"author":{"gitId":"brendanneojw"},"content":"                new Nric(\"456B\"),","lastModifiedDate":"2023-10-26"},{"lineNumber":134,"author":{"gitId":"brendanneojw"},"content":"                new LicencePlate(\"SGP5678Y\"),","lastModifiedDate":"2023-10-26"},{"lineNumber":135,"author":{"gitId":"cyaoxuan"},"content":"                EMPTY_REMARK,","lastModifiedDate":"2023-11-01"},{"lineNumber":136,"author":{"gitId":"brendanneojw"},"content":"                new Policy(","lastModifiedDate":"2023-10-26"},{"lineNumber":137,"author":{"gitId":"brendanneojw"},"content":"                    new Company(\"DirectAsia Insurance\"),","lastModifiedDate":"2023-11-12"},{"lineNumber":138,"author":{"gitId":"brendanneojw"},"content":"                    new PolicyNumber(\"DI149503\"),","lastModifiedDate":"2023-11-12"},{"lineNumber":139,"author":{"gitId":"brendanneojw"},"content":"                    new PolicyDate(\"15-06-2023\"),","lastModifiedDate":"2023-10-26"},{"lineNumber":140,"author":{"gitId":"brendanneojw"},"content":"                    new PolicyDate(\"15-06-2024\")","lastModifiedDate":"2023-10-26"},{"lineNumber":141,"author":{"gitId":"brendanneojw"},"content":"                )","lastModifiedDate":"2023-10-26"},{"lineNumber":142,"author":{"gitId":"brendanneojw"},"content":"            ),","lastModifiedDate":"2023-10-26"},{"lineNumber":143,"author":{"gitId":"brendanneojw"},"content":"            new Person(","lastModifiedDate":"2023-10-26"},{"lineNumber":144,"author":{"gitId":"brendanneojw"},"content":"                new Name(\"Raj Kumar\"),","lastModifiedDate":"2023-11-12"},{"lineNumber":145,"author":{"gitId":"brendanneojw"},"content":"                new Phone(\"93653498\"),","lastModifiedDate":"2023-11-12"},{"lineNumber":146,"author":{"gitId":"brendanneojw"},"content":"                new Email(\"rkumar@gmail.com\"),","lastModifiedDate":"2023-11-12"},{"lineNumber":147,"author":{"gitId":"brendanneojw"},"content":"                new Address(\"Blk 789 Orchard Road, #10-15\"),","lastModifiedDate":"2023-10-26"},{"lineNumber":148,"author":{"gitId":"brendanneojw"},"content":"                getTagSet(\"friends\"),","lastModifiedDate":"2023-10-26"},{"lineNumber":149,"author":{"gitId":"brendanneojw"},"content":"                new Nric(\"567C\"),","lastModifiedDate":"2023-10-26"},{"lineNumber":150,"author":{"gitId":"brendanneojw"},"content":"                new LicencePlate(\"SGP6789Z\"),","lastModifiedDate":"2023-10-26"},{"lineNumber":151,"author":{"gitId":"cyaoxuan"},"content":"                EMPTY_REMARK,","lastModifiedDate":"2023-11-01"},{"lineNumber":152,"author":{"gitId":"brendanneojw"},"content":"                new Policy(","lastModifiedDate":"2023-10-26"},{"lineNumber":153,"author":{"gitId":"brendanneojw"},"content":"                    new Company(\"AXA Insurance\"),","lastModifiedDate":"2023-11-12"},{"lineNumber":154,"author":{"gitId":"brendanneojw"},"content":"                    new PolicyNumber(\"AI948593\"),","lastModifiedDate":"2023-11-12"},{"lineNumber":155,"author":{"gitId":"brendanneojw"},"content":"                    new PolicyDate(\"20-07-2023\"),","lastModifiedDate":"2023-10-26"},{"lineNumber":156,"author":{"gitId":"brendanneojw"},"content":"                    new PolicyDate(\"20-07-2024\")","lastModifiedDate":"2023-10-26"},{"lineNumber":157,"author":{"gitId":"brendanneojw"},"content":"                )","lastModifiedDate":"2023-10-26"},{"lineNumber":158,"author":{"gitId":"brendanneojw"},"content":"            ),","lastModifiedDate":"2023-10-26"},{"lineNumber":159,"author":{"gitId":"brendanneojw"},"content":"            new Person(","lastModifiedDate":"2023-10-26"},{"lineNumber":160,"author":{"gitId":"brendanneojw"},"content":"                new Name(\"Noor Muhammad\"),","lastModifiedDate":"2023-11-12"},{"lineNumber":161,"author":{"gitId":"brendanneojw"},"content":"                new Phone(\"93210283\"),","lastModifiedDate":"2023-11-12"},{"lineNumber":162,"author":{"gitId":"brendanneojw"},"content":"                new Email(\"noormuhammad@yahoo.com\"),","lastModifiedDate":"2023-11-12"},{"lineNumber":163,"author":{"gitId":"brendanneojw"},"content":"                new Address(\"Blk 11 Ang Mo Kio Street 74, #11-04\"),","lastModifiedDate":"2023-11-12"},{"lineNumber":164,"author":{"gitId":"brendanneojw"},"content":"                getTagSet(\"friends\"),","lastModifiedDate":"2023-11-12"},{"lineNumber":165,"author":{"gitId":"brendanneojw"},"content":"                new Nric(\"743G\"),","lastModifiedDate":"2023-11-12"},{"lineNumber":166,"author":{"gitId":"brendanneojw"},"content":"                new LicencePlate(\"SBA8473A\"),","lastModifiedDate":"2023-11-12"},{"lineNumber":167,"author":{"gitId":"cyaoxuan"},"content":"                EMPTY_REMARK,","lastModifiedDate":"2023-11-01"},{"lineNumber":168,"author":{"gitId":"brendanneojw"},"content":"                new Policy(","lastModifiedDate":"2023-10-26"},{"lineNumber":169,"author":{"gitId":"brendanneojw"},"content":"                    new Company(\"NTUC Income\"),","lastModifiedDate":"2023-11-12"},{"lineNumber":170,"author":{"gitId":"brendanneojw"},"content":"                    new PolicyNumber(\"NI49383\"),","lastModifiedDate":"2023-11-12"},{"lineNumber":171,"author":{"gitId":"brendanneojw"},"content":"                    new PolicyDate(\"20-12-2022\"),","lastModifiedDate":"2023-11-12"},{"lineNumber":172,"author":{"gitId":"brendanneojw"},"content":"                    new PolicyDate(\"20-12-2023\")","lastModifiedDate":"2023-11-12"},{"lineNumber":173,"author":{"gitId":"brendanneojw"},"content":"                )","lastModifiedDate":"2023-10-26"},{"lineNumber":174,"author":{"gitId":"brendanneojw"},"content":"            ),","lastModifiedDate":"2023-11-14"},{"lineNumber":175,"author":{"gitId":"brendanneojw"},"content":"            new Person(","lastModifiedDate":"2023-11-14"},{"lineNumber":176,"author":{"gitId":"brendanneojw"},"content":"                new Name(\"Noor Muhammad\"),","lastModifiedDate":"2023-11-14"},{"lineNumber":177,"author":{"gitId":"brendanneojw"},"content":"                new Phone(\"93210283\"),","lastModifiedDate":"2023-11-14"},{"lineNumber":178,"author":{"gitId":"brendanneojw"},"content":"                new Email(\"noormuhammad@yahoo.com\"),","lastModifiedDate":"2023-11-14"},{"lineNumber":179,"author":{"gitId":"brendanneojw"},"content":"                new Address(\"Blk 11 Ang Mo Kio Street 74, #11-04\"),","lastModifiedDate":"2023-11-14"},{"lineNumber":180,"author":{"gitId":"brendanneojw"},"content":"                getTagSet(\"friends\"),","lastModifiedDate":"2023-11-14"},{"lineNumber":181,"author":{"gitId":"brendanneojw"},"content":"                new Nric(\"743G\"),","lastModifiedDate":"2023-11-14"},{"lineNumber":182,"author":{"gitId":"brendanneojw"},"content":"                new LicencePlate(\"SLA2958R\"),","lastModifiedDate":"2023-11-14"},{"lineNumber":183,"author":{"gitId":"brendanneojw"},"content":"                EMPTY_REMARK,","lastModifiedDate":"2023-11-14"},{"lineNumber":184,"author":{"gitId":"brendanneojw"},"content":"                new Policy(","lastModifiedDate":"2023-11-14"},{"lineNumber":185,"author":{"gitId":"brendanneojw"},"content":"                    new Company(\"NTUC Income\"),","lastModifiedDate":"2023-11-14"},{"lineNumber":186,"author":{"gitId":"brendanneojw"},"content":"                    new PolicyNumber(\"NI56978\"),","lastModifiedDate":"2023-11-14"},{"lineNumber":187,"author":{"gitId":"brendanneojw"},"content":"                    new PolicyDate(\"20-12-2022\"),","lastModifiedDate":"2023-11-14"},{"lineNumber":188,"author":{"gitId":"brendanneojw"},"content":"                    new PolicyDate(\"20-12-2023\")","lastModifiedDate":"2023-11-14"},{"lineNumber":189,"author":{"gitId":"brendanneojw"},"content":"                )","lastModifiedDate":"2023-11-14"},{"lineNumber":190,"author":{"gitId":"brendanneojw"},"content":"            ),","lastModifiedDate":"2023-11-14"},{"lineNumber":191,"author":{"gitId":"brendanneojw"},"content":"            new Person(","lastModifiedDate":"2023-11-14"},{"lineNumber":192,"author":{"gitId":"brendanneojw"},"content":"                new Name(\"Ella Lim\"),","lastModifiedDate":"2023-11-14"},{"lineNumber":193,"author":{"gitId":"brendanneojw"},"content":"                new Phone(\"96535879\"),","lastModifiedDate":"2023-11-14"},{"lineNumber":194,"author":{"gitId":"brendanneojw"},"content":"                new Email(\"ella.l@gmail.com\"),","lastModifiedDate":"2023-11-14"},{"lineNumber":195,"author":{"gitId":"brendanneojw"},"content":"                new Address(\"Blk 101 Bukit Panjang Road, #06-18\"),","lastModifiedDate":"2023-11-14"},{"lineNumber":196,"author":{"gitId":"brendanneojw"},"content":"                getTagSet(\"friends\", \"dancing\"),","lastModifiedDate":"2023-11-14"},{"lineNumber":197,"author":{"gitId":"brendanneojw"},"content":"                new Nric(\"901X\"),","lastModifiedDate":"2023-11-14"},{"lineNumber":198,"author":{"gitId":"brendanneojw"},"content":"                new LicencePlate(\"SGP9012Y\"),","lastModifiedDate":"2023-11-14"},{"lineNumber":199,"author":{"gitId":"brendanneojw"},"content":"                new Remark(\"Sometimes comes to office\"),","lastModifiedDate":"2023-11-14"},{"lineNumber":200,"author":{"gitId":"brendanneojw"},"content":"                new Policy(","lastModifiedDate":"2023-11-14"},{"lineNumber":201,"author":{"gitId":"brendanneojw"},"content":"                    new Company(\"AXA Insurance\"),","lastModifiedDate":"2023-11-14"},{"lineNumber":202,"author":{"gitId":"brendanneojw"},"content":"                    new PolicyNumber(\"AI485967\"),","lastModifiedDate":"2023-11-14"},{"lineNumber":203,"author":{"gitId":"brendanneojw"},"content":"                    new PolicyDate(\"11-10-2023\"),","lastModifiedDate":"2023-11-14"},{"lineNumber":204,"author":{"gitId":"brendanneojw"},"content":"                    new PolicyDate(\"11-10-2024\")","lastModifiedDate":"2023-11-14"},{"lineNumber":205,"author":{"gitId":"brendanneojw"},"content":"                )","lastModifiedDate":"2023-11-14"},{"lineNumber":206,"author":{"gitId":"brendanneojw"},"content":"            ),","lastModifiedDate":"2023-11-14"},{"lineNumber":207,"author":{"gitId":"brendanneojw"},"content":"            new Person(","lastModifiedDate":"2023-11-14"},{"lineNumber":208,"author":{"gitId":"brendanneojw"},"content":"                new Name(\"Zack Lim\"),","lastModifiedDate":"2023-11-14"},{"lineNumber":209,"author":{"gitId":"brendanneojw"},"content":"                new Phone(\"83246842\"),","lastModifiedDate":"2023-11-14"},{"lineNumber":210,"author":{"gitId":"brendanneojw"},"content":"                new Email(\"zack.l@yahoo.com\"),","lastModifiedDate":"2023-11-14"},{"lineNumber":211,"author":{"gitId":"brendanneojw"},"content":"                new Address(\"Blk 101 Sengkang East Ave, #09-11\"),","lastModifiedDate":"2023-11-14"},{"lineNumber":212,"author":{"gitId":"brendanneojw"},"content":"                getTagSet(\"friends\", \"gaming\"),","lastModifiedDate":"2023-11-14"},{"lineNumber":213,"author":{"gitId":"brendanneojw"},"content":"                new Nric(\"901Z\"),","lastModifiedDate":"2023-11-14"},{"lineNumber":214,"author":{"gitId":"brendanneojw"},"content":"                new LicencePlate(\"SGP9012P\"),","lastModifiedDate":"2023-11-14"},{"lineNumber":215,"author":{"gitId":"brendanneojw"},"content":"                EMPTY_REMARK,","lastModifiedDate":"2023-11-14"},{"lineNumber":216,"author":{"gitId":"brendanneojw"},"content":"                new Policy(","lastModifiedDate":"2023-11-14"},{"lineNumber":217,"author":{"gitId":"brendanneojw"},"content":"                    new Company(\"DirectAsia Insurance\"),","lastModifiedDate":"2023-11-14"},{"lineNumber":218,"author":{"gitId":"brendanneojw"},"content":"                    new PolicyNumber(\"DI486096\"),","lastModifiedDate":"2023-11-14"},{"lineNumber":219,"author":{"gitId":"brendanneojw"},"content":"                    new PolicyDate(\"30-01-2023\"),","lastModifiedDate":"2023-11-14"},{"lineNumber":220,"author":{"gitId":"brendanneojw"},"content":"                    new PolicyDate(\"30-01-2024\")","lastModifiedDate":"2023-11-14"},{"lineNumber":221,"author":{"gitId":"brendanneojw"},"content":"                )","lastModifiedDate":"2023-11-14"},{"lineNumber":222,"author":{"gitId":"brendanneojw"},"content":"            ),","lastModifiedDate":"2023-11-14"},{"lineNumber":223,"author":{"gitId":"brendanneojw"},"content":"            new Person(","lastModifiedDate":"2023-11-14"},{"lineNumber":224,"author":{"gitId":"brendanneojw"},"content":"                new Name(\"Nora Tan\"),","lastModifiedDate":"2023-11-14"},{"lineNumber":225,"author":{"gitId":"brendanneojw"},"content":"                new Phone(\"83565945\"),","lastModifiedDate":"2023-11-14"},{"lineNumber":226,"author":{"gitId":"brendanneojw"},"content":"                new Email(\"nora.t@outlook.com\"),","lastModifiedDate":"2023-11-14"},{"lineNumber":227,"author":{"gitId":"brendanneojw"},"content":"                new Address(\"Blk 303 Tampines St 32, #15-14\"),","lastModifiedDate":"2023-11-14"},{"lineNumber":228,"author":{"gitId":"brendanneojw"},"content":"                getTagSet(\"friends\", \"cooking\"),","lastModifiedDate":"2023-11-14"},{"lineNumber":229,"author":{"gitId":"brendanneojw"},"content":"                new Nric(\"678P\"),","lastModifiedDate":"2023-11-14"},{"lineNumber":230,"author":{"gitId":"brendanneojw"},"content":"                new LicencePlate(\"SGP6789A\"),","lastModifiedDate":"2023-11-14"},{"lineNumber":231,"author":{"gitId":"brendanneojw"},"content":"                new Remark(\"Always goes for cooking class\"),","lastModifiedDate":"2023-11-14"},{"lineNumber":232,"author":{"gitId":"brendanneojw"},"content":"                new Policy(","lastModifiedDate":"2023-11-14"},{"lineNumber":233,"author":{"gitId":"brendanneojw"},"content":"                    new Company(\"NTUC Income\"),","lastModifiedDate":"2023-11-14"},{"lineNumber":234,"author":{"gitId":"brendanneojw"},"content":"                    new PolicyNumber(\"NI846794\"),","lastModifiedDate":"2023-11-14"},{"lineNumber":235,"author":{"gitId":"brendanneojw"},"content":"                    new PolicyDate(\"14-06-2023\"),","lastModifiedDate":"2023-11-14"},{"lineNumber":236,"author":{"gitId":"brendanneojw"},"content":"                    new PolicyDate(\"14-06-2024\")","lastModifiedDate":"2023-11-14"},{"lineNumber":237,"author":{"gitId":"brendanneojw"},"content":"                )","lastModifiedDate":"2023-11-14"},{"lineNumber":238,"author":{"gitId":"brendanneojw"},"content":"            ),","lastModifiedDate":"2023-11-14"},{"lineNumber":239,"author":{"gitId":"brendanneojw"},"content":"            new Person(","lastModifiedDate":"2023-11-14"},{"lineNumber":240,"author":{"gitId":"brendanneojw"},"content":"                new Name(\"Ananya Sharma\"),","lastModifiedDate":"2023-11-14"},{"lineNumber":241,"author":{"gitId":"brendanneojw"},"content":"                new Phone(\"96586435\"),","lastModifiedDate":"2023-11-14"},{"lineNumber":242,"author":{"gitId":"brendanneojw"},"content":"                new Email(\"ananya.s@gmail.com\"),","lastModifiedDate":"2023-11-14"},{"lineNumber":243,"author":{"gitId":"brendanneojw"},"content":"                new Address(\"Blk 505 Clementi Ave 1, #12-09\"),","lastModifiedDate":"2023-11-14"},{"lineNumber":244,"author":{"gitId":"brendanneojw"},"content":"                getTagSet(\"friends\", \"yoga\"),","lastModifiedDate":"2023-11-14"},{"lineNumber":245,"author":{"gitId":"brendanneojw"},"content":"                new Nric(\"567D\"),","lastModifiedDate":"2023-11-14"},{"lineNumber":246,"author":{"gitId":"brendanneojw"},"content":"                new LicencePlate(\"SGP5678E\"),","lastModifiedDate":"2023-11-14"},{"lineNumber":247,"author":{"gitId":"brendanneojw"},"content":"                EMPTY_REMARK,","lastModifiedDate":"2023-11-14"},{"lineNumber":248,"author":{"gitId":"brendanneojw"},"content":"                new Policy(","lastModifiedDate":"2023-11-14"},{"lineNumber":249,"author":{"gitId":"brendanneojw"},"content":"                    new Company(\"NTUC Income\"),","lastModifiedDate":"2023-11-14"},{"lineNumber":250,"author":{"gitId":"brendanneojw"},"content":"                    new PolicyNumber(\"NI586978\"),","lastModifiedDate":"2023-11-14"},{"lineNumber":251,"author":{"gitId":"brendanneojw"},"content":"                    new PolicyDate(\"12-09-2023\"),","lastModifiedDate":"2023-11-14"},{"lineNumber":252,"author":{"gitId":"brendanneojw"},"content":"                    new PolicyDate(\"12-09-2024\")","lastModifiedDate":"2023-11-14"},{"lineNumber":253,"author":{"gitId":"brendanneojw"},"content":"                )","lastModifiedDate":"2023-11-14"},{"lineNumber":254,"author":{"gitId":"brendanneojw"},"content":"            ),","lastModifiedDate":"2023-11-14"},{"lineNumber":255,"author":{"gitId":"brendanneojw"},"content":"            new Person(","lastModifiedDate":"2023-11-14"},{"lineNumber":256,"author":{"gitId":"brendanneojw"},"content":"                new Name(\"Vikram Singh\"),","lastModifiedDate":"2023-11-14"},{"lineNumber":257,"author":{"gitId":"brendanneojw"},"content":"                new Phone(\"96326975\"),","lastModifiedDate":"2023-11-14"},{"lineNumber":258,"author":{"gitId":"brendanneojw"},"content":"                new Email(\"vikram.s@outlook.com\"),","lastModifiedDate":"2023-11-14"},{"lineNumber":259,"author":{"gitId":"brendanneojw"},"content":"                new Address(\"Blk 101 Little India Road, #09-15\"),","lastModifiedDate":"2023-11-14"},{"lineNumber":260,"author":{"gitId":"brendanneojw"},"content":"                getTagSet(\"friends\", \"cricket\"),","lastModifiedDate":"2023-11-14"},{"lineNumber":261,"author":{"gitId":"brendanneojw"},"content":"                new Nric(\"678G\"),","lastModifiedDate":"2023-11-14"},{"lineNumber":262,"author":{"gitId":"brendanneojw"},"content":"                new LicencePlate(\"SGP6789H\"),","lastModifiedDate":"2023-11-14"},{"lineNumber":263,"author":{"gitId":"brendanneojw"},"content":"                new Remark(\"Likes to hang out\"),","lastModifiedDate":"2023-11-14"},{"lineNumber":264,"author":{"gitId":"brendanneojw"},"content":"                new Policy(","lastModifiedDate":"2023-11-14"},{"lineNumber":265,"author":{"gitId":"brendanneojw"},"content":"                    new Company(\"AXA Insurance\"),","lastModifiedDate":"2023-11-14"},{"lineNumber":266,"author":{"gitId":"brendanneojw"},"content":"                    new PolicyNumber(\"AI569574\"),","lastModifiedDate":"2023-11-14"},{"lineNumber":267,"author":{"gitId":"brendanneojw"},"content":"                    new PolicyDate(\"29-04-2023\"),","lastModifiedDate":"2023-11-14"},{"lineNumber":268,"author":{"gitId":"brendanneojw"},"content":"                    new PolicyDate(\"29-04-2024\")","lastModifiedDate":"2023-11-14"},{"lineNumber":269,"author":{"gitId":"brendanneojw"},"content":"                )","lastModifiedDate":"2023-11-14"},{"lineNumber":270,"author":{"gitId":"suryanshkushwaha"},"content":"            )","lastModifiedDate":"2023-10-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":272,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    public static ReadOnlyAddressBook getSampleAddressBook() {","lastModifiedDate":"2016-12-20"},{"lineNumber":275,"author":{"gitId":"-"},"content":"        AddressBook sampleAb \u003d new AddressBook();","lastModifiedDate":"2017-04-07"},{"lineNumber":276,"author":{"gitId":"-"},"content":"        for (Person samplePerson : getSamplePersons()) {","lastModifiedDate":"2016-12-20"},{"lineNumber":277,"author":{"gitId":"-"},"content":"            sampleAb.addPerson(samplePerson);","lastModifiedDate":"2017-04-07"},{"lineNumber":278,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":279,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":282,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":283,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":284,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":286,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":287,"author":{"gitId":"-"},"content":"            .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":288,"author":{"gitId":"-"},"content":"            .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":291,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"brendanneojw":179,"suryanshkushwaha":54,"-":46,"cyaoxuan":12}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedPerson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"cyaoxuan"},"content":"import seedu.address.model.person.LicencePlate;","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"cyaoxuan"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"cyaoxuan"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2023-11-01"},{"lineNumber":21,"author":{"gitId":"suryanshkushwaha"},"content":"import seedu.address.model.policy.Company;","lastModifiedDate":"2023-10-23"},{"lineNumber":22,"author":{"gitId":"cyaoxuan"},"content":"import seedu.address.model.policy.Policy;","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"cyaoxuan"},"content":"import seedu.address.model.policy.PolicyDate;","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"cyaoxuan"},"content":"import seedu.address.model.policy.PolicyNumber;","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Person}.","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"class JsonAdaptedPerson {","lastModifiedDate":"2018-12-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Person\u0027s %s field is missing!\";","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private final String address;","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedTag\u003e tags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-09"},{"lineNumber":39,"author":{"gitId":"cyaoxuan"},"content":"    private final String nric;","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"cyaoxuan"},"content":"    private final String licencePlate;","lastModifiedDate":"2023-10-13"},{"lineNumber":41,"author":{"gitId":"cyaoxuan"},"content":"    private final String remark;","lastModifiedDate":"2023-09-28"},{"lineNumber":42,"author":{"gitId":"suryanshkushwaha"},"content":"    private final String company;","lastModifiedDate":"2023-10-23"},{"lineNumber":43,"author":{"gitId":"cyaoxuan"},"content":"    private final String policyNumber;","lastModifiedDate":"2023-10-13"},{"lineNumber":44,"author":{"gitId":"cyaoxuan"},"content":"    private final String policyIssueDate;","lastModifiedDate":"2023-10-13"},{"lineNumber":45,"author":{"gitId":"cyaoxuan"},"content":"    private final String policyExpiryDate;","lastModifiedDate":"2023-10-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            @JsonProperty(\"email\") String email, @JsonProperty(\"address\") String address,","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"cyaoxuan"},"content":"            @JsonProperty(\"tags\") List\u003cJsonAdaptedTag\u003e tags, @JsonProperty(\"nric\") String nric,","lastModifiedDate":"2023-10-13"},{"lineNumber":54,"author":{"gitId":"cyaoxuan"},"content":"            @JsonProperty(\"licencePlate\") String licencePlate, @JsonProperty(\"remark\") String remark,","lastModifiedDate":"2023-11-01"},{"lineNumber":55,"author":{"gitId":"cyaoxuan"},"content":"            @JsonProperty(\"company\") String company,","lastModifiedDate":"2023-11-01"},{"lineNumber":56,"author":{"gitId":"suryanshkushwaha"},"content":"            @JsonProperty(\"policyNumber\") String policyNumber,","lastModifiedDate":"2023-10-23"},{"lineNumber":57,"author":{"gitId":"cyaoxuan"},"content":"            @JsonProperty(\"policyIssueDate\") String policyIssueDate,","lastModifiedDate":"2023-10-13"},{"lineNumber":58,"author":{"gitId":"cyaoxuan"},"content":"            @JsonProperty(\"policyExpiryDate\") String policyExpiryDate) {","lastModifiedDate":"2023-10-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (tags !\u003d null) {","lastModifiedDate":"2023-01-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            this.tags.addAll(tags);","lastModifiedDate":"2023-01-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"cyaoxuan"},"content":"        this.nric \u003d nric;","lastModifiedDate":"2023-10-13"},{"lineNumber":67,"author":{"gitId":"cyaoxuan"},"content":"        this.licencePlate \u003d licencePlate;","lastModifiedDate":"2023-10-13"},{"lineNumber":68,"author":{"gitId":"cyaoxuan"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2023-09-28"},{"lineNumber":69,"author":{"gitId":"suryanshkushwaha"},"content":"        this.company \u003d company;","lastModifiedDate":"2023-10-23"},{"lineNumber":70,"author":{"gitId":"cyaoxuan"},"content":"        this.policyNumber \u003d policyNumber;","lastModifiedDate":"2023-10-13"},{"lineNumber":71,"author":{"gitId":"cyaoxuan"},"content":"        this.policyIssueDate \u003d policyIssueDate;","lastModifiedDate":"2023-10-13"},{"lineNumber":72,"author":{"gitId":"cyaoxuan"},"content":"        this.policyExpiryDate \u003d policyExpiryDate;","lastModifiedDate":"2023-10-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Converts a given {@code Person} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(Person source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        address \u003d source.getAddress().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        tags.addAll(source.getTags().stream()","lastModifiedDate":"2023-01-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"cyaoxuan"},"content":"        nric \u003d source.getNric().value;","lastModifiedDate":"2023-10-13"},{"lineNumber":87,"author":{"gitId":"cyaoxuan"},"content":"        licencePlate \u003d source.getLicencePlate().value;","lastModifiedDate":"2023-10-13"},{"lineNumber":88,"author":{"gitId":"cyaoxuan"},"content":"        remark \u003d source.getRemark().value;","lastModifiedDate":"2023-09-28"},{"lineNumber":89,"author":{"gitId":"cyaoxuan"},"content":"        Policy sourcePolicy \u003d source.getPolicy();","lastModifiedDate":"2023-10-13"},{"lineNumber":90,"author":{"gitId":"suryanshkushwaha"},"content":"        company \u003d sourcePolicy.getCompany().value;","lastModifiedDate":"2023-10-23"},{"lineNumber":91,"author":{"gitId":"cyaoxuan"},"content":"        policyNumber \u003d sourcePolicy.getPolicyNumber().value;","lastModifiedDate":"2023-10-13"},{"lineNumber":92,"author":{"gitId":"cyaoxuan"},"content":"        policyIssueDate \u003d sourcePolicy.getPolicyIssueDate().toString();","lastModifiedDate":"2023-10-13"},{"lineNumber":93,"author":{"gitId":"cyaoxuan"},"content":"        policyExpiryDate \u003d sourcePolicy.getPolicyExpiryDate().toString();","lastModifiedDate":"2023-10-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Person} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public Person toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        final List\u003cTag\u003e personTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        for (JsonAdaptedTag tag : tags) {","lastModifiedDate":"2023-01-09"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            personTags.add(tag.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2018-08-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2018-08-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        if (address \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(address)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        final Address modelAddress \u003d new Address(address);","lastModifiedDate":"2018-08-13"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(personTags);","lastModifiedDate":"2018-08-13"},{"lineNumber":140,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":141,"author":{"gitId":"cyaoxuan"},"content":"        if (nric \u003d\u003d null) {","lastModifiedDate":"2023-10-13"},{"lineNumber":142,"author":{"gitId":"cyaoxuan"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Nric.class.getSimpleName()));","lastModifiedDate":"2023-10-13"},{"lineNumber":143,"author":{"gitId":"cyaoxuan"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":144,"author":{"gitId":"cyaoxuan"},"content":"        if (!Nric.isValidNric(nric)) {","lastModifiedDate":"2023-10-13"},{"lineNumber":145,"author":{"gitId":"cyaoxuan"},"content":"            throw new IllegalValueException(Nric.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-13"},{"lineNumber":146,"author":{"gitId":"cyaoxuan"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":147,"author":{"gitId":"cyaoxuan"},"content":"        final Nric modelNric \u003d new Nric(nric);","lastModifiedDate":"2023-10-13"},{"lineNumber":148,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":149,"author":{"gitId":"cyaoxuan"},"content":"        if (licencePlate \u003d\u003d null) {","lastModifiedDate":"2023-10-13"},{"lineNumber":150,"author":{"gitId":"cyaoxuan"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2023-10-13"},{"lineNumber":151,"author":{"gitId":"cyaoxuan"},"content":"                    LicencePlate.class.getSimpleName()));","lastModifiedDate":"2023-10-13"},{"lineNumber":152,"author":{"gitId":"cyaoxuan"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":153,"author":{"gitId":"cyaoxuan"},"content":"        if (!LicencePlate.isValidLicencePlate(licencePlate)) {","lastModifiedDate":"2023-10-13"},{"lineNumber":154,"author":{"gitId":"cyaoxuan"},"content":"            System.out.println(LicencePlate.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-13"},{"lineNumber":155,"author":{"gitId":"cyaoxuan"},"content":"            throw new IllegalValueException(LicencePlate.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-13"},{"lineNumber":156,"author":{"gitId":"cyaoxuan"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":157,"author":{"gitId":"cyaoxuan"},"content":"        final LicencePlate modelLicencePlate \u003d new LicencePlate(licencePlate);","lastModifiedDate":"2023-10-13"},{"lineNumber":158,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":159,"author":{"gitId":"cyaoxuan"},"content":"        if (remark \u003d\u003d null) {","lastModifiedDate":"2023-11-11"},{"lineNumber":160,"author":{"gitId":"cyaoxuan"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2023-11-11"},{"lineNumber":161,"author":{"gitId":"cyaoxuan"},"content":"                    Remark.class.getSimpleName()));","lastModifiedDate":"2023-11-11"},{"lineNumber":162,"author":{"gitId":"cyaoxuan"},"content":"        }","lastModifiedDate":"2023-11-11"},{"lineNumber":163,"author":{"gitId":"cyaoxuan"},"content":"        final Remark modelRemark \u003d new Remark(remark);","lastModifiedDate":"2023-11-01"},{"lineNumber":164,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":165,"author":{"gitId":"cyaoxuan"},"content":"        // Policy fields","lastModifiedDate":"2023-10-13"},{"lineNumber":166,"author":{"gitId":"suryanshkushwaha"},"content":"        if (company \u003d\u003d null) {","lastModifiedDate":"2023-10-23"},{"lineNumber":167,"author":{"gitId":"suryanshkushwaha"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2023-10-23"},{"lineNumber":168,"author":{"gitId":"suryanshkushwaha"},"content":"                    Company.class.getSimpleName()));","lastModifiedDate":"2023-10-23"},{"lineNumber":169,"author":{"gitId":"suryanshkushwaha"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":170,"author":{"gitId":"suryanshkushwaha"},"content":"        if (!Company.isValidCompany(company)) {","lastModifiedDate":"2023-10-23"},{"lineNumber":171,"author":{"gitId":"suryanshkushwaha"},"content":"            throw new IllegalValueException(Company.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-23"},{"lineNumber":172,"author":{"gitId":"suryanshkushwaha"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":173,"author":{"gitId":"suryanshkushwaha"},"content":"        final Company modelCompany \u003d new Company(company);","lastModifiedDate":"2023-10-23"},{"lineNumber":174,"author":{"gitId":"suryanshkushwaha"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":175,"author":{"gitId":"cyaoxuan"},"content":"        if (policyNumber \u003d\u003d null) {","lastModifiedDate":"2023-10-13"},{"lineNumber":176,"author":{"gitId":"cyaoxuan"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2023-10-13"},{"lineNumber":177,"author":{"gitId":"cyaoxuan"},"content":"                    PolicyNumber.class.getSimpleName()));","lastModifiedDate":"2023-10-13"},{"lineNumber":178,"author":{"gitId":"cyaoxuan"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":179,"author":{"gitId":"cyaoxuan"},"content":"        if (!PolicyNumber.isValidPolicyNumber(policyNumber)) {","lastModifiedDate":"2023-10-13"},{"lineNumber":180,"author":{"gitId":"cyaoxuan"},"content":"            throw new IllegalValueException(PolicyNumber.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-13"},{"lineNumber":181,"author":{"gitId":"cyaoxuan"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":182,"author":{"gitId":"cyaoxuan"},"content":"        final PolicyNumber modelPolicyNumber \u003d new PolicyNumber(policyNumber);","lastModifiedDate":"2023-10-13"},{"lineNumber":183,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":184,"author":{"gitId":"cyaoxuan"},"content":"        if (policyIssueDate \u003d\u003d null) {","lastModifiedDate":"2023-10-13"},{"lineNumber":185,"author":{"gitId":"cyaoxuan"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2023-10-13"},{"lineNumber":186,"author":{"gitId":"cyaoxuan"},"content":"                    PolicyDate.class.getSimpleName() + \" (Issue Date)\"));","lastModifiedDate":"2023-11-11"},{"lineNumber":187,"author":{"gitId":"cyaoxuan"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":188,"author":{"gitId":"cyaoxuan"},"content":"        if (!PolicyDate.isValidPolicyDate(policyIssueDate)) {","lastModifiedDate":"2023-10-13"},{"lineNumber":189,"author":{"gitId":"cyaoxuan"},"content":"            throw new IllegalValueException(PolicyDate.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-13"},{"lineNumber":190,"author":{"gitId":"cyaoxuan"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":191,"author":{"gitId":"cyaoxuan"},"content":"        final PolicyDate modelPolicyIssueDate \u003d new PolicyDate(policyIssueDate);","lastModifiedDate":"2023-10-13"},{"lineNumber":192,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":193,"author":{"gitId":"cyaoxuan"},"content":"        if (policyExpiryDate \u003d\u003d null) {","lastModifiedDate":"2023-10-13"},{"lineNumber":194,"author":{"gitId":"cyaoxuan"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2023-10-13"},{"lineNumber":195,"author":{"gitId":"cyaoxuan"},"content":"                    PolicyDate.class.getSimpleName() + \" (Expiry Date)\"));","lastModifiedDate":"2023-11-11"},{"lineNumber":196,"author":{"gitId":"cyaoxuan"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":197,"author":{"gitId":"cyaoxuan"},"content":"        if (!PolicyDate.isValidPolicyDate(policyExpiryDate)) {","lastModifiedDate":"2023-10-13"},{"lineNumber":198,"author":{"gitId":"cyaoxuan"},"content":"            throw new IllegalValueException(PolicyDate.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-13"},{"lineNumber":199,"author":{"gitId":"cyaoxuan"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":200,"author":{"gitId":"cyaoxuan"},"content":"        final PolicyDate modelPolicyExpiryDate \u003d new PolicyDate(policyExpiryDate);","lastModifiedDate":"2023-10-13"},{"lineNumber":201,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":202,"author":{"gitId":"suryanshkushwaha"},"content":"        final Policy modelPolicy \u003d new Policy(","lastModifiedDate":"2023-10-23"},{"lineNumber":203,"author":{"gitId":"suryanshkushwaha"},"content":"                modelCompany,","lastModifiedDate":"2023-10-23"},{"lineNumber":204,"author":{"gitId":"suryanshkushwaha"},"content":"                modelPolicyNumber,","lastModifiedDate":"2023-10-23"},{"lineNumber":205,"author":{"gitId":"suryanshkushwaha"},"content":"                modelPolicyIssueDate,","lastModifiedDate":"2023-10-23"},{"lineNumber":206,"author":{"gitId":"suryanshkushwaha"},"content":"                modelPolicyExpiryDate","lastModifiedDate":"2023-10-23"},{"lineNumber":207,"author":{"gitId":"suryanshkushwaha"},"content":"        );","lastModifiedDate":"2023-10-23"},{"lineNumber":208,"author":{"gitId":"suryanshkushwaha"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":209,"author":{"gitId":"cyaoxuan"},"content":"        return new Person(modelName, modelPhone, modelEmail, modelAddress, modelTags,","lastModifiedDate":"2023-10-13"},{"lineNumber":210,"author":{"gitId":"cyaoxuan"},"content":"                modelNric, modelLicencePlate, modelRemark, modelPolicy);","lastModifiedDate":"2023-11-01"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"suryanshkushwaha":21,"-":107,"cyaoxuan":85}},{"path":"src/main/java/seedu/address/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"brendanneojw"},"content":"    public static final String USERGUIDE_URL \u003d \"https://ay2324s1-cs2103t-w16-3.github.io/tp/UserGuide.html\";","lastModifiedDate":"2023-10-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String HELP_MESSAGE \u003d \"Refer to the user guide: \" + USERGUIDE_URL;","lastModifiedDate":"2019-08-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     *     \u003cul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     *             if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     *             if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *             if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *             if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     *     \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2019-08-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2019-08-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2019-08-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        url.putString(USERGUIDE_URL);","lastModifiedDate":"2019-08-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2019-08-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"brendanneojw":1,"-":101}},{"path":"src/main/java/seedu/address/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2016-09-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-06-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private PersonListPanel personListPanel;","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private StackPane personListPanelPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        personListPanel \u003d new PersonListPanel(logic.getFilteredPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        personListPanelPlaceholder.getChildren().add(personListPanel.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getAddressBookFilePath());","lastModifiedDate":"2019-01-25"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    public PersonListPanel getPersonListPanel() {","lastModifiedDate":"2016-08-25"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        return personListPanel;","lastModifiedDate":"2018-08-14"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":171,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":172,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":173,"author":{"gitId":"-"},"content":"     * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":174,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":177,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":179,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":181,"author":{"gitId":"KumChaiYin"},"content":"            if (commandResult.isBatchDelete()) {","lastModifiedDate":"2023-10-25"},{"lineNumber":182,"author":{"gitId":"KumChaiYin"},"content":"                logger.info(\"Shows all people in the address book\");","lastModifiedDate":"2023-10-25"},{"lineNumber":183,"author":{"gitId":"KumChaiYin"},"content":"            }","lastModifiedDate":"2023-10-25"},{"lineNumber":184,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":185,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":186,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":187,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":189,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":190,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":191,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":193,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":195,"author":{"gitId":"-"},"content":"            logger.info(\"An error occurred while executing command: \" + commandText);","lastModifiedDate":"2023-06-13"},{"lineNumber":196,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":197,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":200,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"KumChaiYin":4,"-":196}},{"path":"src/main/java/seedu/address/ui/PersonCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * An UI component that displays information of a {@code Person}.","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class PersonCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListCard.fxml\";","lastModifiedDate":"2016-09-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public final Person person;","lastModifiedDate":"2018-01-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private Label address;","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private Label email;","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2016-12-18"},{"lineNumber":43,"author":{"gitId":"brendanneojw"},"content":"    @FXML","lastModifiedDate":"2023-10-13"},{"lineNumber":44,"author":{"gitId":"brendanneojw"},"content":"    private Label nric;","lastModifiedDate":"2023-10-13"},{"lineNumber":45,"author":{"gitId":"brendanneojw"},"content":"    @FXML","lastModifiedDate":"2023-10-13"},{"lineNumber":46,"author":{"gitId":"brendanneojw"},"content":"    private Label licencePlate;","lastModifiedDate":"2023-10-13"},{"lineNumber":47,"author":{"gitId":"brendanneojw"},"content":"    @FXML","lastModifiedDate":"2023-10-13"},{"lineNumber":48,"author":{"gitId":"brendanneojw"},"content":"    private Label policy;","lastModifiedDate":"2023-10-13"},{"lineNumber":49,"author":{"gitId":"cyaoxuan"},"content":"    @FXML","lastModifiedDate":"2023-11-01"},{"lineNumber":50,"author":{"gitId":"cyaoxuan"},"content":"    private Label remark;","lastModifiedDate":"2023-09-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2020-05-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2018-01-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        this.person \u003d person;","lastModifiedDate":"2017-07-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        name.setText(person.getName().fullName);","lastModifiedDate":"2017-12-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        phone.setText(person.getPhone().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        address.setText(person.getAddress().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        email.setText(person.getEmail().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":63,"author":{"gitId":"brendanneojw"},"content":"        nric.setText(person.getNric().value);","lastModifiedDate":"2023-10-13"},{"lineNumber":64,"author":{"gitId":"brendanneojw"},"content":"        licencePlate.setText(person.getLicencePlate().value);","lastModifiedDate":"2023-10-13"},{"lineNumber":65,"author":{"gitId":"brendanneojw"},"content":"        policy.setText(person.getPolicy().toDisplay(true));","lastModifiedDate":"2023-10-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        person.getTags().stream()","lastModifiedDate":"2019-01-02"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2019-01-02"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2019-01-02"},{"lineNumber":69,"author":{"gitId":"cyaoxuan"},"content":"        remark.setText(person.getRemark().value);","lastModifiedDate":"2023-09-28"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"brendanneojw":9,"-":59,"cyaoxuan":3}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.SplitPane?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003cfx:root type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2023-07-27"},{"lineNumber":15,"author":{"gitId":"brendanneojw"},"content":"         title\u003d\"InsureIQ\" minWidth\u003d\"450\" minHeight\u003d\"600\" onCloseRequest\u003d\"#handleExit\"\u003e","lastModifiedDate":"2023-11-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cImage url\u003d\"@/images/address_book_32.png\" /\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"resultDisplayPlaceholder\" styleClass\u003d\"pane-with-border\"","lastModifiedDate":"2017-05-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                   minHeight\u003d\"100\" prefHeight\u003d\"100\" maxHeight\u003d\"100\"\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        \u003cVBox fx:id\u003d\"personList\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"340\" prefWidth\u003d\"340\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2019-01-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"          \u003cStackPane fx:id\u003d\"personListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2017-06-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"brendanneojw":1,"-":59}},{"path":"src/main/resources/view/PersonListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"brendanneojw"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-07-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":19,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"      \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"      \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":32,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"brendanneojw"},"content":"      \u003cLabel fx:id\u003d\"nric\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$nric\" /\u003e","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"cyaoxuan"},"content":"      \u003cLabel fx:id\u003d\"licencePlate\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$licencePlate\" /\u003e","lastModifiedDate":"2023-11-12"},{"lineNumber":37,"author":{"gitId":"cyaoxuan"},"content":"      \u003cLabel fx:id\u003d\"remark\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$remark\" /\u003e","lastModifiedDate":"2023-09-28"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"brendanneojw"},"content":"    \u003cStackPane\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":40,"author":{"gitId":"brendanneojw"},"content":"      \u003cLabel fx:id\u003d\"policy\" styleClass\u003d\"cell_small_label\" text\u003d\"\\${policy}\" /\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":41,"author":{"gitId":"brendanneojw"},"content":"    \u003c/StackPane\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"brendanneojw":5,"-":36,"cyaoxuan":2}},{"path":"src/test/java/seedu/address/commons/util/StringUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class StringUtilTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    //---------------- Tests for isNonZeroUnsignedInteger --------------------------------------","lastModifiedDate":"2019-02-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void isNonZeroUnsignedInteger() {","lastModifiedDate":"2019-02-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        // EP: empty strings","lastModifiedDate":"2016-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"  \"));","lastModifiedDate":"2017-06-02"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // EP: not a number","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"a\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"aaa\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // EP: zero","lastModifiedDate":"2016-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"0\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // EP: zero as prefix","lastModifiedDate":"2017-06-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"01\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // EP: signed numbers","lastModifiedDate":"2016-10-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"-1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"+1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // EP: numbers with white space","lastModifiedDate":"2016-10-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\" 10 \")); // Leading/trailing spaces","lastModifiedDate":"2017-06-02"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"1 0\")); // Spaces in the middle","lastModifiedDate":"2017-06-02"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // EP: number larger than Integer.MAX_VALUE","lastModifiedDate":"2017-06-02"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2017-06-02"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // EP: valid numbers, should return true","lastModifiedDate":"2016-10-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"1\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"10\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    //---------------- Tests for containsWordIgnoreCase --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for word: null, empty, multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for sentence: null","lastModifiedDate":"2016-10-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * The four test cases below test one invalid input at a time.","lastModifiedDate":"2016-10-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullWord_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", null));","lastModifiedDate":"2019-03-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_emptyWord_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter cannot be empty\", ()","lastModifiedDate":"2019-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"  \"));","lastModifiedDate":"2019-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullSentence_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(null, \"abc\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for word:","lastModifiedDate":"2016-10-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     *   - any word","lastModifiedDate":"2016-10-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     *   - word containing symbols/numbers","lastModifiedDate":"2016-10-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     *   - word with leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for sentence:","lastModifiedDate":"2016-10-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     *   - empty string","lastModifiedDate":"2016-10-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     *   - one word","lastModifiedDate":"2016-10-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *   - multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     *   - sentence with extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Possible scenarios returning true:","lastModifiedDate":"2016-10-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     *   - matches first word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     *   - last word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     *   - middle word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     *   - matches multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Possible scenarios returning false:","lastModifiedDate":"2016-10-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     *   - query word matches part of a sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     *   - sentence word matches part of the query word","lastModifiedDate":"2016-10-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * The test method below tries to verify all above with a reasonably low number of test cases.","lastModifiedDate":"2016-10-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_validInputs_correctResult() {","lastModifiedDate":"2016-10-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        // Empty sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"\", \"abc\")); // Boundary case","lastModifiedDate":"2016-10-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"    \", \"123\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        // Matches a partial word only","lastModifiedDate":"2016-10-13"},{"lineNumber":106,"author":{"gitId":"brendanneojw"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\",","lastModifiedDate":"2023-10-13"},{"lineNumber":107,"author":{"gitId":"brendanneojw"},"content":"                \"aaa bb ccc\")); // Sentence word bigger than query word","lastModifiedDate":"2023-10-13"},{"lineNumber":108,"author":{"gitId":"brendanneojw"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\",","lastModifiedDate":"2023-10-13"},{"lineNumber":109,"author":{"gitId":"brendanneojw"},"content":"                \"aaa bbbb ccc\")); // Query word bigger than sentence word","lastModifiedDate":"2023-10-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // Matches word in the sentence, different upper/lower case letters","lastModifiedDate":"2016-10-13"},{"lineNumber":112,"author":{"gitId":"brendanneojw"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc\", \"aaa Bbb ccc\")); // First word (boundary case)","lastModifiedDate":"2023-10-13"},{"lineNumber":113,"author":{"gitId":"brendanneojw"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc@1\", \"aaa bBb CCc@1\")); // Last word (boundary case)","lastModifiedDate":"2023-10-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"Aaa\", \"aaa\")); // Only one word in sentence (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":115,"author":{"gitId":"brendanneojw"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"   aaa bbb ccc  \")); // Leading/trailing spaces","lastModifiedDate":"2023-10-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    //---------------- Tests for getDetails --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * Equivalence Partitions: null, valid throwable object","lastModifiedDate":"2016-10-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public void getDetails_exceptionGiven() {","lastModifiedDate":"2016-09-30"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.getDetails(new FileNotFoundException(\"file not found\"))","lastModifiedDate":"2019-03-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            .contains(\"java.io.FileNotFoundException: file not found\"));","lastModifiedDate":"2019-03-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public void getDetails_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.getDetails(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":135,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"brendanneojw":7,"-":128}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.nio.file.AccessDeniedException;","lastModifiedDate":"2023-06-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2017-01-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2016-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy IO exception\");","lastModifiedDate":"2023-06-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_AD_EXCEPTION \u003d new AccessDeniedException(\"dummy access denied exception\");","lastModifiedDate":"2023-06-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":48,"author":{"gitId":"brendanneojw"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"insureIQ.json\"));","lastModifiedDate":"2023-11-02"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        String deleteCommand \u003d \"delete 9\";","lastModifiedDate":"2017-06-14"},{"lineNumber":63,"author":{"gitId":"RSXIX"},"content":"        assertCommandException(deleteCommand, Messages.MESSAGE_NOT_FOUND_INDEX);","lastModifiedDate":"2023-10-17"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2017-06-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2017-06-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":72,"author":{"gitId":"cyaoxuan"},"content":"    /*","lastModifiedDate":"2023-10-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2023-10-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertCommandFailureForExceptionFromStorage(DUMMY_IO_EXCEPTION, String.format(","lastModifiedDate":"2023-10-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                LogicManager.FILE_OPS_ERROR_FORMAT, DUMMY_IO_EXCEPTION.getMessage()));","lastModifiedDate":"2023-10-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsAdException_throwsCommandException() {","lastModifiedDate":"2023-10-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertCommandFailureForExceptionFromStorage(DUMMY_AD_EXCEPTION, String.format(","lastModifiedDate":"2023-10-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                LogicManager.FILE_OPS_PERMISSION_ERROR_FORMAT, DUMMY_AD_EXCEPTION.getMessage()));","lastModifiedDate":"2023-10-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":84,"author":{"gitId":"cyaoxuan"},"content":"    */","lastModifiedDate":"2023-10-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-05-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     * Tests the Logic component\u0027s handling of an {@code IOException} thrown by the Storage component.","lastModifiedDate":"2023-06-13"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-06-13"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     * @param e the exception to be thrown by the Storage component","lastModifiedDate":"2023-06-13"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     * @param expectedMessage the message expected inside exception thrown by the Logic component","lastModifiedDate":"2023-06-13"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    private void assertCommandFailureForExceptionFromStorage(IOException e, String expectedMessage) {","lastModifiedDate":"2023-06-13"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        Path prefPath \u003d temporaryFolder.resolve(\"ExceptionUserPrefs.json\");","lastModifiedDate":"2023-06-13"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        // Inject LogicManager with an AddressBookStorage that throws the IOException e when saving","lastModifiedDate":"2023-06-13"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(prefPath) {","lastModifiedDate":"2023-06-13"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath)","lastModifiedDate":"2023-06-13"},{"lineNumber":157,"author":{"gitId":"-"},"content":"                    throws IOException {","lastModifiedDate":"2023-06-13"},{"lineNumber":158,"author":{"gitId":"-"},"content":"                throw e;","lastModifiedDate":"2023-06-13"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2023-06-13"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2023-06-13"},{"lineNumber":163,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ExceptionUserPrefs.json\"));","lastModifiedDate":"2023-06-13"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2023-06-13"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2023-06-13"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        // Triggers the saveAddressBook method by executing an add command","lastModifiedDate":"2023-06-13"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        String addCommand \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY","lastModifiedDate":"2023-06-13"},{"lineNumber":170,"author":{"gitId":"-"},"content":"                + EMAIL_DESC_AMY + ADDRESS_DESC_AMY;","lastModifiedDate":"2023-06-13"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2023-06-13"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2023-06-13"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(expectedPerson);","lastModifiedDate":"2023-06-13"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2023-06-13"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":176,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"brendanneojw":1,"RSXIX":1,"-":172,"cyaoxuan":2}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-05-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-05-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2017-05-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2017-05-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new AddCommand(validPerson).execute(modelStub);","lastModifiedDate":"2019-01-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, Messages.format(validPerson)),","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                commandResult.getFeedbackToUser());","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(validPerson), modelStub.personsAdded);","lastModifiedDate":"2017-05-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(validPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_PERSON, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2019-05-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":56,"author":{"gitId":"KumChaiYin"},"content":"    @Test","lastModifiedDate":"2023-11-12"},{"lineNumber":57,"author":{"gitId":"KumChaiYin"},"content":"    public void execute_samePolicyNumber_throwsCommandException() {","lastModifiedDate":"2023-11-12"},{"lineNumber":58,"author":{"gitId":"KumChaiYin"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice\").withPolicy(\"Allianz\",","lastModifiedDate":"2023-11-12"},{"lineNumber":59,"author":{"gitId":"KumChaiYin"},"content":"                \"123A\", \"25-12-2022\", \"24-12-2023\").build();","lastModifiedDate":"2023-11-12"},{"lineNumber":60,"author":{"gitId":"KumChaiYin"},"content":"        Person bob \u003d new PersonBuilder().withName(\"Bob\").withPolicy(\"NTUC\",","lastModifiedDate":"2023-11-12"},{"lineNumber":61,"author":{"gitId":"KumChaiYin"},"content":"                \"123A\", \"21-12-2022\", \"20-12-2023\").build();","lastModifiedDate":"2023-11-12"},{"lineNumber":62,"author":{"gitId":"KumChaiYin"},"content":"        AddCommand addCommand \u003d new AddCommand(alice);","lastModifiedDate":"2023-11-12"},{"lineNumber":63,"author":{"gitId":"KumChaiYin"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(bob);","lastModifiedDate":"2023-11-12"},{"lineNumber":64,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":65,"author":{"gitId":"KumChaiYin"},"content":"        assertThrows(CommandException.class, Messages.MESSAGE_USED_POLICY_NUMBER, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2023-11-12"},{"lineNumber":66,"author":{"gitId":"KumChaiYin"},"content":"    }","lastModifiedDate":"2023-11-12"},{"lineNumber":67,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        Person bob \u003d new PersonBuilder().withName(\"Bob\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(ALICE);","lastModifiedDate":"2019-02-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        String expected \u003d AddCommand.class.getCanonicalName() + \"{toAdd\u003d\" + ALICE + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertEquals(expected, addCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":123,"author":{"gitId":"RSXIX"},"content":"        @Override","lastModifiedDate":"2023-10-24"},{"lineNumber":124,"author":{"gitId":"RSXIX"},"content":"        public void sortData() {","lastModifiedDate":"2023-10-24"},{"lineNumber":125,"author":{"gitId":"RSXIX"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-24"},{"lineNumber":126,"author":{"gitId":"RSXIX"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":127,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2018-11-27"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-12"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":158,"author":{"gitId":"RSXIX"},"content":"        @Override","lastModifiedDate":"2023-10-22"},{"lineNumber":159,"author":{"gitId":"RSXIX"},"content":"        public boolean hasSamePolicyNumber(Person person) {","lastModifiedDate":"2023-10-24"},{"lineNumber":160,"author":{"gitId":"RSXIX"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-22"},{"lineNumber":161,"author":{"gitId":"RSXIX"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2018-08-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":169,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":174,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":177,"author":{"gitId":"KumChaiYin"},"content":"        @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":178,"author":{"gitId":"KumChaiYin"},"content":"        public void batchDeleteWithPredicate(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2023-10-25"},{"lineNumber":179,"author":{"gitId":"KumChaiYin"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-25"},{"lineNumber":180,"author":{"gitId":"KumChaiYin"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":181,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":184,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":189,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2018-08-07"},{"lineNumber":190,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2018-08-07"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        private final Person person;","lastModifiedDate":"2018-08-07"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        ModelStubWithPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":195,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":196,"author":{"gitId":"-"},"content":"            this.person \u003d person;","lastModifiedDate":"2018-08-07"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":201,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":202,"author":{"gitId":"-"},"content":"            return this.person.isSamePerson(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":204,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":205,"author":{"gitId":"KumChaiYin"},"content":"        @Override","lastModifiedDate":"2023-11-12"},{"lineNumber":206,"author":{"gitId":"KumChaiYin"},"content":"        public boolean hasSamePolicyNumber(Person person) {","lastModifiedDate":"2023-11-12"},{"lineNumber":207,"author":{"gitId":"KumChaiYin"},"content":"            requireNonNull(person);","lastModifiedDate":"2023-11-12"},{"lineNumber":208,"author":{"gitId":"KumChaiYin"},"content":"            return this.person.comparePolicyNumber(person);","lastModifiedDate":"2023-11-12"},{"lineNumber":209,"author":{"gitId":"KumChaiYin"},"content":"        }","lastModifiedDate":"2023-11-12"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":213,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2017-05-12"},{"lineNumber":214,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2017-05-12"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2017-05-12"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":220,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":221,"author":{"gitId":"-"},"content":"            return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-08"},{"lineNumber":226,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":227,"author":{"gitId":"-"},"content":"            personsAdded.add(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":228,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":230,"author":{"gitId":"RSXIX"},"content":"        @Override","lastModifiedDate":"2023-10-22"},{"lineNumber":231,"author":{"gitId":"RSXIX"},"content":"        public boolean hasSamePolicyNumber(Person person) {","lastModifiedDate":"2023-10-24"},{"lineNumber":232,"author":{"gitId":"RSXIX"},"content":"            requireNonNull(person);","lastModifiedDate":"2023-10-22"},{"lineNumber":233,"author":{"gitId":"RSXIX"},"content":"            return personsAdded.stream().anyMatch(person::comparePolicyNumber);","lastModifiedDate":"2023-10-22"},{"lineNumber":234,"author":{"gitId":"RSXIX"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":235,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":236,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":237,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-04"},{"lineNumber":238,"author":{"gitId":"-"},"content":"            return new AddressBook();","lastModifiedDate":"2017-05-04"},{"lineNumber":239,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":242,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"RSXIX":15,"KumChaiYin":23,"-":204}},{"path":"src/test/java/seedu/address/logic/commands/BatchDeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"KumChaiYin"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-11-13"},{"lineNumber":2,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":3,"author":{"gitId":"KumChaiYin"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-11-13"},{"lineNumber":4,"author":{"gitId":"KumChaiYin"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-11-13"},{"lineNumber":5,"author":{"gitId":"KumChaiYin"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-11-13"},{"lineNumber":6,"author":{"gitId":"KumChaiYin"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-11-13"},{"lineNumber":7,"author":{"gitId":"KumChaiYin"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-11-13"},{"lineNumber":8,"author":{"gitId":"KumChaiYin"},"content":"import static seedu.address.logic.commands.BatchDeleteCommand.MESSAGE_COMPANY_DESCRIPTION;","lastModifiedDate":"2023-11-13"},{"lineNumber":9,"author":{"gitId":"KumChaiYin"},"content":"import static seedu.address.logic.commands.BatchDeleteCommand.MESSAGE_MONTH_DESCRIPTION;","lastModifiedDate":"2023-11-13"},{"lineNumber":10,"author":{"gitId":"KumChaiYin"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_COMPANY_AMY;","lastModifiedDate":"2023-11-13"},{"lineNumber":11,"author":{"gitId":"KumChaiYin"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_COMPANY_BOB;","lastModifiedDate":"2023-11-13"},{"lineNumber":12,"author":{"gitId":"KumChaiYin"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DELETE_MONTH;","lastModifiedDate":"2023-11-13"},{"lineNumber":13,"author":{"gitId":"KumChaiYin"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DELETE_MONTH_2;","lastModifiedDate":"2023-11-13"},{"lineNumber":14,"author":{"gitId":"KumChaiYin"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-11-13"},{"lineNumber":15,"author":{"gitId":"KumChaiYin"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2023-11-13"},{"lineNumber":16,"author":{"gitId":"KumChaiYin"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2023-11-13"},{"lineNumber":17,"author":{"gitId":"KumChaiYin"},"content":"import static seedu.address.testutil.TypicalPersons.CARL;","lastModifiedDate":"2023-11-13"},{"lineNumber":18,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":19,"author":{"gitId":"KumChaiYin"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-11-13"},{"lineNumber":20,"author":{"gitId":"KumChaiYin"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-11-13"},{"lineNumber":21,"author":{"gitId":"KumChaiYin"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-11-13"},{"lineNumber":22,"author":{"gitId":"KumChaiYin"},"content":"import java.util.Iterator;","lastModifiedDate":"2023-11-13"},{"lineNumber":23,"author":{"gitId":"KumChaiYin"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-11-13"},{"lineNumber":24,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":25,"author":{"gitId":"KumChaiYin"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-11-13"},{"lineNumber":26,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":27,"author":{"gitId":"KumChaiYin"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-11-13"},{"lineNumber":28,"author":{"gitId":"KumChaiYin"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2023-11-13"},{"lineNumber":29,"author":{"gitId":"KumChaiYin"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-11-13"},{"lineNumber":30,"author":{"gitId":"KumChaiYin"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2023-11-13"},{"lineNumber":31,"author":{"gitId":"KumChaiYin"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-11-13"},{"lineNumber":32,"author":{"gitId":"KumChaiYin"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2023-11-13"},{"lineNumber":33,"author":{"gitId":"KumChaiYin"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-11-13"},{"lineNumber":34,"author":{"gitId":"KumChaiYin"},"content":"import seedu.address.model.month.DeleteMonth;","lastModifiedDate":"2023-11-13"},{"lineNumber":35,"author":{"gitId":"KumChaiYin"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-11-13"},{"lineNumber":36,"author":{"gitId":"KumChaiYin"},"content":"import seedu.address.model.policy.Company;","lastModifiedDate":"2023-11-13"},{"lineNumber":37,"author":{"gitId":"KumChaiYin"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2023-11-13"},{"lineNumber":38,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":39,"author":{"gitId":"KumChaiYin"},"content":"public class BatchDeleteCommandTest {","lastModifiedDate":"2023-11-13"},{"lineNumber":40,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":41,"author":{"gitId":"KumChaiYin"},"content":"    private DeleteMonth month \u003d new DeleteMonth(VALID_DELETE_MONTH);","lastModifiedDate":"2023-11-13"},{"lineNumber":42,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":43,"author":{"gitId":"KumChaiYin"},"content":"    // Company: InsureMe","lastModifiedDate":"2023-11-13"},{"lineNumber":44,"author":{"gitId":"KumChaiYin"},"content":"    private Company company \u003d new Company(VALID_COMPANY_BOB);","lastModifiedDate":"2023-11-13"},{"lineNumber":45,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":46,"author":{"gitId":"KumChaiYin"},"content":"    private Person alice \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2023-11-13"},{"lineNumber":47,"author":{"gitId":"KumChaiYin"},"content":"    private Person benson \u003d new PersonBuilder(BENSON).build();","lastModifiedDate":"2023-11-13"},{"lineNumber":48,"author":{"gitId":"KumChaiYin"},"content":"    private Person carl \u003d new PersonBuilder(CARL).build();","lastModifiedDate":"2023-11-13"},{"lineNumber":49,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":50,"author":{"gitId":"KumChaiYin"},"content":"    @Test","lastModifiedDate":"2023-11-13"},{"lineNumber":51,"author":{"gitId":"KumChaiYin"},"content":"    public void execute_nullModel_throwsNullPointerException() {","lastModifiedDate":"2023-11-13"},{"lineNumber":52,"author":{"gitId":"KumChaiYin"},"content":"        assertThrows(NullPointerException.class, () -\u003e new BatchDeleteCommand(month, null)","lastModifiedDate":"2023-11-13"},{"lineNumber":53,"author":{"gitId":"KumChaiYin"},"content":"                .execute(null));","lastModifiedDate":"2023-11-13"},{"lineNumber":54,"author":{"gitId":"KumChaiYin"},"content":"    }","lastModifiedDate":"2023-11-13"},{"lineNumber":55,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":56,"author":{"gitId":"KumChaiYin"},"content":"    @Test","lastModifiedDate":"2023-11-13"},{"lineNumber":57,"author":{"gitId":"KumChaiYin"},"content":"    public void execute_batchDeleteWithMonth_batchDeleteSuccessful() throws CommandException {","lastModifiedDate":"2023-11-13"},{"lineNumber":58,"author":{"gitId":"KumChaiYin"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2023-11-13"},{"lineNumber":59,"author":{"gitId":"KumChaiYin"},"content":"        modelStub.addPerson(alice);","lastModifiedDate":"2023-11-13"},{"lineNumber":60,"author":{"gitId":"KumChaiYin"},"content":"        modelStub.addPerson(benson); // only benson policy expiry date not in that month","lastModifiedDate":"2023-11-13"},{"lineNumber":61,"author":{"gitId":"KumChaiYin"},"content":"        modelStub.addPerson(carl);","lastModifiedDate":"2023-11-13"},{"lineNumber":62,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":63,"author":{"gitId":"KumChaiYin"},"content":"        CommandResult commandResult \u003d new BatchDeleteCommand(month, null).execute(modelStub);","lastModifiedDate":"2023-11-13"},{"lineNumber":64,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":65,"author":{"gitId":"KumChaiYin"},"content":"        assertEquals(String.format(BatchDeleteCommand.MESSAGE_DELETE_PEOPLE_SUCCESS,","lastModifiedDate":"2023-11-13"},{"lineNumber":66,"author":{"gitId":"KumChaiYin"},"content":"                MESSAGE_MONTH_DESCRIPTION + month.toString()), commandResult.getFeedbackToUser());","lastModifiedDate":"2023-11-13"},{"lineNumber":67,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":68,"author":{"gitId":"KumChaiYin"},"content":"        assertEquals(Arrays.asList(benson), modelStub.personsAdded);","lastModifiedDate":"2023-11-13"},{"lineNumber":69,"author":{"gitId":"KumChaiYin"},"content":"    }","lastModifiedDate":"2023-11-13"},{"lineNumber":70,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":71,"author":{"gitId":"KumChaiYin"},"content":"    @Test","lastModifiedDate":"2023-11-13"},{"lineNumber":72,"author":{"gitId":"KumChaiYin"},"content":"    public void execute_batchDeleteWithCompany_batchDeleteSuccessful() throws CommandException {","lastModifiedDate":"2023-11-13"},{"lineNumber":73,"author":{"gitId":"KumChaiYin"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2023-11-13"},{"lineNumber":74,"author":{"gitId":"KumChaiYin"},"content":"        modelStub.addPerson(alice); // only alice policy company not insureMe","lastModifiedDate":"2023-11-13"},{"lineNumber":75,"author":{"gitId":"KumChaiYin"},"content":"        modelStub.addPerson(benson);","lastModifiedDate":"2023-11-13"},{"lineNumber":76,"author":{"gitId":"KumChaiYin"},"content":"        modelStub.addPerson(carl);","lastModifiedDate":"2023-11-13"},{"lineNumber":77,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":78,"author":{"gitId":"KumChaiYin"},"content":"        CommandResult commandResult \u003d new BatchDeleteCommand(null, company).execute(modelStub);","lastModifiedDate":"2023-11-13"},{"lineNumber":79,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":80,"author":{"gitId":"KumChaiYin"},"content":"        assertEquals(String.format(BatchDeleteCommand.MESSAGE_DELETE_PEOPLE_SUCCESS,","lastModifiedDate":"2023-11-13"},{"lineNumber":81,"author":{"gitId":"KumChaiYin"},"content":"                MESSAGE_COMPANY_DESCRIPTION + company.toString()), commandResult.getFeedbackToUser());","lastModifiedDate":"2023-11-13"},{"lineNumber":82,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":83,"author":{"gitId":"KumChaiYin"},"content":"        assertEquals(Arrays.asList(alice), modelStub.personsAdded);","lastModifiedDate":"2023-11-13"},{"lineNumber":84,"author":{"gitId":"KumChaiYin"},"content":"    }","lastModifiedDate":"2023-11-13"},{"lineNumber":85,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":86,"author":{"gitId":"KumChaiYin"},"content":"    @Test","lastModifiedDate":"2023-11-13"},{"lineNumber":87,"author":{"gitId":"KumChaiYin"},"content":"    public void execute_invalidBatchDeleteCommands_throwsCommandException() throws CommandException {","lastModifiedDate":"2023-11-13"},{"lineNumber":88,"author":{"gitId":"KumChaiYin"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2023-11-13"},{"lineNumber":89,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":90,"author":{"gitId":"KumChaiYin"},"content":"        BatchDeleteCommand batchDeleteCommand1 \u003d new BatchDeleteCommand(month, company);","lastModifiedDate":"2023-11-13"},{"lineNumber":91,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":92,"author":{"gitId":"KumChaiYin"},"content":"        assertThrows(CommandException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-11-13"},{"lineNumber":93,"author":{"gitId":"KumChaiYin"},"content":"                        BatchDeleteCommand.MESSAGE_USAGE), () -\u003e batchDeleteCommand1.execute(modelStub));","lastModifiedDate":"2023-11-13"},{"lineNumber":94,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":95,"author":{"gitId":"KumChaiYin"},"content":"        BatchDeleteCommand batchDeleteCommand2 \u003d new BatchDeleteCommand(null, null);","lastModifiedDate":"2023-11-13"},{"lineNumber":96,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":97,"author":{"gitId":"KumChaiYin"},"content":"        assertThrows(CommandException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-11-13"},{"lineNumber":98,"author":{"gitId":"KumChaiYin"},"content":"                        BatchDeleteCommand.MESSAGE_USAGE), () -\u003e batchDeleteCommand2.execute(modelStub));","lastModifiedDate":"2023-11-13"},{"lineNumber":99,"author":{"gitId":"KumChaiYin"},"content":"    }","lastModifiedDate":"2023-11-13"},{"lineNumber":100,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":101,"author":{"gitId":"KumChaiYin"},"content":"    @Test","lastModifiedDate":"2023-11-13"},{"lineNumber":102,"author":{"gitId":"KumChaiYin"},"content":"    public void equals_sameBatchDeleteCommand_returnsTrue() {","lastModifiedDate":"2023-11-13"},{"lineNumber":103,"author":{"gitId":"KumChaiYin"},"content":"        BatchDeleteCommand command \u003d new BatchDeleteCommand(month, null);","lastModifiedDate":"2023-11-13"},{"lineNumber":104,"author":{"gitId":"KumChaiYin"},"content":"        assertTrue(command.equals(command));","lastModifiedDate":"2023-11-13"},{"lineNumber":105,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":106,"author":{"gitId":"KumChaiYin"},"content":"        assertTrue(command.equals(new BatchDeleteCommand(month, null)));","lastModifiedDate":"2023-11-13"},{"lineNumber":107,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":108,"author":{"gitId":"KumChaiYin"},"content":"        assertTrue(new BatchDeleteCommand(null, company)","lastModifiedDate":"2023-11-13"},{"lineNumber":109,"author":{"gitId":"KumChaiYin"},"content":"                .equals(new BatchDeleteCommand(null, company)));","lastModifiedDate":"2023-11-13"},{"lineNumber":110,"author":{"gitId":"KumChaiYin"},"content":"    }","lastModifiedDate":"2023-11-13"},{"lineNumber":111,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":112,"author":{"gitId":"KumChaiYin"},"content":"    @Test","lastModifiedDate":"2023-11-13"},{"lineNumber":113,"author":{"gitId":"KumChaiYin"},"content":"    public void equals_differentBatchDeleteCommand_returnsFalse() {","lastModifiedDate":"2023-11-13"},{"lineNumber":114,"author":{"gitId":"KumChaiYin"},"content":"        DeleteMonth month2 \u003d new DeleteMonth(VALID_DELETE_MONTH_2);","lastModifiedDate":"2023-11-13"},{"lineNumber":115,"author":{"gitId":"KumChaiYin"},"content":"        Company company2 \u003d new Company(VALID_COMPANY_AMY);","lastModifiedDate":"2023-11-13"},{"lineNumber":116,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":117,"author":{"gitId":"KumChaiYin"},"content":"        assertFalse(new BatchDeleteCommand(month, null).equals(null));","lastModifiedDate":"2023-11-13"},{"lineNumber":118,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":119,"author":{"gitId":"KumChaiYin"},"content":"        assertFalse(new BatchDeleteCommand(month, null)","lastModifiedDate":"2023-11-13"},{"lineNumber":120,"author":{"gitId":"KumChaiYin"},"content":"                .equals(new BatchDeleteCommand(month2, null)));","lastModifiedDate":"2023-11-13"},{"lineNumber":121,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":122,"author":{"gitId":"KumChaiYin"},"content":"        assertFalse(new BatchDeleteCommand(null, company)","lastModifiedDate":"2023-11-13"},{"lineNumber":123,"author":{"gitId":"KumChaiYin"},"content":"                .equals(new BatchDeleteCommand(null, company2)));","lastModifiedDate":"2023-11-13"},{"lineNumber":124,"author":{"gitId":"KumChaiYin"},"content":"    }","lastModifiedDate":"2023-11-13"},{"lineNumber":125,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":126,"author":{"gitId":"KumChaiYin"},"content":"    @Test","lastModifiedDate":"2023-11-13"},{"lineNumber":127,"author":{"gitId":"KumChaiYin"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-11-13"},{"lineNumber":128,"author":{"gitId":"KumChaiYin"},"content":"        BatchDeleteCommand command1 \u003d new BatchDeleteCommand(month, null);","lastModifiedDate":"2023-11-13"},{"lineNumber":129,"author":{"gitId":"KumChaiYin"},"content":"        String expected1 \u003d BatchDeleteCommand.class.getCanonicalName() + \"{toBatchDeleteMonth\u003d\"","lastModifiedDate":"2023-11-13"},{"lineNumber":130,"author":{"gitId":"KumChaiYin"},"content":"                + month + \", toBatchDeleteCompany\u003d[not applicable]}\";","lastModifiedDate":"2023-11-13"},{"lineNumber":131,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":132,"author":{"gitId":"KumChaiYin"},"content":"        assertEquals(expected1, command1.toString());","lastModifiedDate":"2023-11-13"},{"lineNumber":133,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":134,"author":{"gitId":"KumChaiYin"},"content":"        BatchDeleteCommand command2 \u003d new BatchDeleteCommand(null, company);","lastModifiedDate":"2023-11-13"},{"lineNumber":135,"author":{"gitId":"KumChaiYin"},"content":"        String expected2 \u003d BatchDeleteCommand.class.getCanonicalName()","lastModifiedDate":"2023-11-13"},{"lineNumber":136,"author":{"gitId":"KumChaiYin"},"content":"                + \"{toBatchDeleteMonth\u003d[not applicable], toBatchDeleteCompany\u003d\" + company + \"}\";","lastModifiedDate":"2023-11-13"},{"lineNumber":137,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":138,"author":{"gitId":"KumChaiYin"},"content":"        assertEquals(expected2, command2.toString());","lastModifiedDate":"2023-11-13"},{"lineNumber":139,"author":{"gitId":"KumChaiYin"},"content":"    }","lastModifiedDate":"2023-11-13"},{"lineNumber":140,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":141,"author":{"gitId":"KumChaiYin"},"content":"    /**","lastModifiedDate":"2023-11-13"},{"lineNumber":142,"author":{"gitId":"KumChaiYin"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2023-11-13"},{"lineNumber":143,"author":{"gitId":"KumChaiYin"},"content":"     */","lastModifiedDate":"2023-11-13"},{"lineNumber":144,"author":{"gitId":"KumChaiYin"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2023-11-13"},{"lineNumber":145,"author":{"gitId":"KumChaiYin"},"content":"        @Override","lastModifiedDate":"2023-11-13"},{"lineNumber":146,"author":{"gitId":"KumChaiYin"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2023-11-13"},{"lineNumber":147,"author":{"gitId":"KumChaiYin"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-11-13"},{"lineNumber":148,"author":{"gitId":"KumChaiYin"},"content":"        }","lastModifiedDate":"2023-11-13"},{"lineNumber":149,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":150,"author":{"gitId":"KumChaiYin"},"content":"        @Override","lastModifiedDate":"2023-11-13"},{"lineNumber":151,"author":{"gitId":"KumChaiYin"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2023-11-13"},{"lineNumber":152,"author":{"gitId":"KumChaiYin"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-11-13"},{"lineNumber":153,"author":{"gitId":"KumChaiYin"},"content":"        }","lastModifiedDate":"2023-11-13"},{"lineNumber":154,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":155,"author":{"gitId":"KumChaiYin"},"content":"        @Override","lastModifiedDate":"2023-11-13"},{"lineNumber":156,"author":{"gitId":"KumChaiYin"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2023-11-13"},{"lineNumber":157,"author":{"gitId":"KumChaiYin"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-11-13"},{"lineNumber":158,"author":{"gitId":"KumChaiYin"},"content":"        }","lastModifiedDate":"2023-11-13"},{"lineNumber":159,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":160,"author":{"gitId":"KumChaiYin"},"content":"        @Override","lastModifiedDate":"2023-11-13"},{"lineNumber":161,"author":{"gitId":"KumChaiYin"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2023-11-13"},{"lineNumber":162,"author":{"gitId":"KumChaiYin"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-11-13"},{"lineNumber":163,"author":{"gitId":"KumChaiYin"},"content":"        }","lastModifiedDate":"2023-11-13"},{"lineNumber":164,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":165,"author":{"gitId":"KumChaiYin"},"content":"        @Override","lastModifiedDate":"2023-11-13"},{"lineNumber":166,"author":{"gitId":"KumChaiYin"},"content":"        public void sortData() {","lastModifiedDate":"2023-11-13"},{"lineNumber":167,"author":{"gitId":"KumChaiYin"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-11-13"},{"lineNumber":168,"author":{"gitId":"KumChaiYin"},"content":"        }","lastModifiedDate":"2023-11-13"},{"lineNumber":169,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":170,"author":{"gitId":"KumChaiYin"},"content":"        @Override","lastModifiedDate":"2023-11-13"},{"lineNumber":171,"author":{"gitId":"KumChaiYin"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2023-11-13"},{"lineNumber":172,"author":{"gitId":"KumChaiYin"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-11-13"},{"lineNumber":173,"author":{"gitId":"KumChaiYin"},"content":"        }","lastModifiedDate":"2023-11-13"},{"lineNumber":174,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":175,"author":{"gitId":"KumChaiYin"},"content":"        @Override","lastModifiedDate":"2023-11-13"},{"lineNumber":176,"author":{"gitId":"KumChaiYin"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2023-11-13"},{"lineNumber":177,"author":{"gitId":"KumChaiYin"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-11-13"},{"lineNumber":178,"author":{"gitId":"KumChaiYin"},"content":"        }","lastModifiedDate":"2023-11-13"},{"lineNumber":179,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":180,"author":{"gitId":"KumChaiYin"},"content":"        @Override","lastModifiedDate":"2023-11-13"},{"lineNumber":181,"author":{"gitId":"KumChaiYin"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2023-11-13"},{"lineNumber":182,"author":{"gitId":"KumChaiYin"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-11-13"},{"lineNumber":183,"author":{"gitId":"KumChaiYin"},"content":"        }","lastModifiedDate":"2023-11-13"},{"lineNumber":184,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":185,"author":{"gitId":"KumChaiYin"},"content":"        @Override","lastModifiedDate":"2023-11-13"},{"lineNumber":186,"author":{"gitId":"KumChaiYin"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2023-11-13"},{"lineNumber":187,"author":{"gitId":"KumChaiYin"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-11-13"},{"lineNumber":188,"author":{"gitId":"KumChaiYin"},"content":"        }","lastModifiedDate":"2023-11-13"},{"lineNumber":189,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":190,"author":{"gitId":"KumChaiYin"},"content":"        @Override","lastModifiedDate":"2023-11-13"},{"lineNumber":191,"author":{"gitId":"KumChaiYin"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2023-11-13"},{"lineNumber":192,"author":{"gitId":"KumChaiYin"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-11-13"},{"lineNumber":193,"author":{"gitId":"KumChaiYin"},"content":"        }","lastModifiedDate":"2023-11-13"},{"lineNumber":194,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":195,"author":{"gitId":"KumChaiYin"},"content":"        @Override","lastModifiedDate":"2023-11-13"},{"lineNumber":196,"author":{"gitId":"KumChaiYin"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2023-11-13"},{"lineNumber":197,"author":{"gitId":"KumChaiYin"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-11-13"},{"lineNumber":198,"author":{"gitId":"KumChaiYin"},"content":"        }","lastModifiedDate":"2023-11-13"},{"lineNumber":199,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":200,"author":{"gitId":"KumChaiYin"},"content":"        @Override","lastModifiedDate":"2023-11-13"},{"lineNumber":201,"author":{"gitId":"KumChaiYin"},"content":"        public boolean hasSamePolicyNumber(Person person) {","lastModifiedDate":"2023-11-13"},{"lineNumber":202,"author":{"gitId":"KumChaiYin"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-11-13"},{"lineNumber":203,"author":{"gitId":"KumChaiYin"},"content":"        }","lastModifiedDate":"2023-11-13"},{"lineNumber":204,"author":{"gitId":"KumChaiYin"},"content":"        @Override","lastModifiedDate":"2023-11-13"},{"lineNumber":205,"author":{"gitId":"KumChaiYin"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2023-11-13"},{"lineNumber":206,"author":{"gitId":"KumChaiYin"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-11-13"},{"lineNumber":207,"author":{"gitId":"KumChaiYin"},"content":"        }","lastModifiedDate":"2023-11-13"},{"lineNumber":208,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":209,"author":{"gitId":"KumChaiYin"},"content":"        @Override","lastModifiedDate":"2023-11-13"},{"lineNumber":210,"author":{"gitId":"KumChaiYin"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2023-11-13"},{"lineNumber":211,"author":{"gitId":"KumChaiYin"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-11-13"},{"lineNumber":212,"author":{"gitId":"KumChaiYin"},"content":"        }","lastModifiedDate":"2023-11-13"},{"lineNumber":213,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":214,"author":{"gitId":"KumChaiYin"},"content":"        @Override","lastModifiedDate":"2023-11-13"},{"lineNumber":215,"author":{"gitId":"KumChaiYin"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2023-11-13"},{"lineNumber":216,"author":{"gitId":"KumChaiYin"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-11-13"},{"lineNumber":217,"author":{"gitId":"KumChaiYin"},"content":"        }","lastModifiedDate":"2023-11-13"},{"lineNumber":218,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":219,"author":{"gitId":"KumChaiYin"},"content":"        @Override","lastModifiedDate":"2023-11-13"},{"lineNumber":220,"author":{"gitId":"KumChaiYin"},"content":"        public void batchDeleteWithPredicate(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2023-11-13"},{"lineNumber":221,"author":{"gitId":"KumChaiYin"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-11-13"},{"lineNumber":222,"author":{"gitId":"KumChaiYin"},"content":"        }","lastModifiedDate":"2023-11-13"},{"lineNumber":223,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":224,"author":{"gitId":"KumChaiYin"},"content":"        @Override","lastModifiedDate":"2023-11-13"},{"lineNumber":225,"author":{"gitId":"KumChaiYin"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2023-11-13"},{"lineNumber":226,"author":{"gitId":"KumChaiYin"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-11-13"},{"lineNumber":227,"author":{"gitId":"KumChaiYin"},"content":"        }","lastModifiedDate":"2023-11-13"},{"lineNumber":228,"author":{"gitId":"KumChaiYin"},"content":"    }","lastModifiedDate":"2023-11-13"},{"lineNumber":229,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":230,"author":{"gitId":"KumChaiYin"},"content":"    /**","lastModifiedDate":"2023-11-13"},{"lineNumber":231,"author":{"gitId":"KumChaiYin"},"content":"     * A Model stub that always accept the person being added and allows batchDelete.","lastModifiedDate":"2023-11-13"},{"lineNumber":232,"author":{"gitId":"KumChaiYin"},"content":"     */","lastModifiedDate":"2023-11-13"},{"lineNumber":233,"author":{"gitId":"KumChaiYin"},"content":"    private class ModelStubAcceptingPersonAdded extends BatchDeleteCommandTest.ModelStub {","lastModifiedDate":"2023-11-13"},{"lineNumber":234,"author":{"gitId":"KumChaiYin"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-11-13"},{"lineNumber":235,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":236,"author":{"gitId":"KumChaiYin"},"content":"        @Override","lastModifiedDate":"2023-11-13"},{"lineNumber":237,"author":{"gitId":"KumChaiYin"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2023-11-13"},{"lineNumber":238,"author":{"gitId":"KumChaiYin"},"content":"            requireNonNull(person);","lastModifiedDate":"2023-11-13"},{"lineNumber":239,"author":{"gitId":"KumChaiYin"},"content":"            personsAdded.add(person);","lastModifiedDate":"2023-11-13"},{"lineNumber":240,"author":{"gitId":"KumChaiYin"},"content":"        }","lastModifiedDate":"2023-11-13"},{"lineNumber":241,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":242,"author":{"gitId":"KumChaiYin"},"content":"        @Override","lastModifiedDate":"2023-11-13"},{"lineNumber":243,"author":{"gitId":"KumChaiYin"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2023-11-13"},{"lineNumber":244,"author":{"gitId":"KumChaiYin"},"content":"            return new AddressBook();","lastModifiedDate":"2023-11-13"},{"lineNumber":245,"author":{"gitId":"KumChaiYin"},"content":"        }","lastModifiedDate":"2023-11-13"},{"lineNumber":246,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":247,"author":{"gitId":"KumChaiYin"},"content":"        @Override","lastModifiedDate":"2023-11-13"},{"lineNumber":248,"author":{"gitId":"KumChaiYin"},"content":"        public void batchDeleteWithPredicate(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2023-11-13"},{"lineNumber":249,"author":{"gitId":"KumChaiYin"},"content":"            requireNonNull(predicate);","lastModifiedDate":"2023-11-13"},{"lineNumber":250,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":251,"author":{"gitId":"KumChaiYin"},"content":"            Iterator\u003cPerson\u003e iterator \u003d personsAdded.iterator();","lastModifiedDate":"2023-11-13"},{"lineNumber":252,"author":{"gitId":"KumChaiYin"},"content":"            while (iterator.hasNext()) {","lastModifiedDate":"2023-11-13"},{"lineNumber":253,"author":{"gitId":"KumChaiYin"},"content":"                Person person \u003d iterator.next();","lastModifiedDate":"2023-11-13"},{"lineNumber":254,"author":{"gitId":"KumChaiYin"},"content":"                if (predicate.test(person)) {","lastModifiedDate":"2023-11-13"},{"lineNumber":255,"author":{"gitId":"KumChaiYin"},"content":"                    iterator.remove(); // Safely remove the current element","lastModifiedDate":"2023-11-13"},{"lineNumber":256,"author":{"gitId":"KumChaiYin"},"content":"                }","lastModifiedDate":"2023-11-13"},{"lineNumber":257,"author":{"gitId":"KumChaiYin"},"content":"            }","lastModifiedDate":"2023-11-13"},{"lineNumber":258,"author":{"gitId":"KumChaiYin"},"content":"        }","lastModifiedDate":"2023-11-13"},{"lineNumber":259,"author":{"gitId":"KumChaiYin"},"content":"    }","lastModifiedDate":"2023-11-13"},{"lineNumber":260,"author":{"gitId":"KumChaiYin"},"content":"}","lastModifiedDate":"2023-11-13"}],"authorContributionMap":{"KumChaiYin":260}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"suryanshkushwaha"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_COMPANY;","lastModifiedDate":"2023-10-23"},{"lineNumber":7,"author":{"gitId":"KumChaiYin"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DELETE_MONTH;","lastModifiedDate":"2023-11-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"KumChaiYin"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LICENCE_PLATE;","lastModifiedDate":"2023-10-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"KumChaiYin"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NRIC;","lastModifiedDate":"2023-10-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"KumChaiYin"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_POLICY_EXPIRY_DATE;","lastModifiedDate":"2023-10-19"},{"lineNumber":14,"author":{"gitId":"KumChaiYin"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_POLICY_ISSUE_DATE;","lastModifiedDate":"2023-10-19"},{"lineNumber":15,"author":{"gitId":"KumChaiYin"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_POLICY_NUMBER;","lastModifiedDate":"2023-10-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-07-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2018-01-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-06-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":27,"author":{"gitId":"brendanneojw"},"content":"import seedu.address.model.person.predicates.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-11-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-07-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_AMY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2017-07-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_BOB \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2017-07-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2017-07-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2017-07-05"},{"lineNumber":45,"author":{"gitId":"KumChaiYin"},"content":"    public static final String VALID_NRIC_AMY \u003d \"567A\";","lastModifiedDate":"2023-10-19"},{"lineNumber":46,"author":{"gitId":"cyaoxuan"},"content":"    public static final String VALID_NRIC_BOB \u003d \"123Z\";","lastModifiedDate":"2023-10-13"},{"lineNumber":47,"author":{"gitId":"KumChaiYin"},"content":"    public static final String VALID_LICENCE_PLATE_AMY \u003d \"SBC123D\";","lastModifiedDate":"2023-10-19"},{"lineNumber":48,"author":{"gitId":"cyaoxuan"},"content":"    public static final String VALID_LICENCE_PLATE_BOB \u003d \"SYZ4321Z\";","lastModifiedDate":"2023-10-13"},{"lineNumber":49,"author":{"gitId":"suryanshkushwaha"},"content":"    public static final String VALID_COMPANY_AMY \u003d \"NTUC\";","lastModifiedDate":"2023-10-23"},{"lineNumber":50,"author":{"gitId":"suryanshkushwaha"},"content":"    public static final String VALID_COMPANY_BOB \u003d \"InsureMe\";","lastModifiedDate":"2023-10-23"},{"lineNumber":51,"author":{"gitId":"KumChaiYin"},"content":"    public static final String VALID_POLICY_NO_AMY \u003d \"AIA1234\";","lastModifiedDate":"2023-10-19"},{"lineNumber":52,"author":{"gitId":"cyaoxuan"},"content":"    public static final String VALID_POLICY_NO_BOB \u003d \"BBBB2\";","lastModifiedDate":"2023-10-13"},{"lineNumber":53,"author":{"gitId":"cyaoxuan"},"content":"    public static final String VALID_POLICY_ISSUE_DATE_AMY \u003d \"01-01-2023\";","lastModifiedDate":"2023-10-13"},{"lineNumber":54,"author":{"gitId":"cyaoxuan"},"content":"    public static final String VALID_POLICY_ISSUE_DATE_BOB \u003d \"01-01-2013\";","lastModifiedDate":"2023-10-13"},{"lineNumber":55,"author":{"gitId":"cyaoxuan"},"content":"    public static final String VALID_POLICY_EXPIRY_DATE_AMY \u003d \"01-01-2030\";","lastModifiedDate":"2023-10-13"},{"lineNumber":56,"author":{"gitId":"cyaoxuan"},"content":"    public static final String VALID_POLICY_EXPIRY_DATE_BOB \u003d \"01-01-2025\";","lastModifiedDate":"2023-10-13"},{"lineNumber":57,"author":{"gitId":"cyaoxuan"},"content":"    public static final String VALID_REMARK_AMY \u003d \"Like skiing.\";","lastModifiedDate":"2023-11-01"},{"lineNumber":58,"author":{"gitId":"cyaoxuan"},"content":"    public static final String VALID_REMARK_BOB \u003d \"Favourite pastime: Eating\";","lastModifiedDate":"2023-11-01"},{"lineNumber":59,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":67,"author":{"gitId":"KumChaiYin"},"content":"    public static final String NRIC_DESC_AMY \u003d \" \" + PREFIX_NRIC + VALID_NRIC_AMY;","lastModifiedDate":"2023-10-19"},{"lineNumber":68,"author":{"gitId":"KumChaiYin"},"content":"    public static final String NRIC_DESC_BOB \u003d \" \" + PREFIX_NRIC + VALID_NRIC_BOB;","lastModifiedDate":"2023-10-19"},{"lineNumber":69,"author":{"gitId":"cyaoxuan"},"content":"    public static final String LICENCE_PLATE_DESC_AMY \u003d \" \" + PREFIX_LICENCE_PLATE + VALID_LICENCE_PLATE_AMY;","lastModifiedDate":"2023-11-12"},{"lineNumber":70,"author":{"gitId":"cyaoxuan"},"content":"    public static final String LICENCE_PLATE_DESC_BOB \u003d \" \" + PREFIX_LICENCE_PLATE + VALID_LICENCE_PLATE_BOB;","lastModifiedDate":"2023-11-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_AMY \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_BOB \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":75,"author":{"gitId":"suryanshkushwaha"},"content":"    public static final String COMPANY_DESC_AMY \u003d \" \" + PREFIX_COMPANY + VALID_COMPANY_AMY;","lastModifiedDate":"2023-10-23"},{"lineNumber":76,"author":{"gitId":"suryanshkushwaha"},"content":"    public static final String COMPANY_DESC_BOB \u003d \" \" + PREFIX_COMPANY + VALID_COMPANY_BOB;","lastModifiedDate":"2023-10-23"},{"lineNumber":77,"author":{"gitId":"KumChaiYin"},"content":"    public static final String POLICY_NO_DESC_AMY \u003d \" \" + PREFIX_POLICY_NUMBER + VALID_POLICY_NO_AMY;","lastModifiedDate":"2023-10-19"},{"lineNumber":78,"author":{"gitId":"KumChaiYin"},"content":"    public static final String POLICY_NO_DESC_BOB \u003d \" \" + PREFIX_POLICY_NUMBER + VALID_POLICY_NO_BOB;","lastModifiedDate":"2023-10-19"},{"lineNumber":79,"author":{"gitId":"KumChaiYin"},"content":"    public static final String POLICY_ISSUE_DATE_DESC_AMY \u003d \" \" + PREFIX_POLICY_ISSUE_DATE","lastModifiedDate":"2023-10-19"},{"lineNumber":80,"author":{"gitId":"KumChaiYin"},"content":"            + VALID_POLICY_ISSUE_DATE_AMY;","lastModifiedDate":"2023-10-19"},{"lineNumber":81,"author":{"gitId":"KumChaiYin"},"content":"    public static final String POLICY_ISSUE_DATE_DESC_BOB \u003d \" \" + PREFIX_POLICY_ISSUE_DATE","lastModifiedDate":"2023-10-19"},{"lineNumber":82,"author":{"gitId":"KumChaiYin"},"content":"            + VALID_POLICY_ISSUE_DATE_BOB;","lastModifiedDate":"2023-10-19"},{"lineNumber":83,"author":{"gitId":"KumChaiYin"},"content":"    public static final String POLICY_EXPIRY_DATE_DESC_AMY \u003d \" \" + PREFIX_POLICY_EXPIRY_DATE","lastModifiedDate":"2023-10-19"},{"lineNumber":84,"author":{"gitId":"KumChaiYin"},"content":"            + VALID_POLICY_EXPIRY_DATE_AMY;","lastModifiedDate":"2023-10-19"},{"lineNumber":85,"author":{"gitId":"KumChaiYin"},"content":"    public static final String POLICY_EXPIRY_DATE_DESC_BOB \u003d \" \" + PREFIX_POLICY_EXPIRY_DATE","lastModifiedDate":"2023-10-19"},{"lineNumber":86,"author":{"gitId":"KumChaiYin"},"content":"            + VALID_POLICY_EXPIRY_DATE_BOB;","lastModifiedDate":"2023-10-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public static final String INVALID_ADDRESS_DESC \u003d \" \" + PREFIX_ADDRESS; // empty string not allowed for addresses","lastModifiedDate":"2017-07-05"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2017-07-05"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":93,"author":{"gitId":"KumChaiYin"},"content":"    public static final String VALID_DELETE_MONTH \u003d \"02-2020\";","lastModifiedDate":"2023-11-13"},{"lineNumber":94,"author":{"gitId":"KumChaiYin"},"content":"    public static final String VALID_DELETE_MONTH_2 \u003d \"10-2020\";","lastModifiedDate":"2023-11-13"},{"lineNumber":95,"author":{"gitId":"KumChaiYin"},"content":"    public static final String INVALID_DELETE_MONTH \u003d \"2020-02\";","lastModifiedDate":"2023-11-13"},{"lineNumber":96,"author":{"gitId":"KumChaiYin"},"content":"    public static final String VALID_DELETE_MONTH_DESC \u003d \" \" + PREFIX_DELETE_MONTH + VALID_DELETE_MONTH;","lastModifiedDate":"2023-11-13"},{"lineNumber":97,"author":{"gitId":"KumChaiYin"},"content":"    public static final String INVALID_DELETE_MONTH_DESC \u003d \" \" + PREFIX_DELETE_MONTH + INVALID_DELETE_MONTH;","lastModifiedDate":"2023-11-13"},{"lineNumber":98,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        DESC_AMY \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        DESC_BOB \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":121,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     * - the address book, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2019-01-25"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPersonList());","lastModifiedDate":"2018-01-10"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredPersonList());","lastModifiedDate":"2017-06-05"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":158,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2018-01-31"},{"lineNumber":159,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":160,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    public static void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2018-01-31"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPersonList().size());","lastModifiedDate":"2018-01-31"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        Person person \u003d model.getFilteredPersonList().get(targetIndex.getZeroBased());","lastModifiedDate":"2018-01-31"},{"lineNumber":165,"author":{"gitId":"brendanneojw"},"content":"        model.updateFilteredPersonList(new NameContainsKeywordsPredicate(person.getName().fullName));","lastModifiedDate":"2023-10-18"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        assertEquals(1, model.getFilteredPersonList().size());","lastModifiedDate":"2018-02-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":170,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"brendanneojw":2,"suryanshkushwaha":5,"KumChaiYin":27,"-":124,"cyaoxuan":12}},{"path":"src/test/java/seedu/address/logic/commands/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2018-01-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS,","lastModifiedDate":"2019-02-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                Messages.format(personToDelete));","lastModifiedDate":"2019-02-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-06-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":49,"author":{"gitId":"RSXIX"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_NOT_FOUND_INDEX);","lastModifiedDate":"2023-10-17"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS,","lastModifiedDate":"2019-02-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                Messages.format(personToDelete));","lastModifiedDate":"2019-02-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        showNoPerson(expectedModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-06-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-06-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-06-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":79,"author":{"gitId":"RSXIX"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_NOT_FOUND_INDEX);","lastModifiedDate":"2023-10-17"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        DeleteCommand deleteFirstCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        DeleteCommand deleteSecondCommand \u003d new DeleteCommand(INDEX_SECOND_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        DeleteCommand deleteFirstCommandCopy \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2019-02-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(targetIndex);","lastModifiedDate":"2019-02-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        String expected \u003d DeleteCommand.class.getCanonicalName() + \"{targetIndex\u003d\" + targetIndex + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertEquals(expected, deleteCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2017-06-05"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    private void showNoPerson(Model model) {","lastModifiedDate":"2017-06-05"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(p -\u003e false);","lastModifiedDate":"2017-06-12"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertTrue(model.getFilteredPersonList().isEmpty());","lastModifiedDate":"2018-02-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":120,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"RSXIX":2,"-":118}},{"path":"src/test/java/seedu/address/logic/commands/EditPersonDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorTest {","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptorWithSameValues \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(DESC_AMY));","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(null));","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(5));","lastModifiedDate":"2017-05-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(DESC_BOB));","lastModifiedDate":"2017-05-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2019-02-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        String expected \u003d EditPersonDescriptor.class.getCanonicalName() + \"{name\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                + editPersonDescriptor.getName().orElse(null) + \", phone\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                + editPersonDescriptor.getPhone().orElse(null) + \", email\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                + editPersonDescriptor.getEmail().orElse(null) + \", address\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                + editPersonDescriptor.getAddress().orElse(null) + \", tags\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":68,"author":{"gitId":"suryanshkushwaha"},"content":"                + editPersonDescriptor.getTags().orElse(null) + \", nric\u003d\"","lastModifiedDate":"2023-10-17"},{"lineNumber":69,"author":{"gitId":"suryanshkushwaha"},"content":"                + editPersonDescriptor.getNric().orElse(null) + \", licencePlate\u003d\"","lastModifiedDate":"2023-10-17"},{"lineNumber":70,"author":{"gitId":"suryanshkushwaha"},"content":"                + editPersonDescriptor.getLicencePlate().orElse(null) + \", policy\u003d\"","lastModifiedDate":"2023-10-17"},{"lineNumber":71,"author":{"gitId":"suryanshkushwaha"},"content":"                + editPersonDescriptor.getPolicy() + \"}\";","lastModifiedDate":"2023-10-17"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertEquals(expected, editPersonDescriptor.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"suryanshkushwaha":4,"-":70}},{"path":"src/test/java/seedu/address/logic/commands/FindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_PERSONS_LISTED_OVERVIEW;","lastModifiedDate":"2023-07-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"brendanneojw"},"content":"import seedu.address.model.person.predicates.CompanyContainsKeywordsPredicate;","lastModifiedDate":"2023-11-11"},{"lineNumber":18,"author":{"gitId":"brendanneojw"},"content":"import seedu.address.model.person.predicates.EmailContainsKeywordsPredicate;","lastModifiedDate":"2023-11-11"},{"lineNumber":19,"author":{"gitId":"brendanneojw"},"content":"import seedu.address.model.person.predicates.LicenceContainsKeywordsPredicate;","lastModifiedDate":"2023-11-11"},{"lineNumber":20,"author":{"gitId":"brendanneojw"},"content":"import seedu.address.model.person.predicates.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-11-11"},{"lineNumber":21,"author":{"gitId":"brendanneojw"},"content":"import seedu.address.model.person.predicates.NricContainsKeywordsPredicate;","lastModifiedDate":"2023-11-11"},{"lineNumber":22,"author":{"gitId":"brendanneojw"},"content":"import seedu.address.model.person.predicates.PhoneContainsKeywordsPredicate;","lastModifiedDate":"2023-11-11"},{"lineNumber":23,"author":{"gitId":"brendanneojw"},"content":"import seedu.address.model.person.predicates.PolicyExpiryContainsKeywordsPredicate;","lastModifiedDate":"2023-11-11"},{"lineNumber":24,"author":{"gitId":"brendanneojw"},"content":"import seedu.address.model.person.predicates.PolicyIssueContainsKeywordsPredicate;","lastModifiedDate":"2023-11-11"},{"lineNumber":25,"author":{"gitId":"brendanneojw"},"content":"import seedu.address.model.person.predicates.PolicyNumberContainsKeywordsPredicate;","lastModifiedDate":"2023-11-11"},{"lineNumber":26,"author":{"gitId":"brendanneojw"},"content":"import seedu.address.model.person.predicates.TagContainsKeywordsPredicate;","lastModifiedDate":"2023-11-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"public class FindCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2018-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"brendanneojw"},"content":"        NameContainsKeywordsPredicate firstNamePredicate \u003d","lastModifiedDate":"2023-10-18"},{"lineNumber":38,"author":{"gitId":"brendanneojw"},"content":"                new NameContainsKeywordsPredicate(\"first\");","lastModifiedDate":"2023-10-18"},{"lineNumber":39,"author":{"gitId":"brendanneojw"},"content":"        NameContainsKeywordsPredicate secondNamePredicate \u003d","lastModifiedDate":"2023-10-18"},{"lineNumber":40,"author":{"gitId":"brendanneojw"},"content":"                new NameContainsKeywordsPredicate(\"\");","lastModifiedDate":"2023-11-13"},{"lineNumber":41,"author":{"gitId":"brendanneojw"},"content":"        LicenceContainsKeywordsPredicate firstLicencePredicate \u003d","lastModifiedDate":"2023-10-18"},{"lineNumber":42,"author":{"gitId":"brendanneojw"},"content":"                new LicenceContainsKeywordsPredicate(\"SAA1A\");","lastModifiedDate":"2023-10-18"},{"lineNumber":43,"author":{"gitId":"brendanneojw"},"content":"        LicenceContainsKeywordsPredicate secondLicencePredicate \u003d","lastModifiedDate":"2023-10-18"},{"lineNumber":44,"author":{"gitId":"brendanneojw"},"content":"                new LicenceContainsKeywordsPredicate(\"\");","lastModifiedDate":"2023-11-13"},{"lineNumber":45,"author":{"gitId":"brendanneojw"},"content":"        NricContainsKeywordsPredicate firstNricPredicate \u003d","lastModifiedDate":"2023-10-18"},{"lineNumber":46,"author":{"gitId":"brendanneojw"},"content":"                new NricContainsKeywordsPredicate(\"000A\");","lastModifiedDate":"2023-10-18"},{"lineNumber":47,"author":{"gitId":"brendanneojw"},"content":"        NricContainsKeywordsPredicate secondNricPredicate \u003d","lastModifiedDate":"2023-10-18"},{"lineNumber":48,"author":{"gitId":"brendanneojw"},"content":"                new NricContainsKeywordsPredicate(\"\");","lastModifiedDate":"2023-11-13"},{"lineNumber":49,"author":{"gitId":"brendanneojw"},"content":"        PhoneContainsKeywordsPredicate firstPhonePredicate \u003d","lastModifiedDate":"2023-10-18"},{"lineNumber":50,"author":{"gitId":"brendanneojw"},"content":"                new PhoneContainsKeywordsPredicate(\"12345678\");","lastModifiedDate":"2023-10-18"},{"lineNumber":51,"author":{"gitId":"brendanneojw"},"content":"        PhoneContainsKeywordsPredicate secondPhonePredicate \u003d","lastModifiedDate":"2023-10-18"},{"lineNumber":52,"author":{"gitId":"brendanneojw"},"content":"                new PhoneContainsKeywordsPredicate(\"\");","lastModifiedDate":"2023-11-13"},{"lineNumber":53,"author":{"gitId":"brendanneojw"},"content":"        PolicyNumberContainsKeywordsPredicate firstPolicyNumPredicate \u003d","lastModifiedDate":"2023-10-18"},{"lineNumber":54,"author":{"gitId":"brendanneojw"},"content":"                new PolicyNumberContainsKeywordsPredicate(\"A1234\");","lastModifiedDate":"2023-10-18"},{"lineNumber":55,"author":{"gitId":"brendanneojw"},"content":"        PolicyNumberContainsKeywordsPredicate secondPolicyNumPredicate \u003d","lastModifiedDate":"2023-10-18"},{"lineNumber":56,"author":{"gitId":"brendanneojw"},"content":"                new PolicyNumberContainsKeywordsPredicate(\"\");","lastModifiedDate":"2023-11-13"},{"lineNumber":57,"author":{"gitId":"brendanneojw"},"content":"        TagContainsKeywordsPredicate firstTagPredicate \u003d","lastModifiedDate":"2023-10-18"},{"lineNumber":58,"author":{"gitId":"brendanneojw"},"content":"                new TagContainsKeywordsPredicate(\"friends\");","lastModifiedDate":"2023-10-18"},{"lineNumber":59,"author":{"gitId":"brendanneojw"},"content":"        TagContainsKeywordsPredicate secondTagPredicate \u003d","lastModifiedDate":"2023-10-18"},{"lineNumber":60,"author":{"gitId":"brendanneojw"},"content":"                new TagContainsKeywordsPredicate(\"\");","lastModifiedDate":"2023-11-13"},{"lineNumber":61,"author":{"gitId":"brendanneojw"},"content":"        PolicyExpiryContainsKeywordsPredicate firstPolicyExpiryPredicate \u003d","lastModifiedDate":"2023-10-18"},{"lineNumber":62,"author":{"gitId":"brendanneojw"},"content":"                new PolicyExpiryContainsKeywordsPredicate(\"25-12-2023\");","lastModifiedDate":"2023-10-18"},{"lineNumber":63,"author":{"gitId":"brendanneojw"},"content":"        PolicyExpiryContainsKeywordsPredicate secondPolicyExpiryPredicate \u003d","lastModifiedDate":"2023-10-18"},{"lineNumber":64,"author":{"gitId":"brendanneojw"},"content":"                new PolicyExpiryContainsKeywordsPredicate(\"\");","lastModifiedDate":"2023-11-13"},{"lineNumber":65,"author":{"gitId":"brendanneojw"},"content":"        EmailContainsKeywordsPredicate firstEmailPredicate \u003d","lastModifiedDate":"2023-10-18"},{"lineNumber":66,"author":{"gitId":"brendanneojw"},"content":"                new EmailContainsKeywordsPredicate(\"weewooowaa@example.com\");","lastModifiedDate":"2023-10-18"},{"lineNumber":67,"author":{"gitId":"brendanneojw"},"content":"        EmailContainsKeywordsPredicate secondEmailPredicate \u003d","lastModifiedDate":"2023-10-18"},{"lineNumber":68,"author":{"gitId":"brendanneojw"},"content":"                new EmailContainsKeywordsPredicate(\"\");","lastModifiedDate":"2023-11-13"},{"lineNumber":69,"author":{"gitId":"brendanneojw"},"content":"        PolicyIssueContainsKeywordsPredicate firstPolicyIssuePredicate \u003d","lastModifiedDate":"2023-10-18"},{"lineNumber":70,"author":{"gitId":"brendanneojw"},"content":"                new PolicyIssueContainsKeywordsPredicate(\"12-12-2022\");","lastModifiedDate":"2023-10-18"},{"lineNumber":71,"author":{"gitId":"brendanneojw"},"content":"        PolicyIssueContainsKeywordsPredicate secondPolicyIssuePredicate \u003d","lastModifiedDate":"2023-10-18"},{"lineNumber":72,"author":{"gitId":"brendanneojw"},"content":"                new PolicyIssueContainsKeywordsPredicate(\"\");","lastModifiedDate":"2023-11-13"},{"lineNumber":73,"author":{"gitId":"suryanshkushwaha"},"content":"        CompanyContainsKeywordsPredicate firstCompanyPredicate \u003d","lastModifiedDate":"2023-10-23"},{"lineNumber":74,"author":{"gitId":"suryanshkushwaha"},"content":"                new CompanyContainsKeywordsPredicate(\"NTUC\");","lastModifiedDate":"2023-10-23"},{"lineNumber":75,"author":{"gitId":"suryanshkushwaha"},"content":"        CompanyContainsKeywordsPredicate secondCompanyPredicate \u003d","lastModifiedDate":"2023-10-23"},{"lineNumber":76,"author":{"gitId":"brendanneojw"},"content":"                new CompanyContainsKeywordsPredicate(\"\");","lastModifiedDate":"2023-11-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":78,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":79,"author":{"gitId":"brendanneojw"},"content":"        FindCommand findFirstCommand \u003d new FindCommand(firstNamePredicate, firstLicencePredicate,","lastModifiedDate":"2023-10-18"},{"lineNumber":80,"author":{"gitId":"brendanneojw"},"content":"                firstNricPredicate, firstPhonePredicate, firstPolicyNumPredicate, firstTagPredicate,","lastModifiedDate":"2023-10-18"},{"lineNumber":81,"author":{"gitId":"suryanshkushwaha"},"content":"                firstPolicyExpiryPredicate, firstEmailPredicate, firstPolicyIssuePredicate,","lastModifiedDate":"2023-10-23"},{"lineNumber":82,"author":{"gitId":"suryanshkushwaha"},"content":"                firstCompanyPredicate);","lastModifiedDate":"2023-10-23"},{"lineNumber":83,"author":{"gitId":"brendanneojw"},"content":"        FindCommand findSecondCommand \u003d new FindCommand(secondNamePredicate, secondLicencePredicate,","lastModifiedDate":"2023-10-18"},{"lineNumber":84,"author":{"gitId":"brendanneojw"},"content":"                secondNricPredicate, secondPhonePredicate, secondPolicyNumPredicate, secondTagPredicate,","lastModifiedDate":"2023-10-18"},{"lineNumber":85,"author":{"gitId":"suryanshkushwaha"},"content":"                secondPolicyExpiryPredicate, secondEmailPredicate, secondPolicyIssuePredicate,","lastModifiedDate":"2023-10-23"},{"lineNumber":86,"author":{"gitId":"suryanshkushwaha"},"content":"                secondCompanyPredicate);","lastModifiedDate":"2023-10-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"brendanneojw"},"content":"        FindCommand findFirstCommandCopy \u003d new FindCommand(firstNamePredicate, firstLicencePredicate,","lastModifiedDate":"2023-10-18"},{"lineNumber":93,"author":{"gitId":"brendanneojw"},"content":"                firstNricPredicate, firstPhonePredicate, firstPolicyNumPredicate, firstTagPredicate,","lastModifiedDate":"2023-10-18"},{"lineNumber":94,"author":{"gitId":"suryanshkushwaha"},"content":"                firstPolicyExpiryPredicate, firstEmailPredicate, firstPolicyIssuePredicate,","lastModifiedDate":"2023-10-23"},{"lineNumber":95,"author":{"gitId":"suryanshkushwaha"},"content":"                firstCompanyPredicate);","lastModifiedDate":"2023-10-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":106,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":107,"author":{"gitId":"brendanneojw"},"content":"        // One field different means different person -\u003e return false","lastModifiedDate":"2023-11-13"},{"lineNumber":108,"author":{"gitId":"brendanneojw"},"content":"        FindCommand findFirstCommandOneDiffField \u003d new FindCommand(secondNamePredicate, firstLicencePredicate,","lastModifiedDate":"2023-11-13"},{"lineNumber":109,"author":{"gitId":"brendanneojw"},"content":"                firstNricPredicate, firstPhonePredicate, firstPolicyNumPredicate, firstTagPredicate,","lastModifiedDate":"2023-11-13"},{"lineNumber":110,"author":{"gitId":"brendanneojw"},"content":"                firstPolicyExpiryPredicate, firstEmailPredicate, firstPolicyIssuePredicate,","lastModifiedDate":"2023-11-13"},{"lineNumber":111,"author":{"gitId":"brendanneojw"},"content":"                firstCompanyPredicate);","lastModifiedDate":"2023-11-13"},{"lineNumber":112,"author":{"gitId":"brendanneojw"},"content":"        assertFalse(findFirstCommand.equals(findFirstCommandOneDiffField));","lastModifiedDate":"2023-11-13"},{"lineNumber":113,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":114,"author":{"gitId":"brendanneojw"},"content":"        findFirstCommandOneDiffField \u003d new FindCommand(firstNamePredicate, secondLicencePredicate,","lastModifiedDate":"2023-11-13"},{"lineNumber":115,"author":{"gitId":"brendanneojw"},"content":"                firstNricPredicate, firstPhonePredicate, firstPolicyNumPredicate, firstTagPredicate,","lastModifiedDate":"2023-11-13"},{"lineNumber":116,"author":{"gitId":"brendanneojw"},"content":"                firstPolicyExpiryPredicate, firstEmailPredicate, firstPolicyIssuePredicate,","lastModifiedDate":"2023-11-13"},{"lineNumber":117,"author":{"gitId":"brendanneojw"},"content":"                firstCompanyPredicate);","lastModifiedDate":"2023-11-13"},{"lineNumber":118,"author":{"gitId":"brendanneojw"},"content":"        assertFalse(findFirstCommand.equals(findFirstCommandOneDiffField));","lastModifiedDate":"2023-11-13"},{"lineNumber":119,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":120,"author":{"gitId":"brendanneojw"},"content":"        findFirstCommandOneDiffField \u003d new FindCommand(firstNamePredicate, firstLicencePredicate,","lastModifiedDate":"2023-11-13"},{"lineNumber":121,"author":{"gitId":"brendanneojw"},"content":"                secondNricPredicate, firstPhonePredicate, firstPolicyNumPredicate, firstTagPredicate,","lastModifiedDate":"2023-11-13"},{"lineNumber":122,"author":{"gitId":"brendanneojw"},"content":"                firstPolicyExpiryPredicate, firstEmailPredicate, firstPolicyIssuePredicate,","lastModifiedDate":"2023-11-13"},{"lineNumber":123,"author":{"gitId":"brendanneojw"},"content":"                firstCompanyPredicate);","lastModifiedDate":"2023-11-13"},{"lineNumber":124,"author":{"gitId":"brendanneojw"},"content":"        assertFalse(findFirstCommand.equals(findFirstCommandOneDiffField));","lastModifiedDate":"2023-11-13"},{"lineNumber":125,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":126,"author":{"gitId":"brendanneojw"},"content":"        findFirstCommandOneDiffField \u003d new FindCommand(firstNamePredicate, firstLicencePredicate,","lastModifiedDate":"2023-11-13"},{"lineNumber":127,"author":{"gitId":"brendanneojw"},"content":"                firstNricPredicate, secondPhonePredicate, firstPolicyNumPredicate, firstTagPredicate,","lastModifiedDate":"2023-11-13"},{"lineNumber":128,"author":{"gitId":"brendanneojw"},"content":"                firstPolicyExpiryPredicate, firstEmailPredicate, firstPolicyIssuePredicate,","lastModifiedDate":"2023-11-13"},{"lineNumber":129,"author":{"gitId":"brendanneojw"},"content":"                firstCompanyPredicate);","lastModifiedDate":"2023-11-13"},{"lineNumber":130,"author":{"gitId":"brendanneojw"},"content":"        assertFalse(findFirstCommand.equals(findFirstCommandOneDiffField));","lastModifiedDate":"2023-11-13"},{"lineNumber":131,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":132,"author":{"gitId":"brendanneojw"},"content":"        findFirstCommandOneDiffField \u003d new FindCommand(firstNamePredicate, firstLicencePredicate,","lastModifiedDate":"2023-11-13"},{"lineNumber":133,"author":{"gitId":"brendanneojw"},"content":"                firstNricPredicate, firstPhonePredicate, secondPolicyNumPredicate, firstTagPredicate,","lastModifiedDate":"2023-11-13"},{"lineNumber":134,"author":{"gitId":"brendanneojw"},"content":"                firstPolicyExpiryPredicate, firstEmailPredicate, firstPolicyIssuePredicate,","lastModifiedDate":"2023-11-13"},{"lineNumber":135,"author":{"gitId":"brendanneojw"},"content":"                firstCompanyPredicate);","lastModifiedDate":"2023-11-13"},{"lineNumber":136,"author":{"gitId":"brendanneojw"},"content":"        assertFalse(findFirstCommand.equals(findFirstCommandOneDiffField));","lastModifiedDate":"2023-11-13"},{"lineNumber":137,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":138,"author":{"gitId":"brendanneojw"},"content":"        findFirstCommandOneDiffField \u003d new FindCommand(firstNamePredicate, firstLicencePredicate,","lastModifiedDate":"2023-11-13"},{"lineNumber":139,"author":{"gitId":"brendanneojw"},"content":"                firstNricPredicate, firstPhonePredicate, firstPolicyNumPredicate, secondTagPredicate,","lastModifiedDate":"2023-11-13"},{"lineNumber":140,"author":{"gitId":"brendanneojw"},"content":"                firstPolicyExpiryPredicate, firstEmailPredicate, firstPolicyIssuePredicate,","lastModifiedDate":"2023-11-13"},{"lineNumber":141,"author":{"gitId":"brendanneojw"},"content":"                firstCompanyPredicate);","lastModifiedDate":"2023-11-13"},{"lineNumber":142,"author":{"gitId":"brendanneojw"},"content":"        assertFalse(findFirstCommand.equals(findFirstCommandOneDiffField));","lastModifiedDate":"2023-11-13"},{"lineNumber":143,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":144,"author":{"gitId":"brendanneojw"},"content":"        findFirstCommandOneDiffField \u003d new FindCommand(firstNamePredicate, firstLicencePredicate,","lastModifiedDate":"2023-11-13"},{"lineNumber":145,"author":{"gitId":"brendanneojw"},"content":"                firstNricPredicate, firstPhonePredicate, firstPolicyNumPredicate, firstTagPredicate,","lastModifiedDate":"2023-11-13"},{"lineNumber":146,"author":{"gitId":"brendanneojw"},"content":"               secondPolicyExpiryPredicate, firstEmailPredicate, firstPolicyIssuePredicate,","lastModifiedDate":"2023-11-13"},{"lineNumber":147,"author":{"gitId":"brendanneojw"},"content":"                firstCompanyPredicate);","lastModifiedDate":"2023-11-13"},{"lineNumber":148,"author":{"gitId":"brendanneojw"},"content":"        assertFalse(findFirstCommand.equals(findFirstCommandOneDiffField));","lastModifiedDate":"2023-11-13"},{"lineNumber":149,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":150,"author":{"gitId":"brendanneojw"},"content":"        findFirstCommandOneDiffField \u003d new FindCommand(firstNamePredicate, firstLicencePredicate,","lastModifiedDate":"2023-11-13"},{"lineNumber":151,"author":{"gitId":"brendanneojw"},"content":"                firstNricPredicate, firstPhonePredicate, firstPolicyNumPredicate, firstTagPredicate,","lastModifiedDate":"2023-11-13"},{"lineNumber":152,"author":{"gitId":"brendanneojw"},"content":"                firstPolicyExpiryPredicate, secondEmailPredicate, firstPolicyIssuePredicate,","lastModifiedDate":"2023-11-13"},{"lineNumber":153,"author":{"gitId":"brendanneojw"},"content":"                firstCompanyPredicate);","lastModifiedDate":"2023-11-13"},{"lineNumber":154,"author":{"gitId":"brendanneojw"},"content":"        assertFalse(findFirstCommand.equals(findFirstCommandOneDiffField));","lastModifiedDate":"2023-11-13"},{"lineNumber":155,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":156,"author":{"gitId":"brendanneojw"},"content":"        findFirstCommandOneDiffField \u003d new FindCommand(firstNamePredicate, firstLicencePredicate,","lastModifiedDate":"2023-11-13"},{"lineNumber":157,"author":{"gitId":"brendanneojw"},"content":"                firstNricPredicate, firstPhonePredicate, firstPolicyNumPredicate, firstTagPredicate,","lastModifiedDate":"2023-11-13"},{"lineNumber":158,"author":{"gitId":"brendanneojw"},"content":"                firstPolicyExpiryPredicate, firstEmailPredicate, secondPolicyIssuePredicate,","lastModifiedDate":"2023-11-13"},{"lineNumber":159,"author":{"gitId":"brendanneojw"},"content":"                firstCompanyPredicate);","lastModifiedDate":"2023-11-13"},{"lineNumber":160,"author":{"gitId":"brendanneojw"},"content":"        assertFalse(findFirstCommand.equals(findFirstCommandOneDiffField));","lastModifiedDate":"2023-11-13"},{"lineNumber":161,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":162,"author":{"gitId":"brendanneojw"},"content":"        findFirstCommandOneDiffField \u003d new FindCommand(firstNamePredicate, firstLicencePredicate,","lastModifiedDate":"2023-11-13"},{"lineNumber":163,"author":{"gitId":"brendanneojw"},"content":"                firstNricPredicate, firstPhonePredicate, firstPolicyNumPredicate, firstTagPredicate,","lastModifiedDate":"2023-11-13"},{"lineNumber":164,"author":{"gitId":"brendanneojw"},"content":"                firstPolicyExpiryPredicate, firstEmailPredicate, firstPolicyIssuePredicate,","lastModifiedDate":"2023-11-13"},{"lineNumber":165,"author":{"gitId":"brendanneojw"},"content":"                secondCompanyPredicate);","lastModifiedDate":"2023-11-13"},{"lineNumber":166,"author":{"gitId":"brendanneojw"},"content":"        assertFalse(findFirstCommand.equals(findFirstCommandOneDiffField));","lastModifiedDate":"2023-11-13"},{"lineNumber":167,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":171,"author":{"gitId":"brendanneojw"},"content":"    public void execute_noMatchingKeywords_noPersonFound() {","lastModifiedDate":"2023-10-18"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2017-06-12"},{"lineNumber":173,"author":{"gitId":"brendanneojw"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(\"test\");","lastModifiedDate":"2023-10-18"},{"lineNumber":174,"author":{"gitId":"brendanneojw"},"content":"        LicenceContainsKeywordsPredicate licencePredicate \u003d","lastModifiedDate":"2023-10-18"},{"lineNumber":175,"author":{"gitId":"brendanneojw"},"content":"                new LicenceContainsKeywordsPredicate(\"SAA1B\");","lastModifiedDate":"2023-10-18"},{"lineNumber":176,"author":{"gitId":"brendanneojw"},"content":"        NricContainsKeywordsPredicate nricPredicate \u003d","lastModifiedDate":"2023-10-18"},{"lineNumber":177,"author":{"gitId":"brendanneojw"},"content":"                new NricContainsKeywordsPredicate(\"111A\");","lastModifiedDate":"2023-11-13"},{"lineNumber":178,"author":{"gitId":"brendanneojw"},"content":"        PhoneContainsKeywordsPredicate phonePredicate \u003d","lastModifiedDate":"2023-10-18"},{"lineNumber":179,"author":{"gitId":"brendanneojw"},"content":"                new PhoneContainsKeywordsPredicate(\"12345678\");","lastModifiedDate":"2023-10-18"},{"lineNumber":180,"author":{"gitId":"brendanneojw"},"content":"        PolicyNumberContainsKeywordsPredicate policyNumPredicate \u003d","lastModifiedDate":"2023-10-18"},{"lineNumber":181,"author":{"gitId":"brendanneojw"},"content":"                new PolicyNumberContainsKeywordsPredicate(\"A1234\");","lastModifiedDate":"2023-10-18"},{"lineNumber":182,"author":{"gitId":"brendanneojw"},"content":"        TagContainsKeywordsPredicate tagPredicate \u003d","lastModifiedDate":"2023-10-18"},{"lineNumber":183,"author":{"gitId":"brendanneojw"},"content":"                new TagContainsKeywordsPredicate(\"stranger\");","lastModifiedDate":"2023-11-13"},{"lineNumber":184,"author":{"gitId":"brendanneojw"},"content":"        PolicyExpiryContainsKeywordsPredicate policyExpiryPredicate \u003d","lastModifiedDate":"2023-10-18"},{"lineNumber":185,"author":{"gitId":"brendanneojw"},"content":"                new PolicyExpiryContainsKeywordsPredicate(\"25-12-2023\");","lastModifiedDate":"2023-10-18"},{"lineNumber":186,"author":{"gitId":"brendanneojw"},"content":"        EmailContainsKeywordsPredicate emailPredicate \u003d","lastModifiedDate":"2023-10-18"},{"lineNumber":187,"author":{"gitId":"brendanneojw"},"content":"                new EmailContainsKeywordsPredicate(\"weewooowaa@example.com\");","lastModifiedDate":"2023-10-18"},{"lineNumber":188,"author":{"gitId":"brendanneojw"},"content":"        PolicyIssueContainsKeywordsPredicate policyIssuePredicate \u003d","lastModifiedDate":"2023-10-18"},{"lineNumber":189,"author":{"gitId":"brendanneojw"},"content":"                new PolicyIssueContainsKeywordsPredicate(\"12-12-2022\");","lastModifiedDate":"2023-10-18"},{"lineNumber":190,"author":{"gitId":"suryanshkushwaha"},"content":"        CompanyContainsKeywordsPredicate companyPredicate \u003d","lastModifiedDate":"2023-10-23"},{"lineNumber":191,"author":{"gitId":"brendanneojw"},"content":"                new CompanyContainsKeywordsPredicate(\"AXA\");","lastModifiedDate":"2023-11-13"},{"lineNumber":192,"author":{"gitId":"brendanneojw"},"content":"        FindCommand command \u003d new FindCommand(predicate, licencePredicate, nricPredicate, phonePredicate,","lastModifiedDate":"2023-10-18"},{"lineNumber":193,"author":{"gitId":"suryanshkushwaha"},"content":"                policyNumPredicate, tagPredicate, policyExpiryPredicate, emailPredicate, policyIssuePredicate,","lastModifiedDate":"2023-10-23"},{"lineNumber":194,"author":{"gitId":"suryanshkushwaha"},"content":"                companyPredicate);","lastModifiedDate":"2023-10-23"},{"lineNumber":195,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":200,"author":{"gitId":"brendanneojw"},"content":"        expectedModel.updateFilteredPersonList(licencePredicate);","lastModifiedDate":"2023-11-13"},{"lineNumber":201,"author":{"gitId":"brendanneojw"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-11-13"},{"lineNumber":202,"author":{"gitId":"brendanneojw"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2023-11-13"},{"lineNumber":203,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":204,"author":{"gitId":"brendanneojw"},"content":"        expectedModel.updateFilteredPersonList(nricPredicate);","lastModifiedDate":"2023-11-13"},{"lineNumber":205,"author":{"gitId":"brendanneojw"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-11-13"},{"lineNumber":206,"author":{"gitId":"brendanneojw"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2023-11-13"},{"lineNumber":207,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":208,"author":{"gitId":"brendanneojw"},"content":"        expectedModel.updateFilteredPersonList(phonePredicate);","lastModifiedDate":"2023-11-13"},{"lineNumber":209,"author":{"gitId":"brendanneojw"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-11-13"},{"lineNumber":210,"author":{"gitId":"brendanneojw"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2023-11-13"},{"lineNumber":211,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":212,"author":{"gitId":"brendanneojw"},"content":"        expectedModel.updateFilteredPersonList(policyNumPredicate);","lastModifiedDate":"2023-11-13"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-11-13"},{"lineNumber":214,"author":{"gitId":"brendanneojw"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2023-11-13"},{"lineNumber":215,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":216,"author":{"gitId":"brendanneojw"},"content":"        expectedModel.updateFilteredPersonList(tagPredicate);","lastModifiedDate":"2023-11-13"},{"lineNumber":217,"author":{"gitId":"brendanneojw"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-11-13"},{"lineNumber":218,"author":{"gitId":"brendanneojw"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2023-11-13"},{"lineNumber":219,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":220,"author":{"gitId":"brendanneojw"},"content":"        expectedModel.updateFilteredPersonList(policyExpiryPredicate);","lastModifiedDate":"2023-11-13"},{"lineNumber":221,"author":{"gitId":"brendanneojw"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-11-13"},{"lineNumber":222,"author":{"gitId":"brendanneojw"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2023-11-13"},{"lineNumber":223,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":224,"author":{"gitId":"brendanneojw"},"content":"        expectedModel.updateFilteredPersonList(emailPredicate);","lastModifiedDate":"2023-11-13"},{"lineNumber":225,"author":{"gitId":"brendanneojw"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-11-13"},{"lineNumber":226,"author":{"gitId":"brendanneojw"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2023-11-13"},{"lineNumber":227,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":228,"author":{"gitId":"brendanneojw"},"content":"        expectedModel.updateFilteredPersonList(policyIssuePredicate);","lastModifiedDate":"2023-11-13"},{"lineNumber":229,"author":{"gitId":"brendanneojw"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-11-13"},{"lineNumber":230,"author":{"gitId":"brendanneojw"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2023-11-13"},{"lineNumber":231,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":232,"author":{"gitId":"brendanneojw"},"content":"        expectedModel.updateFilteredPersonList(companyPredicate);","lastModifiedDate":"2023-11-13"},{"lineNumber":233,"author":{"gitId":"brendanneojw"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-11-13"},{"lineNumber":234,"author":{"gitId":"brendanneojw"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2023-11-13"},{"lineNumber":235,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":237,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":240,"author":{"gitId":"brendanneojw"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(\"keyword\");","lastModifiedDate":"2023-10-18"},{"lineNumber":241,"author":{"gitId":"brendanneojw"},"content":"        LicenceContainsKeywordsPredicate licencePredicate \u003d","lastModifiedDate":"2023-10-18"},{"lineNumber":242,"author":{"gitId":"brendanneojw"},"content":"                new LicenceContainsKeywordsPredicate(\"SAA1B\");","lastModifiedDate":"2023-10-18"},{"lineNumber":243,"author":{"gitId":"brendanneojw"},"content":"        NricContainsKeywordsPredicate nricPredicate \u003d","lastModifiedDate":"2023-10-18"},{"lineNumber":244,"author":{"gitId":"brendanneojw"},"content":"                new NricContainsKeywordsPredicate(\"000A\");","lastModifiedDate":"2023-10-18"},{"lineNumber":245,"author":{"gitId":"brendanneojw"},"content":"        PhoneContainsKeywordsPredicate phonePredicate \u003d","lastModifiedDate":"2023-10-18"},{"lineNumber":246,"author":{"gitId":"brendanneojw"},"content":"                new PhoneContainsKeywordsPredicate(\"12345678\");","lastModifiedDate":"2023-10-18"},{"lineNumber":247,"author":{"gitId":"brendanneojw"},"content":"        PolicyNumberContainsKeywordsPredicate policyNumPredicate \u003d","lastModifiedDate":"2023-10-18"},{"lineNumber":248,"author":{"gitId":"brendanneojw"},"content":"                new PolicyNumberContainsKeywordsPredicate(\"A1234\");","lastModifiedDate":"2023-10-18"},{"lineNumber":249,"author":{"gitId":"brendanneojw"},"content":"        TagContainsKeywordsPredicate tagPredicate \u003d","lastModifiedDate":"2023-10-18"},{"lineNumber":250,"author":{"gitId":"brendanneojw"},"content":"                new TagContainsKeywordsPredicate(\"friends\");","lastModifiedDate":"2023-10-18"},{"lineNumber":251,"author":{"gitId":"brendanneojw"},"content":"        PolicyExpiryContainsKeywordsPredicate policyExpiryPredicate \u003d","lastModifiedDate":"2023-10-18"},{"lineNumber":252,"author":{"gitId":"brendanneojw"},"content":"                new PolicyExpiryContainsKeywordsPredicate(\"25-12-2023\");","lastModifiedDate":"2023-10-18"},{"lineNumber":253,"author":{"gitId":"brendanneojw"},"content":"        EmailContainsKeywordsPredicate emailPredicate \u003d","lastModifiedDate":"2023-10-18"},{"lineNumber":254,"author":{"gitId":"brendanneojw"},"content":"                new EmailContainsKeywordsPredicate(\"weewooowaa@example.com\");","lastModifiedDate":"2023-10-18"},{"lineNumber":255,"author":{"gitId":"brendanneojw"},"content":"        PolicyIssueContainsKeywordsPredicate policyIssuePredicate \u003d","lastModifiedDate":"2023-10-18"},{"lineNumber":256,"author":{"gitId":"brendanneojw"},"content":"                new PolicyIssueContainsKeywordsPredicate(\"12-12-2022\");","lastModifiedDate":"2023-10-18"},{"lineNumber":257,"author":{"gitId":"suryanshkushwaha"},"content":"        CompanyContainsKeywordsPredicate companyPredicate \u003d","lastModifiedDate":"2023-10-23"},{"lineNumber":258,"author":{"gitId":"suryanshkushwaha"},"content":"                new CompanyContainsKeywordsPredicate(\"NTUC\");","lastModifiedDate":"2023-10-23"},{"lineNumber":259,"author":{"gitId":"brendanneojw"},"content":"        FindCommand findCommand \u003d new FindCommand(predicate, licencePredicate, nricPredicate, phonePredicate,","lastModifiedDate":"2023-10-18"},{"lineNumber":260,"author":{"gitId":"suryanshkushwaha"},"content":"                policyNumPredicate, tagPredicate, policyExpiryPredicate, emailPredicate, policyIssuePredicate,","lastModifiedDate":"2023-10-23"},{"lineNumber":261,"author":{"gitId":"suryanshkushwaha"},"content":"                companyPredicate);","lastModifiedDate":"2023-10-23"},{"lineNumber":262,"author":{"gitId":"brendanneojw"},"content":"        String expected \u003d FindCommand.class.getCanonicalName() + \"{name predicate\u003d\" + predicate","lastModifiedDate":"2023-10-13"},{"lineNumber":263,"author":{"gitId":"brendanneojw"},"content":"                + \", licence predicate\u003d\" + licencePredicate + \", nric predicate\u003d\" + nricPredicate","lastModifiedDate":"2023-10-18"},{"lineNumber":264,"author":{"gitId":"brendanneojw"},"content":"                + \", phone predicate\u003d\" + phonePredicate + \", policy number predicate\u003d\" + policyNumPredicate","lastModifiedDate":"2023-10-18"},{"lineNumber":265,"author":{"gitId":"brendanneojw"},"content":"                + \", tag predicate\u003d\" + tagPredicate + \", policy expiry predicate\u003d\" + policyExpiryPredicate","lastModifiedDate":"2023-10-18"},{"lineNumber":266,"author":{"gitId":"suryanshkushwaha"},"content":"                + \", email predicate\u003d\" + emailPredicate + \", policy issue predicate\u003d\" + policyIssuePredicate","lastModifiedDate":"2023-10-23"},{"lineNumber":267,"author":{"gitId":"suryanshkushwaha"},"content":"                + \", company predicate\u003d\" + companyPredicate + \"}\";","lastModifiedDate":"2023-10-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"        assertEquals(expected, findCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-12"},{"lineNumber":272,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2018-08-08"},{"lineNumber":273,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-12"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    private NameContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2018-08-08"},{"lineNumber":275,"author":{"gitId":"brendanneojw"},"content":"        return new NameContainsKeywordsPredicate(userInput);","lastModifiedDate":"2023-10-18"},{"lineNumber":276,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":277,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"brendanneojw":195,"suryanshkushwaha":18,"-":64}},{"path":"src/test/java/seedu/address/logic/commands/RemarkCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cyaoxuan"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-11-01"},{"lineNumber":2,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":3,"author":{"gitId":"cyaoxuan"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-11-01"},{"lineNumber":4,"author":{"gitId":"cyaoxuan"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-11-01"},{"lineNumber":5,"author":{"gitId":"cyaoxuan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_REMARK_AMY;","lastModifiedDate":"2023-11-01"},{"lineNumber":6,"author":{"gitId":"cyaoxuan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_REMARK_BOB;","lastModifiedDate":"2023-11-01"},{"lineNumber":7,"author":{"gitId":"cyaoxuan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-11-01"},{"lineNumber":8,"author":{"gitId":"cyaoxuan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-11-01"},{"lineNumber":9,"author":{"gitId":"cyaoxuan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2023-11-01"},{"lineNumber":10,"author":{"gitId":"cyaoxuan"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-11-01"},{"lineNumber":11,"author":{"gitId":"cyaoxuan"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2023-11-01"},{"lineNumber":12,"author":{"gitId":"cyaoxuan"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2023-11-01"},{"lineNumber":13,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":14,"author":{"gitId":"cyaoxuan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-11-01"},{"lineNumber":15,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":16,"author":{"gitId":"cyaoxuan"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-11-01"},{"lineNumber":17,"author":{"gitId":"cyaoxuan"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-11-01"},{"lineNumber":18,"author":{"gitId":"cyaoxuan"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2023-11-01"},{"lineNumber":19,"author":{"gitId":"cyaoxuan"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-11-01"},{"lineNumber":20,"author":{"gitId":"cyaoxuan"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-11-01"},{"lineNumber":21,"author":{"gitId":"cyaoxuan"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-11-01"},{"lineNumber":22,"author":{"gitId":"cyaoxuan"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-11-01"},{"lineNumber":23,"author":{"gitId":"cyaoxuan"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2023-11-01"},{"lineNumber":24,"author":{"gitId":"cyaoxuan"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2023-11-01"},{"lineNumber":25,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":26,"author":{"gitId":"cyaoxuan"},"content":"/**","lastModifiedDate":"2023-11-01"},{"lineNumber":27,"author":{"gitId":"cyaoxuan"},"content":" * Contains integration tests (interaction with the Model) and unit tests for RemarkCommand.","lastModifiedDate":"2023-11-01"},{"lineNumber":28,"author":{"gitId":"cyaoxuan"},"content":" */","lastModifiedDate":"2023-11-01"},{"lineNumber":29,"author":{"gitId":"cyaoxuan"},"content":"public class RemarkCommandTest {","lastModifiedDate":"2023-11-01"},{"lineNumber":30,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":31,"author":{"gitId":"cyaoxuan"},"content":"    private static final String REMARK_STUB \u003d \"Some remark\";","lastModifiedDate":"2023-11-01"},{"lineNumber":32,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":33,"author":{"gitId":"cyaoxuan"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-11-01"},{"lineNumber":34,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":35,"author":{"gitId":"cyaoxuan"},"content":"    @Test","lastModifiedDate":"2023-11-01"},{"lineNumber":36,"author":{"gitId":"cyaoxuan"},"content":"    public void execute_addRemarkUnfilteredList_success() {","lastModifiedDate":"2023-11-01"},{"lineNumber":37,"author":{"gitId":"cyaoxuan"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-11-01"},{"lineNumber":38,"author":{"gitId":"cyaoxuan"},"content":"        Person editedPerson \u003d new PersonBuilder(firstPerson).withRemark(REMARK_STUB).build();","lastModifiedDate":"2023-11-01"},{"lineNumber":39,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":40,"author":{"gitId":"cyaoxuan"},"content":"        RemarkCommand remarkCommand \u003d new RemarkCommand(INDEX_FIRST_PERSON, new Remark(editedPerson.getRemark().value));","lastModifiedDate":"2023-11-01"},{"lineNumber":41,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":42,"author":{"gitId":"brendanneojw"},"content":"        String expectedMessage \u003d String.format(RemarkCommand.MESSAGE_ADD_REMARK_SUCCESS, Messages.format(editedPerson));","lastModifiedDate":"2023-11-01"},{"lineNumber":43,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":44,"author":{"gitId":"cyaoxuan"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2023-11-01"},{"lineNumber":45,"author":{"gitId":"cyaoxuan"},"content":"        expectedModel.setPerson(firstPerson, editedPerson);","lastModifiedDate":"2023-11-01"},{"lineNumber":46,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":47,"author":{"gitId":"cyaoxuan"},"content":"        assertCommandSuccess(remarkCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-11-01"},{"lineNumber":48,"author":{"gitId":"cyaoxuan"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":49,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":50,"author":{"gitId":"cyaoxuan"},"content":"    @Test","lastModifiedDate":"2023-11-01"},{"lineNumber":51,"author":{"gitId":"cyaoxuan"},"content":"    public void execute_deleteRemarkUnfilteredList_success() {","lastModifiedDate":"2023-11-01"},{"lineNumber":52,"author":{"gitId":"cyaoxuan"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-11-01"},{"lineNumber":53,"author":{"gitId":"cyaoxuan"},"content":"        Person editedPerson \u003d new PersonBuilder(firstPerson).withRemark(\"\").build();","lastModifiedDate":"2023-11-01"},{"lineNumber":54,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":55,"author":{"gitId":"cyaoxuan"},"content":"        RemarkCommand remarkCommand \u003d new RemarkCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2023-11-01"},{"lineNumber":56,"author":{"gitId":"cyaoxuan"},"content":"                new Remark(editedPerson.getRemark().toString()));","lastModifiedDate":"2023-11-01"},{"lineNumber":57,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":58,"author":{"gitId":"brendanneojw"},"content":"        String expectedMessage \u003d String.format(","lastModifiedDate":"2023-11-01"},{"lineNumber":59,"author":{"gitId":"brendanneojw"},"content":"                RemarkCommand.MESSAGE_DELETE_REMARK_SUCCESS, Messages.format(editedPerson));","lastModifiedDate":"2023-11-01"},{"lineNumber":60,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":61,"author":{"gitId":"cyaoxuan"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2023-11-01"},{"lineNumber":62,"author":{"gitId":"cyaoxuan"},"content":"        expectedModel.setPerson(firstPerson, editedPerson);","lastModifiedDate":"2023-11-01"},{"lineNumber":63,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":64,"author":{"gitId":"cyaoxuan"},"content":"        assertCommandSuccess(remarkCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-11-01"},{"lineNumber":65,"author":{"gitId":"cyaoxuan"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":66,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":67,"author":{"gitId":"cyaoxuan"},"content":"    @Test","lastModifiedDate":"2023-11-01"},{"lineNumber":68,"author":{"gitId":"cyaoxuan"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2023-11-01"},{"lineNumber":69,"author":{"gitId":"cyaoxuan"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2023-11-01"},{"lineNumber":70,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":71,"author":{"gitId":"cyaoxuan"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-11-01"},{"lineNumber":72,"author":{"gitId":"cyaoxuan"},"content":"        Person editedPerson \u003d new PersonBuilder(model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased()))","lastModifiedDate":"2023-11-01"},{"lineNumber":73,"author":{"gitId":"cyaoxuan"},"content":"                .withRemark(REMARK_STUB).build();","lastModifiedDate":"2023-11-01"},{"lineNumber":74,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":75,"author":{"gitId":"cyaoxuan"},"content":"        RemarkCommand remarkCommand \u003d new RemarkCommand(INDEX_FIRST_PERSON, new Remark(editedPerson.getRemark().value));","lastModifiedDate":"2023-11-01"},{"lineNumber":76,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":77,"author":{"gitId":"brendanneojw"},"content":"        String expectedMessage \u003d String.format(RemarkCommand.MESSAGE_ADD_REMARK_SUCCESS, Messages.format(editedPerson));","lastModifiedDate":"2023-11-01"},{"lineNumber":78,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":79,"author":{"gitId":"cyaoxuan"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2023-11-01"},{"lineNumber":80,"author":{"gitId":"cyaoxuan"},"content":"        expectedModel.setPerson(firstPerson, editedPerson);","lastModifiedDate":"2023-11-01"},{"lineNumber":81,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":82,"author":{"gitId":"cyaoxuan"},"content":"        assertCommandSuccess(remarkCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-11-01"},{"lineNumber":83,"author":{"gitId":"cyaoxuan"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":84,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":85,"author":{"gitId":"cyaoxuan"},"content":"    @Test","lastModifiedDate":"2023-11-01"},{"lineNumber":86,"author":{"gitId":"cyaoxuan"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2023-11-01"},{"lineNumber":87,"author":{"gitId":"cyaoxuan"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2023-11-01"},{"lineNumber":88,"author":{"gitId":"cyaoxuan"},"content":"        RemarkCommand remarkCommand \u003d new RemarkCommand(outOfBoundIndex, new Remark(VALID_REMARK_BOB));","lastModifiedDate":"2023-11-01"},{"lineNumber":89,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":90,"author":{"gitId":"cyaoxuan"},"content":"        assertCommandFailure(remarkCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-11-01"},{"lineNumber":91,"author":{"gitId":"cyaoxuan"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":92,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":93,"author":{"gitId":"cyaoxuan"},"content":"    /**","lastModifiedDate":"2023-11-01"},{"lineNumber":94,"author":{"gitId":"cyaoxuan"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2023-11-01"},{"lineNumber":95,"author":{"gitId":"cyaoxuan"},"content":"     * but smaller than size of address book","lastModifiedDate":"2023-11-01"},{"lineNumber":96,"author":{"gitId":"cyaoxuan"},"content":"     */","lastModifiedDate":"2023-11-01"},{"lineNumber":97,"author":{"gitId":"cyaoxuan"},"content":"    @Test","lastModifiedDate":"2023-11-01"},{"lineNumber":98,"author":{"gitId":"cyaoxuan"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2023-11-01"},{"lineNumber":99,"author":{"gitId":"cyaoxuan"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2023-11-01"},{"lineNumber":100,"author":{"gitId":"cyaoxuan"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2023-11-01"},{"lineNumber":101,"author":{"gitId":"cyaoxuan"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2023-11-01"},{"lineNumber":102,"author":{"gitId":"cyaoxuan"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2023-11-01"},{"lineNumber":103,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":104,"author":{"gitId":"cyaoxuan"},"content":"        RemarkCommand remarkCommand \u003d new RemarkCommand(outOfBoundIndex, new Remark(VALID_REMARK_BOB));","lastModifiedDate":"2023-11-01"},{"lineNumber":105,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":106,"author":{"gitId":"cyaoxuan"},"content":"        assertCommandFailure(remarkCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-11-01"},{"lineNumber":107,"author":{"gitId":"cyaoxuan"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":108,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":109,"author":{"gitId":"cyaoxuan"},"content":"    @Test","lastModifiedDate":"2023-11-01"},{"lineNumber":110,"author":{"gitId":"cyaoxuan"},"content":"    public void equals() {","lastModifiedDate":"2023-11-01"},{"lineNumber":111,"author":{"gitId":"cyaoxuan"},"content":"        final RemarkCommand standardCommand \u003d new RemarkCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2023-11-01"},{"lineNumber":112,"author":{"gitId":"cyaoxuan"},"content":"                new Remark(VALID_REMARK_AMY));","lastModifiedDate":"2023-11-01"},{"lineNumber":113,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":114,"author":{"gitId":"cyaoxuan"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-11-01"},{"lineNumber":115,"author":{"gitId":"cyaoxuan"},"content":"        RemarkCommand commandWithSameValues \u003d new RemarkCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2023-11-01"},{"lineNumber":116,"author":{"gitId":"cyaoxuan"},"content":"                new Remark(VALID_REMARK_AMY));","lastModifiedDate":"2023-11-01"},{"lineNumber":117,"author":{"gitId":"cyaoxuan"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2023-11-01"},{"lineNumber":118,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":119,"author":{"gitId":"cyaoxuan"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-11-01"},{"lineNumber":120,"author":{"gitId":"cyaoxuan"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2023-11-01"},{"lineNumber":121,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":122,"author":{"gitId":"cyaoxuan"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-11-01"},{"lineNumber":123,"author":{"gitId":"cyaoxuan"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2023-11-01"},{"lineNumber":124,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":125,"author":{"gitId":"cyaoxuan"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-11-01"},{"lineNumber":126,"author":{"gitId":"cyaoxuan"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2023-11-01"},{"lineNumber":127,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":128,"author":{"gitId":"cyaoxuan"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2023-11-01"},{"lineNumber":129,"author":{"gitId":"cyaoxuan"},"content":"        assertFalse(standardCommand.equals(new RemarkCommand(INDEX_SECOND_PERSON,","lastModifiedDate":"2023-11-01"},{"lineNumber":130,"author":{"gitId":"cyaoxuan"},"content":"                new Remark(VALID_REMARK_AMY))));","lastModifiedDate":"2023-11-01"},{"lineNumber":131,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":132,"author":{"gitId":"cyaoxuan"},"content":"        // different remark -\u003e returns false","lastModifiedDate":"2023-11-01"},{"lineNumber":133,"author":{"gitId":"cyaoxuan"},"content":"        assertFalse(standardCommand.equals(new RemarkCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2023-11-01"},{"lineNumber":134,"author":{"gitId":"cyaoxuan"},"content":"                new Remark(VALID_REMARK_BOB))));","lastModifiedDate":"2023-11-01"},{"lineNumber":135,"author":{"gitId":"cyaoxuan"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":136,"author":{"gitId":"cyaoxuan"},"content":"}","lastModifiedDate":"2023-11-01"}],"authorContributionMap":{"brendanneojw":4,"cyaoxuan":132}},{"path":"src/test/java/seedu/address/logic/commands/RemindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"brendanneojw"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-11-12"},{"lineNumber":2,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":3,"author":{"gitId":"brendanneojw"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-11-12"},{"lineNumber":4,"author":{"gitId":"brendanneojw"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-11-12"},{"lineNumber":5,"author":{"gitId":"brendanneojw"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-11-12"},{"lineNumber":6,"author":{"gitId":"brendanneojw"},"content":"import static seedu.address.logic.Messages.MESSAGE_PERSONS_LISTED_OVERVIEW;","lastModifiedDate":"2023-11-12"},{"lineNumber":7,"author":{"gitId":"brendanneojw"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-11-12"},{"lineNumber":8,"author":{"gitId":"brendanneojw"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2023-11-12"},{"lineNumber":9,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":10,"author":{"gitId":"brendanneojw"},"content":"import java.util.Collections;","lastModifiedDate":"2023-11-12"},{"lineNumber":11,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":12,"author":{"gitId":"brendanneojw"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-11-12"},{"lineNumber":13,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":14,"author":{"gitId":"brendanneojw"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-11-12"},{"lineNumber":15,"author":{"gitId":"brendanneojw"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-11-12"},{"lineNumber":16,"author":{"gitId":"brendanneojw"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-11-12"},{"lineNumber":17,"author":{"gitId":"brendanneojw"},"content":"import seedu.address.model.person.predicates.RemindPredicate;","lastModifiedDate":"2023-11-12"},{"lineNumber":18,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":19,"author":{"gitId":"brendanneojw"},"content":"/**","lastModifiedDate":"2023-11-12"},{"lineNumber":20,"author":{"gitId":"brendanneojw"},"content":" * Contains integration tests (interaction with the Model) for {@code RemindCommand}.","lastModifiedDate":"2023-11-12"},{"lineNumber":21,"author":{"gitId":"brendanneojw"},"content":" */","lastModifiedDate":"2023-11-12"},{"lineNumber":22,"author":{"gitId":"brendanneojw"},"content":"public class RemindCommandTest {","lastModifiedDate":"2023-11-12"},{"lineNumber":23,"author":{"gitId":"brendanneojw"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-11-12"},{"lineNumber":24,"author":{"gitId":"brendanneojw"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-11-12"},{"lineNumber":25,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":26,"author":{"gitId":"brendanneojw"},"content":"    @Test","lastModifiedDate":"2023-11-12"},{"lineNumber":27,"author":{"gitId":"brendanneojw"},"content":"    public void equals() {","lastModifiedDate":"2023-11-12"},{"lineNumber":28,"author":{"gitId":"brendanneojw"},"content":"        RemindPredicate firstRemindPredicate \u003d new RemindPredicate(0);","lastModifiedDate":"2023-11-12"},{"lineNumber":29,"author":{"gitId":"brendanneojw"},"content":"        RemindPredicate secondRemindPredicate \u003d new RemindPredicate(30);","lastModifiedDate":"2023-11-12"},{"lineNumber":30,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":31,"author":{"gitId":"brendanneojw"},"content":"        RemindCommand firstRemindCommand \u003d new RemindCommand(firstRemindPredicate);","lastModifiedDate":"2023-11-12"},{"lineNumber":32,"author":{"gitId":"brendanneojw"},"content":"        RemindCommand secondRemindCommand \u003d new RemindCommand(secondRemindPredicate);","lastModifiedDate":"2023-11-12"},{"lineNumber":33,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":34,"author":{"gitId":"brendanneojw"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-11-12"},{"lineNumber":35,"author":{"gitId":"brendanneojw"},"content":"        assertTrue(firstRemindCommand.equals(firstRemindCommand));","lastModifiedDate":"2023-11-12"},{"lineNumber":36,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":37,"author":{"gitId":"brendanneojw"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-11-12"},{"lineNumber":38,"author":{"gitId":"brendanneojw"},"content":"        RemindCommand firstRemindCommandCopy \u003d new RemindCommand(firstRemindPredicate);","lastModifiedDate":"2023-11-12"},{"lineNumber":39,"author":{"gitId":"brendanneojw"},"content":"        assertTrue(firstRemindCommand.equals(firstRemindCommandCopy));","lastModifiedDate":"2023-11-12"},{"lineNumber":40,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":41,"author":{"gitId":"brendanneojw"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-11-12"},{"lineNumber":42,"author":{"gitId":"brendanneojw"},"content":"        assertFalse(firstRemindCommand.equals(1));","lastModifiedDate":"2023-11-12"},{"lineNumber":43,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":44,"author":{"gitId":"brendanneojw"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-11-12"},{"lineNumber":45,"author":{"gitId":"brendanneojw"},"content":"        assertFalse(firstRemindCommand.equals(null));","lastModifiedDate":"2023-11-12"},{"lineNumber":46,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":47,"author":{"gitId":"brendanneojw"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2023-11-12"},{"lineNumber":48,"author":{"gitId":"brendanneojw"},"content":"        assertFalse(firstRemindCommand.equals(secondRemindCommand));","lastModifiedDate":"2023-11-12"},{"lineNumber":49,"author":{"gitId":"brendanneojw"},"content":"    }","lastModifiedDate":"2023-11-12"},{"lineNumber":50,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":51,"author":{"gitId":"brendanneojw"},"content":"    @Test","lastModifiedDate":"2023-11-12"},{"lineNumber":52,"author":{"gitId":"brendanneojw"},"content":"    public void execute_noPolicyExpiryIn30Days_noPersonFound() {","lastModifiedDate":"2023-11-12"},{"lineNumber":53,"author":{"gitId":"brendanneojw"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2023-11-12"},{"lineNumber":54,"author":{"gitId":"brendanneojw"},"content":"        RemindPredicate predicate \u003d new RemindPredicate(30);","lastModifiedDate":"2023-11-12"},{"lineNumber":55,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":56,"author":{"gitId":"brendanneojw"},"content":"        RemindCommand command \u003d new RemindCommand(predicate);","lastModifiedDate":"2023-11-12"},{"lineNumber":57,"author":{"gitId":"brendanneojw"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2023-11-12"},{"lineNumber":58,"author":{"gitId":"brendanneojw"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-11-12"},{"lineNumber":59,"author":{"gitId":"brendanneojw"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2023-11-12"},{"lineNumber":60,"author":{"gitId":"brendanneojw"},"content":"    }","lastModifiedDate":"2023-11-12"},{"lineNumber":61,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":62,"author":{"gitId":"brendanneojw"},"content":"    @Test","lastModifiedDate":"2023-11-12"},{"lineNumber":63,"author":{"gitId":"brendanneojw"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-11-12"},{"lineNumber":64,"author":{"gitId":"brendanneojw"},"content":"        RemindPredicate predicate \u003d new RemindPredicate(30);","lastModifiedDate":"2023-11-12"},{"lineNumber":65,"author":{"gitId":"brendanneojw"},"content":"        RemindCommand remindCommand \u003d new RemindCommand(predicate);","lastModifiedDate":"2023-11-12"},{"lineNumber":66,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":67,"author":{"gitId":"brendanneojw"},"content":"        String expected \u003d RemindCommand.class.getCanonicalName() + \"{remind predicate\u003d\" + predicate + \"}\";","lastModifiedDate":"2023-11-12"},{"lineNumber":68,"author":{"gitId":"brendanneojw"},"content":"        assertEquals(expected, remindCommand.toString());","lastModifiedDate":"2023-11-12"},{"lineNumber":69,"author":{"gitId":"brendanneojw"},"content":"    }","lastModifiedDate":"2023-11-12"},{"lineNumber":70,"author":{"gitId":"brendanneojw"},"content":"}","lastModifiedDate":"2023-11-12"}],"authorContributionMap":{"brendanneojw":70}},{"path":"src/test/java/seedu/address/logic/commands/SortCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"RSXIX"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-11-13"},{"lineNumber":2,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":3,"author":{"gitId":"RSXIX"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-11-13"},{"lineNumber":4,"author":{"gitId":"RSXIX"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2023-11-13"},{"lineNumber":5,"author":{"gitId":"RSXIX"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalSortedAddressBook;","lastModifiedDate":"2023-11-13"},{"lineNumber":6,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":7,"author":{"gitId":"RSXIX"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-11-13"},{"lineNumber":8,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":9,"author":{"gitId":"RSXIX"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-11-13"},{"lineNumber":10,"author":{"gitId":"RSXIX"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-11-13"},{"lineNumber":11,"author":{"gitId":"RSXIX"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-11-13"},{"lineNumber":12,"author":{"gitId":"RSXIX"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-11-13"},{"lineNumber":13,"author":{"gitId":"RSXIX"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-11-13"},{"lineNumber":14,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":15,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":16,"author":{"gitId":"RSXIX"},"content":"/**","lastModifiedDate":"2023-11-13"},{"lineNumber":17,"author":{"gitId":"RSXIX"},"content":" * Contains integration tests (interaction with the Model) and unit tests for SortCommand.","lastModifiedDate":"2023-11-13"},{"lineNumber":18,"author":{"gitId":"RSXIX"},"content":" */","lastModifiedDate":"2023-11-13"},{"lineNumber":19,"author":{"gitId":"RSXIX"},"content":"public class SortCommandTest {","lastModifiedDate":"2023-11-13"},{"lineNumber":20,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":21,"author":{"gitId":"RSXIX"},"content":"    private Model unsortedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-11-13"},{"lineNumber":22,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":23,"author":{"gitId":"RSXIX"},"content":"    private Model sortedModel \u003d new ModelManager(getTypicalSortedAddressBook(), new UserPrefs());","lastModifiedDate":"2023-11-13"},{"lineNumber":24,"author":{"gitId":"RSXIX"},"content":"    @Test","lastModifiedDate":"2023-11-13"},{"lineNumber":25,"author":{"gitId":"RSXIX"},"content":"    public void execute_sort_success() {","lastModifiedDate":"2023-11-13"},{"lineNumber":26,"author":{"gitId":"RSXIX"},"content":"        SortCommand command \u003d new SortCommand();","lastModifiedDate":"2023-11-13"},{"lineNumber":27,"author":{"gitId":"RSXIX"},"content":"        command.execute(unsortedModel);","lastModifiedDate":"2023-11-13"},{"lineNumber":28,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":29,"author":{"gitId":"RSXIX"},"content":"        ObservableList\u003cPerson\u003e unsortedPersonListAfterSort \u003d unsortedModel.getFilteredPersonList();","lastModifiedDate":"2023-11-13"},{"lineNumber":30,"author":{"gitId":"RSXIX"},"content":"        ObservableList\u003cPerson\u003e sortedPersonList \u003d sortedModel.getFilteredPersonList();","lastModifiedDate":"2023-11-13"},{"lineNumber":31,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":32,"author":{"gitId":"RSXIX"},"content":"        int index \u003d 0;","lastModifiedDate":"2023-11-13"},{"lineNumber":33,"author":{"gitId":"RSXIX"},"content":"        for (Person person : unsortedPersonListAfterSort) {","lastModifiedDate":"2023-11-13"},{"lineNumber":34,"author":{"gitId":"RSXIX"},"content":"            if (person.hasAnyDefaultPolicyParameters()) {","lastModifiedDate":"2023-11-13"},{"lineNumber":35,"author":{"gitId":"RSXIX"},"content":"                break;","lastModifiedDate":"2023-11-13"},{"lineNumber":36,"author":{"gitId":"RSXIX"},"content":"            }","lastModifiedDate":"2023-11-13"},{"lineNumber":37,"author":{"gitId":"RSXIX"},"content":"            assertEquals(person, sortedPersonList.get(index));","lastModifiedDate":"2023-11-13"},{"lineNumber":38,"author":{"gitId":"RSXIX"},"content":"            index +\u003d 1;","lastModifiedDate":"2023-11-13"},{"lineNumber":39,"author":{"gitId":"RSXIX"},"content":"        }","lastModifiedDate":"2023-11-13"},{"lineNumber":40,"author":{"gitId":"RSXIX"},"content":"    }","lastModifiedDate":"2023-11-13"},{"lineNumber":41,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":42,"author":{"gitId":"RSXIX"},"content":"}","lastModifiedDate":"2023-11-13"}],"authorContributionMap":{"RSXIX":42}},{"path":"src/test/java/seedu/address/logic/parser/AddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"KumChaiYin"},"content":"import static seedu.address.logic.Messages.MESSAGE_DATES_NOT_COMPATIBLE;","lastModifiedDate":"2023-11-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":5,"author":{"gitId":"RSXIX"},"content":"import static seedu.address.logic.Messages.MESSAGE_MISSING_FIELDS_FOR_ADD_COMMAND;","lastModifiedDate":"2023-10-20"},{"lineNumber":6,"author":{"gitId":"RSXIX"},"content":"import static seedu.address.logic.Messages.MESSAGE_MISSING_FIELDS_POLICY_FOR_ADD_COMMAND;","lastModifiedDate":"2023-10-20"},{"lineNumber":7,"author":{"gitId":"RSXIX"},"content":"import static seedu.address.logic.Messages.MESSAGE_PREAMBLE_DETECTED;","lastModifiedDate":"2023-10-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"suryanshkushwaha"},"content":"import static seedu.address.logic.commands.CommandTestUtil.COMPANY_DESC_AMY;","lastModifiedDate":"2023-10-23"},{"lineNumber":11,"author":{"gitId":"suryanshkushwaha"},"content":"import static seedu.address.logic.commands.CommandTestUtil.COMPANY_DESC_BOB;","lastModifiedDate":"2023-10-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":19,"author":{"gitId":"cyaoxuan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.LICENCE_PLATE_DESC_AMY;","lastModifiedDate":"2023-11-12"},{"lineNumber":20,"author":{"gitId":"cyaoxuan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.LICENCE_PLATE_DESC_BOB;","lastModifiedDate":"2023-11-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":23,"author":{"gitId":"KumChaiYin"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NRIC_DESC_AMY;","lastModifiedDate":"2023-10-19"},{"lineNumber":24,"author":{"gitId":"KumChaiYin"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NRIC_DESC_BOB;","lastModifiedDate":"2023-10-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":27,"author":{"gitId":"KumChaiYin"},"content":"import static seedu.address.logic.commands.CommandTestUtil.POLICY_EXPIRY_DATE_DESC_AMY;","lastModifiedDate":"2023-10-19"},{"lineNumber":28,"author":{"gitId":"KumChaiYin"},"content":"import static seedu.address.logic.commands.CommandTestUtil.POLICY_EXPIRY_DATE_DESC_BOB;","lastModifiedDate":"2023-10-19"},{"lineNumber":29,"author":{"gitId":"KumChaiYin"},"content":"import static seedu.address.logic.commands.CommandTestUtil.POLICY_ISSUE_DATE_DESC_AMY;","lastModifiedDate":"2023-10-19"},{"lineNumber":30,"author":{"gitId":"KumChaiYin"},"content":"import static seedu.address.logic.commands.CommandTestUtil.POLICY_ISSUE_DATE_DESC_BOB;","lastModifiedDate":"2023-10-19"},{"lineNumber":31,"author":{"gitId":"KumChaiYin"},"content":"import static seedu.address.logic.commands.CommandTestUtil.POLICY_NO_DESC_AMY;","lastModifiedDate":"2023-10-19"},{"lineNumber":32,"author":{"gitId":"KumChaiYin"},"content":"import static seedu.address.logic.commands.CommandTestUtil.POLICY_NO_DESC_BOB;","lastModifiedDate":"2023-10-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2017-12-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":36,"author":{"gitId":"KumChaiYin"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_POLICY_EXPIRY_DATE_AMY;","lastModifiedDate":"2023-11-12"},{"lineNumber":37,"author":{"gitId":"KumChaiYin"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_POLICY_ISSUE_DATE_AMY;","lastModifiedDate":"2023-11-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-10-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-07-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-07-14"},{"lineNumber":42,"author":{"gitId":"KumChaiYin"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LICENCE_PLATE;","lastModifiedDate":"2023-10-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-07-14"},{"lineNumber":44,"author":{"gitId":"KumChaiYin"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NRIC;","lastModifiedDate":"2023-10-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-07-14"},{"lineNumber":46,"author":{"gitId":"KumChaiYin"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_POLICY_EXPIRY_DATE;","lastModifiedDate":"2023-11-12"},{"lineNumber":47,"author":{"gitId":"KumChaiYin"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_POLICY_ISSUE_DATE;","lastModifiedDate":"2023-11-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-10-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2023-10-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2023-10-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-06-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-06-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-06-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-06-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-06-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2023-10-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"public class AddCommandParserTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private AddCommandParser parser \u003d new AddCommandParser();","lastModifiedDate":"2017-06-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2023-10-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2023-10-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2023-10-13"},{"lineNumber":73,"author":{"gitId":"KumChaiYin"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2023-10-19"},{"lineNumber":74,"author":{"gitId":"cyaoxuan"},"content":"                + NRIC_DESC_BOB + LICENCE_PLATE_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2023-11-12"},{"lineNumber":75,"author":{"gitId":"suryanshkushwaha"},"content":"                + TAG_DESC_FRIEND + COMPANY_DESC_BOB + POLICY_NO_DESC_BOB","lastModifiedDate":"2023-10-23"},{"lineNumber":76,"author":{"gitId":"suryanshkushwaha"},"content":"                + POLICY_ISSUE_DATE_DESC_BOB","lastModifiedDate":"2023-10-23"},{"lineNumber":77,"author":{"gitId":"KumChaiYin"},"content":"                + POLICY_EXPIRY_DATE_DESC_BOB, new AddCommand(expectedPerson));","lastModifiedDate":"2023-10-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2023-10-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Person expectedPersonMultipleTags \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2023-10-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2023-10-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser,","lastModifiedDate":"2023-10-13"},{"lineNumber":83,"author":{"gitId":"KumChaiYin"},"content":"                NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + NRIC_DESC_BOB","lastModifiedDate":"2023-10-19"},{"lineNumber":84,"author":{"gitId":"cyaoxuan"},"content":"                        + LICENCE_PLATE_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2023-11-12"},{"lineNumber":85,"author":{"gitId":"KumChaiYin"},"content":"                        + TAG_DESC_HUSBAND + TAG_DESC_FRIEND","lastModifiedDate":"2023-10-19"},{"lineNumber":86,"author":{"gitId":"suryanshkushwaha"},"content":"                        + COMPANY_DESC_BOB + POLICY_NO_DESC_BOB + POLICY_ISSUE_DATE_DESC_BOB","lastModifiedDate":"2023-10-23"},{"lineNumber":87,"author":{"gitId":"suryanshkushwaha"},"content":"                        + POLICY_EXPIRY_DATE_DESC_BOB,","lastModifiedDate":"2023-10-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                new AddCommand(expectedPersonMultipleTags));","lastModifiedDate":"2023-10-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-07-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void parse_repeatedNonTagValue_failure() {","lastModifiedDate":"2023-07-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        String validExpectedPersonString \u003d NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2023-07-14"},{"lineNumber":94,"author":{"gitId":"cyaoxuan"},"content":"                + NRIC_DESC_BOB + LICENCE_PLATE_DESC_BOB + ADDRESS_DESC_BOB + TAG_DESC_FRIEND;","lastModifiedDate":"2023-11-12"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // multiple names","lastModifiedDate":"2023-07-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2023-07-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // multiple phones","lastModifiedDate":"2023-07-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, PHONE_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        // multiple emails","lastModifiedDate":"2023-07-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, EMAIL_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_EMAIL));","lastModifiedDate":"2023-07-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        // multiple addresses","lastModifiedDate":"2023-07-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, ADDRESS_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_ADDRESS));","lastModifiedDate":"2023-07-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        // multiple fields repeated","lastModifiedDate":"2023-07-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2023-07-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"                validExpectedPersonString + PHONE_DESC_AMY + EMAIL_DESC_AMY + NAME_DESC_AMY + ADDRESS_DESC_AMY","lastModifiedDate":"2023-07-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"                        + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":116,"author":{"gitId":"KumChaiYin"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME, PREFIX_ADDRESS, PREFIX_EMAIL, PREFIX_PHONE,","lastModifiedDate":"2023-10-19"},{"lineNumber":117,"author":{"gitId":"KumChaiYin"},"content":"                        PREFIX_NRIC, PREFIX_LICENCE_PLATE));","lastModifiedDate":"2023-10-19"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        // invalid value followed by valid value","lastModifiedDate":"2023-07-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2023-07-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2023-07-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2023-07-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_EMAIL_DESC + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_EMAIL));","lastModifiedDate":"2023-07-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2023-07-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_PHONE_DESC + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2023-07-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_ADDRESS_DESC + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_ADDRESS));","lastModifiedDate":"2023-07-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        // valid value followed by invalid value","lastModifiedDate":"2023-07-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2023-07-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_NAME_DESC,","lastModifiedDate":"2023-07-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2023-07-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2023-07-14"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_EMAIL_DESC,","lastModifiedDate":"2023-07-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_EMAIL));","lastModifiedDate":"2023-07-14"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2023-07-14"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_PHONE_DESC,","lastModifiedDate":"2023-07-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2023-07-14"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_ADDRESS_DESC,","lastModifiedDate":"2023-07-14"},{"lineNumber":153,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_ADDRESS));","lastModifiedDate":"2023-07-14"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":157,"author":{"gitId":"RSXIX"},"content":"    public void parse_allOptionalFieldsPresent_success() {","lastModifiedDate":"2023-10-20"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        // zero tags","lastModifiedDate":"2023-10-13"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2023-10-13"},{"lineNumber":160,"author":{"gitId":"KumChaiYin"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2023-10-19"},{"lineNumber":161,"author":{"gitId":"cyaoxuan"},"content":"                        + NRIC_DESC_AMY + LICENCE_PLATE_DESC_AMY + ADDRESS_DESC_AMY + COMPANY_DESC_AMY","lastModifiedDate":"2023-11-12"},{"lineNumber":162,"author":{"gitId":"KumChaiYin"},"content":"                        + POLICY_NO_DESC_AMY + POLICY_ISSUE_DATE_DESC_AMY + POLICY_EXPIRY_DATE_DESC_AMY,","lastModifiedDate":"2023-10-19"},{"lineNumber":163,"author":{"gitId":"-"},"content":"                new AddCommand(expectedPerson));","lastModifiedDate":"2023-10-13"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":166,"author":{"gitId":"RSXIX"},"content":"    @Test","lastModifiedDate":"2023-10-20"},{"lineNumber":167,"author":{"gitId":"RSXIX"},"content":"    public void parse_someButNotAllOptionalFieldsPresent_failure() {","lastModifiedDate":"2023-10-20"},{"lineNumber":168,"author":{"gitId":"KumChaiYin"},"content":"        String errorMessage \u003d MESSAGE_MISSING_FIELDS_POLICY_FOR_ADD_COMMAND;","lastModifiedDate":"2023-11-12"},{"lineNumber":169,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":170,"author":{"gitId":"RSXIX"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, errorMessage);","lastModifiedDate":"2023-10-20"},{"lineNumber":171,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":172,"author":{"gitId":"KumChaiYin"},"content":"        // missing company","lastModifiedDate":"2023-11-12"},{"lineNumber":173,"author":{"gitId":"KumChaiYin"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2023-11-12"},{"lineNumber":174,"author":{"gitId":"KumChaiYin"},"content":"                NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2023-11-12"},{"lineNumber":175,"author":{"gitId":"KumChaiYin"},"content":"                        + NRIC_DESC_BOB + LICENCE_PLATE_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2023-11-12"},{"lineNumber":176,"author":{"gitId":"KumChaiYin"},"content":"                        + TAG_DESC_FRIEND + POLICY_NO_DESC_BOB","lastModifiedDate":"2023-11-12"},{"lineNumber":177,"author":{"gitId":"KumChaiYin"},"content":"                        + POLICY_ISSUE_DATE_DESC_BOB + POLICY_EXPIRY_DATE_DESC_BOB,","lastModifiedDate":"2023-11-12"},{"lineNumber":178,"author":{"gitId":"KumChaiYin"},"content":"                expectedMessage + \"- Company(c/) \");","lastModifiedDate":"2023-11-12"},{"lineNumber":179,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":180,"author":{"gitId":"KumChaiYin"},"content":"        // missing policy number","lastModifiedDate":"2023-11-12"},{"lineNumber":181,"author":{"gitId":"KumChaiYin"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2023-11-12"},{"lineNumber":182,"author":{"gitId":"KumChaiYin"},"content":"                NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2023-11-12"},{"lineNumber":183,"author":{"gitId":"KumChaiYin"},"content":"                        + NRIC_DESC_BOB + LICENCE_PLATE_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2023-11-12"},{"lineNumber":184,"author":{"gitId":"KumChaiYin"},"content":"                        + TAG_DESC_FRIEND + COMPANY_DESC_BOB","lastModifiedDate":"2023-11-12"},{"lineNumber":185,"author":{"gitId":"KumChaiYin"},"content":"                        + POLICY_ISSUE_DATE_DESC_BOB + POLICY_EXPIRY_DATE_DESC_BOB,","lastModifiedDate":"2023-11-12"},{"lineNumber":186,"author":{"gitId":"KumChaiYin"},"content":"                expectedMessage + \"- Policy Number(pn/) \");","lastModifiedDate":"2023-11-12"},{"lineNumber":187,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":188,"author":{"gitId":"KumChaiYin"},"content":"        // missing policy issue date","lastModifiedDate":"2023-11-12"},{"lineNumber":189,"author":{"gitId":"KumChaiYin"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2023-11-12"},{"lineNumber":190,"author":{"gitId":"KumChaiYin"},"content":"                NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2023-11-12"},{"lineNumber":191,"author":{"gitId":"KumChaiYin"},"content":"                        + NRIC_DESC_BOB + LICENCE_PLATE_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2023-11-12"},{"lineNumber":192,"author":{"gitId":"KumChaiYin"},"content":"                        + TAG_DESC_FRIEND + COMPANY_DESC_BOB","lastModifiedDate":"2023-11-12"},{"lineNumber":193,"author":{"gitId":"KumChaiYin"},"content":"                        + POLICY_NO_DESC_BOB + POLICY_EXPIRY_DATE_DESC_BOB,","lastModifiedDate":"2023-11-12"},{"lineNumber":194,"author":{"gitId":"KumChaiYin"},"content":"                expectedMessage + \"- Policy Issue Date(pi/) \");","lastModifiedDate":"2023-11-12"},{"lineNumber":195,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":196,"author":{"gitId":"KumChaiYin"},"content":"        // missing policy expiry date","lastModifiedDate":"2023-11-12"},{"lineNumber":197,"author":{"gitId":"RSXIX"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2023-10-20"},{"lineNumber":198,"author":{"gitId":"RSXIX"},"content":"                NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2023-10-20"},{"lineNumber":199,"author":{"gitId":"cyaoxuan"},"content":"                        + NRIC_DESC_BOB + LICENCE_PLATE_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2023-11-12"},{"lineNumber":200,"author":{"gitId":"suryanshkushwaha"},"content":"                        + TAG_DESC_FRIEND + COMPANY_DESC_BOB","lastModifiedDate":"2023-10-23"},{"lineNumber":201,"author":{"gitId":"suryanshkushwaha"},"content":"                        + POLICY_NO_DESC_BOB + POLICY_ISSUE_DATE_DESC_BOB,","lastModifiedDate":"2023-10-23"},{"lineNumber":202,"author":{"gitId":"KumChaiYin"},"content":"                expectedMessage + \"- Policy Expiry Date(pe/) \");","lastModifiedDate":"2023-11-12"},{"lineNumber":203,"author":{"gitId":"RSXIX"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":204,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":205,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":208,"author":{"gitId":"RSXIX"},"content":"        String errorMessage \u003d MESSAGE_MISSING_FIELDS_FOR_ADD_COMMAND;","lastModifiedDate":"2023-10-20"},{"lineNumber":209,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":210,"author":{"gitId":"RSXIX"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, errorMessage);","lastModifiedDate":"2023-10-20"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":213,"author":{"gitId":"RSXIX"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2023-10-20"},{"lineNumber":214,"author":{"gitId":"cyaoxuan"},"content":"                PHONE_DESC_BOB + EMAIL_DESC_BOB + NRIC_DESC_BOB + LICENCE_PLATE_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2023-11-12"},{"lineNumber":215,"author":{"gitId":"RSXIX"},"content":"                expectedMessage + \"- Name(n/) \");","lastModifiedDate":"2023-10-20"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        // missing phone prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":218,"author":{"gitId":"RSXIX"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2023-10-20"},{"lineNumber":219,"author":{"gitId":"cyaoxuan"},"content":"                NAME_DESC_BOB + EMAIL_DESC_BOB + NRIC_DESC_BOB + LICENCE_PLATE_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2023-11-12"},{"lineNumber":220,"author":{"gitId":"RSXIX"},"content":"                expectedMessage + \"- Phone(p/) \");","lastModifiedDate":"2023-10-20"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        // missing email prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":223,"author":{"gitId":"RSXIX"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2023-10-20"},{"lineNumber":224,"author":{"gitId":"cyaoxuan"},"content":"                NAME_DESC_BOB + PHONE_DESC_BOB + NRIC_DESC_BOB + LICENCE_PLATE_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2023-11-12"},{"lineNumber":225,"author":{"gitId":"RSXIX"},"content":"                expectedMessage + \"- Email(e/) \");","lastModifiedDate":"2023-10-20"},{"lineNumber":226,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":227,"author":{"gitId":"RSXIX"},"content":"        // missing nric prefix","lastModifiedDate":"2023-10-20"},{"lineNumber":228,"author":{"gitId":"RSXIX"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2023-10-20"},{"lineNumber":229,"author":{"gitId":"cyaoxuan"},"content":"                NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + LICENCE_PLATE_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2023-11-12"},{"lineNumber":230,"author":{"gitId":"RSXIX"},"content":"                expectedMessage + \"- NRIC(i/) \");","lastModifiedDate":"2023-10-20"},{"lineNumber":231,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":232,"author":{"gitId":"cyaoxuan"},"content":"        //missing licence plate prefix","lastModifiedDate":"2023-11-12"},{"lineNumber":233,"author":{"gitId":"RSXIX"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2023-10-20"},{"lineNumber":234,"author":{"gitId":"RSXIX"},"content":"                NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + NRIC_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2023-10-20"},{"lineNumber":235,"author":{"gitId":"cyaoxuan"},"content":"                expectedMessage + \"- Licence Plate(l/) \");","lastModifiedDate":"2023-11-12"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":237,"author":{"gitId":"-"},"content":"        // missing address prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":238,"author":{"gitId":"RSXIX"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2023-10-20"},{"lineNumber":239,"author":{"gitId":"cyaoxuan"},"content":"                NAME_DESC_BOB + PHONE_DESC_BOB + NRIC_DESC_BOB + EMAIL_DESC_BOB + LICENCE_PLATE_DESC_BOB,","lastModifiedDate":"2023-11-12"},{"lineNumber":240,"author":{"gitId":"RSXIX"},"content":"                expectedMessage + \"- Address(a/) \");","lastModifiedDate":"2023-10-20"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":242,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":243,"author":{"gitId":"RSXIX"},"content":"        assertParseFailure(parser, \"\",","lastModifiedDate":"2023-10-20"},{"lineNumber":244,"author":{"gitId":"cyaoxuan"},"content":"                expectedMessage + \"- Name(n/) - Phone(p/) - Email(e/) - NRIC(i/) - Licence Plate(l/) - Address(a/) \");","lastModifiedDate":"2023-11-12"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":247,"author":{"gitId":"KumChaiYin"},"content":"    @Test","lastModifiedDate":"2023-11-12"},{"lineNumber":248,"author":{"gitId":"KumChaiYin"},"content":"    public void parse_preambleExist_failure() {","lastModifiedDate":"2023-11-12"},{"lineNumber":249,"author":{"gitId":"KumChaiYin"},"content":"        String validInput \u003d NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2023-11-12"},{"lineNumber":250,"author":{"gitId":"KumChaiYin"},"content":"                + NRIC_DESC_AMY + LICENCE_PLATE_DESC_AMY + ADDRESS_DESC_AMY + COMPANY_DESC_AMY","lastModifiedDate":"2023-11-12"},{"lineNumber":251,"author":{"gitId":"KumChaiYin"},"content":"                + POLICY_NO_DESC_AMY + POLICY_ISSUE_DATE_DESC_AMY + POLICY_EXPIRY_DATE_DESC_AMY;","lastModifiedDate":"2023-11-12"},{"lineNumber":252,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":253,"author":{"gitId":"KumChaiYin"},"content":"        String inputWithPreamble \u003d \"some words\" + validInput;","lastModifiedDate":"2023-11-12"},{"lineNumber":254,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":255,"author":{"gitId":"KumChaiYin"},"content":"        assertParseFailure(parser, inputWithPreamble,","lastModifiedDate":"2023-11-12"},{"lineNumber":256,"author":{"gitId":"KumChaiYin"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, MESSAGE_PREAMBLE_DETECTED));","lastModifiedDate":"2023-11-12"},{"lineNumber":257,"author":{"gitId":"KumChaiYin"},"content":"    }","lastModifiedDate":"2023-11-12"},{"lineNumber":258,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":259,"author":{"gitId":"KumChaiYin"},"content":"    @Test","lastModifiedDate":"2023-11-12"},{"lineNumber":260,"author":{"gitId":"KumChaiYin"},"content":"    public void parse_incompatiblePolicyDates_failure() {","lastModifiedDate":"2023-11-12"},{"lineNumber":261,"author":{"gitId":"KumChaiYin"},"content":"        String incompatiblePolicyDates \u003d \" \" + PREFIX_POLICY_ISSUE_DATE + VALID_POLICY_EXPIRY_DATE_AMY + \" \"","lastModifiedDate":"2023-11-12"},{"lineNumber":262,"author":{"gitId":"KumChaiYin"},"content":"                + PREFIX_POLICY_EXPIRY_DATE + VALID_POLICY_ISSUE_DATE_AMY;","lastModifiedDate":"2023-11-12"},{"lineNumber":263,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":264,"author":{"gitId":"KumChaiYin"},"content":"        String incompatibleInput \u003d NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2023-11-12"},{"lineNumber":265,"author":{"gitId":"KumChaiYin"},"content":"                + NRIC_DESC_AMY + LICENCE_PLATE_DESC_AMY + ADDRESS_DESC_AMY + COMPANY_DESC_AMY","lastModifiedDate":"2023-11-12"},{"lineNumber":266,"author":{"gitId":"KumChaiYin"},"content":"                + POLICY_NO_DESC_AMY + incompatiblePolicyDates;","lastModifiedDate":"2023-11-12"},{"lineNumber":267,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":268,"author":{"gitId":"KumChaiYin"},"content":"        assertParseFailure(parser, incompatibleInput,","lastModifiedDate":"2023-11-12"},{"lineNumber":269,"author":{"gitId":"KumChaiYin"},"content":"                MESSAGE_DATES_NOT_COMPATIBLE);","lastModifiedDate":"2023-11-12"},{"lineNumber":270,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-11-12"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":272,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":273,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":274,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":275,"author":{"gitId":"RSXIX"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2023-10-20"},{"lineNumber":276,"author":{"gitId":"RSXIX"},"content":"                INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + NRIC_DESC_BOB","lastModifiedDate":"2023-10-20"},{"lineNumber":277,"author":{"gitId":"cyaoxuan"},"content":"                + LICENCE_PLATE_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2023-11-12"},{"lineNumber":278,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":280,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2017-06-15"},{"lineNumber":281,"author":{"gitId":"KumChaiYin"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + INVALID_PHONE_DESC + EMAIL_DESC_BOB + NRIC_DESC_BOB","lastModifiedDate":"2023-10-19"},{"lineNumber":282,"author":{"gitId":"cyaoxuan"},"content":"                + LICENCE_PLATE_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2023-11-12"},{"lineNumber":283,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":285,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2017-06-15"},{"lineNumber":286,"author":{"gitId":"KumChaiYin"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + INVALID_EMAIL_DESC + NRIC_DESC_BOB","lastModifiedDate":"2023-10-19"},{"lineNumber":287,"author":{"gitId":"cyaoxuan"},"content":"                + LICENCE_PLATE_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2023-11-12"},{"lineNumber":288,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":290,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2017-06-15"},{"lineNumber":291,"author":{"gitId":"KumChaiYin"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + NRIC_DESC_BOB","lastModifiedDate":"2023-10-19"},{"lineNumber":292,"author":{"gitId":"cyaoxuan"},"content":"                + LICENCE_PLATE_DESC_BOB + INVALID_ADDRESS_DESC","lastModifiedDate":"2023-11-12"},{"lineNumber":293,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":295,"author":{"gitId":"-"},"content":"        // invalid tag","lastModifiedDate":"2017-06-15"},{"lineNumber":296,"author":{"gitId":"KumChaiYin"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + NRIC_DESC_BOB","lastModifiedDate":"2023-10-19"},{"lineNumber":297,"author":{"gitId":"cyaoxuan"},"content":"                + LICENCE_PLATE_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2023-11-12"},{"lineNumber":298,"author":{"gitId":"-"},"content":"                + INVALID_TAG_DESC + VALID_TAG_FRIEND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":300,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":301,"author":{"gitId":"KumChaiYin"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + NRIC_DESC_BOB","lastModifiedDate":"2023-10-19"},{"lineNumber":302,"author":{"gitId":"cyaoxuan"},"content":"                + LICENCE_PLATE_DESC_BOB + INVALID_ADDRESS_DESC,","lastModifiedDate":"2023-11-12"},{"lineNumber":303,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":305,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":306,"author":{"gitId":"KumChaiYin"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + NRIC_DESC_BOB","lastModifiedDate":"2023-10-19"},{"lineNumber":307,"author":{"gitId":"cyaoxuan"},"content":"                + LICENCE_PLATE_DESC_BOB + ADDRESS_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2023-11-12"},{"lineNumber":308,"author":{"gitId":"RSXIX"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, MESSAGE_PREAMBLE_DETECTED));","lastModifiedDate":"2023-10-20"},{"lineNumber":309,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":310,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"suryanshkushwaha":8,"RSXIX":34,"KumChaiYin":81,"-":165,"cyaoxuan":22}},{"path":"src/test/java/seedu/address/logic/parser/AddressBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-06-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"brendanneojw"},"content":"import seedu.address.model.person.predicates.CompanyContainsKeywordsPredicate;","lastModifiedDate":"2023-11-11"},{"lineNumber":23,"author":{"gitId":"brendanneojw"},"content":"import seedu.address.model.person.predicates.EmailContainsKeywordsPredicate;","lastModifiedDate":"2023-11-11"},{"lineNumber":24,"author":{"gitId":"brendanneojw"},"content":"import seedu.address.model.person.predicates.LicenceContainsKeywordsPredicate;","lastModifiedDate":"2023-11-11"},{"lineNumber":25,"author":{"gitId":"brendanneojw"},"content":"import seedu.address.model.person.predicates.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-11-11"},{"lineNumber":26,"author":{"gitId":"brendanneojw"},"content":"import seedu.address.model.person.predicates.NricContainsKeywordsPredicate;","lastModifiedDate":"2023-11-11"},{"lineNumber":27,"author":{"gitId":"brendanneojw"},"content":"import seedu.address.model.person.predicates.PhoneContainsKeywordsPredicate;","lastModifiedDate":"2023-11-11"},{"lineNumber":28,"author":{"gitId":"brendanneojw"},"content":"import seedu.address.model.person.predicates.PolicyExpiryContainsKeywordsPredicate;","lastModifiedDate":"2023-11-11"},{"lineNumber":29,"author":{"gitId":"brendanneojw"},"content":"import seedu.address.model.person.predicates.PolicyIssueContainsKeywordsPredicate;","lastModifiedDate":"2023-11-11"},{"lineNumber":30,"author":{"gitId":"brendanneojw"},"content":"import seedu.address.model.person.predicates.PolicyNumberContainsKeywordsPredicate;","lastModifiedDate":"2023-11-11"},{"lineNumber":31,"author":{"gitId":"brendanneojw"},"content":"import seedu.address.model.person.predicates.TagContainsKeywordsPredicate;","lastModifiedDate":"2023-11-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonUtil;","lastModifiedDate":"2017-06-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"public class AddressBookParserTest {","lastModifiedDate":"2017-07-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private final AddressBookParser parser \u003d new AddressBookParser();","lastModifiedDate":"2017-07-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"cyaoxuan"},"content":"    /*","lastModifiedDate":"2023-10-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2023-10-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2023-10-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(PersonUtil.getAddCommand(person));","lastModifiedDate":"2023-10-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertEquals(new AddCommand(person), command);","lastModifiedDate":"2023-10-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":47,"author":{"gitId":"cyaoxuan"},"content":"    */","lastModifiedDate":"2023-10-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertEquals(new DeleteCommand(INDEX_FIRST_PERSON), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(person).build();","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                + INDEX_FIRST_PERSON.getOneBased() + \" \" + PersonUtil.getEditPersonDescriptorDetails(descriptor));","lastModifiedDate":"2018-03-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertEquals(new EditCommand(INDEX_FIRST_PERSON, descriptor), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":79,"author":{"gitId":"brendanneojw"},"content":"        String keywords \u003d \"foo bar fun\";","lastModifiedDate":"2023-10-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":81,"author":{"gitId":"brendanneojw"},"content":"                FindCommand.COMMAND_WORD + \" n/\" + keywords);","lastModifiedDate":"2023-10-18"},{"lineNumber":82,"author":{"gitId":"suryanshkushwaha"},"content":"        assertEquals(","lastModifiedDate":"2023-10-23"},{"lineNumber":83,"author":{"gitId":"suryanshkushwaha"},"content":"                new FindCommand(","lastModifiedDate":"2023-10-23"},{"lineNumber":84,"author":{"gitId":"suryanshkushwaha"},"content":"                new NameContainsKeywordsPredicate(keywords),","lastModifiedDate":"2023-10-23"},{"lineNumber":85,"author":{"gitId":"brendanneojw"},"content":"                new LicenceContainsKeywordsPredicate(\"\"),","lastModifiedDate":"2023-10-18"},{"lineNumber":86,"author":{"gitId":"brendanneojw"},"content":"                new NricContainsKeywordsPredicate(\"\"),","lastModifiedDate":"2023-10-18"},{"lineNumber":87,"author":{"gitId":"suryanshkushwaha"},"content":"                new PhoneContainsKeywordsPredicate(\"\"),","lastModifiedDate":"2023-10-23"},{"lineNumber":88,"author":{"gitId":"suryanshkushwaha"},"content":"                new PolicyNumberContainsKeywordsPredicate(\"\"),","lastModifiedDate":"2023-10-23"},{"lineNumber":89,"author":{"gitId":"suryanshkushwaha"},"content":"                new TagContainsKeywordsPredicate(\"\"),","lastModifiedDate":"2023-10-23"},{"lineNumber":90,"author":{"gitId":"suryanshkushwaha"},"content":"                new PolicyExpiryContainsKeywordsPredicate(\"\"),","lastModifiedDate":"2023-10-23"},{"lineNumber":91,"author":{"gitId":"suryanshkushwaha"},"content":"                new EmailContainsKeywordsPredicate(\"\"),","lastModifiedDate":"2023-10-23"},{"lineNumber":92,"author":{"gitId":"suryanshkushwaha"},"content":"                new PolicyIssueContainsKeywordsPredicate(\"\"),","lastModifiedDate":"2023-10-23"},{"lineNumber":93,"author":{"gitId":"suryanshkushwaha"},"content":"                new CompanyContainsKeywordsPredicate(\"\")),","lastModifiedDate":"2023-10-23"},{"lineNumber":94,"author":{"gitId":"suryanshkushwaha"},"content":"                command","lastModifiedDate":"2023-10-23"},{"lineNumber":95,"author":{"gitId":"suryanshkushwaha"},"content":"        );","lastModifiedDate":"2023-10-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":120,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"brendanneojw":14,"suryanshkushwaha":12,"-":92,"cyaoxuan":2}},{"path":"src/test/java/seedu/address/logic/parser/BatchDeleteCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"KumChaiYin"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-11-13"},{"lineNumber":2,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":3,"author":{"gitId":"KumChaiYin"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-11-13"},{"lineNumber":4,"author":{"gitId":"KumChaiYin"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_TWO_FIELD;","lastModifiedDate":"2023-11-13"},{"lineNumber":5,"author":{"gitId":"KumChaiYin"},"content":"import static seedu.address.logic.commands.CommandTestUtil.COMPANY_DESC_AMY;","lastModifiedDate":"2023-11-13"},{"lineNumber":6,"author":{"gitId":"KumChaiYin"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_DELETE_MONTH_DESC;","lastModifiedDate":"2023-11-13"},{"lineNumber":7,"author":{"gitId":"KumChaiYin"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_COMPANY_AMY;","lastModifiedDate":"2023-11-13"},{"lineNumber":8,"author":{"gitId":"KumChaiYin"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DELETE_MONTH;","lastModifiedDate":"2023-11-13"},{"lineNumber":9,"author":{"gitId":"KumChaiYin"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DELETE_MONTH_DESC;","lastModifiedDate":"2023-11-13"},{"lineNumber":10,"author":{"gitId":"KumChaiYin"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_COMPANY;","lastModifiedDate":"2023-11-13"},{"lineNumber":11,"author":{"gitId":"KumChaiYin"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DELETE_MONTH;","lastModifiedDate":"2023-11-13"},{"lineNumber":12,"author":{"gitId":"KumChaiYin"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-11-13"},{"lineNumber":13,"author":{"gitId":"KumChaiYin"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-11-13"},{"lineNumber":14,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":15,"author":{"gitId":"KumChaiYin"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-11-13"},{"lineNumber":16,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":17,"author":{"gitId":"KumChaiYin"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-11-13"},{"lineNumber":18,"author":{"gitId":"KumChaiYin"},"content":"import seedu.address.logic.commands.BatchDeleteCommand;","lastModifiedDate":"2023-11-13"},{"lineNumber":19,"author":{"gitId":"KumChaiYin"},"content":"import seedu.address.model.month.DeleteMonth;","lastModifiedDate":"2023-11-13"},{"lineNumber":20,"author":{"gitId":"KumChaiYin"},"content":"import seedu.address.model.policy.Company;","lastModifiedDate":"2023-11-13"},{"lineNumber":21,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":22,"author":{"gitId":"KumChaiYin"},"content":"public class BatchDeleteCommandParserTest {","lastModifiedDate":"2023-11-13"},{"lineNumber":23,"author":{"gitId":"KumChaiYin"},"content":"    private BatchDeleteCommandParser parser \u003d new BatchDeleteCommandParser();","lastModifiedDate":"2023-11-13"},{"lineNumber":24,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":25,"author":{"gitId":"KumChaiYin"},"content":"    @Test","lastModifiedDate":"2023-11-13"},{"lineNumber":26,"author":{"gitId":"KumChaiYin"},"content":"    public void parse_validInputs_success() {","lastModifiedDate":"2023-11-13"},{"lineNumber":27,"author":{"gitId":"KumChaiYin"},"content":"        DeleteMonth month \u003d new DeleteMonth(VALID_DELETE_MONTH);","lastModifiedDate":"2023-11-13"},{"lineNumber":28,"author":{"gitId":"KumChaiYin"},"content":"        assertParseSuccess(parser, VALID_DELETE_MONTH_DESC, new BatchDeleteCommand(month, null));","lastModifiedDate":"2023-11-13"},{"lineNumber":29,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":30,"author":{"gitId":"KumChaiYin"},"content":"        Company company \u003d new Company(VALID_COMPANY_AMY);","lastModifiedDate":"2023-11-13"},{"lineNumber":31,"author":{"gitId":"KumChaiYin"},"content":"        assertParseSuccess(parser, COMPANY_DESC_AMY, new BatchDeleteCommand(null, company));","lastModifiedDate":"2023-11-13"},{"lineNumber":32,"author":{"gitId":"KumChaiYin"},"content":"    }","lastModifiedDate":"2023-11-13"},{"lineNumber":33,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":34,"author":{"gitId":"KumChaiYin"},"content":"    @Test","lastModifiedDate":"2023-11-13"},{"lineNumber":35,"author":{"gitId":"KumChaiYin"},"content":"    public void parse_twoPrefixExistInput_failure() {","lastModifiedDate":"2023-11-13"},{"lineNumber":36,"author":{"gitId":"KumChaiYin"},"content":"        assertParseFailure(parser, VALID_DELETE_MONTH_DESC + COMPANY_DESC_AMY,","lastModifiedDate":"2023-11-13"},{"lineNumber":37,"author":{"gitId":"KumChaiYin"},"content":"                String.format(MESSAGE_INVALID_TWO_FIELD, PREFIX_DELETE_MONTH, PREFIX_COMPANY));","lastModifiedDate":"2023-11-13"},{"lineNumber":38,"author":{"gitId":"KumChaiYin"},"content":"    }","lastModifiedDate":"2023-11-13"},{"lineNumber":39,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":40,"author":{"gitId":"KumChaiYin"},"content":"    @Test","lastModifiedDate":"2023-11-13"},{"lineNumber":41,"author":{"gitId":"KumChaiYin"},"content":"    public void parse_noPrefixInput_failure() {","lastModifiedDate":"2023-11-13"},{"lineNumber":42,"author":{"gitId":"KumChaiYin"},"content":"        assertParseFailure(parser, VALID_COMPANY_AMY,","lastModifiedDate":"2023-11-13"},{"lineNumber":43,"author":{"gitId":"KumChaiYin"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, BatchDeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-11-13"},{"lineNumber":44,"author":{"gitId":"KumChaiYin"},"content":"    }","lastModifiedDate":"2023-11-13"},{"lineNumber":45,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":46,"author":{"gitId":"KumChaiYin"},"content":"    @Test","lastModifiedDate":"2023-11-13"},{"lineNumber":47,"author":{"gitId":"KumChaiYin"},"content":"    public void parse_repeatedValue_failure() {","lastModifiedDate":"2023-11-13"},{"lineNumber":48,"author":{"gitId":"KumChaiYin"},"content":"        // multiple delete months","lastModifiedDate":"2023-11-13"},{"lineNumber":49,"author":{"gitId":"KumChaiYin"},"content":"        assertParseFailure(parser, VALID_DELETE_MONTH_DESC + VALID_DELETE_MONTH_DESC,","lastModifiedDate":"2023-11-13"},{"lineNumber":50,"author":{"gitId":"KumChaiYin"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_DELETE_MONTH));","lastModifiedDate":"2023-11-13"},{"lineNumber":51,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":52,"author":{"gitId":"KumChaiYin"},"content":"        // multiple companies","lastModifiedDate":"2023-11-13"},{"lineNumber":53,"author":{"gitId":"KumChaiYin"},"content":"        assertParseFailure(parser, COMPANY_DESC_AMY + COMPANY_DESC_AMY,","lastModifiedDate":"2023-11-13"},{"lineNumber":54,"author":{"gitId":"KumChaiYin"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_COMPANY));","lastModifiedDate":"2023-11-13"},{"lineNumber":55,"author":{"gitId":"KumChaiYin"},"content":"    }","lastModifiedDate":"2023-11-13"},{"lineNumber":56,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":57,"author":{"gitId":"KumChaiYin"},"content":"    @Test","lastModifiedDate":"2023-11-13"},{"lineNumber":58,"author":{"gitId":"KumChaiYin"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2023-11-13"},{"lineNumber":59,"author":{"gitId":"KumChaiYin"},"content":"        // invalid delete month","lastModifiedDate":"2023-11-13"},{"lineNumber":60,"author":{"gitId":"KumChaiYin"},"content":"        assertParseFailure(parser, INVALID_DELETE_MONTH_DESC, DeleteMonth.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-11-13"},{"lineNumber":61,"author":{"gitId":"KumChaiYin"},"content":"    }","lastModifiedDate":"2023-11-13"},{"lineNumber":62,"author":{"gitId":"KumChaiYin"},"content":"}","lastModifiedDate":"2023-11-13"}],"authorContributionMap":{"KumChaiYin":62}},{"path":"src/test/java/seedu/address/logic/parser/DeleteCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":9,"author":{"gitId":"RSXIX"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-06-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2017-06-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * outside of the DeleteCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2017-06-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * same path through the DeleteCommand, and therefore we test only one of them.","lastModifiedDate":"2017-06-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2017-06-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2017-06-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class DeleteCommandParserTest {","lastModifiedDate":"2017-06-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private DeleteCommandParser parser \u003d new DeleteCommandParser();","lastModifiedDate":"2017-06-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \"1\", new DeleteCommand(INDEX_FIRST_PERSON));","lastModifiedDate":"2017-07-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":28,"author":{"gitId":"RSXIX"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"RSXIX"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"RSXIX"},"content":"        assertParseFailure(parser, \"\", String.format(Messages.MESSAGE_MISSING_INDEX, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"RSXIX"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":36,"author":{"gitId":"RSXIX"},"content":"        assertParseFailure(parser, \"a\", String.format(Messages.MESSAGE_IMPOSSIBLE_INDEX, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":38,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"RSXIX":9,"-":30}},{"path":"src/test/java/seedu/address/logic/parser/EditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-07-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-07-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-07-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-05-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-05-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-05-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"public class EditCommandParserTest {","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private EditCommandParser parser \u003d new EditCommandParser();","lastModifiedDate":"2017-05-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2017-05-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\", EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-07-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2017-06-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2017-05-04"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2017-06-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":81,"author":{"gitId":"suryanshkushwaha"},"content":"        assertParseFailure(parser, \"1 q/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-17"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2018-09-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2018-09-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2018-09-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_ADDRESS_DESC, Address.MESSAGE_CONSTRAINTS); // invalid address","lastModifiedDate":"2018-09-22"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_TAG_DESC, Tag.MESSAGE_CONSTRAINTS); // invalid tag","lastModifiedDate":"2018-09-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // invalid phone followed by valid email","lastModifiedDate":"2017-05-04"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC + EMAIL_DESC_AMY, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code Person} being edited,","lastModifiedDate":"2017-05-04"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // parsing it together with a valid tag results in error","lastModifiedDate":"2017-05-04"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_DESC_HUSBAND + TAG_EMPTY, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_EMPTY + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_EMPTY + TAG_DESC_FRIEND + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2017-05-04"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC + INVALID_EMAIL_DESC + VALID_ADDRESS_AMY + VALID_PHONE_AMY,","lastModifiedDate":"2017-07-06"},{"lineNumber":103,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + TAG_DESC_HUSBAND","lastModifiedDate":"2017-06-06"},{"lineNumber":110,"author":{"gitId":"-"},"content":"                + EMAIL_DESC_AMY + ADDRESS_DESC_AMY + NAME_DESC_AMY + TAG_DESC_FRIEND;","lastModifiedDate":"2017-06-06"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":113,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":114,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":126,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        // name","lastModifiedDate":"2017-05-04"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        // phone","lastModifiedDate":"2017-05-04"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        // email","lastModifiedDate":"2017-05-04"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        // address","lastModifiedDate":"2017-05-04"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + ADDRESS_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withAddress(VALID_ADDRESS_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        // tags","lastModifiedDate":"2017-05-04"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + TAG_DESC_FRIEND;","lastModifiedDate":"2017-05-25"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_failure() {","lastModifiedDate":"2023-07-14"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        // More extensive testing of duplicate parameter detections is done in","lastModifiedDate":"2023-07-14"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        // AddCommandParserTest#parse_repeatedNonTagValue_failure()","lastModifiedDate":"2023-07-14"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        // valid followed by invalid","lastModifiedDate":"2023-07-14"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2023-07-14"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput, Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        // invalid followed by valid","lastModifiedDate":"2023-07-14"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + INVALID_PHONE_DESC;","lastModifiedDate":"2023-07-14"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput, Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        // mulltiple valid fields repeated","lastModifiedDate":"2023-07-14"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2023-07-14"},{"lineNumber":184,"author":{"gitId":"-"},"content":"                + TAG_DESC_FRIEND + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY + TAG_DESC_FRIEND","lastModifiedDate":"2017-05-25"},{"lineNumber":185,"author":{"gitId":"-"},"content":"                + PHONE_DESC_BOB + ADDRESS_DESC_BOB + EMAIL_DESC_BOB + TAG_DESC_HUSBAND;","lastModifiedDate":"2017-05-25"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput,","lastModifiedDate":"2023-07-14"},{"lineNumber":188,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS));","lastModifiedDate":"2023-07-14"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        // multiple invalid values","lastModifiedDate":"2023-07-14"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + INVALID_ADDRESS_DESC + INVALID_EMAIL_DESC","lastModifiedDate":"2023-07-14"},{"lineNumber":192,"author":{"gitId":"-"},"content":"                + INVALID_PHONE_DESC + INVALID_ADDRESS_DESC + INVALID_EMAIL_DESC;","lastModifiedDate":"2023-07-14"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput,","lastModifiedDate":"2023-07-14"},{"lineNumber":195,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS));","lastModifiedDate":"2023-07-14"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    public void parse_resetTags_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + TAG_EMPTY;","lastModifiedDate":"2017-05-25"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withTags().build();","lastModifiedDate":"2017-05-04"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":208,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"suryanshkushwaha":1,"-":207}},{"path":"src/test/java/seedu/address/logic/parser/FindCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":3,"author":{"gitId":"brendanneojw"},"content":"import static seedu.address.logic.Messages.MESSAGE_EMPTY_FIELDS;","lastModifiedDate":"2023-11-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":5,"author":{"gitId":"brendanneojw"},"content":"import static seedu.address.logic.Messages.MESSAGE_PREAMBLE_DETECTED;","lastModifiedDate":"2023-11-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":12,"author":{"gitId":"brendanneojw"},"content":"import seedu.address.model.person.predicates.CompanyContainsKeywordsPredicate;","lastModifiedDate":"2023-11-11"},{"lineNumber":13,"author":{"gitId":"brendanneojw"},"content":"import seedu.address.model.person.predicates.EmailContainsKeywordsPredicate;","lastModifiedDate":"2023-11-11"},{"lineNumber":14,"author":{"gitId":"brendanneojw"},"content":"import seedu.address.model.person.predicates.LicenceContainsKeywordsPredicate;","lastModifiedDate":"2023-11-11"},{"lineNumber":15,"author":{"gitId":"brendanneojw"},"content":"import seedu.address.model.person.predicates.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-11-11"},{"lineNumber":16,"author":{"gitId":"brendanneojw"},"content":"import seedu.address.model.person.predicates.NricContainsKeywordsPredicate;","lastModifiedDate":"2023-11-11"},{"lineNumber":17,"author":{"gitId":"brendanneojw"},"content":"import seedu.address.model.person.predicates.PhoneContainsKeywordsPredicate;","lastModifiedDate":"2023-11-11"},{"lineNumber":18,"author":{"gitId":"brendanneojw"},"content":"import seedu.address.model.person.predicates.PolicyExpiryContainsKeywordsPredicate;","lastModifiedDate":"2023-11-11"},{"lineNumber":19,"author":{"gitId":"brendanneojw"},"content":"import seedu.address.model.person.predicates.PolicyIssueContainsKeywordsPredicate;","lastModifiedDate":"2023-11-11"},{"lineNumber":20,"author":{"gitId":"brendanneojw"},"content":"import seedu.address.model.person.predicates.PolicyNumberContainsKeywordsPredicate;","lastModifiedDate":"2023-11-11"},{"lineNumber":21,"author":{"gitId":"brendanneojw"},"content":"import seedu.address.model.person.predicates.TagContainsKeywordsPredicate;","lastModifiedDate":"2023-11-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class FindCommandParserTest {","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private FindCommandParser parser \u003d new FindCommandParser();","lastModifiedDate":"2017-06-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2017-06-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"brendanneojw"},"content":"    @Test","lastModifiedDate":"2023-11-13"},{"lineNumber":33,"author":{"gitId":"brendanneojw"},"content":"    public void parse_argHasPreamble_throwsParseException() {","lastModifiedDate":"2023-11-13"},{"lineNumber":34,"author":{"gitId":"brendanneojw"},"content":"        assertParseFailure(parser, \" abc n/Alice Bob\",","lastModifiedDate":"2023-11-13"},{"lineNumber":35,"author":{"gitId":"brendanneojw"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, MESSAGE_PREAMBLE_DETECTED));","lastModifiedDate":"2023-11-13"},{"lineNumber":36,"author":{"gitId":"brendanneojw"},"content":"    }","lastModifiedDate":"2023-11-13"},{"lineNumber":37,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":38,"author":{"gitId":"brendanneojw"},"content":"    @Test","lastModifiedDate":"2023-11-13"},{"lineNumber":39,"author":{"gitId":"brendanneojw"},"content":"    public void parse_singlePrefixGivenNoValue_throwsParseException() {","lastModifiedDate":"2023-11-13"},{"lineNumber":40,"author":{"gitId":"brendanneojw"},"content":"        // Single prefix no value","lastModifiedDate":"2023-11-13"},{"lineNumber":41,"author":{"gitId":"brendanneojw"},"content":"        assertParseFailure(parser, \" n/\", String.format(MESSAGE_EMPTY_FIELDS, \"n/\"));","lastModifiedDate":"2023-11-13"},{"lineNumber":42,"author":{"gitId":"brendanneojw"},"content":"        assertParseFailure(parser, \" l/\", String.format(MESSAGE_EMPTY_FIELDS, \"l/\"));","lastModifiedDate":"2023-11-13"},{"lineNumber":43,"author":{"gitId":"brendanneojw"},"content":"        assertParseFailure(parser, \" i/\", String.format(MESSAGE_EMPTY_FIELDS, \"i/\"));","lastModifiedDate":"2023-11-13"},{"lineNumber":44,"author":{"gitId":"brendanneojw"},"content":"        assertParseFailure(parser, \" p/\", String.format(MESSAGE_EMPTY_FIELDS, \"p/\"));","lastModifiedDate":"2023-11-13"},{"lineNumber":45,"author":{"gitId":"brendanneojw"},"content":"        assertParseFailure(parser, \" t/\", String.format(MESSAGE_EMPTY_FIELDS, \"t/\"));","lastModifiedDate":"2023-11-13"},{"lineNumber":46,"author":{"gitId":"brendanneojw"},"content":"        assertParseFailure(parser, \" e/\", String.format(MESSAGE_EMPTY_FIELDS, \"e/\"));","lastModifiedDate":"2023-11-13"},{"lineNumber":47,"author":{"gitId":"brendanneojw"},"content":"        assertParseFailure(parser, \" c/\", String.format(MESSAGE_EMPTY_FIELDS, \"c/\"));","lastModifiedDate":"2023-11-13"},{"lineNumber":48,"author":{"gitId":"brendanneojw"},"content":"        assertParseFailure(parser, \" pn/\", String.format(MESSAGE_EMPTY_FIELDS, \"pn/\"));","lastModifiedDate":"2023-11-13"},{"lineNumber":49,"author":{"gitId":"brendanneojw"},"content":"        assertParseFailure(parser, \" pi/\", String.format(MESSAGE_EMPTY_FIELDS, \"pi/\"));","lastModifiedDate":"2023-11-13"},{"lineNumber":50,"author":{"gitId":"brendanneojw"},"content":"        assertParseFailure(parser, \" pe/\", String.format(MESSAGE_EMPTY_FIELDS, \"pe/\"));","lastModifiedDate":"2023-11-13"},{"lineNumber":51,"author":{"gitId":"brendanneojw"},"content":"    }","lastModifiedDate":"2023-11-13"},{"lineNumber":52,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":53,"author":{"gitId":"brendanneojw"},"content":"    @Test","lastModifiedDate":"2023-11-13"},{"lineNumber":54,"author":{"gitId":"brendanneojw"},"content":"    public void parse_multiplePrefixGivenAllNoValue_throwsParseException() {","lastModifiedDate":"2023-11-13"},{"lineNumber":55,"author":{"gitId":"brendanneojw"},"content":"        // All prefixes no value","lastModifiedDate":"2023-11-13"},{"lineNumber":56,"author":{"gitId":"brendanneojw"},"content":"        assertParseFailure(parser, \" n/ l/\", String.format(MESSAGE_EMPTY_FIELDS, \"n/ l/\"));","lastModifiedDate":"2023-11-13"},{"lineNumber":57,"author":{"gitId":"brendanneojw"},"content":"        assertParseFailure(parser, \" n/ c/\", String.format(MESSAGE_EMPTY_FIELDS, \"n/ c/\"));","lastModifiedDate":"2023-11-13"},{"lineNumber":58,"author":{"gitId":"brendanneojw"},"content":"        assertParseFailure(parser, \" i/ p/\", String.format(MESSAGE_EMPTY_FIELDS, \"i/ p/\"));","lastModifiedDate":"2023-11-13"},{"lineNumber":59,"author":{"gitId":"brendanneojw"},"content":"    }","lastModifiedDate":"2023-11-13"},{"lineNumber":60,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":61,"author":{"gitId":"brendanneojw"},"content":"    @Test","lastModifiedDate":"2023-11-13"},{"lineNumber":62,"author":{"gitId":"brendanneojw"},"content":"    public void parse_multiplePrefixSomeHasValue_throwsParseException() {","lastModifiedDate":"2023-11-13"},{"lineNumber":63,"author":{"gitId":"brendanneojw"},"content":"        // Some prefix has value","lastModifiedDate":"2023-11-13"},{"lineNumber":64,"author":{"gitId":"brendanneojw"},"content":"        assertParseFailure(parser, \" n/Alice l/\", String.format(MESSAGE_EMPTY_FIELDS, \"l/\"));","lastModifiedDate":"2023-11-13"},{"lineNumber":65,"author":{"gitId":"brendanneojw"},"content":"        assertParseFailure(parser, \" n/ c/Google\", String.format(MESSAGE_EMPTY_FIELDS, \"n/\"));","lastModifiedDate":"2023-11-13"},{"lineNumber":66,"author":{"gitId":"brendanneojw"},"content":"        assertParseFailure(parser, \" i/589J p/ pi/01-01-2024\", String.format(MESSAGE_EMPTY_FIELDS, \"p/\"));","lastModifiedDate":"2023-11-13"},{"lineNumber":67,"author":{"gitId":"brendanneojw"},"content":"        assertParseFailure(parser, \" p/98765432 l/SLA e/ n/\", String.format(MESSAGE_EMPTY_FIELDS, \"n/ e/\"));","lastModifiedDate":"2023-11-13"},{"lineNumber":68,"author":{"gitId":"brendanneojw"},"content":"    }","lastModifiedDate":"2023-11-13"},{"lineNumber":69,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsFindCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        FindCommand expectedFindCommand \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":74,"author":{"gitId":"brendanneojw"},"content":"                new FindCommand(new NameContainsKeywordsPredicate(\"Alice Bob\"),","lastModifiedDate":"2023-10-18"},{"lineNumber":75,"author":{"gitId":"brendanneojw"},"content":"                        new LicenceContainsKeywordsPredicate(\"\"), new NricContainsKeywordsPredicate(\"\"),","lastModifiedDate":"2023-10-18"},{"lineNumber":76,"author":{"gitId":"brendanneojw"},"content":"                        new PhoneContainsKeywordsPredicate(\"\"), new PolicyNumberContainsKeywordsPredicate(\"\"),","lastModifiedDate":"2023-10-18"},{"lineNumber":77,"author":{"gitId":"brendanneojw"},"content":"                        new TagContainsKeywordsPredicate(\"\"), new PolicyExpiryContainsKeywordsPredicate(\"\"),","lastModifiedDate":"2023-10-18"},{"lineNumber":78,"author":{"gitId":"suryanshkushwaha"},"content":"                        new EmailContainsKeywordsPredicate(\"\"), new PolicyIssueContainsKeywordsPredicate(\"\"),","lastModifiedDate":"2023-10-23"},{"lineNumber":79,"author":{"gitId":"suryanshkushwaha"},"content":"                        new CompanyContainsKeywordsPredicate(\"\"));","lastModifiedDate":"2023-10-23"},{"lineNumber":80,"author":{"gitId":"cyaoxuan"},"content":"        assertParseSuccess(parser, \" n/Alice Bob\", expectedFindCommand);","lastModifiedDate":"2023-11-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-27"}],"authorContributionMap":{"brendanneojw":54,"suryanshkushwaha":2,"-":26,"cyaoxuan":1}},{"path":"src/test/java/seedu/address/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-05-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-05-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-05-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":15,"author":{"gitId":"RSXIX"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-05-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-05-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-05-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-05-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":24,"author":{"gitId":"cyaoxuan"},"content":"    private static final String INVALID_NAME \u003d \"Rachel!\";","lastModifiedDate":"2023-11-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2017-05-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2017-05-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":29,"author":{"gitId":"KumChaiYin"},"content":"    private static final String INVALID_NRIC \u003d \"12345\";","lastModifiedDate":"2023-11-13"},{"lineNumber":30,"author":{"gitId":"KumChaiYin"},"content":"    private static final String INVALID_LICENCE_PLATE \u003d \"1234567890\";","lastModifiedDate":"2023-11-13"},{"lineNumber":31,"author":{"gitId":"KumChaiYin"},"content":"    private static final String INVALID_POLICY_NUMBER \u003d \"2023-09-10\";","lastModifiedDate":"2023-11-13"},{"lineNumber":32,"author":{"gitId":"KumChaiYin"},"content":"    private static final String INVALID_POLICY_DATE \u003d \"2023-09-10\";","lastModifiedDate":"2023-11-13"},{"lineNumber":33,"author":{"gitId":"KumChaiYin"},"content":"    private static final String INVALID_COMPANY \u003d \"\";","lastModifiedDate":"2023-11-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":36,"author":{"gitId":"cyaoxuan"},"content":"    private static final String VALID_PHONE \u003d \"12345678\";","lastModifiedDate":"2023-11-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d \"123 Main Street #0505\";","lastModifiedDate":"2017-05-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d \"rachel@example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_1 \u003d \"friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_2 \u003d \"neighbour\";","lastModifiedDate":"2017-05-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":51,"author":{"gitId":"RSXIX"},"content":"        assertThrows(ParseException.class, Messages.MESSAGE_IMPOSSIBLE_INDEX, ()","lastModifiedDate":"2023-10-17"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":55,"author":{"gitId":"RSXIX"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":56,"author":{"gitId":"RSXIX"},"content":"    public void parseIndex_missingInput_throwsParseException() {","lastModifiedDate":"2023-10-17"},{"lineNumber":57,"author":{"gitId":"RSXIX"},"content":"        assertThrows(ParseException.class, Messages.MESSAGE_MISSING_INDEX, ()","lastModifiedDate":"2023-10-17"},{"lineNumber":58,"author":{"gitId":"RSXIX"},"content":"                -\u003e ParserUtil.parseIndex(\"\"));","lastModifiedDate":"2023-10-17"},{"lineNumber":59,"author":{"gitId":"RSXIX"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":60,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2017-05-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2017-05-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2019-03-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public void parsePhone_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE));","lastModifiedDate":"2019-03-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_PHONE));","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-30"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public void parseAddress_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseAddress((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public void parseAddress_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseAddress(INVALID_ADDRESS));","lastModifiedDate":"2019-03-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithoutWhitespace_returnsAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-22"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(VALID_ADDRESS));","lastModifiedDate":"2017-05-30"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithWhitespace_returnsTrimmedAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        String addressWithWhitespace \u003d WHITESPACE + VALID_ADDRESS + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-30"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(addressWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public void parseEmail_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEmail((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public void parseEmail_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(INVALID_EMAIL));","lastModifiedDate":"2019-03-14"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-22"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(VALID_EMAIL));","lastModifiedDate":"2017-05-30"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        String emailWithWhitespace \u003d WHITESPACE + VALID_EMAIL + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-30"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(emailWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    public void parseTag_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTag(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    public void parseTag_invalidValue_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(INVALID_TAG));","lastModifiedDate":"2019-03-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(VALID_TAG_1));","lastModifiedDate":"2017-05-30"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        String tagWithWhitespace \u003d WHITESPACE + VALID_TAG_1 + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(tagWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    public void parseTags_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTags(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithInvalidTags_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, INVALID_TAG)));","lastModifiedDate":"2019-03-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    public void parseTags_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        assertTrue(ParserUtil.parseTags(Collections.emptyList()).isEmpty());","lastModifiedDate":"2017-05-22"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithValidTags_returnsTagSet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e actualTagSet \u003d ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, VALID_TAG_2));","lastModifiedDate":"2017-05-22"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e expectedTagSet \u003d new HashSet\u003cTag\u003e(Arrays.asList(new Tag(VALID_TAG_1), new Tag(VALID_TAG_2)));","lastModifiedDate":"2017-05-22"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        assertEquals(expectedTagSet, actualTagSet);","lastModifiedDate":"2017-05-22"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":207,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":208,"author":{"gitId":"KumChaiYin"},"content":"    @Test","lastModifiedDate":"2023-11-13"},{"lineNumber":209,"author":{"gitId":"KumChaiYin"},"content":"    public void parseNric_null_throwsNullPointerException() {","lastModifiedDate":"2023-11-13"},{"lineNumber":210,"author":{"gitId":"KumChaiYin"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseNric((String) null));","lastModifiedDate":"2023-11-13"},{"lineNumber":211,"author":{"gitId":"KumChaiYin"},"content":"    }","lastModifiedDate":"2023-11-13"},{"lineNumber":212,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":213,"author":{"gitId":"KumChaiYin"},"content":"    @Test","lastModifiedDate":"2023-11-13"},{"lineNumber":214,"author":{"gitId":"KumChaiYin"},"content":"    public void parseNric_invalidNric_throwsParseException() {","lastModifiedDate":"2023-11-13"},{"lineNumber":215,"author":{"gitId":"KumChaiYin"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseNric(INVALID_NRIC));","lastModifiedDate":"2023-11-13"},{"lineNumber":216,"author":{"gitId":"KumChaiYin"},"content":"    }","lastModifiedDate":"2023-11-13"},{"lineNumber":217,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":218,"author":{"gitId":"KumChaiYin"},"content":"    @Test","lastModifiedDate":"2023-11-13"},{"lineNumber":219,"author":{"gitId":"KumChaiYin"},"content":"    public void parseLicencePlate_invalid_throwsParseException() {","lastModifiedDate":"2023-11-13"},{"lineNumber":220,"author":{"gitId":"KumChaiYin"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseLicencePlate(INVALID_LICENCE_PLATE));","lastModifiedDate":"2023-11-13"},{"lineNumber":221,"author":{"gitId":"KumChaiYin"},"content":"    }","lastModifiedDate":"2023-11-13"},{"lineNumber":222,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":223,"author":{"gitId":"KumChaiYin"},"content":"    @Test","lastModifiedDate":"2023-11-13"},{"lineNumber":224,"author":{"gitId":"KumChaiYin"},"content":"    public void parsePolicyNumber_invalidPolicyNumber_throwsParseException() {","lastModifiedDate":"2023-11-13"},{"lineNumber":225,"author":{"gitId":"KumChaiYin"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePolicyNumber(INVALID_POLICY_NUMBER));","lastModifiedDate":"2023-11-13"},{"lineNumber":226,"author":{"gitId":"KumChaiYin"},"content":"    }","lastModifiedDate":"2023-11-13"},{"lineNumber":227,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":228,"author":{"gitId":"KumChaiYin"},"content":"    @Test","lastModifiedDate":"2023-11-13"},{"lineNumber":229,"author":{"gitId":"KumChaiYin"},"content":"    public void parsePolicyIssueDate_invalidPolicyIssueDate_throwsParseException() {","lastModifiedDate":"2023-11-13"},{"lineNumber":230,"author":{"gitId":"KumChaiYin"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePolicyIssueDate(INVALID_POLICY_DATE));","lastModifiedDate":"2023-11-13"},{"lineNumber":231,"author":{"gitId":"KumChaiYin"},"content":"    }","lastModifiedDate":"2023-11-13"},{"lineNumber":232,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":233,"author":{"gitId":"KumChaiYin"},"content":"    @Test","lastModifiedDate":"2023-11-13"},{"lineNumber":234,"author":{"gitId":"KumChaiYin"},"content":"    public void parsePolicyExpiryDate_invalidPolicyExpiryDate_throwsParseException() {","lastModifiedDate":"2023-11-13"},{"lineNumber":235,"author":{"gitId":"KumChaiYin"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePolicyExpiryDate(INVALID_POLICY_DATE));","lastModifiedDate":"2023-11-13"},{"lineNumber":236,"author":{"gitId":"KumChaiYin"},"content":"    }","lastModifiedDate":"2023-11-13"},{"lineNumber":237,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":238,"author":{"gitId":"KumChaiYin"},"content":"    @Test","lastModifiedDate":"2023-11-13"},{"lineNumber":239,"author":{"gitId":"KumChaiYin"},"content":"    public void parseCompany_invalidCompany_throwsParseException() {","lastModifiedDate":"2023-11-13"},{"lineNumber":240,"author":{"gitId":"KumChaiYin"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseCompany(INVALID_COMPANY));","lastModifiedDate":"2023-11-13"},{"lineNumber":241,"author":{"gitId":"KumChaiYin"},"content":"    }","lastModifiedDate":"2023-11-13"},{"lineNumber":242,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"RSXIX":8,"KumChaiYin":40,"-":192,"cyaoxuan":2}},{"path":"src/test/java/seedu/address/logic/parser/RemarkCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"brendanneojw"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-11-13"},{"lineNumber":2,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":3,"author":{"gitId":"brendanneojw"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-11-13"},{"lineNumber":4,"author":{"gitId":"brendanneojw"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-11-13"},{"lineNumber":5,"author":{"gitId":"brendanneojw"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-11-13"},{"lineNumber":6,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":7,"author":{"gitId":"brendanneojw"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-11-13"},{"lineNumber":8,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":9,"author":{"gitId":"brendanneojw"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-11-13"},{"lineNumber":10,"author":{"gitId":"brendanneojw"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-11-13"},{"lineNumber":11,"author":{"gitId":"brendanneojw"},"content":"import seedu.address.logic.commands.RemarkCommand;","lastModifiedDate":"2023-11-13"},{"lineNumber":12,"author":{"gitId":"brendanneojw"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2023-11-13"},{"lineNumber":13,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":14,"author":{"gitId":"brendanneojw"},"content":"public class RemarkCommandParserTest {","lastModifiedDate":"2023-11-13"},{"lineNumber":15,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":16,"author":{"gitId":"brendanneojw"},"content":"    private RemarkCommandParser parser \u003d new RemarkCommandParser();","lastModifiedDate":"2023-11-13"},{"lineNumber":17,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":18,"author":{"gitId":"brendanneojw"},"content":"    @Test","lastModifiedDate":"2023-11-13"},{"lineNumber":19,"author":{"gitId":"brendanneojw"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2023-11-13"},{"lineNumber":20,"author":{"gitId":"brendanneojw"},"content":"        assertParseFailure(parser, \"     \",","lastModifiedDate":"2023-11-13"},{"lineNumber":21,"author":{"gitId":"brendanneojw"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, RemarkCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-11-13"},{"lineNumber":22,"author":{"gitId":"brendanneojw"},"content":"    }","lastModifiedDate":"2023-11-13"},{"lineNumber":23,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":24,"author":{"gitId":"brendanneojw"},"content":"    @Test","lastModifiedDate":"2023-11-13"},{"lineNumber":25,"author":{"gitId":"brendanneojw"},"content":"    public void parse_argsPreambleIllegalValue_throwsParseException() {","lastModifiedDate":"2023-11-13"},{"lineNumber":26,"author":{"gitId":"brendanneojw"},"content":"        assertParseFailure(parser, \" abc r/Likes to Swim\", String.format(","lastModifiedDate":"2023-11-13"},{"lineNumber":27,"author":{"gitId":"brendanneojw"},"content":"                MESSAGE_INVALID_COMMAND_FORMAT, RemarkCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-11-13"},{"lineNumber":28,"author":{"gitId":"brendanneojw"},"content":"        assertParseFailure(parser, \" -1 r/Likes to Swim\", String.format(","lastModifiedDate":"2023-11-13"},{"lineNumber":29,"author":{"gitId":"brendanneojw"},"content":"                MESSAGE_INVALID_COMMAND_FORMAT, RemarkCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-11-13"},{"lineNumber":30,"author":{"gitId":"brendanneojw"},"content":"    }","lastModifiedDate":"2023-11-13"},{"lineNumber":31,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":32,"author":{"gitId":"brendanneojw"},"content":"    @Test","lastModifiedDate":"2023-11-13"},{"lineNumber":33,"author":{"gitId":"brendanneojw"},"content":"    public void parse_argsDuplicatePrefix_throwsParseException() {","lastModifiedDate":"2023-11-13"},{"lineNumber":34,"author":{"gitId":"brendanneojw"},"content":"        assertParseFailure(parser, \" 1 r/Likes to swim r/Likes cooking\",","lastModifiedDate":"2023-11-13"},{"lineNumber":35,"author":{"gitId":"brendanneojw"},"content":"                Messages.MESSAGE_DUPLICATE_FIELDS + \"r/\");","lastModifiedDate":"2023-11-13"},{"lineNumber":36,"author":{"gitId":"brendanneojw"},"content":"    }","lastModifiedDate":"2023-11-13"},{"lineNumber":37,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":38,"author":{"gitId":"brendanneojw"},"content":"    @Test","lastModifiedDate":"2023-11-13"},{"lineNumber":39,"author":{"gitId":"brendanneojw"},"content":"    public void parse_validArgs_returnsRemarkCommand() {","lastModifiedDate":"2023-11-13"},{"lineNumber":40,"author":{"gitId":"brendanneojw"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2023-11-13"},{"lineNumber":41,"author":{"gitId":"brendanneojw"},"content":"        RemarkCommand expectedRemarkCommand \u003d new RemarkCommand(Index.fromOneBased(1), new Remark(\"Likes to swim\"));","lastModifiedDate":"2023-11-13"},{"lineNumber":42,"author":{"gitId":"brendanneojw"},"content":"        assertParseSuccess(parser, \" 1 r/Likes to swim\", expectedRemarkCommand);","lastModifiedDate":"2023-11-13"},{"lineNumber":43,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":44,"author":{"gitId":"brendanneojw"},"content":"        // empty remark","lastModifiedDate":"2023-11-13"},{"lineNumber":45,"author":{"gitId":"brendanneojw"},"content":"        expectedRemarkCommand \u003d new RemarkCommand(Index.fromOneBased(1), new Remark(\"\"));","lastModifiedDate":"2023-11-13"},{"lineNumber":46,"author":{"gitId":"brendanneojw"},"content":"        assertParseSuccess(parser, \" 1 r/\", expectedRemarkCommand);","lastModifiedDate":"2023-11-13"},{"lineNumber":47,"author":{"gitId":"brendanneojw"},"content":"    }","lastModifiedDate":"2023-11-13"},{"lineNumber":48,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":49,"author":{"gitId":"brendanneojw"},"content":"}","lastModifiedDate":"2023-11-13"}],"authorContributionMap":{"brendanneojw":49}},{"path":"src/test/java/seedu/address/logic/parser/RemindCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"brendanneojw"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-11-12"},{"lineNumber":2,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":3,"author":{"gitId":"brendanneojw"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-11-12"},{"lineNumber":4,"author":{"gitId":"brendanneojw"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-11-12"},{"lineNumber":5,"author":{"gitId":"brendanneojw"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-11-12"},{"lineNumber":6,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":7,"author":{"gitId":"brendanneojw"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-11-12"},{"lineNumber":8,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":9,"author":{"gitId":"brendanneojw"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-11-12"},{"lineNumber":10,"author":{"gitId":"brendanneojw"},"content":"import seedu.address.logic.commands.RemindCommand;","lastModifiedDate":"2023-11-12"},{"lineNumber":11,"author":{"gitId":"brendanneojw"},"content":"import seedu.address.model.person.predicates.RemindPredicate;","lastModifiedDate":"2023-11-12"},{"lineNumber":12,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":13,"author":{"gitId":"brendanneojw"},"content":"public class RemindCommandParserTest {","lastModifiedDate":"2023-11-12"},{"lineNumber":14,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":15,"author":{"gitId":"brendanneojw"},"content":"    private RemindCommandParser parser \u003d new RemindCommandParser();","lastModifiedDate":"2023-11-12"},{"lineNumber":16,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":17,"author":{"gitId":"brendanneojw"},"content":"    @Test","lastModifiedDate":"2023-11-12"},{"lineNumber":18,"author":{"gitId":"brendanneojw"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2023-11-12"},{"lineNumber":19,"author":{"gitId":"brendanneojw"},"content":"        assertParseFailure(parser, \"     \", String.format(","lastModifiedDate":"2023-11-12"},{"lineNumber":20,"author":{"gitId":"brendanneojw"},"content":"                MESSAGE_INVALID_COMMAND_FORMAT, RemindCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-11-12"},{"lineNumber":21,"author":{"gitId":"brendanneojw"},"content":"    }","lastModifiedDate":"2023-11-12"},{"lineNumber":22,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":23,"author":{"gitId":"brendanneojw"},"content":"    @Test","lastModifiedDate":"2023-11-12"},{"lineNumber":24,"author":{"gitId":"brendanneojw"},"content":"    public void parse_argsNotNumbers_throwsParseException() {","lastModifiedDate":"2023-11-12"},{"lineNumber":25,"author":{"gitId":"brendanneojw"},"content":"        assertParseFailure(parser, \" abcd\", String.format(","lastModifiedDate":"2023-11-12"},{"lineNumber":26,"author":{"gitId":"brendanneojw"},"content":"                MESSAGE_INVALID_COMMAND_FORMAT, Messages.MESSAGE_NOT_NUMBERS));","lastModifiedDate":"2023-11-12"},{"lineNumber":27,"author":{"gitId":"brendanneojw"},"content":"    }","lastModifiedDate":"2023-11-12"},{"lineNumber":28,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":29,"author":{"gitId":"brendanneojw"},"content":"    @Test","lastModifiedDate":"2023-11-12"},{"lineNumber":30,"author":{"gitId":"brendanneojw"},"content":"    public void parse_argsNotInRange_throwsParseException() {","lastModifiedDate":"2023-11-12"},{"lineNumber":31,"author":{"gitId":"brendanneojw"},"content":"        assertParseFailure(parser, \" -1\", String.format(Messages.MESSAGE_NOT_IN_RANGE, 0, 7305));","lastModifiedDate":"2023-11-12"},{"lineNumber":32,"author":{"gitId":"brendanneojw"},"content":"        assertParseFailure(parser, \" 8000\", String.format(Messages.MESSAGE_NOT_IN_RANGE, 0, 7305));","lastModifiedDate":"2023-11-12"},{"lineNumber":33,"author":{"gitId":"brendanneojw"},"content":"    }","lastModifiedDate":"2023-11-12"},{"lineNumber":34,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":35,"author":{"gitId":"brendanneojw"},"content":"    @Test","lastModifiedDate":"2023-11-12"},{"lineNumber":36,"author":{"gitId":"brendanneojw"},"content":"    public void parse_validArgs_returnsRemindCommand() {","lastModifiedDate":"2023-11-12"},{"lineNumber":37,"author":{"gitId":"brendanneojw"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2023-11-12"},{"lineNumber":38,"author":{"gitId":"brendanneojw"},"content":"        RemindCommand expectedRemindCommand \u003d new RemindCommand(new RemindPredicate(30));","lastModifiedDate":"2023-11-12"},{"lineNumber":39,"author":{"gitId":"brendanneojw"},"content":"        assertParseSuccess(parser, \" 30\", expectedRemindCommand);","lastModifiedDate":"2023-11-12"},{"lineNumber":40,"author":{"gitId":"brendanneojw"},"content":"    }","lastModifiedDate":"2023-11-12"},{"lineNumber":41,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":42,"author":{"gitId":"brendanneojw"},"content":"}","lastModifiedDate":"2023-11-12"}],"authorContributionMap":{"brendanneojw":42}},{"path":"src/test/java/seedu/address/logic/parser/SortCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"RSXIX"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-11-13"},{"lineNumber":2,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":3,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":4,"author":{"gitId":"RSXIX"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-11-13"},{"lineNumber":5,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":6,"author":{"gitId":"RSXIX"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-11-13"},{"lineNumber":7,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":8,"author":{"gitId":"RSXIX"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2023-11-13"},{"lineNumber":9,"author":{"gitId":"RSXIX"},"content":"import seedu.address.logic.commands.SortCommand;","lastModifiedDate":"2023-11-13"},{"lineNumber":10,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":11,"author":{"gitId":"RSXIX"},"content":"public class SortCommandParserTest {","lastModifiedDate":"2023-11-13"},{"lineNumber":12,"author":{"gitId":"RSXIX"},"content":"    private final SortCommandParser parser \u003d new SortCommandParser();","lastModifiedDate":"2023-11-13"},{"lineNumber":13,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":14,"author":{"gitId":"RSXIX"},"content":"    @Test","lastModifiedDate":"2023-11-13"},{"lineNumber":15,"author":{"gitId":"RSXIX"},"content":"    public void parse_validArgs_returnsSortCommand() {","lastModifiedDate":"2023-11-13"},{"lineNumber":16,"author":{"gitId":"RSXIX"},"content":"        Command expectedSortCommand \u003d new SortCommand();","lastModifiedDate":"2023-11-13"},{"lineNumber":17,"author":{"gitId":"RSXIX"},"content":"        Command parsedCommand \u003d parser.parse(\"\");","lastModifiedDate":"2023-11-13"},{"lineNumber":18,"author":{"gitId":"RSXIX"},"content":"        if (!parsedCommand.getClass().equals(expectedSortCommand.getClass())) {","lastModifiedDate":"2023-11-13"},{"lineNumber":19,"author":{"gitId":"RSXIX"},"content":"            assertTrue(1 \u003d\u003d 2);","lastModifiedDate":"2023-11-13"},{"lineNumber":20,"author":{"gitId":"RSXIX"},"content":"        }","lastModifiedDate":"2023-11-13"},{"lineNumber":21,"author":{"gitId":"RSXIX"},"content":"        assertTrue(2 \u003d\u003d 2);","lastModifiedDate":"2023-11-13"},{"lineNumber":22,"author":{"gitId":"RSXIX"},"content":"    }","lastModifiedDate":"2023-11-13"},{"lineNumber":23,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":24,"author":{"gitId":"RSXIX"},"content":"}","lastModifiedDate":"2023-11-13"}],"authorContributionMap":{"RSXIX":24}},{"path":"src/test/java/seedu/address/model/AddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-12-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"RSXIX"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2023-10-22"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-04-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-04-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class AddressBookTest {","lastModifiedDate":"2016-12-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), addressBook.getPersonList());","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.resetData(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void resetData_withValidReadOnlyAddressBook_replacesData() {","lastModifiedDate":"2016-12-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        AddressBook newData \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        addressBook.resetData(newData);","lastModifiedDate":"2016-12-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(newData, addressBook);","lastModifiedDate":"2016-12-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":47,"author":{"gitId":"RSXIX"},"content":"    public void resetData_withDuplicatePersons_success() {","lastModifiedDate":"2023-10-22"},{"lineNumber":48,"author":{"gitId":"RSXIX"},"content":"        // Two persons with the same name","lastModifiedDate":"2023-10-22"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-04-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-04-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e newPersons \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        AddressBookStub newData \u003d new AddressBookStub(newPersons);","lastModifiedDate":"2018-03-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":54,"author":{"gitId":"RSXIX"},"content":"        assertDoesNotThrow(() -\u003e addressBook.resetData(newData));","lastModifiedDate":"2023-10-22"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertFalse(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"RSXIX"},"content":"    public void hasPerson_personWithSameIdentityFieldsInAddressBook_returnsFalse() {","lastModifiedDate":"2023-10-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"RSXIX"},"content":"        assertFalse(addressBook.hasPerson(editedAlice));","lastModifiedDate":"2023-10-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void getPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e addressBook.getPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        String expected \u003d AddressBook.class.getCanonicalName() + \"{persons\u003d\" + addressBook.getPersonList() + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertEquals(expected, addressBook.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * A stub ReadOnlyAddressBook whose persons list can violate interface constraints.","lastModifiedDate":"2018-03-29"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    private static class AddressBookStub implements ReadOnlyAddressBook {","lastModifiedDate":"2016-12-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        private final ObservableList\u003cPerson\u003e persons \u003d FXCollections.observableArrayList();","lastModifiedDate":"2018-01-10"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        AddressBookStub(Collection\u003cPerson\u003e persons) {","lastModifiedDate":"2018-03-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            this.persons.setAll(persons);","lastModifiedDate":"2016-12-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            return persons;","lastModifiedDate":"2016-12-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"RSXIX":6,"-":102}},{"path":"src/test/java/seedu/address/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2017-05-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"brendanneojw"},"content":"import seedu.address.model.person.predicates.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-11-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.testutil.AddressBookBuilder;","lastModifiedDate":"2017-05-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(new AddressBook(), new AddressBook(modelManager.getAddressBook()));","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2018-12-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setAddressBookFilePath(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_validPath_setsAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        modelManager.setAddressBookFilePath(path);","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertEquals(path, modelManager.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        modelManager.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBookBuilder().withPerson(ALICE).withPerson(BENSON).build();","lastModifiedDate":"2017-07-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        AddressBook differentAddressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        modelManager \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2018-08-06"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2017-05-31"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // different addressBook -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentAddressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":119,"author":{"gitId":"brendanneojw"},"content":"        String keywords \u003d ALICE.getName().fullName;","lastModifiedDate":"2023-10-18"},{"lineNumber":120,"author":{"gitId":"brendanneojw"},"content":"        modelManager.updateFilteredPersonList(new NameContainsKeywordsPredicate(keywords));","lastModifiedDate":"2023-10-18"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        differentUserPrefs.setAddressBookFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2018-08-09"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, differentUserPrefs)));","lastModifiedDate":"2018-11-27"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"brendanneojw":3,"-":128}},{"path":"src/test/java/seedu/address/model/month/DeleteMonthTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"KumChaiYin"},"content":"package seedu.address.model.month;","lastModifiedDate":"2023-11-13"},{"lineNumber":2,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":3,"author":{"gitId":"KumChaiYin"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-11-13"},{"lineNumber":4,"author":{"gitId":"KumChaiYin"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-11-13"},{"lineNumber":5,"author":{"gitId":"KumChaiYin"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-11-13"},{"lineNumber":6,"author":{"gitId":"KumChaiYin"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_DELETE_MONTH;","lastModifiedDate":"2023-11-13"},{"lineNumber":7,"author":{"gitId":"KumChaiYin"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DELETE_MONTH;","lastModifiedDate":"2023-11-13"},{"lineNumber":8,"author":{"gitId":"KumChaiYin"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DELETE_MONTH_2;","lastModifiedDate":"2023-11-13"},{"lineNumber":9,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":10,"author":{"gitId":"KumChaiYin"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-11-13"},{"lineNumber":11,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":12,"author":{"gitId":"KumChaiYin"},"content":"public class DeleteMonthTest {","lastModifiedDate":"2023-11-13"},{"lineNumber":13,"author":{"gitId":"KumChaiYin"},"content":"    @Test","lastModifiedDate":"2023-11-13"},{"lineNumber":14,"author":{"gitId":"KumChaiYin"},"content":"    public void isValidDeleteMonth() {","lastModifiedDate":"2023-11-13"},{"lineNumber":15,"author":{"gitId":"KumChaiYin"},"content":"        assertFalse(DeleteMonth.isValidDeleteMonth(INVALID_DELETE_MONTH));","lastModifiedDate":"2023-11-13"},{"lineNumber":16,"author":{"gitId":"KumChaiYin"},"content":"    }","lastModifiedDate":"2023-11-13"},{"lineNumber":17,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":18,"author":{"gitId":"KumChaiYin"},"content":"    @Test","lastModifiedDate":"2023-11-13"},{"lineNumber":19,"author":{"gitId":"KumChaiYin"},"content":"    public void equals() {","lastModifiedDate":"2023-11-13"},{"lineNumber":20,"author":{"gitId":"KumChaiYin"},"content":"        DeleteMonth month1 \u003d new DeleteMonth(VALID_DELETE_MONTH);","lastModifiedDate":"2023-11-13"},{"lineNumber":21,"author":{"gitId":"KumChaiYin"},"content":"        DeleteMonth sameAsMonth1 \u003d new DeleteMonth(VALID_DELETE_MONTH);","lastModifiedDate":"2023-11-13"},{"lineNumber":22,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":23,"author":{"gitId":"KumChaiYin"},"content":"        assertTrue(month1.equals(month1));","lastModifiedDate":"2023-11-13"},{"lineNumber":24,"author":{"gitId":"KumChaiYin"},"content":"        assertTrue(month1.equals(sameAsMonth1));","lastModifiedDate":"2023-11-13"},{"lineNumber":25,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":26,"author":{"gitId":"KumChaiYin"},"content":"        DeleteMonth month2 \u003d new DeleteMonth(VALID_DELETE_MONTH_2);","lastModifiedDate":"2023-11-13"},{"lineNumber":27,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":28,"author":{"gitId":"KumChaiYin"},"content":"        assertFalse(month1.equals(null));","lastModifiedDate":"2023-11-13"},{"lineNumber":29,"author":{"gitId":"KumChaiYin"},"content":"        assertFalse(month1.equals(month2));","lastModifiedDate":"2023-11-13"},{"lineNumber":30,"author":{"gitId":"KumChaiYin"},"content":"    }","lastModifiedDate":"2023-11-13"},{"lineNumber":31,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":32,"author":{"gitId":"KumChaiYin"},"content":"    @Test","lastModifiedDate":"2023-11-13"},{"lineNumber":33,"author":{"gitId":"KumChaiYin"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-11-13"},{"lineNumber":34,"author":{"gitId":"KumChaiYin"},"content":"        DeleteMonth month \u003d new DeleteMonth(VALID_DELETE_MONTH);","lastModifiedDate":"2023-11-13"},{"lineNumber":35,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":36,"author":{"gitId":"KumChaiYin"},"content":"        assertEquals(VALID_DELETE_MONTH, month.toString());","lastModifiedDate":"2023-11-13"},{"lineNumber":37,"author":{"gitId":"KumChaiYin"},"content":"    }","lastModifiedDate":"2023-11-13"},{"lineNumber":38,"author":{"gitId":"KumChaiYin"},"content":"}","lastModifiedDate":"2023-11-13"}],"authorContributionMap":{"KumChaiYin":38}},{"path":"src/test/java/seedu/address/model/person/LicencePlateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cyaoxuan"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-11-11"},{"lineNumber":2,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":3,"author":{"gitId":"cyaoxuan"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-11-11"},{"lineNumber":4,"author":{"gitId":"cyaoxuan"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-11-11"},{"lineNumber":5,"author":{"gitId":"cyaoxuan"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-11-11"},{"lineNumber":6,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":7,"author":{"gitId":"cyaoxuan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-11-11"},{"lineNumber":8,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":9,"author":{"gitId":"cyaoxuan"},"content":"public class LicencePlateTest {","lastModifiedDate":"2023-11-11"},{"lineNumber":10,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":11,"author":{"gitId":"cyaoxuan"},"content":"    @Test","lastModifiedDate":"2023-11-11"},{"lineNumber":12,"author":{"gitId":"cyaoxuan"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-11-11"},{"lineNumber":13,"author":{"gitId":"cyaoxuan"},"content":"        assertThrows(NullPointerException.class, () -\u003e new LicencePlate(null));","lastModifiedDate":"2023-11-11"},{"lineNumber":14,"author":{"gitId":"cyaoxuan"},"content":"    }","lastModifiedDate":"2023-11-11"},{"lineNumber":15,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":16,"author":{"gitId":"cyaoxuan"},"content":"    @Test","lastModifiedDate":"2023-11-11"},{"lineNumber":17,"author":{"gitId":"cyaoxuan"},"content":"    public void constructor_invalidLicencePlate_throwsIllegalArgumentException() {","lastModifiedDate":"2023-11-11"},{"lineNumber":18,"author":{"gitId":"cyaoxuan"},"content":"        String invalidLicencePlate \u003d \"\";","lastModifiedDate":"2023-11-11"},{"lineNumber":19,"author":{"gitId":"cyaoxuan"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new LicencePlate(invalidLicencePlate));","lastModifiedDate":"2023-11-11"},{"lineNumber":20,"author":{"gitId":"cyaoxuan"},"content":"    }","lastModifiedDate":"2023-11-11"},{"lineNumber":21,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":22,"author":{"gitId":"cyaoxuan"},"content":"    @Test","lastModifiedDate":"2023-11-11"},{"lineNumber":23,"author":{"gitId":"cyaoxuan"},"content":"    public void isValidLicencePlate() {","lastModifiedDate":"2023-11-11"},{"lineNumber":24,"author":{"gitId":"cyaoxuan"},"content":"        // null licence plate","lastModifiedDate":"2023-11-11"},{"lineNumber":25,"author":{"gitId":"cyaoxuan"},"content":"        assertThrows(NullPointerException.class, () -\u003e LicencePlate.isValidLicencePlate(null));","lastModifiedDate":"2023-11-11"},{"lineNumber":26,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":27,"author":{"gitId":"cyaoxuan"},"content":"        // invalid licence plate","lastModifiedDate":"2023-11-11"},{"lineNumber":28,"author":{"gitId":"cyaoxuan"},"content":"        assertFalse(LicencePlate.isValidLicencePlate(\"\")); // empty string","lastModifiedDate":"2023-11-11"},{"lineNumber":29,"author":{"gitId":"cyaoxuan"},"content":"        assertFalse(LicencePlate.isValidLicencePlate(\" \")); // spaces only","lastModifiedDate":"2023-11-11"},{"lineNumber":30,"author":{"gitId":"cyaoxuan"},"content":"        assertFalse(LicencePlate.isValidLicencePlate(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2023-11-11"},{"lineNumber":31,"author":{"gitId":"cyaoxuan"},"content":"        assertFalse(LicencePlate.isValidLicencePlate(\"SSS1234A*\")); // contains non-alphanumeric characters","lastModifiedDate":"2023-11-11"},{"lineNumber":32,"author":{"gitId":"cyaoxuan"},"content":"        assertFalse(LicencePlate.isValidLicencePlate(\"ABC1234A\")); // does not start with S","lastModifiedDate":"2023-11-11"},{"lineNumber":33,"author":{"gitId":"cyaoxuan"},"content":"        assertFalse(LicencePlate.isValidLicencePlate(\"SIA1234A\")); // contains forbidden letters","lastModifiedDate":"2023-11-11"},{"lineNumber":34,"author":{"gitId":"cyaoxuan"},"content":"        assertFalse(LicencePlate.isValidLicencePlate(\"SSS12345A\")); // more numbers than allowed","lastModifiedDate":"2023-11-11"},{"lineNumber":35,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":36,"author":{"gitId":"cyaoxuan"},"content":"        // valid licence plate","lastModifiedDate":"2023-11-11"},{"lineNumber":37,"author":{"gitId":"cyaoxuan"},"content":"        assertTrue(LicencePlate.isValidLicencePlate(\"SFZ1A\")); // all capital letters, minimum length","lastModifiedDate":"2023-11-11"},{"lineNumber":38,"author":{"gitId":"cyaoxuan"},"content":"        assertTrue(LicencePlate.isValidLicencePlate(\"sfz1a\")); // with small letters","lastModifiedDate":"2023-11-11"},{"lineNumber":39,"author":{"gitId":"cyaoxuan"},"content":"        assertTrue(LicencePlate.isValidLicencePlate(\"SSS1234S\")); // maximum length","lastModifiedDate":"2023-11-11"},{"lineNumber":40,"author":{"gitId":"cyaoxuan"},"content":"    }","lastModifiedDate":"2023-11-11"},{"lineNumber":41,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":42,"author":{"gitId":"cyaoxuan"},"content":"    @Test","lastModifiedDate":"2023-11-11"},{"lineNumber":43,"author":{"gitId":"cyaoxuan"},"content":"    public void equals() {","lastModifiedDate":"2023-11-11"},{"lineNumber":44,"author":{"gitId":"cyaoxuan"},"content":"        LicencePlate licencePlate \u003d new LicencePlate(\"SFZ1A\");","lastModifiedDate":"2023-11-11"},{"lineNumber":45,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":46,"author":{"gitId":"cyaoxuan"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-11-11"},{"lineNumber":47,"author":{"gitId":"cyaoxuan"},"content":"        assertTrue(licencePlate.equals(new LicencePlate(\"SFZ1A\")));","lastModifiedDate":"2023-11-11"},{"lineNumber":48,"author":{"gitId":"cyaoxuan"},"content":"        assertTrue(licencePlate.equals(new LicencePlate(\"sfz1a\")));","lastModifiedDate":"2023-11-11"},{"lineNumber":49,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":50,"author":{"gitId":"cyaoxuan"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-11-11"},{"lineNumber":51,"author":{"gitId":"cyaoxuan"},"content":"        assertTrue(licencePlate.equals(licencePlate));","lastModifiedDate":"2023-11-11"},{"lineNumber":52,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":53,"author":{"gitId":"cyaoxuan"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-11-11"},{"lineNumber":54,"author":{"gitId":"cyaoxuan"},"content":"        assertFalse(licencePlate.equals(null));","lastModifiedDate":"2023-11-11"},{"lineNumber":55,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":56,"author":{"gitId":"cyaoxuan"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-11-11"},{"lineNumber":57,"author":{"gitId":"cyaoxuan"},"content":"        assertFalse(licencePlate.equals(5.0f));","lastModifiedDate":"2023-11-11"},{"lineNumber":58,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":59,"author":{"gitId":"cyaoxuan"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2023-11-11"},{"lineNumber":60,"author":{"gitId":"cyaoxuan"},"content":"        assertFalse(licencePlate.equals(new LicencePlate(\"SFZ2A\")));","lastModifiedDate":"2023-11-11"},{"lineNumber":61,"author":{"gitId":"cyaoxuan"},"content":"    }","lastModifiedDate":"2023-11-11"},{"lineNumber":62,"author":{"gitId":"cyaoxuan"},"content":"}","lastModifiedDate":"2023-11-11"}],"authorContributionMap":{"cyaoxuan":62}},{"path":"src/test/java/seedu/address/model/person/NricTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cyaoxuan"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-11-11"},{"lineNumber":2,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":3,"author":{"gitId":"cyaoxuan"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-11-11"},{"lineNumber":4,"author":{"gitId":"cyaoxuan"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-11-11"},{"lineNumber":5,"author":{"gitId":"cyaoxuan"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-11-11"},{"lineNumber":6,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":7,"author":{"gitId":"cyaoxuan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-11-11"},{"lineNumber":8,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":9,"author":{"gitId":"cyaoxuan"},"content":"public class NricTest {","lastModifiedDate":"2023-11-11"},{"lineNumber":10,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":11,"author":{"gitId":"cyaoxuan"},"content":"    @Test","lastModifiedDate":"2023-11-11"},{"lineNumber":12,"author":{"gitId":"cyaoxuan"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-11-11"},{"lineNumber":13,"author":{"gitId":"cyaoxuan"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Nric(null));","lastModifiedDate":"2023-11-11"},{"lineNumber":14,"author":{"gitId":"cyaoxuan"},"content":"    }","lastModifiedDate":"2023-11-11"},{"lineNumber":15,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":16,"author":{"gitId":"cyaoxuan"},"content":"    @Test","lastModifiedDate":"2023-11-11"},{"lineNumber":17,"author":{"gitId":"cyaoxuan"},"content":"    public void constructor_invalidNric_throwsIllegalArgumentException() {","lastModifiedDate":"2023-11-11"},{"lineNumber":18,"author":{"gitId":"cyaoxuan"},"content":"        String invalidNric \u003d \"\";","lastModifiedDate":"2023-11-11"},{"lineNumber":19,"author":{"gitId":"cyaoxuan"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Nric(invalidNric));","lastModifiedDate":"2023-11-11"},{"lineNumber":20,"author":{"gitId":"cyaoxuan"},"content":"    }","lastModifiedDate":"2023-11-11"},{"lineNumber":21,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":22,"author":{"gitId":"cyaoxuan"},"content":"    @Test","lastModifiedDate":"2023-11-11"},{"lineNumber":23,"author":{"gitId":"cyaoxuan"},"content":"    public void isValidNric() {","lastModifiedDate":"2023-11-11"},{"lineNumber":24,"author":{"gitId":"cyaoxuan"},"content":"        // null nric","lastModifiedDate":"2023-11-11"},{"lineNumber":25,"author":{"gitId":"cyaoxuan"},"content":"        assertThrows(NullPointerException.class, () -\u003e Nric.isValidNric(null));","lastModifiedDate":"2023-11-11"},{"lineNumber":26,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":27,"author":{"gitId":"cyaoxuan"},"content":"        // invalid nric","lastModifiedDate":"2023-11-11"},{"lineNumber":28,"author":{"gitId":"cyaoxuan"},"content":"        assertFalse(Nric.isValidNric(\"\")); // empty string","lastModifiedDate":"2023-11-11"},{"lineNumber":29,"author":{"gitId":"cyaoxuan"},"content":"        assertFalse(Nric.isValidNric(\" \")); // spaces only","lastModifiedDate":"2023-11-11"},{"lineNumber":30,"author":{"gitId":"cyaoxuan"},"content":"        assertFalse(Nric.isValidNric(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2023-11-11"},{"lineNumber":31,"author":{"gitId":"cyaoxuan"},"content":"        assertFalse(Nric.isValidNric(\"123A*\")); // contains non-alphanumeric characters","lastModifiedDate":"2023-11-11"},{"lineNumber":32,"author":{"gitId":"cyaoxuan"},"content":"        assertFalse(Nric.isValidNric(\"1234A\")); // incorrect length","lastModifiedDate":"2023-11-11"},{"lineNumber":33,"author":{"gitId":"cyaoxuan"},"content":"        assertFalse(Nric.isValidNric(\"1234\")); // no letters","lastModifiedDate":"2023-11-11"},{"lineNumber":34,"author":{"gitId":"cyaoxuan"},"content":"        assertFalse(Nric.isValidNric(\"abcd\")); // no numbers","lastModifiedDate":"2023-11-11"},{"lineNumber":35,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":36,"author":{"gitId":"cyaoxuan"},"content":"        // valid nric","lastModifiedDate":"2023-11-11"},{"lineNumber":37,"author":{"gitId":"cyaoxuan"},"content":"        assertTrue(Nric.isValidNric(\"123A\")); // capital letter","lastModifiedDate":"2023-11-11"},{"lineNumber":38,"author":{"gitId":"cyaoxuan"},"content":"        assertTrue(Nric.isValidNric(\"123a\")); // small letter","lastModifiedDate":"2023-11-11"},{"lineNumber":39,"author":{"gitId":"cyaoxuan"},"content":"    }","lastModifiedDate":"2023-11-11"},{"lineNumber":40,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":41,"author":{"gitId":"cyaoxuan"},"content":"    @Test","lastModifiedDate":"2023-11-11"},{"lineNumber":42,"author":{"gitId":"cyaoxuan"},"content":"    public void equals() {","lastModifiedDate":"2023-11-11"},{"lineNumber":43,"author":{"gitId":"cyaoxuan"},"content":"        Nric nric \u003d new Nric(\"234B\");","lastModifiedDate":"2023-11-11"},{"lineNumber":44,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":45,"author":{"gitId":"cyaoxuan"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-11-11"},{"lineNumber":46,"author":{"gitId":"cyaoxuan"},"content":"        assertTrue(nric.equals(new Nric(\"234B\")));","lastModifiedDate":"2023-11-11"},{"lineNumber":47,"author":{"gitId":"cyaoxuan"},"content":"        assertTrue(nric.equals(new Nric(\"234b\")));","lastModifiedDate":"2023-11-11"},{"lineNumber":48,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":49,"author":{"gitId":"cyaoxuan"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-11-11"},{"lineNumber":50,"author":{"gitId":"cyaoxuan"},"content":"        assertTrue(nric.equals(nric));","lastModifiedDate":"2023-11-11"},{"lineNumber":51,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":52,"author":{"gitId":"cyaoxuan"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-11-11"},{"lineNumber":53,"author":{"gitId":"cyaoxuan"},"content":"        assertFalse(nric.equals(null));","lastModifiedDate":"2023-11-11"},{"lineNumber":54,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":55,"author":{"gitId":"cyaoxuan"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-11-11"},{"lineNumber":56,"author":{"gitId":"cyaoxuan"},"content":"        assertFalse(nric.equals(5.0f));","lastModifiedDate":"2023-11-11"},{"lineNumber":57,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":58,"author":{"gitId":"cyaoxuan"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2023-11-11"},{"lineNumber":59,"author":{"gitId":"cyaoxuan"},"content":"        assertFalse(nric.equals(new Nric(\"234C\")));","lastModifiedDate":"2023-11-11"},{"lineNumber":60,"author":{"gitId":"cyaoxuan"},"content":"    }","lastModifiedDate":"2023-11-11"},{"lineNumber":61,"author":{"gitId":"cyaoxuan"},"content":"}","lastModifiedDate":"2023-11-11"}],"authorContributionMap":{"cyaoxuan":61}},{"path":"src/test/java/seedu/address/model/person/PersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2018-03-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"cyaoxuan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_COMPANY_BOB;","lastModifiedDate":"2023-11-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":9,"author":{"gitId":"cyaoxuan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_LICENCE_PLATE_BOB;","lastModifiedDate":"2023-11-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":11,"author":{"gitId":"cyaoxuan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NRIC_BOB;","lastModifiedDate":"2023-11-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":13,"author":{"gitId":"cyaoxuan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_POLICY_EXPIRY_DATE_AMY;","lastModifiedDate":"2023-11-11"},{"lineNumber":14,"author":{"gitId":"cyaoxuan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_POLICY_ISSUE_DATE_AMY;","lastModifiedDate":"2023-11-11"},{"lineNumber":15,"author":{"gitId":"cyaoxuan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_POLICY_NO_AMY;","lastModifiedDate":"2023-11-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-04-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"RSXIX"},"content":"import seedu.address.model.policy.Company;","lastModifiedDate":"2023-11-13"},{"lineNumber":24,"author":{"gitId":"cyaoxuan"},"content":"import seedu.address.model.policy.Policy;","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"RSXIX"},"content":"import seedu.address.model.policy.PolicyDate;","lastModifiedDate":"2023-11-13"},{"lineNumber":26,"author":{"gitId":"RSXIX"},"content":"import seedu.address.model.policy.PolicyNumber;","lastModifiedDate":"2023-11-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-03-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class PersonTest {","lastModifiedDate":"2018-03-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2018-03-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e person.getTags().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void isSamePerson() {","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":45,"author":{"gitId":"RSXIX"},"content":"        // same name, all other attributes different -\u003e returns false","lastModifiedDate":"2023-10-22"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2020-12-18"},{"lineNumber":47,"author":{"gitId":"cyaoxuan"},"content":"                .withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND).withNric(VALID_NRIC_BOB)","lastModifiedDate":"2023-11-11"},{"lineNumber":48,"author":{"gitId":"cyaoxuan"},"content":"                .withLicencePlate(VALID_LICENCE_PLATE_BOB).build();","lastModifiedDate":"2023-11-11"},{"lineNumber":49,"author":{"gitId":"RSXIX"},"content":"        assertFalse(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2023-10-22"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        Person editedBob \u003d new PersonBuilder(BOB).withName(VALID_NAME_BOB.toLowerCase()).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2020-12-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_BOB + \" \";","lastModifiedDate":"2020-12-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        editedBob \u003d new PersonBuilder(BOB).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2020-12-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        Person aliceCopy \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2018-04-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2018-04-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-18"},{"lineNumber":102,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":103,"author":{"gitId":"cyaoxuan"},"content":"        // different nric -\u003e returns false","lastModifiedDate":"2023-11-11"},{"lineNumber":104,"author":{"gitId":"cyaoxuan"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withNric(VALID_NRIC_BOB).build();","lastModifiedDate":"2023-11-11"},{"lineNumber":105,"author":{"gitId":"cyaoxuan"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2023-11-11"},{"lineNumber":106,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":107,"author":{"gitId":"cyaoxuan"},"content":"        // different licence plate -\u003e returns false","lastModifiedDate":"2023-11-11"},{"lineNumber":108,"author":{"gitId":"cyaoxuan"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withLicencePlate(VALID_LICENCE_PLATE_BOB).build();","lastModifiedDate":"2023-11-11"},{"lineNumber":109,"author":{"gitId":"cyaoxuan"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2023-11-11"},{"lineNumber":110,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":111,"author":{"gitId":"cyaoxuan"},"content":"        // different policy -\u003e returns false","lastModifiedDate":"2023-11-11"},{"lineNumber":112,"author":{"gitId":"cyaoxuan"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withPolicy(VALID_COMPANY_BOB, VALID_POLICY_NO_AMY,","lastModifiedDate":"2023-11-11"},{"lineNumber":113,"author":{"gitId":"cyaoxuan"},"content":"                VALID_POLICY_ISSUE_DATE_AMY, VALID_POLICY_EXPIRY_DATE_AMY).build();","lastModifiedDate":"2023-11-11"},{"lineNumber":114,"author":{"gitId":"cyaoxuan"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2023-11-11"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        String expected \u003d Person.class.getCanonicalName() + \"{name\u003d\" + ALICE.getName() + \", phone\u003d\" + ALICE.getPhone()","lastModifiedDate":"2019-02-23"},{"lineNumber":120,"author":{"gitId":"cyaoxuan"},"content":"                + \", email\u003d\" + ALICE.getEmail() + \", address\u003d\" + ALICE.getAddress() + \", tags\u003d\" + ALICE.getTags()","lastModifiedDate":"2023-10-13"},{"lineNumber":121,"author":{"gitId":"cyaoxuan"},"content":"                + \", nric\u003d\" + ALICE.getNric() + \", licence plate\u003d\" + ALICE.getLicencePlate()","lastModifiedDate":"2023-11-01"},{"lineNumber":122,"author":{"gitId":"cyaoxuan"},"content":"                + \", remark\u003d\" + ALICE.getRemark() + \", policy\u003d\"","lastModifiedDate":"2023-11-01"},{"lineNumber":123,"author":{"gitId":"suryanshkushwaha"},"content":"                + Policy.class.getCanonicalName() + \"{company\u003d\" + ALICE.getPolicy().getCompany()","lastModifiedDate":"2023-10-23"},{"lineNumber":124,"author":{"gitId":"suryanshkushwaha"},"content":"                + \", policy number\u003d\" + ALICE.getPolicy().getPolicyNumber()","lastModifiedDate":"2023-10-23"},{"lineNumber":125,"author":{"gitId":"cyaoxuan"},"content":"                + \", policy issue date\u003d\" + ALICE.getPolicy().getPolicyIssueDate() + \", policy expiry date\u003d\"","lastModifiedDate":"2023-10-13"},{"lineNumber":126,"author":{"gitId":"cyaoxuan"},"content":"                + ALICE.getPolicy().getPolicyExpiryDate() + \"}}\";","lastModifiedDate":"2023-10-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertEquals(expected, ALICE.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":129,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":130,"author":{"gitId":"RSXIX"},"content":"    @Test","lastModifiedDate":"2023-11-13"},{"lineNumber":131,"author":{"gitId":"RSXIX"},"content":"    public void hasDefaultCompanyParameter_defaultPolicy_success() {","lastModifiedDate":"2023-11-13"},{"lineNumber":132,"author":{"gitId":"RSXIX"},"content":"        Policy defautltPolicy \u003d new Policy(new Company(Company.DEFAULT_VALUE),","lastModifiedDate":"2023-11-13"},{"lineNumber":133,"author":{"gitId":"RSXIX"},"content":"                new PolicyNumber(PolicyNumber.DEFAULT_VALUE),","lastModifiedDate":"2023-11-13"},{"lineNumber":134,"author":{"gitId":"RSXIX"},"content":"                new PolicyDate(PolicyDate.DEFAULT_VALUE),","lastModifiedDate":"2023-11-13"},{"lineNumber":135,"author":{"gitId":"RSXIX"},"content":"                new PolicyDate(PolicyDate.DEFAULT_VALUE));","lastModifiedDate":"2023-11-13"},{"lineNumber":136,"author":{"gitId":"RSXIX"},"content":"        Person defaultPerson \u003d new Person(ALICE.getName(),","lastModifiedDate":"2023-11-13"},{"lineNumber":137,"author":{"gitId":"RSXIX"},"content":"                ALICE.getPhone(),","lastModifiedDate":"2023-11-13"},{"lineNumber":138,"author":{"gitId":"RSXIX"},"content":"                ALICE.getEmail(),","lastModifiedDate":"2023-11-13"},{"lineNumber":139,"author":{"gitId":"RSXIX"},"content":"                ALICE.getAddress(),","lastModifiedDate":"2023-11-13"},{"lineNumber":140,"author":{"gitId":"RSXIX"},"content":"                ALICE.getTags(),","lastModifiedDate":"2023-11-13"},{"lineNumber":141,"author":{"gitId":"RSXIX"},"content":"                ALICE.getNric(),","lastModifiedDate":"2023-11-13"},{"lineNumber":142,"author":{"gitId":"RSXIX"},"content":"                ALICE.getLicencePlate(),","lastModifiedDate":"2023-11-13"},{"lineNumber":143,"author":{"gitId":"RSXIX"},"content":"                ALICE.getRemark(),","lastModifiedDate":"2023-11-13"},{"lineNumber":144,"author":{"gitId":"RSXIX"},"content":"                defautltPolicy);","lastModifiedDate":"2023-11-13"},{"lineNumber":145,"author":{"gitId":"RSXIX"},"content":"        assertTrue(defaultPerson.hasDefaultCompanyPolicyParameter());","lastModifiedDate":"2023-11-13"},{"lineNumber":146,"author":{"gitId":"RSXIX"},"content":"    }","lastModifiedDate":"2023-11-13"},{"lineNumber":147,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":148,"author":{"gitId":"RSXIX"},"content":"    @Test","lastModifiedDate":"2023-11-13"},{"lineNumber":149,"author":{"gitId":"RSXIX"},"content":"    public void hasDefaultPolicyNumberParameter_defaultPolicy_success() {","lastModifiedDate":"2023-11-13"},{"lineNumber":150,"author":{"gitId":"RSXIX"},"content":"        Policy defaultPolicy \u003d new Policy(new Company(Company.DEFAULT_VALUE),","lastModifiedDate":"2023-11-13"},{"lineNumber":151,"author":{"gitId":"RSXIX"},"content":"                new PolicyNumber(PolicyNumber.DEFAULT_VALUE),","lastModifiedDate":"2023-11-13"},{"lineNumber":152,"author":{"gitId":"RSXIX"},"content":"                new PolicyDate(PolicyDate.DEFAULT_VALUE),","lastModifiedDate":"2023-11-13"},{"lineNumber":153,"author":{"gitId":"RSXIX"},"content":"                new PolicyDate(PolicyDate.DEFAULT_VALUE));","lastModifiedDate":"2023-11-13"},{"lineNumber":154,"author":{"gitId":"RSXIX"},"content":"        Person defaultPerson \u003d new Person(ALICE.getName(),","lastModifiedDate":"2023-11-13"},{"lineNumber":155,"author":{"gitId":"RSXIX"},"content":"                ALICE.getPhone(),","lastModifiedDate":"2023-11-13"},{"lineNumber":156,"author":{"gitId":"RSXIX"},"content":"                ALICE.getEmail(),","lastModifiedDate":"2023-11-13"},{"lineNumber":157,"author":{"gitId":"RSXIX"},"content":"                ALICE.getAddress(),","lastModifiedDate":"2023-11-13"},{"lineNumber":158,"author":{"gitId":"RSXIX"},"content":"                ALICE.getTags(),","lastModifiedDate":"2023-11-13"},{"lineNumber":159,"author":{"gitId":"RSXIX"},"content":"                ALICE.getNric(),","lastModifiedDate":"2023-11-13"},{"lineNumber":160,"author":{"gitId":"RSXIX"},"content":"                ALICE.getLicencePlate(),","lastModifiedDate":"2023-11-13"},{"lineNumber":161,"author":{"gitId":"RSXIX"},"content":"                ALICE.getRemark(),","lastModifiedDate":"2023-11-13"},{"lineNumber":162,"author":{"gitId":"RSXIX"},"content":"                defaultPolicy);","lastModifiedDate":"2023-11-13"},{"lineNumber":163,"author":{"gitId":"RSXIX"},"content":"        assertTrue(defaultPerson.hasDefaultPolicyNumberParameter());","lastModifiedDate":"2023-11-13"},{"lineNumber":164,"author":{"gitId":"RSXIX"},"content":"    }","lastModifiedDate":"2023-11-13"},{"lineNumber":165,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":166,"author":{"gitId":"RSXIX"},"content":"    @Test","lastModifiedDate":"2023-11-13"},{"lineNumber":167,"author":{"gitId":"RSXIX"},"content":"    public void hasDefaultPolicyIssueDateParameter_defaultPolicy_success() {","lastModifiedDate":"2023-11-13"},{"lineNumber":168,"author":{"gitId":"RSXIX"},"content":"        Policy defaultPolicy \u003d new Policy(new Company(Company.DEFAULT_VALUE),","lastModifiedDate":"2023-11-13"},{"lineNumber":169,"author":{"gitId":"RSXIX"},"content":"                new PolicyNumber(PolicyNumber.DEFAULT_VALUE),","lastModifiedDate":"2023-11-13"},{"lineNumber":170,"author":{"gitId":"RSXIX"},"content":"                new PolicyDate(PolicyDate.DEFAULT_VALUE),","lastModifiedDate":"2023-11-13"},{"lineNumber":171,"author":{"gitId":"RSXIX"},"content":"                new PolicyDate(PolicyDate.DEFAULT_VALUE));","lastModifiedDate":"2023-11-13"},{"lineNumber":172,"author":{"gitId":"RSXIX"},"content":"        Person defaultPerson \u003d new Person(ALICE.getName(),","lastModifiedDate":"2023-11-13"},{"lineNumber":173,"author":{"gitId":"RSXIX"},"content":"                ALICE.getPhone(),","lastModifiedDate":"2023-11-13"},{"lineNumber":174,"author":{"gitId":"RSXIX"},"content":"                ALICE.getEmail(),","lastModifiedDate":"2023-11-13"},{"lineNumber":175,"author":{"gitId":"RSXIX"},"content":"                ALICE.getAddress(),","lastModifiedDate":"2023-11-13"},{"lineNumber":176,"author":{"gitId":"RSXIX"},"content":"                ALICE.getTags(),","lastModifiedDate":"2023-11-13"},{"lineNumber":177,"author":{"gitId":"RSXIX"},"content":"                ALICE.getNric(),","lastModifiedDate":"2023-11-13"},{"lineNumber":178,"author":{"gitId":"RSXIX"},"content":"                ALICE.getLicencePlate(),","lastModifiedDate":"2023-11-13"},{"lineNumber":179,"author":{"gitId":"RSXIX"},"content":"                ALICE.getRemark(),","lastModifiedDate":"2023-11-13"},{"lineNumber":180,"author":{"gitId":"RSXIX"},"content":"                defaultPolicy);","lastModifiedDate":"2023-11-13"},{"lineNumber":181,"author":{"gitId":"RSXIX"},"content":"        assertTrue(defaultPerson.hasDefaultPolicyIssueDateParameter());","lastModifiedDate":"2023-11-13"},{"lineNumber":182,"author":{"gitId":"RSXIX"},"content":"    }","lastModifiedDate":"2023-11-13"},{"lineNumber":183,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":184,"author":{"gitId":"RSXIX"},"content":"    @Test","lastModifiedDate":"2023-11-13"},{"lineNumber":185,"author":{"gitId":"RSXIX"},"content":"    public void hasDefaultPolicyExpiryDateParameter_defaultPolicy_success() {","lastModifiedDate":"2023-11-13"},{"lineNumber":186,"author":{"gitId":"RSXIX"},"content":"        Policy defaultPolicy \u003d new Policy(new Company(Company.DEFAULT_VALUE),","lastModifiedDate":"2023-11-13"},{"lineNumber":187,"author":{"gitId":"RSXIX"},"content":"                new PolicyNumber(PolicyNumber.DEFAULT_VALUE),","lastModifiedDate":"2023-11-13"},{"lineNumber":188,"author":{"gitId":"RSXIX"},"content":"                new PolicyDate(PolicyDate.DEFAULT_VALUE),","lastModifiedDate":"2023-11-13"},{"lineNumber":189,"author":{"gitId":"RSXIX"},"content":"                new PolicyDate(PolicyDate.DEFAULT_VALUE));","lastModifiedDate":"2023-11-13"},{"lineNumber":190,"author":{"gitId":"RSXIX"},"content":"        Person defaultPerson \u003d new Person(ALICE.getName(),","lastModifiedDate":"2023-11-13"},{"lineNumber":191,"author":{"gitId":"RSXIX"},"content":"                ALICE.getPhone(),","lastModifiedDate":"2023-11-13"},{"lineNumber":192,"author":{"gitId":"RSXIX"},"content":"                ALICE.getEmail(),","lastModifiedDate":"2023-11-13"},{"lineNumber":193,"author":{"gitId":"RSXIX"},"content":"                ALICE.getAddress(),","lastModifiedDate":"2023-11-13"},{"lineNumber":194,"author":{"gitId":"RSXIX"},"content":"                ALICE.getTags(),","lastModifiedDate":"2023-11-13"},{"lineNumber":195,"author":{"gitId":"RSXIX"},"content":"                ALICE.getNric(),","lastModifiedDate":"2023-11-13"},{"lineNumber":196,"author":{"gitId":"RSXIX"},"content":"                ALICE.getLicencePlate(),","lastModifiedDate":"2023-11-13"},{"lineNumber":197,"author":{"gitId":"RSXIX"},"content":"                ALICE.getRemark(),","lastModifiedDate":"2023-11-13"},{"lineNumber":198,"author":{"gitId":"RSXIX"},"content":"                defaultPolicy);","lastModifiedDate":"2023-11-13"},{"lineNumber":199,"author":{"gitId":"RSXIX"},"content":"        assertTrue(defaultPerson.hasDefaultPolicyExpiryDateParameter());","lastModifiedDate":"2023-11-13"},{"lineNumber":200,"author":{"gitId":"RSXIX"},"content":"    }","lastModifiedDate":"2023-11-13"},{"lineNumber":201,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":202,"author":{"gitId":"RSXIX"},"content":"    @Test","lastModifiedDate":"2023-11-13"},{"lineNumber":203,"author":{"gitId":"RSXIX"},"content":"    public void cloneWithoutPolicy_filledOutPolicy_returnsDefaultPolicy() {","lastModifiedDate":"2023-11-13"},{"lineNumber":204,"author":{"gitId":"RSXIX"},"content":"        Policy defaultPolicy \u003d new Policy(new Company(Company.DEFAULT_VALUE),","lastModifiedDate":"2023-11-13"},{"lineNumber":205,"author":{"gitId":"RSXIX"},"content":"                new PolicyNumber(PolicyNumber.DEFAULT_VALUE),","lastModifiedDate":"2023-11-13"},{"lineNumber":206,"author":{"gitId":"RSXIX"},"content":"                new PolicyDate(PolicyDate.DEFAULT_VALUE),","lastModifiedDate":"2023-11-13"},{"lineNumber":207,"author":{"gitId":"RSXIX"},"content":"                new PolicyDate(PolicyDate.DEFAULT_VALUE));","lastModifiedDate":"2023-11-13"},{"lineNumber":208,"author":{"gitId":"RSXIX"},"content":"        Person defaultPolicyAlice \u003d new Person(ALICE.getName(),","lastModifiedDate":"2023-11-13"},{"lineNumber":209,"author":{"gitId":"RSXIX"},"content":"                ALICE.getPhone(),","lastModifiedDate":"2023-11-13"},{"lineNumber":210,"author":{"gitId":"RSXIX"},"content":"                ALICE.getEmail(),","lastModifiedDate":"2023-11-13"},{"lineNumber":211,"author":{"gitId":"RSXIX"},"content":"                ALICE.getAddress(),","lastModifiedDate":"2023-11-13"},{"lineNumber":212,"author":{"gitId":"RSXIX"},"content":"                ALICE.getTags(),","lastModifiedDate":"2023-11-13"},{"lineNumber":213,"author":{"gitId":"RSXIX"},"content":"                ALICE.getNric(),","lastModifiedDate":"2023-11-13"},{"lineNumber":214,"author":{"gitId":"RSXIX"},"content":"                ALICE.getLicencePlate(),","lastModifiedDate":"2023-11-13"},{"lineNumber":215,"author":{"gitId":"RSXIX"},"content":"                ALICE.getRemark(),","lastModifiedDate":"2023-11-13"},{"lineNumber":216,"author":{"gitId":"RSXIX"},"content":"                defaultPolicy);","lastModifiedDate":"2023-11-13"},{"lineNumber":217,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":218,"author":{"gitId":"RSXIX"},"content":"        Policy filledPolicy \u003d new Policy(new Company(VALID_COMPANY_BOB),","lastModifiedDate":"2023-11-13"},{"lineNumber":219,"author":{"gitId":"RSXIX"},"content":"                new PolicyNumber(VALID_POLICY_NO_AMY), new PolicyDate(VALID_POLICY_ISSUE_DATE_AMY),","lastModifiedDate":"2023-11-13"},{"lineNumber":220,"author":{"gitId":"RSXIX"},"content":"                new PolicyDate(VALID_POLICY_EXPIRY_DATE_AMY));","lastModifiedDate":"2023-11-13"},{"lineNumber":221,"author":{"gitId":"RSXIX"},"content":"        Person aliceWithPolicy \u003d new Person(ALICE.getName(),","lastModifiedDate":"2023-11-13"},{"lineNumber":222,"author":{"gitId":"RSXIX"},"content":"                ALICE.getPhone(),","lastModifiedDate":"2023-11-13"},{"lineNumber":223,"author":{"gitId":"RSXIX"},"content":"                ALICE.getEmail(),","lastModifiedDate":"2023-11-13"},{"lineNumber":224,"author":{"gitId":"RSXIX"},"content":"                ALICE.getAddress(),","lastModifiedDate":"2023-11-13"},{"lineNumber":225,"author":{"gitId":"RSXIX"},"content":"                ALICE.getTags(),","lastModifiedDate":"2023-11-13"},{"lineNumber":226,"author":{"gitId":"RSXIX"},"content":"                ALICE.getNric(),","lastModifiedDate":"2023-11-13"},{"lineNumber":227,"author":{"gitId":"RSXIX"},"content":"                ALICE.getLicencePlate(),","lastModifiedDate":"2023-11-13"},{"lineNumber":228,"author":{"gitId":"RSXIX"},"content":"                ALICE.getRemark(),","lastModifiedDate":"2023-11-13"},{"lineNumber":229,"author":{"gitId":"RSXIX"},"content":"                filledPolicy);","lastModifiedDate":"2023-11-13"},{"lineNumber":230,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":231,"author":{"gitId":"RSXIX"},"content":"        assertEquals(aliceWithPolicy.cloneWithoutPolicy(),","lastModifiedDate":"2023-11-13"},{"lineNumber":232,"author":{"gitId":"RSXIX"},"content":"                defaultPolicyAlice);","lastModifiedDate":"2023-11-13"},{"lineNumber":233,"author":{"gitId":"RSXIX"},"content":"    }","lastModifiedDate":"2023-11-13"},{"lineNumber":234,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":235,"author":{"gitId":"RSXIX"},"content":"    @Test","lastModifiedDate":"2023-11-13"},{"lineNumber":236,"author":{"gitId":"RSXIX"},"content":"    public void compareDatesTest_comparingPolicyWitIdenticalIssueAndExpiryDate_showsSameDateOuput() {","lastModifiedDate":"2023-11-13"},{"lineNumber":237,"author":{"gitId":"RSXIX"},"content":"        Policy defaultPolicy \u003d new Policy(new Company(Company.DEFAULT_VALUE),","lastModifiedDate":"2023-11-13"},{"lineNumber":238,"author":{"gitId":"RSXIX"},"content":"                new PolicyNumber(PolicyNumber.DEFAULT_VALUE),","lastModifiedDate":"2023-11-13"},{"lineNumber":239,"author":{"gitId":"RSXIX"},"content":"                new PolicyDate(PolicyDate.DEFAULT_VALUE),","lastModifiedDate":"2023-11-13"},{"lineNumber":240,"author":{"gitId":"RSXIX"},"content":"                new PolicyDate(PolicyDate.DEFAULT_VALUE));","lastModifiedDate":"2023-11-13"},{"lineNumber":241,"author":{"gitId":"RSXIX"},"content":"        Person defaultPolicyAlice \u003d new Person(ALICE.getName(),","lastModifiedDate":"2023-11-13"},{"lineNumber":242,"author":{"gitId":"RSXIX"},"content":"                ALICE.getPhone(),","lastModifiedDate":"2023-11-13"},{"lineNumber":243,"author":{"gitId":"RSXIX"},"content":"                ALICE.getEmail(),","lastModifiedDate":"2023-11-13"},{"lineNumber":244,"author":{"gitId":"RSXIX"},"content":"                ALICE.getAddress(),","lastModifiedDate":"2023-11-13"},{"lineNumber":245,"author":{"gitId":"RSXIX"},"content":"                ALICE.getTags(),","lastModifiedDate":"2023-11-13"},{"lineNumber":246,"author":{"gitId":"RSXIX"},"content":"                ALICE.getNric(),","lastModifiedDate":"2023-11-13"},{"lineNumber":247,"author":{"gitId":"RSXIX"},"content":"                ALICE.getLicencePlate(),","lastModifiedDate":"2023-11-13"},{"lineNumber":248,"author":{"gitId":"RSXIX"},"content":"                ALICE.getRemark(),","lastModifiedDate":"2023-11-13"},{"lineNumber":249,"author":{"gitId":"RSXIX"},"content":"                defaultPolicy);","lastModifiedDate":"2023-11-13"},{"lineNumber":250,"author":{"gitId":"RSXIX"},"content":"        assertTrue(defaultPolicyAlice.comparePolicyDates() \u003d\u003d 0);","lastModifiedDate":"2023-11-13"},{"lineNumber":251,"author":{"gitId":"RSXIX"},"content":"    }","lastModifiedDate":"2023-11-13"},{"lineNumber":252,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":253,"author":{"gitId":"RSXIX"},"content":"    @Test","lastModifiedDate":"2023-11-13"},{"lineNumber":254,"author":{"gitId":"RSXIX"},"content":"    public void compareDatesTest_comparingValidPolicyWithIssueBeforeExpiry_showsValidDateOutput() {","lastModifiedDate":"2023-11-13"},{"lineNumber":255,"author":{"gitId":"RSXIX"},"content":"        Policy filledPolicy \u003d new Policy(new Company(VALID_COMPANY_BOB),","lastModifiedDate":"2023-11-13"},{"lineNumber":256,"author":{"gitId":"RSXIX"},"content":"                new PolicyNumber(VALID_POLICY_NO_AMY), new PolicyDate(VALID_POLICY_ISSUE_DATE_AMY),","lastModifiedDate":"2023-11-13"},{"lineNumber":257,"author":{"gitId":"RSXIX"},"content":"                new PolicyDate(VALID_POLICY_EXPIRY_DATE_AMY));","lastModifiedDate":"2023-11-13"},{"lineNumber":258,"author":{"gitId":"RSXIX"},"content":"        Person aliceWithPolicy \u003d new Person(ALICE.getName(),","lastModifiedDate":"2023-11-13"},{"lineNumber":259,"author":{"gitId":"RSXIX"},"content":"                ALICE.getPhone(),","lastModifiedDate":"2023-11-13"},{"lineNumber":260,"author":{"gitId":"RSXIX"},"content":"                ALICE.getEmail(),","lastModifiedDate":"2023-11-13"},{"lineNumber":261,"author":{"gitId":"RSXIX"},"content":"                ALICE.getAddress(),","lastModifiedDate":"2023-11-13"},{"lineNumber":262,"author":{"gitId":"RSXIX"},"content":"                ALICE.getTags(),","lastModifiedDate":"2023-11-13"},{"lineNumber":263,"author":{"gitId":"RSXIX"},"content":"                ALICE.getNric(),","lastModifiedDate":"2023-11-13"},{"lineNumber":264,"author":{"gitId":"RSXIX"},"content":"                ALICE.getLicencePlate(),","lastModifiedDate":"2023-11-13"},{"lineNumber":265,"author":{"gitId":"RSXIX"},"content":"                ALICE.getRemark(),","lastModifiedDate":"2023-11-13"},{"lineNumber":266,"author":{"gitId":"RSXIX"},"content":"                filledPolicy);","lastModifiedDate":"2023-11-13"},{"lineNumber":267,"author":{"gitId":"RSXIX"},"content":"        assertTrue(aliceWithPolicy.comparePolicyDates() \u003e 0);","lastModifiedDate":"2023-11-13"},{"lineNumber":268,"author":{"gitId":"RSXIX"},"content":"    }","lastModifiedDate":"2023-11-13"},{"lineNumber":269,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"suryanshkushwaha":2,"RSXIX":145,"-":95,"cyaoxuan":27}},{"path":"src/test/java/seedu/address/model/person/PhoneTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2017-01-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class PhoneTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Phone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidPhone_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidPhone \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Phone(invalidPhone));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidPhone() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null phone number","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Phone.isValidPhone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"cyaoxuan"},"content":"        assertFalse(Phone.isValidPhone(\"91\")); // less than 8 numbers","lastModifiedDate":"2023-11-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"phone\")); // non-numeric","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9011p041\")); // alphabets within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9312 1534\")); // spaces within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"cyaoxuan"},"content":"        assertFalse(Phone.isValidPhone(\"931215342\")); // more than 8 numbers","lastModifiedDate":"2023-11-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // valid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"cyaoxuan"},"content":"        assertTrue(Phone.isValidPhone(\"12345678\")); // exactly 8 numbers","lastModifiedDate":"2023-11-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2019-02-23"},{"lineNumber":42,"author":{"gitId":"cyaoxuan"},"content":"        Phone phone \u003d new Phone(\"99999999\");","lastModifiedDate":"2023-11-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"cyaoxuan"},"content":"        assertTrue(phone.equals(new Phone(\"99999999\")));","lastModifiedDate":"2023-11-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertTrue(phone.equals(phone));","lastModifiedDate":"2019-02-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(phone.equals(null));","lastModifiedDate":"2019-02-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertFalse(phone.equals(5.0f));","lastModifiedDate":"2019-02-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":57,"author":{"gitId":"cyaoxuan"},"content":"        assertFalse(phone.equals(new Phone(\"99599999\")));","lastModifiedDate":"2023-11-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"-":53,"cyaoxuan":6}},{"path":"src/test/java/seedu/address/model/person/RemarkTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cyaoxuan"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-11-11"},{"lineNumber":2,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":3,"author":{"gitId":"cyaoxuan"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-11-11"},{"lineNumber":4,"author":{"gitId":"cyaoxuan"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-11-11"},{"lineNumber":5,"author":{"gitId":"cyaoxuan"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-11-11"},{"lineNumber":6,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":7,"author":{"gitId":"cyaoxuan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-11-11"},{"lineNumber":8,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":9,"author":{"gitId":"cyaoxuan"},"content":"public class RemarkTest {","lastModifiedDate":"2023-11-11"},{"lineNumber":10,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":11,"author":{"gitId":"cyaoxuan"},"content":"    @Test","lastModifiedDate":"2023-11-11"},{"lineNumber":12,"author":{"gitId":"cyaoxuan"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-11-11"},{"lineNumber":13,"author":{"gitId":"cyaoxuan"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Remark(null));","lastModifiedDate":"2023-11-11"},{"lineNumber":14,"author":{"gitId":"cyaoxuan"},"content":"    }","lastModifiedDate":"2023-11-11"},{"lineNumber":15,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":16,"author":{"gitId":"cyaoxuan"},"content":"    @Test","lastModifiedDate":"2023-11-11"},{"lineNumber":17,"author":{"gitId":"cyaoxuan"},"content":"    public void equals() {","lastModifiedDate":"2023-11-11"},{"lineNumber":18,"author":{"gitId":"cyaoxuan"},"content":"        Remark remark \u003d new Remark(\"Likes turtles!\");","lastModifiedDate":"2023-11-11"},{"lineNumber":19,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":20,"author":{"gitId":"cyaoxuan"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-11-11"},{"lineNumber":21,"author":{"gitId":"cyaoxuan"},"content":"        assertTrue(remark.equals(new Remark(\"Likes turtles!\")));","lastModifiedDate":"2023-11-11"},{"lineNumber":22,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":23,"author":{"gitId":"cyaoxuan"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-11-11"},{"lineNumber":24,"author":{"gitId":"cyaoxuan"},"content":"        assertTrue(remark.equals(remark));","lastModifiedDate":"2023-11-11"},{"lineNumber":25,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":26,"author":{"gitId":"cyaoxuan"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-11-11"},{"lineNumber":27,"author":{"gitId":"cyaoxuan"},"content":"        assertFalse(remark.equals(null));","lastModifiedDate":"2023-11-11"},{"lineNumber":28,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":29,"author":{"gitId":"cyaoxuan"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-11-11"},{"lineNumber":30,"author":{"gitId":"cyaoxuan"},"content":"        assertFalse(remark.equals(5.0f));","lastModifiedDate":"2023-11-11"},{"lineNumber":31,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":32,"author":{"gitId":"cyaoxuan"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2023-11-11"},{"lineNumber":33,"author":{"gitId":"cyaoxuan"},"content":"        assertFalse(remark.equals(new Remark(\"Likes rabbits!\")));","lastModifiedDate":"2023-11-11"},{"lineNumber":34,"author":{"gitId":"cyaoxuan"},"content":"    }","lastModifiedDate":"2023-11-11"},{"lineNumber":35,"author":{"gitId":"cyaoxuan"},"content":"}","lastModifiedDate":"2023-11-11"}],"authorContributionMap":{"cyaoxuan":35}},{"path":"src/test/java/seedu/address/model/person/UniquePersonListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2018-08-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2018-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class UniquePersonListTest {","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final UniquePersonList uniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void contains_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.contains(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void contains_personNotInList_returnsFalse() {","lastModifiedDate":"2018-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void contains_personInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":43,"author":{"gitId":"RSXIX"},"content":"    public void contains_personWithSameIdentityFieldsInList_returnsFalse() {","lastModifiedDate":"2023-10-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":47,"author":{"gitId":"RSXIX"},"content":"        assertFalse(uniquePersonList.contains(editedAlice));","lastModifiedDate":"2023-10-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void add_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.add(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void add_duplicatePerson_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.add(ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void setPerson_nullTargetPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(null, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void setPerson_nullEditedPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(ALICE, null));","lastModifiedDate":"2019-03-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void setPerson_targetPersonNotInList_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.setPerson(ALICE, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonIsSamePerson_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasSameIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasDifferentIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasNonUniqueIdentity_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        uniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPerson(ALICE, BOB));","lastModifiedDate":"2019-03-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public void remove_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.remove(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void remove_personDoesNotExist_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.remove(ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void remove_existingPerson_removesPerson() {","lastModifiedDate":"2018-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        uniquePersonList.remove(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public void setPersons_nullUniquePersonList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((UniquePersonList) null));","lastModifiedDate":"2019-03-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public void setPersons_uniquePersonList_replacesOwnListWithProvidedUniquePersonList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(expectedUniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public void setPersons_nullList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((List\u003cPerson\u003e) null));","lastModifiedDate":"2019-03-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public void setPersons_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e personList \u003d Collections.singletonList(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(personList);","lastModifiedDate":"2018-08-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    public void setPersons_listWithDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e listWithDuplicatePersons \u003d Arrays.asList(ALICE, ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPersons(listWithDuplicatePersons));","lastModifiedDate":"2019-03-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2018-04-05"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            -\u003e uniquePersonList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-24"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-24"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-24"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        assertEquals(uniquePersonList.asUnmodifiableObservableList().toString(), uniquePersonList.toString());","lastModifiedDate":"2019-02-24"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-24"},{"lineNumber":175,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"RSXIX":2,"-":173}},{"path":"src/test/java/seedu/address/model/person/predicates/CompanyContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"brendanneojw"},"content":"package seedu.address.model.person.predicates;","lastModifiedDate":"2023-11-12"},{"lineNumber":2,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":3,"author":{"gitId":"brendanneojw"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-11-12"},{"lineNumber":4,"author":{"gitId":"brendanneojw"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-11-12"},{"lineNumber":5,"author":{"gitId":"brendanneojw"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-11-12"},{"lineNumber":6,"author":{"gitId":"brendanneojw"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_POLICY_EXPIRY_DATE_AMY;","lastModifiedDate":"2023-11-12"},{"lineNumber":7,"author":{"gitId":"brendanneojw"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_POLICY_ISSUE_DATE_AMY;","lastModifiedDate":"2023-11-12"},{"lineNumber":8,"author":{"gitId":"brendanneojw"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_POLICY_NO_AMY;","lastModifiedDate":"2023-11-12"},{"lineNumber":9,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":10,"author":{"gitId":"brendanneojw"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-11-12"},{"lineNumber":11,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":12,"author":{"gitId":"brendanneojw"},"content":"import seedu.address.model.policy.Company;","lastModifiedDate":"2023-11-12"},{"lineNumber":13,"author":{"gitId":"brendanneojw"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2023-11-12"},{"lineNumber":14,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":15,"author":{"gitId":"brendanneojw"},"content":"public class CompanyContainsKeywordsPredicateTest {","lastModifiedDate":"2023-11-12"},{"lineNumber":16,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":17,"author":{"gitId":"brendanneojw"},"content":"    @Test","lastModifiedDate":"2023-11-12"},{"lineNumber":18,"author":{"gitId":"brendanneojw"},"content":"    public void equals() {","lastModifiedDate":"2023-11-12"},{"lineNumber":19,"author":{"gitId":"brendanneojw"},"content":"        String firstPredicateKeyword \u003d \"first\";","lastModifiedDate":"2023-11-12"},{"lineNumber":20,"author":{"gitId":"brendanneojw"},"content":"        String secondPredicateKeyword \u003d \"first second\";","lastModifiedDate":"2023-11-12"},{"lineNumber":21,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":22,"author":{"gitId":"brendanneojw"},"content":"        CompanyContainsKeywordsPredicate firstPredicate \u003d new CompanyContainsKeywordsPredicate(firstPredicateKeyword);","lastModifiedDate":"2023-11-12"},{"lineNumber":23,"author":{"gitId":"brendanneojw"},"content":"        CompanyContainsKeywordsPredicate secondPredicate \u003d new CompanyContainsKeywordsPredicate(secondPredicateKeyword);","lastModifiedDate":"2023-11-12"},{"lineNumber":24,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":25,"author":{"gitId":"brendanneojw"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-11-12"},{"lineNumber":26,"author":{"gitId":"brendanneojw"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2023-11-12"},{"lineNumber":27,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":28,"author":{"gitId":"brendanneojw"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-11-12"},{"lineNumber":29,"author":{"gitId":"brendanneojw"},"content":"        CompanyContainsKeywordsPredicate firstPredicateCopy \u003d","lastModifiedDate":"2023-11-12"},{"lineNumber":30,"author":{"gitId":"brendanneojw"},"content":"                new CompanyContainsKeywordsPredicate(firstPredicateKeyword);","lastModifiedDate":"2023-11-12"},{"lineNumber":31,"author":{"gitId":"brendanneojw"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2023-11-12"},{"lineNumber":32,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":33,"author":{"gitId":"brendanneojw"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-11-12"},{"lineNumber":34,"author":{"gitId":"brendanneojw"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2023-11-12"},{"lineNumber":35,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":36,"author":{"gitId":"brendanneojw"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-11-12"},{"lineNumber":37,"author":{"gitId":"brendanneojw"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2023-11-12"},{"lineNumber":38,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":39,"author":{"gitId":"brendanneojw"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2023-11-12"},{"lineNumber":40,"author":{"gitId":"brendanneojw"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2023-11-12"},{"lineNumber":41,"author":{"gitId":"brendanneojw"},"content":"    }","lastModifiedDate":"2023-11-12"},{"lineNumber":42,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":43,"author":{"gitId":"brendanneojw"},"content":"    @Test","lastModifiedDate":"2023-11-12"},{"lineNumber":44,"author":{"gitId":"brendanneojw"},"content":"    public void test_companyContainsKeywords_returnsTrue() {","lastModifiedDate":"2023-11-12"},{"lineNumber":45,"author":{"gitId":"brendanneojw"},"content":"        // One keyword","lastModifiedDate":"2023-11-12"},{"lineNumber":46,"author":{"gitId":"brendanneojw"},"content":"        CompanyContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2023-11-12"},{"lineNumber":47,"author":{"gitId":"brendanneojw"},"content":"                new CompanyContainsKeywordsPredicate(\"FWD Insurance\");","lastModifiedDate":"2023-11-12"},{"lineNumber":48,"author":{"gitId":"brendanneojw"},"content":"        assertTrue(predicate.test(new PersonBuilder().withPolicy(\"FWD Insurance\",","lastModifiedDate":"2023-11-12"},{"lineNumber":49,"author":{"gitId":"brendanneojw"},"content":"                VALID_POLICY_NO_AMY, VALID_POLICY_ISSUE_DATE_AMY, VALID_POLICY_EXPIRY_DATE_AMY).build()));","lastModifiedDate":"2023-11-12"},{"lineNumber":50,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":51,"author":{"gitId":"brendanneojw"},"content":"        // Trailing and Leading white spaces","lastModifiedDate":"2023-11-12"},{"lineNumber":52,"author":{"gitId":"brendanneojw"},"content":"        predicate \u003d new CompanyContainsKeywordsPredicate(\"   FWD Insurance    \");","lastModifiedDate":"2023-11-12"},{"lineNumber":53,"author":{"gitId":"brendanneojw"},"content":"        assertTrue(predicate.test(new PersonBuilder().withPolicy(\"FWD Insurance\",","lastModifiedDate":"2023-11-12"},{"lineNumber":54,"author":{"gitId":"brendanneojw"},"content":"                VALID_POLICY_NO_AMY, VALID_POLICY_ISSUE_DATE_AMY, VALID_POLICY_EXPIRY_DATE_AMY).build()));","lastModifiedDate":"2023-11-12"},{"lineNumber":55,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":56,"author":{"gitId":"brendanneojw"},"content":"        // Mixed-case keywords","lastModifiedDate":"2023-11-12"},{"lineNumber":57,"author":{"gitId":"brendanneojw"},"content":"        predicate \u003d new CompanyContainsKeywordsPredicate(\"fWd InsURanCe\");","lastModifiedDate":"2023-11-12"},{"lineNumber":58,"author":{"gitId":"brendanneojw"},"content":"        assertTrue(predicate.test(new PersonBuilder().withPolicy(\"FWD Insurance\",","lastModifiedDate":"2023-11-12"},{"lineNumber":59,"author":{"gitId":"brendanneojw"},"content":"                VALID_POLICY_NO_AMY, VALID_POLICY_ISSUE_DATE_AMY, VALID_POLICY_EXPIRY_DATE_AMY).build()));","lastModifiedDate":"2023-11-12"},{"lineNumber":60,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":61,"author":{"gitId":"brendanneojw"},"content":"        // Partial keyword","lastModifiedDate":"2023-11-12"},{"lineNumber":62,"author":{"gitId":"brendanneojw"},"content":"        predicate \u003d new CompanyContainsKeywordsPredicate(\"FWD\");","lastModifiedDate":"2023-11-12"},{"lineNumber":63,"author":{"gitId":"brendanneojw"},"content":"        assertTrue(predicate.test(new PersonBuilder().withPolicy(\"FWD Insurance\",","lastModifiedDate":"2023-11-12"},{"lineNumber":64,"author":{"gitId":"brendanneojw"},"content":"                VALID_POLICY_NO_AMY, VALID_POLICY_ISSUE_DATE_AMY, VALID_POLICY_EXPIRY_DATE_AMY).build()));","lastModifiedDate":"2023-11-12"},{"lineNumber":65,"author":{"gitId":"brendanneojw"},"content":"    }","lastModifiedDate":"2023-11-12"},{"lineNumber":66,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":67,"author":{"gitId":"brendanneojw"},"content":"    @Test","lastModifiedDate":"2023-11-12"},{"lineNumber":68,"author":{"gitId":"brendanneojw"},"content":"    public void test_companyDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2023-11-12"},{"lineNumber":69,"author":{"gitId":"brendanneojw"},"content":"        // Non-matching keyword","lastModifiedDate":"2023-11-12"},{"lineNumber":70,"author":{"gitId":"brendanneojw"},"content":"        CompanyContainsKeywordsPredicate predicate \u003d new CompanyContainsKeywordsPredicate(\"ABC\");","lastModifiedDate":"2023-11-12"},{"lineNumber":71,"author":{"gitId":"brendanneojw"},"content":"        assertFalse(predicate.test(new PersonBuilder().withPolicy(\"FWD Insurance\",","lastModifiedDate":"2023-11-12"},{"lineNumber":72,"author":{"gitId":"brendanneojw"},"content":"                VALID_POLICY_NO_AMY, VALID_POLICY_ISSUE_DATE_AMY, VALID_POLICY_EXPIRY_DATE_AMY).build()));","lastModifiedDate":"2023-11-12"},{"lineNumber":73,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":74,"author":{"gitId":"brendanneojw"},"content":"        // Keyword only matches word that is separated by white space","lastModifiedDate":"2023-11-12"},{"lineNumber":75,"author":{"gitId":"brendanneojw"},"content":"        predicate \u003d new CompanyContainsKeywordsPredicate(\"ABC Insurance\");","lastModifiedDate":"2023-11-12"},{"lineNumber":76,"author":{"gitId":"brendanneojw"},"content":"        assertFalse(predicate.test(new PersonBuilder().withPolicy(\"ABCInsurance\",","lastModifiedDate":"2023-11-12"},{"lineNumber":77,"author":{"gitId":"brendanneojw"},"content":"                VALID_POLICY_NO_AMY, VALID_POLICY_ISSUE_DATE_AMY, VALID_POLICY_EXPIRY_DATE_AMY).build()));","lastModifiedDate":"2023-11-12"},{"lineNumber":78,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":79,"author":{"gitId":"brendanneojw"},"content":"        // Keyword do not match exact","lastModifiedDate":"2023-11-12"},{"lineNumber":80,"author":{"gitId":"brendanneojw"},"content":"        predicate \u003d new CompanyContainsKeywordsPredicate(\"FWD Insurance 123\");","lastModifiedDate":"2023-11-12"},{"lineNumber":81,"author":{"gitId":"brendanneojw"},"content":"        assertFalse(predicate.test(new PersonBuilder().withPolicy(\"FWD Insurance\",","lastModifiedDate":"2023-11-12"},{"lineNumber":82,"author":{"gitId":"brendanneojw"},"content":"                VALID_POLICY_NO_AMY, VALID_POLICY_ISSUE_DATE_AMY, VALID_POLICY_EXPIRY_DATE_AMY).build()));","lastModifiedDate":"2023-11-12"},{"lineNumber":83,"author":{"gitId":"brendanneojw"},"content":"    }","lastModifiedDate":"2023-11-12"},{"lineNumber":84,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":85,"author":{"gitId":"brendanneojw"},"content":"    @Test","lastModifiedDate":"2023-11-12"},{"lineNumber":86,"author":{"gitId":"brendanneojw"},"content":"    public void test_companyIsDefault_returnsFalse() {","lastModifiedDate":"2023-11-12"},{"lineNumber":87,"author":{"gitId":"brendanneojw"},"content":"        // Company is the default parameter","lastModifiedDate":"2023-11-12"},{"lineNumber":88,"author":{"gitId":"brendanneojw"},"content":"        CompanyContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2023-11-12"},{"lineNumber":89,"author":{"gitId":"brendanneojw"},"content":"                new CompanyContainsKeywordsPredicate(\"FWD Insurance\");","lastModifiedDate":"2023-11-12"},{"lineNumber":90,"author":{"gitId":"brendanneojw"},"content":"        assertFalse(predicate.test(new PersonBuilder().withPolicy(Company.DEFAULT_VALUE, VALID_POLICY_NO_AMY,","lastModifiedDate":"2023-11-12"},{"lineNumber":91,"author":{"gitId":"brendanneojw"},"content":"                VALID_POLICY_ISSUE_DATE_AMY, VALID_POLICY_EXPIRY_DATE_AMY).build()));","lastModifiedDate":"2023-11-12"},{"lineNumber":92,"author":{"gitId":"brendanneojw"},"content":"    }","lastModifiedDate":"2023-11-12"},{"lineNumber":93,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":94,"author":{"gitId":"brendanneojw"},"content":"    @Test","lastModifiedDate":"2023-11-12"},{"lineNumber":95,"author":{"gitId":"brendanneojw"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-11-12"},{"lineNumber":96,"author":{"gitId":"brendanneojw"},"content":"        String keyword \u003d \"keyword1\";","lastModifiedDate":"2023-11-12"},{"lineNumber":97,"author":{"gitId":"brendanneojw"},"content":"        CompanyContainsKeywordsPredicate predicate \u003d new CompanyContainsKeywordsPredicate(keyword);","lastModifiedDate":"2023-11-12"},{"lineNumber":98,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":99,"author":{"gitId":"brendanneojw"},"content":"        String expected \u003d CompanyContainsKeywordsPredicate.class.getCanonicalName() + \"{keywords\u003d[\" + keyword + \"]}\";","lastModifiedDate":"2023-11-12"},{"lineNumber":100,"author":{"gitId":"brendanneojw"},"content":"        assertEquals(expected, predicate.toString());","lastModifiedDate":"2023-11-12"},{"lineNumber":101,"author":{"gitId":"brendanneojw"},"content":"    }","lastModifiedDate":"2023-11-12"},{"lineNumber":102,"author":{"gitId":"brendanneojw"},"content":"}","lastModifiedDate":"2023-11-12"}],"authorContributionMap":{"brendanneojw":102}},{"path":"src/test/java/seedu/address/model/person/predicates/EmailContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"brendanneojw"},"content":"package seedu.address.model.person.predicates;","lastModifiedDate":"2023-11-12"},{"lineNumber":2,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":3,"author":{"gitId":"brendanneojw"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-11-12"},{"lineNumber":4,"author":{"gitId":"brendanneojw"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-11-12"},{"lineNumber":5,"author":{"gitId":"brendanneojw"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-11-12"},{"lineNumber":6,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":7,"author":{"gitId":"brendanneojw"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-11-12"},{"lineNumber":8,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":9,"author":{"gitId":"brendanneojw"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2023-11-12"},{"lineNumber":10,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":11,"author":{"gitId":"brendanneojw"},"content":"public class EmailContainsKeywordsPredicateTest {","lastModifiedDate":"2023-11-12"},{"lineNumber":12,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":13,"author":{"gitId":"brendanneojw"},"content":"    @Test","lastModifiedDate":"2023-11-12"},{"lineNumber":14,"author":{"gitId":"brendanneojw"},"content":"    public void equals() {","lastModifiedDate":"2023-11-12"},{"lineNumber":15,"author":{"gitId":"brendanneojw"},"content":"        String firstPredicateKeyword \u003d \"first\";","lastModifiedDate":"2023-11-12"},{"lineNumber":16,"author":{"gitId":"brendanneojw"},"content":"        String secondPredicateKeyword \u003d \"first second\";","lastModifiedDate":"2023-11-12"},{"lineNumber":17,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":18,"author":{"gitId":"brendanneojw"},"content":"        EmailContainsKeywordsPredicate firstPredicate \u003d new EmailContainsKeywordsPredicate(firstPredicateKeyword);","lastModifiedDate":"2023-11-12"},{"lineNumber":19,"author":{"gitId":"brendanneojw"},"content":"        EmailContainsKeywordsPredicate secondPredicate \u003d new EmailContainsKeywordsPredicate(secondPredicateKeyword);","lastModifiedDate":"2023-11-12"},{"lineNumber":20,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":21,"author":{"gitId":"brendanneojw"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-11-12"},{"lineNumber":22,"author":{"gitId":"brendanneojw"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2023-11-12"},{"lineNumber":23,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":24,"author":{"gitId":"brendanneojw"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-11-12"},{"lineNumber":25,"author":{"gitId":"brendanneojw"},"content":"        EmailContainsKeywordsPredicate firstPredicateCopy \u003d new EmailContainsKeywordsPredicate(firstPredicateKeyword);","lastModifiedDate":"2023-11-12"},{"lineNumber":26,"author":{"gitId":"brendanneojw"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2023-11-12"},{"lineNumber":27,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":28,"author":{"gitId":"brendanneojw"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-11-12"},{"lineNumber":29,"author":{"gitId":"brendanneojw"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2023-11-12"},{"lineNumber":30,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":31,"author":{"gitId":"brendanneojw"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-11-12"},{"lineNumber":32,"author":{"gitId":"brendanneojw"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2023-11-12"},{"lineNumber":33,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":34,"author":{"gitId":"brendanneojw"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2023-11-12"},{"lineNumber":35,"author":{"gitId":"brendanneojw"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2023-11-12"},{"lineNumber":36,"author":{"gitId":"brendanneojw"},"content":"    }","lastModifiedDate":"2023-11-12"},{"lineNumber":37,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":38,"author":{"gitId":"brendanneojw"},"content":"    @Test","lastModifiedDate":"2023-11-12"},{"lineNumber":39,"author":{"gitId":"brendanneojw"},"content":"    public void test_emailContainsKeywords_returnsTrue() {","lastModifiedDate":"2023-11-12"},{"lineNumber":40,"author":{"gitId":"brendanneojw"},"content":"        // One keyword","lastModifiedDate":"2023-11-12"},{"lineNumber":41,"author":{"gitId":"brendanneojw"},"content":"        EmailContainsKeywordsPredicate predicate \u003d new EmailContainsKeywordsPredicate(\"amy@example.com\");","lastModifiedDate":"2023-11-12"},{"lineNumber":42,"author":{"gitId":"brendanneojw"},"content":"        assertTrue(predicate.test(new PersonBuilder().withEmail(\"amy@example.com\").build()));","lastModifiedDate":"2023-11-12"},{"lineNumber":43,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":44,"author":{"gitId":"brendanneojw"},"content":"        // Trailing and Leading white spaces","lastModifiedDate":"2023-11-12"},{"lineNumber":45,"author":{"gitId":"brendanneojw"},"content":"        predicate \u003d new EmailContainsKeywordsPredicate(\"   amy@example.com    \");","lastModifiedDate":"2023-11-12"},{"lineNumber":46,"author":{"gitId":"brendanneojw"},"content":"        assertTrue(predicate.test(new PersonBuilder().withEmail(\"amy@example.com\").build()));","lastModifiedDate":"2023-11-12"},{"lineNumber":47,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":48,"author":{"gitId":"brendanneojw"},"content":"        // Mixed-case keywords","lastModifiedDate":"2023-11-12"},{"lineNumber":49,"author":{"gitId":"brendanneojw"},"content":"        predicate \u003d new EmailContainsKeywordsPredicate(\"AmY@ExAmPle.coM\");","lastModifiedDate":"2023-11-12"},{"lineNumber":50,"author":{"gitId":"brendanneojw"},"content":"        assertTrue(predicate.test(new PersonBuilder().withEmail(\"amy@example.com\").build()));","lastModifiedDate":"2023-11-12"},{"lineNumber":51,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":52,"author":{"gitId":"brendanneojw"},"content":"        // Partial keyword","lastModifiedDate":"2023-11-12"},{"lineNumber":53,"author":{"gitId":"brendanneojw"},"content":"        predicate \u003d new EmailContainsKeywordsPredicate(\"amy\");","lastModifiedDate":"2023-11-12"},{"lineNumber":54,"author":{"gitId":"brendanneojw"},"content":"        assertTrue(predicate.test(new PersonBuilder().withEmail(\"amy@example.com\").build()));","lastModifiedDate":"2023-11-12"},{"lineNumber":55,"author":{"gitId":"brendanneojw"},"content":"    }","lastModifiedDate":"2023-11-12"},{"lineNumber":56,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":57,"author":{"gitId":"brendanneojw"},"content":"    @Test","lastModifiedDate":"2023-11-12"},{"lineNumber":58,"author":{"gitId":"brendanneojw"},"content":"    public void test_emailDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2023-11-12"},{"lineNumber":59,"author":{"gitId":"brendanneojw"},"content":"        // Non-matching keyword","lastModifiedDate":"2023-11-12"},{"lineNumber":60,"author":{"gitId":"brendanneojw"},"content":"        EmailContainsKeywordsPredicate predicate \u003d new EmailContainsKeywordsPredicate(\"bob\");","lastModifiedDate":"2023-11-12"},{"lineNumber":61,"author":{"gitId":"brendanneojw"},"content":"        assertFalse(predicate.test(new PersonBuilder().withEmail(\"amy@example.com\").build()));","lastModifiedDate":"2023-11-12"},{"lineNumber":62,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":63,"author":{"gitId":"brendanneojw"},"content":"        // Keyword including white spaces","lastModifiedDate":"2023-11-12"},{"lineNumber":64,"author":{"gitId":"brendanneojw"},"content":"        predicate \u003d new EmailContainsKeywordsPredicate(\"amy @example. com\");","lastModifiedDate":"2023-11-12"},{"lineNumber":65,"author":{"gitId":"brendanneojw"},"content":"        assertFalse(predicate.test(new PersonBuilder().withEmail(\"amy@example.com\").build()));","lastModifiedDate":"2023-11-12"},{"lineNumber":66,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":67,"author":{"gitId":"brendanneojw"},"content":"        // Keyword do not match exact","lastModifiedDate":"2023-11-12"},{"lineNumber":68,"author":{"gitId":"brendanneojw"},"content":"        predicate \u003d new EmailContainsKeywordsPredicate(\"amykim@example.com\");","lastModifiedDate":"2023-11-12"},{"lineNumber":69,"author":{"gitId":"brendanneojw"},"content":"        assertFalse(predicate.test(new PersonBuilder().withEmail(\"amy@example.com\").build()));","lastModifiedDate":"2023-11-12"},{"lineNumber":70,"author":{"gitId":"brendanneojw"},"content":"    }","lastModifiedDate":"2023-11-12"},{"lineNumber":71,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":72,"author":{"gitId":"brendanneojw"},"content":"    @Test","lastModifiedDate":"2023-11-12"},{"lineNumber":73,"author":{"gitId":"brendanneojw"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-11-12"},{"lineNumber":74,"author":{"gitId":"brendanneojw"},"content":"        String keyword \u003d \"keyword1\";","lastModifiedDate":"2023-11-12"},{"lineNumber":75,"author":{"gitId":"brendanneojw"},"content":"        EmailContainsKeywordsPredicate predicate \u003d new EmailContainsKeywordsPredicate(keyword);","lastModifiedDate":"2023-11-12"},{"lineNumber":76,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":77,"author":{"gitId":"brendanneojw"},"content":"        String expected \u003d EmailContainsKeywordsPredicate.class.getCanonicalName() + \"{keywords\u003d[\" + keyword + \"]}\";","lastModifiedDate":"2023-11-12"},{"lineNumber":78,"author":{"gitId":"brendanneojw"},"content":"        assertEquals(expected, predicate.toString());","lastModifiedDate":"2023-11-12"},{"lineNumber":79,"author":{"gitId":"brendanneojw"},"content":"    }","lastModifiedDate":"2023-11-12"},{"lineNumber":80,"author":{"gitId":"brendanneojw"},"content":"}","lastModifiedDate":"2023-11-12"}],"authorContributionMap":{"brendanneojw":80}},{"path":"src/test/java/seedu/address/model/person/predicates/HasPolicyPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"KumChaiYin"},"content":"package seedu.address.model.person.predicates;","lastModifiedDate":"2023-11-13"},{"lineNumber":2,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":3,"author":{"gitId":"KumChaiYin"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-11-13"},{"lineNumber":4,"author":{"gitId":"KumChaiYin"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-11-13"},{"lineNumber":5,"author":{"gitId":"KumChaiYin"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2023-11-13"},{"lineNumber":6,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":7,"author":{"gitId":"KumChaiYin"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-11-13"},{"lineNumber":8,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":9,"author":{"gitId":"KumChaiYin"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-11-13"},{"lineNumber":10,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":11,"author":{"gitId":"KumChaiYin"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-11-13"},{"lineNumber":12,"author":{"gitId":"KumChaiYin"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2023-11-13"},{"lineNumber":13,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":14,"author":{"gitId":"KumChaiYin"},"content":"public class HasPolicyPredicateTest {","lastModifiedDate":"2023-11-13"},{"lineNumber":15,"author":{"gitId":"KumChaiYin"},"content":"    @Test","lastModifiedDate":"2023-11-13"},{"lineNumber":16,"author":{"gitId":"KumChaiYin"},"content":"    public void test_personWithPolicy_returnTrue() {","lastModifiedDate":"2023-11-13"},{"lineNumber":17,"author":{"gitId":"KumChaiYin"},"content":"        Person alice \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2023-11-13"},{"lineNumber":18,"author":{"gitId":"KumChaiYin"},"content":"        Predicate\u003cPerson\u003e p \u003d new HasPolicyPredicate();","lastModifiedDate":"2023-11-13"},{"lineNumber":19,"author":{"gitId":"KumChaiYin"},"content":"        assertTrue(p.test(alice));","lastModifiedDate":"2023-11-13"},{"lineNumber":20,"author":{"gitId":"KumChaiYin"},"content":"    }","lastModifiedDate":"2023-11-13"},{"lineNumber":21,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":22,"author":{"gitId":"KumChaiYin"},"content":"    @Test","lastModifiedDate":"2023-11-13"},{"lineNumber":23,"author":{"gitId":"KumChaiYin"},"content":"    public void test_personWithDefaultPolicy_returnFalse() {","lastModifiedDate":"2023-11-13"},{"lineNumber":24,"author":{"gitId":"KumChaiYin"},"content":"        Person person \u003d new PersonBuilder().withDefaultPolicy().build();","lastModifiedDate":"2023-11-13"},{"lineNumber":25,"author":{"gitId":"KumChaiYin"},"content":"        Predicate\u003cPerson\u003e p \u003d new HasPolicyPredicate();","lastModifiedDate":"2023-11-13"},{"lineNumber":26,"author":{"gitId":"KumChaiYin"},"content":"        assertFalse(p.test(person));","lastModifiedDate":"2023-11-13"},{"lineNumber":27,"author":{"gitId":"KumChaiYin"},"content":"    }","lastModifiedDate":"2023-11-13"},{"lineNumber":28,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":29,"author":{"gitId":"KumChaiYin"},"content":"    @Test","lastModifiedDate":"2023-11-13"},{"lineNumber":30,"author":{"gitId":"KumChaiYin"},"content":"    public void equals() {","lastModifiedDate":"2023-11-13"},{"lineNumber":31,"author":{"gitId":"KumChaiYin"},"content":"        Predicate\u003cPerson\u003e p1 \u003d new HasPolicyPredicate();","lastModifiedDate":"2023-11-13"},{"lineNumber":32,"author":{"gitId":"KumChaiYin"},"content":"        Predicate\u003cPerson\u003e p2 \u003d new HasPolicyPredicate();","lastModifiedDate":"2023-11-13"},{"lineNumber":33,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":34,"author":{"gitId":"KumChaiYin"},"content":"        Person alice \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2023-11-13"},{"lineNumber":35,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":36,"author":{"gitId":"KumChaiYin"},"content":"        assertTrue(p1.equals(p1));","lastModifiedDate":"2023-11-13"},{"lineNumber":37,"author":{"gitId":"KumChaiYin"},"content":"        assertTrue(p1.equals(p2));","lastModifiedDate":"2023-11-13"},{"lineNumber":38,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":39,"author":{"gitId":"KumChaiYin"},"content":"        assertFalse(p1.equals(null));","lastModifiedDate":"2023-11-13"},{"lineNumber":40,"author":{"gitId":"KumChaiYin"},"content":"        assertFalse(p1.equals(alice));","lastModifiedDate":"2023-11-13"},{"lineNumber":41,"author":{"gitId":"KumChaiYin"},"content":"    }","lastModifiedDate":"2023-11-13"},{"lineNumber":42,"author":{"gitId":"KumChaiYin"},"content":"}","lastModifiedDate":"2023-11-13"}],"authorContributionMap":{"KumChaiYin":42}},{"path":"src/test/java/seedu/address/model/person/predicates/LicenceContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"brendanneojw"},"content":"package seedu.address.model.person.predicates;","lastModifiedDate":"2023-11-12"},{"lineNumber":2,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":3,"author":{"gitId":"brendanneojw"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-11-12"},{"lineNumber":4,"author":{"gitId":"brendanneojw"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-11-12"},{"lineNumber":5,"author":{"gitId":"brendanneojw"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-11-12"},{"lineNumber":6,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":7,"author":{"gitId":"brendanneojw"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-11-12"},{"lineNumber":8,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":9,"author":{"gitId":"brendanneojw"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2023-11-12"},{"lineNumber":10,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":11,"author":{"gitId":"brendanneojw"},"content":"public class LicenceContainsKeywordsPredicateTest {","lastModifiedDate":"2023-11-12"},{"lineNumber":12,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":13,"author":{"gitId":"brendanneojw"},"content":"    @Test","lastModifiedDate":"2023-11-12"},{"lineNumber":14,"author":{"gitId":"brendanneojw"},"content":"    public void equals() {","lastModifiedDate":"2023-11-12"},{"lineNumber":15,"author":{"gitId":"brendanneojw"},"content":"        String firstPredicateKeyword \u003d \"first\";","lastModifiedDate":"2023-11-12"},{"lineNumber":16,"author":{"gitId":"brendanneojw"},"content":"        String secondPredicateKeyword \u003d \"first second\";","lastModifiedDate":"2023-11-12"},{"lineNumber":17,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":18,"author":{"gitId":"brendanneojw"},"content":"        LicenceContainsKeywordsPredicate firstPredicate \u003d new LicenceContainsKeywordsPredicate(firstPredicateKeyword);","lastModifiedDate":"2023-11-12"},{"lineNumber":19,"author":{"gitId":"brendanneojw"},"content":"        LicenceContainsKeywordsPredicate secondPredicate \u003d new LicenceContainsKeywordsPredicate(secondPredicateKeyword);","lastModifiedDate":"2023-11-12"},{"lineNumber":20,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":21,"author":{"gitId":"brendanneojw"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-11-12"},{"lineNumber":22,"author":{"gitId":"brendanneojw"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2023-11-12"},{"lineNumber":23,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":24,"author":{"gitId":"brendanneojw"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-11-12"},{"lineNumber":25,"author":{"gitId":"brendanneojw"},"content":"        LicenceContainsKeywordsPredicate firstPredicateCopy \u003d","lastModifiedDate":"2023-11-12"},{"lineNumber":26,"author":{"gitId":"brendanneojw"},"content":"                new LicenceContainsKeywordsPredicate(firstPredicateKeyword);","lastModifiedDate":"2023-11-12"},{"lineNumber":27,"author":{"gitId":"brendanneojw"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2023-11-12"},{"lineNumber":28,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":29,"author":{"gitId":"brendanneojw"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-11-12"},{"lineNumber":30,"author":{"gitId":"brendanneojw"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2023-11-12"},{"lineNumber":31,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":32,"author":{"gitId":"brendanneojw"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-11-12"},{"lineNumber":33,"author":{"gitId":"brendanneojw"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2023-11-12"},{"lineNumber":34,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":35,"author":{"gitId":"brendanneojw"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2023-11-12"},{"lineNumber":36,"author":{"gitId":"brendanneojw"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2023-11-12"},{"lineNumber":37,"author":{"gitId":"brendanneojw"},"content":"    }","lastModifiedDate":"2023-11-12"},{"lineNumber":38,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":39,"author":{"gitId":"brendanneojw"},"content":"    @Test","lastModifiedDate":"2023-11-12"},{"lineNumber":40,"author":{"gitId":"brendanneojw"},"content":"    public void test_licenceContainsKeywords_returnsTrue() {","lastModifiedDate":"2023-11-12"},{"lineNumber":41,"author":{"gitId":"brendanneojw"},"content":"        // One keyword","lastModifiedDate":"2023-11-12"},{"lineNumber":42,"author":{"gitId":"brendanneojw"},"content":"        LicenceContainsKeywordsPredicate predicate \u003d new LicenceContainsKeywordsPredicate(\"SLA1111A\");","lastModifiedDate":"2023-11-12"},{"lineNumber":43,"author":{"gitId":"brendanneojw"},"content":"        assertTrue(predicate.test(new PersonBuilder().withLicencePlate(\"SLA1111A\").build()));","lastModifiedDate":"2023-11-12"},{"lineNumber":44,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":45,"author":{"gitId":"brendanneojw"},"content":"        // Trailing and Leading white spaces","lastModifiedDate":"2023-11-12"},{"lineNumber":46,"author":{"gitId":"brendanneojw"},"content":"        predicate \u003d new LicenceContainsKeywordsPredicate(\"   SLA1111A    \");","lastModifiedDate":"2023-11-12"},{"lineNumber":47,"author":{"gitId":"brendanneojw"},"content":"        assertTrue(predicate.test(new PersonBuilder().withLicencePlate(\"SLA1111A\").build()));","lastModifiedDate":"2023-11-12"},{"lineNumber":48,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":49,"author":{"gitId":"brendanneojw"},"content":"        // Mixed-case keywords","lastModifiedDate":"2023-11-12"},{"lineNumber":50,"author":{"gitId":"brendanneojw"},"content":"        predicate \u003d new LicenceContainsKeywordsPredicate(\"slA1111a\");","lastModifiedDate":"2023-11-12"},{"lineNumber":51,"author":{"gitId":"brendanneojw"},"content":"        assertTrue(predicate.test(new PersonBuilder().withLicencePlate(\"SLA1111A\").build()));","lastModifiedDate":"2023-11-12"},{"lineNumber":52,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":53,"author":{"gitId":"brendanneojw"},"content":"        // Partial keyword","lastModifiedDate":"2023-11-12"},{"lineNumber":54,"author":{"gitId":"brendanneojw"},"content":"        predicate \u003d new LicenceContainsKeywordsPredicate(\"SLA\");","lastModifiedDate":"2023-11-12"},{"lineNumber":55,"author":{"gitId":"brendanneojw"},"content":"        assertTrue(predicate.test(new PersonBuilder().withLicencePlate(\"SLA1111A\").build()));","lastModifiedDate":"2023-11-12"},{"lineNumber":56,"author":{"gitId":"brendanneojw"},"content":"    }","lastModifiedDate":"2023-11-12"},{"lineNumber":57,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":58,"author":{"gitId":"brendanneojw"},"content":"    @Test","lastModifiedDate":"2023-11-12"},{"lineNumber":59,"author":{"gitId":"brendanneojw"},"content":"    public void test_licenceDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2023-11-12"},{"lineNumber":60,"author":{"gitId":"brendanneojw"},"content":"        // Non-matching keyword","lastModifiedDate":"2023-11-12"},{"lineNumber":61,"author":{"gitId":"brendanneojw"},"content":"        LicenceContainsKeywordsPredicate predicate \u003d new LicenceContainsKeywordsPredicate(\"2222\");","lastModifiedDate":"2023-11-12"},{"lineNumber":62,"author":{"gitId":"brendanneojw"},"content":"        assertFalse(predicate.test(new PersonBuilder().withLicencePlate(\"SLA1111A\").build()));","lastModifiedDate":"2023-11-12"},{"lineNumber":63,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":64,"author":{"gitId":"brendanneojw"},"content":"        // Keyword including white spaces","lastModifiedDate":"2023-11-12"},{"lineNumber":65,"author":{"gitId":"brendanneojw"},"content":"        predicate \u003d new LicenceContainsKeywordsPredicate(\"SLA 1111A\");","lastModifiedDate":"2023-11-12"},{"lineNumber":66,"author":{"gitId":"brendanneojw"},"content":"        assertFalse(predicate.test(new PersonBuilder().withLicencePlate(\"SLA1111A\").build()));","lastModifiedDate":"2023-11-12"},{"lineNumber":67,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":68,"author":{"gitId":"brendanneojw"},"content":"        // Keyword do not match exact","lastModifiedDate":"2023-11-12"},{"lineNumber":69,"author":{"gitId":"brendanneojw"},"content":"        predicate \u003d new LicenceContainsKeywordsPredicate(\"SLAB1111A\");","lastModifiedDate":"2023-11-12"},{"lineNumber":70,"author":{"gitId":"brendanneojw"},"content":"        assertFalse(predicate.test(new PersonBuilder().withLicencePlate(\"SLA1111A\").build()));","lastModifiedDate":"2023-11-12"},{"lineNumber":71,"author":{"gitId":"brendanneojw"},"content":"    }","lastModifiedDate":"2023-11-12"},{"lineNumber":72,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":73,"author":{"gitId":"brendanneojw"},"content":"    @Test","lastModifiedDate":"2023-11-12"},{"lineNumber":74,"author":{"gitId":"brendanneojw"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-11-12"},{"lineNumber":75,"author":{"gitId":"brendanneojw"},"content":"        String keyword \u003d \"keyword1\";","lastModifiedDate":"2023-11-12"},{"lineNumber":76,"author":{"gitId":"brendanneojw"},"content":"        LicenceContainsKeywordsPredicate predicate \u003d new LicenceContainsKeywordsPredicate(keyword);","lastModifiedDate":"2023-11-12"},{"lineNumber":77,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":78,"author":{"gitId":"brendanneojw"},"content":"        String expected \u003d LicenceContainsKeywordsPredicate.class.getCanonicalName() + \"{keywords\u003d[\" + keyword + \"]}\";","lastModifiedDate":"2023-11-12"},{"lineNumber":79,"author":{"gitId":"brendanneojw"},"content":"        assertEquals(expected, predicate.toString());","lastModifiedDate":"2023-11-12"},{"lineNumber":80,"author":{"gitId":"brendanneojw"},"content":"    }","lastModifiedDate":"2023-11-12"},{"lineNumber":81,"author":{"gitId":"brendanneojw"},"content":"}","lastModifiedDate":"2023-11-12"}],"authorContributionMap":{"brendanneojw":81}},{"path":"src/test/java/seedu/address/model/person/predicates/NameContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"brendanneojw"},"content":"package seedu.address.model.person.predicates;","lastModifiedDate":"2023-11-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicateTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"brendanneojw"},"content":"        String firstPredicateKeyword \u003d \"first\";","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"brendanneojw"},"content":"        String secondPredicateKeyword \u003d \"first second\";","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"brendanneojw"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d new NameContainsKeywordsPredicate(firstPredicateKeyword);","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"brendanneojw"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d new NameContainsKeywordsPredicate(secondPredicateKeyword);","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"brendanneojw"},"content":"        NameContainsKeywordsPredicate firstPredicateCopy \u003d new NameContainsKeywordsPredicate(firstPredicateKeyword);","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2017-08-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // One keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"brendanneojw"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(\"Alice Bob\");","lastModifiedDate":"2023-11-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":44,"author":{"gitId":"brendanneojw"},"content":"        // Trailing and Leading white spaces","lastModifiedDate":"2023-10-13"},{"lineNumber":45,"author":{"gitId":"brendanneojw"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(\"   Alice Bob    \");","lastModifiedDate":"2023-10-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // Mixed-case keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":49,"author":{"gitId":"brendanneojw"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(\"aLIce bOB\");","lastModifiedDate":"2023-10-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":51,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":52,"author":{"gitId":"brendanneojw"},"content":"        // Partial keyword","lastModifiedDate":"2023-11-12"},{"lineNumber":53,"author":{"gitId":"brendanneojw"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(\"Ali\");","lastModifiedDate":"2023-11-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2023-11-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2017-08-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // Non-matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":60,"author":{"gitId":"brendanneojw"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(\"Carol\");","lastModifiedDate":"2023-11-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2023-11-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":63,"author":{"gitId":"brendanneojw"},"content":"        // Keyword only matches word that is separated by white space","lastModifiedDate":"2023-11-12"},{"lineNumber":64,"author":{"gitId":"brendanneojw"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(\"Alice Bob\");","lastModifiedDate":"2023-11-12"},{"lineNumber":65,"author":{"gitId":"brendanneojw"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"AliceBob\").build()));","lastModifiedDate":"2023-11-12"},{"lineNumber":66,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":67,"author":{"gitId":"brendanneojw"},"content":"        // Keyword do not match exact","lastModifiedDate":"2023-11-12"},{"lineNumber":68,"author":{"gitId":"brendanneojw"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(\"Alice Bob Carol\");","lastModifiedDate":"2023-11-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":74,"author":{"gitId":"brendanneojw"},"content":"        String keyword \u003d \"keyword1\";","lastModifiedDate":"2023-10-18"},{"lineNumber":75,"author":{"gitId":"brendanneojw"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(keyword);","lastModifiedDate":"2023-10-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":77,"author":{"gitId":"brendanneojw"},"content":"        String expected \u003d NameContainsKeywordsPredicate.class.getCanonicalName() + \"{keywords\u003d[\" + keyword + \"]}\";","lastModifiedDate":"2023-10-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertEquals(expected, predicate.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"brendanneojw":23,"-":57}},{"path":"src/test/java/seedu/address/model/person/predicates/NricContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"brendanneojw"},"content":"package seedu.address.model.person.predicates;","lastModifiedDate":"2023-11-12"},{"lineNumber":2,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":3,"author":{"gitId":"brendanneojw"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-11-12"},{"lineNumber":4,"author":{"gitId":"brendanneojw"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-11-12"},{"lineNumber":5,"author":{"gitId":"brendanneojw"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-11-12"},{"lineNumber":6,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":7,"author":{"gitId":"brendanneojw"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-11-12"},{"lineNumber":8,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":9,"author":{"gitId":"brendanneojw"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2023-11-12"},{"lineNumber":10,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":11,"author":{"gitId":"brendanneojw"},"content":"public class NricContainsKeywordsPredicateTest {","lastModifiedDate":"2023-11-12"},{"lineNumber":12,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":13,"author":{"gitId":"brendanneojw"},"content":"    @Test","lastModifiedDate":"2023-11-12"},{"lineNumber":14,"author":{"gitId":"brendanneojw"},"content":"    public void equals() {","lastModifiedDate":"2023-11-12"},{"lineNumber":15,"author":{"gitId":"brendanneojw"},"content":"        String firstPredicateKeyword \u003d \"first\";","lastModifiedDate":"2023-11-12"},{"lineNumber":16,"author":{"gitId":"brendanneojw"},"content":"        String secondPredicateKeyword \u003d \"first second\";","lastModifiedDate":"2023-11-12"},{"lineNumber":17,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":18,"author":{"gitId":"brendanneojw"},"content":"        NricContainsKeywordsPredicate firstPredicate \u003d new NricContainsKeywordsPredicate(firstPredicateKeyword);","lastModifiedDate":"2023-11-12"},{"lineNumber":19,"author":{"gitId":"brendanneojw"},"content":"        NricContainsKeywordsPredicate secondPredicate \u003d new NricContainsKeywordsPredicate(secondPredicateKeyword);","lastModifiedDate":"2023-11-12"},{"lineNumber":20,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":21,"author":{"gitId":"brendanneojw"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-11-12"},{"lineNumber":22,"author":{"gitId":"brendanneojw"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2023-11-12"},{"lineNumber":23,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":24,"author":{"gitId":"brendanneojw"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-11-12"},{"lineNumber":25,"author":{"gitId":"brendanneojw"},"content":"        NricContainsKeywordsPredicate firstPredicateCopy \u003d new NricContainsKeywordsPredicate(firstPredicateKeyword);","lastModifiedDate":"2023-11-12"},{"lineNumber":26,"author":{"gitId":"brendanneojw"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2023-11-12"},{"lineNumber":27,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":28,"author":{"gitId":"brendanneojw"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-11-12"},{"lineNumber":29,"author":{"gitId":"brendanneojw"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2023-11-12"},{"lineNumber":30,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":31,"author":{"gitId":"brendanneojw"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-11-12"},{"lineNumber":32,"author":{"gitId":"brendanneojw"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2023-11-12"},{"lineNumber":33,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":34,"author":{"gitId":"brendanneojw"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2023-11-12"},{"lineNumber":35,"author":{"gitId":"brendanneojw"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2023-11-12"},{"lineNumber":36,"author":{"gitId":"brendanneojw"},"content":"    }","lastModifiedDate":"2023-11-12"},{"lineNumber":37,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":38,"author":{"gitId":"brendanneojw"},"content":"    @Test","lastModifiedDate":"2023-11-12"},{"lineNumber":39,"author":{"gitId":"brendanneojw"},"content":"    public void test_nricContainsKeywords_returnsTrue() {","lastModifiedDate":"2023-11-12"},{"lineNumber":40,"author":{"gitId":"brendanneojw"},"content":"        // One keyword","lastModifiedDate":"2023-11-12"},{"lineNumber":41,"author":{"gitId":"brendanneojw"},"content":"        NricContainsKeywordsPredicate predicate \u003d new NricContainsKeywordsPredicate(\"987A\");","lastModifiedDate":"2023-11-12"},{"lineNumber":42,"author":{"gitId":"brendanneojw"},"content":"        assertTrue(predicate.test(new PersonBuilder().withNric(\"987A\").build()));","lastModifiedDate":"2023-11-12"},{"lineNumber":43,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":44,"author":{"gitId":"brendanneojw"},"content":"        // Trailing and Leading white spaces","lastModifiedDate":"2023-11-12"},{"lineNumber":45,"author":{"gitId":"brendanneojw"},"content":"        predicate \u003d new NricContainsKeywordsPredicate(\"   987A    \");","lastModifiedDate":"2023-11-12"},{"lineNumber":46,"author":{"gitId":"brendanneojw"},"content":"        assertTrue(predicate.test(new PersonBuilder().withNric(\"987A\").build()));","lastModifiedDate":"2023-11-12"},{"lineNumber":47,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":48,"author":{"gitId":"brendanneojw"},"content":"        // Mixed-case keywords","lastModifiedDate":"2023-11-12"},{"lineNumber":49,"author":{"gitId":"brendanneojw"},"content":"        predicate \u003d new NricContainsKeywordsPredicate(\"987a\");","lastModifiedDate":"2023-11-12"},{"lineNumber":50,"author":{"gitId":"brendanneojw"},"content":"        assertTrue(predicate.test(new PersonBuilder().withNric(\"987A\").build()));","lastModifiedDate":"2023-11-12"},{"lineNumber":51,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":52,"author":{"gitId":"brendanneojw"},"content":"        // Partial keyword","lastModifiedDate":"2023-11-12"},{"lineNumber":53,"author":{"gitId":"brendanneojw"},"content":"        predicate \u003d new NricContainsKeywordsPredicate(\"98\");","lastModifiedDate":"2023-11-12"},{"lineNumber":54,"author":{"gitId":"brendanneojw"},"content":"        assertTrue(predicate.test(new PersonBuilder().withNric(\"987A\").build()));","lastModifiedDate":"2023-11-12"},{"lineNumber":55,"author":{"gitId":"brendanneojw"},"content":"    }","lastModifiedDate":"2023-11-12"},{"lineNumber":56,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":57,"author":{"gitId":"brendanneojw"},"content":"    @Test","lastModifiedDate":"2023-11-12"},{"lineNumber":58,"author":{"gitId":"brendanneojw"},"content":"    public void test_nricDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2023-11-12"},{"lineNumber":59,"author":{"gitId":"brendanneojw"},"content":"        // Non-matching keyword","lastModifiedDate":"2023-11-12"},{"lineNumber":60,"author":{"gitId":"brendanneojw"},"content":"        NricContainsKeywordsPredicate predicate \u003d new NricContainsKeywordsPredicate(\"123\");","lastModifiedDate":"2023-11-12"},{"lineNumber":61,"author":{"gitId":"brendanneojw"},"content":"        assertFalse(predicate.test(new PersonBuilder().withNric(\"987A\").build()));","lastModifiedDate":"2023-11-12"},{"lineNumber":62,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":63,"author":{"gitId":"brendanneojw"},"content":"        // Keyword including white spaces","lastModifiedDate":"2023-11-12"},{"lineNumber":64,"author":{"gitId":"brendanneojw"},"content":"        predicate \u003d new NricContainsKeywordsPredicate(\"98 7A\");","lastModifiedDate":"2023-11-12"},{"lineNumber":65,"author":{"gitId":"brendanneojw"},"content":"        assertFalse(predicate.test(new PersonBuilder().withNric(\"987A\").build()));","lastModifiedDate":"2023-11-12"},{"lineNumber":66,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":67,"author":{"gitId":"brendanneojw"},"content":"        // Keyword do not match exact","lastModifiedDate":"2023-11-12"},{"lineNumber":68,"author":{"gitId":"brendanneojw"},"content":"        predicate \u003d new NricContainsKeywordsPredicate(\"987AB\");","lastModifiedDate":"2023-11-12"},{"lineNumber":69,"author":{"gitId":"brendanneojw"},"content":"        assertFalse(predicate.test(new PersonBuilder().withNric(\"987A\").build()));","lastModifiedDate":"2023-11-12"},{"lineNumber":70,"author":{"gitId":"brendanneojw"},"content":"    }","lastModifiedDate":"2023-11-12"},{"lineNumber":71,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":72,"author":{"gitId":"brendanneojw"},"content":"    @Test","lastModifiedDate":"2023-11-12"},{"lineNumber":73,"author":{"gitId":"brendanneojw"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-11-12"},{"lineNumber":74,"author":{"gitId":"brendanneojw"},"content":"        String keyword \u003d \"keyword1\";","lastModifiedDate":"2023-11-12"},{"lineNumber":75,"author":{"gitId":"brendanneojw"},"content":"        NricContainsKeywordsPredicate predicate \u003d new NricContainsKeywordsPredicate(keyword);","lastModifiedDate":"2023-11-12"},{"lineNumber":76,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":77,"author":{"gitId":"brendanneojw"},"content":"        String expected \u003d NricContainsKeywordsPredicate.class.getCanonicalName() + \"{keywords\u003d[\" + keyword + \"]}\";","lastModifiedDate":"2023-11-12"},{"lineNumber":78,"author":{"gitId":"brendanneojw"},"content":"        assertEquals(expected, predicate.toString());","lastModifiedDate":"2023-11-12"},{"lineNumber":79,"author":{"gitId":"brendanneojw"},"content":"    }","lastModifiedDate":"2023-11-12"},{"lineNumber":80,"author":{"gitId":"brendanneojw"},"content":"}","lastModifiedDate":"2023-11-12"}],"authorContributionMap":{"brendanneojw":80}},{"path":"src/test/java/seedu/address/model/person/predicates/PhoneContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"brendanneojw"},"content":"package seedu.address.model.person.predicates;","lastModifiedDate":"2023-11-12"},{"lineNumber":2,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":3,"author":{"gitId":"brendanneojw"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-11-12"},{"lineNumber":4,"author":{"gitId":"brendanneojw"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-11-12"},{"lineNumber":5,"author":{"gitId":"brendanneojw"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-11-12"},{"lineNumber":6,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":7,"author":{"gitId":"brendanneojw"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-11-12"},{"lineNumber":8,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":9,"author":{"gitId":"brendanneojw"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2023-11-12"},{"lineNumber":10,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":11,"author":{"gitId":"brendanneojw"},"content":"public class PhoneContainsKeywordsPredicateTest {","lastModifiedDate":"2023-11-12"},{"lineNumber":12,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":13,"author":{"gitId":"brendanneojw"},"content":"    @Test","lastModifiedDate":"2023-11-12"},{"lineNumber":14,"author":{"gitId":"brendanneojw"},"content":"    public void equals() {","lastModifiedDate":"2023-11-12"},{"lineNumber":15,"author":{"gitId":"brendanneojw"},"content":"        String firstPredicateKeyword \u003d \"first\";","lastModifiedDate":"2023-11-12"},{"lineNumber":16,"author":{"gitId":"brendanneojw"},"content":"        String secondPredicateKeyword \u003d \"first second\";","lastModifiedDate":"2023-11-12"},{"lineNumber":17,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":18,"author":{"gitId":"brendanneojw"},"content":"        PhoneContainsKeywordsPredicate firstPredicate \u003d new PhoneContainsKeywordsPredicate(firstPredicateKeyword);","lastModifiedDate":"2023-11-12"},{"lineNumber":19,"author":{"gitId":"brendanneojw"},"content":"        PhoneContainsKeywordsPredicate secondPredicate \u003d new PhoneContainsKeywordsPredicate(secondPredicateKeyword);","lastModifiedDate":"2023-11-12"},{"lineNumber":20,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":21,"author":{"gitId":"brendanneojw"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-11-12"},{"lineNumber":22,"author":{"gitId":"brendanneojw"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2023-11-12"},{"lineNumber":23,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":24,"author":{"gitId":"brendanneojw"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-11-12"},{"lineNumber":25,"author":{"gitId":"brendanneojw"},"content":"        PhoneContainsKeywordsPredicate firstPredicateCopy \u003d new PhoneContainsKeywordsPredicate(firstPredicateKeyword);","lastModifiedDate":"2023-11-12"},{"lineNumber":26,"author":{"gitId":"brendanneojw"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2023-11-12"},{"lineNumber":27,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":28,"author":{"gitId":"brendanneojw"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-11-12"},{"lineNumber":29,"author":{"gitId":"brendanneojw"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2023-11-12"},{"lineNumber":30,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":31,"author":{"gitId":"brendanneojw"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-11-12"},{"lineNumber":32,"author":{"gitId":"brendanneojw"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2023-11-12"},{"lineNumber":33,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":34,"author":{"gitId":"brendanneojw"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2023-11-12"},{"lineNumber":35,"author":{"gitId":"brendanneojw"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2023-11-12"},{"lineNumber":36,"author":{"gitId":"brendanneojw"},"content":"    }","lastModifiedDate":"2023-11-12"},{"lineNumber":37,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":38,"author":{"gitId":"brendanneojw"},"content":"    @Test","lastModifiedDate":"2023-11-12"},{"lineNumber":39,"author":{"gitId":"brendanneojw"},"content":"    public void test_phoneContainsKeywords_returnsTrue() {","lastModifiedDate":"2023-11-12"},{"lineNumber":40,"author":{"gitId":"brendanneojw"},"content":"        // One keyword","lastModifiedDate":"2023-11-12"},{"lineNumber":41,"author":{"gitId":"brendanneojw"},"content":"        PhoneContainsKeywordsPredicate predicate \u003d new PhoneContainsKeywordsPredicate(\"98765432\");","lastModifiedDate":"2023-11-12"},{"lineNumber":42,"author":{"gitId":"brendanneojw"},"content":"        assertTrue(predicate.test(new PersonBuilder().withPhone(\"98765432\").build()));","lastModifiedDate":"2023-11-12"},{"lineNumber":43,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":44,"author":{"gitId":"brendanneojw"},"content":"        // Trailing and Leading white spaces","lastModifiedDate":"2023-11-12"},{"lineNumber":45,"author":{"gitId":"brendanneojw"},"content":"        predicate \u003d new PhoneContainsKeywordsPredicate(\"   98765432    \");","lastModifiedDate":"2023-11-12"},{"lineNumber":46,"author":{"gitId":"brendanneojw"},"content":"        assertTrue(predicate.test(new PersonBuilder().withPhone(\"98765432\").build()));","lastModifiedDate":"2023-11-12"},{"lineNumber":47,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":48,"author":{"gitId":"brendanneojw"},"content":"        // Partial keyword","lastModifiedDate":"2023-11-12"},{"lineNumber":49,"author":{"gitId":"brendanneojw"},"content":"        predicate \u003d new PhoneContainsKeywordsPredicate(\"9876\");","lastModifiedDate":"2023-11-12"},{"lineNumber":50,"author":{"gitId":"brendanneojw"},"content":"        assertTrue(predicate.test(new PersonBuilder().withPhone(\"98765432\").build()));","lastModifiedDate":"2023-11-12"},{"lineNumber":51,"author":{"gitId":"brendanneojw"},"content":"    }","lastModifiedDate":"2023-11-12"},{"lineNumber":52,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":53,"author":{"gitId":"brendanneojw"},"content":"    @Test","lastModifiedDate":"2023-11-12"},{"lineNumber":54,"author":{"gitId":"brendanneojw"},"content":"    public void test_phoneDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2023-11-12"},{"lineNumber":55,"author":{"gitId":"brendanneojw"},"content":"        // Non-matching keyword","lastModifiedDate":"2023-11-12"},{"lineNumber":56,"author":{"gitId":"brendanneojw"},"content":"        PhoneContainsKeywordsPredicate predicate \u003d new PhoneContainsKeywordsPredicate(\"123\");","lastModifiedDate":"2023-11-12"},{"lineNumber":57,"author":{"gitId":"brendanneojw"},"content":"        assertFalse(predicate.test(new PersonBuilder().withPhone(\"98765432\").build()));","lastModifiedDate":"2023-11-12"},{"lineNumber":58,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":59,"author":{"gitId":"brendanneojw"},"content":"        // Keyword including white spaces","lastModifiedDate":"2023-11-12"},{"lineNumber":60,"author":{"gitId":"brendanneojw"},"content":"        predicate \u003d new PhoneContainsKeywordsPredicate(\"987 654 32\");","lastModifiedDate":"2023-11-12"},{"lineNumber":61,"author":{"gitId":"brendanneojw"},"content":"        assertFalse(predicate.test(new PersonBuilder().withPhone(\"98765432\").build()));","lastModifiedDate":"2023-11-12"},{"lineNumber":62,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":63,"author":{"gitId":"brendanneojw"},"content":"        // Keyword do not match exact","lastModifiedDate":"2023-11-12"},{"lineNumber":64,"author":{"gitId":"brendanneojw"},"content":"        predicate \u003d new PhoneContainsKeywordsPredicate(\"987654321\");","lastModifiedDate":"2023-11-12"},{"lineNumber":65,"author":{"gitId":"brendanneojw"},"content":"        assertFalse(predicate.test(new PersonBuilder().withPhone(\"98765432\").build()));","lastModifiedDate":"2023-11-12"},{"lineNumber":66,"author":{"gitId":"brendanneojw"},"content":"    }","lastModifiedDate":"2023-11-12"},{"lineNumber":67,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":68,"author":{"gitId":"brendanneojw"},"content":"    @Test","lastModifiedDate":"2023-11-12"},{"lineNumber":69,"author":{"gitId":"brendanneojw"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-11-12"},{"lineNumber":70,"author":{"gitId":"brendanneojw"},"content":"        String keyword \u003d \"keyword1\";","lastModifiedDate":"2023-11-12"},{"lineNumber":71,"author":{"gitId":"brendanneojw"},"content":"        PhoneContainsKeywordsPredicate predicate \u003d new PhoneContainsKeywordsPredicate(keyword);","lastModifiedDate":"2023-11-12"},{"lineNumber":72,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":73,"author":{"gitId":"brendanneojw"},"content":"        String expected \u003d PhoneContainsKeywordsPredicate.class.getCanonicalName() + \"{keywords\u003d[\" + keyword + \"]}\";","lastModifiedDate":"2023-11-12"},{"lineNumber":74,"author":{"gitId":"brendanneojw"},"content":"        assertEquals(expected, predicate.toString());","lastModifiedDate":"2023-11-12"},{"lineNumber":75,"author":{"gitId":"brendanneojw"},"content":"    }","lastModifiedDate":"2023-11-12"},{"lineNumber":76,"author":{"gitId":"brendanneojw"},"content":"}","lastModifiedDate":"2023-11-12"}],"authorContributionMap":{"brendanneojw":76}},{"path":"src/test/java/seedu/address/model/person/predicates/PolicyExpiryContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"brendanneojw"},"content":"package seedu.address.model.person.predicates;","lastModifiedDate":"2023-11-12"},{"lineNumber":2,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":3,"author":{"gitId":"brendanneojw"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-11-12"},{"lineNumber":4,"author":{"gitId":"brendanneojw"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-11-12"},{"lineNumber":5,"author":{"gitId":"brendanneojw"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-11-12"},{"lineNumber":6,"author":{"gitId":"brendanneojw"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_COMPANY_AMY;","lastModifiedDate":"2023-11-12"},{"lineNumber":7,"author":{"gitId":"brendanneojw"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_POLICY_ISSUE_DATE_AMY;","lastModifiedDate":"2023-11-12"},{"lineNumber":8,"author":{"gitId":"brendanneojw"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_POLICY_NO_AMY;","lastModifiedDate":"2023-11-12"},{"lineNumber":9,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":10,"author":{"gitId":"brendanneojw"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-11-12"},{"lineNumber":11,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":12,"author":{"gitId":"brendanneojw"},"content":"import seedu.address.model.policy.PolicyDate;","lastModifiedDate":"2023-11-12"},{"lineNumber":13,"author":{"gitId":"brendanneojw"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2023-11-12"},{"lineNumber":14,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":15,"author":{"gitId":"brendanneojw"},"content":"public class PolicyExpiryContainsKeywordsPredicateTest {","lastModifiedDate":"2023-11-12"},{"lineNumber":16,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":17,"author":{"gitId":"brendanneojw"},"content":"    @Test","lastModifiedDate":"2023-11-12"},{"lineNumber":18,"author":{"gitId":"brendanneojw"},"content":"    public void equals() {","lastModifiedDate":"2023-11-12"},{"lineNumber":19,"author":{"gitId":"brendanneojw"},"content":"        String firstPredicateKeyword \u003d \"first\";","lastModifiedDate":"2023-11-12"},{"lineNumber":20,"author":{"gitId":"brendanneojw"},"content":"        String secondPredicateKeyword \u003d \"first second\";","lastModifiedDate":"2023-11-12"},{"lineNumber":21,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":22,"author":{"gitId":"brendanneojw"},"content":"        PolicyExpiryContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2023-11-12"},{"lineNumber":23,"author":{"gitId":"brendanneojw"},"content":"                new PolicyExpiryContainsKeywordsPredicate(firstPredicateKeyword);","lastModifiedDate":"2023-11-12"},{"lineNumber":24,"author":{"gitId":"brendanneojw"},"content":"        PolicyExpiryContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2023-11-12"},{"lineNumber":25,"author":{"gitId":"brendanneojw"},"content":"                new PolicyExpiryContainsKeywordsPredicate(secondPredicateKeyword);","lastModifiedDate":"2023-11-12"},{"lineNumber":26,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":27,"author":{"gitId":"brendanneojw"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-11-12"},{"lineNumber":28,"author":{"gitId":"brendanneojw"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2023-11-12"},{"lineNumber":29,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":30,"author":{"gitId":"brendanneojw"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-11-12"},{"lineNumber":31,"author":{"gitId":"brendanneojw"},"content":"        PolicyExpiryContainsKeywordsPredicate firstPredicateCopy \u003d","lastModifiedDate":"2023-11-12"},{"lineNumber":32,"author":{"gitId":"brendanneojw"},"content":"                new PolicyExpiryContainsKeywordsPredicate(firstPredicateKeyword);","lastModifiedDate":"2023-11-12"},{"lineNumber":33,"author":{"gitId":"brendanneojw"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2023-11-12"},{"lineNumber":34,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":35,"author":{"gitId":"brendanneojw"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-11-12"},{"lineNumber":36,"author":{"gitId":"brendanneojw"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2023-11-12"},{"lineNumber":37,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":38,"author":{"gitId":"brendanneojw"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-11-12"},{"lineNumber":39,"author":{"gitId":"brendanneojw"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2023-11-12"},{"lineNumber":40,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":41,"author":{"gitId":"brendanneojw"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2023-11-12"},{"lineNumber":42,"author":{"gitId":"brendanneojw"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2023-11-12"},{"lineNumber":43,"author":{"gitId":"brendanneojw"},"content":"    }","lastModifiedDate":"2023-11-12"},{"lineNumber":44,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":45,"author":{"gitId":"brendanneojw"},"content":"    @Test","lastModifiedDate":"2023-11-12"},{"lineNumber":46,"author":{"gitId":"brendanneojw"},"content":"    public void test_policyExpiryContainsKeywords_returnsTrue() {","lastModifiedDate":"2023-11-12"},{"lineNumber":47,"author":{"gitId":"brendanneojw"},"content":"        // One keyword","lastModifiedDate":"2023-11-12"},{"lineNumber":48,"author":{"gitId":"brendanneojw"},"content":"        PolicyExpiryContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2023-11-12"},{"lineNumber":49,"author":{"gitId":"brendanneojw"},"content":"                new PolicyExpiryContainsKeywordsPredicate(\"11-11-2023\");","lastModifiedDate":"2023-11-12"},{"lineNumber":50,"author":{"gitId":"brendanneojw"},"content":"        assertTrue(predicate.test(new PersonBuilder().withPolicy(VALID_COMPANY_AMY,","lastModifiedDate":"2023-11-12"},{"lineNumber":51,"author":{"gitId":"brendanneojw"},"content":"                VALID_POLICY_NO_AMY, VALID_POLICY_ISSUE_DATE_AMY, \"11-11-2023\").build()));","lastModifiedDate":"2023-11-12"},{"lineNumber":52,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":53,"author":{"gitId":"brendanneojw"},"content":"        // Trailing and Leading white spaces","lastModifiedDate":"2023-11-12"},{"lineNumber":54,"author":{"gitId":"brendanneojw"},"content":"        predicate \u003d new PolicyExpiryContainsKeywordsPredicate(\"   11-11-2023    \");","lastModifiedDate":"2023-11-12"},{"lineNumber":55,"author":{"gitId":"brendanneojw"},"content":"        assertTrue(predicate.test(new PersonBuilder().withPolicy(VALID_COMPANY_AMY,","lastModifiedDate":"2023-11-12"},{"lineNumber":56,"author":{"gitId":"brendanneojw"},"content":"                VALID_POLICY_NO_AMY, VALID_POLICY_ISSUE_DATE_AMY, \"11-11-2023\").build()));","lastModifiedDate":"2023-11-12"},{"lineNumber":57,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":58,"author":{"gitId":"brendanneojw"},"content":"        // Partial keyword","lastModifiedDate":"2023-11-12"},{"lineNumber":59,"author":{"gitId":"brendanneojw"},"content":"        predicate \u003d new PolicyExpiryContainsKeywordsPredicate(\"11-11\");","lastModifiedDate":"2023-11-12"},{"lineNumber":60,"author":{"gitId":"brendanneojw"},"content":"        assertTrue(predicate.test(new PersonBuilder().withPolicy(VALID_COMPANY_AMY,","lastModifiedDate":"2023-11-12"},{"lineNumber":61,"author":{"gitId":"brendanneojw"},"content":"                VALID_POLICY_NO_AMY, VALID_POLICY_ISSUE_DATE_AMY, \"11-11-2023\").build()));","lastModifiedDate":"2023-11-12"},{"lineNumber":62,"author":{"gitId":"brendanneojw"},"content":"    }","lastModifiedDate":"2023-11-12"},{"lineNumber":63,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":64,"author":{"gitId":"brendanneojw"},"content":"    @Test","lastModifiedDate":"2023-11-12"},{"lineNumber":65,"author":{"gitId":"brendanneojw"},"content":"    public void test_policyExpiryDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2023-11-12"},{"lineNumber":66,"author":{"gitId":"brendanneojw"},"content":"        // Non-matching keyword","lastModifiedDate":"2023-11-12"},{"lineNumber":67,"author":{"gitId":"brendanneojw"},"content":"        PolicyExpiryContainsKeywordsPredicate predicate \u003d new PolicyExpiryContainsKeywordsPredicate(\"12-12-2022\");","lastModifiedDate":"2023-11-12"},{"lineNumber":68,"author":{"gitId":"brendanneojw"},"content":"        assertFalse(predicate.test(new PersonBuilder().withPolicy(VALID_COMPANY_AMY,","lastModifiedDate":"2023-11-12"},{"lineNumber":69,"author":{"gitId":"brendanneojw"},"content":"                VALID_POLICY_NO_AMY, VALID_POLICY_ISSUE_DATE_AMY, \"11-11-2023\").build()));","lastModifiedDate":"2023-11-12"},{"lineNumber":70,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":71,"author":{"gitId":"brendanneojw"},"content":"        // Keyword only matches word that is separated by white space","lastModifiedDate":"2023-11-12"},{"lineNumber":72,"author":{"gitId":"brendanneojw"},"content":"        predicate \u003d new PolicyExpiryContainsKeywordsPredicate(\"11 - 11\");","lastModifiedDate":"2023-11-12"},{"lineNumber":73,"author":{"gitId":"brendanneojw"},"content":"        assertFalse(predicate.test(new PersonBuilder().withPolicy(VALID_COMPANY_AMY,","lastModifiedDate":"2023-11-12"},{"lineNumber":74,"author":{"gitId":"brendanneojw"},"content":"                VALID_POLICY_NO_AMY, VALID_POLICY_ISSUE_DATE_AMY, \"11-11-2023\").build()));","lastModifiedDate":"2023-11-12"},{"lineNumber":75,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":76,"author":{"gitId":"brendanneojw"},"content":"        // Keyword do not match exact","lastModifiedDate":"2023-11-12"},{"lineNumber":77,"author":{"gitId":"brendanneojw"},"content":"        predicate \u003d new PolicyExpiryContainsKeywordsPredicate(\"11-11-2022\");","lastModifiedDate":"2023-11-12"},{"lineNumber":78,"author":{"gitId":"brendanneojw"},"content":"        assertFalse(predicate.test(new PersonBuilder().withPolicy(VALID_COMPANY_AMY,","lastModifiedDate":"2023-11-12"},{"lineNumber":79,"author":{"gitId":"brendanneojw"},"content":"                VALID_POLICY_NO_AMY, VALID_POLICY_ISSUE_DATE_AMY, \"11-11-2023\").build()));","lastModifiedDate":"2023-11-12"},{"lineNumber":80,"author":{"gitId":"brendanneojw"},"content":"    }","lastModifiedDate":"2023-11-12"},{"lineNumber":81,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":82,"author":{"gitId":"brendanneojw"},"content":"    @Test","lastModifiedDate":"2023-11-12"},{"lineNumber":83,"author":{"gitId":"brendanneojw"},"content":"    public void test_policyExpiryIsDefault_returnsFalse() {","lastModifiedDate":"2023-11-12"},{"lineNumber":84,"author":{"gitId":"brendanneojw"},"content":"        // Policy expiry date is the default parameter","lastModifiedDate":"2023-11-12"},{"lineNumber":85,"author":{"gitId":"brendanneojw"},"content":"        PolicyExpiryContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2023-11-12"},{"lineNumber":86,"author":{"gitId":"brendanneojw"},"content":"                new PolicyExpiryContainsKeywordsPredicate(\"11-11-2023\");","lastModifiedDate":"2023-11-12"},{"lineNumber":87,"author":{"gitId":"brendanneojw"},"content":"        assertFalse(predicate.test(new PersonBuilder().withPolicy(VALID_COMPANY_AMY, VALID_POLICY_NO_AMY,","lastModifiedDate":"2023-11-12"},{"lineNumber":88,"author":{"gitId":"brendanneojw"},"content":"                VALID_POLICY_ISSUE_DATE_AMY, PolicyDate.DEFAULT_VALUE).build()));","lastModifiedDate":"2023-11-12"},{"lineNumber":89,"author":{"gitId":"brendanneojw"},"content":"    }","lastModifiedDate":"2023-11-12"},{"lineNumber":90,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":91,"author":{"gitId":"brendanneojw"},"content":"    @Test","lastModifiedDate":"2023-11-12"},{"lineNumber":92,"author":{"gitId":"brendanneojw"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-11-12"},{"lineNumber":93,"author":{"gitId":"brendanneojw"},"content":"        String keyword \u003d \"keyword1\";","lastModifiedDate":"2023-11-12"},{"lineNumber":94,"author":{"gitId":"brendanneojw"},"content":"        PolicyExpiryContainsKeywordsPredicate predicate \u003d new PolicyExpiryContainsKeywordsPredicate(keyword);","lastModifiedDate":"2023-11-12"},{"lineNumber":95,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":96,"author":{"gitId":"brendanneojw"},"content":"        String expected \u003d PolicyExpiryContainsKeywordsPredicate.class.getCanonicalName() + \"{keywords\u003d[\"","lastModifiedDate":"2023-11-12"},{"lineNumber":97,"author":{"gitId":"brendanneojw"},"content":"                + keyword + \"]}\";","lastModifiedDate":"2023-11-12"},{"lineNumber":98,"author":{"gitId":"brendanneojw"},"content":"        assertEquals(expected, predicate.toString());","lastModifiedDate":"2023-11-12"},{"lineNumber":99,"author":{"gitId":"brendanneojw"},"content":"    }","lastModifiedDate":"2023-11-12"},{"lineNumber":100,"author":{"gitId":"brendanneojw"},"content":"}","lastModifiedDate":"2023-11-12"}],"authorContributionMap":{"brendanneojw":100}},{"path":"src/test/java/seedu/address/model/person/predicates/PolicyIssueContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"brendanneojw"},"content":"package seedu.address.model.person.predicates;","lastModifiedDate":"2023-11-12"},{"lineNumber":2,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":3,"author":{"gitId":"brendanneojw"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-11-12"},{"lineNumber":4,"author":{"gitId":"brendanneojw"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-11-12"},{"lineNumber":5,"author":{"gitId":"brendanneojw"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-11-12"},{"lineNumber":6,"author":{"gitId":"brendanneojw"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_COMPANY_AMY;","lastModifiedDate":"2023-11-12"},{"lineNumber":7,"author":{"gitId":"brendanneojw"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_POLICY_EXPIRY_DATE_AMY;","lastModifiedDate":"2023-11-12"},{"lineNumber":8,"author":{"gitId":"brendanneojw"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_POLICY_NO_AMY;","lastModifiedDate":"2023-11-12"},{"lineNumber":9,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":10,"author":{"gitId":"brendanneojw"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-11-12"},{"lineNumber":11,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":12,"author":{"gitId":"brendanneojw"},"content":"import seedu.address.model.policy.PolicyDate;","lastModifiedDate":"2023-11-12"},{"lineNumber":13,"author":{"gitId":"brendanneojw"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2023-11-12"},{"lineNumber":14,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":15,"author":{"gitId":"brendanneojw"},"content":"public class PolicyIssueContainsKeywordsPredicateTest {","lastModifiedDate":"2023-11-12"},{"lineNumber":16,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":17,"author":{"gitId":"brendanneojw"},"content":"    @Test","lastModifiedDate":"2023-11-12"},{"lineNumber":18,"author":{"gitId":"brendanneojw"},"content":"    public void equals() {","lastModifiedDate":"2023-11-12"},{"lineNumber":19,"author":{"gitId":"brendanneojw"},"content":"        String firstPredicateKeyword \u003d \"first\";","lastModifiedDate":"2023-11-12"},{"lineNumber":20,"author":{"gitId":"brendanneojw"},"content":"        String secondPredicateKeyword \u003d \"first second\";","lastModifiedDate":"2023-11-12"},{"lineNumber":21,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":22,"author":{"gitId":"brendanneojw"},"content":"        PolicyIssueContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2023-11-12"},{"lineNumber":23,"author":{"gitId":"brendanneojw"},"content":"                new PolicyIssueContainsKeywordsPredicate(firstPredicateKeyword);","lastModifiedDate":"2023-11-12"},{"lineNumber":24,"author":{"gitId":"brendanneojw"},"content":"        PolicyIssueContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2023-11-12"},{"lineNumber":25,"author":{"gitId":"brendanneojw"},"content":"                new PolicyIssueContainsKeywordsPredicate(secondPredicateKeyword);","lastModifiedDate":"2023-11-12"},{"lineNumber":26,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":27,"author":{"gitId":"brendanneojw"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-11-12"},{"lineNumber":28,"author":{"gitId":"brendanneojw"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2023-11-12"},{"lineNumber":29,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":30,"author":{"gitId":"brendanneojw"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-11-12"},{"lineNumber":31,"author":{"gitId":"brendanneojw"},"content":"        PolicyIssueContainsKeywordsPredicate firstPredicateCopy \u003d","lastModifiedDate":"2023-11-12"},{"lineNumber":32,"author":{"gitId":"brendanneojw"},"content":"                new PolicyIssueContainsKeywordsPredicate(firstPredicateKeyword);","lastModifiedDate":"2023-11-12"},{"lineNumber":33,"author":{"gitId":"brendanneojw"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2023-11-12"},{"lineNumber":34,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":35,"author":{"gitId":"brendanneojw"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-11-12"},{"lineNumber":36,"author":{"gitId":"brendanneojw"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2023-11-12"},{"lineNumber":37,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":38,"author":{"gitId":"brendanneojw"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-11-12"},{"lineNumber":39,"author":{"gitId":"brendanneojw"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2023-11-12"},{"lineNumber":40,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":41,"author":{"gitId":"brendanneojw"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2023-11-12"},{"lineNumber":42,"author":{"gitId":"brendanneojw"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2023-11-12"},{"lineNumber":43,"author":{"gitId":"brendanneojw"},"content":"    }","lastModifiedDate":"2023-11-12"},{"lineNumber":44,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":45,"author":{"gitId":"brendanneojw"},"content":"    @Test","lastModifiedDate":"2023-11-12"},{"lineNumber":46,"author":{"gitId":"brendanneojw"},"content":"    public void test_policyIssueContainsKeywords_returnsTrue() {","lastModifiedDate":"2023-11-12"},{"lineNumber":47,"author":{"gitId":"brendanneojw"},"content":"        // One keyword","lastModifiedDate":"2023-11-12"},{"lineNumber":48,"author":{"gitId":"brendanneojw"},"content":"        PolicyIssueContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2023-11-12"},{"lineNumber":49,"author":{"gitId":"brendanneojw"},"content":"                new PolicyIssueContainsKeywordsPredicate(\"11-11-2023\");","lastModifiedDate":"2023-11-12"},{"lineNumber":50,"author":{"gitId":"brendanneojw"},"content":"        assertTrue(predicate.test(new PersonBuilder().withPolicy(VALID_COMPANY_AMY,","lastModifiedDate":"2023-11-12"},{"lineNumber":51,"author":{"gitId":"brendanneojw"},"content":"                VALID_POLICY_NO_AMY, \"11-11-2023\", VALID_POLICY_EXPIRY_DATE_AMY).build()));","lastModifiedDate":"2023-11-12"},{"lineNumber":52,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":53,"author":{"gitId":"brendanneojw"},"content":"        // Trailing and Leading white spaces","lastModifiedDate":"2023-11-12"},{"lineNumber":54,"author":{"gitId":"brendanneojw"},"content":"        predicate \u003d new PolicyIssueContainsKeywordsPredicate(\"   11-11-2023    \");","lastModifiedDate":"2023-11-12"},{"lineNumber":55,"author":{"gitId":"brendanneojw"},"content":"        assertTrue(predicate.test(new PersonBuilder().withPolicy(VALID_COMPANY_AMY,","lastModifiedDate":"2023-11-12"},{"lineNumber":56,"author":{"gitId":"brendanneojw"},"content":"                VALID_POLICY_NO_AMY, \"11-11-2023\", VALID_POLICY_EXPIRY_DATE_AMY).build()));","lastModifiedDate":"2023-11-12"},{"lineNumber":57,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":58,"author":{"gitId":"brendanneojw"},"content":"        // Partial keyword","lastModifiedDate":"2023-11-12"},{"lineNumber":59,"author":{"gitId":"brendanneojw"},"content":"        predicate \u003d new PolicyIssueContainsKeywordsPredicate(\"11-11\");","lastModifiedDate":"2023-11-12"},{"lineNumber":60,"author":{"gitId":"brendanneojw"},"content":"        assertTrue(predicate.test(new PersonBuilder().withPolicy(VALID_COMPANY_AMY,","lastModifiedDate":"2023-11-12"},{"lineNumber":61,"author":{"gitId":"brendanneojw"},"content":"                VALID_POLICY_NO_AMY, \"11-11-2023\", VALID_POLICY_EXPIRY_DATE_AMY).build()));","lastModifiedDate":"2023-11-12"},{"lineNumber":62,"author":{"gitId":"brendanneojw"},"content":"    }","lastModifiedDate":"2023-11-12"},{"lineNumber":63,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":64,"author":{"gitId":"brendanneojw"},"content":"    @Test","lastModifiedDate":"2023-11-12"},{"lineNumber":65,"author":{"gitId":"brendanneojw"},"content":"    public void test_policyIssueDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2023-11-12"},{"lineNumber":66,"author":{"gitId":"brendanneojw"},"content":"        // Non-matching keyword","lastModifiedDate":"2023-11-12"},{"lineNumber":67,"author":{"gitId":"brendanneojw"},"content":"        PolicyIssueContainsKeywordsPredicate predicate \u003d new PolicyIssueContainsKeywordsPredicate(\"12-12-2022\");","lastModifiedDate":"2023-11-12"},{"lineNumber":68,"author":{"gitId":"brendanneojw"},"content":"        assertFalse(predicate.test(new PersonBuilder().withPolicy(VALID_COMPANY_AMY,","lastModifiedDate":"2023-11-12"},{"lineNumber":69,"author":{"gitId":"brendanneojw"},"content":"                VALID_POLICY_NO_AMY, \"11-11-2023\", VALID_POLICY_EXPIRY_DATE_AMY).build()));","lastModifiedDate":"2023-11-12"},{"lineNumber":70,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":71,"author":{"gitId":"brendanneojw"},"content":"        // Keyword only matches word that is separated by white space","lastModifiedDate":"2023-11-12"},{"lineNumber":72,"author":{"gitId":"brendanneojw"},"content":"        predicate \u003d new PolicyIssueContainsKeywordsPredicate(\"11 - 11\");","lastModifiedDate":"2023-11-12"},{"lineNumber":73,"author":{"gitId":"brendanneojw"},"content":"        assertFalse(predicate.test(new PersonBuilder().withPolicy(VALID_COMPANY_AMY,","lastModifiedDate":"2023-11-12"},{"lineNumber":74,"author":{"gitId":"brendanneojw"},"content":"                VALID_POLICY_NO_AMY, \"11-11-2023\", VALID_POLICY_EXPIRY_DATE_AMY).build()));","lastModifiedDate":"2023-11-12"},{"lineNumber":75,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":76,"author":{"gitId":"brendanneojw"},"content":"        // Keyword do not match exact","lastModifiedDate":"2023-11-12"},{"lineNumber":77,"author":{"gitId":"brendanneojw"},"content":"        predicate \u003d new PolicyIssueContainsKeywordsPredicate(\"11-11-2022\");","lastModifiedDate":"2023-11-12"},{"lineNumber":78,"author":{"gitId":"brendanneojw"},"content":"        assertFalse(predicate.test(new PersonBuilder().withPolicy(VALID_COMPANY_AMY,","lastModifiedDate":"2023-11-12"},{"lineNumber":79,"author":{"gitId":"brendanneojw"},"content":"                VALID_POLICY_NO_AMY, \"11-11-2023\", VALID_POLICY_EXPIRY_DATE_AMY).build()));","lastModifiedDate":"2023-11-12"},{"lineNumber":80,"author":{"gitId":"brendanneojw"},"content":"    }","lastModifiedDate":"2023-11-12"},{"lineNumber":81,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":82,"author":{"gitId":"brendanneojw"},"content":"    @Test","lastModifiedDate":"2023-11-12"},{"lineNumber":83,"author":{"gitId":"brendanneojw"},"content":"    public void test_policyIssueIsDefault_returnsFalse() {","lastModifiedDate":"2023-11-12"},{"lineNumber":84,"author":{"gitId":"brendanneojw"},"content":"        // Policy issue date is the default parameter","lastModifiedDate":"2023-11-12"},{"lineNumber":85,"author":{"gitId":"brendanneojw"},"content":"        PolicyIssueContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2023-11-12"},{"lineNumber":86,"author":{"gitId":"brendanneojw"},"content":"                new PolicyIssueContainsKeywordsPredicate(\"11-11-2023\");","lastModifiedDate":"2023-11-12"},{"lineNumber":87,"author":{"gitId":"brendanneojw"},"content":"        assertFalse(predicate.test(new PersonBuilder().withPolicy(VALID_COMPANY_AMY, VALID_POLICY_NO_AMY,","lastModifiedDate":"2023-11-12"},{"lineNumber":88,"author":{"gitId":"brendanneojw"},"content":"                PolicyDate.DEFAULT_VALUE, VALID_POLICY_EXPIRY_DATE_AMY).build()));","lastModifiedDate":"2023-11-12"},{"lineNumber":89,"author":{"gitId":"brendanneojw"},"content":"    }","lastModifiedDate":"2023-11-12"},{"lineNumber":90,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":91,"author":{"gitId":"brendanneojw"},"content":"    @Test","lastModifiedDate":"2023-11-12"},{"lineNumber":92,"author":{"gitId":"brendanneojw"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-11-12"},{"lineNumber":93,"author":{"gitId":"brendanneojw"},"content":"        String keyword \u003d \"keyword1\";","lastModifiedDate":"2023-11-12"},{"lineNumber":94,"author":{"gitId":"brendanneojw"},"content":"        PolicyIssueContainsKeywordsPredicate predicate \u003d new PolicyIssueContainsKeywordsPredicate(keyword);","lastModifiedDate":"2023-11-12"},{"lineNumber":95,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":96,"author":{"gitId":"brendanneojw"},"content":"        String expected \u003d PolicyIssueContainsKeywordsPredicate.class.getCanonicalName() + \"{keywords\u003d[\"","lastModifiedDate":"2023-11-12"},{"lineNumber":97,"author":{"gitId":"brendanneojw"},"content":"                + keyword + \"]}\";","lastModifiedDate":"2023-11-12"},{"lineNumber":98,"author":{"gitId":"brendanneojw"},"content":"        assertEquals(expected, predicate.toString());","lastModifiedDate":"2023-11-12"},{"lineNumber":99,"author":{"gitId":"brendanneojw"},"content":"    }","lastModifiedDate":"2023-11-12"},{"lineNumber":100,"author":{"gitId":"brendanneojw"},"content":"}","lastModifiedDate":"2023-11-12"}],"authorContributionMap":{"brendanneojw":100}},{"path":"src/test/java/seedu/address/model/person/predicates/PolicyNumberContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"brendanneojw"},"content":"package seedu.address.model.person.predicates;","lastModifiedDate":"2023-11-12"},{"lineNumber":2,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":3,"author":{"gitId":"brendanneojw"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-11-12"},{"lineNumber":4,"author":{"gitId":"brendanneojw"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-11-12"},{"lineNumber":5,"author":{"gitId":"brendanneojw"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-11-12"},{"lineNumber":6,"author":{"gitId":"brendanneojw"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_COMPANY_AMY;","lastModifiedDate":"2023-11-12"},{"lineNumber":7,"author":{"gitId":"brendanneojw"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_POLICY_EXPIRY_DATE_AMY;","lastModifiedDate":"2023-11-12"},{"lineNumber":8,"author":{"gitId":"brendanneojw"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_POLICY_ISSUE_DATE_AMY;","lastModifiedDate":"2023-11-12"},{"lineNumber":9,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":10,"author":{"gitId":"brendanneojw"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-11-12"},{"lineNumber":11,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":12,"author":{"gitId":"brendanneojw"},"content":"import seedu.address.model.policy.PolicyNumber;","lastModifiedDate":"2023-11-12"},{"lineNumber":13,"author":{"gitId":"brendanneojw"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2023-11-12"},{"lineNumber":14,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":15,"author":{"gitId":"brendanneojw"},"content":"public class PolicyNumberContainsKeywordsPredicateTest {","lastModifiedDate":"2023-11-12"},{"lineNumber":16,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":17,"author":{"gitId":"brendanneojw"},"content":"    @Test","lastModifiedDate":"2023-11-12"},{"lineNumber":18,"author":{"gitId":"brendanneojw"},"content":"    public void equals() {","lastModifiedDate":"2023-11-12"},{"lineNumber":19,"author":{"gitId":"brendanneojw"},"content":"        String firstPredicateKeyword \u003d \"first\";","lastModifiedDate":"2023-11-12"},{"lineNumber":20,"author":{"gitId":"brendanneojw"},"content":"        String secondPredicateKeyword \u003d \"first second\";","lastModifiedDate":"2023-11-12"},{"lineNumber":21,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":22,"author":{"gitId":"brendanneojw"},"content":"        PolicyNumberContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2023-11-12"},{"lineNumber":23,"author":{"gitId":"brendanneojw"},"content":"                new PolicyNumberContainsKeywordsPredicate(firstPredicateKeyword);","lastModifiedDate":"2023-11-12"},{"lineNumber":24,"author":{"gitId":"brendanneojw"},"content":"        PolicyNumberContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2023-11-12"},{"lineNumber":25,"author":{"gitId":"brendanneojw"},"content":"                new PolicyNumberContainsKeywordsPredicate(secondPredicateKeyword);","lastModifiedDate":"2023-11-12"},{"lineNumber":26,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":27,"author":{"gitId":"brendanneojw"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-11-12"},{"lineNumber":28,"author":{"gitId":"brendanneojw"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2023-11-12"},{"lineNumber":29,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":30,"author":{"gitId":"brendanneojw"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-11-12"},{"lineNumber":31,"author":{"gitId":"brendanneojw"},"content":"        PolicyNumberContainsKeywordsPredicate firstPredicateCopy \u003d","lastModifiedDate":"2023-11-12"},{"lineNumber":32,"author":{"gitId":"brendanneojw"},"content":"                new PolicyNumberContainsKeywordsPredicate(firstPredicateKeyword);","lastModifiedDate":"2023-11-12"},{"lineNumber":33,"author":{"gitId":"brendanneojw"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2023-11-12"},{"lineNumber":34,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":35,"author":{"gitId":"brendanneojw"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-11-12"},{"lineNumber":36,"author":{"gitId":"brendanneojw"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2023-11-12"},{"lineNumber":37,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":38,"author":{"gitId":"brendanneojw"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-11-12"},{"lineNumber":39,"author":{"gitId":"brendanneojw"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2023-11-12"},{"lineNumber":40,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":41,"author":{"gitId":"brendanneojw"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2023-11-12"},{"lineNumber":42,"author":{"gitId":"brendanneojw"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2023-11-12"},{"lineNumber":43,"author":{"gitId":"brendanneojw"},"content":"    }","lastModifiedDate":"2023-11-12"},{"lineNumber":44,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":45,"author":{"gitId":"brendanneojw"},"content":"    @Test","lastModifiedDate":"2023-11-12"},{"lineNumber":46,"author":{"gitId":"brendanneojw"},"content":"    public void test_policyNumberContainsKeywords_returnsTrue() {","lastModifiedDate":"2023-11-12"},{"lineNumber":47,"author":{"gitId":"brendanneojw"},"content":"        // One keyword","lastModifiedDate":"2023-11-12"},{"lineNumber":48,"author":{"gitId":"brendanneojw"},"content":"        PolicyNumberContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2023-11-12"},{"lineNumber":49,"author":{"gitId":"brendanneojw"},"content":"                new PolicyNumberContainsKeywordsPredicate(\"FWD1123\");","lastModifiedDate":"2023-11-12"},{"lineNumber":50,"author":{"gitId":"brendanneojw"},"content":"        assertTrue(predicate.test(new PersonBuilder().withPolicy(VALID_COMPANY_AMY,","lastModifiedDate":"2023-11-12"},{"lineNumber":51,"author":{"gitId":"brendanneojw"},"content":"                \"FWD1123\", VALID_POLICY_ISSUE_DATE_AMY, VALID_POLICY_EXPIRY_DATE_AMY).build()));","lastModifiedDate":"2023-11-12"},{"lineNumber":52,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":53,"author":{"gitId":"brendanneojw"},"content":"        // Trailing and Leading white spaces","lastModifiedDate":"2023-11-12"},{"lineNumber":54,"author":{"gitId":"brendanneojw"},"content":"        predicate \u003d new PolicyNumberContainsKeywordsPredicate(\"   FWD1123    \");","lastModifiedDate":"2023-11-12"},{"lineNumber":55,"author":{"gitId":"brendanneojw"},"content":"        assertTrue(predicate.test(new PersonBuilder().withPolicy(VALID_COMPANY_AMY,","lastModifiedDate":"2023-11-12"},{"lineNumber":56,"author":{"gitId":"brendanneojw"},"content":"                \"FWD1123\", VALID_POLICY_ISSUE_DATE_AMY, VALID_POLICY_EXPIRY_DATE_AMY).build()));","lastModifiedDate":"2023-11-12"},{"lineNumber":57,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":58,"author":{"gitId":"brendanneojw"},"content":"        // Mixed-case keywords","lastModifiedDate":"2023-11-12"},{"lineNumber":59,"author":{"gitId":"brendanneojw"},"content":"        predicate \u003d new PolicyNumberContainsKeywordsPredicate(\"fwD1123\");","lastModifiedDate":"2023-11-12"},{"lineNumber":60,"author":{"gitId":"brendanneojw"},"content":"        assertTrue(predicate.test(new PersonBuilder().withPolicy(VALID_COMPANY_AMY,","lastModifiedDate":"2023-11-12"},{"lineNumber":61,"author":{"gitId":"brendanneojw"},"content":"                \"FWD1123\", VALID_POLICY_ISSUE_DATE_AMY, VALID_POLICY_EXPIRY_DATE_AMY).build()));","lastModifiedDate":"2023-11-12"},{"lineNumber":62,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":63,"author":{"gitId":"brendanneojw"},"content":"        // Partial keyword","lastModifiedDate":"2023-11-12"},{"lineNumber":64,"author":{"gitId":"brendanneojw"},"content":"        predicate \u003d new PolicyNumberContainsKeywordsPredicate(\"FW\");","lastModifiedDate":"2023-11-12"},{"lineNumber":65,"author":{"gitId":"brendanneojw"},"content":"        assertTrue(predicate.test(new PersonBuilder().withPolicy(VALID_COMPANY_AMY,","lastModifiedDate":"2023-11-12"},{"lineNumber":66,"author":{"gitId":"brendanneojw"},"content":"                \"FWD1123\", VALID_POLICY_ISSUE_DATE_AMY, VALID_POLICY_EXPIRY_DATE_AMY).build()));","lastModifiedDate":"2023-11-12"},{"lineNumber":67,"author":{"gitId":"brendanneojw"},"content":"    }","lastModifiedDate":"2023-11-12"},{"lineNumber":68,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":69,"author":{"gitId":"brendanneojw"},"content":"    @Test","lastModifiedDate":"2023-11-12"},{"lineNumber":70,"author":{"gitId":"brendanneojw"},"content":"    public void test_policyNumberDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2023-11-12"},{"lineNumber":71,"author":{"gitId":"brendanneojw"},"content":"        // Non-matching keyword","lastModifiedDate":"2023-11-12"},{"lineNumber":72,"author":{"gitId":"brendanneojw"},"content":"        PolicyNumberContainsKeywordsPredicate predicate \u003d new PolicyNumberContainsKeywordsPredicate(\"ABC999\");","lastModifiedDate":"2023-11-12"},{"lineNumber":73,"author":{"gitId":"brendanneojw"},"content":"        assertFalse(predicate.test(new PersonBuilder().withPolicy(VALID_COMPANY_AMY,","lastModifiedDate":"2023-11-12"},{"lineNumber":74,"author":{"gitId":"brendanneojw"},"content":"                \"FWD1123\", VALID_POLICY_ISSUE_DATE_AMY, VALID_POLICY_EXPIRY_DATE_AMY).build()));","lastModifiedDate":"2023-11-12"},{"lineNumber":75,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":76,"author":{"gitId":"brendanneojw"},"content":"        // Keyword only matches word that is separated by white space","lastModifiedDate":"2023-11-12"},{"lineNumber":77,"author":{"gitId":"brendanneojw"},"content":"        predicate \u003d new PolicyNumberContainsKeywordsPredicate(\"FWD 11 23\");","lastModifiedDate":"2023-11-12"},{"lineNumber":78,"author":{"gitId":"brendanneojw"},"content":"        assertFalse(predicate.test(new PersonBuilder().withPolicy(VALID_COMPANY_AMY,","lastModifiedDate":"2023-11-12"},{"lineNumber":79,"author":{"gitId":"brendanneojw"},"content":"                \"FWD1123\", VALID_POLICY_ISSUE_DATE_AMY, VALID_POLICY_EXPIRY_DATE_AMY).build()));","lastModifiedDate":"2023-11-12"},{"lineNumber":80,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":81,"author":{"gitId":"brendanneojw"},"content":"        // Keyword do not match exact","lastModifiedDate":"2023-11-12"},{"lineNumber":82,"author":{"gitId":"brendanneojw"},"content":"        predicate \u003d new PolicyNumberContainsKeywordsPredicate(\"FWD11234\");","lastModifiedDate":"2023-11-12"},{"lineNumber":83,"author":{"gitId":"brendanneojw"},"content":"        assertFalse(predicate.test(new PersonBuilder().withPolicy(VALID_COMPANY_AMY,","lastModifiedDate":"2023-11-12"},{"lineNumber":84,"author":{"gitId":"brendanneojw"},"content":"                \"FWD1123\", VALID_POLICY_ISSUE_DATE_AMY, VALID_POLICY_EXPIRY_DATE_AMY).build()));","lastModifiedDate":"2023-11-12"},{"lineNumber":85,"author":{"gitId":"brendanneojw"},"content":"    }","lastModifiedDate":"2023-11-12"},{"lineNumber":86,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":87,"author":{"gitId":"brendanneojw"},"content":"    @Test","lastModifiedDate":"2023-11-12"},{"lineNumber":88,"author":{"gitId":"brendanneojw"},"content":"    public void test_policyNumberIsDefault_returnsFalse() {","lastModifiedDate":"2023-11-12"},{"lineNumber":89,"author":{"gitId":"brendanneojw"},"content":"        // Policy number is the default parameter","lastModifiedDate":"2023-11-12"},{"lineNumber":90,"author":{"gitId":"brendanneojw"},"content":"        PolicyNumberContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2023-11-12"},{"lineNumber":91,"author":{"gitId":"brendanneojw"},"content":"                new PolicyNumberContainsKeywordsPredicate(\"FWD1123\");","lastModifiedDate":"2023-11-12"},{"lineNumber":92,"author":{"gitId":"brendanneojw"},"content":"        assertFalse(predicate.test(new PersonBuilder().withPolicy(VALID_COMPANY_AMY, PolicyNumber.DEFAULT_VALUE,","lastModifiedDate":"2023-11-12"},{"lineNumber":93,"author":{"gitId":"brendanneojw"},"content":"                VALID_POLICY_ISSUE_DATE_AMY, VALID_POLICY_EXPIRY_DATE_AMY).build()));","lastModifiedDate":"2023-11-12"},{"lineNumber":94,"author":{"gitId":"brendanneojw"},"content":"    }","lastModifiedDate":"2023-11-12"},{"lineNumber":95,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":96,"author":{"gitId":"brendanneojw"},"content":"    @Test","lastModifiedDate":"2023-11-12"},{"lineNumber":97,"author":{"gitId":"brendanneojw"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-11-12"},{"lineNumber":98,"author":{"gitId":"brendanneojw"},"content":"        String keyword \u003d \"keyword1\";","lastModifiedDate":"2023-11-12"},{"lineNumber":99,"author":{"gitId":"brendanneojw"},"content":"        PolicyNumberContainsKeywordsPredicate predicate \u003d new PolicyNumberContainsKeywordsPredicate(keyword);","lastModifiedDate":"2023-11-12"},{"lineNumber":100,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":101,"author":{"gitId":"brendanneojw"},"content":"        String expected \u003d PolicyNumberContainsKeywordsPredicate.class.getCanonicalName() + \"{keywords\u003d[\"","lastModifiedDate":"2023-11-12"},{"lineNumber":102,"author":{"gitId":"brendanneojw"},"content":"                + keyword + \"]}\";","lastModifiedDate":"2023-11-12"},{"lineNumber":103,"author":{"gitId":"brendanneojw"},"content":"        assertEquals(expected, predicate.toString());","lastModifiedDate":"2023-11-12"},{"lineNumber":104,"author":{"gitId":"brendanneojw"},"content":"    }","lastModifiedDate":"2023-11-12"},{"lineNumber":105,"author":{"gitId":"brendanneojw"},"content":"}","lastModifiedDate":"2023-11-12"}],"authorContributionMap":{"brendanneojw":105}},{"path":"src/test/java/seedu/address/model/person/predicates/RemindPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"brendanneojw"},"content":"package seedu.address.model.person.predicates;","lastModifiedDate":"2023-11-12"},{"lineNumber":2,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":3,"author":{"gitId":"brendanneojw"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-11-12"},{"lineNumber":4,"author":{"gitId":"brendanneojw"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-11-12"},{"lineNumber":5,"author":{"gitId":"brendanneojw"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-11-12"},{"lineNumber":6,"author":{"gitId":"brendanneojw"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_COMPANY_AMY;","lastModifiedDate":"2023-11-12"},{"lineNumber":7,"author":{"gitId":"brendanneojw"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_POLICY_ISSUE_DATE_AMY;","lastModifiedDate":"2023-11-12"},{"lineNumber":8,"author":{"gitId":"brendanneojw"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_POLICY_NO_AMY;","lastModifiedDate":"2023-11-12"},{"lineNumber":9,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":10,"author":{"gitId":"brendanneojw"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-11-12"},{"lineNumber":11,"author":{"gitId":"brendanneojw"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-11-12"},{"lineNumber":12,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":13,"author":{"gitId":"brendanneojw"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-11-12"},{"lineNumber":14,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":15,"author":{"gitId":"brendanneojw"},"content":"import seedu.address.model.policy.PolicyDate;","lastModifiedDate":"2023-11-12"},{"lineNumber":16,"author":{"gitId":"brendanneojw"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2023-11-12"},{"lineNumber":17,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":18,"author":{"gitId":"brendanneojw"},"content":"public class RemindPredicateTest {","lastModifiedDate":"2023-11-12"},{"lineNumber":19,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":20,"author":{"gitId":"brendanneojw"},"content":"    @Test","lastModifiedDate":"2023-11-12"},{"lineNumber":21,"author":{"gitId":"brendanneojw"},"content":"    public void equals() {","lastModifiedDate":"2023-11-12"},{"lineNumber":22,"author":{"gitId":"brendanneojw"},"content":"        int firstPredicateDay \u003d 0;","lastModifiedDate":"2023-11-12"},{"lineNumber":23,"author":{"gitId":"brendanneojw"},"content":"        int secondPredicateDay \u003d 30;","lastModifiedDate":"2023-11-12"},{"lineNumber":24,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":25,"author":{"gitId":"brendanneojw"},"content":"        RemindPredicate firstPredicate \u003d new RemindPredicate(firstPredicateDay);","lastModifiedDate":"2023-11-12"},{"lineNumber":26,"author":{"gitId":"brendanneojw"},"content":"        RemindPredicate secondPredicate \u003d new RemindPredicate(secondPredicateDay);","lastModifiedDate":"2023-11-12"},{"lineNumber":27,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":28,"author":{"gitId":"brendanneojw"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-11-12"},{"lineNumber":29,"author":{"gitId":"brendanneojw"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2023-11-12"},{"lineNumber":30,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":31,"author":{"gitId":"brendanneojw"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-11-12"},{"lineNumber":32,"author":{"gitId":"brendanneojw"},"content":"        RemindPredicate firstPredicateCopy \u003d new RemindPredicate(firstPredicateDay);","lastModifiedDate":"2023-11-12"},{"lineNumber":33,"author":{"gitId":"brendanneojw"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2023-11-12"},{"lineNumber":34,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":35,"author":{"gitId":"brendanneojw"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-11-12"},{"lineNumber":36,"author":{"gitId":"brendanneojw"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2023-11-12"},{"lineNumber":37,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":38,"author":{"gitId":"brendanneojw"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-11-12"},{"lineNumber":39,"author":{"gitId":"brendanneojw"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2023-11-12"},{"lineNumber":40,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":41,"author":{"gitId":"brendanneojw"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2023-11-12"},{"lineNumber":42,"author":{"gitId":"brendanneojw"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2023-11-12"},{"lineNumber":43,"author":{"gitId":"brendanneojw"},"content":"    }","lastModifiedDate":"2023-11-12"},{"lineNumber":44,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":45,"author":{"gitId":"brendanneojw"},"content":"    @Test","lastModifiedDate":"2023-11-12"},{"lineNumber":46,"author":{"gitId":"brendanneojw"},"content":"    public void test_policyExpiryDateIsWithinUserInputDays_returnsTrue() {","lastModifiedDate":"2023-11-12"},{"lineNumber":47,"author":{"gitId":"brendanneojw"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(PolicyDate.VALIDATION_DATE_FORMAT);","lastModifiedDate":"2023-11-12"},{"lineNumber":48,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":49,"author":{"gitId":"brendanneojw"},"content":"        // Policy expiry date is 30 days away","lastModifiedDate":"2023-11-12"},{"lineNumber":50,"author":{"gitId":"brendanneojw"},"content":"        RemindPredicate predicate \u003d new RemindPredicate(30);","lastModifiedDate":"2023-11-12"},{"lineNumber":51,"author":{"gitId":"brendanneojw"},"content":"        assertTrue(predicate.test(new PersonBuilder().withPolicy(VALID_COMPANY_AMY, VALID_POLICY_NO_AMY,","lastModifiedDate":"2023-11-12"},{"lineNumber":52,"author":{"gitId":"brendanneojw"},"content":"                VALID_POLICY_ISSUE_DATE_AMY, LocalDate.now().plusDays(30).format(formatter)).build()));","lastModifiedDate":"2023-11-12"},{"lineNumber":53,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":54,"author":{"gitId":"brendanneojw"},"content":"        // Policy expiry date is 60 days away","lastModifiedDate":"2023-11-12"},{"lineNumber":55,"author":{"gitId":"brendanneojw"},"content":"        predicate \u003d new RemindPredicate(60);","lastModifiedDate":"2023-11-12"},{"lineNumber":56,"author":{"gitId":"brendanneojw"},"content":"        assertTrue(predicate.test(new PersonBuilder().withPolicy(VALID_COMPANY_AMY, VALID_POLICY_NO_AMY,","lastModifiedDate":"2023-11-12"},{"lineNumber":57,"author":{"gitId":"brendanneojw"},"content":"                VALID_POLICY_ISSUE_DATE_AMY, LocalDate.now().plusDays(60).format(formatter)).build()));","lastModifiedDate":"2023-11-12"},{"lineNumber":58,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":59,"author":{"gitId":"brendanneojw"},"content":"        // Policy expiry date is within 60 days away","lastModifiedDate":"2023-11-12"},{"lineNumber":60,"author":{"gitId":"brendanneojw"},"content":"        assertTrue(predicate.test(new PersonBuilder().withPolicy(VALID_COMPANY_AMY, VALID_POLICY_NO_AMY,","lastModifiedDate":"2023-11-12"},{"lineNumber":61,"author":{"gitId":"brendanneojw"},"content":"                VALID_POLICY_ISSUE_DATE_AMY, LocalDate.now().plusDays(15).format(formatter)).build()));","lastModifiedDate":"2023-11-12"},{"lineNumber":62,"author":{"gitId":"brendanneojw"},"content":"    }","lastModifiedDate":"2023-11-12"},{"lineNumber":63,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":64,"author":{"gitId":"brendanneojw"},"content":"    @Test","lastModifiedDate":"2023-11-12"},{"lineNumber":65,"author":{"gitId":"brendanneojw"},"content":"    public void test_policyExpiryDateIsNotInNext30Days_returnsFalse() {","lastModifiedDate":"2023-11-12"},{"lineNumber":66,"author":{"gitId":"brendanneojw"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(PolicyDate.VALIDATION_DATE_FORMAT);","lastModifiedDate":"2023-11-12"},{"lineNumber":67,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":68,"author":{"gitId":"brendanneojw"},"content":"        // Policy expiry date is more than 30 days away","lastModifiedDate":"2023-11-12"},{"lineNumber":69,"author":{"gitId":"brendanneojw"},"content":"        RemindPredicate predicate \u003d new RemindPredicate(30);","lastModifiedDate":"2023-11-12"},{"lineNumber":70,"author":{"gitId":"brendanneojw"},"content":"        assertFalse(predicate.test(new PersonBuilder().withPolicy(VALID_COMPANY_AMY, VALID_POLICY_NO_AMY,","lastModifiedDate":"2023-11-12"},{"lineNumber":71,"author":{"gitId":"brendanneojw"},"content":"                VALID_POLICY_ISSUE_DATE_AMY, LocalDate.now().plusDays(50).format(formatter)).build()));","lastModifiedDate":"2023-11-12"},{"lineNumber":72,"author":{"gitId":"brendanneojw"},"content":"    }","lastModifiedDate":"2023-11-12"},{"lineNumber":73,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":74,"author":{"gitId":"brendanneojw"},"content":"    @Test","lastModifiedDate":"2023-11-12"},{"lineNumber":75,"author":{"gitId":"brendanneojw"},"content":"    public void test_policyExpiryDatePassed_returnsFalse() {","lastModifiedDate":"2023-11-12"},{"lineNumber":76,"author":{"gitId":"brendanneojw"},"content":"        // Policy expiry date is in the past","lastModifiedDate":"2023-11-12"},{"lineNumber":77,"author":{"gitId":"brendanneojw"},"content":"        RemindPredicate predicate \u003d new RemindPredicate(30);","lastModifiedDate":"2023-11-12"},{"lineNumber":78,"author":{"gitId":"brendanneojw"},"content":"        assertFalse(predicate.test(new PersonBuilder().withPolicy(VALID_COMPANY_AMY, VALID_POLICY_NO_AMY,","lastModifiedDate":"2023-11-12"},{"lineNumber":79,"author":{"gitId":"brendanneojw"},"content":"                VALID_POLICY_ISSUE_DATE_AMY, \"10-10-2020\").build()));","lastModifiedDate":"2023-11-12"},{"lineNumber":80,"author":{"gitId":"brendanneojw"},"content":"    }","lastModifiedDate":"2023-11-12"},{"lineNumber":81,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":82,"author":{"gitId":"brendanneojw"},"content":"    @Test","lastModifiedDate":"2023-11-12"},{"lineNumber":83,"author":{"gitId":"brendanneojw"},"content":"    public void test_policyExpiryDateIsDefault_returnsFalse() {","lastModifiedDate":"2023-11-12"},{"lineNumber":84,"author":{"gitId":"brendanneojw"},"content":"        // Policy expiry date is the default parameter","lastModifiedDate":"2023-11-12"},{"lineNumber":85,"author":{"gitId":"brendanneojw"},"content":"        RemindPredicate predicate \u003d new RemindPredicate(30);","lastModifiedDate":"2023-11-12"},{"lineNumber":86,"author":{"gitId":"brendanneojw"},"content":"        assertFalse(predicate.test(new PersonBuilder().withPolicy(VALID_COMPANY_AMY, VALID_POLICY_NO_AMY,","lastModifiedDate":"2023-11-12"},{"lineNumber":87,"author":{"gitId":"brendanneojw"},"content":"                VALID_POLICY_ISSUE_DATE_AMY, PolicyDate.DEFAULT_VALUE).build()));","lastModifiedDate":"2023-11-12"},{"lineNumber":88,"author":{"gitId":"brendanneojw"},"content":"    }","lastModifiedDate":"2023-11-12"},{"lineNumber":89,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":90,"author":{"gitId":"brendanneojw"},"content":"    @Test","lastModifiedDate":"2023-11-12"},{"lineNumber":91,"author":{"gitId":"brendanneojw"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-11-12"},{"lineNumber":92,"author":{"gitId":"brendanneojw"},"content":"        int days \u003d 30;","lastModifiedDate":"2023-11-12"},{"lineNumber":93,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":94,"author":{"gitId":"brendanneojw"},"content":"        RemindPredicate predicate \u003d new RemindPredicate(days);","lastModifiedDate":"2023-11-12"},{"lineNumber":95,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":96,"author":{"gitId":"brendanneojw"},"content":"        String expected \u003d RemindPredicate.class.getCanonicalName() + \"{days\u003d\" + days + \"}\";","lastModifiedDate":"2023-11-12"},{"lineNumber":97,"author":{"gitId":"brendanneojw"},"content":"        assertEquals(expected, predicate.toString());","lastModifiedDate":"2023-11-12"},{"lineNumber":98,"author":{"gitId":"brendanneojw"},"content":"    }","lastModifiedDate":"2023-11-12"},{"lineNumber":99,"author":{"gitId":"brendanneojw"},"content":"}","lastModifiedDate":"2023-11-12"}],"authorContributionMap":{"brendanneojw":99}},{"path":"src/test/java/seedu/address/model/person/predicates/TagContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"brendanneojw"},"content":"package seedu.address.model.person.predicates;","lastModifiedDate":"2023-11-12"},{"lineNumber":2,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":3,"author":{"gitId":"brendanneojw"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-11-12"},{"lineNumber":4,"author":{"gitId":"brendanneojw"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-11-12"},{"lineNumber":5,"author":{"gitId":"brendanneojw"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-11-12"},{"lineNumber":6,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":7,"author":{"gitId":"brendanneojw"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-11-12"},{"lineNumber":8,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":9,"author":{"gitId":"brendanneojw"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2023-11-12"},{"lineNumber":10,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":11,"author":{"gitId":"brendanneojw"},"content":"public class TagContainsKeywordsPredicateTest {","lastModifiedDate":"2023-11-12"},{"lineNumber":12,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":13,"author":{"gitId":"brendanneojw"},"content":"    @Test","lastModifiedDate":"2023-11-12"},{"lineNumber":14,"author":{"gitId":"brendanneojw"},"content":"    public void equals() {","lastModifiedDate":"2023-11-12"},{"lineNumber":15,"author":{"gitId":"brendanneojw"},"content":"        String firstPredicateKeyword \u003d \"first\";","lastModifiedDate":"2023-11-12"},{"lineNumber":16,"author":{"gitId":"brendanneojw"},"content":"        String secondPredicateKeyword \u003d \"first second\";","lastModifiedDate":"2023-11-12"},{"lineNumber":17,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":18,"author":{"gitId":"brendanneojw"},"content":"        TagContainsKeywordsPredicate firstPredicate \u003d new TagContainsKeywordsPredicate(firstPredicateKeyword);","lastModifiedDate":"2023-11-12"},{"lineNumber":19,"author":{"gitId":"brendanneojw"},"content":"        TagContainsKeywordsPredicate secondPredicate \u003d new TagContainsKeywordsPredicate(secondPredicateKeyword);","lastModifiedDate":"2023-11-12"},{"lineNumber":20,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":21,"author":{"gitId":"brendanneojw"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-11-12"},{"lineNumber":22,"author":{"gitId":"brendanneojw"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2023-11-12"},{"lineNumber":23,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":24,"author":{"gitId":"brendanneojw"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-11-12"},{"lineNumber":25,"author":{"gitId":"brendanneojw"},"content":"        TagContainsKeywordsPredicate firstPredicateCopy \u003d new TagContainsKeywordsPredicate(firstPredicateKeyword);","lastModifiedDate":"2023-11-12"},{"lineNumber":26,"author":{"gitId":"brendanneojw"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2023-11-12"},{"lineNumber":27,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":28,"author":{"gitId":"brendanneojw"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-11-12"},{"lineNumber":29,"author":{"gitId":"brendanneojw"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2023-11-12"},{"lineNumber":30,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":31,"author":{"gitId":"brendanneojw"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-11-12"},{"lineNumber":32,"author":{"gitId":"brendanneojw"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2023-11-12"},{"lineNumber":33,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":34,"author":{"gitId":"brendanneojw"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2023-11-12"},{"lineNumber":35,"author":{"gitId":"brendanneojw"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2023-11-12"},{"lineNumber":36,"author":{"gitId":"brendanneojw"},"content":"    }","lastModifiedDate":"2023-11-12"},{"lineNumber":37,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":38,"author":{"gitId":"brendanneojw"},"content":"    @Test","lastModifiedDate":"2023-11-12"},{"lineNumber":39,"author":{"gitId":"brendanneojw"},"content":"    public void test_tagContainsKeywords_returnsTrue() {","lastModifiedDate":"2023-11-12"},{"lineNumber":40,"author":{"gitId":"brendanneojw"},"content":"        // One keyword","lastModifiedDate":"2023-11-12"},{"lineNumber":41,"author":{"gitId":"brendanneojw"},"content":"        TagContainsKeywordsPredicate predicate \u003d new TagContainsKeywordsPredicate(\"friend\");","lastModifiedDate":"2023-11-12"},{"lineNumber":42,"author":{"gitId":"brendanneojw"},"content":"        assertTrue(predicate.test(new PersonBuilder().withTags(\"friend\", \"colleague\").build()));","lastModifiedDate":"2023-11-12"},{"lineNumber":43,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":44,"author":{"gitId":"brendanneojw"},"content":"        // Trailing and Leading white spaces","lastModifiedDate":"2023-11-12"},{"lineNumber":45,"author":{"gitId":"brendanneojw"},"content":"        predicate \u003d new TagContainsKeywordsPredicate(\"   friend    \");","lastModifiedDate":"2023-11-12"},{"lineNumber":46,"author":{"gitId":"brendanneojw"},"content":"        assertTrue(predicate.test(new PersonBuilder().withTags(\"friend\", \"colleague\").build()));","lastModifiedDate":"2023-11-12"},{"lineNumber":47,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":48,"author":{"gitId":"brendanneojw"},"content":"        // Mixed-case keywords","lastModifiedDate":"2023-11-12"},{"lineNumber":49,"author":{"gitId":"brendanneojw"},"content":"        predicate \u003d new TagContainsKeywordsPredicate(\"fRiEnd\");","lastModifiedDate":"2023-11-12"},{"lineNumber":50,"author":{"gitId":"brendanneojw"},"content":"        assertTrue(predicate.test(new PersonBuilder().withTags(\"friend\", \"colleague\").build()));","lastModifiedDate":"2023-11-12"},{"lineNumber":51,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":52,"author":{"gitId":"brendanneojw"},"content":"        // Partial keyword","lastModifiedDate":"2023-11-12"},{"lineNumber":53,"author":{"gitId":"brendanneojw"},"content":"        predicate \u003d new TagContainsKeywordsPredicate(\"fri\");","lastModifiedDate":"2023-11-12"},{"lineNumber":54,"author":{"gitId":"brendanneojw"},"content":"        assertTrue(predicate.test(new PersonBuilder().withTags(\"friend\", \"colleague\").build()));","lastModifiedDate":"2023-11-12"},{"lineNumber":55,"author":{"gitId":"brendanneojw"},"content":"    }","lastModifiedDate":"2023-11-12"},{"lineNumber":56,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":57,"author":{"gitId":"brendanneojw"},"content":"    @Test","lastModifiedDate":"2023-11-12"},{"lineNumber":58,"author":{"gitId":"brendanneojw"},"content":"    public void test_tagDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2023-11-12"},{"lineNumber":59,"author":{"gitId":"brendanneojw"},"content":"        // Non-matching keyword","lastModifiedDate":"2023-11-12"},{"lineNumber":60,"author":{"gitId":"brendanneojw"},"content":"        TagContainsKeywordsPredicate predicate \u003d new TagContainsKeywordsPredicate(\"family\");","lastModifiedDate":"2023-11-12"},{"lineNumber":61,"author":{"gitId":"brendanneojw"},"content":"        assertFalse(predicate.test(new PersonBuilder().withTags(\"friend\", \"colleague\").build()));","lastModifiedDate":"2023-11-12"},{"lineNumber":62,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":63,"author":{"gitId":"brendanneojw"},"content":"        // Keyword only matches word that is separated by white space","lastModifiedDate":"2023-11-12"},{"lineNumber":64,"author":{"gitId":"brendanneojw"},"content":"        predicate \u003d new TagContainsKeywordsPredicate(\"friend colleague\");","lastModifiedDate":"2023-11-12"},{"lineNumber":65,"author":{"gitId":"brendanneojw"},"content":"        assertFalse(predicate.test(new PersonBuilder().withTags(\"friend\", \"colleague\").build()));","lastModifiedDate":"2023-11-12"},{"lineNumber":66,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":67,"author":{"gitId":"brendanneojw"},"content":"        // Keyword do not match exact","lastModifiedDate":"2023-11-12"},{"lineNumber":68,"author":{"gitId":"brendanneojw"},"content":"        predicate \u003d new TagContainsKeywordsPredicate(\"friends\");","lastModifiedDate":"2023-11-12"},{"lineNumber":69,"author":{"gitId":"brendanneojw"},"content":"        assertFalse(predicate.test(new PersonBuilder().withTags(\"friend\", \"colleague\").build()));","lastModifiedDate":"2023-11-12"},{"lineNumber":70,"author":{"gitId":"brendanneojw"},"content":"    }","lastModifiedDate":"2023-11-12"},{"lineNumber":71,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":72,"author":{"gitId":"brendanneojw"},"content":"    @Test","lastModifiedDate":"2023-11-12"},{"lineNumber":73,"author":{"gitId":"brendanneojw"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-11-12"},{"lineNumber":74,"author":{"gitId":"brendanneojw"},"content":"        String keyword \u003d \"keyword1\";","lastModifiedDate":"2023-11-12"},{"lineNumber":75,"author":{"gitId":"brendanneojw"},"content":"        TagContainsKeywordsPredicate predicate \u003d new TagContainsKeywordsPredicate(keyword);","lastModifiedDate":"2023-11-12"},{"lineNumber":76,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":77,"author":{"gitId":"brendanneojw"},"content":"        String expected \u003d TagContainsKeywordsPredicate.class.getCanonicalName() + \"{keywords\u003d[\" + keyword + \"]}\";","lastModifiedDate":"2023-11-12"},{"lineNumber":78,"author":{"gitId":"brendanneojw"},"content":"        assertEquals(expected, predicate.toString());","lastModifiedDate":"2023-11-12"},{"lineNumber":79,"author":{"gitId":"brendanneojw"},"content":"    }","lastModifiedDate":"2023-11-12"},{"lineNumber":80,"author":{"gitId":"brendanneojw"},"content":"}","lastModifiedDate":"2023-11-12"}],"authorContributionMap":{"brendanneojw":80}},{"path":"src/test/java/seedu/address/model/policy/CompanyTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cyaoxuan"},"content":"package seedu.address.model.policy;","lastModifiedDate":"2023-11-11"},{"lineNumber":2,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":3,"author":{"gitId":"cyaoxuan"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-11-11"},{"lineNumber":4,"author":{"gitId":"cyaoxuan"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-11-11"},{"lineNumber":5,"author":{"gitId":"cyaoxuan"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-11-11"},{"lineNumber":6,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":7,"author":{"gitId":"cyaoxuan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-11-11"},{"lineNumber":8,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":9,"author":{"gitId":"cyaoxuan"},"content":"public class CompanyTest {","lastModifiedDate":"2023-11-11"},{"lineNumber":10,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":11,"author":{"gitId":"cyaoxuan"},"content":"    @Test","lastModifiedDate":"2023-11-11"},{"lineNumber":12,"author":{"gitId":"cyaoxuan"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-11-11"},{"lineNumber":13,"author":{"gitId":"cyaoxuan"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Company(null));","lastModifiedDate":"2023-11-11"},{"lineNumber":14,"author":{"gitId":"cyaoxuan"},"content":"    }","lastModifiedDate":"2023-11-11"},{"lineNumber":15,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":16,"author":{"gitId":"cyaoxuan"},"content":"    @Test","lastModifiedDate":"2023-11-11"},{"lineNumber":17,"author":{"gitId":"cyaoxuan"},"content":"    public void constructor_invalidCompany_throwsIllegalArgumentException() {","lastModifiedDate":"2023-11-11"},{"lineNumber":18,"author":{"gitId":"cyaoxuan"},"content":"        String invalidCompany \u003d \"\";","lastModifiedDate":"2023-11-11"},{"lineNumber":19,"author":{"gitId":"cyaoxuan"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Company(invalidCompany));","lastModifiedDate":"2023-11-11"},{"lineNumber":20,"author":{"gitId":"cyaoxuan"},"content":"    }","lastModifiedDate":"2023-11-11"},{"lineNumber":21,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":22,"author":{"gitId":"cyaoxuan"},"content":"    @Test","lastModifiedDate":"2023-11-11"},{"lineNumber":23,"author":{"gitId":"cyaoxuan"},"content":"    public void isValidCompany() {","lastModifiedDate":"2023-11-11"},{"lineNumber":24,"author":{"gitId":"cyaoxuan"},"content":"        // null company","lastModifiedDate":"2023-11-11"},{"lineNumber":25,"author":{"gitId":"cyaoxuan"},"content":"        assertThrows(NullPointerException.class, () -\u003e Company.isValidCompany(null));","lastModifiedDate":"2023-11-11"},{"lineNumber":26,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":27,"author":{"gitId":"cyaoxuan"},"content":"        // invalid company","lastModifiedDate":"2023-11-11"},{"lineNumber":28,"author":{"gitId":"cyaoxuan"},"content":"        assertFalse(Company.isValidCompany(\"\")); // empty string","lastModifiedDate":"2023-11-11"},{"lineNumber":29,"author":{"gitId":"cyaoxuan"},"content":"        assertFalse(Company.isValidCompany(\"     \")); // spaces only","lastModifiedDate":"2023-11-11"},{"lineNumber":30,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":31,"author":{"gitId":"cyaoxuan"},"content":"        // valid company","lastModifiedDate":"2023-11-11"},{"lineNumber":32,"author":{"gitId":"cyaoxuan"},"content":"        assertTrue(Company.isValidCompany(\"NTUC\")); // all letters","lastModifiedDate":"2023-11-11"},{"lineNumber":33,"author":{"gitId":"cyaoxuan"},"content":"        assertTrue(Company.isValidCompany(\"Insurance Company 1\")); // with number and spaces","lastModifiedDate":"2023-11-11"},{"lineNumber":34,"author":{"gitId":"cyaoxuan"},"content":"        assertTrue(Company.isValidCompany(\"W#4t !$ Th|s\")); // with special characters","lastModifiedDate":"2023-11-11"},{"lineNumber":35,"author":{"gitId":"cyaoxuan"},"content":"    }","lastModifiedDate":"2023-11-11"},{"lineNumber":36,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":37,"author":{"gitId":"cyaoxuan"},"content":"    @Test","lastModifiedDate":"2023-11-11"},{"lineNumber":38,"author":{"gitId":"cyaoxuan"},"content":"    public void equals() {","lastModifiedDate":"2023-11-11"},{"lineNumber":39,"author":{"gitId":"cyaoxuan"},"content":"        Company company \u003d new Company(\"NTUC\");","lastModifiedDate":"2023-11-11"},{"lineNumber":40,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":41,"author":{"gitId":"cyaoxuan"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-11-11"},{"lineNumber":42,"author":{"gitId":"cyaoxuan"},"content":"        assertTrue(company.equals(new Company(\"NTUC\")));","lastModifiedDate":"2023-11-11"},{"lineNumber":43,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":44,"author":{"gitId":"cyaoxuan"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-11-11"},{"lineNumber":45,"author":{"gitId":"cyaoxuan"},"content":"        assertTrue(company.equals(company));","lastModifiedDate":"2023-11-11"},{"lineNumber":46,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":47,"author":{"gitId":"cyaoxuan"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-11-11"},{"lineNumber":48,"author":{"gitId":"cyaoxuan"},"content":"        assertFalse(company.equals(null));","lastModifiedDate":"2023-11-11"},{"lineNumber":49,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":50,"author":{"gitId":"cyaoxuan"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-11-11"},{"lineNumber":51,"author":{"gitId":"cyaoxuan"},"content":"        assertFalse(company.equals(5.0f));","lastModifiedDate":"2023-11-11"},{"lineNumber":52,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":53,"author":{"gitId":"cyaoxuan"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2023-11-11"},{"lineNumber":54,"author":{"gitId":"cyaoxuan"},"content":"        assertFalse(company.equals(new Company(\"AIA\")));","lastModifiedDate":"2023-11-11"},{"lineNumber":55,"author":{"gitId":"cyaoxuan"},"content":"    }","lastModifiedDate":"2023-11-11"},{"lineNumber":56,"author":{"gitId":"cyaoxuan"},"content":"}","lastModifiedDate":"2023-11-11"}],"authorContributionMap":{"cyaoxuan":56}},{"path":"src/test/java/seedu/address/model/policy/PolicyDateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cyaoxuan"},"content":"package seedu.address.model.policy;","lastModifiedDate":"2023-11-11"},{"lineNumber":2,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":3,"author":{"gitId":"cyaoxuan"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-11-11"},{"lineNumber":4,"author":{"gitId":"cyaoxuan"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-11-11"},{"lineNumber":5,"author":{"gitId":"cyaoxuan"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-11-11"},{"lineNumber":6,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":7,"author":{"gitId":"cyaoxuan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-11-11"},{"lineNumber":8,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":9,"author":{"gitId":"cyaoxuan"},"content":"import seedu.address.model.month.DeleteMonth;","lastModifiedDate":"2023-11-11"},{"lineNumber":10,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":11,"author":{"gitId":"cyaoxuan"},"content":"public class PolicyDateTest {","lastModifiedDate":"2023-11-11"},{"lineNumber":12,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":13,"author":{"gitId":"cyaoxuan"},"content":"    @Test","lastModifiedDate":"2023-11-11"},{"lineNumber":14,"author":{"gitId":"cyaoxuan"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-11-11"},{"lineNumber":15,"author":{"gitId":"cyaoxuan"},"content":"        assertThrows(NullPointerException.class, () -\u003e new PolicyDate(null));","lastModifiedDate":"2023-11-11"},{"lineNumber":16,"author":{"gitId":"cyaoxuan"},"content":"    }","lastModifiedDate":"2023-11-11"},{"lineNumber":17,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":18,"author":{"gitId":"cyaoxuan"},"content":"    @Test","lastModifiedDate":"2023-11-11"},{"lineNumber":19,"author":{"gitId":"cyaoxuan"},"content":"    public void constructor_invalidPolicyDate_throwsIllegalArgumentException() {","lastModifiedDate":"2023-11-11"},{"lineNumber":20,"author":{"gitId":"cyaoxuan"},"content":"        String invalidPolicyDate \u003d \"19-15-2000\";","lastModifiedDate":"2023-11-11"},{"lineNumber":21,"author":{"gitId":"cyaoxuan"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new PolicyDate(invalidPolicyDate));","lastModifiedDate":"2023-11-11"},{"lineNumber":22,"author":{"gitId":"cyaoxuan"},"content":"    }","lastModifiedDate":"2023-11-11"},{"lineNumber":23,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":24,"author":{"gitId":"cyaoxuan"},"content":"    @Test","lastModifiedDate":"2023-11-11"},{"lineNumber":25,"author":{"gitId":"cyaoxuan"},"content":"    public void isValidPolicyDate() {","lastModifiedDate":"2023-11-11"},{"lineNumber":26,"author":{"gitId":"cyaoxuan"},"content":"        // null policy date","lastModifiedDate":"2023-11-11"},{"lineNumber":27,"author":{"gitId":"cyaoxuan"},"content":"        assertThrows(NullPointerException.class, () -\u003e PolicyDate.isValidPolicyDate(null));","lastModifiedDate":"2023-11-11"},{"lineNumber":28,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":29,"author":{"gitId":"cyaoxuan"},"content":"        // invalid policy date","lastModifiedDate":"2023-11-11"},{"lineNumber":30,"author":{"gitId":"cyaoxuan"},"content":"        assertFalse(PolicyDate.isValidPolicyDate(\"\")); // empty string","lastModifiedDate":"2023-11-11"},{"lineNumber":31,"author":{"gitId":"cyaoxuan"},"content":"        assertFalse(PolicyDate.isValidPolicyDate(\" \")); // spaces only","lastModifiedDate":"2023-11-11"},{"lineNumber":32,"author":{"gitId":"cyaoxuan"},"content":"        assertFalse(PolicyDate.isValidPolicyDate(\"12-30-2000\")); // MM-dd-yyyy format","lastModifiedDate":"2023-11-11"},{"lineNumber":33,"author":{"gitId":"cyaoxuan"},"content":"        assertFalse(PolicyDate.isValidPolicyDate(\"30122000\")); // ddMMyyyy format","lastModifiedDate":"2023-11-11"},{"lineNumber":34,"author":{"gitId":"cyaoxuan"},"content":"        assertFalse(PolicyDate.isValidPolicyDate(\"01-01-23\")); // dd-MM-yy format","lastModifiedDate":"2023-11-11"},{"lineNumber":35,"author":{"gitId":"cyaoxuan"},"content":"        assertFalse(PolicyDate.isValidPolicyDate(\"29-02-2001\")); // 29 feb in non leap year","lastModifiedDate":"2023-11-11"},{"lineNumber":36,"author":{"gitId":"cyaoxuan"},"content":"        assertFalse(PolicyDate.isValidPolicyDate(\"31-04-2001\")); // 31 in month with only 30 days","lastModifiedDate":"2023-11-11"},{"lineNumber":37,"author":{"gitId":"cyaoxuan"},"content":"        assertFalse(PolicyDate.isValidPolicyDate(\"1-02-2001\")); // no leading 0","lastModifiedDate":"2023-11-11"},{"lineNumber":38,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":39,"author":{"gitId":"cyaoxuan"},"content":"        // valid policy date","lastModifiedDate":"2023-11-11"},{"lineNumber":40,"author":{"gitId":"cyaoxuan"},"content":"        assertTrue(PolicyDate.isValidPolicyDate(\"01-01-2000\")); // start of year","lastModifiedDate":"2023-11-11"},{"lineNumber":41,"author":{"gitId":"cyaoxuan"},"content":"        assertTrue(PolicyDate.isValidPolicyDate(\"29-02-2004\")); // 29 feb in leap year","lastModifiedDate":"2023-11-11"},{"lineNumber":42,"author":{"gitId":"cyaoxuan"},"content":"        assertTrue(PolicyDate.isValidPolicyDate(\"31-12-2004\")); // end of year","lastModifiedDate":"2023-11-11"},{"lineNumber":43,"author":{"gitId":"cyaoxuan"},"content":"    }","lastModifiedDate":"2023-11-11"},{"lineNumber":44,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":45,"author":{"gitId":"cyaoxuan"},"content":"    @Test","lastModifiedDate":"2023-11-11"},{"lineNumber":46,"author":{"gitId":"cyaoxuan"},"content":"    public void isInMonth() {","lastModifiedDate":"2023-11-11"},{"lineNumber":47,"author":{"gitId":"cyaoxuan"},"content":"        // Stub not used for DeleteMonth as it is a wrapper for YearMonth","lastModifiedDate":"2023-11-11"},{"lineNumber":48,"author":{"gitId":"cyaoxuan"},"content":"        DeleteMonth dm \u003d new DeleteMonth(\"01-2000\");","lastModifiedDate":"2023-11-11"},{"lineNumber":49,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":50,"author":{"gitId":"cyaoxuan"},"content":"        // different month, different year","lastModifiedDate":"2023-11-11"},{"lineNumber":51,"author":{"gitId":"cyaoxuan"},"content":"        PolicyDate pd1 \u003d new PolicyDate(\"15-02-2001\");","lastModifiedDate":"2023-11-11"},{"lineNumber":52,"author":{"gitId":"cyaoxuan"},"content":"        assertFalse(pd1.isInMonth(dm));","lastModifiedDate":"2023-11-11"},{"lineNumber":53,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":54,"author":{"gitId":"cyaoxuan"},"content":"        // different month, same year","lastModifiedDate":"2023-11-11"},{"lineNumber":55,"author":{"gitId":"cyaoxuan"},"content":"        PolicyDate pd2 \u003d new PolicyDate(\"15-02-2000\");","lastModifiedDate":"2023-11-11"},{"lineNumber":56,"author":{"gitId":"cyaoxuan"},"content":"        assertFalse(pd2.isInMonth(dm));","lastModifiedDate":"2023-11-11"},{"lineNumber":57,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":58,"author":{"gitId":"cyaoxuan"},"content":"        // same month, different year","lastModifiedDate":"2023-11-11"},{"lineNumber":59,"author":{"gitId":"cyaoxuan"},"content":"        PolicyDate pd3 \u003d new PolicyDate(\"15-01-2001\");","lastModifiedDate":"2023-11-11"},{"lineNumber":60,"author":{"gitId":"cyaoxuan"},"content":"        assertFalse(pd3.isInMonth(dm));","lastModifiedDate":"2023-11-11"},{"lineNumber":61,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":62,"author":{"gitId":"cyaoxuan"},"content":"        // same month, same year","lastModifiedDate":"2023-11-11"},{"lineNumber":63,"author":{"gitId":"cyaoxuan"},"content":"        PolicyDate pd4 \u003d new PolicyDate(\"15-01-2000\");","lastModifiedDate":"2023-11-11"},{"lineNumber":64,"author":{"gitId":"cyaoxuan"},"content":"        assertTrue(pd4.isInMonth(dm));","lastModifiedDate":"2023-11-11"},{"lineNumber":65,"author":{"gitId":"cyaoxuan"},"content":"    }","lastModifiedDate":"2023-11-11"},{"lineNumber":66,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":67,"author":{"gitId":"cyaoxuan"},"content":"    @Test","lastModifiedDate":"2023-11-11"},{"lineNumber":68,"author":{"gitId":"cyaoxuan"},"content":"    public void equals() {","lastModifiedDate":"2023-11-11"},{"lineNumber":69,"author":{"gitId":"cyaoxuan"},"content":"        PolicyDate policyDate \u003d new PolicyDate(\"20-01-2020\");","lastModifiedDate":"2023-11-11"},{"lineNumber":70,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":71,"author":{"gitId":"cyaoxuan"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-11-11"},{"lineNumber":72,"author":{"gitId":"cyaoxuan"},"content":"        assertTrue(policyDate.equals(new PolicyDate(\"20-01-2020\")));","lastModifiedDate":"2023-11-11"},{"lineNumber":73,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":74,"author":{"gitId":"cyaoxuan"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-11-11"},{"lineNumber":75,"author":{"gitId":"cyaoxuan"},"content":"        assertTrue(policyDate.equals(policyDate));","lastModifiedDate":"2023-11-11"},{"lineNumber":76,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":77,"author":{"gitId":"cyaoxuan"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-11-11"},{"lineNumber":78,"author":{"gitId":"cyaoxuan"},"content":"        assertFalse(policyDate.equals(null));","lastModifiedDate":"2023-11-11"},{"lineNumber":79,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":80,"author":{"gitId":"cyaoxuan"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-11-11"},{"lineNumber":81,"author":{"gitId":"cyaoxuan"},"content":"        assertFalse(policyDate.equals(5.0f));","lastModifiedDate":"2023-11-11"},{"lineNumber":82,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":83,"author":{"gitId":"cyaoxuan"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2023-11-11"},{"lineNumber":84,"author":{"gitId":"cyaoxuan"},"content":"        assertFalse(policyDate.equals(new PolicyDate(\"20-02-2020\")));","lastModifiedDate":"2023-11-11"},{"lineNumber":85,"author":{"gitId":"cyaoxuan"},"content":"    }","lastModifiedDate":"2023-11-11"},{"lineNumber":86,"author":{"gitId":"cyaoxuan"},"content":"}","lastModifiedDate":"2023-11-11"}],"authorContributionMap":{"cyaoxuan":86}},{"path":"src/test/java/seedu/address/model/policy/PolicyExpirationDateComparatorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"RSXIX"},"content":"package seedu.address.model.policy;","lastModifiedDate":"2023-11-13"},{"lineNumber":2,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":3,"author":{"gitId":"RSXIX"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-11-13"},{"lineNumber":4,"author":{"gitId":"RSXIX"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2023-11-13"},{"lineNumber":5,"author":{"gitId":"RSXIX"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2023-11-13"},{"lineNumber":6,"author":{"gitId":"RSXIX"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_COMPANY_AMY;","lastModifiedDate":"2023-11-13"},{"lineNumber":7,"author":{"gitId":"RSXIX"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_COMPANY_BOB;","lastModifiedDate":"2023-11-13"},{"lineNumber":8,"author":{"gitId":"RSXIX"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2023-11-13"},{"lineNumber":9,"author":{"gitId":"RSXIX"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2023-11-13"},{"lineNumber":10,"author":{"gitId":"RSXIX"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_LICENCE_PLATE_AMY;","lastModifiedDate":"2023-11-13"},{"lineNumber":11,"author":{"gitId":"RSXIX"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_LICENCE_PLATE_BOB;","lastModifiedDate":"2023-11-13"},{"lineNumber":12,"author":{"gitId":"RSXIX"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2023-11-13"},{"lineNumber":13,"author":{"gitId":"RSXIX"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-11-13"},{"lineNumber":14,"author":{"gitId":"RSXIX"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NRIC_AMY;","lastModifiedDate":"2023-11-13"},{"lineNumber":15,"author":{"gitId":"RSXIX"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NRIC_BOB;","lastModifiedDate":"2023-11-13"},{"lineNumber":16,"author":{"gitId":"RSXIX"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2023-11-13"},{"lineNumber":17,"author":{"gitId":"RSXIX"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-11-13"},{"lineNumber":18,"author":{"gitId":"RSXIX"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_POLICY_EXPIRY_DATE_AMY;","lastModifiedDate":"2023-11-13"},{"lineNumber":19,"author":{"gitId":"RSXIX"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_POLICY_EXPIRY_DATE_BOB;","lastModifiedDate":"2023-11-13"},{"lineNumber":20,"author":{"gitId":"RSXIX"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_POLICY_ISSUE_DATE_AMY;","lastModifiedDate":"2023-11-13"},{"lineNumber":21,"author":{"gitId":"RSXIX"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_POLICY_ISSUE_DATE_BOB;","lastModifiedDate":"2023-11-13"},{"lineNumber":22,"author":{"gitId":"RSXIX"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_POLICY_NO_AMY;","lastModifiedDate":"2023-11-13"},{"lineNumber":23,"author":{"gitId":"RSXIX"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_POLICY_NO_BOB;","lastModifiedDate":"2023-11-13"},{"lineNumber":24,"author":{"gitId":"RSXIX"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_REMARK_AMY;","lastModifiedDate":"2023-11-13"},{"lineNumber":25,"author":{"gitId":"RSXIX"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_REMARK_BOB;","lastModifiedDate":"2023-11-13"},{"lineNumber":26,"author":{"gitId":"RSXIX"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2023-11-13"},{"lineNumber":27,"author":{"gitId":"RSXIX"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-11-13"},{"lineNumber":28,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":29,"author":{"gitId":"RSXIX"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-11-13"},{"lineNumber":30,"author":{"gitId":"RSXIX"},"content":"import java.util.Set;","lastModifiedDate":"2023-11-13"},{"lineNumber":31,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":32,"author":{"gitId":"RSXIX"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-11-13"},{"lineNumber":33,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":34,"author":{"gitId":"RSXIX"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2023-11-13"},{"lineNumber":35,"author":{"gitId":"RSXIX"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2023-11-13"},{"lineNumber":36,"author":{"gitId":"RSXIX"},"content":"import seedu.address.model.person.LicencePlate;","lastModifiedDate":"2023-11-13"},{"lineNumber":37,"author":{"gitId":"RSXIX"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-11-13"},{"lineNumber":38,"author":{"gitId":"RSXIX"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2023-11-13"},{"lineNumber":39,"author":{"gitId":"RSXIX"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-11-13"},{"lineNumber":40,"author":{"gitId":"RSXIX"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-11-13"},{"lineNumber":41,"author":{"gitId":"RSXIX"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2023-11-13"},{"lineNumber":42,"author":{"gitId":"RSXIX"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-11-13"},{"lineNumber":43,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":44,"author":{"gitId":"RSXIX"},"content":"public class PolicyExpirationDateComparatorTest {","lastModifiedDate":"2023-11-13"},{"lineNumber":45,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":46,"author":{"gitId":"RSXIX"},"content":"    private PolicyExpirationDateComparator comparator \u003d new PolicyExpirationDateComparator();","lastModifiedDate":"2023-11-13"},{"lineNumber":47,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":48,"author":{"gitId":"RSXIX"},"content":"    private Policy amyPolicy \u003d new Policy(","lastModifiedDate":"2023-11-13"},{"lineNumber":49,"author":{"gitId":"RSXIX"},"content":"            new Company(VALID_COMPANY_AMY),","lastModifiedDate":"2023-11-13"},{"lineNumber":50,"author":{"gitId":"RSXIX"},"content":"            new PolicyNumber(VALID_POLICY_NO_AMY),","lastModifiedDate":"2023-11-13"},{"lineNumber":51,"author":{"gitId":"RSXIX"},"content":"            new PolicyDate(VALID_POLICY_ISSUE_DATE_AMY),","lastModifiedDate":"2023-11-13"},{"lineNumber":52,"author":{"gitId":"RSXIX"},"content":"            new PolicyDate(VALID_POLICY_EXPIRY_DATE_AMY)","lastModifiedDate":"2023-11-13"},{"lineNumber":53,"author":{"gitId":"RSXIX"},"content":"    );","lastModifiedDate":"2023-11-13"},{"lineNumber":54,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":55,"author":{"gitId":"RSXIX"},"content":"    private Policy amyPolicyCopy \u003d new Policy(","lastModifiedDate":"2023-11-13"},{"lineNumber":56,"author":{"gitId":"RSXIX"},"content":"            new Company(VALID_COMPANY_AMY),","lastModifiedDate":"2023-11-13"},{"lineNumber":57,"author":{"gitId":"RSXIX"},"content":"            new PolicyNumber(VALID_POLICY_NO_AMY),","lastModifiedDate":"2023-11-13"},{"lineNumber":58,"author":{"gitId":"RSXIX"},"content":"            new PolicyDate(VALID_POLICY_ISSUE_DATE_AMY),","lastModifiedDate":"2023-11-13"},{"lineNumber":59,"author":{"gitId":"RSXIX"},"content":"            new PolicyDate(VALID_POLICY_EXPIRY_DATE_AMY)","lastModifiedDate":"2023-11-13"},{"lineNumber":60,"author":{"gitId":"RSXIX"},"content":"    );","lastModifiedDate":"2023-11-13"},{"lineNumber":61,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":62,"author":{"gitId":"RSXIX"},"content":"    private Policy bobPolicy \u003d new Policy(","lastModifiedDate":"2023-11-13"},{"lineNumber":63,"author":{"gitId":"RSXIX"},"content":"            new Company(VALID_COMPANY_BOB),","lastModifiedDate":"2023-11-13"},{"lineNumber":64,"author":{"gitId":"RSXIX"},"content":"            new PolicyNumber(VALID_POLICY_NO_BOB),","lastModifiedDate":"2023-11-13"},{"lineNumber":65,"author":{"gitId":"RSXIX"},"content":"            new PolicyDate(VALID_POLICY_ISSUE_DATE_BOB),","lastModifiedDate":"2023-11-13"},{"lineNumber":66,"author":{"gitId":"RSXIX"},"content":"            new PolicyDate(VALID_POLICY_EXPIRY_DATE_BOB)","lastModifiedDate":"2023-11-13"},{"lineNumber":67,"author":{"gitId":"RSXIX"},"content":"    );","lastModifiedDate":"2023-11-13"},{"lineNumber":68,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":69,"author":{"gitId":"RSXIX"},"content":"    private Person amyPerson \u003d new Person(","lastModifiedDate":"2023-11-13"},{"lineNumber":70,"author":{"gitId":"RSXIX"},"content":"            new Name(VALID_NAME_AMY),","lastModifiedDate":"2023-11-13"},{"lineNumber":71,"author":{"gitId":"RSXIX"},"content":"            new Phone(VALID_PHONE_AMY),","lastModifiedDate":"2023-11-13"},{"lineNumber":72,"author":{"gitId":"RSXIX"},"content":"            new Email(VALID_EMAIL_AMY),","lastModifiedDate":"2023-11-13"},{"lineNumber":73,"author":{"gitId":"RSXIX"},"content":"            new Address(VALID_ADDRESS_AMY),","lastModifiedDate":"2023-11-13"},{"lineNumber":74,"author":{"gitId":"RSXIX"},"content":"            createTags(VALID_TAG_FRIEND),","lastModifiedDate":"2023-11-13"},{"lineNumber":75,"author":{"gitId":"RSXIX"},"content":"            new Nric(VALID_NRIC_AMY),","lastModifiedDate":"2023-11-13"},{"lineNumber":76,"author":{"gitId":"RSXIX"},"content":"            new LicencePlate(VALID_LICENCE_PLATE_AMY),","lastModifiedDate":"2023-11-13"},{"lineNumber":77,"author":{"gitId":"RSXIX"},"content":"            new Remark(VALID_REMARK_AMY),","lastModifiedDate":"2023-11-13"},{"lineNumber":78,"author":{"gitId":"RSXIX"},"content":"            amyPolicy","lastModifiedDate":"2023-11-13"},{"lineNumber":79,"author":{"gitId":"RSXIX"},"content":"    );","lastModifiedDate":"2023-11-13"},{"lineNumber":80,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":81,"author":{"gitId":"RSXIX"},"content":"    private Person bobPerson \u003d new Person(","lastModifiedDate":"2023-11-13"},{"lineNumber":82,"author":{"gitId":"RSXIX"},"content":"            new Name(VALID_NAME_BOB),","lastModifiedDate":"2023-11-13"},{"lineNumber":83,"author":{"gitId":"RSXIX"},"content":"            new Phone(VALID_PHONE_BOB),","lastModifiedDate":"2023-11-13"},{"lineNumber":84,"author":{"gitId":"RSXIX"},"content":"            new Email(VALID_EMAIL_BOB),","lastModifiedDate":"2023-11-13"},{"lineNumber":85,"author":{"gitId":"RSXIX"},"content":"            new Address(VALID_ADDRESS_BOB),","lastModifiedDate":"2023-11-13"},{"lineNumber":86,"author":{"gitId":"RSXIX"},"content":"            createTags(VALID_TAG_HUSBAND),","lastModifiedDate":"2023-11-13"},{"lineNumber":87,"author":{"gitId":"RSXIX"},"content":"            new Nric(VALID_NRIC_BOB),","lastModifiedDate":"2023-11-13"},{"lineNumber":88,"author":{"gitId":"RSXIX"},"content":"            new LicencePlate(VALID_LICENCE_PLATE_BOB),","lastModifiedDate":"2023-11-13"},{"lineNumber":89,"author":{"gitId":"RSXIX"},"content":"            new Remark(VALID_REMARK_BOB),","lastModifiedDate":"2023-11-13"},{"lineNumber":90,"author":{"gitId":"RSXIX"},"content":"            bobPolicy","lastModifiedDate":"2023-11-13"},{"lineNumber":91,"author":{"gitId":"RSXIX"},"content":"    );","lastModifiedDate":"2023-11-13"},{"lineNumber":92,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":93,"author":{"gitId":"RSXIX"},"content":"    private Person amyPersonCopy \u003d new Person(","lastModifiedDate":"2023-11-13"},{"lineNumber":94,"author":{"gitId":"RSXIX"},"content":"            new Name(VALID_NAME_AMY),","lastModifiedDate":"2023-11-13"},{"lineNumber":95,"author":{"gitId":"RSXIX"},"content":"            new Phone(VALID_PHONE_AMY),","lastModifiedDate":"2023-11-13"},{"lineNumber":96,"author":{"gitId":"RSXIX"},"content":"            new Email(VALID_EMAIL_AMY),","lastModifiedDate":"2023-11-13"},{"lineNumber":97,"author":{"gitId":"RSXIX"},"content":"            new Address(VALID_ADDRESS_AMY),","lastModifiedDate":"2023-11-13"},{"lineNumber":98,"author":{"gitId":"RSXIX"},"content":"            createTags(VALID_TAG_FRIEND),","lastModifiedDate":"2023-11-13"},{"lineNumber":99,"author":{"gitId":"RSXIX"},"content":"            new Nric(VALID_NRIC_AMY),","lastModifiedDate":"2023-11-13"},{"lineNumber":100,"author":{"gitId":"RSXIX"},"content":"            new LicencePlate(VALID_LICENCE_PLATE_AMY),","lastModifiedDate":"2023-11-13"},{"lineNumber":101,"author":{"gitId":"RSXIX"},"content":"            new Remark(VALID_REMARK_AMY),","lastModifiedDate":"2023-11-13"},{"lineNumber":102,"author":{"gitId":"RSXIX"},"content":"            amyPolicyCopy","lastModifiedDate":"2023-11-13"},{"lineNumber":103,"author":{"gitId":"RSXIX"},"content":"    );","lastModifiedDate":"2023-11-13"},{"lineNumber":104,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":105,"author":{"gitId":"RSXIX"},"content":"    private Set\u003cTag\u003e createTags(String... tagNames) {","lastModifiedDate":"2023-11-13"},{"lineNumber":106,"author":{"gitId":"RSXIX"},"content":"        Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-11-13"},{"lineNumber":107,"author":{"gitId":"RSXIX"},"content":"        for (String tagName : tagNames) {","lastModifiedDate":"2023-11-13"},{"lineNumber":108,"author":{"gitId":"RSXIX"},"content":"            tags.add(new Tag(tagName));","lastModifiedDate":"2023-11-13"},{"lineNumber":109,"author":{"gitId":"RSXIX"},"content":"        }","lastModifiedDate":"2023-11-13"},{"lineNumber":110,"author":{"gitId":"RSXIX"},"content":"        return tags;","lastModifiedDate":"2023-11-13"},{"lineNumber":111,"author":{"gitId":"RSXIX"},"content":"    }","lastModifiedDate":"2023-11-13"},{"lineNumber":112,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":113,"author":{"gitId":"RSXIX"},"content":"    @Test","lastModifiedDate":"2023-11-13"},{"lineNumber":114,"author":{"gitId":"RSXIX"},"content":"    public void compare_firstPersonExpiryDateBeforeSecondPerson_showsFirstPersonComesFirstInSort() {","lastModifiedDate":"2023-11-13"},{"lineNumber":115,"author":{"gitId":"RSXIX"},"content":"        assertTrue(comparator.compare(bobPerson, amyPerson) \u003c 0);","lastModifiedDate":"2023-11-13"},{"lineNumber":116,"author":{"gitId":"RSXIX"},"content":"    }","lastModifiedDate":"2023-11-13"},{"lineNumber":117,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":118,"author":{"gitId":"RSXIX"},"content":"    @Test","lastModifiedDate":"2023-11-13"},{"lineNumber":119,"author":{"gitId":"RSXIX"},"content":"    public void compare_firstPersonExpiryDateSameAsSecondPerson_showsOrderDoesNotMatter() {","lastModifiedDate":"2023-11-13"},{"lineNumber":120,"author":{"gitId":"RSXIX"},"content":"        assertTrue(comparator.compare(amyPersonCopy, amyPerson) \u003d\u003d 0);","lastModifiedDate":"2023-11-13"},{"lineNumber":121,"author":{"gitId":"RSXIX"},"content":"    }","lastModifiedDate":"2023-11-13"},{"lineNumber":122,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":123,"author":{"gitId":"RSXIX"},"content":"    @Test","lastModifiedDate":"2023-11-13"},{"lineNumber":124,"author":{"gitId":"RSXIX"},"content":"    public void compare_firstPersonExpiryDateAfterSecondPerson_showsSecondPersonComesFirstInSort() {","lastModifiedDate":"2023-11-13"},{"lineNumber":125,"author":{"gitId":"RSXIX"},"content":"        assertTrue(comparator.compare(amyPerson, bobPerson) \u003e 0);","lastModifiedDate":"2023-11-13"},{"lineNumber":126,"author":{"gitId":"RSXIX"},"content":"    }","lastModifiedDate":"2023-11-13"},{"lineNumber":127,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":128,"author":{"gitId":"RSXIX"},"content":"}","lastModifiedDate":"2023-11-13"}],"authorContributionMap":{"RSXIX":128}},{"path":"src/test/java/seedu/address/model/policy/PolicyNumberTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cyaoxuan"},"content":"package seedu.address.model.policy;","lastModifiedDate":"2023-11-11"},{"lineNumber":2,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":3,"author":{"gitId":"cyaoxuan"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-11-11"},{"lineNumber":4,"author":{"gitId":"cyaoxuan"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-11-11"},{"lineNumber":5,"author":{"gitId":"cyaoxuan"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-11-11"},{"lineNumber":6,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":7,"author":{"gitId":"cyaoxuan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-11-11"},{"lineNumber":8,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":9,"author":{"gitId":"cyaoxuan"},"content":"public class PolicyNumberTest {","lastModifiedDate":"2023-11-11"},{"lineNumber":10,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":11,"author":{"gitId":"cyaoxuan"},"content":"    @Test","lastModifiedDate":"2023-11-11"},{"lineNumber":12,"author":{"gitId":"cyaoxuan"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-11-11"},{"lineNumber":13,"author":{"gitId":"cyaoxuan"},"content":"        assertThrows(NullPointerException.class, () -\u003e new PolicyNumber(null));","lastModifiedDate":"2023-11-11"},{"lineNumber":14,"author":{"gitId":"cyaoxuan"},"content":"    }","lastModifiedDate":"2023-11-11"},{"lineNumber":15,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":16,"author":{"gitId":"cyaoxuan"},"content":"    @Test","lastModifiedDate":"2023-11-11"},{"lineNumber":17,"author":{"gitId":"cyaoxuan"},"content":"    public void constructor_invalidPolicyNumber_throwsIllegalArgumentException() {","lastModifiedDate":"2023-11-11"},{"lineNumber":18,"author":{"gitId":"cyaoxuan"},"content":"        String invalidPolicyNumber \u003d \"\";","lastModifiedDate":"2023-11-11"},{"lineNumber":19,"author":{"gitId":"cyaoxuan"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new PolicyNumber(invalidPolicyNumber));","lastModifiedDate":"2023-11-11"},{"lineNumber":20,"author":{"gitId":"cyaoxuan"},"content":"    }","lastModifiedDate":"2023-11-11"},{"lineNumber":21,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":22,"author":{"gitId":"cyaoxuan"},"content":"    @Test","lastModifiedDate":"2023-11-11"},{"lineNumber":23,"author":{"gitId":"cyaoxuan"},"content":"    public void isValidPolicyNumber() {","lastModifiedDate":"2023-11-11"},{"lineNumber":24,"author":{"gitId":"cyaoxuan"},"content":"        // null company","lastModifiedDate":"2023-11-11"},{"lineNumber":25,"author":{"gitId":"cyaoxuan"},"content":"        assertThrows(NullPointerException.class, () -\u003e PolicyNumber.isValidPolicyNumber(null));","lastModifiedDate":"2023-11-11"},{"lineNumber":26,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":27,"author":{"gitId":"cyaoxuan"},"content":"        // invalid company","lastModifiedDate":"2023-11-11"},{"lineNumber":28,"author":{"gitId":"cyaoxuan"},"content":"        assertFalse(PolicyNumber.isValidPolicyNumber(\"\")); // empty string","lastModifiedDate":"2023-11-11"},{"lineNumber":29,"author":{"gitId":"cyaoxuan"},"content":"        assertFalse(PolicyNumber.isValidPolicyNumber(\" \")); // spaces only","lastModifiedDate":"2023-11-11"},{"lineNumber":30,"author":{"gitId":"cyaoxuan"},"content":"        assertFalse(PolicyNumber.isValidPolicyNumber(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2023-11-11"},{"lineNumber":31,"author":{"gitId":"cyaoxuan"},"content":"        assertFalse(PolicyNumber.isValidPolicyNumber(\"NTUC123*\")); // contains non-alphanumeric characters","lastModifiedDate":"2023-11-11"},{"lineNumber":32,"author":{"gitId":"cyaoxuan"},"content":"        assertFalse(PolicyNumber.isValidPolicyNumber(\"NTUC12345\")); // exceeds max length","lastModifiedDate":"2023-11-11"},{"lineNumber":33,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":34,"author":{"gitId":"cyaoxuan"},"content":"        // valid company","lastModifiedDate":"2023-11-11"},{"lineNumber":35,"author":{"gitId":"cyaoxuan"},"content":"        assertTrue(PolicyNumber.isValidPolicyNumber(\"1\")); // minimal length","lastModifiedDate":"2023-11-11"},{"lineNumber":36,"author":{"gitId":"cyaoxuan"},"content":"        assertTrue(PolicyNumber.isValidPolicyNumber(\"NTUC1234\")); // maximal length","lastModifiedDate":"2023-11-11"},{"lineNumber":37,"author":{"gitId":"cyaoxuan"},"content":"        assertTrue(PolicyNumber.isValidPolicyNumber(\"AAAA\")); // only letters","lastModifiedDate":"2023-11-11"},{"lineNumber":38,"author":{"gitId":"cyaoxuan"},"content":"        assertTrue(PolicyNumber.isValidPolicyNumber(\"aaaa\")); // only small letters","lastModifiedDate":"2023-11-11"},{"lineNumber":39,"author":{"gitId":"cyaoxuan"},"content":"        assertTrue(PolicyNumber.isValidPolicyNumber(\"1234\")); // only numbers","lastModifiedDate":"2023-11-11"},{"lineNumber":40,"author":{"gitId":"cyaoxuan"},"content":"    }","lastModifiedDate":"2023-11-11"},{"lineNumber":41,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":42,"author":{"gitId":"cyaoxuan"},"content":"    @Test","lastModifiedDate":"2023-11-11"},{"lineNumber":43,"author":{"gitId":"cyaoxuan"},"content":"    public void equals() {","lastModifiedDate":"2023-11-11"},{"lineNumber":44,"author":{"gitId":"cyaoxuan"},"content":"        PolicyNumber policyNumber \u003d new PolicyNumber(\"NTUC1234\");","lastModifiedDate":"2023-11-11"},{"lineNumber":45,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":46,"author":{"gitId":"cyaoxuan"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-11-11"},{"lineNumber":47,"author":{"gitId":"cyaoxuan"},"content":"        assertTrue(policyNumber.equals(new PolicyNumber(\"NTUC1234\")));","lastModifiedDate":"2023-11-11"},{"lineNumber":48,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":49,"author":{"gitId":"cyaoxuan"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-11-11"},{"lineNumber":50,"author":{"gitId":"cyaoxuan"},"content":"        assertTrue(policyNumber.equals(policyNumber));","lastModifiedDate":"2023-11-11"},{"lineNumber":51,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":52,"author":{"gitId":"cyaoxuan"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-11-11"},{"lineNumber":53,"author":{"gitId":"cyaoxuan"},"content":"        assertFalse(policyNumber.equals(null));","lastModifiedDate":"2023-11-11"},{"lineNumber":54,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":55,"author":{"gitId":"cyaoxuan"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-11-11"},{"lineNumber":56,"author":{"gitId":"cyaoxuan"},"content":"        assertFalse(policyNumber.equals(5.0f));","lastModifiedDate":"2023-11-11"},{"lineNumber":57,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":58,"author":{"gitId":"cyaoxuan"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2023-11-11"},{"lineNumber":59,"author":{"gitId":"cyaoxuan"},"content":"        assertFalse(policyNumber.equals(new PolicyNumber(\"AIA1234\")));","lastModifiedDate":"2023-11-11"},{"lineNumber":60,"author":{"gitId":"cyaoxuan"},"content":"    }","lastModifiedDate":"2023-11-11"},{"lineNumber":61,"author":{"gitId":"cyaoxuan"},"content":"}","lastModifiedDate":"2023-11-11"}],"authorContributionMap":{"cyaoxuan":61}},{"path":"src/test/java/seedu/address/model/policy/PolicyTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cyaoxuan"},"content":"package seedu.address.model.policy;","lastModifiedDate":"2023-11-11"},{"lineNumber":2,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":3,"author":{"gitId":"brendanneojw"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-11-12"},{"lineNumber":4,"author":{"gitId":"cyaoxuan"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-11-11"},{"lineNumber":5,"author":{"gitId":"cyaoxuan"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-11-11"},{"lineNumber":6,"author":{"gitId":"cyaoxuan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_COMPANY_AMY;","lastModifiedDate":"2023-11-11"},{"lineNumber":7,"author":{"gitId":"cyaoxuan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_COMPANY_BOB;","lastModifiedDate":"2023-11-11"},{"lineNumber":8,"author":{"gitId":"cyaoxuan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_POLICY_EXPIRY_DATE_AMY;","lastModifiedDate":"2023-11-11"},{"lineNumber":9,"author":{"gitId":"cyaoxuan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_POLICY_EXPIRY_DATE_BOB;","lastModifiedDate":"2023-11-11"},{"lineNumber":10,"author":{"gitId":"cyaoxuan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_POLICY_ISSUE_DATE_AMY;","lastModifiedDate":"2023-11-11"},{"lineNumber":11,"author":{"gitId":"cyaoxuan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_POLICY_ISSUE_DATE_BOB;","lastModifiedDate":"2023-11-11"},{"lineNumber":12,"author":{"gitId":"cyaoxuan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_POLICY_NO_AMY;","lastModifiedDate":"2023-11-11"},{"lineNumber":13,"author":{"gitId":"cyaoxuan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_POLICY_NO_BOB;","lastModifiedDate":"2023-11-11"},{"lineNumber":14,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":15,"author":{"gitId":"cyaoxuan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-11-11"},{"lineNumber":16,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":17,"author":{"gitId":"cyaoxuan"},"content":"public class PolicyTest {","lastModifiedDate":"2023-11-11"},{"lineNumber":18,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":19,"author":{"gitId":"cyaoxuan"},"content":"    @Test","lastModifiedDate":"2023-11-11"},{"lineNumber":20,"author":{"gitId":"cyaoxuan"},"content":"    public void equals() {","lastModifiedDate":"2023-11-11"},{"lineNumber":21,"author":{"gitId":"cyaoxuan"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-11-11"},{"lineNumber":22,"author":{"gitId":"cyaoxuan"},"content":"        Policy amyPolicy \u003d new Policy(new Company(VALID_COMPANY_AMY), new PolicyNumber(VALID_POLICY_NO_AMY),","lastModifiedDate":"2023-11-11"},{"lineNumber":23,"author":{"gitId":"cyaoxuan"},"content":"                new PolicyDate(VALID_POLICY_ISSUE_DATE_AMY), new PolicyDate(VALID_POLICY_EXPIRY_DATE_AMY));","lastModifiedDate":"2023-11-11"},{"lineNumber":24,"author":{"gitId":"cyaoxuan"},"content":"        Policy amyPolicyCopy \u003d new Policy(new Company(VALID_COMPANY_AMY), new PolicyNumber(VALID_POLICY_NO_AMY),","lastModifiedDate":"2023-11-11"},{"lineNumber":25,"author":{"gitId":"cyaoxuan"},"content":"                new PolicyDate(VALID_POLICY_ISSUE_DATE_AMY), new PolicyDate(VALID_POLICY_EXPIRY_DATE_AMY));","lastModifiedDate":"2023-11-11"},{"lineNumber":26,"author":{"gitId":"cyaoxuan"},"content":"        assertTrue(amyPolicy.equals(amyPolicyCopy));","lastModifiedDate":"2023-11-11"},{"lineNumber":27,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":28,"author":{"gitId":"cyaoxuan"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-11-11"},{"lineNumber":29,"author":{"gitId":"cyaoxuan"},"content":"        assertTrue(amyPolicy.equals(amyPolicy));","lastModifiedDate":"2023-11-11"},{"lineNumber":30,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":31,"author":{"gitId":"cyaoxuan"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-11-11"},{"lineNumber":32,"author":{"gitId":"cyaoxuan"},"content":"        assertFalse(amyPolicy.equals(null));","lastModifiedDate":"2023-11-11"},{"lineNumber":33,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":34,"author":{"gitId":"cyaoxuan"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2023-11-11"},{"lineNumber":35,"author":{"gitId":"cyaoxuan"},"content":"        assertFalse(amyPolicy.equals(5));","lastModifiedDate":"2023-11-11"},{"lineNumber":36,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":37,"author":{"gitId":"cyaoxuan"},"content":"        // different company -\u003e returns false","lastModifiedDate":"2023-11-11"},{"lineNumber":38,"author":{"gitId":"cyaoxuan"},"content":"        Policy p1 \u003d new Policy(new Company(VALID_COMPANY_BOB), new PolicyNumber(VALID_POLICY_NO_AMY),","lastModifiedDate":"2023-11-11"},{"lineNumber":39,"author":{"gitId":"cyaoxuan"},"content":"                new PolicyDate(VALID_POLICY_ISSUE_DATE_AMY), new PolicyDate(VALID_POLICY_EXPIRY_DATE_AMY));","lastModifiedDate":"2023-11-11"},{"lineNumber":40,"author":{"gitId":"cyaoxuan"},"content":"        assertFalse(amyPolicy.equals(p1));","lastModifiedDate":"2023-11-11"},{"lineNumber":41,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":42,"author":{"gitId":"cyaoxuan"},"content":"        // different policy number -\u003e returns false","lastModifiedDate":"2023-11-11"},{"lineNumber":43,"author":{"gitId":"cyaoxuan"},"content":"        Policy p2 \u003d new Policy(new Company(VALID_COMPANY_AMY), new PolicyNumber(VALID_POLICY_NO_BOB),","lastModifiedDate":"2023-11-11"},{"lineNumber":44,"author":{"gitId":"cyaoxuan"},"content":"                new PolicyDate(VALID_POLICY_ISSUE_DATE_AMY), new PolicyDate(VALID_POLICY_EXPIRY_DATE_AMY));","lastModifiedDate":"2023-11-11"},{"lineNumber":45,"author":{"gitId":"cyaoxuan"},"content":"        assertFalse(amyPolicy.equals(p2));","lastModifiedDate":"2023-11-11"},{"lineNumber":46,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":47,"author":{"gitId":"cyaoxuan"},"content":"        // different policy issue date -\u003e returns false","lastModifiedDate":"2023-11-11"},{"lineNumber":48,"author":{"gitId":"cyaoxuan"},"content":"        Policy p3 \u003d new Policy(new Company(VALID_COMPANY_AMY), new PolicyNumber(VALID_POLICY_NO_AMY),","lastModifiedDate":"2023-11-11"},{"lineNumber":49,"author":{"gitId":"cyaoxuan"},"content":"                new PolicyDate(VALID_POLICY_ISSUE_DATE_BOB), new PolicyDate(VALID_POLICY_EXPIRY_DATE_AMY));","lastModifiedDate":"2023-11-11"},{"lineNumber":50,"author":{"gitId":"cyaoxuan"},"content":"        assertFalse(amyPolicy.equals(p3));","lastModifiedDate":"2023-11-11"},{"lineNumber":51,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":52,"author":{"gitId":"cyaoxuan"},"content":"        // different policy expiry date -\u003e returns false","lastModifiedDate":"2023-11-11"},{"lineNumber":53,"author":{"gitId":"cyaoxuan"},"content":"        Policy p4 \u003d new Policy(new Company(VALID_COMPANY_AMY), new PolicyNumber(VALID_POLICY_NO_AMY),","lastModifiedDate":"2023-11-11"},{"lineNumber":54,"author":{"gitId":"cyaoxuan"},"content":"                new PolicyDate(VALID_POLICY_ISSUE_DATE_AMY), new PolicyDate(VALID_POLICY_EXPIRY_DATE_BOB));","lastModifiedDate":"2023-11-11"},{"lineNumber":55,"author":{"gitId":"cyaoxuan"},"content":"        assertFalse(amyPolicy.equals(p4));","lastModifiedDate":"2023-11-11"},{"lineNumber":56,"author":{"gitId":"cyaoxuan"},"content":"    }","lastModifiedDate":"2023-11-11"},{"lineNumber":57,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":58,"author":{"gitId":"brendanneojw"},"content":"    @Test","lastModifiedDate":"2023-11-12"},{"lineNumber":59,"author":{"gitId":"brendanneojw"},"content":"    public void toDisplay_hasDefaultPolicyParameter_returnsNoPolicyFound() {","lastModifiedDate":"2023-11-12"},{"lineNumber":60,"author":{"gitId":"brendanneojw"},"content":"        Policy policyWithDefaultCompany \u003d new Policy(new Company(Company.DEFAULT_VALUE),","lastModifiedDate":"2023-11-12"},{"lineNumber":61,"author":{"gitId":"brendanneojw"},"content":"                new PolicyNumber(VALID_POLICY_NO_AMY), new PolicyDate(VALID_POLICY_ISSUE_DATE_AMY),","lastModifiedDate":"2023-11-12"},{"lineNumber":62,"author":{"gitId":"brendanneojw"},"content":"                    new PolicyDate(VALID_POLICY_EXPIRY_DATE_AMY));","lastModifiedDate":"2023-11-12"},{"lineNumber":63,"author":{"gitId":"brendanneojw"},"content":"        Policy policyWithDefaultPolicyNumber \u003d new Policy(new Company(Company.DEFAULT_VALUE),","lastModifiedDate":"2023-11-12"},{"lineNumber":64,"author":{"gitId":"brendanneojw"},"content":"                new PolicyNumber(PolicyNumber.DEFAULT_VALUE), new PolicyDate(VALID_POLICY_ISSUE_DATE_AMY),","lastModifiedDate":"2023-11-12"},{"lineNumber":65,"author":{"gitId":"brendanneojw"},"content":"                new PolicyDate(VALID_POLICY_EXPIRY_DATE_AMY));","lastModifiedDate":"2023-11-12"},{"lineNumber":66,"author":{"gitId":"brendanneojw"},"content":"        Policy policyWithDefaultPolicyIssue \u003d new Policy(new Company(Company.DEFAULT_VALUE),","lastModifiedDate":"2023-11-12"},{"lineNumber":67,"author":{"gitId":"brendanneojw"},"content":"                new PolicyNumber(PolicyNumber.DEFAULT_VALUE), new PolicyDate(PolicyDate.DEFAULT_VALUE),","lastModifiedDate":"2023-11-12"},{"lineNumber":68,"author":{"gitId":"brendanneojw"},"content":"                new PolicyDate(VALID_POLICY_EXPIRY_DATE_AMY));","lastModifiedDate":"2023-11-12"},{"lineNumber":69,"author":{"gitId":"brendanneojw"},"content":"        Policy policyWithDefaultPolicyExpiry \u003d new Policy(new Company(Company.DEFAULT_VALUE),","lastModifiedDate":"2023-11-12"},{"lineNumber":70,"author":{"gitId":"brendanneojw"},"content":"                new PolicyNumber(PolicyNumber.DEFAULT_VALUE), new PolicyDate(VALID_POLICY_ISSUE_DATE_AMY),","lastModifiedDate":"2023-11-12"},{"lineNumber":71,"author":{"gitId":"brendanneojw"},"content":"                new PolicyDate(PolicyDate.DEFAULT_VALUE));","lastModifiedDate":"2023-11-12"},{"lineNumber":72,"author":{"gitId":"brendanneojw"},"content":"        String expected \u003d \"No Policy Found\";","lastModifiedDate":"2023-11-12"},{"lineNumber":73,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":74,"author":{"gitId":"brendanneojw"},"content":"        // Company parameter is default, boolean value don\u0027t matter -\u003e returns No Policy Found","lastModifiedDate":"2023-11-12"},{"lineNumber":75,"author":{"gitId":"brendanneojw"},"content":"        assertEquals(expected, policyWithDefaultCompany.toDisplay(false));","lastModifiedDate":"2023-11-12"},{"lineNumber":76,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":77,"author":{"gitId":"brendanneojw"},"content":"        // Company parameter is default, boolean value don\u0027t matter -\u003e returns No Policy Found","lastModifiedDate":"2023-11-12"},{"lineNumber":78,"author":{"gitId":"brendanneojw"},"content":"        assertEquals(expected, policyWithDefaultPolicyNumber.toDisplay(false));","lastModifiedDate":"2023-11-12"},{"lineNumber":79,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":80,"author":{"gitId":"brendanneojw"},"content":"        // Company parameter is default, boolean value don\u0027t matter -\u003e returns No Policy Found","lastModifiedDate":"2023-11-12"},{"lineNumber":81,"author":{"gitId":"brendanneojw"},"content":"        assertEquals(expected, policyWithDefaultPolicyIssue.toDisplay(false));","lastModifiedDate":"2023-11-12"},{"lineNumber":82,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":83,"author":{"gitId":"brendanneojw"},"content":"        // Company parameter is default, boolean value don\u0027t matter -\u003e returns No Policy Found","lastModifiedDate":"2023-11-12"},{"lineNumber":84,"author":{"gitId":"brendanneojw"},"content":"        assertEquals(expected, policyWithDefaultPolicyExpiry.toDisplay(false));","lastModifiedDate":"2023-11-12"},{"lineNumber":85,"author":{"gitId":"brendanneojw"},"content":"    }","lastModifiedDate":"2023-11-12"},{"lineNumber":86,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":87,"author":{"gitId":"brendanneojw"},"content":"    @Test","lastModifiedDate":"2023-11-12"},{"lineNumber":88,"author":{"gitId":"brendanneojw"},"content":"    public void toDisplay_isPersonCardIsTrue_returnsCustomisedString() {","lastModifiedDate":"2023-11-12"},{"lineNumber":89,"author":{"gitId":"brendanneojw"},"content":"        Policy amyPolicy \u003d new Policy(new Company(VALID_COMPANY_AMY), new PolicyNumber(VALID_POLICY_NO_AMY),","lastModifiedDate":"2023-11-12"},{"lineNumber":90,"author":{"gitId":"brendanneojw"},"content":"                new PolicyDate(VALID_POLICY_ISSUE_DATE_AMY), new PolicyDate(VALID_POLICY_EXPIRY_DATE_AMY));","lastModifiedDate":"2023-11-12"},{"lineNumber":91,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":92,"author":{"gitId":"brendanneojw"},"content":"        String expected \u003d \"Company: \" + VALID_COMPANY_AMY + \"\\n\" + \"Policy Number: \" + VALID_POLICY_NO_AMY + \"\\n\"","lastModifiedDate":"2023-11-12"},{"lineNumber":93,"author":{"gitId":"brendanneojw"},"content":"                + \"Policy Issue Date: \" + VALID_POLICY_ISSUE_DATE_AMY + \"\\n\" + \"Policy Expiry Date: \"","lastModifiedDate":"2023-11-12"},{"lineNumber":94,"author":{"gitId":"brendanneojw"},"content":"                    + VALID_POLICY_EXPIRY_DATE_AMY;","lastModifiedDate":"2023-11-12"},{"lineNumber":95,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":96,"author":{"gitId":"brendanneojw"},"content":"        assertEquals(expected, amyPolicy.toDisplay(true));","lastModifiedDate":"2023-11-12"},{"lineNumber":97,"author":{"gitId":"brendanneojw"},"content":"    }","lastModifiedDate":"2023-11-12"},{"lineNumber":98,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":99,"author":{"gitId":"brendanneojw"},"content":"    @Test","lastModifiedDate":"2023-11-12"},{"lineNumber":100,"author":{"gitId":"brendanneojw"},"content":"    public void toDisplay_isPersonCardIsFalse_returnsCustomisedString() {","lastModifiedDate":"2023-11-12"},{"lineNumber":101,"author":{"gitId":"brendanneojw"},"content":"        Policy amyPolicy \u003d new Policy(new Company(VALID_COMPANY_AMY), new PolicyNumber(VALID_POLICY_NO_AMY),","lastModifiedDate":"2023-11-12"},{"lineNumber":102,"author":{"gitId":"brendanneojw"},"content":"                new PolicyDate(VALID_POLICY_ISSUE_DATE_AMY), new PolicyDate(VALID_POLICY_EXPIRY_DATE_AMY));","lastModifiedDate":"2023-11-12"},{"lineNumber":103,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":104,"author":{"gitId":"brendanneojw"},"content":"        String expected \u003d VALID_COMPANY_AMY + \", \" + VALID_POLICY_NO_AMY + \", \"","lastModifiedDate":"2023-11-12"},{"lineNumber":105,"author":{"gitId":"brendanneojw"},"content":"                + VALID_POLICY_ISSUE_DATE_AMY + \", \" + VALID_POLICY_EXPIRY_DATE_AMY;","lastModifiedDate":"2023-11-12"},{"lineNumber":106,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":107,"author":{"gitId":"brendanneojw"},"content":"        assertEquals(expected, amyPolicy.toDisplay(false));","lastModifiedDate":"2023-11-12"},{"lineNumber":108,"author":{"gitId":"brendanneojw"},"content":"    }","lastModifiedDate":"2023-11-12"},{"lineNumber":109,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":110,"author":{"gitId":"RSXIX"},"content":"    @Test","lastModifiedDate":"2023-11-13"},{"lineNumber":111,"author":{"gitId":"RSXIX"},"content":"    public void policyHasDefaultParameter_policyWithDefaultValues_shouldReturnTrue() {","lastModifiedDate":"2023-11-13"},{"lineNumber":112,"author":{"gitId":"RSXIX"},"content":"        Policy amyPolicy \u003d new Policy(new Company(Company.DEFAULT_VALUE), new PolicyNumber(VALID_POLICY_NO_AMY),","lastModifiedDate":"2023-11-13"},{"lineNumber":113,"author":{"gitId":"RSXIX"},"content":"                new PolicyDate(VALID_POLICY_ISSUE_DATE_AMY), new PolicyDate(VALID_POLICY_EXPIRY_DATE_AMY));","lastModifiedDate":"2023-11-13"},{"lineNumber":114,"author":{"gitId":"RSXIX"},"content":"        assertEquals(amyPolicy.hasDefaultParameter(), true);","lastModifiedDate":"2023-11-13"},{"lineNumber":115,"author":{"gitId":"RSXIX"},"content":"    }","lastModifiedDate":"2023-11-13"},{"lineNumber":116,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":117,"author":{"gitId":"RSXIX"},"content":"    @Test","lastModifiedDate":"2023-11-13"},{"lineNumber":118,"author":{"gitId":"RSXIX"},"content":"    public void policyDoesNotHaveDefaultParameter_policyWithNonDefaultValues_shouldReturnFalse() {","lastModifiedDate":"2023-11-13"},{"lineNumber":119,"author":{"gitId":"RSXIX"},"content":"        Policy amyPolicy \u003d new Policy(new Company(VALID_COMPANY_AMY), new PolicyNumber(VALID_POLICY_NO_AMY),","lastModifiedDate":"2023-11-13"},{"lineNumber":120,"author":{"gitId":"RSXIX"},"content":"                new PolicyDate(VALID_POLICY_ISSUE_DATE_AMY), new PolicyDate(VALID_POLICY_EXPIRY_DATE_AMY));","lastModifiedDate":"2023-11-13"},{"lineNumber":121,"author":{"gitId":"RSXIX"},"content":"        assertEquals(amyPolicy.hasDefaultParameter(), false);","lastModifiedDate":"2023-11-13"},{"lineNumber":122,"author":{"gitId":"RSXIX"},"content":"    }","lastModifiedDate":"2023-11-13"},{"lineNumber":123,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":124,"author":{"gitId":"RSXIX"},"content":"    @Test","lastModifiedDate":"2023-11-13"},{"lineNumber":125,"author":{"gitId":"RSXIX"},"content":"    public void policyHasDefaultCompanyParameter_policyWithDefaultCompany_shouldReturnTrue() {","lastModifiedDate":"2023-11-13"},{"lineNumber":126,"author":{"gitId":"RSXIX"},"content":"        Policy amyPolicy \u003d new Policy(new Company(Company.DEFAULT_VALUE), new PolicyNumber(VALID_POLICY_NO_AMY),","lastModifiedDate":"2023-11-13"},{"lineNumber":127,"author":{"gitId":"RSXIX"},"content":"                new PolicyDate(VALID_POLICY_ISSUE_DATE_AMY), new PolicyDate(VALID_POLICY_EXPIRY_DATE_AMY));","lastModifiedDate":"2023-11-13"},{"lineNumber":128,"author":{"gitId":"RSXIX"},"content":"        assertEquals(amyPolicy.hasDefaultCompanyParameter(), true);","lastModifiedDate":"2023-11-13"},{"lineNumber":129,"author":{"gitId":"RSXIX"},"content":"    }","lastModifiedDate":"2023-11-13"},{"lineNumber":130,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":131,"author":{"gitId":"RSXIX"},"content":"    @Test","lastModifiedDate":"2023-11-13"},{"lineNumber":132,"author":{"gitId":"RSXIX"},"content":"    public void policyDoesNotHaveDefaultCompanyParameter_policyWithNonDefaultCompany_shouldReturnFalse() {","lastModifiedDate":"2023-11-13"},{"lineNumber":133,"author":{"gitId":"RSXIX"},"content":"        Policy amyPolicy \u003d new Policy(new Company(VALID_COMPANY_AMY), new PolicyNumber(VALID_POLICY_NO_AMY),","lastModifiedDate":"2023-11-13"},{"lineNumber":134,"author":{"gitId":"RSXIX"},"content":"                new PolicyDate(VALID_POLICY_ISSUE_DATE_AMY), new PolicyDate(VALID_POLICY_EXPIRY_DATE_AMY));","lastModifiedDate":"2023-11-13"},{"lineNumber":135,"author":{"gitId":"RSXIX"},"content":"        assertEquals(amyPolicy.hasDefaultCompanyParameter(), false);","lastModifiedDate":"2023-11-13"},{"lineNumber":136,"author":{"gitId":"RSXIX"},"content":"    }","lastModifiedDate":"2023-11-13"},{"lineNumber":137,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":138,"author":{"gitId":"RSXIX"},"content":"    @Test","lastModifiedDate":"2023-11-13"},{"lineNumber":139,"author":{"gitId":"RSXIX"},"content":"    public void policyHasDefaultNumberParameter_policyWithDefaultNumber_shouldReturnTrue() {","lastModifiedDate":"2023-11-13"},{"lineNumber":140,"author":{"gitId":"RSXIX"},"content":"        Policy amyPolicy \u003d new Policy(new Company(VALID_COMPANY_AMY), new PolicyNumber(PolicyNumber.DEFAULT_VALUE),","lastModifiedDate":"2023-11-13"},{"lineNumber":141,"author":{"gitId":"RSXIX"},"content":"                new PolicyDate(VALID_POLICY_ISSUE_DATE_AMY), new PolicyDate(VALID_POLICY_EXPIRY_DATE_AMY));","lastModifiedDate":"2023-11-13"},{"lineNumber":142,"author":{"gitId":"RSXIX"},"content":"        assertEquals(amyPolicy.hasDefaultNumberParameter(), true);","lastModifiedDate":"2023-11-13"},{"lineNumber":143,"author":{"gitId":"RSXIX"},"content":"    }","lastModifiedDate":"2023-11-13"},{"lineNumber":144,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":145,"author":{"gitId":"RSXIX"},"content":"    @Test","lastModifiedDate":"2023-11-13"},{"lineNumber":146,"author":{"gitId":"RSXIX"},"content":"    public void policyDoesNotHaveDefaultNumberParameter_policyWithNonDefaultNumber_shouldReturnFalse() {","lastModifiedDate":"2023-11-13"},{"lineNumber":147,"author":{"gitId":"RSXIX"},"content":"        Policy amyPolicy \u003d new Policy(new Company(VALID_COMPANY_AMY), new PolicyNumber(VALID_POLICY_NO_AMY),","lastModifiedDate":"2023-11-13"},{"lineNumber":148,"author":{"gitId":"RSXIX"},"content":"                new PolicyDate(VALID_POLICY_ISSUE_DATE_AMY), new PolicyDate(VALID_POLICY_EXPIRY_DATE_AMY));","lastModifiedDate":"2023-11-13"},{"lineNumber":149,"author":{"gitId":"RSXIX"},"content":"        assertEquals(amyPolicy.hasDefaultCompanyParameter(), false);","lastModifiedDate":"2023-11-13"},{"lineNumber":150,"author":{"gitId":"RSXIX"},"content":"    }","lastModifiedDate":"2023-11-13"},{"lineNumber":151,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":152,"author":{"gitId":"RSXIX"},"content":"    @Test","lastModifiedDate":"2023-11-13"},{"lineNumber":153,"author":{"gitId":"RSXIX"},"content":"    public void policyHasDefaultExpiryDateParameter_policyWithDefaultExpiryDate_shouldReturnTrue() {","lastModifiedDate":"2023-11-13"},{"lineNumber":154,"author":{"gitId":"RSXIX"},"content":"        Policy amyPolicy \u003d new Policy(new Company(VALID_COMPANY_AMY), new PolicyNumber(VALID_POLICY_NO_AMY),","lastModifiedDate":"2023-11-13"},{"lineNumber":155,"author":{"gitId":"RSXIX"},"content":"                new PolicyDate(VALID_POLICY_ISSUE_DATE_AMY), new PolicyDate(PolicyDate.DEFAULT_VALUE));","lastModifiedDate":"2023-11-13"},{"lineNumber":156,"author":{"gitId":"RSXIX"},"content":"        assertEquals(amyPolicy.hasDefaultExpiryDateParameter(), true);","lastModifiedDate":"2023-11-13"},{"lineNumber":157,"author":{"gitId":"RSXIX"},"content":"    }","lastModifiedDate":"2023-11-13"},{"lineNumber":158,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":159,"author":{"gitId":"RSXIX"},"content":"    @Test","lastModifiedDate":"2023-11-13"},{"lineNumber":160,"author":{"gitId":"RSXIX"},"content":"    public void policyDoesNotHaveDefaultExpiryDateParameter_policyWithNonDefaultExpiryDate_shouldReturnFalse() {","lastModifiedDate":"2023-11-13"},{"lineNumber":161,"author":{"gitId":"RSXIX"},"content":"        Policy amyPolicy \u003d new Policy(new Company(VALID_COMPANY_AMY), new PolicyNumber(VALID_POLICY_NO_AMY),","lastModifiedDate":"2023-11-13"},{"lineNumber":162,"author":{"gitId":"RSXIX"},"content":"                new PolicyDate(VALID_POLICY_ISSUE_DATE_AMY), new PolicyDate(VALID_POLICY_EXPIRY_DATE_AMY));","lastModifiedDate":"2023-11-13"},{"lineNumber":163,"author":{"gitId":"RSXIX"},"content":"        assertEquals(amyPolicy.hasDefaultExpiryDateParameter(), false);","lastModifiedDate":"2023-11-13"},{"lineNumber":164,"author":{"gitId":"RSXIX"},"content":"    }","lastModifiedDate":"2023-11-13"},{"lineNumber":165,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":166,"author":{"gitId":"RSXIX"},"content":"    @Test","lastModifiedDate":"2023-11-13"},{"lineNumber":167,"author":{"gitId":"RSXIX"},"content":"    public void policyHasDefaultIssueDateParameter_policyWithDefaultIssueDate_shouldReturnTrue() {","lastModifiedDate":"2023-11-13"},{"lineNumber":168,"author":{"gitId":"RSXIX"},"content":"        Policy amyPolicy \u003d new Policy(new Company(VALID_COMPANY_AMY), new PolicyNumber(VALID_POLICY_NO_AMY),","lastModifiedDate":"2023-11-13"},{"lineNumber":169,"author":{"gitId":"RSXIX"},"content":"                new PolicyDate(PolicyDate.DEFAULT_VALUE), new PolicyDate(VALID_POLICY_EXPIRY_DATE_AMY));","lastModifiedDate":"2023-11-13"},{"lineNumber":170,"author":{"gitId":"RSXIX"},"content":"        assertEquals(amyPolicy.hasDefaultIssueDateParameter(), true);","lastModifiedDate":"2023-11-13"},{"lineNumber":171,"author":{"gitId":"RSXIX"},"content":"    }","lastModifiedDate":"2023-11-13"},{"lineNumber":172,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":173,"author":{"gitId":"RSXIX"},"content":"    @Test","lastModifiedDate":"2023-11-13"},{"lineNumber":174,"author":{"gitId":"RSXIX"},"content":"    public void policyDoesNotHaveDefaultIssueDateParameter_policyWithNonDefaultIssueDate_shouldReturnFalse() {","lastModifiedDate":"2023-11-13"},{"lineNumber":175,"author":{"gitId":"RSXIX"},"content":"        Policy amyPolicy \u003d new Policy(new Company(VALID_COMPANY_AMY), new PolicyNumber(VALID_POLICY_NO_AMY),","lastModifiedDate":"2023-11-13"},{"lineNumber":176,"author":{"gitId":"RSXIX"},"content":"                new PolicyDate(VALID_POLICY_ISSUE_DATE_AMY), new PolicyDate(VALID_POLICY_EXPIRY_DATE_AMY));","lastModifiedDate":"2023-11-13"},{"lineNumber":177,"author":{"gitId":"RSXIX"},"content":"        assertEquals(amyPolicy.hasDefaultIssueDateParameter(), false);","lastModifiedDate":"2023-11-13"},{"lineNumber":178,"author":{"gitId":"RSXIX"},"content":"    }","lastModifiedDate":"2023-11-13"},{"lineNumber":179,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":180,"author":{"gitId":"RSXIX"},"content":"    @Test","lastModifiedDate":"2023-11-13"},{"lineNumber":181,"author":{"gitId":"RSXIX"},"content":"    public void createsDefaultPolicy_newDefaultPolicy_shouldEqualExpected() {","lastModifiedDate":"2023-11-13"},{"lineNumber":182,"author":{"gitId":"RSXIX"},"content":"        Policy expected \u003d new Policy(new Company(Company.DEFAULT_VALUE),","lastModifiedDate":"2023-11-13"},{"lineNumber":183,"author":{"gitId":"RSXIX"},"content":"                new PolicyNumber(PolicyNumber.DEFAULT_VALUE), new PolicyDate(PolicyDate.DEFAULT_VALUE),","lastModifiedDate":"2023-11-13"},{"lineNumber":184,"author":{"gitId":"RSXIX"},"content":"                new PolicyDate(PolicyDate.DEFAULT_VALUE));","lastModifiedDate":"2023-11-13"},{"lineNumber":185,"author":{"gitId":"RSXIX"},"content":"        Policy actual \u003d Policy.createNewDefaultPolicy();","lastModifiedDate":"2023-11-13"},{"lineNumber":186,"author":{"gitId":"RSXIX"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2023-11-13"},{"lineNumber":187,"author":{"gitId":"RSXIX"},"content":"    }","lastModifiedDate":"2023-11-13"},{"lineNumber":188,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":189,"author":{"gitId":"RSXIX"},"content":"    @Test","lastModifiedDate":"2023-11-13"},{"lineNumber":190,"author":{"gitId":"RSXIX"},"content":"    public void invalidIssueAndExpiryDate_policyWithInvalidDates_shouldReturnNegativeComparison() {","lastModifiedDate":"2023-11-13"},{"lineNumber":191,"author":{"gitId":"RSXIX"},"content":"        Policy invalidAmyPolicy \u003d new Policy(new Company(VALID_COMPANY_AMY), new PolicyNumber(VALID_POLICY_NO_AMY),","lastModifiedDate":"2023-11-13"},{"lineNumber":192,"author":{"gitId":"RSXIX"},"content":"                new PolicyDate(VALID_POLICY_EXPIRY_DATE_AMY), new PolicyDate(VALID_POLICY_ISSUE_DATE_AMY));","lastModifiedDate":"2023-11-13"},{"lineNumber":193,"author":{"gitId":"RSXIX"},"content":"        assertTrue(invalidAmyPolicy.compareDates() \u003c 0);","lastModifiedDate":"2023-11-13"},{"lineNumber":194,"author":{"gitId":"RSXIX"},"content":"    }","lastModifiedDate":"2023-11-13"},{"lineNumber":195,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":196,"author":{"gitId":"RSXIX"},"content":"    @Test","lastModifiedDate":"2023-11-13"},{"lineNumber":197,"author":{"gitId":"RSXIX"},"content":"    public void validIssueAndExpiryDate_policyWithValidDates_shouldReturnPositiveComparison() {","lastModifiedDate":"2023-11-13"},{"lineNumber":198,"author":{"gitId":"RSXIX"},"content":"        Policy amyPolicy \u003d new Policy(new Company(VALID_COMPANY_AMY), new PolicyNumber(VALID_POLICY_NO_AMY),","lastModifiedDate":"2023-11-13"},{"lineNumber":199,"author":{"gitId":"RSXIX"},"content":"                new PolicyDate(VALID_POLICY_ISSUE_DATE_AMY), new PolicyDate(VALID_POLICY_EXPIRY_DATE_AMY));","lastModifiedDate":"2023-11-13"},{"lineNumber":200,"author":{"gitId":"RSXIX"},"content":"        assertTrue(amyPolicy.compareDates() \u003e 0);","lastModifiedDate":"2023-11-13"},{"lineNumber":201,"author":{"gitId":"RSXIX"},"content":"    }","lastModifiedDate":"2023-11-13"},{"lineNumber":202,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":203,"author":{"gitId":"cyaoxuan"},"content":"}","lastModifiedDate":"2023-11-11"}],"authorContributionMap":{"brendanneojw":53,"RSXIX":94,"cyaoxuan":56}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedPersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.storage.JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"cyaoxuan"},"content":"import seedu.address.model.person.LicencePlate;","lastModifiedDate":"2023-11-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"cyaoxuan"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2023-11-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"cyaoxuan"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2023-11-11"},{"lineNumber":22,"author":{"gitId":"cyaoxuan"},"content":"import seedu.address.model.policy.Company;","lastModifiedDate":"2023-11-11"},{"lineNumber":23,"author":{"gitId":"cyaoxuan"},"content":"import seedu.address.model.policy.PolicyDate;","lastModifiedDate":"2023-11-11"},{"lineNumber":24,"author":{"gitId":"cyaoxuan"},"content":"import seedu.address.model.policy.PolicyNumber;","lastModifiedDate":"2023-11-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class JsonAdaptedPersonTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"cyaoxuan"},"content":"    private static final String INVALID_NAME \u003d \"Rachel!\";","lastModifiedDate":"2023-11-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"cyaoxuan"},"content":"    private static final String INVALID_NRIC \u003d \"1234567A\";","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"cyaoxuan"},"content":"    private static final String INVALID_LICENCE_PLATE \u003d \"ABC123D\";","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"cyaoxuan"},"content":"    private static final String INVALID_COMPANY \u003d \"    \";","lastModifiedDate":"2023-11-11"},{"lineNumber":35,"author":{"gitId":"cyaoxuan"},"content":"    private static final String INVALID_POLICY_NUMBER \u003d \"#AIA\";","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"cyaoxuan"},"content":"    private static final String INVALID_POLICY_DATE \u003d \"19-19-2000\";","lastModifiedDate":"2023-11-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d BENSON.getAddress().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BENSON.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        .collect(Collectors.toList());","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"cyaoxuan"},"content":"    private static final String VALID_NRIC \u003d \"567A\";","lastModifiedDate":"2023-10-13"},{"lineNumber":46,"author":{"gitId":"cyaoxuan"},"content":"    private static final String VALID_LICENCE_PLATE \u003d \"SBC123D\";","lastModifiedDate":"2023-10-13"},{"lineNumber":47,"author":{"gitId":"suryanshkushwaha"},"content":"    private static final String VALID_COMPANY \u003d \"NTUC\";","lastModifiedDate":"2023-10-23"},{"lineNumber":48,"author":{"gitId":"cyaoxuan"},"content":"    private static final String VALID_POLICY_NUMBER \u003d \"AIA1234\";","lastModifiedDate":"2023-10-13"},{"lineNumber":49,"author":{"gitId":"cyaoxuan"},"content":"    private static final String VALID_POLICY_DATE \u003d \"01-01-2023\";","lastModifiedDate":"2023-10-13"},{"lineNumber":50,"author":{"gitId":"cyaoxuan"},"content":"    private static final String VALID_REMARK \u003d BENSON.getRemark().toString();","lastModifiedDate":"2023-11-01"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(BENSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertEquals(BENSON, person.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"suryanshkushwaha"},"content":"            new JsonAdaptedPerson(","lastModifiedDate":"2023-10-23"},{"lineNumber":62,"author":{"gitId":"suryanshkushwaha"},"content":"                INVALID_NAME,","lastModifiedDate":"2023-10-23"},{"lineNumber":63,"author":{"gitId":"suryanshkushwaha"},"content":"                VALID_PHONE,","lastModifiedDate":"2023-10-23"},{"lineNumber":64,"author":{"gitId":"suryanshkushwaha"},"content":"                VALID_EMAIL,","lastModifiedDate":"2023-10-23"},{"lineNumber":65,"author":{"gitId":"suryanshkushwaha"},"content":"                VALID_ADDRESS,","lastModifiedDate":"2023-10-23"},{"lineNumber":66,"author":{"gitId":"suryanshkushwaha"},"content":"                VALID_TAGS,","lastModifiedDate":"2023-10-23"},{"lineNumber":67,"author":{"gitId":"suryanshkushwaha"},"content":"                VALID_NRIC,","lastModifiedDate":"2023-10-23"},{"lineNumber":68,"author":{"gitId":"suryanshkushwaha"},"content":"                VALID_LICENCE_PLATE,","lastModifiedDate":"2023-10-23"},{"lineNumber":69,"author":{"gitId":"cyaoxuan"},"content":"                VALID_REMARK,","lastModifiedDate":"2023-11-01"},{"lineNumber":70,"author":{"gitId":"suryanshkushwaha"},"content":"                VALID_COMPANY,","lastModifiedDate":"2023-10-23"},{"lineNumber":71,"author":{"gitId":"suryanshkushwaha"},"content":"                VALID_POLICY_NUMBER,","lastModifiedDate":"2023-10-23"},{"lineNumber":72,"author":{"gitId":"suryanshkushwaha"},"content":"                VALID_POLICY_DATE,","lastModifiedDate":"2023-10-23"},{"lineNumber":73,"author":{"gitId":"suryanshkushwaha"},"content":"                VALID_POLICY_DATE","lastModifiedDate":"2023-10-23"},{"lineNumber":74,"author":{"gitId":"suryanshkushwaha"},"content":"            );","lastModifiedDate":"2023-10-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"suryanshkushwaha"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(","lastModifiedDate":"2023-10-23"},{"lineNumber":82,"author":{"gitId":"suryanshkushwaha"},"content":"            null,","lastModifiedDate":"2023-10-23"},{"lineNumber":83,"author":{"gitId":"suryanshkushwaha"},"content":"            VALID_PHONE,","lastModifiedDate":"2023-10-23"},{"lineNumber":84,"author":{"gitId":"suryanshkushwaha"},"content":"            VALID_EMAIL,","lastModifiedDate":"2023-10-23"},{"lineNumber":85,"author":{"gitId":"suryanshkushwaha"},"content":"            VALID_ADDRESS,","lastModifiedDate":"2023-10-23"},{"lineNumber":86,"author":{"gitId":"suryanshkushwaha"},"content":"            VALID_TAGS,","lastModifiedDate":"2023-10-23"},{"lineNumber":87,"author":{"gitId":"suryanshkushwaha"},"content":"            VALID_NRIC,","lastModifiedDate":"2023-10-23"},{"lineNumber":88,"author":{"gitId":"suryanshkushwaha"},"content":"            VALID_LICENCE_PLATE,","lastModifiedDate":"2023-10-23"},{"lineNumber":89,"author":{"gitId":"cyaoxuan"},"content":"            VALID_REMARK,","lastModifiedDate":"2023-11-01"},{"lineNumber":90,"author":{"gitId":"suryanshkushwaha"},"content":"            VALID_COMPANY,","lastModifiedDate":"2023-10-23"},{"lineNumber":91,"author":{"gitId":"suryanshkushwaha"},"content":"            VALID_POLICY_NUMBER,","lastModifiedDate":"2023-10-23"},{"lineNumber":92,"author":{"gitId":"suryanshkushwaha"},"content":"            VALID_POLICY_DATE,","lastModifiedDate":"2023-10-23"},{"lineNumber":93,"author":{"gitId":"suryanshkushwaha"},"content":"            VALID_POLICY_DATE","lastModifiedDate":"2023-10-23"},{"lineNumber":94,"author":{"gitId":"suryanshkushwaha"},"content":"        );","lastModifiedDate":"2023-10-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"suryanshkushwaha"},"content":"            new JsonAdaptedPerson(","lastModifiedDate":"2023-10-23"},{"lineNumber":103,"author":{"gitId":"suryanshkushwaha"},"content":"                VALID_NAME,","lastModifiedDate":"2023-10-23"},{"lineNumber":104,"author":{"gitId":"suryanshkushwaha"},"content":"                INVALID_PHONE,","lastModifiedDate":"2023-10-23"},{"lineNumber":105,"author":{"gitId":"suryanshkushwaha"},"content":"                VALID_EMAIL,","lastModifiedDate":"2023-10-23"},{"lineNumber":106,"author":{"gitId":"suryanshkushwaha"},"content":"                VALID_ADDRESS,","lastModifiedDate":"2023-10-23"},{"lineNumber":107,"author":{"gitId":"suryanshkushwaha"},"content":"                VALID_TAGS,","lastModifiedDate":"2023-10-23"},{"lineNumber":108,"author":{"gitId":"suryanshkushwaha"},"content":"                VALID_NRIC,","lastModifiedDate":"2023-10-23"},{"lineNumber":109,"author":{"gitId":"suryanshkushwaha"},"content":"                VALID_LICENCE_PLATE,","lastModifiedDate":"2023-10-23"},{"lineNumber":110,"author":{"gitId":"cyaoxuan"},"content":"                VALID_REMARK,","lastModifiedDate":"2023-11-01"},{"lineNumber":111,"author":{"gitId":"suryanshkushwaha"},"content":"                VALID_COMPANY,","lastModifiedDate":"2023-10-23"},{"lineNumber":112,"author":{"gitId":"suryanshkushwaha"},"content":"                VALID_POLICY_NUMBER,","lastModifiedDate":"2023-10-23"},{"lineNumber":113,"author":{"gitId":"suryanshkushwaha"},"content":"                VALID_POLICY_DATE,","lastModifiedDate":"2023-10-23"},{"lineNumber":114,"author":{"gitId":"suryanshkushwaha"},"content":"                VALID_POLICY_DATE","lastModifiedDate":"2023-10-23"},{"lineNumber":115,"author":{"gitId":"suryanshkushwaha"},"content":"            );","lastModifiedDate":"2023-10-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":122,"author":{"gitId":"suryanshkushwaha"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(","lastModifiedDate":"2023-10-23"},{"lineNumber":123,"author":{"gitId":"suryanshkushwaha"},"content":"            VALID_NAME,","lastModifiedDate":"2023-10-23"},{"lineNumber":124,"author":{"gitId":"suryanshkushwaha"},"content":"            null,","lastModifiedDate":"2023-10-23"},{"lineNumber":125,"author":{"gitId":"suryanshkushwaha"},"content":"            VALID_EMAIL,","lastModifiedDate":"2023-10-23"},{"lineNumber":126,"author":{"gitId":"suryanshkushwaha"},"content":"            VALID_ADDRESS,","lastModifiedDate":"2023-10-23"},{"lineNumber":127,"author":{"gitId":"suryanshkushwaha"},"content":"            VALID_TAGS,","lastModifiedDate":"2023-10-23"},{"lineNumber":128,"author":{"gitId":"suryanshkushwaha"},"content":"            VALID_NRIC,","lastModifiedDate":"2023-10-23"},{"lineNumber":129,"author":{"gitId":"suryanshkushwaha"},"content":"            VALID_LICENCE_PLATE,","lastModifiedDate":"2023-10-23"},{"lineNumber":130,"author":{"gitId":"cyaoxuan"},"content":"            VALID_REMARK,","lastModifiedDate":"2023-11-01"},{"lineNumber":131,"author":{"gitId":"suryanshkushwaha"},"content":"            VALID_COMPANY,","lastModifiedDate":"2023-10-23"},{"lineNumber":132,"author":{"gitId":"suryanshkushwaha"},"content":"            VALID_POLICY_NUMBER,","lastModifiedDate":"2023-10-23"},{"lineNumber":133,"author":{"gitId":"suryanshkushwaha"},"content":"            VALID_POLICY_DATE,","lastModifiedDate":"2023-10-23"},{"lineNumber":134,"author":{"gitId":"suryanshkushwaha"},"content":"            VALID_POLICY_DATE","lastModifiedDate":"2023-10-23"},{"lineNumber":135,"author":{"gitId":"suryanshkushwaha"},"content":"        );","lastModifiedDate":"2023-10-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":143,"author":{"gitId":"suryanshkushwaha"},"content":"            new JsonAdaptedPerson(","lastModifiedDate":"2023-10-23"},{"lineNumber":144,"author":{"gitId":"suryanshkushwaha"},"content":"                VALID_NAME,","lastModifiedDate":"2023-10-23"},{"lineNumber":145,"author":{"gitId":"suryanshkushwaha"},"content":"                VALID_PHONE,","lastModifiedDate":"2023-10-23"},{"lineNumber":146,"author":{"gitId":"suryanshkushwaha"},"content":"                INVALID_EMAIL,","lastModifiedDate":"2023-10-23"},{"lineNumber":147,"author":{"gitId":"suryanshkushwaha"},"content":"                VALID_ADDRESS,","lastModifiedDate":"2023-10-23"},{"lineNumber":148,"author":{"gitId":"suryanshkushwaha"},"content":"                VALID_TAGS,","lastModifiedDate":"2023-10-23"},{"lineNumber":149,"author":{"gitId":"suryanshkushwaha"},"content":"                VALID_NRIC,","lastModifiedDate":"2023-10-23"},{"lineNumber":150,"author":{"gitId":"suryanshkushwaha"},"content":"                VALID_LICENCE_PLATE,","lastModifiedDate":"2023-10-23"},{"lineNumber":151,"author":{"gitId":"cyaoxuan"},"content":"                VALID_REMARK,","lastModifiedDate":"2023-11-01"},{"lineNumber":152,"author":{"gitId":"suryanshkushwaha"},"content":"                VALID_COMPANY,","lastModifiedDate":"2023-10-23"},{"lineNumber":153,"author":{"gitId":"suryanshkushwaha"},"content":"                VALID_POLICY_NUMBER,","lastModifiedDate":"2023-10-23"},{"lineNumber":154,"author":{"gitId":"suryanshkushwaha"},"content":"                VALID_POLICY_DATE,","lastModifiedDate":"2023-10-23"},{"lineNumber":155,"author":{"gitId":"suryanshkushwaha"},"content":"                VALID_POLICY_DATE","lastModifiedDate":"2023-10-23"},{"lineNumber":156,"author":{"gitId":"suryanshkushwaha"},"content":"            );","lastModifiedDate":"2023-10-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":163,"author":{"gitId":"suryanshkushwaha"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(","lastModifiedDate":"2023-10-23"},{"lineNumber":164,"author":{"gitId":"suryanshkushwaha"},"content":"            VALID_NAME,","lastModifiedDate":"2023-10-23"},{"lineNumber":165,"author":{"gitId":"suryanshkushwaha"},"content":"            VALID_PHONE,","lastModifiedDate":"2023-10-23"},{"lineNumber":166,"author":{"gitId":"suryanshkushwaha"},"content":"            null,","lastModifiedDate":"2023-10-23"},{"lineNumber":167,"author":{"gitId":"suryanshkushwaha"},"content":"            VALID_ADDRESS,","lastModifiedDate":"2023-10-23"},{"lineNumber":168,"author":{"gitId":"suryanshkushwaha"},"content":"            VALID_TAGS,","lastModifiedDate":"2023-10-23"},{"lineNumber":169,"author":{"gitId":"suryanshkushwaha"},"content":"            VALID_NRIC,","lastModifiedDate":"2023-10-23"},{"lineNumber":170,"author":{"gitId":"suryanshkushwaha"},"content":"            VALID_LICENCE_PLATE,","lastModifiedDate":"2023-10-23"},{"lineNumber":171,"author":{"gitId":"cyaoxuan"},"content":"            VALID_REMARK,","lastModifiedDate":"2023-11-01"},{"lineNumber":172,"author":{"gitId":"suryanshkushwaha"},"content":"            VALID_COMPANY,","lastModifiedDate":"2023-10-23"},{"lineNumber":173,"author":{"gitId":"suryanshkushwaha"},"content":"            VALID_POLICY_NUMBER,","lastModifiedDate":"2023-10-23"},{"lineNumber":174,"author":{"gitId":"suryanshkushwaha"},"content":"            VALID_POLICY_DATE,","lastModifiedDate":"2023-10-23"},{"lineNumber":175,"author":{"gitId":"suryanshkushwaha"},"content":"            VALID_POLICY_DATE","lastModifiedDate":"2023-10-23"},{"lineNumber":176,"author":{"gitId":"suryanshkushwaha"},"content":"        );","lastModifiedDate":"2023-10-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    public void toModelType_invalidAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":184,"author":{"gitId":"suryanshkushwaha"},"content":"            new JsonAdaptedPerson(","lastModifiedDate":"2023-10-23"},{"lineNumber":185,"author":{"gitId":"suryanshkushwaha"},"content":"                VALID_NAME,","lastModifiedDate":"2023-10-23"},{"lineNumber":186,"author":{"gitId":"suryanshkushwaha"},"content":"                VALID_PHONE,","lastModifiedDate":"2023-10-23"},{"lineNumber":187,"author":{"gitId":"suryanshkushwaha"},"content":"                VALID_EMAIL,","lastModifiedDate":"2023-10-23"},{"lineNumber":188,"author":{"gitId":"suryanshkushwaha"},"content":"                INVALID_ADDRESS,","lastModifiedDate":"2023-10-23"},{"lineNumber":189,"author":{"gitId":"suryanshkushwaha"},"content":"                VALID_TAGS,","lastModifiedDate":"2023-10-23"},{"lineNumber":190,"author":{"gitId":"suryanshkushwaha"},"content":"                VALID_NRIC,","lastModifiedDate":"2023-10-23"},{"lineNumber":191,"author":{"gitId":"suryanshkushwaha"},"content":"                VALID_LICENCE_PLATE,","lastModifiedDate":"2023-10-23"},{"lineNumber":192,"author":{"gitId":"cyaoxuan"},"content":"                VALID_REMARK,","lastModifiedDate":"2023-11-01"},{"lineNumber":193,"author":{"gitId":"suryanshkushwaha"},"content":"                VALID_COMPANY,","lastModifiedDate":"2023-10-23"},{"lineNumber":194,"author":{"gitId":"suryanshkushwaha"},"content":"                VALID_POLICY_NUMBER,","lastModifiedDate":"2023-10-23"},{"lineNumber":195,"author":{"gitId":"suryanshkushwaha"},"content":"                VALID_POLICY_DATE,","lastModifiedDate":"2023-10-23"},{"lineNumber":196,"author":{"gitId":"suryanshkushwaha"},"content":"                VALID_POLICY_DATE","lastModifiedDate":"2023-10-23"},{"lineNumber":197,"author":{"gitId":"suryanshkushwaha"},"content":"            );","lastModifiedDate":"2023-10-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Address.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    public void toModelType_nullAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":204,"author":{"gitId":"suryanshkushwaha"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(","lastModifiedDate":"2023-10-23"},{"lineNumber":205,"author":{"gitId":"suryanshkushwaha"},"content":"            VALID_NAME,","lastModifiedDate":"2023-10-23"},{"lineNumber":206,"author":{"gitId":"suryanshkushwaha"},"content":"            VALID_PHONE,","lastModifiedDate":"2023-10-23"},{"lineNumber":207,"author":{"gitId":"suryanshkushwaha"},"content":"            VALID_EMAIL,","lastModifiedDate":"2023-10-23"},{"lineNumber":208,"author":{"gitId":"suryanshkushwaha"},"content":"            null,","lastModifiedDate":"2023-10-23"},{"lineNumber":209,"author":{"gitId":"suryanshkushwaha"},"content":"            VALID_TAGS,","lastModifiedDate":"2023-10-23"},{"lineNumber":210,"author":{"gitId":"suryanshkushwaha"},"content":"            VALID_NRIC,","lastModifiedDate":"2023-10-23"},{"lineNumber":211,"author":{"gitId":"suryanshkushwaha"},"content":"            VALID_LICENCE_PLATE,","lastModifiedDate":"2023-10-23"},{"lineNumber":212,"author":{"gitId":"cyaoxuan"},"content":"            VALID_REMARK,","lastModifiedDate":"2023-11-01"},{"lineNumber":213,"author":{"gitId":"suryanshkushwaha"},"content":"            VALID_COMPANY,","lastModifiedDate":"2023-10-23"},{"lineNumber":214,"author":{"gitId":"suryanshkushwaha"},"content":"            VALID_POLICY_NUMBER,","lastModifiedDate":"2023-10-23"},{"lineNumber":215,"author":{"gitId":"suryanshkushwaha"},"content":"            VALID_POLICY_DATE,","lastModifiedDate":"2023-10-23"},{"lineNumber":216,"author":{"gitId":"suryanshkushwaha"},"content":"            VALID_POLICY_DATE","lastModifiedDate":"2023-10-23"},{"lineNumber":217,"author":{"gitId":"suryanshkushwaha"},"content":"        );","lastModifiedDate":"2023-10-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2018-08-13"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":227,"author":{"gitId":"suryanshkushwaha"},"content":"            new JsonAdaptedPerson(","lastModifiedDate":"2023-10-23"},{"lineNumber":228,"author":{"gitId":"suryanshkushwaha"},"content":"                VALID_NAME,","lastModifiedDate":"2023-10-23"},{"lineNumber":229,"author":{"gitId":"suryanshkushwaha"},"content":"                VALID_PHONE,","lastModifiedDate":"2023-10-23"},{"lineNumber":230,"author":{"gitId":"suryanshkushwaha"},"content":"                VALID_EMAIL,","lastModifiedDate":"2023-10-23"},{"lineNumber":231,"author":{"gitId":"suryanshkushwaha"},"content":"                VALID_ADDRESS,","lastModifiedDate":"2023-10-23"},{"lineNumber":232,"author":{"gitId":"suryanshkushwaha"},"content":"                invalidTags,","lastModifiedDate":"2023-10-23"},{"lineNumber":233,"author":{"gitId":"suryanshkushwaha"},"content":"                VALID_NRIC,","lastModifiedDate":"2023-10-23"},{"lineNumber":234,"author":{"gitId":"suryanshkushwaha"},"content":"                VALID_LICENCE_PLATE,","lastModifiedDate":"2023-10-23"},{"lineNumber":235,"author":{"gitId":"cyaoxuan"},"content":"                VALID_REMARK,","lastModifiedDate":"2023-11-01"},{"lineNumber":236,"author":{"gitId":"suryanshkushwaha"},"content":"                VALID_COMPANY,","lastModifiedDate":"2023-10-23"},{"lineNumber":237,"author":{"gitId":"suryanshkushwaha"},"content":"                VALID_POLICY_NUMBER,","lastModifiedDate":"2023-10-23"},{"lineNumber":238,"author":{"gitId":"suryanshkushwaha"},"content":"                VALID_POLICY_DATE,","lastModifiedDate":"2023-10-23"},{"lineNumber":239,"author":{"gitId":"suryanshkushwaha"},"content":"                VALID_POLICY_DATE","lastModifiedDate":"2023-10-23"},{"lineNumber":240,"author":{"gitId":"suryanshkushwaha"},"content":"            );","lastModifiedDate":"2023-10-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":242,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":244,"author":{"gitId":"cyaoxuan"},"content":"    @Test","lastModifiedDate":"2023-11-11"},{"lineNumber":245,"author":{"gitId":"cyaoxuan"},"content":"    public void toModelType_invalidNric_throwsIllegalValueException() {","lastModifiedDate":"2023-11-11"},{"lineNumber":246,"author":{"gitId":"cyaoxuan"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2023-11-11"},{"lineNumber":247,"author":{"gitId":"cyaoxuan"},"content":"                new JsonAdaptedPerson(","lastModifiedDate":"2023-11-11"},{"lineNumber":248,"author":{"gitId":"cyaoxuan"},"content":"                        VALID_NAME,","lastModifiedDate":"2023-11-11"},{"lineNumber":249,"author":{"gitId":"cyaoxuan"},"content":"                        VALID_PHONE,","lastModifiedDate":"2023-11-11"},{"lineNumber":250,"author":{"gitId":"cyaoxuan"},"content":"                        VALID_EMAIL,","lastModifiedDate":"2023-11-11"},{"lineNumber":251,"author":{"gitId":"cyaoxuan"},"content":"                        VALID_ADDRESS,","lastModifiedDate":"2023-11-11"},{"lineNumber":252,"author":{"gitId":"cyaoxuan"},"content":"                        VALID_TAGS,","lastModifiedDate":"2023-11-11"},{"lineNumber":253,"author":{"gitId":"cyaoxuan"},"content":"                        INVALID_NRIC,","lastModifiedDate":"2023-11-11"},{"lineNumber":254,"author":{"gitId":"cyaoxuan"},"content":"                        VALID_LICENCE_PLATE,","lastModifiedDate":"2023-11-11"},{"lineNumber":255,"author":{"gitId":"cyaoxuan"},"content":"                        VALID_REMARK,","lastModifiedDate":"2023-11-11"},{"lineNumber":256,"author":{"gitId":"cyaoxuan"},"content":"                        VALID_COMPANY,","lastModifiedDate":"2023-11-11"},{"lineNumber":257,"author":{"gitId":"cyaoxuan"},"content":"                        VALID_POLICY_NUMBER,","lastModifiedDate":"2023-11-11"},{"lineNumber":258,"author":{"gitId":"cyaoxuan"},"content":"                        VALID_POLICY_DATE,","lastModifiedDate":"2023-11-11"},{"lineNumber":259,"author":{"gitId":"cyaoxuan"},"content":"                        VALID_POLICY_DATE","lastModifiedDate":"2023-11-11"},{"lineNumber":260,"author":{"gitId":"cyaoxuan"},"content":"                );","lastModifiedDate":"2023-11-11"},{"lineNumber":261,"author":{"gitId":"cyaoxuan"},"content":"        String expectedMessage \u003d Nric.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-11-11"},{"lineNumber":262,"author":{"gitId":"cyaoxuan"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2023-11-11"},{"lineNumber":263,"author":{"gitId":"cyaoxuan"},"content":"    }","lastModifiedDate":"2023-11-11"},{"lineNumber":264,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":265,"author":{"gitId":"cyaoxuan"},"content":"    @Test","lastModifiedDate":"2023-11-11"},{"lineNumber":266,"author":{"gitId":"cyaoxuan"},"content":"    public void toModelType_nullNric_throwsIllegalValueException() {","lastModifiedDate":"2023-11-11"},{"lineNumber":267,"author":{"gitId":"cyaoxuan"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(","lastModifiedDate":"2023-11-11"},{"lineNumber":268,"author":{"gitId":"cyaoxuan"},"content":"                VALID_NAME,","lastModifiedDate":"2023-11-11"},{"lineNumber":269,"author":{"gitId":"cyaoxuan"},"content":"                VALID_PHONE,","lastModifiedDate":"2023-11-11"},{"lineNumber":270,"author":{"gitId":"cyaoxuan"},"content":"                VALID_EMAIL,","lastModifiedDate":"2023-11-11"},{"lineNumber":271,"author":{"gitId":"cyaoxuan"},"content":"                VALID_ADDRESS,","lastModifiedDate":"2023-11-11"},{"lineNumber":272,"author":{"gitId":"cyaoxuan"},"content":"                VALID_TAGS,","lastModifiedDate":"2023-11-11"},{"lineNumber":273,"author":{"gitId":"cyaoxuan"},"content":"                null,","lastModifiedDate":"2023-11-11"},{"lineNumber":274,"author":{"gitId":"cyaoxuan"},"content":"                VALID_LICENCE_PLATE,","lastModifiedDate":"2023-11-11"},{"lineNumber":275,"author":{"gitId":"cyaoxuan"},"content":"                VALID_REMARK,","lastModifiedDate":"2023-11-11"},{"lineNumber":276,"author":{"gitId":"cyaoxuan"},"content":"                VALID_COMPANY,","lastModifiedDate":"2023-11-11"},{"lineNumber":277,"author":{"gitId":"cyaoxuan"},"content":"                VALID_POLICY_NUMBER,","lastModifiedDate":"2023-11-11"},{"lineNumber":278,"author":{"gitId":"cyaoxuan"},"content":"                VALID_POLICY_DATE,","lastModifiedDate":"2023-11-11"},{"lineNumber":279,"author":{"gitId":"cyaoxuan"},"content":"                VALID_POLICY_DATE","lastModifiedDate":"2023-11-11"},{"lineNumber":280,"author":{"gitId":"cyaoxuan"},"content":"        );","lastModifiedDate":"2023-11-11"},{"lineNumber":281,"author":{"gitId":"cyaoxuan"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Nric.class.getSimpleName());","lastModifiedDate":"2023-11-11"},{"lineNumber":282,"author":{"gitId":"cyaoxuan"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2023-11-11"},{"lineNumber":283,"author":{"gitId":"cyaoxuan"},"content":"    }","lastModifiedDate":"2023-11-11"},{"lineNumber":284,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":285,"author":{"gitId":"cyaoxuan"},"content":"    @Test","lastModifiedDate":"2023-11-11"},{"lineNumber":286,"author":{"gitId":"cyaoxuan"},"content":"    public void toModelType_invalidLicencePlate_throwsIllegalValueException() {","lastModifiedDate":"2023-11-11"},{"lineNumber":287,"author":{"gitId":"cyaoxuan"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2023-11-11"},{"lineNumber":288,"author":{"gitId":"cyaoxuan"},"content":"                new JsonAdaptedPerson(","lastModifiedDate":"2023-11-11"},{"lineNumber":289,"author":{"gitId":"cyaoxuan"},"content":"                        VALID_NAME,","lastModifiedDate":"2023-11-11"},{"lineNumber":290,"author":{"gitId":"cyaoxuan"},"content":"                        VALID_PHONE,","lastModifiedDate":"2023-11-11"},{"lineNumber":291,"author":{"gitId":"cyaoxuan"},"content":"                        VALID_EMAIL,","lastModifiedDate":"2023-11-11"},{"lineNumber":292,"author":{"gitId":"cyaoxuan"},"content":"                        VALID_ADDRESS,","lastModifiedDate":"2023-11-11"},{"lineNumber":293,"author":{"gitId":"cyaoxuan"},"content":"                        VALID_TAGS,","lastModifiedDate":"2023-11-11"},{"lineNumber":294,"author":{"gitId":"cyaoxuan"},"content":"                        VALID_NRIC,","lastModifiedDate":"2023-11-11"},{"lineNumber":295,"author":{"gitId":"cyaoxuan"},"content":"                        INVALID_LICENCE_PLATE,","lastModifiedDate":"2023-11-11"},{"lineNumber":296,"author":{"gitId":"cyaoxuan"},"content":"                        VALID_REMARK,","lastModifiedDate":"2023-11-11"},{"lineNumber":297,"author":{"gitId":"cyaoxuan"},"content":"                        VALID_COMPANY,","lastModifiedDate":"2023-11-11"},{"lineNumber":298,"author":{"gitId":"cyaoxuan"},"content":"                        VALID_POLICY_NUMBER,","lastModifiedDate":"2023-11-11"},{"lineNumber":299,"author":{"gitId":"cyaoxuan"},"content":"                        VALID_POLICY_DATE,","lastModifiedDate":"2023-11-11"},{"lineNumber":300,"author":{"gitId":"cyaoxuan"},"content":"                        VALID_POLICY_DATE","lastModifiedDate":"2023-11-11"},{"lineNumber":301,"author":{"gitId":"cyaoxuan"},"content":"                );","lastModifiedDate":"2023-11-11"},{"lineNumber":302,"author":{"gitId":"cyaoxuan"},"content":"        String expectedMessage \u003d LicencePlate.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-11-11"},{"lineNumber":303,"author":{"gitId":"cyaoxuan"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2023-11-11"},{"lineNumber":304,"author":{"gitId":"cyaoxuan"},"content":"    }","lastModifiedDate":"2023-11-11"},{"lineNumber":305,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":306,"author":{"gitId":"cyaoxuan"},"content":"    @Test","lastModifiedDate":"2023-11-11"},{"lineNumber":307,"author":{"gitId":"cyaoxuan"},"content":"    public void toModelType_nullLicencePlate_throwsIllegalValueException() {","lastModifiedDate":"2023-11-11"},{"lineNumber":308,"author":{"gitId":"cyaoxuan"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(","lastModifiedDate":"2023-11-11"},{"lineNumber":309,"author":{"gitId":"cyaoxuan"},"content":"                VALID_NAME,","lastModifiedDate":"2023-11-11"},{"lineNumber":310,"author":{"gitId":"cyaoxuan"},"content":"                VALID_PHONE,","lastModifiedDate":"2023-11-11"},{"lineNumber":311,"author":{"gitId":"cyaoxuan"},"content":"                VALID_EMAIL,","lastModifiedDate":"2023-11-11"},{"lineNumber":312,"author":{"gitId":"cyaoxuan"},"content":"                VALID_ADDRESS,","lastModifiedDate":"2023-11-11"},{"lineNumber":313,"author":{"gitId":"cyaoxuan"},"content":"                VALID_TAGS,","lastModifiedDate":"2023-11-11"},{"lineNumber":314,"author":{"gitId":"cyaoxuan"},"content":"                VALID_NRIC,","lastModifiedDate":"2023-11-11"},{"lineNumber":315,"author":{"gitId":"cyaoxuan"},"content":"                null,","lastModifiedDate":"2023-11-11"},{"lineNumber":316,"author":{"gitId":"cyaoxuan"},"content":"                VALID_REMARK,","lastModifiedDate":"2023-11-11"},{"lineNumber":317,"author":{"gitId":"cyaoxuan"},"content":"                VALID_COMPANY,","lastModifiedDate":"2023-11-11"},{"lineNumber":318,"author":{"gitId":"cyaoxuan"},"content":"                VALID_POLICY_NUMBER,","lastModifiedDate":"2023-11-11"},{"lineNumber":319,"author":{"gitId":"cyaoxuan"},"content":"                VALID_POLICY_DATE,","lastModifiedDate":"2023-11-11"},{"lineNumber":320,"author":{"gitId":"cyaoxuan"},"content":"                VALID_POLICY_DATE","lastModifiedDate":"2023-11-11"},{"lineNumber":321,"author":{"gitId":"cyaoxuan"},"content":"        );","lastModifiedDate":"2023-11-11"},{"lineNumber":322,"author":{"gitId":"cyaoxuan"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, LicencePlate.class.getSimpleName());","lastModifiedDate":"2023-11-11"},{"lineNumber":323,"author":{"gitId":"cyaoxuan"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2023-11-11"},{"lineNumber":324,"author":{"gitId":"cyaoxuan"},"content":"    }","lastModifiedDate":"2023-11-11"},{"lineNumber":325,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":326,"author":{"gitId":"cyaoxuan"},"content":"    @Test","lastModifiedDate":"2023-11-11"},{"lineNumber":327,"author":{"gitId":"cyaoxuan"},"content":"    public void toModelType_nullRemark_throwsIllegalValueException() {","lastModifiedDate":"2023-11-11"},{"lineNumber":328,"author":{"gitId":"cyaoxuan"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(","lastModifiedDate":"2023-11-11"},{"lineNumber":329,"author":{"gitId":"cyaoxuan"},"content":"                VALID_NAME,","lastModifiedDate":"2023-11-11"},{"lineNumber":330,"author":{"gitId":"cyaoxuan"},"content":"                VALID_PHONE,","lastModifiedDate":"2023-11-11"},{"lineNumber":331,"author":{"gitId":"cyaoxuan"},"content":"                VALID_EMAIL,","lastModifiedDate":"2023-11-11"},{"lineNumber":332,"author":{"gitId":"cyaoxuan"},"content":"                VALID_ADDRESS,","lastModifiedDate":"2023-11-11"},{"lineNumber":333,"author":{"gitId":"cyaoxuan"},"content":"                VALID_TAGS,","lastModifiedDate":"2023-11-11"},{"lineNumber":334,"author":{"gitId":"cyaoxuan"},"content":"                VALID_NRIC,","lastModifiedDate":"2023-11-11"},{"lineNumber":335,"author":{"gitId":"cyaoxuan"},"content":"                VALID_LICENCE_PLATE,","lastModifiedDate":"2023-11-11"},{"lineNumber":336,"author":{"gitId":"cyaoxuan"},"content":"                null,","lastModifiedDate":"2023-11-11"},{"lineNumber":337,"author":{"gitId":"cyaoxuan"},"content":"                VALID_COMPANY,","lastModifiedDate":"2023-11-11"},{"lineNumber":338,"author":{"gitId":"cyaoxuan"},"content":"                VALID_POLICY_NUMBER,","lastModifiedDate":"2023-11-11"},{"lineNumber":339,"author":{"gitId":"cyaoxuan"},"content":"                VALID_POLICY_DATE,","lastModifiedDate":"2023-11-11"},{"lineNumber":340,"author":{"gitId":"cyaoxuan"},"content":"                VALID_POLICY_DATE","lastModifiedDate":"2023-11-11"},{"lineNumber":341,"author":{"gitId":"cyaoxuan"},"content":"        );","lastModifiedDate":"2023-11-11"},{"lineNumber":342,"author":{"gitId":"cyaoxuan"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Remark.class.getSimpleName());","lastModifiedDate":"2023-11-11"},{"lineNumber":343,"author":{"gitId":"cyaoxuan"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2023-11-11"},{"lineNumber":344,"author":{"gitId":"cyaoxuan"},"content":"    }","lastModifiedDate":"2023-11-11"},{"lineNumber":345,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":346,"author":{"gitId":"cyaoxuan"},"content":"    @Test","lastModifiedDate":"2023-11-11"},{"lineNumber":347,"author":{"gitId":"cyaoxuan"},"content":"    public void toModelType_invalidCompany_throwsIllegalValueException() {","lastModifiedDate":"2023-11-11"},{"lineNumber":348,"author":{"gitId":"cyaoxuan"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2023-11-11"},{"lineNumber":349,"author":{"gitId":"cyaoxuan"},"content":"                new JsonAdaptedPerson(","lastModifiedDate":"2023-11-11"},{"lineNumber":350,"author":{"gitId":"cyaoxuan"},"content":"                        VALID_NAME,","lastModifiedDate":"2023-11-11"},{"lineNumber":351,"author":{"gitId":"cyaoxuan"},"content":"                        VALID_PHONE,","lastModifiedDate":"2023-11-11"},{"lineNumber":352,"author":{"gitId":"cyaoxuan"},"content":"                        VALID_EMAIL,","lastModifiedDate":"2023-11-11"},{"lineNumber":353,"author":{"gitId":"cyaoxuan"},"content":"                        VALID_ADDRESS,","lastModifiedDate":"2023-11-11"},{"lineNumber":354,"author":{"gitId":"cyaoxuan"},"content":"                        VALID_TAGS,","lastModifiedDate":"2023-11-11"},{"lineNumber":355,"author":{"gitId":"cyaoxuan"},"content":"                        VALID_NRIC,","lastModifiedDate":"2023-11-11"},{"lineNumber":356,"author":{"gitId":"cyaoxuan"},"content":"                        VALID_LICENCE_PLATE,","lastModifiedDate":"2023-11-11"},{"lineNumber":357,"author":{"gitId":"cyaoxuan"},"content":"                        VALID_REMARK,","lastModifiedDate":"2023-11-11"},{"lineNumber":358,"author":{"gitId":"cyaoxuan"},"content":"                        INVALID_COMPANY,","lastModifiedDate":"2023-11-11"},{"lineNumber":359,"author":{"gitId":"cyaoxuan"},"content":"                        VALID_POLICY_NUMBER,","lastModifiedDate":"2023-11-11"},{"lineNumber":360,"author":{"gitId":"cyaoxuan"},"content":"                        VALID_POLICY_DATE,","lastModifiedDate":"2023-11-11"},{"lineNumber":361,"author":{"gitId":"cyaoxuan"},"content":"                        VALID_POLICY_DATE","lastModifiedDate":"2023-11-11"},{"lineNumber":362,"author":{"gitId":"cyaoxuan"},"content":"                );","lastModifiedDate":"2023-11-11"},{"lineNumber":363,"author":{"gitId":"cyaoxuan"},"content":"        String expectedMessage \u003d Company.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-11-11"},{"lineNumber":364,"author":{"gitId":"cyaoxuan"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2023-11-11"},{"lineNumber":365,"author":{"gitId":"cyaoxuan"},"content":"    }","lastModifiedDate":"2023-11-11"},{"lineNumber":366,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":367,"author":{"gitId":"cyaoxuan"},"content":"    @Test","lastModifiedDate":"2023-11-11"},{"lineNumber":368,"author":{"gitId":"cyaoxuan"},"content":"    public void toModelType_nullCompany_throwsIllegalValueException() {","lastModifiedDate":"2023-11-11"},{"lineNumber":369,"author":{"gitId":"cyaoxuan"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(","lastModifiedDate":"2023-11-11"},{"lineNumber":370,"author":{"gitId":"cyaoxuan"},"content":"                VALID_NAME,","lastModifiedDate":"2023-11-11"},{"lineNumber":371,"author":{"gitId":"cyaoxuan"},"content":"                VALID_PHONE,","lastModifiedDate":"2023-11-11"},{"lineNumber":372,"author":{"gitId":"cyaoxuan"},"content":"                VALID_EMAIL,","lastModifiedDate":"2023-11-11"},{"lineNumber":373,"author":{"gitId":"cyaoxuan"},"content":"                VALID_ADDRESS,","lastModifiedDate":"2023-11-11"},{"lineNumber":374,"author":{"gitId":"cyaoxuan"},"content":"                VALID_TAGS,","lastModifiedDate":"2023-11-11"},{"lineNumber":375,"author":{"gitId":"cyaoxuan"},"content":"                VALID_NRIC,","lastModifiedDate":"2023-11-11"},{"lineNumber":376,"author":{"gitId":"cyaoxuan"},"content":"                VALID_LICENCE_PLATE,","lastModifiedDate":"2023-11-11"},{"lineNumber":377,"author":{"gitId":"cyaoxuan"},"content":"                VALID_REMARK,","lastModifiedDate":"2023-11-11"},{"lineNumber":378,"author":{"gitId":"cyaoxuan"},"content":"                null,","lastModifiedDate":"2023-11-11"},{"lineNumber":379,"author":{"gitId":"cyaoxuan"},"content":"                VALID_POLICY_NUMBER,","lastModifiedDate":"2023-11-11"},{"lineNumber":380,"author":{"gitId":"cyaoxuan"},"content":"                VALID_POLICY_DATE,","lastModifiedDate":"2023-11-11"},{"lineNumber":381,"author":{"gitId":"cyaoxuan"},"content":"                VALID_POLICY_DATE","lastModifiedDate":"2023-11-11"},{"lineNumber":382,"author":{"gitId":"cyaoxuan"},"content":"        );","lastModifiedDate":"2023-11-11"},{"lineNumber":383,"author":{"gitId":"cyaoxuan"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Company.class.getSimpleName());","lastModifiedDate":"2023-11-11"},{"lineNumber":384,"author":{"gitId":"cyaoxuan"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2023-11-11"},{"lineNumber":385,"author":{"gitId":"cyaoxuan"},"content":"    }","lastModifiedDate":"2023-11-11"},{"lineNumber":386,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":387,"author":{"gitId":"cyaoxuan"},"content":"    @Test","lastModifiedDate":"2023-11-11"},{"lineNumber":388,"author":{"gitId":"cyaoxuan"},"content":"    public void toModelType_invalidPolicyNumber_throwsIllegalValueException() {","lastModifiedDate":"2023-11-11"},{"lineNumber":389,"author":{"gitId":"cyaoxuan"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2023-11-11"},{"lineNumber":390,"author":{"gitId":"cyaoxuan"},"content":"                new JsonAdaptedPerson(","lastModifiedDate":"2023-11-11"},{"lineNumber":391,"author":{"gitId":"cyaoxuan"},"content":"                        VALID_NAME,","lastModifiedDate":"2023-11-11"},{"lineNumber":392,"author":{"gitId":"cyaoxuan"},"content":"                        VALID_PHONE,","lastModifiedDate":"2023-11-11"},{"lineNumber":393,"author":{"gitId":"cyaoxuan"},"content":"                        VALID_EMAIL,","lastModifiedDate":"2023-11-11"},{"lineNumber":394,"author":{"gitId":"cyaoxuan"},"content":"                        VALID_ADDRESS,","lastModifiedDate":"2023-11-11"},{"lineNumber":395,"author":{"gitId":"cyaoxuan"},"content":"                        VALID_TAGS,","lastModifiedDate":"2023-11-11"},{"lineNumber":396,"author":{"gitId":"cyaoxuan"},"content":"                        VALID_NRIC,","lastModifiedDate":"2023-11-11"},{"lineNumber":397,"author":{"gitId":"cyaoxuan"},"content":"                        VALID_LICENCE_PLATE,","lastModifiedDate":"2023-11-11"},{"lineNumber":398,"author":{"gitId":"cyaoxuan"},"content":"                        VALID_REMARK,","lastModifiedDate":"2023-11-11"},{"lineNumber":399,"author":{"gitId":"cyaoxuan"},"content":"                        VALID_COMPANY,","lastModifiedDate":"2023-11-11"},{"lineNumber":400,"author":{"gitId":"cyaoxuan"},"content":"                        INVALID_POLICY_NUMBER,","lastModifiedDate":"2023-11-11"},{"lineNumber":401,"author":{"gitId":"cyaoxuan"},"content":"                        VALID_POLICY_DATE,","lastModifiedDate":"2023-11-11"},{"lineNumber":402,"author":{"gitId":"cyaoxuan"},"content":"                        VALID_POLICY_DATE","lastModifiedDate":"2023-11-11"},{"lineNumber":403,"author":{"gitId":"cyaoxuan"},"content":"                );","lastModifiedDate":"2023-11-11"},{"lineNumber":404,"author":{"gitId":"cyaoxuan"},"content":"        String expectedMessage \u003d PolicyNumber.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-11-11"},{"lineNumber":405,"author":{"gitId":"cyaoxuan"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2023-11-11"},{"lineNumber":406,"author":{"gitId":"cyaoxuan"},"content":"    }","lastModifiedDate":"2023-11-11"},{"lineNumber":407,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":408,"author":{"gitId":"cyaoxuan"},"content":"    @Test","lastModifiedDate":"2023-11-11"},{"lineNumber":409,"author":{"gitId":"cyaoxuan"},"content":"    public void toModelType_nullPolicyNumber_throwsIllegalValueException() {","lastModifiedDate":"2023-11-11"},{"lineNumber":410,"author":{"gitId":"cyaoxuan"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(","lastModifiedDate":"2023-11-11"},{"lineNumber":411,"author":{"gitId":"cyaoxuan"},"content":"                VALID_NAME,","lastModifiedDate":"2023-11-11"},{"lineNumber":412,"author":{"gitId":"cyaoxuan"},"content":"                VALID_PHONE,","lastModifiedDate":"2023-11-11"},{"lineNumber":413,"author":{"gitId":"cyaoxuan"},"content":"                VALID_EMAIL,","lastModifiedDate":"2023-11-11"},{"lineNumber":414,"author":{"gitId":"cyaoxuan"},"content":"                VALID_ADDRESS,","lastModifiedDate":"2023-11-11"},{"lineNumber":415,"author":{"gitId":"cyaoxuan"},"content":"                VALID_TAGS,","lastModifiedDate":"2023-11-11"},{"lineNumber":416,"author":{"gitId":"cyaoxuan"},"content":"                VALID_NRIC,","lastModifiedDate":"2023-11-11"},{"lineNumber":417,"author":{"gitId":"cyaoxuan"},"content":"                VALID_LICENCE_PLATE,","lastModifiedDate":"2023-11-11"},{"lineNumber":418,"author":{"gitId":"cyaoxuan"},"content":"                VALID_REMARK,","lastModifiedDate":"2023-11-11"},{"lineNumber":419,"author":{"gitId":"cyaoxuan"},"content":"                VALID_COMPANY,","lastModifiedDate":"2023-11-11"},{"lineNumber":420,"author":{"gitId":"cyaoxuan"},"content":"                null,","lastModifiedDate":"2023-11-11"},{"lineNumber":421,"author":{"gitId":"cyaoxuan"},"content":"                VALID_POLICY_DATE,","lastModifiedDate":"2023-11-11"},{"lineNumber":422,"author":{"gitId":"cyaoxuan"},"content":"                VALID_POLICY_DATE","lastModifiedDate":"2023-11-11"},{"lineNumber":423,"author":{"gitId":"cyaoxuan"},"content":"        );","lastModifiedDate":"2023-11-11"},{"lineNumber":424,"author":{"gitId":"cyaoxuan"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, PolicyNumber.class.getSimpleName());","lastModifiedDate":"2023-11-11"},{"lineNumber":425,"author":{"gitId":"cyaoxuan"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2023-11-11"},{"lineNumber":426,"author":{"gitId":"cyaoxuan"},"content":"    }","lastModifiedDate":"2023-11-11"},{"lineNumber":427,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":428,"author":{"gitId":"cyaoxuan"},"content":"    @Test","lastModifiedDate":"2023-11-11"},{"lineNumber":429,"author":{"gitId":"cyaoxuan"},"content":"    public void toModelType_invalidPolicyIssueDate_throwsIllegalValueException() {","lastModifiedDate":"2023-11-11"},{"lineNumber":430,"author":{"gitId":"cyaoxuan"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2023-11-11"},{"lineNumber":431,"author":{"gitId":"cyaoxuan"},"content":"                new JsonAdaptedPerson(","lastModifiedDate":"2023-11-11"},{"lineNumber":432,"author":{"gitId":"cyaoxuan"},"content":"                        VALID_NAME,","lastModifiedDate":"2023-11-11"},{"lineNumber":433,"author":{"gitId":"cyaoxuan"},"content":"                        VALID_PHONE,","lastModifiedDate":"2023-11-11"},{"lineNumber":434,"author":{"gitId":"cyaoxuan"},"content":"                        VALID_EMAIL,","lastModifiedDate":"2023-11-11"},{"lineNumber":435,"author":{"gitId":"cyaoxuan"},"content":"                        VALID_ADDRESS,","lastModifiedDate":"2023-11-11"},{"lineNumber":436,"author":{"gitId":"cyaoxuan"},"content":"                        VALID_TAGS,","lastModifiedDate":"2023-11-11"},{"lineNumber":437,"author":{"gitId":"cyaoxuan"},"content":"                        VALID_NRIC,","lastModifiedDate":"2023-11-11"},{"lineNumber":438,"author":{"gitId":"cyaoxuan"},"content":"                        VALID_LICENCE_PLATE,","lastModifiedDate":"2023-11-11"},{"lineNumber":439,"author":{"gitId":"cyaoxuan"},"content":"                        VALID_REMARK,","lastModifiedDate":"2023-11-11"},{"lineNumber":440,"author":{"gitId":"cyaoxuan"},"content":"                        VALID_COMPANY,","lastModifiedDate":"2023-11-11"},{"lineNumber":441,"author":{"gitId":"cyaoxuan"},"content":"                        VALID_POLICY_NUMBER,","lastModifiedDate":"2023-11-11"},{"lineNumber":442,"author":{"gitId":"cyaoxuan"},"content":"                        INVALID_POLICY_DATE,","lastModifiedDate":"2023-11-11"},{"lineNumber":443,"author":{"gitId":"cyaoxuan"},"content":"                        VALID_POLICY_DATE","lastModifiedDate":"2023-11-11"},{"lineNumber":444,"author":{"gitId":"cyaoxuan"},"content":"                );","lastModifiedDate":"2023-11-11"},{"lineNumber":445,"author":{"gitId":"cyaoxuan"},"content":"        String expectedMessage \u003d PolicyDate.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-11-11"},{"lineNumber":446,"author":{"gitId":"cyaoxuan"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2023-11-11"},{"lineNumber":447,"author":{"gitId":"cyaoxuan"},"content":"    }","lastModifiedDate":"2023-11-11"},{"lineNumber":448,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":449,"author":{"gitId":"cyaoxuan"},"content":"    @Test","lastModifiedDate":"2023-11-11"},{"lineNumber":450,"author":{"gitId":"cyaoxuan"},"content":"    public void toModelType_nullPolicyIssueDate_throwsIllegalValueException() {","lastModifiedDate":"2023-11-11"},{"lineNumber":451,"author":{"gitId":"cyaoxuan"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(","lastModifiedDate":"2023-11-11"},{"lineNumber":452,"author":{"gitId":"cyaoxuan"},"content":"                VALID_NAME,","lastModifiedDate":"2023-11-11"},{"lineNumber":453,"author":{"gitId":"cyaoxuan"},"content":"                VALID_PHONE,","lastModifiedDate":"2023-11-11"},{"lineNumber":454,"author":{"gitId":"cyaoxuan"},"content":"                VALID_EMAIL,","lastModifiedDate":"2023-11-11"},{"lineNumber":455,"author":{"gitId":"cyaoxuan"},"content":"                VALID_ADDRESS,","lastModifiedDate":"2023-11-11"},{"lineNumber":456,"author":{"gitId":"cyaoxuan"},"content":"                VALID_TAGS,","lastModifiedDate":"2023-11-11"},{"lineNumber":457,"author":{"gitId":"cyaoxuan"},"content":"                VALID_NRIC,","lastModifiedDate":"2023-11-11"},{"lineNumber":458,"author":{"gitId":"cyaoxuan"},"content":"                VALID_LICENCE_PLATE,","lastModifiedDate":"2023-11-11"},{"lineNumber":459,"author":{"gitId":"cyaoxuan"},"content":"                VALID_REMARK,","lastModifiedDate":"2023-11-11"},{"lineNumber":460,"author":{"gitId":"cyaoxuan"},"content":"                VALID_COMPANY,","lastModifiedDate":"2023-11-11"},{"lineNumber":461,"author":{"gitId":"cyaoxuan"},"content":"                VALID_POLICY_NUMBER,","lastModifiedDate":"2023-11-11"},{"lineNumber":462,"author":{"gitId":"cyaoxuan"},"content":"                null,","lastModifiedDate":"2023-11-11"},{"lineNumber":463,"author":{"gitId":"cyaoxuan"},"content":"                VALID_POLICY_DATE","lastModifiedDate":"2023-11-11"},{"lineNumber":464,"author":{"gitId":"cyaoxuan"},"content":"        );","lastModifiedDate":"2023-11-11"},{"lineNumber":465,"author":{"gitId":"cyaoxuan"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2023-11-11"},{"lineNumber":466,"author":{"gitId":"cyaoxuan"},"content":"                PolicyDate.class.getSimpleName() + \" (Issue Date)\");","lastModifiedDate":"2023-11-11"},{"lineNumber":467,"author":{"gitId":"cyaoxuan"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2023-11-11"},{"lineNumber":468,"author":{"gitId":"cyaoxuan"},"content":"    }","lastModifiedDate":"2023-11-11"},{"lineNumber":469,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":470,"author":{"gitId":"cyaoxuan"},"content":"    @Test","lastModifiedDate":"2023-11-11"},{"lineNumber":471,"author":{"gitId":"cyaoxuan"},"content":"    public void toModelType_invalidPolicyExpiryDate_throwsIllegalValueException() {","lastModifiedDate":"2023-11-11"},{"lineNumber":472,"author":{"gitId":"cyaoxuan"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2023-11-11"},{"lineNumber":473,"author":{"gitId":"cyaoxuan"},"content":"                new JsonAdaptedPerson(","lastModifiedDate":"2023-11-11"},{"lineNumber":474,"author":{"gitId":"cyaoxuan"},"content":"                        VALID_NAME,","lastModifiedDate":"2023-11-11"},{"lineNumber":475,"author":{"gitId":"cyaoxuan"},"content":"                        VALID_PHONE,","lastModifiedDate":"2023-11-11"},{"lineNumber":476,"author":{"gitId":"cyaoxuan"},"content":"                        VALID_EMAIL,","lastModifiedDate":"2023-11-11"},{"lineNumber":477,"author":{"gitId":"cyaoxuan"},"content":"                        VALID_ADDRESS,","lastModifiedDate":"2023-11-11"},{"lineNumber":478,"author":{"gitId":"cyaoxuan"},"content":"                        VALID_TAGS,","lastModifiedDate":"2023-11-11"},{"lineNumber":479,"author":{"gitId":"cyaoxuan"},"content":"                        VALID_NRIC,","lastModifiedDate":"2023-11-11"},{"lineNumber":480,"author":{"gitId":"cyaoxuan"},"content":"                        VALID_LICENCE_PLATE,","lastModifiedDate":"2023-11-11"},{"lineNumber":481,"author":{"gitId":"cyaoxuan"},"content":"                        VALID_REMARK,","lastModifiedDate":"2023-11-11"},{"lineNumber":482,"author":{"gitId":"cyaoxuan"},"content":"                        VALID_COMPANY,","lastModifiedDate":"2023-11-11"},{"lineNumber":483,"author":{"gitId":"cyaoxuan"},"content":"                        VALID_POLICY_NUMBER,","lastModifiedDate":"2023-11-11"},{"lineNumber":484,"author":{"gitId":"cyaoxuan"},"content":"                        VALID_POLICY_DATE,","lastModifiedDate":"2023-11-11"},{"lineNumber":485,"author":{"gitId":"cyaoxuan"},"content":"                        INVALID_POLICY_DATE","lastModifiedDate":"2023-11-11"},{"lineNumber":486,"author":{"gitId":"cyaoxuan"},"content":"                );","lastModifiedDate":"2023-11-11"},{"lineNumber":487,"author":{"gitId":"cyaoxuan"},"content":"        String expectedMessage \u003d PolicyDate.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-11-11"},{"lineNumber":488,"author":{"gitId":"cyaoxuan"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2023-11-11"},{"lineNumber":489,"author":{"gitId":"cyaoxuan"},"content":"    }","lastModifiedDate":"2023-11-11"},{"lineNumber":490,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":491,"author":{"gitId":"cyaoxuan"},"content":"    @Test","lastModifiedDate":"2023-11-11"},{"lineNumber":492,"author":{"gitId":"cyaoxuan"},"content":"    public void toModelType_nullPolicyExpiryDate_throwsIllegalValueException() {","lastModifiedDate":"2023-11-11"},{"lineNumber":493,"author":{"gitId":"cyaoxuan"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(","lastModifiedDate":"2023-11-11"},{"lineNumber":494,"author":{"gitId":"cyaoxuan"},"content":"                VALID_NAME,","lastModifiedDate":"2023-11-11"},{"lineNumber":495,"author":{"gitId":"cyaoxuan"},"content":"                VALID_PHONE,","lastModifiedDate":"2023-11-11"},{"lineNumber":496,"author":{"gitId":"cyaoxuan"},"content":"                VALID_EMAIL,","lastModifiedDate":"2023-11-11"},{"lineNumber":497,"author":{"gitId":"cyaoxuan"},"content":"                VALID_ADDRESS,","lastModifiedDate":"2023-11-11"},{"lineNumber":498,"author":{"gitId":"cyaoxuan"},"content":"                VALID_TAGS,","lastModifiedDate":"2023-11-11"},{"lineNumber":499,"author":{"gitId":"cyaoxuan"},"content":"                VALID_NRIC,","lastModifiedDate":"2023-11-11"},{"lineNumber":500,"author":{"gitId":"cyaoxuan"},"content":"                VALID_LICENCE_PLATE,","lastModifiedDate":"2023-11-11"},{"lineNumber":501,"author":{"gitId":"cyaoxuan"},"content":"                VALID_REMARK,","lastModifiedDate":"2023-11-11"},{"lineNumber":502,"author":{"gitId":"cyaoxuan"},"content":"                VALID_COMPANY,","lastModifiedDate":"2023-11-11"},{"lineNumber":503,"author":{"gitId":"cyaoxuan"},"content":"                VALID_POLICY_NUMBER,","lastModifiedDate":"2023-11-11"},{"lineNumber":504,"author":{"gitId":"cyaoxuan"},"content":"                VALID_POLICY_DATE,","lastModifiedDate":"2023-11-11"},{"lineNumber":505,"author":{"gitId":"cyaoxuan"},"content":"                null","lastModifiedDate":"2023-11-11"},{"lineNumber":506,"author":{"gitId":"cyaoxuan"},"content":"        );","lastModifiedDate":"2023-11-11"},{"lineNumber":507,"author":{"gitId":"cyaoxuan"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2023-11-11"},{"lineNumber":508,"author":{"gitId":"cyaoxuan"},"content":"                PolicyDate.class.getSimpleName() + \" (Expiry Date)\");","lastModifiedDate":"2023-11-11"},{"lineNumber":509,"author":{"gitId":"cyaoxuan"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2023-11-11"},{"lineNumber":510,"author":{"gitId":"cyaoxuan"},"content":"    }","lastModifiedDate":"2023-11-11"},{"lineNumber":511,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":512,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"suryanshkushwaha":118,"-":100,"cyaoxuan":294}},{"path":"src/test/java/seedu/address/storage/JsonUserPrefsStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-06-14"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorageTest {","lastModifiedDate":"2016-10-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonUserPrefsStorageTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void readUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Optional\u003cUserPrefs\u003e readUserPrefs(String userPrefsFileInTestDataFolder) throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d addToTestDataPathIfNotNull(userPrefsFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return new JsonUserPrefsStorage(prefsFilePath).readUserPrefs(prefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void readUserPrefs_missingFile_emptyResult() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(readUserPrefs(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void readUserPrefs_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(DataLoadingException.class, () -\u003e readUserPrefs(\"NotJsonFormatUserPrefs.json\"));","lastModifiedDate":"2023-06-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String userPrefsFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return userPrefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(userPrefsFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void readUserPrefs_fileInOrder_successfullyRead() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"TypicalUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void readUserPrefs_valuesMissingFromFile_defaultValuesUsed() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"EmptyUserPrefs.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void readUserPrefs_extraValuesInFile_extraValuesIgnored() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"ExtraValuesUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    private UserPrefs getTypicalUserPrefs() {","lastModifiedDate":"2017-02-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1000, 500, 300, 100));","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"brendanneojw"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"insureiq.json\"));","lastModifiedDate":"2023-11-02"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2017-02-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void savePrefs_nullPrefs_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(new UserPrefs(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Saves {@code userPrefs} at the specified {@code prefsFileInTestDataFolder} filepath.","lastModifiedDate":"2017-08-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    private void saveUserPrefs(UserPrefs userPrefs, String prefsFileInTestDataFolder) {","lastModifiedDate":"2017-08-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            new JsonUserPrefsStorage(addToTestDataPathIfNotNull(prefsFileInTestDataFolder))","lastModifiedDate":"2016-10-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                    .saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file\", ioe);","lastModifiedDate":"2017-08-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_allInOrder_success() throws DataLoadingException, IOException {","lastModifiedDate":"2023-06-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(1200, 200, 0, 2));","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        Path pefsFilePath \u003d testFolder.resolve(\"TempPrefs.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage jsonUserPrefsStorage \u003d new JsonUserPrefsStorage(pefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        UserPrefs readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(5, 5, 5, 5));","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"brendanneojw":1,"-":122}},{"path":"src/test/java/seedu/address/testutil/EditPersonDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-12-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-12-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-12-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-12-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-12-23"},{"lineNumber":10,"author":{"gitId":"suryanshkushwaha"},"content":"import seedu.address.model.person.LicencePlate;","lastModifiedDate":"2023-11-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-12-23"},{"lineNumber":12,"author":{"gitId":"suryanshkushwaha"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2023-11-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-12-23"},{"lineNumber":15,"author":{"gitId":"suryanshkushwaha"},"content":"import seedu.address.model.policy.Company;","lastModifiedDate":"2023-11-13"},{"lineNumber":16,"author":{"gitId":"suryanshkushwaha"},"content":"import seedu.address.model.policy.PolicyDate;","lastModifiedDate":"2023-11-13"},{"lineNumber":17,"author":{"gitId":"suryanshkushwaha"},"content":"import seedu.address.model.policy.PolicyNumber;","lastModifiedDate":"2023-11-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-12-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * A utility class to help with building EditPersonDescriptor objects.","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorBuilder {","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private EditPersonDescriptor descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder() {","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(EditPersonDescriptor descriptor) {","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.descriptor \u003d new EditPersonDescriptor(descriptor);","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Returns an {@code EditPersonDescriptor} with fields containing {@code person}\u0027s details","lastModifiedDate":"2017-06-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-06-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        descriptor.setName(person.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        descriptor.setPhone(person.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        descriptor.setEmail(person.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        descriptor.setAddress(person.getAddress());","lastModifiedDate":"2017-06-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        descriptor.setTags(person.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":45,"author":{"gitId":"RSXIX"},"content":"        descriptor.setNric(person.getNric());","lastModifiedDate":"2023-10-24"},{"lineNumber":46,"author":{"gitId":"RSXIX"},"content":"        descriptor.setLicencePlate(person.getLicencePlate());","lastModifiedDate":"2023-10-24"},{"lineNumber":47,"author":{"gitId":"suryanshkushwaha"},"content":"        descriptor.setCompany(person.getPolicy().getCompany());","lastModifiedDate":"2023-11-13"},{"lineNumber":48,"author":{"gitId":"suryanshkushwaha"},"content":"        descriptor.setPolicyNumber(person.getPolicy().getPolicyNumber());","lastModifiedDate":"2023-11-13"},{"lineNumber":49,"author":{"gitId":"suryanshkushwaha"},"content":"        descriptor.setPolicyIssueDate(person.getPolicy().getPolicyIssueDate());","lastModifiedDate":"2023-11-13"},{"lineNumber":50,"author":{"gitId":"suryanshkushwaha"},"content":"        descriptor.setPolicyExpiryDate(person.getPolicy().getPolicyExpiryDate());","lastModifiedDate":"2023-11-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2017-12-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2017-12-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        descriptor.setEmail(new Email(email));","lastModifiedDate":"2017-12-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        descriptor.setAddress(new Address(address));","lastModifiedDate":"2017-12-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditPersonDescriptor}","lastModifiedDate":"2017-07-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2017-12-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2017-12-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":95,"author":{"gitId":"suryanshkushwaha"},"content":"    /**","lastModifiedDate":"2023-11-13"},{"lineNumber":96,"author":{"gitId":"suryanshkushwaha"},"content":"     * Sets the {@code Nric} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2023-11-13"},{"lineNumber":97,"author":{"gitId":"suryanshkushwaha"},"content":"     */","lastModifiedDate":"2023-11-13"},{"lineNumber":98,"author":{"gitId":"suryanshkushwaha"},"content":"    public EditPersonDescriptorBuilder withNric(String nric) {","lastModifiedDate":"2023-11-13"},{"lineNumber":99,"author":{"gitId":"suryanshkushwaha"},"content":"        descriptor.setNric(new Nric(nric));","lastModifiedDate":"2023-11-13"},{"lineNumber":100,"author":{"gitId":"suryanshkushwaha"},"content":"        return this;","lastModifiedDate":"2023-11-13"},{"lineNumber":101,"author":{"gitId":"suryanshkushwaha"},"content":"    }","lastModifiedDate":"2023-11-13"},{"lineNumber":102,"author":{"gitId":"suryanshkushwaha"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":103,"author":{"gitId":"suryanshkushwaha"},"content":"    /**","lastModifiedDate":"2023-11-13"},{"lineNumber":104,"author":{"gitId":"suryanshkushwaha"},"content":"     * Sets the {@code LicencePlate} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2023-11-13"},{"lineNumber":105,"author":{"gitId":"suryanshkushwaha"},"content":"     */","lastModifiedDate":"2023-11-13"},{"lineNumber":106,"author":{"gitId":"suryanshkushwaha"},"content":"    public EditPersonDescriptorBuilder withLicencePlate(String licencePlate) {","lastModifiedDate":"2023-11-13"},{"lineNumber":107,"author":{"gitId":"suryanshkushwaha"},"content":"        descriptor.setLicencePlate(new LicencePlate(licencePlate));","lastModifiedDate":"2023-11-13"},{"lineNumber":108,"author":{"gitId":"suryanshkushwaha"},"content":"        return this;","lastModifiedDate":"2023-11-13"},{"lineNumber":109,"author":{"gitId":"suryanshkushwaha"},"content":"    }","lastModifiedDate":"2023-11-13"},{"lineNumber":110,"author":{"gitId":"suryanshkushwaha"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":111,"author":{"gitId":"suryanshkushwaha"},"content":"    /**","lastModifiedDate":"2023-11-13"},{"lineNumber":112,"author":{"gitId":"suryanshkushwaha"},"content":"     * Sets the {@code Company} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2023-11-13"},{"lineNumber":113,"author":{"gitId":"suryanshkushwaha"},"content":"     */","lastModifiedDate":"2023-11-13"},{"lineNumber":114,"author":{"gitId":"suryanshkushwaha"},"content":"    public EditPersonDescriptorBuilder withCompany(String company) {","lastModifiedDate":"2023-11-13"},{"lineNumber":115,"author":{"gitId":"suryanshkushwaha"},"content":"        descriptor.setCompany(new Company(company));","lastModifiedDate":"2023-11-13"},{"lineNumber":116,"author":{"gitId":"suryanshkushwaha"},"content":"        return this;","lastModifiedDate":"2023-11-13"},{"lineNumber":117,"author":{"gitId":"suryanshkushwaha"},"content":"    }","lastModifiedDate":"2023-11-13"},{"lineNumber":118,"author":{"gitId":"suryanshkushwaha"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":119,"author":{"gitId":"suryanshkushwaha"},"content":"    /**","lastModifiedDate":"2023-11-13"},{"lineNumber":120,"author":{"gitId":"suryanshkushwaha"},"content":"     * Sets the {@code PolicyNumber} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2023-11-13"},{"lineNumber":121,"author":{"gitId":"suryanshkushwaha"},"content":"     */","lastModifiedDate":"2023-11-13"},{"lineNumber":122,"author":{"gitId":"suryanshkushwaha"},"content":"    public EditPersonDescriptorBuilder withPolicyNumber(String policyNumber) {","lastModifiedDate":"2023-11-13"},{"lineNumber":123,"author":{"gitId":"suryanshkushwaha"},"content":"        descriptor.setPolicyNumber(new PolicyNumber(policyNumber));","lastModifiedDate":"2023-11-13"},{"lineNumber":124,"author":{"gitId":"suryanshkushwaha"},"content":"        return this;","lastModifiedDate":"2023-11-13"},{"lineNumber":125,"author":{"gitId":"suryanshkushwaha"},"content":"    }","lastModifiedDate":"2023-11-13"},{"lineNumber":126,"author":{"gitId":"suryanshkushwaha"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":127,"author":{"gitId":"suryanshkushwaha"},"content":"    /**","lastModifiedDate":"2023-11-13"},{"lineNumber":128,"author":{"gitId":"suryanshkushwaha"},"content":"     * Sets the {@code PolicyIssueDate} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2023-11-13"},{"lineNumber":129,"author":{"gitId":"suryanshkushwaha"},"content":"     */","lastModifiedDate":"2023-11-13"},{"lineNumber":130,"author":{"gitId":"suryanshkushwaha"},"content":"    public EditPersonDescriptorBuilder withPolicyIssueDate(String policyIssueDate) {","lastModifiedDate":"2023-11-13"},{"lineNumber":131,"author":{"gitId":"suryanshkushwaha"},"content":"        descriptor.setPolicyIssueDate(new PolicyDate(policyIssueDate));","lastModifiedDate":"2023-11-13"},{"lineNumber":132,"author":{"gitId":"suryanshkushwaha"},"content":"        return this;","lastModifiedDate":"2023-11-13"},{"lineNumber":133,"author":{"gitId":"suryanshkushwaha"},"content":"    }","lastModifiedDate":"2023-11-13"},{"lineNumber":134,"author":{"gitId":"suryanshkushwaha"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":135,"author":{"gitId":"suryanshkushwaha"},"content":"    /**","lastModifiedDate":"2023-11-13"},{"lineNumber":136,"author":{"gitId":"suryanshkushwaha"},"content":"     * Sets the {@code PolicyExpiryDate} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2023-11-13"},{"lineNumber":137,"author":{"gitId":"suryanshkushwaha"},"content":"     */","lastModifiedDate":"2023-11-13"},{"lineNumber":138,"author":{"gitId":"suryanshkushwaha"},"content":"    public EditPersonDescriptorBuilder withPolicyExpiryDate(String policyExpiryDate) {","lastModifiedDate":"2023-11-13"},{"lineNumber":139,"author":{"gitId":"suryanshkushwaha"},"content":"        descriptor.setPolicyExpiryDate(new PolicyDate(policyExpiryDate));","lastModifiedDate":"2023-11-13"},{"lineNumber":140,"author":{"gitId":"suryanshkushwaha"},"content":"        return this;","lastModifiedDate":"2023-11-13"},{"lineNumber":141,"author":{"gitId":"suryanshkushwaha"},"content":"    }","lastModifiedDate":"2023-11-13"},{"lineNumber":142,"author":{"gitId":"suryanshkushwaha"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    public EditPersonDescriptor build() {","lastModifiedDate":"2017-05-05"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        return descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":146,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"suryanshkushwaha":57,"RSXIX":2,"-":87}},{"path":"src/test/java/seedu/address/testutil/PersonBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"KumChaiYin"},"content":"import static seedu.address.model.policy.Policy.createNewDefaultPolicy;","lastModifiedDate":"2023-11-13"},{"lineNumber":4,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-12-20"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-04-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-01-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"cyaoxuan"},"content":"import seedu.address.model.person.LicencePlate;","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-01-18"},{"lineNumber":12,"author":{"gitId":"cyaoxuan"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-04-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-01-18"},{"lineNumber":15,"author":{"gitId":"cyaoxuan"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2023-11-01"},{"lineNumber":16,"author":{"gitId":"suryanshkushwaha"},"content":"import seedu.address.model.policy.Company;","lastModifiedDate":"2023-10-23"},{"lineNumber":17,"author":{"gitId":"cyaoxuan"},"content":"import seedu.address.model.policy.Policy;","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"cyaoxuan"},"content":"import seedu.address.model.policy.PolicyDate;","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"cyaoxuan"},"content":"import seedu.address.model.policy.PolicyNumber;","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class PersonBuilder {","lastModifiedDate":"2016-09-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2017-04-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2020-12-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_ADDRESS \u003d \"123, Jurong West Ave 6, #08-111\";","lastModifiedDate":"2017-04-05"},{"lineNumber":32,"author":{"gitId":"cyaoxuan"},"content":"    public static final String DEFAULT_REMARK \u003d \"\";","lastModifiedDate":"2023-11-01"},{"lineNumber":33,"author":{"gitId":"cyaoxuan"},"content":"    private static final String DEFAULT_NRIC \u003d \"567A\";","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"cyaoxuan"},"content":"    private static final String DEFAULT_LICENCE_PLATE \u003d \"SBC123D\";","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"suryanshkushwaha"},"content":"    private static final String DEFAULT_COMPANY \u003d \"NTUC\";","lastModifiedDate":"2023-10-23"},{"lineNumber":36,"author":{"gitId":"cyaoxuan"},"content":"    private static final String DEFAULT_POLICY_NUMBER \u003d \"AIA1234\";","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"KumChaiYin"},"content":"    private static final String DEFAULT_POLICY_ISSUE_DATE \u003d \"01-01-2023\";","lastModifiedDate":"2023-10-19"},{"lineNumber":38,"author":{"gitId":"KumChaiYin"},"content":"    private static final String DEFAULT_POLICY_EXPIRY_DATE \u003d \"01-01-2030\";","lastModifiedDate":"2023-10-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private Address address;","lastModifiedDate":"2017-12-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-12-20"},{"lineNumber":45,"author":{"gitId":"cyaoxuan"},"content":"    private Nric nric;","lastModifiedDate":"2023-10-13"},{"lineNumber":46,"author":{"gitId":"cyaoxuan"},"content":"    private LicencePlate licencePlate;","lastModifiedDate":"2023-10-13"},{"lineNumber":47,"author":{"gitId":"cyaoxuan"},"content":"    private Policy policy;","lastModifiedDate":"2023-10-13"},{"lineNumber":48,"author":{"gitId":"cyaoxuan"},"content":"    private Remark remark;","lastModifiedDate":"2023-11-01"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonBuilder} with the default details.","lastModifiedDate":"2020-05-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public PersonBuilder() {","lastModifiedDate":"2017-08-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2017-12-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2017-12-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        address \u003d new Address(DEFAULT_ADDRESS);","lastModifiedDate":"2017-12-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":59,"author":{"gitId":"cyaoxuan"},"content":"        nric \u003d new Nric(DEFAULT_NRIC);","lastModifiedDate":"2023-10-13"},{"lineNumber":60,"author":{"gitId":"cyaoxuan"},"content":"        licencePlate \u003d new LicencePlate(DEFAULT_LICENCE_PLATE);","lastModifiedDate":"2023-10-13"},{"lineNumber":61,"author":{"gitId":"cyaoxuan"},"content":"        remark \u003d new Remark(DEFAULT_REMARK);","lastModifiedDate":"2023-11-01"},{"lineNumber":62,"author":{"gitId":"suryanshkushwaha"},"content":"        Company company \u003d new Company(DEFAULT_COMPANY);","lastModifiedDate":"2023-10-23"},{"lineNumber":63,"author":{"gitId":"cyaoxuan"},"content":"        PolicyNumber policyNumber \u003d new PolicyNumber(DEFAULT_POLICY_NUMBER);","lastModifiedDate":"2023-10-13"},{"lineNumber":64,"author":{"gitId":"KumChaiYin"},"content":"        PolicyDate policyIssueDate \u003d new PolicyDate(DEFAULT_POLICY_ISSUE_DATE);","lastModifiedDate":"2023-10-19"},{"lineNumber":65,"author":{"gitId":"KumChaiYin"},"content":"        PolicyDate policyExpiryDate \u003d new PolicyDate(DEFAULT_POLICY_EXPIRY_DATE);","lastModifiedDate":"2023-10-19"},{"lineNumber":66,"author":{"gitId":"suryanshkushwaha"},"content":"        policy \u003d new Policy(company, policyNumber, policyIssueDate, policyExpiryDate);","lastModifiedDate":"2023-10-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * Initializes the PersonBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2016-12-11"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public PersonBuilder(Person personToCopy) {","lastModifiedDate":"2018-01-10"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        name \u003d personToCopy.getName();","lastModifiedDate":"2017-12-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        phone \u003d personToCopy.getPhone();","lastModifiedDate":"2017-12-20"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        email \u003d personToCopy.getEmail();","lastModifiedDate":"2017-12-20"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        address \u003d personToCopy.getAddress();","lastModifiedDate":"2017-12-20"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e(personToCopy.getTags());","lastModifiedDate":"2017-12-20"},{"lineNumber":78,"author":{"gitId":"cyaoxuan"},"content":"        nric \u003d personToCopy.getNric();","lastModifiedDate":"2023-10-13"},{"lineNumber":79,"author":{"gitId":"cyaoxuan"},"content":"        licencePlate \u003d personToCopy.getLicencePlate();","lastModifiedDate":"2023-10-13"},{"lineNumber":80,"author":{"gitId":"cyaoxuan"},"content":"        remark \u003d personToCopy.getRemark();","lastModifiedDate":"2023-11-01"},{"lineNumber":81,"author":{"gitId":"cyaoxuan"},"content":"        policy \u003d personToCopy.getPolicy();","lastModifiedDate":"2023-10-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":84,"author":{"gitId":"KumChaiYin"},"content":"    /**","lastModifiedDate":"2023-11-13"},{"lineNumber":85,"author":{"gitId":"KumChaiYin"},"content":"     * Sets the {@code Policy} of the {@code Person} that we are building.","lastModifiedDate":"2023-11-13"},{"lineNumber":86,"author":{"gitId":"KumChaiYin"},"content":"     */","lastModifiedDate":"2023-11-13"},{"lineNumber":87,"author":{"gitId":"KumChaiYin"},"content":"    public PersonBuilder withDefaultPolicy() {","lastModifiedDate":"2023-11-13"},{"lineNumber":88,"author":{"gitId":"KumChaiYin"},"content":"        this.policy \u003d createNewDefaultPolicy();","lastModifiedDate":"2023-11-13"},{"lineNumber":89,"author":{"gitId":"KumChaiYin"},"content":"        return this;","lastModifiedDate":"2023-11-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-11-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public PersonBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public PersonBuilder withTags(String... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2017-12-20"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public PersonBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        this.address \u003d new Address(address);","lastModifiedDate":"2017-12-20"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public PersonBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2017-12-20"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    public PersonBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2017-12-20"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":132,"author":{"gitId":"cyaoxuan"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":133,"author":{"gitId":"cyaoxuan"},"content":"     * Sets the {@code Nric} of the {@code Person} that we are building.","lastModifiedDate":"2023-10-13"},{"lineNumber":134,"author":{"gitId":"cyaoxuan"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":135,"author":{"gitId":"cyaoxuan"},"content":"    public PersonBuilder withNric(String nric) {","lastModifiedDate":"2023-10-13"},{"lineNumber":136,"author":{"gitId":"cyaoxuan"},"content":"        this.nric \u003d new Nric(nric);","lastModifiedDate":"2023-10-13"},{"lineNumber":137,"author":{"gitId":"cyaoxuan"},"content":"        return this;","lastModifiedDate":"2023-10-13"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":140,"author":{"gitId":"cyaoxuan"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":141,"author":{"gitId":"cyaoxuan"},"content":"     * Sets the {@code LicencePlate} of the {@code Person} that we are building.","lastModifiedDate":"2023-10-13"},{"lineNumber":142,"author":{"gitId":"cyaoxuan"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":143,"author":{"gitId":"cyaoxuan"},"content":"    public PersonBuilder withLicencePlate(String licencePlate) {","lastModifiedDate":"2023-10-13"},{"lineNumber":144,"author":{"gitId":"cyaoxuan"},"content":"        this.licencePlate \u003d new LicencePlate(licencePlate);","lastModifiedDate":"2023-10-13"},{"lineNumber":145,"author":{"gitId":"cyaoxuan"},"content":"        return this;","lastModifiedDate":"2023-10-13"},{"lineNumber":146,"author":{"gitId":"cyaoxuan"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":147,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":148,"author":{"gitId":"cyaoxuan"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":149,"author":{"gitId":"cyaoxuan"},"content":"     * Sets the {@code Policy} of the {@code Person} that we are building.","lastModifiedDate":"2023-10-13"},{"lineNumber":150,"author":{"gitId":"cyaoxuan"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":151,"author":{"gitId":"suryanshkushwaha"},"content":"    public PersonBuilder withPolicy(","lastModifiedDate":"2023-10-23"},{"lineNumber":152,"author":{"gitId":"suryanshkushwaha"},"content":"        String company,","lastModifiedDate":"2023-10-23"},{"lineNumber":153,"author":{"gitId":"suryanshkushwaha"},"content":"        String policyNumber,","lastModifiedDate":"2023-10-23"},{"lineNumber":154,"author":{"gitId":"suryanshkushwaha"},"content":"        String policyIssueDate,","lastModifiedDate":"2023-10-23"},{"lineNumber":155,"author":{"gitId":"suryanshkushwaha"},"content":"        String policyExpiryDate","lastModifiedDate":"2023-10-23"},{"lineNumber":156,"author":{"gitId":"suryanshkushwaha"},"content":"    ) {","lastModifiedDate":"2023-10-23"},{"lineNumber":157,"author":{"gitId":"suryanshkushwaha"},"content":"        this.policy \u003d new Policy(new Company(company), new PolicyNumber(policyNumber),","lastModifiedDate":"2023-10-23"},{"lineNumber":158,"author":{"gitId":"cyaoxuan"},"content":"            new PolicyDate(policyIssueDate), new PolicyDate(policyExpiryDate));","lastModifiedDate":"2023-10-13"},{"lineNumber":159,"author":{"gitId":"cyaoxuan"},"content":"        return this;","lastModifiedDate":"2023-10-13"},{"lineNumber":160,"author":{"gitId":"cyaoxuan"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":161,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":162,"author":{"gitId":"cyaoxuan"},"content":"    /**","lastModifiedDate":"2023-11-01"},{"lineNumber":163,"author":{"gitId":"cyaoxuan"},"content":"     * Sets the {@code Remark} of the {@code Person} that we are building.","lastModifiedDate":"2023-11-01"},{"lineNumber":164,"author":{"gitId":"cyaoxuan"},"content":"     */","lastModifiedDate":"2023-11-01"},{"lineNumber":165,"author":{"gitId":"cyaoxuan"},"content":"    public PersonBuilder withRemark(String remark) {","lastModifiedDate":"2023-11-01"},{"lineNumber":166,"author":{"gitId":"cyaoxuan"},"content":"        this.remark \u003d new Remark(remark);","lastModifiedDate":"2023-11-01"},{"lineNumber":167,"author":{"gitId":"cyaoxuan"},"content":"        return this;","lastModifiedDate":"2023-11-01"},{"lineNumber":168,"author":{"gitId":"cyaoxuan"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":169,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    public Person build() {","lastModifiedDate":"2017-04-05"},{"lineNumber":171,"author":{"gitId":"cyaoxuan"},"content":"        return new Person(name, phone, email, address, tags, nric, licencePlate, remark, policy);","lastModifiedDate":"2023-11-01"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":173,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"suryanshkushwaha":11,"KumChaiYin":12,"-":98,"cyaoxuan":52}},{"path":"src/test/java/seedu/address/testutil/PersonUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":4,"author":{"gitId":"suryanshkushwaha"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_COMPANY;","lastModifiedDate":"2023-11-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":6,"author":{"gitId":"RSXIX"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LICENCE_PLATE;","lastModifiedDate":"2023-10-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":8,"author":{"gitId":"RSXIX"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NRIC;","lastModifiedDate":"2023-10-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"suryanshkushwaha"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_POLICY_EXPIRY_DATE;","lastModifiedDate":"2023-11-13"},{"lineNumber":11,"author":{"gitId":"suryanshkushwaha"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_POLICY_ISSUE_DATE;","lastModifiedDate":"2023-11-13"},{"lineNumber":12,"author":{"gitId":"suryanshkushwaha"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_POLICY_NUMBER;","lastModifiedDate":"2023-11-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-03-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-03-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2018-03-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-03-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * A utility class for Person.","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class PersonUtil {","lastModifiedDate":"2017-04-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns an add command string for adding the {@code person}.","lastModifiedDate":"2017-04-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static String getAddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return AddCommand.COMMAND_WORD + \" \" + getPersonDetails(person);","lastModifiedDate":"2017-03-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code person}\u0027s details.","lastModifiedDate":"2017-04-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static String getPersonDetails(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_NAME + person.getName().fullName + \" \");","lastModifiedDate":"2017-06-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_PHONE + person.getPhone().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_EMAIL + person.getEmail().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_ADDRESS + person.getAddress().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        person.getTags().stream().forEach(","lastModifiedDate":"2017-05-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            s -\u003e sb.append(PREFIX_TAG + s.tagName + \" \")","lastModifiedDate":"2017-05-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2017-05-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code EditPersonDescriptor}\u0027s details.","lastModifiedDate":"2018-03-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static String getEditPersonDescriptorDetails(EditPersonDescriptor descriptor) {","lastModifiedDate":"2018-03-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        descriptor.getAddress().ifPresent(address -\u003e sb.append(PREFIX_ADDRESS).append(address.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":59,"author":{"gitId":"RSXIX"},"content":"        descriptor.getNric().ifPresent(nric -\u003e sb.append(PREFIX_NRIC).append(nric.value).append(\" \"));","lastModifiedDate":"2023-10-24"},{"lineNumber":60,"author":{"gitId":"RSXIX"},"content":"        descriptor.getLicencePlate().ifPresent(licencePlate -\u003e sb.append(PREFIX_LICENCE_PLATE)","lastModifiedDate":"2023-10-24"},{"lineNumber":61,"author":{"gitId":"RSXIX"},"content":"                .append(licencePlate.value).append(\" \"));","lastModifiedDate":"2023-10-24"},{"lineNumber":62,"author":{"gitId":"suryanshkushwaha"},"content":"        descriptor.getPolicyNumber().ifPresent(policyNumber -\u003e sb.append(PREFIX_POLICY_NUMBER)","lastModifiedDate":"2023-11-13"},{"lineNumber":63,"author":{"gitId":"suryanshkushwaha"},"content":"                .append(policyNumber.value).append(\" \"));","lastModifiedDate":"2023-11-13"},{"lineNumber":64,"author":{"gitId":"suryanshkushwaha"},"content":"        descriptor.getPolicyIssueDate().ifPresent(policyIssueDate -\u003e sb.append(PREFIX_POLICY_ISSUE_DATE)","lastModifiedDate":"2023-11-13"},{"lineNumber":65,"author":{"gitId":"suryanshkushwaha"},"content":"                .append(policyIssueDate).append(\" \"));","lastModifiedDate":"2023-11-13"},{"lineNumber":66,"author":{"gitId":"suryanshkushwaha"},"content":"        descriptor.getPolicyExpiryDate().ifPresent(policyExpiryDate -\u003e sb.append(PREFIX_POLICY_EXPIRY_DATE)","lastModifiedDate":"2023-11-13"},{"lineNumber":67,"author":{"gitId":"suryanshkushwaha"},"content":"                .append(policyExpiryDate).append(\" \"));","lastModifiedDate":"2023-11-13"},{"lineNumber":68,"author":{"gitId":"suryanshkushwaha"},"content":"        descriptor.getCompany().ifPresent(company -\u003e sb.append(PREFIX_COMPANY)","lastModifiedDate":"2023-11-13"},{"lineNumber":69,"author":{"gitId":"suryanshkushwaha"},"content":"                .append(company.value).append(\" \"));","lastModifiedDate":"2023-11-13"},{"lineNumber":70,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2018-03-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                sb.append(PREFIX_TAG);","lastModifiedDate":"2018-03-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2018-03-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-03-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"suryanshkushwaha":12,"RSXIX":7,"-":62}},{"path":"src/test/java/seedu/address/testutil/TypicalPersons.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":5,"author":{"gitId":"suryanshkushwaha"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_COMPANY_AMY;","lastModifiedDate":"2023-10-23"},{"lineNumber":6,"author":{"gitId":"suryanshkushwaha"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_COMPANY_BOB;","lastModifiedDate":"2023-10-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":9,"author":{"gitId":"KumChaiYin"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_LICENCE_PLATE_AMY;","lastModifiedDate":"2023-10-19"},{"lineNumber":10,"author":{"gitId":"KumChaiYin"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_LICENCE_PLATE_BOB;","lastModifiedDate":"2023-10-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":13,"author":{"gitId":"KumChaiYin"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NRIC_AMY;","lastModifiedDate":"2023-10-19"},{"lineNumber":14,"author":{"gitId":"KumChaiYin"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NRIC_BOB;","lastModifiedDate":"2023-10-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":17,"author":{"gitId":"KumChaiYin"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_POLICY_EXPIRY_DATE_AMY;","lastModifiedDate":"2023-10-19"},{"lineNumber":18,"author":{"gitId":"KumChaiYin"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_POLICY_EXPIRY_DATE_BOB;","lastModifiedDate":"2023-10-19"},{"lineNumber":19,"author":{"gitId":"KumChaiYin"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_POLICY_ISSUE_DATE_AMY;","lastModifiedDate":"2023-10-19"},{"lineNumber":20,"author":{"gitId":"KumChaiYin"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_POLICY_ISSUE_DATE_BOB;","lastModifiedDate":"2023-10-19"},{"lineNumber":21,"author":{"gitId":"KumChaiYin"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_POLICY_NO_AMY;","lastModifiedDate":"2023-10-19"},{"lineNumber":22,"author":{"gitId":"KumChaiYin"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_POLICY_NO_BOB;","lastModifiedDate":"2023-10-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-08-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-08-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":32,"author":{"gitId":"RSXIX"},"content":"import seedu.address.model.policy.PolicyExpirationDateComparator;","lastModifiedDate":"2023-11-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Person} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class TypicalPersons {","lastModifiedDate":"2017-04-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final Person ALICE \u003d new PersonBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2018-01-10"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            .withAddress(\"123, Jurong West Ave 6, #08-111\").withEmail(\"alice@example.com\")","lastModifiedDate":"2017-04-05"},{"lineNumber":41,"author":{"gitId":"cyaoxuan"},"content":"            .withPhone(\"94351253\").withTags(\"friends\").withNric(\"000A\").withLicencePlate(\"SBA1234A\").withRemark(\"\")","lastModifiedDate":"2023-11-01"},{"lineNumber":42,"author":{"gitId":"suryanshkushwaha"},"content":"            .withPolicy(\"NTUC\", \"AIA1\", \"01-01-2020\", \"01-02-2020\").build();","lastModifiedDate":"2023-10-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final Person BENSON \u003d new PersonBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2018-01-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            .withAddress(\"311, Clementi Ave 2, #02-25\")","lastModifiedDate":"2017-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            .withEmail(\"johnd@example.com\").withPhone(\"98765432\")","lastModifiedDate":"2017-04-05"},{"lineNumber":46,"author":{"gitId":"cyaoxuan"},"content":"            .withTags(\"owesMoney\", \"friends\").withNric(\"001B\").withLicencePlate(\"SBA5555B\").withRemark(\"\")","lastModifiedDate":"2023-11-01"},{"lineNumber":47,"author":{"gitId":"suryanshkushwaha"},"content":"            .withPolicy(\"InsureMe\", \"AIA2\", \"12-12-2010\", \"12-12-2020\").build();","lastModifiedDate":"2023-10-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final Person CARL \u003d new PersonBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\")","lastModifiedDate":"2018-01-10"},{"lineNumber":49,"author":{"gitId":"cyaoxuan"},"content":"            .withEmail(\"heinz@example.com\").withAddress(\"wall street\").withNric(\"123C\").withLicencePlate(\"SLR8E\")","lastModifiedDate":"2023-10-13"},{"lineNumber":50,"author":{"gitId":"KumChaiYin"},"content":"            .withPolicy(\"InsureMe\", \"5734534X\", \"31-12-2019\", \"01-02-2020\").build();","lastModifiedDate":"2023-11-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final Person DANIEL \u003d new PersonBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2018-01-10"},{"lineNumber":52,"author":{"gitId":"cyaoxuan"},"content":"            .withEmail(\"cornelia@example.com\").withAddress(\"10th street\").withTags(\"friends\")","lastModifiedDate":"2023-10-13"},{"lineNumber":53,"author":{"gitId":"cyaoxuan"},"content":"            .withNric(\"464J\").withLicencePlate(\"STG46P\")","lastModifiedDate":"2023-10-13"},{"lineNumber":54,"author":{"gitId":"suryanshkushwaha"},"content":"            .withPolicy(\"NTUC\", \"4532\", \"29-02-2004\", \"29-02-2008\").build();","lastModifiedDate":"2023-10-23"},{"lineNumber":55,"author":{"gitId":"cyaoxuan"},"content":"    public static final Person ELLE \u003d new PersonBuilder().withName(\"Elle Meyer\").withPhone(\"94822244\")","lastModifiedDate":"2023-11-06"},{"lineNumber":56,"author":{"gitId":"cyaoxuan"},"content":"            .withEmail(\"werner@example.com\").withAddress(\"michegan ave\").withNric(\"573H\").withLicencePlate(\"SHL463C\")","lastModifiedDate":"2023-10-13"},{"lineNumber":57,"author":{"gitId":"KumChaiYin"},"content":"            .withPolicy(\"!@#NO_COMPANY!@#\", \"NOPOLICY\", \"01-01-1000\", \"01-01-1000\").build();","lastModifiedDate":"2023-11-13"},{"lineNumber":58,"author":{"gitId":"cyaoxuan"},"content":"    public static final Person FIONA \u003d new PersonBuilder().withName(\"Fiona Kunz\").withPhone(\"94824277\")","lastModifiedDate":"2023-11-06"},{"lineNumber":59,"author":{"gitId":"cyaoxuan"},"content":"            .withEmail(\"lydia@example.com\").withAddress(\"little tokyo\").withNric(\"743G\").withLicencePlate(\"SBA1Z\")","lastModifiedDate":"2023-10-13"},{"lineNumber":60,"author":{"gitId":"KumChaiYin"},"content":"            .withPolicy(\"!@#NO_COMPANY!@#\", \"NOPOLICY\", \"01-01-1000\", \"01-01-1000\").build();","lastModifiedDate":"2023-11-13"},{"lineNumber":61,"author":{"gitId":"cyaoxuan"},"content":"    public static final Person GEORGE \u003d new PersonBuilder().withName(\"George Best\").withPhone(\"94824422\")","lastModifiedDate":"2023-11-06"},{"lineNumber":62,"author":{"gitId":"cyaoxuan"},"content":"            .withEmail(\"anna@example.com\").withAddress(\"4th street\").withNric(\"674G\").withLicencePlate(\"SNM9735R\")","lastModifiedDate":"2023-10-13"},{"lineNumber":63,"author":{"gitId":"KumChaiYin"},"content":"            .withPolicy(\"!@#NO_COMPANY!@#\", \"NOPOLICY\", \"01-01-1000\", \"01-01-1000\").build();","lastModifiedDate":"2023-11-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":66,"author":{"gitId":"cyaoxuan"},"content":"    public static final Person HOON \u003d new PersonBuilder().withName(\"Hoon Meier\").withPhone(\"84824244\")","lastModifiedDate":"2023-11-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            .withEmail(\"stefan@example.com\").withAddress(\"little india\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":68,"author":{"gitId":"cyaoxuan"},"content":"    public static final Person IDA \u003d new PersonBuilder().withName(\"Ida Mueller\").withPhone(\"84821311\")","lastModifiedDate":"2023-11-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            .withEmail(\"hans@example.com\").withAddress(\"chicago ave\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    // Manually added - Person\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2017-08-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public static final Person AMY \u003d new PersonBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2018-01-10"},{"lineNumber":73,"author":{"gitId":"KumChaiYin"},"content":"            .withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY).withTags(VALID_TAG_FRIEND)","lastModifiedDate":"2023-10-19"},{"lineNumber":74,"author":{"gitId":"KumChaiYin"},"content":"            .withNric(VALID_NRIC_AMY).withLicencePlate(VALID_LICENCE_PLATE_AMY)","lastModifiedDate":"2023-10-19"},{"lineNumber":75,"author":{"gitId":"suryanshkushwaha"},"content":"            .withPolicy(","lastModifiedDate":"2023-10-23"},{"lineNumber":76,"author":{"gitId":"suryanshkushwaha"},"content":"                VALID_COMPANY_AMY,","lastModifiedDate":"2023-10-23"},{"lineNumber":77,"author":{"gitId":"suryanshkushwaha"},"content":"                VALID_POLICY_NO_AMY,","lastModifiedDate":"2023-10-23"},{"lineNumber":78,"author":{"gitId":"suryanshkushwaha"},"content":"                VALID_POLICY_ISSUE_DATE_AMY,","lastModifiedDate":"2023-10-23"},{"lineNumber":79,"author":{"gitId":"suryanshkushwaha"},"content":"                VALID_POLICY_EXPIRY_DATE_AMY","lastModifiedDate":"2023-10-23"},{"lineNumber":80,"author":{"gitId":"suryanshkushwaha"},"content":"            )","lastModifiedDate":"2023-10-23"},{"lineNumber":81,"author":{"gitId":"suryanshkushwaha"},"content":"        .build();","lastModifiedDate":"2023-10-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public static final Person BOB \u003d new PersonBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2018-01-10"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND)","lastModifiedDate":"2017-09-21"},{"lineNumber":84,"author":{"gitId":"KumChaiYin"},"content":"            .withNric(VALID_NRIC_BOB).withLicencePlate(VALID_LICENCE_PLATE_BOB)","lastModifiedDate":"2023-10-19"},{"lineNumber":85,"author":{"gitId":"suryanshkushwaha"},"content":"            .withPolicy(","lastModifiedDate":"2023-10-23"},{"lineNumber":86,"author":{"gitId":"suryanshkushwaha"},"content":"                VALID_COMPANY_BOB,","lastModifiedDate":"2023-10-23"},{"lineNumber":87,"author":{"gitId":"suryanshkushwaha"},"content":"                VALID_POLICY_NO_BOB,","lastModifiedDate":"2023-10-23"},{"lineNumber":88,"author":{"gitId":"suryanshkushwaha"},"content":"                VALID_POLICY_ISSUE_DATE_BOB,","lastModifiedDate":"2023-10-23"},{"lineNumber":89,"author":{"gitId":"suryanshkushwaha"},"content":"                VALID_POLICY_EXPIRY_DATE_BOB","lastModifiedDate":"2023-10-23"},{"lineNumber":90,"author":{"gitId":"suryanshkushwaha"},"content":"            )","lastModifiedDate":"2023-10-23"},{"lineNumber":91,"author":{"gitId":"suryanshkushwaha"},"content":"        .build();","lastModifiedDate":"2023-10-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    private TypicalPersons() {} // prevents instantiation","lastModifiedDate":"2017-07-20"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * Returns an {@code AddressBook} with all the typical persons.","lastModifiedDate":"2017-08-05"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2017-08-05"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2017-08-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        for (Person person : getTypicalPersons()) {","lastModifiedDate":"2018-01-10"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            ab.addPerson(person);","lastModifiedDate":"2017-08-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":108,"author":{"gitId":"RSXIX"},"content":"    /**","lastModifiedDate":"2023-11-13"},{"lineNumber":109,"author":{"gitId":"RSXIX"},"content":"     * Returns an {@code AddressBook} with all the typical persons in sorted order.","lastModifiedDate":"2023-11-13"},{"lineNumber":110,"author":{"gitId":"RSXIX"},"content":"     */","lastModifiedDate":"2023-11-13"},{"lineNumber":111,"author":{"gitId":"RSXIX"},"content":"    public static AddressBook getTypicalSortedAddressBook() {","lastModifiedDate":"2023-11-13"},{"lineNumber":112,"author":{"gitId":"RSXIX"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2023-11-13"},{"lineNumber":113,"author":{"gitId":"RSXIX"},"content":"        List\u003cPerson\u003e listOfPeople \u003d getTypicalPersons();","lastModifiedDate":"2023-11-13"},{"lineNumber":114,"author":{"gitId":"RSXIX"},"content":"        listOfPeople.sort(new PolicyExpirationDateComparator());","lastModifiedDate":"2023-11-13"},{"lineNumber":115,"author":{"gitId":"RSXIX"},"content":"        for (Person person : listOfPeople) {","lastModifiedDate":"2023-11-13"},{"lineNumber":116,"author":{"gitId":"RSXIX"},"content":"            ab.addPerson(person);","lastModifiedDate":"2023-11-13"},{"lineNumber":117,"author":{"gitId":"RSXIX"},"content":"        }","lastModifiedDate":"2023-11-13"},{"lineNumber":118,"author":{"gitId":"RSXIX"},"content":"        return ab;","lastModifiedDate":"2023-11-13"},{"lineNumber":119,"author":{"gitId":"RSXIX"},"content":"    }","lastModifiedDate":"2023-11-13"},{"lineNumber":120,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public static List\u003cPerson\u003e getTypicalPersons() {","lastModifiedDate":"2018-01-10"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2017-08-07"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":124,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"suryanshkushwaha":19,"RSXIX":14,"KumChaiYin":17,"-":61,"cyaoxuan":13}}]

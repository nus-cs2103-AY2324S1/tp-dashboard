[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"cyaoxuan"},"content":"[![CI Status](https://github.com/AY2324S1-CS2103T-W16-3/tp/actions/workflows/gradle.yml/badge.svg)](https://github.com/AY2324S1-CS2103T-W16-3/tp/actions/workflows/gradle.yml)","lastModifiedDate":"2023-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"[![codecov](https://codecov.io/gh/AY2324S1-CS2103T-W16-3/tp/graph/badge.svg?token\u003dDE29JYXOPU)](https://codecov.io/gh/AY2324S1-CS2103T-W16-3/tp)","lastModifiedDate":"2023-09-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"cyaoxuan"},"content":"# InsureIQ","lastModifiedDate":"2023-10-01"},{"lineNumber":5,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":8,"author":{"gitId":"cyaoxuan"},"content":"- InsureIQ is for car insurance agents who type fast over CLI and have to keep track of multiple customers\u0027 vehicles with the car insurance policies.","lastModifiedDate":"2023-10-01"},{"lineNumber":9,"author":{"gitId":"cyaoxuan"},"content":"- For the detailed documentation of this project, see the **[InsureIQ Product Website](https://ay2324s1-cs2103t-w16-3.github.io/tp/)**.","lastModifiedDate":"2023-10-01"},{"lineNumber":10,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":11,"author":{"gitId":"cyaoxuan"},"content":"This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2023-10-01"}],"authorContributionMap":{"-":4,"cyaoxuan":7}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"You can reach us at the email `seer[at]comp.nus.edu.sg`","lastModifiedDate":"2020-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"cyaoxuan"},"content":"### Brendan","lastModifiedDate":"2023-10-02"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"cyaoxuan"},"content":"\u003cimg src\u003d\"images/brendanneojw.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-10-02"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"cyaoxuan"},"content":"[[github](https://github.com/brendanneojw)]","lastModifiedDate":"2023-10-02"},{"lineNumber":17,"author":{"gitId":"cyaoxuan"},"content":"[[portfolio](team/brendanneojw.md)]","lastModifiedDate":"2023-10-02"},{"lineNumber":18,"author":{"gitId":"brendanneojw"},"content":"[[linkedin](https://www.linkedin.com/in/brendan-neo-jia-wei-a1a949217/)]","lastModifiedDate":"2023-10-02"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"cyaoxuan"},"content":"* Role: Team Lead","lastModifiedDate":"2023-10-02"},{"lineNumber":21,"author":{"gitId":"brendanneojw"},"content":"* Responsibilities: Responsible for overall project coordination","lastModifiedDate":"2023-10-02"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"cyaoxuan"},"content":"### Chai Yin","lastModifiedDate":"2023-10-02"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"KumChaiYin"},"content":"\u003cimg src\u003d\"images/kumchaiyin.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-10-02"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"cyaoxuan"},"content":"[[github](http://github.com/KumChaiYin)]","lastModifiedDate":"2023-10-02"},{"lineNumber":28,"author":{"gitId":"KumChaiYin"},"content":"[[portfolio](team/kumchaiyin.md)]","lastModifiedDate":"2023-10-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"cyaoxuan"},"content":"* Role: Documentation","lastModifiedDate":"2023-10-02"},{"lineNumber":31,"author":{"gitId":"brendanneojw"},"content":"* Responsibilities: Responsible for the quality of various project documents","lastModifiedDate":"2023-10-02"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"cyaoxuan"},"content":"### Rohan","lastModifiedDate":"2023-10-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"brendanneojw"},"content":"\u003cimg src\u003d\"images/rsxix.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-10-04"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"cyaoxuan"},"content":"[[github](http://github.com/RSXIX)]","lastModifiedDate":"2023-10-02"},{"lineNumber":38,"author":{"gitId":"brendanneojw"},"content":"[[portfolio](team/rsxix.md)]","lastModifiedDate":"2023-10-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"cyaoxuan"},"content":"* Role: Testing","lastModifiedDate":"2023-10-02"},{"lineNumber":41,"author":{"gitId":"brendanneojw"},"content":"* Responsibilities: Ensures the testing of the project is done properly and on time","lastModifiedDate":"2023-10-02"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"cyaoxuan"},"content":"### Suryansh","lastModifiedDate":"2023-10-02"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"cyaoxuan"},"content":"\u003cimg src\u003d\"images/suryanshkushwaha.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-10-02"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"cyaoxuan"},"content":"[[github](http://github.com/suryanshkushwaha)]","lastModifiedDate":"2023-10-02"},{"lineNumber":48,"author":{"gitId":"cyaoxuan"},"content":"[[portfolio](team/suryanshkushwaha.md)]","lastModifiedDate":"2023-10-02"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"cyaoxuan"},"content":"* Role: Code Quality","lastModifiedDate":"2023-10-02"},{"lineNumber":51,"author":{"gitId":"brendanneojw"},"content":"* Responsibilities: Responsible for the quality of various project documents","lastModifiedDate":"2023-10-02"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"cyaoxuan"},"content":"### Yao Xuan","lastModifiedDate":"2023-10-02"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"cyaoxuan"},"content":"\u003cimg src\u003d\"images/cyaoxuan.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-10-02"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"cyaoxuan"},"content":"[[github](http://github.com/cyaoxuan)]","lastModifiedDate":"2023-10-02"},{"lineNumber":58,"author":{"gitId":"cyaoxuan"},"content":"[[portfolio](team/cyaoxuan.md)]","lastModifiedDate":"2023-10-02"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"brendanneojw"},"content":"* Role: Git Expert","lastModifiedDate":"2023-10-02"},{"lineNumber":61,"author":{"gitId":"brendanneojw"},"content":"* Responsibilities: Help other team members with matters related to Github","lastModifiedDate":"2023-10-02"}],"authorContributionMap":{"brendanneojw":9,"KumChaiYin":2,"-":30,"cyaoxuan":20}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* {list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well}","lastModifiedDate":"2021-07-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document `docs/diagrams` folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"cyaoxuan"},"content":"**`Main`** (consisting of classes [`Main`](https://github.com/AY2324S1-CS2103T-W16-3/tp/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/AY2324S1-CS2103T-W16-3/tp/tree/master/src/main/java/seedu/address/MainApp.java)) is in charge of the app launch and shut down.","lastModifiedDate":"2023-10-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* At app launch, it initializes the other components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* At shut down, it shuts down the other components and invokes cleanup methods where necessary.","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"The bulk of the app\u0027s work is done by the following four components:","lastModifiedDate":"2023-09-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2023-09-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"cyaoxuan"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/AY2324S1-CS2103T-W16-3/tp/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2023-10-03"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"cyaoxuan"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/AY2324S1-CS2103T-W16-3/tp/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/AY2324S1-CS2103T-W16-3/tp/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2023-10-03"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":82,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"cyaoxuan"},"content":"**API** : [`Logic.java`](https://github.com/AY2324S1-CS2103T-W16-3/tp/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2023-10-03"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"The sequence diagram below illustrates the interactions within the `Logic` component, taking `execute(\"delete 1\")` API call as an example.","lastModifiedDate":"2023-09-03"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2023-09-03"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":103,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it is passed to an `AddressBookParser` object which in turn creates a parser that matches the command (e.g., `DeleteCommandParser`) and uses it to parse the command.","lastModifiedDate":"2023-09-03"},{"lineNumber":104,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `DeleteCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2023-09-03"},{"lineNumber":105,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to delete a person).","lastModifiedDate":"2023-09-03"},{"lineNumber":106,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2023-09-03"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":108,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":117,"author":{"gitId":"cyaoxuan"},"content":"**API** : [`Model.java`](https://github.com/AY2324S1-CS2103T-W16-3/tp/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2023-10-03"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2021-07-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"cyaoxuan"},"content":"**API** : [`Storage.java`](https://github.com/AY2324S1-CS2103T-W16-3/tp/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2023-10-03"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in JSON format, and read them back into corresponding objects.","lastModifiedDate":"2023-09-03"},{"lineNumber":144,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":247,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":248,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":249,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":250,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"brendanneojw"},"content":"* is a car insurance agent","lastModifiedDate":"2023-10-02"},{"lineNumber":261,"author":{"gitId":"-"},"content":"* has a need to manage a significant number of contacts","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26"},{"lineNumber":265,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2023-10-02"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"brendanneojw"},"content":"**Value proposition**: Provide quick and easy contact management system of large car owners database with policies bought by them and have a better overview of the premium due dates.","lastModifiedDate":"2023-10-02"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"-"},"content":"| Priority | As a …​          | I want to …​                                                                                        | So that I can…​                                                                      |","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"brendanneojw"},"content":"|----------|------------------|-----------------------------------------------------------------------------------------------------|--------------------------------------------------------------------------------------|","lastModifiedDate":"2023-10-02"},{"lineNumber":276,"author":{"gitId":"brendanneojw"},"content":"| `* * *`  | beginner user    | add a person                                                                                        | expand my client list                                                                |","lastModifiedDate":"2023-10-02"},{"lineNumber":277,"author":{"gitId":"brendanneojw"},"content":"| `* * *`  | beginner user    | delete a person                                                                                     | remove entries who I am no longer working with                                       |","lastModifiedDate":"2023-10-02"},{"lineNumber":278,"author":{"gitId":"brendanneojw"},"content":"| `* * *`  | beginner user    | find person(s) by fields                                                                            | locate details of persons without having to go through the entire list               |","lastModifiedDate":"2023-10-02"},{"lineNumber":279,"author":{"gitId":"brendanneojw"},"content":"| `* * *`  | beginner user    | edit a person                                                                                       | make changes to details of a person                                                  |","lastModifiedDate":"2023-10-02"},{"lineNumber":280,"author":{"gitId":"brendanneojw"},"content":"| `* * *`  | expert user      | export the entire database                                                                          | have a secured copy of all my clients information                                    |","lastModifiedDate":"2023-10-02"},{"lineNumber":281,"author":{"gitId":"brendanneojw"},"content":"| `* *`    | first-time user  | see the layout of the application filled with dummy data                                            | learn how to use the application without corrupting my own data yet                  |","lastModifiedDate":"2023-10-02"},{"lineNumber":282,"author":{"gitId":"brendanneojw"},"content":"| `* *`    | first-time user  | delete all the dummy data                                                                           | start using the application for my own use                                           |","lastModifiedDate":"2023-10-02"},{"lineNumber":283,"author":{"gitId":"brendanneojw"},"content":"| `* *`    | first-time user  | import an existing database into the system                                                         | have all my contacts in one place for different insurance companies I am working for |","lastModifiedDate":"2023-10-02"},{"lineNumber":284,"author":{"gitId":"brendanneojw"},"content":"| `* *`    | beginner-user    | check which policies are close to completion                                                        | perform follow-up actions outside of the application                                 |","lastModifiedDate":"2023-10-02"},{"lineNumber":285,"author":{"gitId":"brendanneojw"},"content":"| `* *`    | experienced-user | have reminders for premium due dates expiry whenever I start the application                        | notify my clients about the upcoming payment                                         |","lastModifiedDate":"2023-10-02"},{"lineNumber":286,"author":{"gitId":"brendanneojw"},"content":"| `* *`    | experienced-user | add comments to a person                                                                            |                                                                                      |","lastModifiedDate":"2023-10-02"},{"lineNumber":287,"author":{"gitId":"brendanneojw"},"content":"| `* *`    | expert user      | sort persons by premium due date expiry                                                             | locate a person who needs to be urgently contacted                                   |","lastModifiedDate":"2023-10-02"},{"lineNumber":288,"author":{"gitId":"brendanneojw"},"content":"| `*`      | first-time user  | have a tutorial function                                                                            | familiarise myself with the features and understand how to use the application       |","lastModifiedDate":"2023-10-02"},{"lineNumber":289,"author":{"gitId":"brendanneojw"},"content":"| `*`      | experienced user | schedule follow-up calls or meetings with persons directly from the contact number in their profile | save the hassle of reaching out to them using another avenue                         |","lastModifiedDate":"2023-10-02"},{"lineNumber":290,"author":{"gitId":"brendanneojw"},"content":"| `*`      | experienced user | review and categorise persons as leads or clients                                                   | prioritise my outreach efforts                                                       |","lastModifiedDate":"2023-10-02"},{"lineNumber":291,"author":{"gitId":"brendanneojw"},"content":"| `*`      | experienced user | categorise persons by insurance company                                                             | easily find out which insurance company the person bought insurance from             |","lastModifiedDate":"2023-10-02"},{"lineNumber":292,"author":{"gitId":"brendanneojw"},"content":"| `*`      | experienced user | customise the layout of the application                                                             | better suit my preferences                                                           |","lastModifiedDate":"2023-10-02"},{"lineNumber":293,"author":{"gitId":"brendanneojw"},"content":"| `*`      | expert user      | generate reports on policy renewals and customer interactions                                       | assess my performance                                                                |","lastModifiedDate":"2023-10-02"},{"lineNumber":294,"author":{"gitId":"brendanneojw"},"content":"| `*`      | expert user      | differentiate between polices based on coverage types                                               | provide tailored advice to clients                                                   |","lastModifiedDate":"2023-10-02"},{"lineNumber":295,"author":{"gitId":"brendanneojw"},"content":"| `*`      | expert user      | track communication history with each person                                                        | provide personalised service                                                         |","lastModifiedDate":"2023-10-02"},{"lineNumber":296,"author":{"gitId":"brendanneojw"},"content":"| `*`      | expert user      | automatically edit a person who made their payment for the premium before the due date              | save the hassle of editing the person manually                                       |","lastModifiedDate":"2023-10-02"},{"lineNumber":297,"author":{"gitId":"brendanneojw"},"content":"| `*`      | expert user      | create custom commands                                                                              | successfully perform tasks in a shorter time                                         |","lastModifiedDate":"2023-10-02"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":299,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":301,"author":{"gitId":"cyaoxuan"},"content":"(For all use cases below, the **System** is the `InsureIQ` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2023-10-03"},{"lineNumber":302,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":303,"author":{"gitId":"cyaoxuan"},"content":"**Use case: UC1 - List all persons**","lastModifiedDate":"2023-10-03"},{"lineNumber":304,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":305,"author":{"gitId":"cyaoxuan"},"content":"**MSS**","lastModifiedDate":"2023-10-03"},{"lineNumber":306,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":307,"author":{"gitId":"cyaoxuan"},"content":"1.  User requests to list all persons.","lastModifiedDate":"2023-10-03"},{"lineNumber":308,"author":{"gitId":"cyaoxuan"},"content":"2.  InsureIQ shows a list of all persons.","lastModifiedDate":"2023-10-03"},{"lineNumber":309,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":310,"author":{"gitId":"cyaoxuan"},"content":"    Use case ends.","lastModifiedDate":"2023-10-03"},{"lineNumber":311,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":312,"author":{"gitId":"cyaoxuan"},"content":"**Use case: UC2 - Find persons**","lastModifiedDate":"2023-10-03"},{"lineNumber":313,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":314,"author":{"gitId":"cyaoxuan"},"content":"**MSS**","lastModifiedDate":"2023-10-03"},{"lineNumber":315,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":316,"author":{"gitId":"cyaoxuan"},"content":"1.  User requests to list persons based on a specific condition.","lastModifiedDate":"2023-10-03"},{"lineNumber":317,"author":{"gitId":"cyaoxuan"},"content":"2.  InsureIQ shows a list of persons that satisfy the condition.","lastModifiedDate":"2023-10-03"},{"lineNumber":318,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":319,"author":{"gitId":"cyaoxuan"},"content":"    Use case ends.","lastModifiedDate":"2023-10-03"},{"lineNumber":320,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":321,"author":{"gitId":"cyaoxuan"},"content":"**Extensions**","lastModifiedDate":"2023-10-03"},{"lineNumber":322,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":323,"author":{"gitId":"cyaoxuan"},"content":"* 2a. The conditions specified are of invalid format.","lastModifiedDate":"2023-10-03"},{"lineNumber":324,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":325,"author":{"gitId":"cyaoxuan"},"content":"    * 2a1. InsureIQ shows an error message.","lastModifiedDate":"2023-10-03"},{"lineNumber":326,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":327,"author":{"gitId":"cyaoxuan"},"content":"      Use case ends.","lastModifiedDate":"2023-10-03"},{"lineNumber":328,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":329,"author":{"gitId":"cyaoxuan"},"content":"**Use case: UC3 - Add a person**","lastModifiedDate":"2023-10-03"},{"lineNumber":330,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":331,"author":{"gitId":"cyaoxuan"},"content":"**MSS**","lastModifiedDate":"2023-10-03"},{"lineNumber":332,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":333,"author":{"gitId":"cyaoxuan"},"content":"1.  User requests to add a person.","lastModifiedDate":"2023-10-03"},{"lineNumber":334,"author":{"gitId":"cyaoxuan"},"content":"2.  InsureIQ shows a confirmation message that the person was added.","lastModifiedDate":"2023-10-03"},{"lineNumber":335,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":336,"author":{"gitId":"cyaoxuan"},"content":"    Use case ends.","lastModifiedDate":"2023-10-03"},{"lineNumber":337,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":338,"author":{"gitId":"cyaoxuan"},"content":"**Extensions**","lastModifiedDate":"2023-10-03"},{"lineNumber":339,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":340,"author":{"gitId":"cyaoxuan"},"content":"* 2a. The adding of the person fails.","lastModifiedDate":"2023-10-03"},{"lineNumber":341,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":342,"author":{"gitId":"cyaoxuan"},"content":"    * 2a1. InsureIQ shows an error message.","lastModifiedDate":"2023-10-03"},{"lineNumber":343,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":344,"author":{"gitId":"cyaoxuan"},"content":"      Use case ends.","lastModifiedDate":"2023-10-03"},{"lineNumber":345,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":346,"author":{"gitId":"cyaoxuan"},"content":"**Use case: UC4 - Delete a person**","lastModifiedDate":"2023-10-03"},{"lineNumber":347,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":348,"author":{"gitId":"cyaoxuan"},"content":"**MSS**","lastModifiedDate":"2023-10-03"},{"lineNumber":349,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":350,"author":{"gitId":"cyaoxuan"},"content":"1.  User requests to \u003cu\u003elist all persons (UC1)\u003c/u\u003e or \u003cu\u003efind persons (UC2)\u003c/u\u003e.","lastModifiedDate":"2023-10-03"},{"lineNumber":351,"author":{"gitId":"cyaoxuan"},"content":"2.  InsureIQ shows a list of persons.","lastModifiedDate":"2023-10-03"},{"lineNumber":352,"author":{"gitId":"cyaoxuan"},"content":"3.  User requests to delete a specific person in the list.","lastModifiedDate":"2023-10-03"},{"lineNumber":353,"author":{"gitId":"cyaoxuan"},"content":"4.  InsureIQ shows a confirmation message that the person was deleted.","lastModifiedDate":"2023-10-03"},{"lineNumber":354,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":355,"author":{"gitId":"cyaoxuan"},"content":"    Use case ends.","lastModifiedDate":"2023-10-03"},{"lineNumber":356,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":357,"author":{"gitId":"cyaoxuan"},"content":"**Extensions**","lastModifiedDate":"2023-10-03"},{"lineNumber":358,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":359,"author":{"gitId":"cyaoxuan"},"content":"* 2a. The list is empty.","lastModifiedDate":"2023-10-03"},{"lineNumber":360,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":361,"author":{"gitId":"cyaoxuan"},"content":"  Use case ends.","lastModifiedDate":"2023-10-03"},{"lineNumber":362,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":363,"author":{"gitId":"cyaoxuan"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2023-10-03"},{"lineNumber":364,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":365,"author":{"gitId":"cyaoxuan"},"content":"    * 3a1. InsureIQ shows an error message.","lastModifiedDate":"2023-10-03"},{"lineNumber":366,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":367,"author":{"gitId":"cyaoxuan"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2023-10-03"},{"lineNumber":368,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":369,"author":{"gitId":"cyaoxuan"},"content":"**Use case: UC5 - Edit a person**","lastModifiedDate":"2023-10-03"},{"lineNumber":370,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":371,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":372,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":373,"author":{"gitId":"cyaoxuan"},"content":"1.  User requests to \u003cu\u003elist all persons (UC1)\u003c/u\u003e or \u003cu\u003efind persons (UC2)\u003c/u\u003e.","lastModifiedDate":"2023-10-03"},{"lineNumber":374,"author":{"gitId":"cyaoxuan"},"content":"2.  InsureIQ shows a list of persons.","lastModifiedDate":"2023-10-03"},{"lineNumber":375,"author":{"gitId":"cyaoxuan"},"content":"3.  User requests to edit a specific person in the list.","lastModifiedDate":"2023-10-03"},{"lineNumber":376,"author":{"gitId":"cyaoxuan"},"content":"4.  InsureIQ shows a confirmation message that the person was edited.","lastModifiedDate":"2023-10-03"},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":378,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":380,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":381,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":382,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2020-05-23"},{"lineNumber":383,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":384,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":385,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":386,"author":{"gitId":"-"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2020-05-23"},{"lineNumber":387,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":388,"author":{"gitId":"cyaoxuan"},"content":"    * 3a1. InsureIQ shows an error message.","lastModifiedDate":"2023-10-03"},{"lineNumber":389,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":390,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2020-05-23"},{"lineNumber":391,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":392,"author":{"gitId":"cyaoxuan"},"content":"* 3b. The fields to be edited are of invalid format.","lastModifiedDate":"2023-10-03"},{"lineNumber":393,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":394,"author":{"gitId":"cyaoxuan"},"content":"    * 3b1. InsureIQ shows an error message.","lastModifiedDate":"2023-10-03"},{"lineNumber":395,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":396,"author":{"gitId":"cyaoxuan"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2023-10-03"},{"lineNumber":397,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":398,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":399,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":400,"author":{"gitId":"suryanshkushwaha"},"content":"Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2023-10-02"},{"lineNumber":401,"author":{"gitId":"suryanshkushwaha"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":402,"author":{"gitId":"suryanshkushwaha"},"content":"1. **Performance Requirements:**","lastModifiedDate":"2023-10-02"},{"lineNumber":403,"author":{"gitId":"suryanshkushwaha"},"content":"    - The system should respond to user input within 1 second on average.","lastModifiedDate":"2023-10-02"},{"lineNumber":404,"author":{"gitId":"suryanshkushwaha"},"content":"    - It should be able to handle a minimum of 100 concurrent user sessions without significant performance degradation.","lastModifiedDate":"2023-10-02"},{"lineNumber":405,"author":{"gitId":"suryanshkushwaha"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":406,"author":{"gitId":"suryanshkushwaha"},"content":"2. **Scalability:**","lastModifiedDate":"2023-10-02"},{"lineNumber":407,"author":{"gitId":"suryanshkushwaha"},"content":"    - The system should be scalable to accommodate a growing number of car insurance policies and customer records.","lastModifiedDate":"2023-10-02"},{"lineNumber":408,"author":{"gitId":"suryanshkushwaha"},"content":"    - It should support at least 1,000 customer profiles and policies initially and be able to scale to 10,000 over time.","lastModifiedDate":"2023-10-02"},{"lineNumber":409,"author":{"gitId":"suryanshkushwaha"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":410,"author":{"gitId":"suryanshkushwaha"},"content":"3. **Availability and Reliability:**","lastModifiedDate":"2023-10-02"},{"lineNumber":411,"author":{"gitId":"suryanshkushwaha"},"content":"    - The system should be available 24/7, with planned maintenance windows communicated in advance.","lastModifiedDate":"2023-10-02"},{"lineNumber":412,"author":{"gitId":"suryanshkushwaha"},"content":"    - It should have a reliability rate of at least 99.9%, minimizing downtime and data loss.","lastModifiedDate":"2023-10-02"},{"lineNumber":413,"author":{"gitId":"suryanshkushwaha"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":414,"author":{"gitId":"suryanshkushwaha"},"content":"4. **Usability:**","lastModifiedDate":"2023-10-02"},{"lineNumber":415,"author":{"gitId":"suryanshkushwaha"},"content":"    - A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2023-10-02"},{"lineNumber":416,"author":{"gitId":"suryanshkushwaha"},"content":"    - The CLI and GUI interfaces should be intuitive and user-friendly, allowing agents to perform tasks efficiently.","lastModifiedDate":"2023-10-02"},{"lineNumber":417,"author":{"gitId":"suryanshkushwaha"},"content":"    - The system should provide clear error messages and support for keyboard shortcuts for CLI users.","lastModifiedDate":"2023-10-02"},{"lineNumber":418,"author":{"gitId":"suryanshkushwaha"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":419,"author":{"gitId":"suryanshkushwaha"},"content":"5. **Maintainability:**","lastModifiedDate":"2023-10-02"},{"lineNumber":420,"author":{"gitId":"suryanshkushwaha"},"content":"    - The codebase should follow industry best practices and be well-documented to facilitate maintenance and future updates.","lastModifiedDate":"2023-10-02"},{"lineNumber":421,"author":{"gitId":"suryanshkushwaha"},"content":"    - Updates and bug fixes should be deployable without significant disruption to the system.","lastModifiedDate":"2023-10-02"},{"lineNumber":422,"author":{"gitId":"suryanshkushwaha"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":423,"author":{"gitId":"suryanshkushwaha"},"content":"6. **Interoperability:**","lastModifiedDate":"2023-10-02"},{"lineNumber":424,"author":{"gitId":"suryanshkushwaha"},"content":"    - The system should be compatible with various operating systems commonly used by insurance agents.","lastModifiedDate":"2023-10-02"},{"lineNumber":425,"author":{"gitId":"KumChaiYin"},"content":"    - It should support importing/exporting data in _standard formats_ for interoperability with other systems.","lastModifiedDate":"2023-10-02"},{"lineNumber":426,"author":{"gitId":"suryanshkushwaha"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":427,"author":{"gitId":"suryanshkushwaha"},"content":"7. **Documentation:**","lastModifiedDate":"2023-10-02"},{"lineNumber":428,"author":{"gitId":"suryanshkushwaha"},"content":"   - Comprehensive documentation, including user manuals and technical guides, should be available to assist users and administrators.","lastModifiedDate":"2023-10-02"},{"lineNumber":429,"author":{"gitId":"suryanshkushwaha"},"content":"   - The documentation should be regularly updated to reflect changes and improvements to the system.","lastModifiedDate":"2023-10-02"},{"lineNumber":430,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":431,"author":{"gitId":"suryanshkushwaha"},"content":"8. **Response Time:**","lastModifiedDate":"2023-10-02"},{"lineNumber":432,"author":{"gitId":"suryanshkushwaha"},"content":"   - The system should provide real-time updates on policy status and customer information, ensuring that agents can quickly access the information they need.","lastModifiedDate":"2023-10-02"},{"lineNumber":433,"author":{"gitId":"suryanshkushwaha"},"content":"   - Queries for customer data should return results in less than 2 seconds.","lastModifiedDate":"2023-10-02"},{"lineNumber":434,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":435,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":436,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":437,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2020-05-23"},{"lineNumber":438,"author":{"gitId":"KumChaiYin"},"content":"* **standard formats**: CSV, JSON","lastModifiedDate":"2023-10-02"},{"lineNumber":439,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":440,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":441,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":442,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":443,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":444,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":445,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":446,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":447,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":448,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":449,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":450,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":451,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":452,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":453,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":454,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":455,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":456,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":457,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":458,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":459,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":460,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":461,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":462,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":463,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":464,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":465,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":466,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":467,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":468,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":469,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":470,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23"},{"lineNumber":471,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":472,"author":{"gitId":"-"},"content":"   1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23"},{"lineNumber":473,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":474,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":475,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":476,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":477,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":478,"author":{"gitId":"-"},"content":"      Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":479,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":480,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":481,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":482,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":483,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":484,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":485,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":486,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":487,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":488,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":489,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":490,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":491,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"brendanneojw":25,"suryanshkushwaha":32,"KumChaiYin":2,"-":349,"cyaoxuan":83}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"KumChaiYin"},"content":"InsureIQ is a **contact management system of large car owners database with policies bought by them** optimized for use via a Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast, InsureIQ can get your contact management tasks done faster than traditional GUI apps.","lastModifiedDate":"2023-10-02"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"brendanneojw"},"content":"1. Download the latest `insureiq.jar` from here. [link coming soon]","lastModifiedDate":"2023-10-04"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"cyaoxuan"},"content":"1. Copy the file to the folder you want to use as the _home folder_ for InsureIQ.","lastModifiedDate":"2023-10-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"brendanneojw"},"content":"1. Open a command terminal, `cd` into the folder you put the jar file in, and use the `java -jar insureiq.jar` command to run the application.\u003cbr\u003e","lastModifiedDate":"2023-10-04"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   A GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2023-01-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"1. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"cyaoxuan"},"content":"   * `list` : Lists all persons.","lastModifiedDate":"2023-10-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"cyaoxuan"},"content":"   * `add n/Mary i/627A c/73052859 l/SLU5237J` : Adds a person named `Mary` to InsureIQ.","lastModifiedDate":"2023-10-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"cyaoxuan"},"content":"   * `delete 3` : Deletes the 3rd person shown in the current list.","lastModifiedDate":"2023-10-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"cyaoxuan"},"content":"   * `clear` : Deletes all persons.","lastModifiedDate":"2023-10-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"   * `exit` : Exits the app.","lastModifiedDate":"2023-01-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"1. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"  e.g. in `add n/NAME`, `NAME` is a parameter which can be used as `add n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"  e.g `n/NAME [t/TAG]` can be used as `n/John Doe t/friend` or as `n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"* Items with `…`​ after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"  e.g. `[t/TAG]…​` can be used as ` ` (i.e. 0 times), `t/friend`, `t/friend t/family` etc.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable.","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, `exit` and `clear`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2021-02-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-02-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"* If you are using a PDF version of this document, be careful when copying and pasting commands that span multiple lines as space characters surrounding line-breaks may be omitted when copied over to the application.","lastModifiedDate":"2023-06-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"### Viewing help : `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"Shows a message explaning how to access the help page.","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"![help message](images/helpMessage.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"Format: `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"### Adding a person: `add`","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"KumChaiYin"},"content":"Adds a person to the database.","lastModifiedDate":"2023-10-02"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"KumChaiYin"},"content":"Format: `add n/NAME i/NRIC c/CONTACT NUMBER l/LICENCE PLATE…​`","lastModifiedDate":"2023-10-02"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"KumChaiYin"},"content":"* Add a person\u0027s details in the database.","lastModifiedDate":"2023-10-02"},{"lineNumber":82,"author":{"gitId":"KumChaiYin"},"content":"* **All** of the fields must be present when using this command.","lastModifiedDate":"2023-10-02"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"KumChaiYin"},"content":"* `add n/Mary i/627A c/73052859 l/SLU5237J` creates a person whose name is `Mary`, NRIC last four digits is `627A`, contact number is `73052859`, licence plate is `SLU5237J` in the database.","lastModifiedDate":"2023-10-02"},{"lineNumber":86,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":87,"author":{"gitId":"KumChaiYin"},"content":"Acceptable values for each parameter:","lastModifiedDate":"2023-10-02"},{"lineNumber":88,"author":{"gitId":"KumChaiYin"},"content":"* `n/NAME`: Alphabets","lastModifiedDate":"2023-10-02"},{"lineNumber":89,"author":{"gitId":"KumChaiYin"},"content":"* `i/NRIC`: Alphanumeric, _exactly_ 4 characters","lastModifiedDate":"2023-10-02"},{"lineNumber":90,"author":{"gitId":"KumChaiYin"},"content":"* `c/CONTACT NUMBER`: Numeric, _exactly_ 8 characters","lastModifiedDate":"2023-10-02"},{"lineNumber":91,"author":{"gitId":"KumChaiYin"},"content":"* `l/LICENCE PLATE`: Alphanumeric, _up to_ 9 characters","lastModifiedDate":"2023-10-02"},{"lineNumber":92,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":93,"author":{"gitId":"KumChaiYin"},"content":"Expected output upon success: [coming soon]","lastModifiedDate":"2023-10-02"},{"lineNumber":94,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":95,"author":{"gitId":"KumChaiYin"},"content":"Expected output upon failure:","lastModifiedDate":"2023-10-02"},{"lineNumber":96,"author":{"gitId":"KumChaiYin"},"content":"* Any one of the fields missing: `Error: Please provide all required fields (pn, new, field)`","lastModifiedDate":"2023-10-02"},{"lineNumber":97,"author":{"gitId":"KumChaiYin"},"content":"* Fields specified for add are not valid or empty: `Error: Invalid field for adding.`","lastModifiedDate":"2023-10-02"},{"lineNumber":98,"author":{"gitId":"KumChaiYin"},"content":"* Format of added value is incorrect or not allowed for the specified field: `Error: Invalid value format.`","lastModifiedDate":"2023-10-02"},{"lineNumber":99,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"### Listing all persons : `list`","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"cyaoxuan"},"content":"Shows a list of all persons in the database.","lastModifiedDate":"2023-10-03"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"Format: `list`","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"### Editing a person : `edit`","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"suryanshkushwaha"},"content":"Modify and/or updates existing policy information in the database.","lastModifiedDate":"2023-10-02"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"suryanshkushwaha"},"content":"Format: `edit INDEX [l/LICENCEPLATE] [pn/POLICY NUMBER] [pi/POLICY ISSUE","lastModifiedDate":"2023-10-02"},{"lineNumber":112,"author":{"gitId":"suryanshkushwaha"},"content":"DATE] [pe/POLICY EXPIRY DATE]…​`","lastModifiedDate":"2023-10-02"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"suryanshkushwaha"},"content":"* Edits the person policy details at the specified `INDEX`. The index refers to the index number shown in the displayed person list. The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2023-10-02"},{"lineNumber":115,"author":{"gitId":"suryanshkushwaha"},"content":"* **At least one** of the optional fields must be provided.","lastModifiedDate":"2023-10-02"},{"lineNumber":116,"author":{"gitId":"-"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"suryanshkushwaha"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"suryanshkushwaha"},"content":"*  `edit 1 l/SNB9876E` updates the policy at the INDEX number 1 with the new license number provided.","lastModifiedDate":"2023-10-02"},{"lineNumber":121,"author":{"gitId":"suryanshkushwaha"},"content":"*  `edit 2 pn/AB12345J pe/31-12-2024` updates the policy at the INDEX number 2 with the new policy number and expiration date.","lastModifiedDate":"2023-10-02"},{"lineNumber":122,"author":{"gitId":"suryanshkushwaha"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":123,"author":{"gitId":"suryanshkushwaha"},"content":"Acceptable values for each parameter:","lastModifiedDate":"2023-10-02"},{"lineNumber":124,"author":{"gitId":"suryanshkushwaha"},"content":"* `l/LICENCEPLATE`: Alphanumeric, _up to_ 9 characters.","lastModifiedDate":"2023-10-02"},{"lineNumber":125,"author":{"gitId":"suryanshkushwaha"},"content":"* `pn/POLICY NUMBER`: Alphanumeric, _exactly_ 8 characters.","lastModifiedDate":"2023-10-02"},{"lineNumber":126,"author":{"gitId":"suryanshkushwaha"},"content":"* `pi/POLICY ISSUE DATE` and `pe/POLICY EXPIRY DATE`: Date in the format dd-mm-yyyy.","lastModifiedDate":"2023-10-02"},{"lineNumber":127,"author":{"gitId":"suryanshkushwaha"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":128,"author":{"gitId":"suryanshkushwaha"},"content":"Expected output upon success: [coming soon]","lastModifiedDate":"2023-10-02"},{"lineNumber":129,"author":{"gitId":"suryanshkushwaha"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":130,"author":{"gitId":"suryanshkushwaha"},"content":"Expected output upon failure:","lastModifiedDate":"2023-10-02"},{"lineNumber":131,"author":{"gitId":"suryanshkushwaha"},"content":"* Policy number does not exist: `Error: Policy number not found.`","lastModifiedDate":"2023-10-02"},{"lineNumber":132,"author":{"gitId":"suryanshkushwaha"},"content":"* Field specified for update is not valid or empty: `Error: Invalid field for updating.`","lastModifiedDate":"2023-10-02"},{"lineNumber":133,"author":{"gitId":"suryanshkushwaha"},"content":"* New value format is incorrect or not allowed for the specified field: `Error: Invalid new value format.`","lastModifiedDate":"2023-10-02"},{"lineNumber":134,"author":{"gitId":"suryanshkushwaha"},"content":"* Any of the mandatory fields are missing: `Error: Please provide all required fields.`","lastModifiedDate":"2023-10-02"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"brendanneojw"},"content":"### Locating persons by fields: `find`","lastModifiedDate":"2023-10-02"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"brendanneojw"},"content":"Finds person(s) whose fields matches any of the given fields.","lastModifiedDate":"2023-10-02"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"brendanneojw"},"content":"Format: `find [n/NAME] [i/NRIC] [c/CONTACT NUMBER] [l/LICENCE PLATE]","lastModifiedDate":"2023-10-02"},{"lineNumber":143,"author":{"gitId":"brendanneojw"},"content":"[pn/POLICY NUMBER] [pi/POLICY ISSUE DATE] [pe/POLICY EXPIRY DATE]`","lastModifiedDate":"2023-10-02"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"brendanneojw"},"content":"* The search is case-insensitive e.g `hans` will match `Hans`","lastModifiedDate":"2023-10-04"},{"lineNumber":146,"author":{"gitId":"brendanneojw"},"content":"* The order of the fields does not matter. e.g. `Hans Bo` will match `Bo Hans`","lastModifiedDate":"2023-10-02"},{"lineNumber":147,"author":{"gitId":"brendanneojw"},"content":"* **At least one** of the fields must be present","lastModifiedDate":"2023-10-02"},{"lineNumber":148,"author":{"gitId":"-"},"content":"* Only full words will be matched e.g. `Han` will not match `Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"brendanneojw"},"content":"* Persons matching at least one field will be returned (i.e. `OR` search)","lastModifiedDate":"2023-10-04"},{"lineNumber":150,"author":{"gitId":"-"},"content":"  e.g. `Hans Bo` will return `Hans Gruber`, `Bo Yang`","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"brendanneojw"},"content":"* `find n/mary` returns all profiles that has the name `Mary`","lastModifiedDate":"2023-10-02"},{"lineNumber":154,"author":{"gitId":"brendanneojw"},"content":"* `find n/john pn/AB12345J` returns the profile whose name contains `John` with policy number `AB12345J`","lastModifiedDate":"2023-10-02"},{"lineNumber":155,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":156,"author":{"gitId":"brendanneojw"},"content":"Acceptable values for each parameter:","lastModifiedDate":"2023-10-02"},{"lineNumber":157,"author":{"gitId":"brendanneojw"},"content":"* `n/NAME`: Alphabets ","lastModifiedDate":"2023-10-02"},{"lineNumber":158,"author":{"gitId":"brendanneojw"},"content":"* `i/NRIC`: Alphanumeric, _exactly_ 4 characters ","lastModifiedDate":"2023-10-02"},{"lineNumber":159,"author":{"gitId":"brendanneojw"},"content":"* `c/CONTACT NUMBER`: Numeric, _exactly_ 8 characters ","lastModifiedDate":"2023-10-02"},{"lineNumber":160,"author":{"gitId":"brendanneojw"},"content":"* `l/LICENCE PLATE`: Alphanumeric, _up to_ 9 characters ","lastModifiedDate":"2023-10-02"},{"lineNumber":161,"author":{"gitId":"brendanneojw"},"content":"* `pn/POLICY NUMBER`: Alphanumeric, _exactly_ 8 characters ","lastModifiedDate":"2023-10-02"},{"lineNumber":162,"author":{"gitId":"brendanneojw"},"content":"* `pi/POLICY ISSUE DATE` and `pe/POLICY EXPIRY DATE`: Date in the format _dd-mm-yyyy_","lastModifiedDate":"2023-10-02"},{"lineNumber":163,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":164,"author":{"gitId":"brendanneojw"},"content":"Expected output upon success: [coming soon]","lastModifiedDate":"2023-10-02"},{"lineNumber":165,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":166,"author":{"gitId":"brendanneojw"},"content":"Expected output upon failure:","lastModifiedDate":"2023-10-02"},{"lineNumber":167,"author":{"gitId":"brendanneojw"},"content":"* Format error in any field:`Error: Please adhere to the format for the fields`","lastModifiedDate":"2023-10-02"},{"lineNumber":168,"author":{"gitId":"brendanneojw"},"content":"* No field given: `Error: Please give at least one field`","lastModifiedDate":"2023-10-02"},{"lineNumber":169,"author":{"gitId":"brendanneojw"},"content":"* Field flag given but no value: `Error: Please give a value in the field(s) indicated`","lastModifiedDate":"2023-10-02"},{"lineNumber":170,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"### Deleting a person : `delete`","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"RSXIX"},"content":"Deletes the specified person from the database.","lastModifiedDate":"2023-10-03"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"Format: `delete INDEX`","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"* Deletes the person at the specified `INDEX`.","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"RSXIX"},"content":"* The index refers to the index number shown in the displayed list of car owners and is a compulsory field.","lastModifiedDate":"2023-10-03"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"RSXIX"},"content":"* `list` followed by `delete 2` deletes the 2nd person in the database.","lastModifiedDate":"2023-10-03"},{"lineNumber":183,"author":{"gitId":"RSXIX"},"content":"* `find n/Betsy` followed by `delete 1` deletes the 1st person in the results of the `find` command.","lastModifiedDate":"2023-10-03"},{"lineNumber":184,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":185,"author":{"gitId":"RSXIX"},"content":"Acceptable values for each parameter:","lastModifiedDate":"2023-10-03"},{"lineNumber":186,"author":{"gitId":"RSXIX"},"content":"* `INDEX` : It must be a **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2023-10-03"},{"lineNumber":187,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":188,"author":{"gitId":"RSXIX"},"content":"Expected output upon success : [coming soon]","lastModifiedDate":"2023-10-03"},{"lineNumber":189,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":190,"author":{"gitId":"RSXIX"},"content":"Expected output upon failure:","lastModifiedDate":"2023-10-03"},{"lineNumber":191,"author":{"gitId":"RSXIX"},"content":"* Profile at the specified `INDEX` cannot be found: `Error: Invalid Index`","lastModifiedDate":"2023-10-03"},{"lineNumber":192,"author":{"gitId":"RSXIX"},"content":"* Missing `INDEX` parameter: `Error: Missing Index`","lastModifiedDate":"2023-10-03"},{"lineNumber":193,"author":{"gitId":"RSXIX"},"content":"* Incorrect `INDEX` parameter: `Error: The parameter is not of the type positive integer`","lastModifiedDate":"2023-10-03"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"### Clearing all entries : `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"cyaoxuan"},"content":"Clears all entries from the database.","lastModifiedDate":"2023-10-03"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"Format: `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"### Exiting the program : `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"cyaoxuan"},"content":"InsureIQ data are saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2023-10-03"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"### Editing the data file","lastModifiedDate":"2021-02-04"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":213,"author":{"gitId":"brendanneojw"},"content":"InsureIQ data are saved automatically as a JSON file `[JAR file location]/data/insureiq.json`. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2023-10-04"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":215,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2021-02-04"},{"lineNumber":216,"author":{"gitId":"cyaoxuan"},"content":"If your changes to the data file makes its format invalid, InsureIQ will discard all data and start with an empty data file at the next run. Hence, it is recommended to take a backup of the file before editing it.","lastModifiedDate":"2023-10-03"},{"lineNumber":217,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":219,"author":{"gitId":"-"},"content":"### Archiving data files `[coming in v2.0]`","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"_Details coming soon ..._","lastModifiedDate":"2021-02-04"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"brendanneojw"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous InsureIQ home folder.","lastModifiedDate":"2023-10-04"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"## Known issues","lastModifiedDate":"2023-09-08"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":234,"author":{"gitId":"-"},"content":"1. **When using multiple screens**, if you move the application to a secondary screen, and later switch to using only the primary screen, the GUI will open off-screen. The remedy is to delete the `preferences.json` file created by the application before running the application again.","lastModifiedDate":"2023-09-08"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":236,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-09-08"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":238,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"suryanshkushwaha"},"content":"| Action     | Format, Examples                                                                                                                                                     |","lastModifiedDate":"2023-10-02"},{"lineNumber":241,"author":{"gitId":"KumChaiYin"},"content":"|------------|----------------------------------------------------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2023-10-02"},{"lineNumber":242,"author":{"gitId":"KumChaiYin"},"content":"| **Add**    | `add n/NAME i/NRIC c/CONTACT NUMBER l/LICENCE PLATE…​` \u003cbr\u003e e.g., `add n/Mary i/627A c/73052859 l/SLU5237J`                                                          |","lastModifiedDate":"2023-10-02"},{"lineNumber":243,"author":{"gitId":"suryanshkushwaha"},"content":"| **Clear**  | `clear`                                                                                                                                                              |","lastModifiedDate":"2023-10-02"},{"lineNumber":244,"author":{"gitId":"suryanshkushwaha"},"content":"| **Delete** | `delete INDEX`\u003cbr\u003e e.g., `delete 3`                                                                                                                                  |","lastModifiedDate":"2023-10-02"},{"lineNumber":245,"author":{"gitId":"KumChaiYin"},"content":"| **Edit**   | `edit INDEX [l/LICENCEPLATE] [pn/POLICY NUMBER] [pi/POLICY ISSUE DATE] [pe/POLICY EXPIRY DATE]…​`\u003cbr\u003e e.g.,`edit 2 pn/AB12345J pe/31-12-2024`                        |","lastModifiedDate":"2023-10-02"},{"lineNumber":246,"author":{"gitId":"suryanshkushwaha"},"content":"| **Find**   | `find [n/NAME] [i/NRIC] [c/CONTACT NUMBER] [l/LICENCE PLATE] [pn/POLICY NUMBER] [pi/POLICY ISSUE DATE] [pe/POLICY EXPIRY DATE]`\u003cbr\u003e e.g., `find n/John /pn AB12345J` |","lastModifiedDate":"2023-10-02"},{"lineNumber":247,"author":{"gitId":"suryanshkushwaha"},"content":"| **List**   | `list`                                                                                                                                                               |","lastModifiedDate":"2023-10-02"},{"lineNumber":248,"author":{"gitId":"suryanshkushwaha"},"content":"| **Help**   | `help`                                                                                                                                                               |","lastModifiedDate":"2023-10-02"}],"authorContributionMap":{"brendanneojw":30,"suryanshkushwaha":27,"RSXIX":14,"KumChaiYin":23,"-":145,"cyaoxuan":9}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"cyaoxuan"},"content":"title: InsureIQ","lastModifiedDate":"2023-10-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"cyaoxuan"},"content":"[![CI Status](https://github.com/AY2324S1-CS2103T-W16-3/tp/actions/workflows/gradle.yml/badge.svg)](https://github.com/AY2324S1-CS2103T-W16-3/tp/actions/workflows/gradle.yml)","lastModifiedDate":"2023-10-03"},{"lineNumber":7,"author":{"gitId":"cyaoxuan"},"content":"[![codecov](https://codecov.io/gh/AY2324S1-CS2103T-W16-3/tp/graph/badge.svg?token\u003dDE29JYXOPU)](https://codecov.io/gh/AY2324S1-CS2103T-W16-3/tp)","lastModifiedDate":"2023-10-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"cyaoxuan"},"content":"**InsureIQ is a desktop application for car insurance agents who type fast over CLI and have to keep track of multiple customers\u0027 vehicles with the car insurance policies.** While it has a GUI, most of the user interactions happen using a CLI (Command Line Interface).","lastModifiedDate":"2023-10-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"cyaoxuan"},"content":"* If you are interested in using InsureIQ, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2023-10-03"},{"lineNumber":14,"author":{"gitId":"cyaoxuan"},"content":"* If you are interested about developing InsureIQ, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2023-10-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"-":13,"cyaoxuan":6}},{"path":"docs/team/brendanneojw.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"brendanneojw"},"content":"---","lastModifiedDate":"2023-10-02"},{"lineNumber":2,"author":{"gitId":"brendanneojw"},"content":"layout: page","lastModifiedDate":"2023-10-02"},{"lineNumber":3,"author":{"gitId":"brendanneojw"},"content":"title: Brendan\u0027s Project Portfolio Page","lastModifiedDate":"2023-10-02"},{"lineNumber":4,"author":{"gitId":"brendanneojw"},"content":"---","lastModifiedDate":"2023-10-02"},{"lineNumber":5,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":6,"author":{"gitId":"brendanneojw"},"content":"### Project: InsureIQ","lastModifiedDate":"2023-10-02"},{"lineNumber":7,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":8,"author":{"gitId":"brendanneojw"},"content":"InsureIQ is for car insurance agents who type fast over CLI and have to keep track of multiple customers\u0027 vehicles with the car insurance policies. ","lastModifiedDate":"2023-10-02"},{"lineNumber":9,"author":{"gitId":"brendanneojw"},"content":"The user interacts with it using a CLI, and it has a GUI created with JavaFX.","lastModifiedDate":"2023-10-02"},{"lineNumber":10,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":11,"author":{"gitId":"brendanneojw"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-10-02"},{"lineNumber":12,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":13,"author":{"gitId":"suryanshkushwaha"},"content":"* **New Feature**: ","lastModifiedDate":"2023-10-02"},{"lineNumber":14,"author":{"gitId":"suryanshkushwaha"},"content":"  * to be added soon","lastModifiedDate":"2023-10-02"},{"lineNumber":15,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":16,"author":{"gitId":"brendanneojw"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2324s1.github.io/tp-dashboard/?search\u003dbrendanneojw\u0026breakdown\u003dtrue)","lastModifiedDate":"2023-10-02"},{"lineNumber":17,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":18,"author":{"gitId":"brendanneojw"},"content":"* **Project management**:","lastModifiedDate":"2023-10-02"},{"lineNumber":19,"author":{"gitId":"brendanneojw"},"content":"  * to be added soon","lastModifiedDate":"2023-10-02"},{"lineNumber":20,"author":{"gitId":"brendanneojw"},"content":"  ","lastModifiedDate":"2023-10-02"},{"lineNumber":21,"author":{"gitId":"brendanneojw"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-10-02"},{"lineNumber":22,"author":{"gitId":"brendanneojw"},"content":"  * to be added soon","lastModifiedDate":"2023-10-02"},{"lineNumber":23,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":24,"author":{"gitId":"brendanneojw"},"content":"* **Documentation**:","lastModifiedDate":"2023-10-02"},{"lineNumber":25,"author":{"gitId":"brendanneojw"},"content":"  * User Guide:","lastModifiedDate":"2023-10-02"},{"lineNumber":26,"author":{"gitId":"brendanneojw"},"content":"    * to be added soon","lastModifiedDate":"2023-10-02"},{"lineNumber":27,"author":{"gitId":"brendanneojw"},"content":"  * Developer Guide:","lastModifiedDate":"2023-10-02"},{"lineNumber":28,"author":{"gitId":"brendanneojw"},"content":"    * to be added soon","lastModifiedDate":"2023-10-02"},{"lineNumber":29,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":30,"author":{"gitId":"brendanneojw"},"content":"* **Community**:","lastModifiedDate":"2023-10-02"},{"lineNumber":31,"author":{"gitId":"brendanneojw"},"content":"  * to be added soon","lastModifiedDate":"2023-10-02"},{"lineNumber":32,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":33,"author":{"gitId":"brendanneojw"},"content":"* **Tools**:","lastModifiedDate":"2023-10-02"},{"lineNumber":34,"author":{"gitId":"brendanneojw"},"content":"  * to be added soon","lastModifiedDate":"2023-10-02"}],"authorContributionMap":{"brendanneojw":32,"suryanshkushwaha":2}},{"path":"docs/team/cyaoxuan.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"cyaoxuan"},"content":"---","lastModifiedDate":"2023-10-02"},{"lineNumber":2,"author":{"gitId":"cyaoxuan"},"content":"layout: page","lastModifiedDate":"2023-10-02"},{"lineNumber":3,"author":{"gitId":"cyaoxuan"},"content":"title: Yao Xuan\u0027s Project Portfolio Page","lastModifiedDate":"2023-10-02"},{"lineNumber":4,"author":{"gitId":"cyaoxuan"},"content":"---","lastModifiedDate":"2023-10-02"},{"lineNumber":5,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":6,"author":{"gitId":"cyaoxuan"},"content":"### Project: InsureIQ","lastModifiedDate":"2023-10-02"},{"lineNumber":7,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":8,"author":{"gitId":"cyaoxuan"},"content":"InsureIQ is for car insurance agents who type fast over CLI and have to keep track of multiple customers\u0027 vehicles with the car insurance policies. ","lastModifiedDate":"2023-10-02"},{"lineNumber":9,"author":{"gitId":"cyaoxuan"},"content":"The user interacts with it using a CLI, and it has a GUI created with JavaFX.","lastModifiedDate":"2023-10-02"},{"lineNumber":10,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":11,"author":{"gitId":"cyaoxuan"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-10-02"},{"lineNumber":12,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":13,"author":{"gitId":"suryanshkushwaha"},"content":"* **New Feature**: ","lastModifiedDate":"2023-10-02"},{"lineNumber":14,"author":{"gitId":"suryanshkushwaha"},"content":"  * to be added soon","lastModifiedDate":"2023-10-02"},{"lineNumber":15,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":16,"author":{"gitId":"cyaoxuan"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2324s1.github.io/tp-dashboard/?search\u003dcyaoxuan\u0026breakdown\u003dtrue)","lastModifiedDate":"2023-10-02"},{"lineNumber":17,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":18,"author":{"gitId":"cyaoxuan"},"content":"* **Project management**:","lastModifiedDate":"2023-10-02"},{"lineNumber":19,"author":{"gitId":"cyaoxuan"},"content":"  * to be added soon","lastModifiedDate":"2023-10-02"},{"lineNumber":20,"author":{"gitId":"cyaoxuan"},"content":"  ","lastModifiedDate":"2023-10-02"},{"lineNumber":21,"author":{"gitId":"cyaoxuan"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-10-02"},{"lineNumber":22,"author":{"gitId":"cyaoxuan"},"content":"  * to be added soon","lastModifiedDate":"2023-10-02"},{"lineNumber":23,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":24,"author":{"gitId":"cyaoxuan"},"content":"* **Documentation**:","lastModifiedDate":"2023-10-02"},{"lineNumber":25,"author":{"gitId":"cyaoxuan"},"content":"  * User Guide:","lastModifiedDate":"2023-10-02"},{"lineNumber":26,"author":{"gitId":"cyaoxuan"},"content":"    * to be added soon","lastModifiedDate":"2023-10-02"},{"lineNumber":27,"author":{"gitId":"cyaoxuan"},"content":"  * Developer Guide:","lastModifiedDate":"2023-10-02"},{"lineNumber":28,"author":{"gitId":"cyaoxuan"},"content":"    * to be added soon","lastModifiedDate":"2023-10-02"},{"lineNumber":29,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":30,"author":{"gitId":"cyaoxuan"},"content":"* **Community**:","lastModifiedDate":"2023-10-02"},{"lineNumber":31,"author":{"gitId":"cyaoxuan"},"content":"  * to be added soon","lastModifiedDate":"2023-10-02"},{"lineNumber":32,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":33,"author":{"gitId":"cyaoxuan"},"content":"* **Tools**:","lastModifiedDate":"2023-10-02"},{"lineNumber":34,"author":{"gitId":"cyaoxuan"},"content":"  * to be added soon","lastModifiedDate":"2023-10-02"}],"authorContributionMap":{"suryanshkushwaha":2,"cyaoxuan":32}},{"path":"docs/team/kumchaiyin.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"KumChaiYin"},"content":"---","lastModifiedDate":"2023-10-02"},{"lineNumber":2,"author":{"gitId":"KumChaiYin"},"content":"layout: page","lastModifiedDate":"2023-10-02"},{"lineNumber":3,"author":{"gitId":"KumChaiYin"},"content":"title: Kum Chai Yin\u0027s Project Portfolio Page","lastModifiedDate":"2023-10-02"},{"lineNumber":4,"author":{"gitId":"KumChaiYin"},"content":"---","lastModifiedDate":"2023-10-02"},{"lineNumber":5,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":6,"author":{"gitId":"KumChaiYin"},"content":"### Project: InsureIQ","lastModifiedDate":"2023-10-02"},{"lineNumber":7,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":8,"author":{"gitId":"KumChaiYin"},"content":"InsureIQ is for car insurance agents who type fast over CLI and have to keep track of multiple customers\u0027 vehicles with the car insurance policies.","lastModifiedDate":"2023-10-02"},{"lineNumber":9,"author":{"gitId":"KumChaiYin"},"content":"The user interacts with it using a CLI, and it has a GUI created with JavaFX.","lastModifiedDate":"2023-10-02"},{"lineNumber":10,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":11,"author":{"gitId":"KumChaiYin"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-10-02"},{"lineNumber":12,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":13,"author":{"gitId":"KumChaiYin"},"content":"* **New Feature**:","lastModifiedDate":"2023-10-02"},{"lineNumber":14,"author":{"gitId":"KumChaiYin"},"content":"    * to be added soon","lastModifiedDate":"2023-10-02"},{"lineNumber":15,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":16,"author":{"gitId":"KumChaiYin"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2324s1.github.io/tp-dashboard/?search\u003dKumChaiYin\u0026breakdown\u003dtrue)","lastModifiedDate":"2023-10-02"},{"lineNumber":17,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":18,"author":{"gitId":"KumChaiYin"},"content":"* **Project management**:","lastModifiedDate":"2023-10-02"},{"lineNumber":19,"author":{"gitId":"KumChaiYin"},"content":"    * to be added soon","lastModifiedDate":"2023-10-02"},{"lineNumber":20,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":21,"author":{"gitId":"KumChaiYin"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-10-02"},{"lineNumber":22,"author":{"gitId":"KumChaiYin"},"content":"    * to be added soon","lastModifiedDate":"2023-10-02"},{"lineNumber":23,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":24,"author":{"gitId":"KumChaiYin"},"content":"* **Documentation**:","lastModifiedDate":"2023-10-02"},{"lineNumber":25,"author":{"gitId":"KumChaiYin"},"content":"    * User Guide:","lastModifiedDate":"2023-10-02"},{"lineNumber":26,"author":{"gitId":"KumChaiYin"},"content":"        * to be added soon","lastModifiedDate":"2023-10-02"},{"lineNumber":27,"author":{"gitId":"KumChaiYin"},"content":"    * Developer Guide:","lastModifiedDate":"2023-10-02"},{"lineNumber":28,"author":{"gitId":"KumChaiYin"},"content":"        * to be added soon","lastModifiedDate":"2023-10-02"},{"lineNumber":29,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":30,"author":{"gitId":"KumChaiYin"},"content":"* **Community**:","lastModifiedDate":"2023-10-02"},{"lineNumber":31,"author":{"gitId":"KumChaiYin"},"content":"    * to be added soon","lastModifiedDate":"2023-10-02"},{"lineNumber":32,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":33,"author":{"gitId":"KumChaiYin"},"content":"* **Tools**:","lastModifiedDate":"2023-10-02"},{"lineNumber":34,"author":{"gitId":"KumChaiYin"},"content":"    * to be added soon","lastModifiedDate":"2023-10-02"}],"authorContributionMap":{"KumChaiYin":34}},{"path":"docs/team/rsxix.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"RSXIX"},"content":"---","lastModifiedDate":"2023-10-03"},{"lineNumber":2,"author":{"gitId":"RSXIX"},"content":"layout: page","lastModifiedDate":"2023-10-03"},{"lineNumber":3,"author":{"gitId":"RSXIX"},"content":"title: Rohan Sapra\u0027s Project Portfolio Page","lastModifiedDate":"2023-10-03"},{"lineNumber":4,"author":{"gitId":"RSXIX"},"content":"---","lastModifiedDate":"2023-10-03"},{"lineNumber":5,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":6,"author":{"gitId":"RSXIX"},"content":"### Project: InsureIQ","lastModifiedDate":"2023-10-03"},{"lineNumber":7,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":8,"author":{"gitId":"RSXIX"},"content":"InsureIQ is for car insurance agents who type fast over CLI and have to keep track of multiple customers\u0027 vehicles with the car insurance policies.","lastModifiedDate":"2023-10-03"},{"lineNumber":9,"author":{"gitId":"RSXIX"},"content":"The user interacts with it using a CLI, and it has a GUI created with JavaFX.","lastModifiedDate":"2023-10-03"},{"lineNumber":10,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":11,"author":{"gitId":"RSXIX"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-10-03"},{"lineNumber":12,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":13,"author":{"gitId":"RSXIX"},"content":"* **New Feature**:","lastModifiedDate":"2023-10-03"},{"lineNumber":14,"author":{"gitId":"RSXIX"},"content":"    * to be added soon","lastModifiedDate":"2023-10-03"},{"lineNumber":15,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":16,"author":{"gitId":"RSXIX"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2324s1.github.io/tp-dashboard/?search\u003dRSXIX\u0026breakdown\u003dtrue)","lastModifiedDate":"2023-10-03"},{"lineNumber":17,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":18,"author":{"gitId":"RSXIX"},"content":"* **Project management**:","lastModifiedDate":"2023-10-03"},{"lineNumber":19,"author":{"gitId":"RSXIX"},"content":"    * to be added soon","lastModifiedDate":"2023-10-03"},{"lineNumber":20,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":21,"author":{"gitId":"RSXIX"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-10-03"},{"lineNumber":22,"author":{"gitId":"RSXIX"},"content":"    * to be added soon","lastModifiedDate":"2023-10-03"},{"lineNumber":23,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":24,"author":{"gitId":"RSXIX"},"content":"* **Documentation**:","lastModifiedDate":"2023-10-03"},{"lineNumber":25,"author":{"gitId":"RSXIX"},"content":"    * User Guide:","lastModifiedDate":"2023-10-03"},{"lineNumber":26,"author":{"gitId":"RSXIX"},"content":"        * to be added soon","lastModifiedDate":"2023-10-03"},{"lineNumber":27,"author":{"gitId":"RSXIX"},"content":"    * Developer Guide:","lastModifiedDate":"2023-10-03"},{"lineNumber":28,"author":{"gitId":"RSXIX"},"content":"        * to be added soon","lastModifiedDate":"2023-10-03"},{"lineNumber":29,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":30,"author":{"gitId":"RSXIX"},"content":"* **Community**:","lastModifiedDate":"2023-10-03"},{"lineNumber":31,"author":{"gitId":"RSXIX"},"content":"    * to be added soon","lastModifiedDate":"2023-10-03"},{"lineNumber":32,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":33,"author":{"gitId":"RSXIX"},"content":"* **Tools**:","lastModifiedDate":"2023-10-03"},{"lineNumber":34,"author":{"gitId":"RSXIX"},"content":"    * to be added soon","lastModifiedDate":"2023-10-03"}],"authorContributionMap":{"RSXIX":34}},{"path":"docs/team/suryanshkushwaha.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"suryanshkushwaha"},"content":"---","lastModifiedDate":"2023-10-02"},{"lineNumber":2,"author":{"gitId":"suryanshkushwaha"},"content":"layout: page","lastModifiedDate":"2023-10-02"},{"lineNumber":3,"author":{"gitId":"suryanshkushwaha"},"content":"title: Suryansh Kushwaha\u0027s Project Portfolio Page","lastModifiedDate":"2023-10-02"},{"lineNumber":4,"author":{"gitId":"suryanshkushwaha"},"content":"---","lastModifiedDate":"2023-10-02"},{"lineNumber":5,"author":{"gitId":"suryanshkushwaha"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":6,"author":{"gitId":"suryanshkushwaha"},"content":"### Project: InsureIQ","lastModifiedDate":"2023-10-02"},{"lineNumber":7,"author":{"gitId":"suryanshkushwaha"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":8,"author":{"gitId":"suryanshkushwaha"},"content":"InsureIQ is for car insurance agents who type fast over CLI and have to keep track of multiple customers\u0027 vehicles with the car insurance policies.","lastModifiedDate":"2023-10-02"},{"lineNumber":9,"author":{"gitId":"suryanshkushwaha"},"content":"The user interacts with it using a CLI, and it has a GUI created with JavaFX.","lastModifiedDate":"2023-10-02"},{"lineNumber":10,"author":{"gitId":"suryanshkushwaha"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":11,"author":{"gitId":"suryanshkushwaha"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-10-02"},{"lineNumber":12,"author":{"gitId":"suryanshkushwaha"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":13,"author":{"gitId":"suryanshkushwaha"},"content":"* **New Feature**:","lastModifiedDate":"2023-10-02"},{"lineNumber":14,"author":{"gitId":"suryanshkushwaha"},"content":"  * to be added soon","lastModifiedDate":"2023-10-02"},{"lineNumber":15,"author":{"gitId":"suryanshkushwaha"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":16,"author":{"gitId":"suryanshkushwaha"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2324s1.github.io/tp-dashboard/?search\u003dsuryanshkushwaha\u0026breakdown\u003dtrue)","lastModifiedDate":"2023-10-02"},{"lineNumber":17,"author":{"gitId":"suryanshkushwaha"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":18,"author":{"gitId":"suryanshkushwaha"},"content":"* **Project management**:","lastModifiedDate":"2023-10-02"},{"lineNumber":19,"author":{"gitId":"suryanshkushwaha"},"content":"  * to be added soon","lastModifiedDate":"2023-10-02"},{"lineNumber":20,"author":{"gitId":"suryanshkushwaha"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":21,"author":{"gitId":"suryanshkushwaha"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-10-02"},{"lineNumber":22,"author":{"gitId":"suryanshkushwaha"},"content":"  * to be added soon","lastModifiedDate":"2023-10-02"},{"lineNumber":23,"author":{"gitId":"suryanshkushwaha"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":24,"author":{"gitId":"suryanshkushwaha"},"content":"* **Documentation**:","lastModifiedDate":"2023-10-02"},{"lineNumber":25,"author":{"gitId":"suryanshkushwaha"},"content":"  * User Guide:","lastModifiedDate":"2023-10-02"},{"lineNumber":26,"author":{"gitId":"suryanshkushwaha"},"content":"    * to be added soon","lastModifiedDate":"2023-10-02"},{"lineNumber":27,"author":{"gitId":"suryanshkushwaha"},"content":"  * Developer Guide:","lastModifiedDate":"2023-10-02"},{"lineNumber":28,"author":{"gitId":"suryanshkushwaha"},"content":"    * to be added soon","lastModifiedDate":"2023-10-02"},{"lineNumber":29,"author":{"gitId":"suryanshkushwaha"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":30,"author":{"gitId":"suryanshkushwaha"},"content":"* **Community**:","lastModifiedDate":"2023-10-02"},{"lineNumber":31,"author":{"gitId":"suryanshkushwaha"},"content":"  * to be added soon","lastModifiedDate":"2023-10-02"},{"lineNumber":32,"author":{"gitId":"suryanshkushwaha"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":33,"author":{"gitId":"suryanshkushwaha"},"content":"* **Tools**:","lastModifiedDate":"2023-10-02"},{"lineNumber":34,"author":{"gitId":"suryanshkushwaha"},"content":"  * to be added soon","lastModifiedDate":"2023-10-02"}],"authorContributionMap":{"suryanshkushwaha":34}},{"path":"src/main/java/seedu/address/commons/util/PredicateUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"brendanneojw"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2023-10-14"},{"lineNumber":2,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":3,"author":{"gitId":"brendanneojw"},"content":"import java.util.List;","lastModifiedDate":"2023-10-14"},{"lineNumber":4,"author":{"gitId":"brendanneojw"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-14"},{"lineNumber":5,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":6,"author":{"gitId":"brendanneojw"},"content":"/**","lastModifiedDate":"2023-10-14"},{"lineNumber":7,"author":{"gitId":"brendanneojw"},"content":" * Helper function for combining multiple predicates","lastModifiedDate":"2023-10-14"},{"lineNumber":8,"author":{"gitId":"brendanneojw"},"content":" */","lastModifiedDate":"2023-10-14"},{"lineNumber":9,"author":{"gitId":"brendanneojw"},"content":"public class PredicateUtil {","lastModifiedDate":"2023-10-14"},{"lineNumber":10,"author":{"gitId":"brendanneojw"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":11,"author":{"gitId":"brendanneojw"},"content":"     * Combines all the predicates in the list with the AND logic and returns the predicate.","lastModifiedDate":"2023-10-14"},{"lineNumber":12,"author":{"gitId":"brendanneojw"},"content":"     *","lastModifiedDate":"2023-10-14"},{"lineNumber":13,"author":{"gitId":"brendanneojw"},"content":"     * @param predicates list of predicates.","lastModifiedDate":"2023-10-14"},{"lineNumber":14,"author":{"gitId":"brendanneojw"},"content":"     * @param \u003cT\u003e the type of value in the Predicate instance.","lastModifiedDate":"2023-10-14"},{"lineNumber":15,"author":{"gitId":"brendanneojw"},"content":"     * @return the predicate after performing AND operations on all.","lastModifiedDate":"2023-10-14"},{"lineNumber":16,"author":{"gitId":"brendanneojw"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":17,"author":{"gitId":"brendanneojw"},"content":"    public static \u003cT\u003e Predicate\u003cT\u003e combinePredicates(List\u003cPredicate\u003cT\u003e\u003e predicates) {","lastModifiedDate":"2023-10-14"},{"lineNumber":18,"author":{"gitId":"brendanneojw"},"content":"        return predicates.stream().reduce(p -\u003e true, Predicate::and);","lastModifiedDate":"2023-10-14"},{"lineNumber":19,"author":{"gitId":"brendanneojw"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":20,"author":{"gitId":"brendanneojw"},"content":"}","lastModifiedDate":"2023-10-14"}],"authorContributionMap":{"brendanneojw":20}},{"path":"src/main/java/seedu/address/commons/util/StringUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.StringWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Helper functions for handling strings.","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class StringUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * Returns true if the {@code sentence} contains the {@code word}.","lastModifiedDate":"2016-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     *   Ignores case, but a full word match is required.","lastModifiedDate":"2016-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     *   \u003cbr\u003eexamples:\u003cpre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"abc\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"DEF\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"AB\") \u003d\u003d false //not a full word match","lastModifiedDate":"2016-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *       \u003c/pre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @param sentence cannot be null","lastModifiedDate":"2016-10-13"},{"lineNumber":23,"author":{"gitId":"brendanneojw"},"content":"     * @param word cannot be null, cannot be empty","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static boolean containsWordIgnoreCase(String sentence, String word) {","lastModifiedDate":"2016-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        requireNonNull(sentence);","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        requireNonNull(word);","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        String preppedWord \u003d word.trim();","lastModifiedDate":"2016-10-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        checkArgument(!preppedWord.isEmpty(), \"Word parameter cannot be empty\");","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":32,"author":{"gitId":"brendanneojw"},"content":"        return sentence.toLowerCase().contains(preppedWord.toLowerCase());","lastModifiedDate":"2023-10-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Returns a detailed message of the t, including the stack trace.","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static String getDetails(Throwable t) {","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        requireNonNull(t);","lastModifiedDate":"2017-05-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        StringWriter sw \u003d new StringWriter();","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        t.printStackTrace(new PrintWriter(sw));","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return t.getMessage() + \"\\n\" + sw.toString();","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-22"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Returns true if {@code s} represents a non-zero unsigned integer","lastModifiedDate":"2017-06-02"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * e.g. 1, 2, 3, ..., {@code Integer.MAX_VALUE} \u003cbr\u003e","lastModifiedDate":"2017-06-02"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Will return false for any other non-null string input","lastModifiedDate":"2017-06-02"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * e.g. empty string, \"-1\", \"0\", \"+1\", and \" 2 \" (untrimmed), \"3 0\" (contains whitespace), \"1 a\" (contains letters)","lastModifiedDate":"2017-06-02"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code s} is null.","lastModifiedDate":"2017-06-02"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static boolean isNonZeroUnsignedInteger(String s) {","lastModifiedDate":"2017-06-02"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        requireNonNull(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-06-02"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            int value \u003d Integer.parseInt(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            return value \u003e 0 \u0026\u0026 !s.startsWith(\"+\"); // \"+1\" is successfully parsed by Integer#parseInt(String)","lastModifiedDate":"2017-06-02"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2017-06-02"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-06-02"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-02"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"brendanneojw":2,"-":60}},{"path":"src/main/java/seedu/address/logic/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2023-07-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2023-07-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-07-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-07-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2023-07-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"RSXIX"},"content":"    public static final String MESSAGE_NOT_FOUND_INDEX \u003d \"Error: Invalid Index\";","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":17,"author":{"gitId":"RSXIX"},"content":"    public static final String MESSAGE_MISSING_INDEX \u003d \"Error: Missing Index\";","lastModifiedDate":"2023-10-16"},{"lineNumber":18,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":19,"author":{"gitId":"RSXIX"},"content":"    public static final String MESSAGE_IMPOSSIBLE_INDEX \u003d \"Error: The parameter is not of the type positive integer\";","lastModifiedDate":"2023-10-16"},{"lineNumber":20,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":21,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_PERSON_DISPLAYED_INDEX \u003d \"The person index provided is invalid\";","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1$d persons listed!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_FIELDS \u003d","lastModifiedDate":"2023-07-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                \"Multiple values specified for the following single-valued field(s): \";","lastModifiedDate":"2023-07-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-07-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns an error message indicating the duplicate prefixes.","lastModifiedDate":"2023-07-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-07-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static String getErrorMessageForDuplicatePrefixes(Prefix... duplicatePrefixes) {","lastModifiedDate":"2023-07-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assert duplicatePrefixes.length \u003e 0;","lastModifiedDate":"2023-07-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        Set\u003cString\u003e duplicateFields \u003d","lastModifiedDate":"2023-07-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                Stream.of(duplicatePrefixes).map(Prefix::toString).collect(Collectors.toSet());","lastModifiedDate":"2023-07-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return MESSAGE_DUPLICATE_FIELDS + String.join(\" \", duplicateFields);","lastModifiedDate":"2023-07-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-02-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Formats the {@code person} for display to the user.","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static String format(Person person) {","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        builder.append(person.getName())","lastModifiedDate":"2019-02-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2019-02-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                .append(person.getPhone())","lastModifiedDate":"2019-02-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2019-02-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                .append(person.getEmail())","lastModifiedDate":"2019-02-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                .append(\"; Address: \")","lastModifiedDate":"2019-02-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                .append(person.getAddress())","lastModifiedDate":"2019-02-23"},{"lineNumber":53,"author":{"gitId":"brendanneojw"},"content":"                .append(\"; NRIC: \")","lastModifiedDate":"2023-10-13"},{"lineNumber":54,"author":{"gitId":"brendanneojw"},"content":"                .append(person.getNric())","lastModifiedDate":"2023-10-13"},{"lineNumber":55,"author":{"gitId":"brendanneojw"},"content":"                .append(\"; Licence Plate: \")","lastModifiedDate":"2023-10-13"},{"lineNumber":56,"author":{"gitId":"brendanneojw"},"content":"                .append(person.getLicencePlate())","lastModifiedDate":"2023-10-13"},{"lineNumber":57,"author":{"gitId":"brendanneojw"},"content":"                .append(\"\\nPolicy Details (Policy Number, Policy Issue Date and Policy Expiry Date): \")","lastModifiedDate":"2023-10-13"},{"lineNumber":58,"author":{"gitId":"brendanneojw"},"content":"                .append(person.getPolicy().toDisplay(false))","lastModifiedDate":"2023-10-13"},{"lineNumber":59,"author":{"gitId":"brendanneojw"},"content":"                .append(\"\\nTags: \");","lastModifiedDate":"2023-10-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        person.getTags().forEach(builder::append);","lastModifiedDate":"2019-02-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"brendanneojw":7,"RSXIX":7,"-":50}},{"path":"src/main/java/seedu/address/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-10-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-10-19"},{"lineNumber":6,"author":{"gitId":"KumChaiYin"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LICENCE_PLATE;","lastModifiedDate":"2023-10-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-19"},{"lineNumber":8,"author":{"gitId":"KumChaiYin"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NRIC;","lastModifiedDate":"2023-10-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-10-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-10-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-01-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Adds a person to the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a person to the address book. \"","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2017-06-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2017-05-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2017-05-09"},{"lineNumber":30,"author":{"gitId":"KumChaiYin"},"content":"            + PREFIX_NRIC + \"NRIC\"","lastModifiedDate":"2023-10-19"},{"lineNumber":31,"author":{"gitId":"KumChaiYin"},"content":"            + PREFIX_LICENCE_PLATE + \"LICENCE PLATE\"","lastModifiedDate":"2023-10-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"ADDRESS \"","lastModifiedDate":"2017-05-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2017-06-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2017-05-09"},{"lineNumber":38,"author":{"gitId":"KumChaiYin"},"content":"            + PREFIX_NRIC + \"627A\"","lastModifiedDate":"2023-10-19"},{"lineNumber":39,"author":{"gitId":"KumChaiYin"},"content":"            + PREFIX_LICENCE_PLATE + \"SLU5237J\"","lastModifiedDate":"2023-10-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"311, Clementi Ave 2, #02-25 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"friends \"","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"owesMoney\";","lastModifiedDate":"2017-05-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New person added: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book\";","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private final Person toAdd;","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Creates an AddCommand to add the specified {@code Person}","lastModifiedDate":"2018-01-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public AddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        toAdd \u003d person;","lastModifiedDate":"2018-01-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (model.hasPerson(toAdd)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        model.addPerson(toAdd);","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, Messages.format(toAdd)));","lastModifiedDate":"2019-02-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        if (!(other instanceof AddCommand)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        AddCommand otherAddCommand \u003d (AddCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return toAdd.equals(otherAddCommand.toAdd);","lastModifiedDate":"2023-07-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"                .add(\"toAdd\", toAdd)","lastModifiedDate":"2019-02-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"KumChaiYin":6,"-":84}},{"path":"src/main/java/seedu/address/logic/commands/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-09-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Deletes a person identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2018-04-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \": Deletes the person identified by the index number used in the displayed person list.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2016-09-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_PERSON_SUCCESS \u003d \"Deleted Person: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Index targetIndex;","lastModifiedDate":"2017-06-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public DeleteCommand(Index targetIndex) {","lastModifiedDate":"2017-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2016-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":40,"author":{"gitId":"RSXIX"},"content":"            throw new CommandException(Messages.MESSAGE_NOT_FOUND_INDEX);","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        model.deletePerson(personToDelete);","lastModifiedDate":"2016-09-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_PERSON_SUCCESS, Messages.format(personToDelete)));","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (!(other instanceof DeleteCommand)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        DeleteCommand otherDeleteCommand \u003d (DeleteCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return targetIndex.equals(otherDeleteCommand.targetIndex);","lastModifiedDate":"2023-07-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                .add(\"targetIndex\", targetIndex)","lastModifiedDate":"2019-02-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"RSXIX":1,"-":68}},{"path":"src/main/java/seedu/address/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-12-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2023-07-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2016-12-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2016-12-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-26"},{"lineNumber":26,"author":{"gitId":"cyaoxuan"},"content":"import seedu.address.model.person.LicencePlate;","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-26"},{"lineNumber":28,"author":{"gitId":"cyaoxuan"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-26"},{"lineNumber":31,"author":{"gitId":"cyaoxuan"},"content":"import seedu.address.model.policy.Policy;","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"cyaoxuan"},"content":"import seedu.address.model.policy.PolicyDate;","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"cyaoxuan"},"content":"import seedu.address.model.policy.PolicyNumber;","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":" * Edits the details of an existing person in the address book.","lastModifiedDate":"2016-12-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the person identified \"","lastModifiedDate":"2016-12-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            + \"by the index number used in the displayed person list. \"","lastModifiedDate":"2018-04-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2017-05-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited Person: %1$s\";","lastModifiedDate":"2016-12-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    private final EditPersonDescriptor editPersonDescriptor;","lastModifiedDate":"2016-12-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * @param index                of the person in the filtered person list to edit","lastModifiedDate":"2017-05-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * @param editPersonDescriptor details to edit the person with","lastModifiedDate":"2016-12-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public EditCommand(Index index, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2017-05-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        this.editPersonDescriptor \u003d new EditPersonDescriptor(editPersonDescriptor);","lastModifiedDate":"2016-12-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson)));","lastModifiedDate":"2019-02-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2016-12-26"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2016-12-26"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private static Person createEditedPerson(Person personToEdit, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2018-01-10"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2016-12-26"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        Name updatedName \u003d editPersonDescriptor.getName().orElse(personToEdit.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        Phone updatedPhone \u003d editPersonDescriptor.getPhone().orElse(personToEdit.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        Email updatedEmail \u003d editPersonDescriptor.getEmail().orElse(personToEdit.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Address updatedAddress \u003d editPersonDescriptor.getAddress().orElse(personToEdit.getAddress());","lastModifiedDate":"2017-06-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e updatedTags \u003d editPersonDescriptor.getTags().orElse(personToEdit.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":108,"author":{"gitId":"suryanshkushwaha"},"content":"        Nric updatedNric \u003d editPersonDescriptor.getNric().orElse(personToEdit.getNric());","lastModifiedDate":"2023-10-17"},{"lineNumber":109,"author":{"gitId":"suryanshkushwaha"},"content":"        LicencePlate updatedLicencePlate \u003d","lastModifiedDate":"2023-10-17"},{"lineNumber":110,"author":{"gitId":"suryanshkushwaha"},"content":"                editPersonDescriptor.getLicencePlate().orElse(personToEdit.getLicencePlate());","lastModifiedDate":"2023-10-17"},{"lineNumber":111,"author":{"gitId":"suryanshkushwaha"},"content":"        Policy updatedPolicy \u003d getUpdatedPolicy(personToEdit, editPersonDescriptor);","lastModifiedDate":"2023-10-17"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":113,"author":{"gitId":"cyaoxuan"},"content":"        return new Person(updatedName, updatedPhone, updatedEmail, updatedAddress, updatedTags, updatedNric,","lastModifiedDate":"2023-10-13"},{"lineNumber":114,"author":{"gitId":"cyaoxuan"},"content":"                updatedLicencePlate, updatedPolicy);","lastModifiedDate":"2023-10-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":117,"author":{"gitId":"suryanshkushwaha"},"content":"    private static Policy getUpdatedPolicy(Person personToEdit, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2023-10-17"},{"lineNumber":118,"author":{"gitId":"suryanshkushwaha"},"content":"        PolicyNumber updatedPolicyNumber \u003d","lastModifiedDate":"2023-10-17"},{"lineNumber":119,"author":{"gitId":"suryanshkushwaha"},"content":"                editPersonDescriptor.getPolicyNumber().orElse(personToEdit.getPolicy().getPolicyNumber());","lastModifiedDate":"2023-10-17"},{"lineNumber":120,"author":{"gitId":"suryanshkushwaha"},"content":"        PolicyDate updatedPolicyIssueDate \u003d","lastModifiedDate":"2023-10-17"},{"lineNumber":121,"author":{"gitId":"suryanshkushwaha"},"content":"                editPersonDescriptor.getPolicyIssueDate().orElse(personToEdit.getPolicy().getPolicyIssueDate());","lastModifiedDate":"2023-10-17"},{"lineNumber":122,"author":{"gitId":"suryanshkushwaha"},"content":"        PolicyDate updatedPolicyExpiryDate \u003d","lastModifiedDate":"2023-10-17"},{"lineNumber":123,"author":{"gitId":"suryanshkushwaha"},"content":"                editPersonDescriptor.getPolicyExpiryDate().orElse(personToEdit.getPolicy().getPolicyExpiryDate());","lastModifiedDate":"2023-10-17"},{"lineNumber":124,"author":{"gitId":"suryanshkushwaha"},"content":"        return new Policy(updatedPolicyNumber, updatedPolicyIssueDate, updatedPolicyExpiryDate);","lastModifiedDate":"2023-10-17"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        EditCommand otherEditCommand \u003d (EditCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        return index.equals(otherEditCommand.index)","lastModifiedDate":"2023-07-13"},{"lineNumber":140,"author":{"gitId":"-"},"content":"                \u0026\u0026 editPersonDescriptor.equals(otherEditCommand.editPersonDescriptor);","lastModifiedDate":"2023-07-13"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"                .add(\"index\", index)","lastModifiedDate":"2019-02-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"                .add(\"editPersonDescriptor\", editPersonDescriptor)","lastModifiedDate":"2019-02-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2016-12-26"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2016-12-26"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    public static class EditPersonDescriptor {","lastModifiedDate":"2016-12-26"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        private Address address;","lastModifiedDate":"2017-06-21"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-06-21"},{"lineNumber":161,"author":{"gitId":"suryanshkushwaha"},"content":"        private Nric nric;","lastModifiedDate":"2023-10-17"},{"lineNumber":162,"author":{"gitId":"suryanshkushwaha"},"content":"        private LicencePlate licencePlate;","lastModifiedDate":"2023-10-17"},{"lineNumber":163,"author":{"gitId":"suryanshkushwaha"},"content":"        private PolicyNumber policyNumber;","lastModifiedDate":"2023-10-17"},{"lineNumber":164,"author":{"gitId":"suryanshkushwaha"},"content":"        private PolicyDate policyIssueDate;","lastModifiedDate":"2023-10-17"},{"lineNumber":165,"author":{"gitId":"suryanshkushwaha"},"content":"        private PolicyDate policyExpiryDate;","lastModifiedDate":"2023-10-17"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":167,"author":{"gitId":"suryanshkushwaha"},"content":"        public EditPersonDescriptor() {","lastModifiedDate":"2023-10-17"},{"lineNumber":168,"author":{"gitId":"suryanshkushwaha"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":171,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":172,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":173,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor(EditPersonDescriptor toCopy) {","lastModifiedDate":"2016-12-26"},{"lineNumber":175,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":176,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":177,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            setAddress(toCopy.address);","lastModifiedDate":"2018-01-15"},{"lineNumber":179,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2018-01-11"},{"lineNumber":180,"author":{"gitId":"suryanshkushwaha"},"content":"            setNric(toCopy.nric);","lastModifiedDate":"2023-10-17"},{"lineNumber":181,"author":{"gitId":"suryanshkushwaha"},"content":"            setLicencePlate(toCopy.licencePlate);","lastModifiedDate":"2023-10-17"},{"lineNumber":182,"author":{"gitId":"suryanshkushwaha"},"content":"            setPolicyNumber(toCopy.policyNumber);","lastModifiedDate":"2023-10-17"},{"lineNumber":183,"author":{"gitId":"suryanshkushwaha"},"content":"            setPolicyIssueDate(toCopy.policyIssueDate);","lastModifiedDate":"2023-10-17"},{"lineNumber":184,"author":{"gitId":"suryanshkushwaha"},"content":"            setPolicyExpiryDate(toCopy.policyExpiryDate);","lastModifiedDate":"2023-10-17"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":188,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":189,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":191,"author":{"gitId":"suryanshkushwaha"},"content":"            return CollectionUtil.isAnyNonNull(","lastModifiedDate":"2023-10-17"},{"lineNumber":192,"author":{"gitId":"suryanshkushwaha"},"content":"                    name,","lastModifiedDate":"2023-10-17"},{"lineNumber":193,"author":{"gitId":"suryanshkushwaha"},"content":"                    phone,","lastModifiedDate":"2023-10-17"},{"lineNumber":194,"author":{"gitId":"suryanshkushwaha"},"content":"                    email,","lastModifiedDate":"2023-10-17"},{"lineNumber":195,"author":{"gitId":"suryanshkushwaha"},"content":"                    address,","lastModifiedDate":"2023-10-17"},{"lineNumber":196,"author":{"gitId":"suryanshkushwaha"},"content":"                    tags,","lastModifiedDate":"2023-10-17"},{"lineNumber":197,"author":{"gitId":"suryanshkushwaha"},"content":"                    nric,","lastModifiedDate":"2023-10-17"},{"lineNumber":198,"author":{"gitId":"suryanshkushwaha"},"content":"                    licencePlate,","lastModifiedDate":"2023-10-17"},{"lineNumber":199,"author":{"gitId":"suryanshkushwaha"},"content":"                    policyNumber,","lastModifiedDate":"2023-10-17"},{"lineNumber":200,"author":{"gitId":"suryanshkushwaha"},"content":"                    policyIssueDate,","lastModifiedDate":"2023-10-17"},{"lineNumber":201,"author":{"gitId":"suryanshkushwaha"},"content":"                    policyExpiryDate","lastModifiedDate":"2023-10-17"},{"lineNumber":202,"author":{"gitId":"suryanshkushwaha"},"content":"            );","lastModifiedDate":"2023-10-17"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":206,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":210,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2017-06-21"},{"lineNumber":214,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26"},{"lineNumber":218,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2017-06-21"},{"lineNumber":222,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2017-06-21"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26"},{"lineNumber":226,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21"},{"lineNumber":227,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        public void setAddress(Address address) {","lastModifiedDate":"2017-06-21"},{"lineNumber":230,"author":{"gitId":"-"},"content":"            this.address \u003d address;","lastModifiedDate":"2017-06-21"},{"lineNumber":231,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":233,"author":{"gitId":"-"},"content":"        public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2016-12-26"},{"lineNumber":234,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(address);","lastModifiedDate":"2017-06-21"},{"lineNumber":235,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":237,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":238,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2018-01-11"},{"lineNumber":239,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":240,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":241,"author":{"gitId":"-"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-06-21"},{"lineNumber":242,"author":{"gitId":"-"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2018-01-11"},{"lineNumber":243,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":245,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":246,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2018-01-11"},{"lineNumber":247,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":248,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2018-01-11"},{"lineNumber":249,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":250,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":251,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2018-01-11"},{"lineNumber":252,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":254,"author":{"gitId":"suryanshkushwaha"},"content":"        public void setNric(Nric nric) {","lastModifiedDate":"2023-10-17"},{"lineNumber":255,"author":{"gitId":"suryanshkushwaha"},"content":"            this.nric \u003d nric;","lastModifiedDate":"2023-10-17"},{"lineNumber":256,"author":{"gitId":"suryanshkushwaha"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":257,"author":{"gitId":"suryanshkushwaha"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":258,"author":{"gitId":"suryanshkushwaha"},"content":"        public Optional\u003cNric\u003e getNric() {","lastModifiedDate":"2023-10-17"},{"lineNumber":259,"author":{"gitId":"suryanshkushwaha"},"content":"            return Optional.ofNullable(nric);","lastModifiedDate":"2023-10-17"},{"lineNumber":260,"author":{"gitId":"suryanshkushwaha"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":261,"author":{"gitId":"suryanshkushwaha"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":262,"author":{"gitId":"suryanshkushwaha"},"content":"        public void setLicencePlate(LicencePlate licencePlate) {","lastModifiedDate":"2023-10-17"},{"lineNumber":263,"author":{"gitId":"suryanshkushwaha"},"content":"            this.licencePlate \u003d licencePlate;","lastModifiedDate":"2023-10-17"},{"lineNumber":264,"author":{"gitId":"suryanshkushwaha"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":265,"author":{"gitId":"suryanshkushwaha"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":266,"author":{"gitId":"suryanshkushwaha"},"content":"        public Optional\u003cLicencePlate\u003e getLicencePlate() {","lastModifiedDate":"2023-10-17"},{"lineNumber":267,"author":{"gitId":"suryanshkushwaha"},"content":"            return Optional.ofNullable(licencePlate);","lastModifiedDate":"2023-10-17"},{"lineNumber":268,"author":{"gitId":"suryanshkushwaha"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":269,"author":{"gitId":"suryanshkushwaha"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":270,"author":{"gitId":"suryanshkushwaha"},"content":"        public void setPolicyNumber(PolicyNumber policyNumber) {","lastModifiedDate":"2023-10-17"},{"lineNumber":271,"author":{"gitId":"suryanshkushwaha"},"content":"            this.policyNumber \u003d policyNumber;","lastModifiedDate":"2023-10-17"},{"lineNumber":272,"author":{"gitId":"suryanshkushwaha"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":273,"author":{"gitId":"suryanshkushwaha"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":274,"author":{"gitId":"suryanshkushwaha"},"content":"        public Optional\u003cPolicyNumber\u003e getPolicyNumber() {","lastModifiedDate":"2023-10-17"},{"lineNumber":275,"author":{"gitId":"suryanshkushwaha"},"content":"            return Optional.ofNullable(policyNumber);","lastModifiedDate":"2023-10-17"},{"lineNumber":276,"author":{"gitId":"suryanshkushwaha"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":277,"author":{"gitId":"suryanshkushwaha"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":278,"author":{"gitId":"suryanshkushwaha"},"content":"        public void setPolicyIssueDate(PolicyDate policyIssueDate) {","lastModifiedDate":"2023-10-17"},{"lineNumber":279,"author":{"gitId":"suryanshkushwaha"},"content":"            this.policyIssueDate \u003d policyIssueDate;","lastModifiedDate":"2023-10-17"},{"lineNumber":280,"author":{"gitId":"suryanshkushwaha"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":281,"author":{"gitId":"suryanshkushwaha"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":282,"author":{"gitId":"suryanshkushwaha"},"content":"        public Optional\u003cPolicyDate\u003e getPolicyIssueDate() {","lastModifiedDate":"2023-10-17"},{"lineNumber":283,"author":{"gitId":"suryanshkushwaha"},"content":"            return Optional.ofNullable(policyIssueDate);","lastModifiedDate":"2023-10-17"},{"lineNumber":284,"author":{"gitId":"suryanshkushwaha"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":285,"author":{"gitId":"suryanshkushwaha"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":286,"author":{"gitId":"suryanshkushwaha"},"content":"        public void setPolicyExpiryDate(PolicyDate policyExpiryDate) {","lastModifiedDate":"2023-10-17"},{"lineNumber":287,"author":{"gitId":"suryanshkushwaha"},"content":"            this.policyExpiryDate \u003d policyExpiryDate;","lastModifiedDate":"2023-10-17"},{"lineNumber":288,"author":{"gitId":"suryanshkushwaha"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":289,"author":{"gitId":"suryanshkushwaha"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":290,"author":{"gitId":"suryanshkushwaha"},"content":"        public Optional\u003cPolicyDate\u003e getPolicyExpiryDate() {","lastModifiedDate":"2023-10-17"},{"lineNumber":291,"author":{"gitId":"suryanshkushwaha"},"content":"            return Optional.ofNullable(policyExpiryDate);","lastModifiedDate":"2023-10-17"},{"lineNumber":292,"author":{"gitId":"suryanshkushwaha"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":293,"author":{"gitId":"suryanshkushwaha"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":294,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":295,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":296,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":297,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":298,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":300,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":301,"author":{"gitId":"-"},"content":"            if (!(other instanceof EditPersonDescriptor)) {","lastModifiedDate":"2017-05-05"},{"lineNumber":302,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":303,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":305,"author":{"gitId":"-"},"content":"            EditPersonDescriptor otherEditPersonDescriptor \u003d (EditPersonDescriptor) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":306,"author":{"gitId":"-"},"content":"            return Objects.equals(name, otherEditPersonDescriptor.name)","lastModifiedDate":"2023-07-13"},{"lineNumber":307,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(phone, otherEditPersonDescriptor.phone)","lastModifiedDate":"2023-07-13"},{"lineNumber":308,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(email, otherEditPersonDescriptor.email)","lastModifiedDate":"2023-07-13"},{"lineNumber":309,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(address, otherEditPersonDescriptor.address)","lastModifiedDate":"2023-07-13"},{"lineNumber":310,"author":{"gitId":"suryanshkushwaha"},"content":"                    \u0026\u0026 Objects.equals(tags, otherEditPersonDescriptor.tags)","lastModifiedDate":"2023-10-17"},{"lineNumber":311,"author":{"gitId":"suryanshkushwaha"},"content":"                    \u0026\u0026 Objects.equals(nric, otherEditPersonDescriptor.nric)","lastModifiedDate":"2023-10-17"},{"lineNumber":312,"author":{"gitId":"suryanshkushwaha"},"content":"                    \u0026\u0026 Objects.equals(licencePlate, otherEditPersonDescriptor.licencePlate)","lastModifiedDate":"2023-10-17"},{"lineNumber":313,"author":{"gitId":"suryanshkushwaha"},"content":"                    \u0026\u0026 Objects.equals(policyNumber, otherEditPersonDescriptor.policyNumber)","lastModifiedDate":"2023-10-17"},{"lineNumber":314,"author":{"gitId":"suryanshkushwaha"},"content":"                    \u0026\u0026 Objects.equals(policyIssueDate, otherEditPersonDescriptor.policyIssueDate)","lastModifiedDate":"2023-10-17"},{"lineNumber":315,"author":{"gitId":"suryanshkushwaha"},"content":"                    \u0026\u0026 Objects.equals(policyExpiryDate, otherEditPersonDescriptor.policyExpiryDate);","lastModifiedDate":"2023-10-17"},{"lineNumber":316,"author":{"gitId":"suryanshkushwaha"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":317,"author":{"gitId":"suryanshkushwaha"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":318,"author":{"gitId":"suryanshkushwaha"},"content":"        protected String getPolicy() {","lastModifiedDate":"2023-10-17"},{"lineNumber":319,"author":{"gitId":"suryanshkushwaha"},"content":"            return new ToStringBuilder(this)","lastModifiedDate":"2023-10-17"},{"lineNumber":320,"author":{"gitId":"suryanshkushwaha"},"content":"                    .add(\"policyNumber\", policyNumber)","lastModifiedDate":"2023-10-17"},{"lineNumber":321,"author":{"gitId":"suryanshkushwaha"},"content":"                    .add(\"policyIssueDate\", policyIssueDate)","lastModifiedDate":"2023-10-17"},{"lineNumber":322,"author":{"gitId":"suryanshkushwaha"},"content":"                    .add(\"policyExpiryDate\", policyExpiryDate)","lastModifiedDate":"2023-10-17"},{"lineNumber":323,"author":{"gitId":"suryanshkushwaha"},"content":"                    .toString();","lastModifiedDate":"2023-10-17"},{"lineNumber":324,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":326,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":327,"author":{"gitId":"-"},"content":"        public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":328,"author":{"gitId":"-"},"content":"            return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":329,"author":{"gitId":"-"},"content":"                    .add(\"name\", name)","lastModifiedDate":"2019-02-23"},{"lineNumber":330,"author":{"gitId":"-"},"content":"                    .add(\"phone\", phone)","lastModifiedDate":"2019-02-23"},{"lineNumber":331,"author":{"gitId":"-"},"content":"                    .add(\"email\", email)","lastModifiedDate":"2019-02-23"},{"lineNumber":332,"author":{"gitId":"-"},"content":"                    .add(\"address\", address)","lastModifiedDate":"2019-02-23"},{"lineNumber":333,"author":{"gitId":"-"},"content":"                    .add(\"tags\", tags)","lastModifiedDate":"2019-02-23"},{"lineNumber":334,"author":{"gitId":"suryanshkushwaha"},"content":"                    .add(\"nric\", nric)","lastModifiedDate":"2023-10-17"},{"lineNumber":335,"author":{"gitId":"suryanshkushwaha"},"content":"                    .add(\"licencePlate\", licencePlate)","lastModifiedDate":"2023-10-17"},{"lineNumber":336,"author":{"gitId":"suryanshkushwaha"},"content":"                    .add(\"policy\", getPolicy())","lastModifiedDate":"2023-10-17"},{"lineNumber":337,"author":{"gitId":"-"},"content":"                    .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":338,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-02-23"},{"lineNumber":339,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":340,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"suryanshkushwaha":93,"-":240,"cyaoxuan":7}},{"path":"src/main/java/seedu/address/logic/commands/FindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"brendanneojw"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-14"},{"lineNumber":6,"author":{"gitId":"brendanneojw"},"content":"import java.util.List;","lastModifiedDate":"2023-10-14"},{"lineNumber":7,"author":{"gitId":"brendanneojw"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-14"},{"lineNumber":8,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":9,"author":{"gitId":"brendanneojw"},"content":"import seedu.address.commons.util.PredicateUtil;","lastModifiedDate":"2023-10-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"brendanneojw"},"content":"import seedu.address.model.person.EmailContainsKeywordsPredicate;","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"brendanneojw"},"content":"import seedu.address.model.person.LicenceContainsKeywordsPredicate;","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"brendanneojw"},"content":"import seedu.address.model.person.NricContainsKeywordsPredicate;","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"brendanneojw"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-14"},{"lineNumber":18,"author":{"gitId":"brendanneojw"},"content":"import seedu.address.model.person.PhoneContainsKeywordsPredicate;","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"brendanneojw"},"content":"import seedu.address.model.person.PolicyExpiryContainsKeywordsPredicate;","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"brendanneojw"},"content":"import seedu.address.model.person.PolicyIssueContainsKeywordsPredicate;","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"brendanneojw"},"content":"import seedu.address.model.person.PolicyNumberContainsKeywordsPredicate;","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"brendanneojw"},"content":"import seedu.address.model.person.TagContainsKeywordsPredicate;","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Finds and lists all persons in address book whose name contains any of the argument keywords.","lastModifiedDate":"2016-09-22"},{"lineNumber":26,"author":{"gitId":"brendanneojw"},"content":" * Keyword matching is case-insensitive.","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2016-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all persons whose names contain any of \"","lastModifiedDate":"2016-09-22"},{"lineNumber":33,"author":{"gitId":"brendanneojw"},"content":"            + \"the specified fields (case-insensitive for values) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2023-10-14"},{"lineNumber":34,"author":{"gitId":"brendanneojw"},"content":"            + \"Parameters: [n/NAME] [l/LICENCE PLATE] ...\\n\"","lastModifiedDate":"2023-10-14"},{"lineNumber":35,"author":{"gitId":"brendanneojw"},"content":"            + \"Example: \" + COMMAND_WORD + \" n/Alice Rodriguez\";","lastModifiedDate":"2023-10-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":37,"author":{"gitId":"brendanneojw"},"content":"    private final NameContainsKeywordsPredicate namePredicate;","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"brendanneojw"},"content":"    private final LicenceContainsKeywordsPredicate licencePredicate;","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"brendanneojw"},"content":"    private final NricContainsKeywordsPredicate nricPredicate;","lastModifiedDate":"2023-10-18"},{"lineNumber":40,"author":{"gitId":"brendanneojw"},"content":"    private final PhoneContainsKeywordsPredicate phonePredicate;","lastModifiedDate":"2023-10-18"},{"lineNumber":41,"author":{"gitId":"brendanneojw"},"content":"    private final PolicyNumberContainsKeywordsPredicate policyNumberPredicate;","lastModifiedDate":"2023-10-18"},{"lineNumber":42,"author":{"gitId":"brendanneojw"},"content":"    private final TagContainsKeywordsPredicate tagPredicate;","lastModifiedDate":"2023-10-18"},{"lineNumber":43,"author":{"gitId":"brendanneojw"},"content":"    private final PolicyExpiryContainsKeywordsPredicate policyExpiryPredicate;","lastModifiedDate":"2023-10-18"},{"lineNumber":44,"author":{"gitId":"brendanneojw"},"content":"    private final EmailContainsKeywordsPredicate emailPredicate;","lastModifiedDate":"2023-10-18"},{"lineNumber":45,"author":{"gitId":"brendanneojw"},"content":"    private final PolicyIssueContainsKeywordsPredicate policyIssuePredicate;","lastModifiedDate":"2023-10-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":47,"author":{"gitId":"brendanneojw"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":48,"author":{"gitId":"brendanneojw"},"content":"     * Constructor for FindCommand","lastModifiedDate":"2023-10-13"},{"lineNumber":49,"author":{"gitId":"brendanneojw"},"content":"     *","lastModifiedDate":"2023-10-13"},{"lineNumber":50,"author":{"gitId":"brendanneojw"},"content":"     * @param namePredicate the predicate to be used for finding by name","lastModifiedDate":"2023-10-13"},{"lineNumber":51,"author":{"gitId":"brendanneojw"},"content":"     * @param licencePredicate the predicate to be used for finding by licence plate number","lastModifiedDate":"2023-10-13"},{"lineNumber":52,"author":{"gitId":"brendanneojw"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":53,"author":{"gitId":"brendanneojw"},"content":"    public FindCommand(NameContainsKeywordsPredicate namePredicate,","lastModifiedDate":"2023-10-13"},{"lineNumber":54,"author":{"gitId":"brendanneojw"},"content":"                       LicenceContainsKeywordsPredicate licencePredicate,","lastModifiedDate":"2023-10-18"},{"lineNumber":55,"author":{"gitId":"brendanneojw"},"content":"                       NricContainsKeywordsPredicate nricPredicate,","lastModifiedDate":"2023-10-18"},{"lineNumber":56,"author":{"gitId":"brendanneojw"},"content":"                       PhoneContainsKeywordsPredicate phonePredicate,","lastModifiedDate":"2023-10-18"},{"lineNumber":57,"author":{"gitId":"brendanneojw"},"content":"                       PolicyNumberContainsKeywordsPredicate policyNumberPredicate,","lastModifiedDate":"2023-10-18"},{"lineNumber":58,"author":{"gitId":"brendanneojw"},"content":"                       TagContainsKeywordsPredicate tagPredicate,","lastModifiedDate":"2023-10-18"},{"lineNumber":59,"author":{"gitId":"brendanneojw"},"content":"                       PolicyExpiryContainsKeywordsPredicate policyExpiryPredicate,","lastModifiedDate":"2023-10-18"},{"lineNumber":60,"author":{"gitId":"brendanneojw"},"content":"                       EmailContainsKeywordsPredicate emailPredicate,","lastModifiedDate":"2023-10-18"},{"lineNumber":61,"author":{"gitId":"brendanneojw"},"content":"                       PolicyIssueContainsKeywordsPredicate policyIssuePredicate) {","lastModifiedDate":"2023-10-18"},{"lineNumber":62,"author":{"gitId":"brendanneojw"},"content":"        this.namePredicate \u003d namePredicate;","lastModifiedDate":"2023-10-13"},{"lineNumber":63,"author":{"gitId":"brendanneojw"},"content":"        this.licencePredicate \u003d licencePredicate;","lastModifiedDate":"2023-10-13"},{"lineNumber":64,"author":{"gitId":"brendanneojw"},"content":"        this.nricPredicate \u003d nricPredicate;","lastModifiedDate":"2023-10-18"},{"lineNumber":65,"author":{"gitId":"brendanneojw"},"content":"        this.phonePredicate \u003d phonePredicate;","lastModifiedDate":"2023-10-18"},{"lineNumber":66,"author":{"gitId":"brendanneojw"},"content":"        this.policyNumberPredicate \u003d policyNumberPredicate;","lastModifiedDate":"2023-10-18"},{"lineNumber":67,"author":{"gitId":"brendanneojw"},"content":"        this.tagPredicate \u003d tagPredicate;","lastModifiedDate":"2023-10-18"},{"lineNumber":68,"author":{"gitId":"brendanneojw"},"content":"        this.policyExpiryPredicate \u003d policyExpiryPredicate;","lastModifiedDate":"2023-10-18"},{"lineNumber":69,"author":{"gitId":"brendanneojw"},"content":"        this.emailPredicate \u003d emailPredicate;","lastModifiedDate":"2023-10-18"},{"lineNumber":70,"author":{"gitId":"brendanneojw"},"content":"        this.policyIssuePredicate \u003d policyIssuePredicate;","lastModifiedDate":"2023-10-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":76,"author":{"gitId":"brendanneojw"},"content":"        List\u003cPredicate\u003cPerson\u003e\u003e predicates \u003d addAllToPredicatesList();","lastModifiedDate":"2023-10-18"},{"lineNumber":77,"author":{"gitId":"brendanneojw"},"content":"        model.updateFilteredPersonList(PredicateUtil.combinePredicates(predicates));","lastModifiedDate":"2023-10-14"},{"lineNumber":78,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return new CommandResult(","lastModifiedDate":"2018-04-01"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, model.getFilteredPersonList().size()));","lastModifiedDate":"2018-04-01"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        if (!(other instanceof FindCommand)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        FindCommand otherFindCommand \u003d (FindCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":95,"author":{"gitId":"brendanneojw"},"content":"        return namePredicate.equals(otherFindCommand.namePredicate)","lastModifiedDate":"2023-10-13"},{"lineNumber":96,"author":{"gitId":"brendanneojw"},"content":"                \u0026\u0026 licencePredicate.equals(otherFindCommand.licencePredicate);","lastModifiedDate":"2023-10-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":102,"author":{"gitId":"brendanneojw"},"content":"                .add(\"name predicate\", namePredicate)","lastModifiedDate":"2023-10-13"},{"lineNumber":103,"author":{"gitId":"brendanneojw"},"content":"                .add(\"licence predicate\", licencePredicate)","lastModifiedDate":"2023-10-13"},{"lineNumber":104,"author":{"gitId":"brendanneojw"},"content":"                .add(\"nric predicate\", nricPredicate)","lastModifiedDate":"2023-10-18"},{"lineNumber":105,"author":{"gitId":"brendanneojw"},"content":"                .add(\"phone predicate\", phonePredicate)","lastModifiedDate":"2023-10-18"},{"lineNumber":106,"author":{"gitId":"brendanneojw"},"content":"                .add(\"policy number predicate\", policyNumberPredicate)","lastModifiedDate":"2023-10-18"},{"lineNumber":107,"author":{"gitId":"brendanneojw"},"content":"                .add(\"tag predicate\", tagPredicate)","lastModifiedDate":"2023-10-18"},{"lineNumber":108,"author":{"gitId":"brendanneojw"},"content":"                .add(\"policy expiry predicate\", policyExpiryPredicate)","lastModifiedDate":"2023-10-18"},{"lineNumber":109,"author":{"gitId":"brendanneojw"},"content":"                .add(\"email predicate\", emailPredicate)","lastModifiedDate":"2023-10-18"},{"lineNumber":110,"author":{"gitId":"brendanneojw"},"content":"                .add(\"policy issue predicate\", policyIssuePredicate)","lastModifiedDate":"2023-10-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":113,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":114,"author":{"gitId":"brendanneojw"},"content":"    private List\u003cPredicate\u003cPerson\u003e\u003e addAllToPredicatesList() {","lastModifiedDate":"2023-10-18"},{"lineNumber":115,"author":{"gitId":"brendanneojw"},"content":"        List\u003cPredicate\u003cPerson\u003e\u003e predicates \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-14"},{"lineNumber":116,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":117,"author":{"gitId":"brendanneojw"},"content":"        if (!namePredicate.isEmpty()) {","lastModifiedDate":"2023-10-14"},{"lineNumber":118,"author":{"gitId":"brendanneojw"},"content":"            predicates.add(namePredicate);","lastModifiedDate":"2023-10-14"},{"lineNumber":119,"author":{"gitId":"brendanneojw"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":120,"author":{"gitId":"brendanneojw"},"content":"        if (!licencePredicate.isEmpty()) {","lastModifiedDate":"2023-10-14"},{"lineNumber":121,"author":{"gitId":"brendanneojw"},"content":"            predicates.add(licencePredicate);","lastModifiedDate":"2023-10-14"},{"lineNumber":122,"author":{"gitId":"brendanneojw"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":123,"author":{"gitId":"brendanneojw"},"content":"        if (!nricPredicate.isEmpty()) {","lastModifiedDate":"2023-10-18"},{"lineNumber":124,"author":{"gitId":"brendanneojw"},"content":"            predicates.add(nricPredicate);","lastModifiedDate":"2023-10-18"},{"lineNumber":125,"author":{"gitId":"brendanneojw"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":126,"author":{"gitId":"brendanneojw"},"content":"        if (!phonePredicate.isEmpty()) {","lastModifiedDate":"2023-10-18"},{"lineNumber":127,"author":{"gitId":"brendanneojw"},"content":"            predicates.add(phonePredicate);","lastModifiedDate":"2023-10-18"},{"lineNumber":128,"author":{"gitId":"brendanneojw"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":129,"author":{"gitId":"brendanneojw"},"content":"        if (!policyNumberPredicate.isEmpty()) {","lastModifiedDate":"2023-10-18"},{"lineNumber":130,"author":{"gitId":"brendanneojw"},"content":"            predicates.add(policyNumberPredicate);","lastModifiedDate":"2023-10-18"},{"lineNumber":131,"author":{"gitId":"brendanneojw"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":132,"author":{"gitId":"brendanneojw"},"content":"        if (!tagPredicate.isEmpty()) {","lastModifiedDate":"2023-10-18"},{"lineNumber":133,"author":{"gitId":"brendanneojw"},"content":"            predicates.add(tagPredicate);","lastModifiedDate":"2023-10-18"},{"lineNumber":134,"author":{"gitId":"brendanneojw"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":135,"author":{"gitId":"brendanneojw"},"content":"        if (!policyExpiryPredicate.isEmpty()) {","lastModifiedDate":"2023-10-18"},{"lineNumber":136,"author":{"gitId":"brendanneojw"},"content":"            predicates.add(policyExpiryPredicate);","lastModifiedDate":"2023-10-18"},{"lineNumber":137,"author":{"gitId":"brendanneojw"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":138,"author":{"gitId":"brendanneojw"},"content":"        if (!emailPredicate.isEmpty()) {","lastModifiedDate":"2023-10-18"},{"lineNumber":139,"author":{"gitId":"brendanneojw"},"content":"            predicates.add(emailPredicate);","lastModifiedDate":"2023-10-18"},{"lineNumber":140,"author":{"gitId":"brendanneojw"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":141,"author":{"gitId":"brendanneojw"},"content":"        if (!policyIssuePredicate.isEmpty()) {","lastModifiedDate":"2023-10-18"},{"lineNumber":142,"author":{"gitId":"brendanneojw"},"content":"            predicates.add(policyIssuePredicate);","lastModifiedDate":"2023-10-18"},{"lineNumber":143,"author":{"gitId":"brendanneojw"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":144,"author":{"gitId":"brendanneojw"},"content":"        return predicates;","lastModifiedDate":"2023-10-14"},{"lineNumber":145,"author":{"gitId":"brendanneojw"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":146,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"brendanneojw":98,"-":48}},{"path":"src/main/java/seedu/address/logic/commands/exceptions/CommandException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands.exceptions;","lastModifiedDate":"2017-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"suryanshkushwaha"},"content":" * Represents an error which occurs during execution of a {@link seedu.address.logic.commands.Command}.","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CommandException extends Exception {","lastModifiedDate":"2017-02-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    public CommandException(String message) {","lastModifiedDate":"2017-02-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Constructs a new {@code CommandException} with the specified detail {@code message} and {@code cause}.","lastModifiedDate":"2018-08-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public CommandException(String message, Throwable cause) {","lastModifiedDate":"2018-08-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2018-08-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"suryanshkushwaha":1,"-":16}},{"path":"src/main/java/seedu/address/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-02-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-02-05"},{"lineNumber":6,"author":{"gitId":"KumChaiYin"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LICENCE_PLATE;","lastModifiedDate":"2023-10-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":8,"author":{"gitId":"KumChaiYin"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NRIC;","lastModifiedDate":"2023-10-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"KumChaiYin"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_POLICY_EXPIRY_DATE;","lastModifiedDate":"2023-10-19"},{"lineNumber":11,"author":{"gitId":"KumChaiYin"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_POLICY_ISSUE_DATE;","lastModifiedDate":"2023-10-19"},{"lineNumber":12,"author":{"gitId":"KumChaiYin"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_POLICY_NUMBER;","lastModifiedDate":"2023-10-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-02-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-02-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-03-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-03-17"},{"lineNumber":22,"author":{"gitId":"cyaoxuan"},"content":"import seedu.address.model.person.LicencePlate;","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-03-17"},{"lineNumber":24,"author":{"gitId":"cyaoxuan"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-03-17"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-03-17"},{"lineNumber":27,"author":{"gitId":"cyaoxuan"},"content":"import seedu.address.model.policy.Policy;","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"cyaoxuan"},"content":"import seedu.address.model.policy.PolicyDate;","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"cyaoxuan"},"content":"import seedu.address.model.policy.PolicyNumber;","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-17"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":44,"author":{"gitId":"KumChaiYin"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_NRIC,","lastModifiedDate":"2023-10-19"},{"lineNumber":45,"author":{"gitId":"KumChaiYin"},"content":"                        PREFIX_LICENCE_PLATE, PREFIX_ADDRESS, PREFIX_TAG, PREFIX_POLICY_NUMBER,","lastModifiedDate":"2023-10-19"},{"lineNumber":46,"author":{"gitId":"KumChaiYin"},"content":"                        PREFIX_POLICY_ISSUE_DATE, PREFIX_POLICY_EXPIRY_DATE);","lastModifiedDate":"2023-10-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":48,"author":{"gitId":"KumChaiYin"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_NRIC,","lastModifiedDate":"2023-10-19"},{"lineNumber":49,"author":{"gitId":"KumChaiYin"},"content":"                PREFIX_LICENCE_PLATE, PREFIX_ADDRESS)","lastModifiedDate":"2023-10-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":54,"author":{"gitId":"KumChaiYin"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_NRIC,","lastModifiedDate":"2023-10-19"},{"lineNumber":55,"author":{"gitId":"KumChaiYin"},"content":"                PREFIX_LICENCE_PLATE, PREFIX_ADDRESS);","lastModifiedDate":"2023-10-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":59,"author":{"gitId":"KumChaiYin"},"content":"        Nric nric \u003d ParserUtil.parseNric(argMultimap.getValue(PREFIX_NRIC).get());","lastModifiedDate":"2023-10-19"},{"lineNumber":60,"author":{"gitId":"KumChaiYin"},"content":"        LicencePlate licencePlate \u003d ParserUtil.parseLicencePlate(argMultimap.getValue(PREFIX_LICENCE_PLATE).get());","lastModifiedDate":"2023-10-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Address address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2017-03-17"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":64,"author":{"gitId":"cyaoxuan"},"content":"        // temporary variables to change","lastModifiedDate":"2023-10-13"},{"lineNumber":65,"author":{"gitId":"KumChaiYin"},"content":"        PolicyNumber policyNumber \u003d new PolicyNumber(PolicyNumber.DEFAULT_VALUE);","lastModifiedDate":"2023-10-19"},{"lineNumber":66,"author":{"gitId":"cyaoxuan"},"content":"        PolicyDate policyIssueDate \u003d new PolicyDate(PolicyDate.DEFAULT_VALUE);","lastModifiedDate":"2023-10-13"},{"lineNumber":67,"author":{"gitId":"cyaoxuan"},"content":"        PolicyDate policyExpiryDate \u003d new PolicyDate(PolicyDate.DEFAULT_VALUE);","lastModifiedDate":"2023-10-13"},{"lineNumber":68,"author":{"gitId":"KumChaiYin"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":69,"author":{"gitId":"KumChaiYin"},"content":"        // if all details about policy exists","lastModifiedDate":"2023-10-19"},{"lineNumber":70,"author":{"gitId":"KumChaiYin"},"content":"        if (arePrefixesPresent(argMultimap, PREFIX_POLICY_NUMBER, PREFIX_POLICY_ISSUE_DATE,","lastModifiedDate":"2023-10-19"},{"lineNumber":71,"author":{"gitId":"KumChaiYin"},"content":"                PREFIX_POLICY_EXPIRY_DATE)","lastModifiedDate":"2023-10-19"},{"lineNumber":72,"author":{"gitId":"KumChaiYin"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-10-19"},{"lineNumber":73,"author":{"gitId":"KumChaiYin"},"content":"            policyNumber \u003d ParserUtil.parsePolicyNumber(argMultimap.getValue(PREFIX_POLICY_NUMBER).get());","lastModifiedDate":"2023-10-19"},{"lineNumber":74,"author":{"gitId":"KumChaiYin"},"content":"            policyIssueDate \u003d ParserUtil.parsePolicyIssueDate(argMultimap.getValue(PREFIX_POLICY_ISSUE_DATE).get());","lastModifiedDate":"2023-10-19"},{"lineNumber":75,"author":{"gitId":"KumChaiYin"},"content":"            policyExpiryDate \u003d ParserUtil.parsePolicyExpiryDate(argMultimap.getValue(PREFIX_POLICY_EXPIRY_DATE).get());","lastModifiedDate":"2023-10-19"},{"lineNumber":76,"author":{"gitId":"KumChaiYin"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":77,"author":{"gitId":"cyaoxuan"},"content":"        Policy policy \u003d new Policy(policyNumber, policyIssueDate, policyExpiryDate);","lastModifiedDate":"2023-10-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":79,"author":{"gitId":"cyaoxuan"},"content":"        Person person \u003d new Person(name, phone, email, address, tagList, nric, licencePlate, policy);","lastModifiedDate":"2023-10-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return new AddCommand(person);","lastModifiedDate":"2017-03-17"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":92,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"KumChaiYin":24,"-":58,"cyaoxuan":10}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"a/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"cyaoxuan"},"content":"    public static final Prefix PREFIX_NRIC \u003d new Prefix(\"i/\");","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"cyaoxuan"},"content":"    public static final Prefix PREFIX_LICENCE_PLATE \u003d new Prefix(\"l/\");","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"cyaoxuan"},"content":"    public static final Prefix PREFIX_COMPANY \u003d new Prefix(\"c/\");","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"cyaoxuan"},"content":"    public static final Prefix PREFIX_POLICY_NUMBER \u003d new Prefix(\"pn/\");","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"cyaoxuan"},"content":"    public static final Prefix PREFIX_POLICY_ISSUE_DATE \u003d new Prefix(\"pi/\");","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"cyaoxuan"},"content":"    public static final Prefix PREFIX_POLICY_EXPIRY_DATE \u003d new Prefix(\"pe/\");","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"-":15,"cyaoxuan":6}},{"path":"src/main/java/seedu/address/logic/parser/DeleteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":4,"author":{"gitId":"RSXIX"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"RSXIX"},"content":"import seedu.address.logic.parser.exceptions.ImpossibleIndexException;","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"RSXIX"},"content":"import seedu.address.logic.parser.exceptions.MissingIndexException;","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new DeleteCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class DeleteCommandParser implements Parser\u003cDeleteCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public DeleteCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2017-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            return new DeleteCommand(index);","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"RSXIX"},"content":"        } catch (ImpossibleIndexException pe) {","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"RSXIX"},"content":"            throw new ImpossibleIndexException(","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"RSXIX"},"content":"                    Messages.MESSAGE_IMPOSSIBLE_INDEX, pe);","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"RSXIX"},"content":"        } catch (MissingIndexException pe) {","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"RSXIX"},"content":"            throw new MissingIndexException(","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"RSXIX"},"content":"                    Messages.MESSAGE_MISSING_INDEX, pe);","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"RSXIX":9,"-":24}},{"path":"src/main/java/seedu/address/logic/parser/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"suryanshkushwaha"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LICENCE_PLATE;","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":9,"author":{"gitId":"suryanshkushwaha"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NRIC;","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"suryanshkushwaha"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_POLICY_EXPIRY_DATE;","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"suryanshkushwaha"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_POLICY_ISSUE_DATE;","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"suryanshkushwaha"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_POLICY_NUMBER;","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-01-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class EditCommandParser implements Parser\u003cEditCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public EditCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":40,"author":{"gitId":"suryanshkushwaha"},"content":"                ArgumentTokenizer.tokenize(","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"suryanshkushwaha"},"content":"                        args,","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"suryanshkushwaha"},"content":"                        PREFIX_NAME,","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"suryanshkushwaha"},"content":"                        PREFIX_PHONE,","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"suryanshkushwaha"},"content":"                        PREFIX_EMAIL,","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"suryanshkushwaha"},"content":"                        PREFIX_ADDRESS,","lastModifiedDate":"2023-10-17"},{"lineNumber":46,"author":{"gitId":"suryanshkushwaha"},"content":"                        PREFIX_TAG,","lastModifiedDate":"2023-10-17"},{"lineNumber":47,"author":{"gitId":"suryanshkushwaha"},"content":"                        PREFIX_NRIC,","lastModifiedDate":"2023-10-17"},{"lineNumber":48,"author":{"gitId":"suryanshkushwaha"},"content":"                        PREFIX_LICENCE_PLATE,","lastModifiedDate":"2023-10-17"},{"lineNumber":49,"author":{"gitId":"suryanshkushwaha"},"content":"                        // PREFIX_COMPANY,","lastModifiedDate":"2023-10-18"},{"lineNumber":50,"author":{"gitId":"suryanshkushwaha"},"content":"                        PREFIX_POLICY_NUMBER,","lastModifiedDate":"2023-10-17"},{"lineNumber":51,"author":{"gitId":"suryanshkushwaha"},"content":"                        PREFIX_POLICY_ISSUE_DATE,","lastModifiedDate":"2023-10-17"},{"lineNumber":52,"author":{"gitId":"suryanshkushwaha"},"content":"                        PREFIX_POLICY_EXPIRY_DATE","lastModifiedDate":"2023-10-17"},{"lineNumber":53,"author":{"gitId":"suryanshkushwaha"},"content":"                );","lastModifiedDate":"2023-10-17"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2017-06-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS);","lastModifiedDate":"2023-07-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-01-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_ADDRESS).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setAddress(ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":79,"author":{"gitId":"suryanshkushwaha"},"content":"        if (argMultimap.getValue(PREFIX_NRIC).isPresent()) {","lastModifiedDate":"2023-10-17"},{"lineNumber":80,"author":{"gitId":"suryanshkushwaha"},"content":"            editPersonDescriptor.setNric(ParserUtil.parseNric(argMultimap.getValue(PREFIX_NRIC).get()));","lastModifiedDate":"2023-10-17"},{"lineNumber":81,"author":{"gitId":"suryanshkushwaha"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":82,"author":{"gitId":"suryanshkushwaha"},"content":"        if (argMultimap.getValue(PREFIX_LICENCE_PLATE).isPresent()) {","lastModifiedDate":"2023-10-17"},{"lineNumber":83,"author":{"gitId":"suryanshkushwaha"},"content":"            editPersonDescriptor.setLicencePlate(","lastModifiedDate":"2023-10-17"},{"lineNumber":84,"author":{"gitId":"suryanshkushwaha"},"content":"                    ParserUtil.parseLicencePlate(argMultimap.getValue(PREFIX_LICENCE_PLATE).get()));","lastModifiedDate":"2023-10-17"},{"lineNumber":85,"author":{"gitId":"suryanshkushwaha"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":86,"author":{"gitId":"suryanshkushwaha"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":87,"author":{"gitId":"suryanshkushwaha"},"content":"        //        if (argMultimap.getValue(PREFIX_COMPANY).isPresent()) {","lastModifiedDate":"2023-10-17"},{"lineNumber":88,"author":{"gitId":"suryanshkushwaha"},"content":"        //            editPersonDescriptor.setCompany(","lastModifiedDate":"2023-10-17"},{"lineNumber":89,"author":{"gitId":"suryanshkushwaha"},"content":"        //            ParserUtil.parseCompany(argMultimap.getValue(PREFIX_COMPANY).get()));","lastModifiedDate":"2023-10-17"},{"lineNumber":90,"author":{"gitId":"suryanshkushwaha"},"content":"        //        }","lastModifiedDate":"2023-10-17"},{"lineNumber":91,"author":{"gitId":"suryanshkushwaha"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":92,"author":{"gitId":"suryanshkushwaha"},"content":"        if (argMultimap.getValue(PREFIX_POLICY_NUMBER).isPresent()) {","lastModifiedDate":"2023-10-17"},{"lineNumber":93,"author":{"gitId":"suryanshkushwaha"},"content":"            editPersonDescriptor.setPolicyNumber(","lastModifiedDate":"2023-10-17"},{"lineNumber":94,"author":{"gitId":"suryanshkushwaha"},"content":"                    ParserUtil.parsePolicyNumber(argMultimap.getValue(PREFIX_POLICY_NUMBER).get()));","lastModifiedDate":"2023-10-17"},{"lineNumber":95,"author":{"gitId":"suryanshkushwaha"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":96,"author":{"gitId":"suryanshkushwaha"},"content":"        if (argMultimap.getValue(PREFIX_POLICY_ISSUE_DATE).isPresent()) {","lastModifiedDate":"2023-10-17"},{"lineNumber":97,"author":{"gitId":"suryanshkushwaha"},"content":"            editPersonDescriptor.setPolicyIssueDate(","lastModifiedDate":"2023-10-17"},{"lineNumber":98,"author":{"gitId":"suryanshkushwaha"},"content":"                    ParserUtil.parsePolicyIssueDate(argMultimap.getValue(PREFIX_POLICY_ISSUE_DATE).get()));","lastModifiedDate":"2023-10-17"},{"lineNumber":99,"author":{"gitId":"suryanshkushwaha"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":100,"author":{"gitId":"suryanshkushwaha"},"content":"        if (argMultimap.getValue(PREFIX_POLICY_EXPIRY_DATE).isPresent()) {","lastModifiedDate":"2023-10-17"},{"lineNumber":101,"author":{"gitId":"suryanshkushwaha"},"content":"            editPersonDescriptor.setPolicyExpiryDate(","lastModifiedDate":"2023-10-17"},{"lineNumber":102,"author":{"gitId":"suryanshkushwaha"},"content":"                    ParserUtil.parsePolicyExpiryDate(argMultimap.getValue(PREFIX_POLICY_EXPIRY_DATE).get()));","lastModifiedDate":"2023-10-17"},{"lineNumber":103,"author":{"gitId":"suryanshkushwaha"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editPersonDescriptor::setTags);","lastModifiedDate":"2017-06-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        if (!editPersonDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-03-11"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return new EditCommand(index, editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2017-03-07"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2017-01-26"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2017-03-07"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2017-01-26"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2017-01-26"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2017-01-26"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2017-01-26"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":128,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"suryanshkushwaha":44,"-":84}},{"path":"src/main/java/seedu/address/logic/parser/FindCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"brendanneojw"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"brendanneojw"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LICENCE_PLATE;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"brendanneojw"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"brendanneojw"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NRIC;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"brendanneojw"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"brendanneojw"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_POLICY_EXPIRY_DATE;","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"brendanneojw"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_POLICY_ISSUE_DATE;","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"brendanneojw"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_POLICY_NUMBER;","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"brendanneojw"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"brendanneojw"},"content":"import seedu.address.model.person.EmailContainsKeywordsPredicate;","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"brendanneojw"},"content":"import seedu.address.model.person.LicenceContainsKeywordsPredicate;","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"brendanneojw"},"content":"import seedu.address.model.person.NricContainsKeywordsPredicate;","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"brendanneojw"},"content":"import seedu.address.model.person.PhoneContainsKeywordsPredicate;","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"brendanneojw"},"content":"import seedu.address.model.person.PolicyExpiryContainsKeywordsPredicate;","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"brendanneojw"},"content":"import seedu.address.model.person.PolicyIssueContainsKeywordsPredicate;","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"brendanneojw"},"content":"import seedu.address.model.person.PolicyNumberContainsKeywordsPredicate;","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"brendanneojw"},"content":"import seedu.address.model.person.TagContainsKeywordsPredicate;","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class FindCommandParser implements Parser\u003cFindCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the FindCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * and returns a FindCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public FindCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2017-02-12"},{"lineNumber":37,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2017-02-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-01-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":43,"author":{"gitId":"brendanneojw"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-10-13"},{"lineNumber":44,"author":{"gitId":"brendanneojw"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_TAG,","lastModifiedDate":"2023-10-18"},{"lineNumber":45,"author":{"gitId":"brendanneojw"},"content":"                        PREFIX_NRIC, PREFIX_LICENCE_PLATE, PREFIX_POLICY_NUMBER, PREFIX_POLICY_ISSUE_DATE,","lastModifiedDate":"2023-10-13"},{"lineNumber":46,"author":{"gitId":"brendanneojw"},"content":"                        PREFIX_POLICY_EXPIRY_DATE);","lastModifiedDate":"2023-10-13"},{"lineNumber":47,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":48,"author":{"gitId":"brendanneojw"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_TAG,","lastModifiedDate":"2023-10-18"},{"lineNumber":49,"author":{"gitId":"brendanneojw"},"content":"                PREFIX_NRIC, PREFIX_LICENCE_PLATE, PREFIX_POLICY_NUMBER, PREFIX_POLICY_ISSUE_DATE,","lastModifiedDate":"2023-10-18"},{"lineNumber":50,"author":{"gitId":"brendanneojw"},"content":"                PREFIX_POLICY_EXPIRY_DATE);","lastModifiedDate":"2023-10-13"},{"lineNumber":51,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":52,"author":{"gitId":"brendanneojw"},"content":"        String nameKeyword \u003d \"\";","lastModifiedDate":"2023-10-18"},{"lineNumber":53,"author":{"gitId":"brendanneojw"},"content":"        String licenceKeyword \u003d \"\";","lastModifiedDate":"2023-10-18"},{"lineNumber":54,"author":{"gitId":"brendanneojw"},"content":"        String nricKeyword \u003d \"\";","lastModifiedDate":"2023-10-18"},{"lineNumber":55,"author":{"gitId":"brendanneojw"},"content":"        String phoneKeyword \u003d \"\";","lastModifiedDate":"2023-10-18"},{"lineNumber":56,"author":{"gitId":"brendanneojw"},"content":"        String policyNumberKeyword \u003d \"\";","lastModifiedDate":"2023-10-18"},{"lineNumber":57,"author":{"gitId":"brendanneojw"},"content":"        String tagKeyword \u003d \"\";","lastModifiedDate":"2023-10-18"},{"lineNumber":58,"author":{"gitId":"brendanneojw"},"content":"        String policyExpiryKeyword \u003d \"\";","lastModifiedDate":"2023-10-18"},{"lineNumber":59,"author":{"gitId":"brendanneojw"},"content":"        String emailKeyword \u003d \"\";","lastModifiedDate":"2023-10-18"},{"lineNumber":60,"author":{"gitId":"brendanneojw"},"content":"        String policyIssueKeyword \u003d \"\";","lastModifiedDate":"2023-10-18"},{"lineNumber":61,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":62,"author":{"gitId":"brendanneojw"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2023-10-13"},{"lineNumber":63,"author":{"gitId":"brendanneojw"},"content":"            nameKeyword \u003d argMultimap.getValue(PREFIX_NAME).get();","lastModifiedDate":"2023-10-18"},{"lineNumber":64,"author":{"gitId":"brendanneojw"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":65,"author":{"gitId":"brendanneojw"},"content":"        if (argMultimap.getValue(PREFIX_LICENCE_PLATE).isPresent()) {","lastModifiedDate":"2023-10-13"},{"lineNumber":66,"author":{"gitId":"brendanneojw"},"content":"            licenceKeyword \u003d argMultimap.getValue(PREFIX_LICENCE_PLATE).get();","lastModifiedDate":"2023-10-18"},{"lineNumber":67,"author":{"gitId":"brendanneojw"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":68,"author":{"gitId":"brendanneojw"},"content":"        if (argMultimap.getValue(PREFIX_NRIC).isPresent()) {","lastModifiedDate":"2023-10-18"},{"lineNumber":69,"author":{"gitId":"brendanneojw"},"content":"            nricKeyword \u003d argMultimap.getValue(PREFIX_NRIC).get();","lastModifiedDate":"2023-10-18"},{"lineNumber":70,"author":{"gitId":"brendanneojw"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":71,"author":{"gitId":"brendanneojw"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2023-10-18"},{"lineNumber":72,"author":{"gitId":"brendanneojw"},"content":"            phoneKeyword \u003d argMultimap.getValue(PREFIX_PHONE).get();","lastModifiedDate":"2023-10-18"},{"lineNumber":73,"author":{"gitId":"brendanneojw"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":74,"author":{"gitId":"brendanneojw"},"content":"        if (argMultimap.getValue(PREFIX_POLICY_NUMBER).isPresent()) {","lastModifiedDate":"2023-10-18"},{"lineNumber":75,"author":{"gitId":"brendanneojw"},"content":"            policyNumberKeyword \u003d argMultimap.getValue(PREFIX_POLICY_NUMBER).get();","lastModifiedDate":"2023-10-18"},{"lineNumber":76,"author":{"gitId":"brendanneojw"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":77,"author":{"gitId":"brendanneojw"},"content":"        if (argMultimap.getValue(PREFIX_TAG).isPresent()) {","lastModifiedDate":"2023-10-18"},{"lineNumber":78,"author":{"gitId":"brendanneojw"},"content":"            tagKeyword \u003d argMultimap.getValue(PREFIX_TAG).get();","lastModifiedDate":"2023-10-18"},{"lineNumber":79,"author":{"gitId":"brendanneojw"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":80,"author":{"gitId":"brendanneojw"},"content":"        if (argMultimap.getValue(PREFIX_POLICY_EXPIRY_DATE).isPresent()) {","lastModifiedDate":"2023-10-18"},{"lineNumber":81,"author":{"gitId":"brendanneojw"},"content":"            policyExpiryKeyword \u003d argMultimap.getValue(PREFIX_POLICY_EXPIRY_DATE).get();","lastModifiedDate":"2023-10-18"},{"lineNumber":82,"author":{"gitId":"brendanneojw"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":83,"author":{"gitId":"brendanneojw"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2023-10-18"},{"lineNumber":84,"author":{"gitId":"brendanneojw"},"content":"            emailKeyword \u003d argMultimap.getValue(PREFIX_EMAIL).get();","lastModifiedDate":"2023-10-18"},{"lineNumber":85,"author":{"gitId":"brendanneojw"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":86,"author":{"gitId":"brendanneojw"},"content":"        if (argMultimap.getValue(PREFIX_POLICY_ISSUE_DATE).isPresent()) {","lastModifiedDate":"2023-10-18"},{"lineNumber":87,"author":{"gitId":"brendanneojw"},"content":"            policyIssueKeyword \u003d argMultimap.getValue(PREFIX_POLICY_ISSUE_DATE).get();","lastModifiedDate":"2023-10-18"},{"lineNumber":88,"author":{"gitId":"brendanneojw"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":90,"author":{"gitId":"brendanneojw"},"content":"        return new FindCommand(new NameContainsKeywordsPredicate(nameKeyword),","lastModifiedDate":"2023-10-18"},{"lineNumber":91,"author":{"gitId":"brendanneojw"},"content":"                new LicenceContainsKeywordsPredicate(licenceKeyword),","lastModifiedDate":"2023-10-18"},{"lineNumber":92,"author":{"gitId":"brendanneojw"},"content":"                new NricContainsKeywordsPredicate(nricKeyword),","lastModifiedDate":"2023-10-18"},{"lineNumber":93,"author":{"gitId":"brendanneojw"},"content":"                new PhoneContainsKeywordsPredicate(phoneKeyword),","lastModifiedDate":"2023-10-18"},{"lineNumber":94,"author":{"gitId":"brendanneojw"},"content":"                new PolicyNumberContainsKeywordsPredicate(policyNumberKeyword),","lastModifiedDate":"2023-10-18"},{"lineNumber":95,"author":{"gitId":"brendanneojw"},"content":"                new TagContainsKeywordsPredicate(tagKeyword),","lastModifiedDate":"2023-10-18"},{"lineNumber":96,"author":{"gitId":"brendanneojw"},"content":"                new PolicyExpiryContainsKeywordsPredicate(policyExpiryKeyword),","lastModifiedDate":"2023-10-18"},{"lineNumber":97,"author":{"gitId":"brendanneojw"},"content":"                new EmailContainsKeywordsPredicate(emailKeyword),","lastModifiedDate":"2023-10-18"},{"lineNumber":98,"author":{"gitId":"brendanneojw"},"content":"                new PolicyIssueContainsKeywordsPredicate(policyIssueKeyword));","lastModifiedDate":"2023-10-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":101,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"brendanneojw":73,"-":28}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"RSXIX"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"RSXIX"},"content":"import seedu.address.logic.parser.exceptions.ImpossibleIndexException;","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"RSXIX"},"content":"import seedu.address.logic.parser.exceptions.MissingIndexException;","lastModifiedDate":"2023-10-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-02-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-02-11"},{"lineNumber":17,"author":{"gitId":"suryanshkushwaha"},"content":"import seedu.address.model.person.LicencePlate;","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-02-11"},{"lineNumber":19,"author":{"gitId":"suryanshkushwaha"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-02-11"},{"lineNumber":21,"author":{"gitId":"suryanshkushwaha"},"content":"import seedu.address.model.policy.PolicyDate;","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"suryanshkushwaha"},"content":"import seedu.address.model.policy.PolicyNumber;","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-02-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":37,"author":{"gitId":"RSXIX"},"content":"        if (trimmedIndex.isEmpty()) {","lastModifiedDate":"2023-10-16"},{"lineNumber":38,"author":{"gitId":"RSXIX"},"content":"            throw new MissingIndexException(Messages.MESSAGE_MISSING_INDEX);","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"RSXIX"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":41,"author":{"gitId":"RSXIX"},"content":"            throw new ImpossibleIndexException(Messages.MESSAGE_IMPOSSIBLE_INDEX);","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":132,"author":{"gitId":"suryanshkushwaha"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":133,"author":{"gitId":"suryanshkushwaha"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":134,"author":{"gitId":"suryanshkushwaha"},"content":"     * Parses a {@code String nric} into an {@code Nric}.","lastModifiedDate":"2023-10-17"},{"lineNumber":135,"author":{"gitId":"suryanshkushwaha"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-10-17"},{"lineNumber":136,"author":{"gitId":"suryanshkushwaha"},"content":"     *","lastModifiedDate":"2023-10-17"},{"lineNumber":137,"author":{"gitId":"suryanshkushwaha"},"content":"     * @throws ParseException if the given {@code nric} is invalid.","lastModifiedDate":"2023-10-17"},{"lineNumber":138,"author":{"gitId":"suryanshkushwaha"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":139,"author":{"gitId":"suryanshkushwaha"},"content":"    public static Nric parseNric(String nric) throws ParseException {","lastModifiedDate":"2023-10-17"},{"lineNumber":140,"author":{"gitId":"suryanshkushwaha"},"content":"        requireNonNull(nric);","lastModifiedDate":"2023-10-17"},{"lineNumber":141,"author":{"gitId":"suryanshkushwaha"},"content":"        String trimmedNric \u003d nric.trim();","lastModifiedDate":"2023-10-17"},{"lineNumber":142,"author":{"gitId":"suryanshkushwaha"},"content":"        if (!Nric.isValidNric(trimmedNric)) {","lastModifiedDate":"2023-10-17"},{"lineNumber":143,"author":{"gitId":"suryanshkushwaha"},"content":"            throw new ParseException(Nric.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-17"},{"lineNumber":144,"author":{"gitId":"suryanshkushwaha"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":145,"author":{"gitId":"suryanshkushwaha"},"content":"        return new Nric(trimmedNric);","lastModifiedDate":"2023-10-17"},{"lineNumber":146,"author":{"gitId":"suryanshkushwaha"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":147,"author":{"gitId":"suryanshkushwaha"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":148,"author":{"gitId":"suryanshkushwaha"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":149,"author":{"gitId":"suryanshkushwaha"},"content":"     * Parses a {@code String licencePlate} into an {@code LicencePlate}.","lastModifiedDate":"2023-10-17"},{"lineNumber":150,"author":{"gitId":"suryanshkushwaha"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-10-17"},{"lineNumber":151,"author":{"gitId":"suryanshkushwaha"},"content":"     *","lastModifiedDate":"2023-10-17"},{"lineNumber":152,"author":{"gitId":"suryanshkushwaha"},"content":"     * @throws ParseException if the given {@code licencePlate} is invalid.","lastModifiedDate":"2023-10-17"},{"lineNumber":153,"author":{"gitId":"suryanshkushwaha"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":154,"author":{"gitId":"suryanshkushwaha"},"content":"    public static LicencePlate parseLicencePlate(String licencePlate) throws ParseException {","lastModifiedDate":"2023-10-17"},{"lineNumber":155,"author":{"gitId":"suryanshkushwaha"},"content":"        requireNonNull(licencePlate);","lastModifiedDate":"2023-10-17"},{"lineNumber":156,"author":{"gitId":"suryanshkushwaha"},"content":"        String trimmedLicencePlate \u003d licencePlate.trim();","lastModifiedDate":"2023-10-17"},{"lineNumber":157,"author":{"gitId":"suryanshkushwaha"},"content":"        if (!LicencePlate.isValidLicencePlate(trimmedLicencePlate)) {","lastModifiedDate":"2023-10-17"},{"lineNumber":158,"author":{"gitId":"suryanshkushwaha"},"content":"            throw new ParseException(LicencePlate.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-17"},{"lineNumber":159,"author":{"gitId":"suryanshkushwaha"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":160,"author":{"gitId":"suryanshkushwaha"},"content":"        return new LicencePlate(trimmedLicencePlate);","lastModifiedDate":"2023-10-17"},{"lineNumber":161,"author":{"gitId":"suryanshkushwaha"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":162,"author":{"gitId":"suryanshkushwaha"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":163,"author":{"gitId":"suryanshkushwaha"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":164,"author":{"gitId":"suryanshkushwaha"},"content":"     * Parses a {@code String policyNumber} into an {@code PolicyNumber}.","lastModifiedDate":"2023-10-17"},{"lineNumber":165,"author":{"gitId":"suryanshkushwaha"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-10-17"},{"lineNumber":166,"author":{"gitId":"suryanshkushwaha"},"content":"     *","lastModifiedDate":"2023-10-17"},{"lineNumber":167,"author":{"gitId":"suryanshkushwaha"},"content":"     * @throws ParseException if the given {@code policyNumber} is invalid.","lastModifiedDate":"2023-10-17"},{"lineNumber":168,"author":{"gitId":"suryanshkushwaha"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":169,"author":{"gitId":"suryanshkushwaha"},"content":"    public static PolicyNumber parsePolicyNumber(String policyNumber) throws ParseException {","lastModifiedDate":"2023-10-17"},{"lineNumber":170,"author":{"gitId":"suryanshkushwaha"},"content":"        requireNonNull(policyNumber);","lastModifiedDate":"2023-10-17"},{"lineNumber":171,"author":{"gitId":"suryanshkushwaha"},"content":"        String trimmedPolicyNumber \u003d policyNumber.trim();","lastModifiedDate":"2023-10-17"},{"lineNumber":172,"author":{"gitId":"suryanshkushwaha"},"content":"        if (!PolicyNumber.isValidPolicyNumber(trimmedPolicyNumber)) {","lastModifiedDate":"2023-10-17"},{"lineNumber":173,"author":{"gitId":"suryanshkushwaha"},"content":"            throw new ParseException(PolicyNumber.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-17"},{"lineNumber":174,"author":{"gitId":"suryanshkushwaha"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":175,"author":{"gitId":"suryanshkushwaha"},"content":"        return new PolicyNumber(trimmedPolicyNumber);","lastModifiedDate":"2023-10-17"},{"lineNumber":176,"author":{"gitId":"suryanshkushwaha"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":177,"author":{"gitId":"suryanshkushwaha"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":178,"author":{"gitId":"suryanshkushwaha"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":179,"author":{"gitId":"suryanshkushwaha"},"content":"     * Parses a {@code String policyIssueDate} into an {@code PolicyIssueDate}.","lastModifiedDate":"2023-10-17"},{"lineNumber":180,"author":{"gitId":"suryanshkushwaha"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-10-17"},{"lineNumber":181,"author":{"gitId":"suryanshkushwaha"},"content":"     *","lastModifiedDate":"2023-10-17"},{"lineNumber":182,"author":{"gitId":"suryanshkushwaha"},"content":"     * @throws ParseException if the given {@code policyIssueDate} is invalid.","lastModifiedDate":"2023-10-17"},{"lineNumber":183,"author":{"gitId":"suryanshkushwaha"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":184,"author":{"gitId":"suryanshkushwaha"},"content":"    public static PolicyDate parsePolicyIssueDate(String policyIssueDate) throws ParseException {","lastModifiedDate":"2023-10-17"},{"lineNumber":185,"author":{"gitId":"suryanshkushwaha"},"content":"        requireNonNull(policyIssueDate);","lastModifiedDate":"2023-10-17"},{"lineNumber":186,"author":{"gitId":"suryanshkushwaha"},"content":"        String trimmedPolicyIssueDate \u003d policyIssueDate.trim();","lastModifiedDate":"2023-10-17"},{"lineNumber":187,"author":{"gitId":"suryanshkushwaha"},"content":"        if (!PolicyDate.isValidPolicyDate(trimmedPolicyIssueDate)) {","lastModifiedDate":"2023-10-17"},{"lineNumber":188,"author":{"gitId":"suryanshkushwaha"},"content":"            throw new ParseException(PolicyDate.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-17"},{"lineNumber":189,"author":{"gitId":"suryanshkushwaha"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":190,"author":{"gitId":"suryanshkushwaha"},"content":"        return new PolicyDate(trimmedPolicyIssueDate);","lastModifiedDate":"2023-10-17"},{"lineNumber":191,"author":{"gitId":"suryanshkushwaha"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":192,"author":{"gitId":"suryanshkushwaha"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":193,"author":{"gitId":"suryanshkushwaha"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":194,"author":{"gitId":"suryanshkushwaha"},"content":"     * Parses a {@code String policyExpiryDate} into an {@code PolicyExpiryDate}.","lastModifiedDate":"2023-10-17"},{"lineNumber":195,"author":{"gitId":"suryanshkushwaha"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-10-17"},{"lineNumber":196,"author":{"gitId":"suryanshkushwaha"},"content":"     *","lastModifiedDate":"2023-10-17"},{"lineNumber":197,"author":{"gitId":"suryanshkushwaha"},"content":"     * @throws ParseException if the given {@code policyExpiryDate} is invalid.","lastModifiedDate":"2023-10-17"},{"lineNumber":198,"author":{"gitId":"suryanshkushwaha"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":199,"author":{"gitId":"suryanshkushwaha"},"content":"    public static PolicyDate parsePolicyExpiryDate(String policyExpiryDate) throws ParseException {","lastModifiedDate":"2023-10-17"},{"lineNumber":200,"author":{"gitId":"suryanshkushwaha"},"content":"        requireNonNull(policyExpiryDate);","lastModifiedDate":"2023-10-17"},{"lineNumber":201,"author":{"gitId":"suryanshkushwaha"},"content":"        String trimmedPolicyExpiryDate \u003d policyExpiryDate.trim();","lastModifiedDate":"2023-10-17"},{"lineNumber":202,"author":{"gitId":"suryanshkushwaha"},"content":"        if (!PolicyDate.isValidPolicyDate(trimmedPolicyExpiryDate)) {","lastModifiedDate":"2023-10-17"},{"lineNumber":203,"author":{"gitId":"suryanshkushwaha"},"content":"            throw new ParseException(PolicyDate.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-17"},{"lineNumber":204,"author":{"gitId":"suryanshkushwaha"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":205,"author":{"gitId":"suryanshkushwaha"},"content":"        return new PolicyDate(trimmedPolicyExpiryDate);","lastModifiedDate":"2023-10-17"},{"lineNumber":206,"author":{"gitId":"suryanshkushwaha"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":207,"author":{"gitId":"suryanshkushwaha"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":208,"author":{"gitId":"suryanshkushwaha"},"content":"    //    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":209,"author":{"gitId":"suryanshkushwaha"},"content":"    //     * Parses a {@code String company} into an {@code Company}.","lastModifiedDate":"2023-10-17"},{"lineNumber":210,"author":{"gitId":"suryanshkushwaha"},"content":"    //     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-10-17"},{"lineNumber":211,"author":{"gitId":"suryanshkushwaha"},"content":"    //     *","lastModifiedDate":"2023-10-17"},{"lineNumber":212,"author":{"gitId":"suryanshkushwaha"},"content":"    //     * @throws ParseException if the given {@code company} is invalid.","lastModifiedDate":"2023-10-17"},{"lineNumber":213,"author":{"gitId":"suryanshkushwaha"},"content":"    //     */","lastModifiedDate":"2023-10-17"},{"lineNumber":214,"author":{"gitId":"suryanshkushwaha"},"content":"    //    public static Company parseCompany(String company) throws ParseException {","lastModifiedDate":"2023-10-17"},{"lineNumber":215,"author":{"gitId":"suryanshkushwaha"},"content":"    //        requireNonNull(company);","lastModifiedDate":"2023-10-17"},{"lineNumber":216,"author":{"gitId":"suryanshkushwaha"},"content":"    //        String trimmedCompany \u003d company.trim();","lastModifiedDate":"2023-10-17"},{"lineNumber":217,"author":{"gitId":"suryanshkushwaha"},"content":"    //        if (!Company.isValidCompany(trimmedCompany)) {","lastModifiedDate":"2023-10-17"},{"lineNumber":218,"author":{"gitId":"suryanshkushwaha"},"content":"    //            throw new ParseException(Company.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-17"},{"lineNumber":219,"author":{"gitId":"suryanshkushwaha"},"content":"    //        }","lastModifiedDate":"2023-10-17"},{"lineNumber":220,"author":{"gitId":"suryanshkushwaha"},"content":"    //        return new Company(trimmedCompany);","lastModifiedDate":"2023-10-17"},{"lineNumber":221,"author":{"gitId":"suryanshkushwaha"},"content":"    //    }","lastModifiedDate":"2023-10-17"},{"lineNumber":222,"author":{"gitId":"suryanshkushwaha"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":223,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"suryanshkushwaha":95,"RSXIX":7,"-":121}},{"path":"src/main/java/seedu/address/logic/parser/exceptions/ImpossibleIndexException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RSXIX"},"content":"package seedu.address.logic.parser.exceptions;","lastModifiedDate":"2023-10-16"},{"lineNumber":2,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":3,"author":{"gitId":"RSXIX"},"content":"/**","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"RSXIX"},"content":" * Represents a non negative index error encountered by a parser.","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"RSXIX"},"content":" */","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"RSXIX"},"content":"public class ImpossibleIndexException extends ParseException {","lastModifiedDate":"2023-10-16"},{"lineNumber":7,"author":{"gitId":"RSXIX"},"content":"    public ImpossibleIndexException(String message) {","lastModifiedDate":"2023-10-16"},{"lineNumber":8,"author":{"gitId":"RSXIX"},"content":"        super(message);","lastModifiedDate":"2023-10-16"},{"lineNumber":9,"author":{"gitId":"RSXIX"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":10,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":11,"author":{"gitId":"RSXIX"},"content":"    public ImpossibleIndexException(String message, Throwable cause) {","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"RSXIX"},"content":"        super(message, cause);","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"RSXIX"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"RSXIX"},"content":"}","lastModifiedDate":"2023-10-16"}],"authorContributionMap":{"RSXIX":15}},{"path":"src/main/java/seedu/address/logic/parser/exceptions/MissingIndexException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RSXIX"},"content":"package seedu.address.logic.parser.exceptions;","lastModifiedDate":"2023-10-16"},{"lineNumber":2,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":3,"author":{"gitId":"RSXIX"},"content":"/**","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"RSXIX"},"content":" * Represents a missing index error encountered by a parser.","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"RSXIX"},"content":" */","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"RSXIX"},"content":"public class MissingIndexException extends ParseException {","lastModifiedDate":"2023-10-16"},{"lineNumber":7,"author":{"gitId":"RSXIX"},"content":"    public MissingIndexException(String message) {","lastModifiedDate":"2023-10-16"},{"lineNumber":8,"author":{"gitId":"RSXIX"},"content":"        super(message);","lastModifiedDate":"2023-10-16"},{"lineNumber":9,"author":{"gitId":"RSXIX"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":10,"author":{"gitId":"RSXIX"},"content":"    public MissingIndexException(String message, Throwable cause) {","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"RSXIX"},"content":"        super(message, cause);","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"RSXIX"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"RSXIX"},"content":"}","lastModifiedDate":"2023-10-16"}],"authorContributionMap":{"RSXIX":13}},{"path":"src/main/java/seedu/address/logic/parser/exceptions/ParseException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser.exceptions;","lastModifiedDate":"2017-03-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2017-03-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Represents a parse error encountered by a parser.","lastModifiedDate":"2017-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ParseException extends IllegalValueException {","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public ParseException(String message) {","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2017-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public ParseException(String message, Throwable cause) {","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-11"}],"authorContributionMap":{"RSXIX":1,"-":17}},{"path":"src/main/java/seedu/address/model/person/Address.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s address in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidAddress(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Address {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Addresses can take any values, and it should not be blank\";","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @param address A valid address.","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public Address(String address) {","lastModifiedDate":"2017-05-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        checkArgument(isValidAddress(address), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        value \u003d address;","lastModifiedDate":"2018-08-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"cyaoxuan"},"content":"     * Returns true if a given string is a valid address.","lastModifiedDate":"2023-10-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static boolean isValidAddress(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (!(other instanceof Address)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        Address otherAddress \u003d (Address) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return value.equals(otherAddress.value);","lastModifiedDate":"2023-07-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":64,"cyaoxuan":1}},{"path":"src/main/java/seedu/address/model/person/EmailContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"brendanneojw"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-18"},{"lineNumber":2,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":3,"author":{"gitId":"brendanneojw"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2023-10-18"},{"lineNumber":4,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"brendanneojw"},"content":"/**","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"brendanneojw"},"content":" * Tests that a {@code Person}\u0027s {@code Email} matches any of the keywords given.","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"brendanneojw"},"content":" */","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"brendanneojw"},"content":"public class EmailContainsKeywordsPredicate extends FieldPredicates {","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"brendanneojw"},"content":"    public EmailContainsKeywordsPredicate(String keyword) {","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"brendanneojw"},"content":"        super(keyword);","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"brendanneojw"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"brendanneojw"},"content":"    @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"brendanneojw"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"brendanneojw"},"content":"        return keywords.stream()","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"brendanneojw"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(person.getEmail().value, keyword));","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"brendanneojw"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"brendanneojw"},"content":"    @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"brendanneojw"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"brendanneojw"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"brendanneojw"},"content":"            return true;","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"brendanneojw"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"brendanneojw"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"brendanneojw"},"content":"        if (!(other instanceof EmailContainsKeywordsPredicate)) {","lastModifiedDate":"2023-10-18"},{"lineNumber":28,"author":{"gitId":"brendanneojw"},"content":"            return false;","lastModifiedDate":"2023-10-18"},{"lineNumber":29,"author":{"gitId":"brendanneojw"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":30,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":31,"author":{"gitId":"brendanneojw"},"content":"        EmailContainsKeywordsPredicate otherNameContainsKeywordsPredicate \u003d (EmailContainsKeywordsPredicate) other;","lastModifiedDate":"2023-10-18"},{"lineNumber":32,"author":{"gitId":"brendanneojw"},"content":"        return keywords.equals(otherNameContainsKeywordsPredicate.keywords);","lastModifiedDate":"2023-10-18"},{"lineNumber":33,"author":{"gitId":"brendanneojw"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":34,"author":{"gitId":"brendanneojw"},"content":"}","lastModifiedDate":"2023-10-18"}],"authorContributionMap":{"brendanneojw":34}},{"path":"src/main/java/seedu/address/model/person/FieldPredicates.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"brendanneojw"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-18"},{"lineNumber":2,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":3,"author":{"gitId":"brendanneojw"},"content":"import java.util.Collections;","lastModifiedDate":"2023-10-18"},{"lineNumber":4,"author":{"gitId":"brendanneojw"},"content":"import java.util.List;","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"brendanneojw"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"brendanneojw"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"brendanneojw"},"content":"/**","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"brendanneojw"},"content":" * An abstract class to represent a Predicate","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"brendanneojw"},"content":" * Subclasses must implement the abstract methods to test for the Predicate","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"brendanneojw"},"content":" */","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"brendanneojw"},"content":"public abstract class FieldPredicates implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"brendanneojw"},"content":"    protected final List\u003cString\u003e keywords;","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"brendanneojw"},"content":"    public FieldPredicates(String keyword) {","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"brendanneojw"},"content":"        keywords \u003d Collections.singletonList(keyword);","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"brendanneojw"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"brendanneojw"},"content":"    @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"brendanneojw"},"content":"    public abstract boolean test(Person person);","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"brendanneojw"},"content":"    @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"brendanneojw"},"content":"    public abstract boolean equals(Object other);","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":28,"author":{"gitId":"brendanneojw"},"content":"    @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":29,"author":{"gitId":"brendanneojw"},"content":"    public String toString() {","lastModifiedDate":"2023-10-18"},{"lineNumber":30,"author":{"gitId":"brendanneojw"},"content":"        return new ToStringBuilder(this).add(\"keywords\", keywords).toString();","lastModifiedDate":"2023-10-18"},{"lineNumber":31,"author":{"gitId":"brendanneojw"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":32,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":33,"author":{"gitId":"brendanneojw"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":34,"author":{"gitId":"brendanneojw"},"content":"     * Checks if the list of keywords in the predicate contain an empty string.","lastModifiedDate":"2023-10-18"},{"lineNumber":35,"author":{"gitId":"brendanneojw"},"content":"     *","lastModifiedDate":"2023-10-18"},{"lineNumber":36,"author":{"gitId":"brendanneojw"},"content":"     * @return true if the list of keywords contain an empty string, false otherwise.","lastModifiedDate":"2023-10-18"},{"lineNumber":37,"author":{"gitId":"brendanneojw"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":38,"author":{"gitId":"brendanneojw"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2023-10-18"},{"lineNumber":39,"author":{"gitId":"brendanneojw"},"content":"        return keywords.contains(\"\");","lastModifiedDate":"2023-10-18"},{"lineNumber":40,"author":{"gitId":"brendanneojw"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":41,"author":{"gitId":"brendanneojw"},"content":"}","lastModifiedDate":"2023-10-18"}],"authorContributionMap":{"brendanneojw":41}},{"path":"src/main/java/seedu/address/model/person/LicenceContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"brendanneojw"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"brendanneojw"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"brendanneojw"},"content":"/**","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"brendanneojw"},"content":" * Tests that a {@code Person}\u0027s {@code Licence Plate} matches any of the keywords given.","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"brendanneojw"},"content":" */","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"brendanneojw"},"content":"public class LicenceContainsKeywordsPredicate extends FieldPredicates {","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"brendanneojw"},"content":"    public LicenceContainsKeywordsPredicate(String keyword) {","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"brendanneojw"},"content":"        super(keyword);","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"brendanneojw"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"brendanneojw"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"brendanneojw"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"brendanneojw"},"content":"        return keywords.stream()","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"brendanneojw"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(person.getLicencePlate().value, keyword));","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"brendanneojw"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"brendanneojw"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"brendanneojw"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"brendanneojw"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"brendanneojw"},"content":"            return true;","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"brendanneojw"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"brendanneojw"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"brendanneojw"},"content":"        if (!(other instanceof LicenceContainsKeywordsPredicate)) {","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"brendanneojw"},"content":"            return false;","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"brendanneojw"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"brendanneojw"},"content":"        LicenceContainsKeywordsPredicate otherNameContainsKeywordsPredicate \u003d (LicenceContainsKeywordsPredicate) other;","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"brendanneojw"},"content":"        return keywords.equals(otherNameContainsKeywordsPredicate.keywords);","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"brendanneojw"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"brendanneojw"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"brendanneojw":33}},{"path":"src/main/java/seedu/address/model/person/LicencePlate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cyaoxuan"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-11"},{"lineNumber":2,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":3,"author":{"gitId":"cyaoxuan"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-11"},{"lineNumber":4,"author":{"gitId":"cyaoxuan"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-10-11"},{"lineNumber":5,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":6,"author":{"gitId":"cyaoxuan"},"content":"/**","lastModifiedDate":"2023-10-11"},{"lineNumber":7,"author":{"gitId":"cyaoxuan"},"content":" * Represents a Person\u0027s car licence plate in the address book.","lastModifiedDate":"2023-10-11"},{"lineNumber":8,"author":{"gitId":"cyaoxuan"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidLicencePlate(String)}","lastModifiedDate":"2023-10-11"},{"lineNumber":9,"author":{"gitId":"cyaoxuan"},"content":" */","lastModifiedDate":"2023-10-11"},{"lineNumber":10,"author":{"gitId":"cyaoxuan"},"content":"public class LicencePlate {","lastModifiedDate":"2023-10-11"},{"lineNumber":11,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":12,"author":{"gitId":"cyaoxuan"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"cyaoxuan"},"content":"            \"Licence plates should be in the format Sxx####y which follows the following constraints:\\n\"","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"cyaoxuan"},"content":"            + \"1. S - starts with the letter S, which stands for private vehicle\\n\"","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"cyaoxuan"},"content":"            + \"2. x - Alphabetical series (all except \u0027I\u0027 and \u0027O\u0027)\\n\"","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"suryanshkushwaha"},"content":"            + \"3. #### - Numerical series (from 1 to 9999, without leading zeroes)\\n\"","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"suryanshkushwaha"},"content":"            + \"4. y - Checksum letter (all except \u0027F\u0027, \u0027I\u0027, \u0027N\u0027, \u0027O\u0027, \u0027Q\u0027, \u0027V\u0027 and \u0027W\u0027\";","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":19,"author":{"gitId":"cyaoxuan"},"content":"    /*","lastModifiedDate":"2023-10-11"},{"lineNumber":20,"author":{"gitId":"cyaoxuan"},"content":"     * Should be an alphanumeric string satisfying the above constraints","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"cyaoxuan"},"content":"     */","lastModifiedDate":"2023-10-11"},{"lineNumber":22,"author":{"gitId":"cyaoxuan"},"content":"    public static final String VALIDATION_REGEX \u003d \"^S[^IO]{2}\\\\d{1,4}[A-EGHJKLMPRSTUXYZ]$\";","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":24,"author":{"gitId":"cyaoxuan"},"content":"    public final String value;","lastModifiedDate":"2023-10-11"},{"lineNumber":25,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":26,"author":{"gitId":"cyaoxuan"},"content":"    /**","lastModifiedDate":"2023-10-11"},{"lineNumber":27,"author":{"gitId":"cyaoxuan"},"content":"     * Constructs a {@code LicencePlate}.","lastModifiedDate":"2023-10-11"},{"lineNumber":28,"author":{"gitId":"cyaoxuan"},"content":"     *","lastModifiedDate":"2023-10-11"},{"lineNumber":29,"author":{"gitId":"cyaoxuan"},"content":"     * @param licencePlate A valid licence plate.","lastModifiedDate":"2023-10-11"},{"lineNumber":30,"author":{"gitId":"cyaoxuan"},"content":"     */","lastModifiedDate":"2023-10-11"},{"lineNumber":31,"author":{"gitId":"cyaoxuan"},"content":"    public LicencePlate(String licencePlate) {","lastModifiedDate":"2023-10-11"},{"lineNumber":32,"author":{"gitId":"cyaoxuan"},"content":"        requireNonNull(licencePlate);","lastModifiedDate":"2023-10-11"},{"lineNumber":33,"author":{"gitId":"cyaoxuan"},"content":"        checkArgument(isValidLicencePlate(licencePlate), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-11"},{"lineNumber":34,"author":{"gitId":"cyaoxuan"},"content":"        value \u003d licencePlate;","lastModifiedDate":"2023-10-11"},{"lineNumber":35,"author":{"gitId":"cyaoxuan"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":36,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":37,"author":{"gitId":"cyaoxuan"},"content":"    /**","lastModifiedDate":"2023-10-11"},{"lineNumber":38,"author":{"gitId":"cyaoxuan"},"content":"     * Returns true if a given string is a valid licence plate.","lastModifiedDate":"2023-10-11"},{"lineNumber":39,"author":{"gitId":"cyaoxuan"},"content":"     */","lastModifiedDate":"2023-10-11"},{"lineNumber":40,"author":{"gitId":"cyaoxuan"},"content":"    public static boolean isValidLicencePlate(String test) {","lastModifiedDate":"2023-10-11"},{"lineNumber":41,"author":{"gitId":"cyaoxuan"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-10-11"},{"lineNumber":42,"author":{"gitId":"cyaoxuan"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":43,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":44,"author":{"gitId":"cyaoxuan"},"content":"    @Override","lastModifiedDate":"2023-10-11"},{"lineNumber":45,"author":{"gitId":"cyaoxuan"},"content":"    public String toString() {","lastModifiedDate":"2023-10-11"},{"lineNumber":46,"author":{"gitId":"cyaoxuan"},"content":"        return value;","lastModifiedDate":"2023-10-11"},{"lineNumber":47,"author":{"gitId":"cyaoxuan"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":48,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":49,"author":{"gitId":"cyaoxuan"},"content":"    @Override","lastModifiedDate":"2023-10-11"},{"lineNumber":50,"author":{"gitId":"cyaoxuan"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-11"},{"lineNumber":51,"author":{"gitId":"cyaoxuan"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-11"},{"lineNumber":52,"author":{"gitId":"cyaoxuan"},"content":"            return true;","lastModifiedDate":"2023-10-11"},{"lineNumber":53,"author":{"gitId":"cyaoxuan"},"content":"        }","lastModifiedDate":"2023-10-11"},{"lineNumber":54,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":55,"author":{"gitId":"cyaoxuan"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-11"},{"lineNumber":56,"author":{"gitId":"cyaoxuan"},"content":"        if (!(other instanceof LicencePlate)) {","lastModifiedDate":"2023-10-11"},{"lineNumber":57,"author":{"gitId":"cyaoxuan"},"content":"            return false;","lastModifiedDate":"2023-10-11"},{"lineNumber":58,"author":{"gitId":"cyaoxuan"},"content":"        }","lastModifiedDate":"2023-10-11"},{"lineNumber":59,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":60,"author":{"gitId":"cyaoxuan"},"content":"        LicencePlate otherLicencePlate \u003d (LicencePlate) other;","lastModifiedDate":"2023-10-11"},{"lineNumber":61,"author":{"gitId":"cyaoxuan"},"content":"        return value.equals(otherLicencePlate.value);","lastModifiedDate":"2023-10-11"},{"lineNumber":62,"author":{"gitId":"cyaoxuan"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":63,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":64,"author":{"gitId":"cyaoxuan"},"content":"    @Override","lastModifiedDate":"2023-10-11"},{"lineNumber":65,"author":{"gitId":"cyaoxuan"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-11"},{"lineNumber":66,"author":{"gitId":"cyaoxuan"},"content":"        return value.hashCode();","lastModifiedDate":"2023-10-11"},{"lineNumber":67,"author":{"gitId":"cyaoxuan"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":68,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":69,"author":{"gitId":"cyaoxuan"},"content":"}","lastModifiedDate":"2023-10-11"}],"authorContributionMap":{"suryanshkushwaha":2,"cyaoxuan":67}},{"path":"src/main/java/seedu/address/model/person/NameContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-06-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Tests that a {@code Person}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2018-01-10"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"brendanneojw"},"content":"public class NameContainsKeywordsPredicate extends FieldPredicates {","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"brendanneojw"},"content":"    public NameContainsKeywordsPredicate(String keyword) {","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"brendanneojw"},"content":"        super(keyword);","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        return keywords.stream()","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(person.getName().fullName, keyword));","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        if (!(other instanceof NameContainsKeywordsPredicate)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate otherNameContainsKeywordsPredicate \u003d (NameContainsKeywordsPredicate) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return keywords.equals(otherNameContainsKeywordsPredicate.keywords);","lastModifiedDate":"2023-07-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"brendanneojw":3,"-":30}},{"path":"src/main/java/seedu/address/model/person/Nric.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cyaoxuan"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-11"},{"lineNumber":2,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":3,"author":{"gitId":"cyaoxuan"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-11"},{"lineNumber":4,"author":{"gitId":"cyaoxuan"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-10-11"},{"lineNumber":5,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":6,"author":{"gitId":"cyaoxuan"},"content":"/**","lastModifiedDate":"2023-10-11"},{"lineNumber":7,"author":{"gitId":"cyaoxuan"},"content":" * Represents a Person\u0027s NRIC (last 4 digits only) in the address book.","lastModifiedDate":"2023-10-11"},{"lineNumber":8,"author":{"gitId":"cyaoxuan"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidNric(String)}","lastModifiedDate":"2023-10-11"},{"lineNumber":9,"author":{"gitId":"cyaoxuan"},"content":" */","lastModifiedDate":"2023-10-11"},{"lineNumber":10,"author":{"gitId":"cyaoxuan"},"content":"public class Nric {","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":12,"author":{"gitId":"cyaoxuan"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"NRIC should be the last 3 numbers + 1 letter of your NRIC\";","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":14,"author":{"gitId":"cyaoxuan"},"content":"    /*","lastModifiedDate":"2023-10-11"},{"lineNumber":15,"author":{"gitId":"cyaoxuan"},"content":"     * Should be an alphanumeric string with 4 characters, with the first 3","lastModifiedDate":"2023-10-11"},{"lineNumber":16,"author":{"gitId":"cyaoxuan"},"content":"     * being numbers and the last being a letter.","lastModifiedDate":"2023-10-11"},{"lineNumber":17,"author":{"gitId":"cyaoxuan"},"content":"     */","lastModifiedDate":"2023-10-11"},{"lineNumber":18,"author":{"gitId":"cyaoxuan"},"content":"    public static final String VALIDATION_REGEX \u003d \"^\\\\d{3}[A-Z]$\";","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":20,"author":{"gitId":"cyaoxuan"},"content":"    public final String value;","lastModifiedDate":"2023-10-11"},{"lineNumber":21,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":22,"author":{"gitId":"cyaoxuan"},"content":"    /**","lastModifiedDate":"2023-10-11"},{"lineNumber":23,"author":{"gitId":"cyaoxuan"},"content":"     * Constructs a {@code NRIC}.","lastModifiedDate":"2023-10-11"},{"lineNumber":24,"author":{"gitId":"cyaoxuan"},"content":"     *","lastModifiedDate":"2023-10-11"},{"lineNumber":25,"author":{"gitId":"cyaoxuan"},"content":"     * @param nric A valid NRIC.","lastModifiedDate":"2023-10-11"},{"lineNumber":26,"author":{"gitId":"cyaoxuan"},"content":"     */","lastModifiedDate":"2023-10-11"},{"lineNumber":27,"author":{"gitId":"cyaoxuan"},"content":"    public Nric(String nric) {","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"cyaoxuan"},"content":"        requireNonNull(nric);","lastModifiedDate":"2023-10-11"},{"lineNumber":29,"author":{"gitId":"cyaoxuan"},"content":"        checkArgument(isValidNric(nric), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-11"},{"lineNumber":30,"author":{"gitId":"cyaoxuan"},"content":"        value \u003d nric;","lastModifiedDate":"2023-10-11"},{"lineNumber":31,"author":{"gitId":"cyaoxuan"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":32,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":33,"author":{"gitId":"cyaoxuan"},"content":"    /**","lastModifiedDate":"2023-10-11"},{"lineNumber":34,"author":{"gitId":"cyaoxuan"},"content":"     * Returns true if a given string is a valid NRIC.","lastModifiedDate":"2023-10-11"},{"lineNumber":35,"author":{"gitId":"cyaoxuan"},"content":"     */","lastModifiedDate":"2023-10-11"},{"lineNumber":36,"author":{"gitId":"cyaoxuan"},"content":"    public static boolean isValidNric(String test) {","lastModifiedDate":"2023-10-11"},{"lineNumber":37,"author":{"gitId":"cyaoxuan"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-10-11"},{"lineNumber":38,"author":{"gitId":"cyaoxuan"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":39,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":40,"author":{"gitId":"cyaoxuan"},"content":"    @Override","lastModifiedDate":"2023-10-11"},{"lineNumber":41,"author":{"gitId":"cyaoxuan"},"content":"    public String toString() {","lastModifiedDate":"2023-10-11"},{"lineNumber":42,"author":{"gitId":"cyaoxuan"},"content":"        return value;","lastModifiedDate":"2023-10-11"},{"lineNumber":43,"author":{"gitId":"cyaoxuan"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":44,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":45,"author":{"gitId":"cyaoxuan"},"content":"    @Override","lastModifiedDate":"2023-10-11"},{"lineNumber":46,"author":{"gitId":"cyaoxuan"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-11"},{"lineNumber":47,"author":{"gitId":"cyaoxuan"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-11"},{"lineNumber":48,"author":{"gitId":"cyaoxuan"},"content":"            return true;","lastModifiedDate":"2023-10-11"},{"lineNumber":49,"author":{"gitId":"cyaoxuan"},"content":"        }","lastModifiedDate":"2023-10-11"},{"lineNumber":50,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":51,"author":{"gitId":"cyaoxuan"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-11"},{"lineNumber":52,"author":{"gitId":"cyaoxuan"},"content":"        if (!(other instanceof Nric)) {","lastModifiedDate":"2023-10-13"},{"lineNumber":53,"author":{"gitId":"cyaoxuan"},"content":"            return false;","lastModifiedDate":"2023-10-11"},{"lineNumber":54,"author":{"gitId":"cyaoxuan"},"content":"        }","lastModifiedDate":"2023-10-11"},{"lineNumber":55,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":56,"author":{"gitId":"cyaoxuan"},"content":"        Nric otherNric \u003d (Nric) other;","lastModifiedDate":"2023-10-13"},{"lineNumber":57,"author":{"gitId":"cyaoxuan"},"content":"        return value.equals(otherNric.value);","lastModifiedDate":"2023-10-11"},{"lineNumber":58,"author":{"gitId":"cyaoxuan"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":59,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":60,"author":{"gitId":"cyaoxuan"},"content":"    @Override","lastModifiedDate":"2023-10-11"},{"lineNumber":61,"author":{"gitId":"cyaoxuan"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-11"},{"lineNumber":62,"author":{"gitId":"cyaoxuan"},"content":"        return value.hashCode();","lastModifiedDate":"2023-10-11"},{"lineNumber":63,"author":{"gitId":"cyaoxuan"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":64,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":65,"author":{"gitId":"cyaoxuan"},"content":"}","lastModifiedDate":"2023-10-11"}],"authorContributionMap":{"cyaoxuan":65}},{"path":"src/main/java/seedu/address/model/person/NricContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"brendanneojw"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-18"},{"lineNumber":2,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":3,"author":{"gitId":"brendanneojw"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2023-10-18"},{"lineNumber":4,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"brendanneojw"},"content":"/**","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"brendanneojw"},"content":" * Tests that a {@code Person}\u0027s {@code NRIC} matches any of the keywords given.","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"brendanneojw"},"content":" */","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"brendanneojw"},"content":"public class NricContainsKeywordsPredicate extends FieldPredicates {","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"brendanneojw"},"content":"    public NricContainsKeywordsPredicate(String keyword) {","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"brendanneojw"},"content":"        super(keyword);","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"brendanneojw"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"brendanneojw"},"content":"    @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"brendanneojw"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"brendanneojw"},"content":"        return keywords.stream()","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"brendanneojw"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(person.getNric().value, keyword));","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"brendanneojw"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"brendanneojw"},"content":"    @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"brendanneojw"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"brendanneojw"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"brendanneojw"},"content":"            return true;","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"brendanneojw"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"brendanneojw"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"brendanneojw"},"content":"        if (!(other instanceof NricContainsKeywordsPredicate)) {","lastModifiedDate":"2023-10-18"},{"lineNumber":28,"author":{"gitId":"brendanneojw"},"content":"            return false;","lastModifiedDate":"2023-10-18"},{"lineNumber":29,"author":{"gitId":"brendanneojw"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":30,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":31,"author":{"gitId":"brendanneojw"},"content":"        NricContainsKeywordsPredicate otherNameContainsKeywordsPredicate \u003d (NricContainsKeywordsPredicate) other;","lastModifiedDate":"2023-10-18"},{"lineNumber":32,"author":{"gitId":"brendanneojw"},"content":"        return keywords.equals(otherNameContainsKeywordsPredicate.keywords);","lastModifiedDate":"2023-10-18"},{"lineNumber":33,"author":{"gitId":"brendanneojw"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":34,"author":{"gitId":"brendanneojw"},"content":"}","lastModifiedDate":"2023-10-18"}],"authorContributionMap":{"brendanneojw":34}},{"path":"src/main/java/seedu/address/model/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":11,"author":{"gitId":"cyaoxuan"},"content":"import seedu.address.model.policy.Policy;","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Represents a Person in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class Person {","lastModifiedDate":"2018-01-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final Address address;","lastModifiedDate":"2018-04-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":28,"author":{"gitId":"cyaoxuan"},"content":"    private final Nric nric;","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"cyaoxuan"},"content":"    private final LicencePlate licencePlate;","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"cyaoxuan"},"content":"    private final Policy policy;","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"cyaoxuan"},"content":"     * In the case of leads with null policy fields, default values will be put in place by the respective classes.","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"cyaoxuan"},"content":"    public Person(Name name, Phone phone, Email email, Address address, Set\u003cTag\u003e tags, Nric nric,","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"cyaoxuan"},"content":"                  LicencePlate licencePlate, Policy policy) {","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"cyaoxuan"},"content":"        requireAllNonNull(name, phone, email, nric, licencePlate, address, tags, policy);","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2017-12-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":44,"author":{"gitId":"cyaoxuan"},"content":"        this.nric \u003d nric;","lastModifiedDate":"2023-10-13"},{"lineNumber":45,"author":{"gitId":"cyaoxuan"},"content":"        this.licencePlate \u003d licencePlate;","lastModifiedDate":"2023-10-13"},{"lineNumber":46,"author":{"gitId":"cyaoxuan"},"content":"        this.policy \u003d policy;","lastModifiedDate":"2023-10-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public Address getAddress() {","lastModifiedDate":"2017-07-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return address;","lastModifiedDate":"2017-12-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2017-03-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":73,"author":{"gitId":"cyaoxuan"},"content":"    public Nric getNric() {","lastModifiedDate":"2023-10-13"},{"lineNumber":74,"author":{"gitId":"cyaoxuan"},"content":"        return nric;","lastModifiedDate":"2023-10-13"},{"lineNumber":75,"author":{"gitId":"cyaoxuan"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":76,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":77,"author":{"gitId":"cyaoxuan"},"content":"    public LicencePlate getLicencePlate() {","lastModifiedDate":"2023-10-13"},{"lineNumber":78,"author":{"gitId":"cyaoxuan"},"content":"        return licencePlate;","lastModifiedDate":"2023-10-13"},{"lineNumber":79,"author":{"gitId":"cyaoxuan"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":80,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":81,"author":{"gitId":"cyaoxuan"},"content":"    public Policy getPolicy() {","lastModifiedDate":"2023-10-13"},{"lineNumber":82,"author":{"gitId":"cyaoxuan"},"content":"        return policy;","lastModifiedDate":"2023-10-13"},{"lineNumber":83,"author":{"gitId":"cyaoxuan"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":84,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same name.","lastModifiedDate":"2020-12-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public boolean isSamePerson(Person otherPerson) {","lastModifiedDate":"2018-04-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        if (otherPerson \u003d\u003d this) {","lastModifiedDate":"2018-04-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        return otherPerson !\u003d null","lastModifiedDate":"2018-04-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getName().equals(getName());","lastModifiedDate":"2020-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2018-04-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        if (!(other instanceof Person)) {","lastModifiedDate":"2018-01-10"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        Person otherPerson \u003d (Person) other;","lastModifiedDate":"2018-01-10"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        return name.equals(otherPerson.name)","lastModifiedDate":"2023-07-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"                \u0026\u0026 phone.equals(otherPerson.phone)","lastModifiedDate":"2023-07-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                \u0026\u0026 email.equals(otherPerson.email)","lastModifiedDate":"2023-07-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                \u0026\u0026 address.equals(otherPerson.address)","lastModifiedDate":"2023-07-13"},{"lineNumber":118,"author":{"gitId":"cyaoxuan"},"content":"                \u0026\u0026 tags.equals(otherPerson.tags)","lastModifiedDate":"2023-10-13"},{"lineNumber":119,"author":{"gitId":"cyaoxuan"},"content":"                \u0026\u0026 nric.equals(otherPerson.nric)","lastModifiedDate":"2023-10-13"},{"lineNumber":120,"author":{"gitId":"cyaoxuan"},"content":"                \u0026\u0026 licencePlate.equals(otherPerson.licencePlate)","lastModifiedDate":"2023-10-13"},{"lineNumber":121,"author":{"gitId":"cyaoxuan"},"content":"                \u0026\u0026 policy.equals(otherPerson.policy);","lastModifiedDate":"2023-10-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":127,"author":{"gitId":"cyaoxuan"},"content":"        return Objects.hash(name, phone, email, address, tags, nric, licencePlate, policy);","lastModifiedDate":"2023-10-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"                .add(\"name\", name)","lastModifiedDate":"2019-02-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"                .add(\"phone\", phone)","lastModifiedDate":"2019-02-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"                .add(\"email\", email)","lastModifiedDate":"2019-02-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"                .add(\"address\", address)","lastModifiedDate":"2019-02-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"                .add(\"tags\", tags)","lastModifiedDate":"2019-02-23"},{"lineNumber":138,"author":{"gitId":"cyaoxuan"},"content":"                .add(\"nric\", nric)","lastModifiedDate":"2023-10-13"},{"lineNumber":139,"author":{"gitId":"cyaoxuan"},"content":"                .add(\"licence plate\", licencePlate)","lastModifiedDate":"2023-10-13"},{"lineNumber":140,"author":{"gitId":"cyaoxuan"},"content":"                .add(\"policy\", policy)","lastModifiedDate":"2023-10-13"},{"lineNumber":141,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":144,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":113,"cyaoxuan":31}},{"path":"src/main/java/seedu/address/model/person/PhoneContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"brendanneojw"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-18"},{"lineNumber":2,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":3,"author":{"gitId":"brendanneojw"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2023-10-18"},{"lineNumber":4,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"brendanneojw"},"content":"/**","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"brendanneojw"},"content":" * Tests that a {@code Person}\u0027s {@code Phone Number} matches any of the keywords given.","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"brendanneojw"},"content":" */","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"brendanneojw"},"content":"public class PhoneContainsKeywordsPredicate extends FieldPredicates {","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"brendanneojw"},"content":"    public PhoneContainsKeywordsPredicate(String keyword) {","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"brendanneojw"},"content":"        super(keyword);","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"brendanneojw"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"brendanneojw"},"content":"    @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"brendanneojw"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"brendanneojw"},"content":"        return keywords.stream()","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"brendanneojw"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(person.getPhone().value, keyword));","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"brendanneojw"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"brendanneojw"},"content":"    @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"brendanneojw"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"brendanneojw"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"brendanneojw"},"content":"            return true;","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"brendanneojw"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"brendanneojw"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"brendanneojw"},"content":"        if (!(other instanceof PhoneContainsKeywordsPredicate)) {","lastModifiedDate":"2023-10-18"},{"lineNumber":28,"author":{"gitId":"brendanneojw"},"content":"            return false;","lastModifiedDate":"2023-10-18"},{"lineNumber":29,"author":{"gitId":"brendanneojw"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":30,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":31,"author":{"gitId":"brendanneojw"},"content":"        PhoneContainsKeywordsPredicate otherNameContainsKeywordsPredicate \u003d (PhoneContainsKeywordsPredicate) other;","lastModifiedDate":"2023-10-18"},{"lineNumber":32,"author":{"gitId":"brendanneojw"},"content":"        return keywords.equals(otherNameContainsKeywordsPredicate.keywords);","lastModifiedDate":"2023-10-18"},{"lineNumber":33,"author":{"gitId":"brendanneojw"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":34,"author":{"gitId":"brendanneojw"},"content":"}","lastModifiedDate":"2023-10-18"}],"authorContributionMap":{"brendanneojw":34}},{"path":"src/main/java/seedu/address/model/person/PolicyExpiryContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"brendanneojw"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-18"},{"lineNumber":2,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":3,"author":{"gitId":"brendanneojw"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2023-10-18"},{"lineNumber":4,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"brendanneojw"},"content":"/**","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"brendanneojw"},"content":" * Tests that a {@code Person}\u0027s {@code Policy Expiry date} matches any of the keywords given.","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"brendanneojw"},"content":" */","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"brendanneojw"},"content":"public class PolicyExpiryContainsKeywordsPredicate extends FieldPredicates {","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"brendanneojw"},"content":"    public PolicyExpiryContainsKeywordsPredicate(String keyword) {","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"brendanneojw"},"content":"        super(keyword);","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"brendanneojw"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"brendanneojw"},"content":"    @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"brendanneojw"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"brendanneojw"},"content":"        return keywords.stream()","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"brendanneojw"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"brendanneojw"},"content":"                        person.getPolicy().getPolicyExpiryDate().toString(), keyword));","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"brendanneojw"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"brendanneojw"},"content":"    @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"brendanneojw"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"brendanneojw"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"brendanneojw"},"content":"            return true;","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"brendanneojw"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"brendanneojw"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-18"},{"lineNumber":28,"author":{"gitId":"brendanneojw"},"content":"        if (!(other instanceof PolicyExpiryContainsKeywordsPredicate)) {","lastModifiedDate":"2023-10-18"},{"lineNumber":29,"author":{"gitId":"brendanneojw"},"content":"            return false;","lastModifiedDate":"2023-10-18"},{"lineNumber":30,"author":{"gitId":"brendanneojw"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":31,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":32,"author":{"gitId":"brendanneojw"},"content":"        PolicyExpiryContainsKeywordsPredicate otherNameContainsKeywordsPredicate \u003d","lastModifiedDate":"2023-10-18"},{"lineNumber":33,"author":{"gitId":"brendanneojw"},"content":"                (PolicyExpiryContainsKeywordsPredicate) other;","lastModifiedDate":"2023-10-18"},{"lineNumber":34,"author":{"gitId":"brendanneojw"},"content":"        return keywords.equals(otherNameContainsKeywordsPredicate.keywords);","lastModifiedDate":"2023-10-18"},{"lineNumber":35,"author":{"gitId":"brendanneojw"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":36,"author":{"gitId":"brendanneojw"},"content":"}","lastModifiedDate":"2023-10-18"}],"authorContributionMap":{"brendanneojw":36}},{"path":"src/main/java/seedu/address/model/person/PolicyIssueContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"brendanneojw"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-18"},{"lineNumber":2,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":3,"author":{"gitId":"brendanneojw"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2023-10-18"},{"lineNumber":4,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"brendanneojw"},"content":"/**","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"brendanneojw"},"content":" * Tests that a {@code Person}\u0027s {@code Policy Issue date} matches any of the keywords given.","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"brendanneojw"},"content":" */","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"brendanneojw"},"content":"public class PolicyIssueContainsKeywordsPredicate extends FieldPredicates {","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"brendanneojw"},"content":"    public PolicyIssueContainsKeywordsPredicate(String keyword) {","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"brendanneojw"},"content":"        super(keyword);","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"brendanneojw"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"brendanneojw"},"content":"    @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"brendanneojw"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"brendanneojw"},"content":"        return keywords.stream()","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"brendanneojw"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"brendanneojw"},"content":"                        person.getPolicy().getPolicyIssueDate().toString(), keyword));","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"brendanneojw"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"brendanneojw"},"content":"    @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"brendanneojw"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"brendanneojw"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"brendanneojw"},"content":"            return true;","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"brendanneojw"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"brendanneojw"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-18"},{"lineNumber":28,"author":{"gitId":"brendanneojw"},"content":"        if (!(other instanceof PolicyIssueContainsKeywordsPredicate)) {","lastModifiedDate":"2023-10-18"},{"lineNumber":29,"author":{"gitId":"brendanneojw"},"content":"            return false;","lastModifiedDate":"2023-10-18"},{"lineNumber":30,"author":{"gitId":"brendanneojw"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":31,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":32,"author":{"gitId":"brendanneojw"},"content":"        PolicyIssueContainsKeywordsPredicate otherNameContainsKeywordsPredicate \u003d","lastModifiedDate":"2023-10-18"},{"lineNumber":33,"author":{"gitId":"brendanneojw"},"content":"                (PolicyIssueContainsKeywordsPredicate) other;","lastModifiedDate":"2023-10-18"},{"lineNumber":34,"author":{"gitId":"brendanneojw"},"content":"        return keywords.equals(otherNameContainsKeywordsPredicate.keywords);","lastModifiedDate":"2023-10-18"},{"lineNumber":35,"author":{"gitId":"brendanneojw"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":36,"author":{"gitId":"brendanneojw"},"content":"}","lastModifiedDate":"2023-10-18"}],"authorContributionMap":{"brendanneojw":36}},{"path":"src/main/java/seedu/address/model/person/PolicyNumberContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"brendanneojw"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-18"},{"lineNumber":2,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":3,"author":{"gitId":"brendanneojw"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2023-10-18"},{"lineNumber":4,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"brendanneojw"},"content":"/**","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"brendanneojw"},"content":" * Tests that a {@code Person}\u0027s {@code Policy Number} matches any of the keywords given.","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"brendanneojw"},"content":" */","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"brendanneojw"},"content":"public class PolicyNumberContainsKeywordsPredicate extends FieldPredicates {","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"brendanneojw"},"content":"    public PolicyNumberContainsKeywordsPredicate(String keyword) {","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"brendanneojw"},"content":"        super(keyword);","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"brendanneojw"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"brendanneojw"},"content":"    @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"brendanneojw"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"brendanneojw"},"content":"        return keywords.stream()","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"brendanneojw"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"brendanneojw"},"content":"                        person.getPolicy().getPolicyNumber().value, keyword));","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"brendanneojw"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"brendanneojw"},"content":"    @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"brendanneojw"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"brendanneojw"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"brendanneojw"},"content":"            return true;","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"brendanneojw"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"brendanneojw"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-18"},{"lineNumber":28,"author":{"gitId":"brendanneojw"},"content":"        if (!(other instanceof PolicyNumberContainsKeywordsPredicate)) {","lastModifiedDate":"2023-10-18"},{"lineNumber":29,"author":{"gitId":"brendanneojw"},"content":"            return false;","lastModifiedDate":"2023-10-18"},{"lineNumber":30,"author":{"gitId":"brendanneojw"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":31,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":32,"author":{"gitId":"brendanneojw"},"content":"        PolicyNumberContainsKeywordsPredicate otherNameContainsKeywordsPredicate \u003d","lastModifiedDate":"2023-10-18"},{"lineNumber":33,"author":{"gitId":"brendanneojw"},"content":"                (PolicyNumberContainsKeywordsPredicate) other;","lastModifiedDate":"2023-10-18"},{"lineNumber":34,"author":{"gitId":"brendanneojw"},"content":"        return keywords.equals(otherNameContainsKeywordsPredicate.keywords);","lastModifiedDate":"2023-10-18"},{"lineNumber":35,"author":{"gitId":"brendanneojw"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":36,"author":{"gitId":"brendanneojw"},"content":"}","lastModifiedDate":"2023-10-18"}],"authorContributionMap":{"brendanneojw":36}},{"path":"src/main/java/seedu/address/model/person/TagContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"brendanneojw"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-18"},{"lineNumber":2,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":3,"author":{"gitId":"brendanneojw"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2023-10-18"},{"lineNumber":4,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"brendanneojw"},"content":"/**","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"brendanneojw"},"content":" * Tests that a {@code Person}\u0027s {@code Tags} matches any of the keywords given.","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"brendanneojw"},"content":" */","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"brendanneojw"},"content":"public class TagContainsKeywordsPredicate extends FieldPredicates {","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"brendanneojw"},"content":"    public TagContainsKeywordsPredicate(String keyword) {","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"brendanneojw"},"content":"        super(keyword);","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"brendanneojw"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"brendanneojw"},"content":"    @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"brendanneojw"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"brendanneojw"},"content":"        return keywords.stream()","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"brendanneojw"},"content":"                .anyMatch(keyword -\u003e person.getTags().stream().anyMatch(","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"brendanneojw"},"content":"                        tag -\u003e StringUtil.containsWordIgnoreCase(tag.tagName, keyword)));","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"brendanneojw"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"brendanneojw"},"content":"    @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"brendanneojw"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"brendanneojw"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"brendanneojw"},"content":"            return true;","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"brendanneojw"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"brendanneojw"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"brendanneojw"},"content":"        if (!(other instanceof TagContainsKeywordsPredicate)) {","lastModifiedDate":"2023-10-18"},{"lineNumber":28,"author":{"gitId":"brendanneojw"},"content":"            return false;","lastModifiedDate":"2023-10-18"},{"lineNumber":29,"author":{"gitId":"brendanneojw"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":30,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":31,"author":{"gitId":"brendanneojw"},"content":"        TagContainsKeywordsPredicate otherNameContainsKeywordsPredicate \u003d (TagContainsKeywordsPredicate) other;","lastModifiedDate":"2023-10-18"},{"lineNumber":32,"author":{"gitId":"brendanneojw"},"content":"        return keywords.equals(otherNameContainsKeywordsPredicate.keywords);","lastModifiedDate":"2023-10-18"},{"lineNumber":33,"author":{"gitId":"brendanneojw"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":34,"author":{"gitId":"brendanneojw"},"content":"}","lastModifiedDate":"2023-10-18"}],"authorContributionMap":{"brendanneojw":34}},{"path":"src/main/java/seedu/address/model/policy/Policy.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cyaoxuan"},"content":"package seedu.address.model.policy;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"cyaoxuan"},"content":"import java.util.Objects;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"cyaoxuan"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"cyaoxuan"},"content":"/**","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"cyaoxuan"},"content":" * Represents a person\u0027s policy in the address book.","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"cyaoxuan"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"cyaoxuan"},"content":" */","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"cyaoxuan"},"content":"public class Policy {","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"cyaoxuan"},"content":"    private final PolicyNumber policyNumber;","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"cyaoxuan"},"content":"    private final PolicyDate policyIssueDate;","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"cyaoxuan"},"content":"    private final PolicyDate policyExpiryDate;","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"cyaoxuan"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"cyaoxuan"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"cyaoxuan"},"content":"     * In the case of leads with null policy fields, default values will be put in place by the respective classes.","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"cyaoxuan"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"cyaoxuan"},"content":"    public Policy(PolicyNumber policyNumber, PolicyDate policyIssueDate, PolicyDate policyExpiryDate) {","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"cyaoxuan"},"content":"        this.policyNumber \u003d policyNumber;","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"cyaoxuan"},"content":"        this.policyIssueDate \u003d policyIssueDate;","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"cyaoxuan"},"content":"        this.policyExpiryDate \u003d policyExpiryDate;","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"cyaoxuan"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"cyaoxuan"},"content":"    public PolicyNumber getPolicyNumber() {","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"cyaoxuan"},"content":"        return policyNumber;","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"cyaoxuan"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"cyaoxuan"},"content":"    public PolicyDate getPolicyIssueDate() {","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"cyaoxuan"},"content":"        return policyIssueDate;","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"cyaoxuan"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"cyaoxuan"},"content":"    public PolicyDate getPolicyExpiryDate() {","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"cyaoxuan"},"content":"        return policyExpiryDate;","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"cyaoxuan"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"cyaoxuan"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"cyaoxuan"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-13"},{"lineNumber":41,"author":{"gitId":"cyaoxuan"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-13"},{"lineNumber":42,"author":{"gitId":"cyaoxuan"},"content":"            return true;","lastModifiedDate":"2023-10-13"},{"lineNumber":43,"author":{"gitId":"cyaoxuan"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":44,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":45,"author":{"gitId":"cyaoxuan"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-13"},{"lineNumber":46,"author":{"gitId":"cyaoxuan"},"content":"        if (!(other instanceof Policy)) {","lastModifiedDate":"2023-10-13"},{"lineNumber":47,"author":{"gitId":"cyaoxuan"},"content":"            return false;","lastModifiedDate":"2023-10-13"},{"lineNumber":48,"author":{"gitId":"cyaoxuan"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":49,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":50,"author":{"gitId":"cyaoxuan"},"content":"        Policy otherPolicy \u003d (Policy) other;","lastModifiedDate":"2023-10-13"},{"lineNumber":51,"author":{"gitId":"cyaoxuan"},"content":"        return policyNumber.equals(otherPolicy.policyNumber)","lastModifiedDate":"2023-10-13"},{"lineNumber":52,"author":{"gitId":"cyaoxuan"},"content":"                \u0026\u0026 policyIssueDate.equals(otherPolicy.policyIssueDate)","lastModifiedDate":"2023-10-13"},{"lineNumber":53,"author":{"gitId":"cyaoxuan"},"content":"                \u0026\u0026 policyExpiryDate.equals(otherPolicy.policyExpiryDate);","lastModifiedDate":"2023-10-13"},{"lineNumber":54,"author":{"gitId":"cyaoxuan"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":55,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":56,"author":{"gitId":"cyaoxuan"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":57,"author":{"gitId":"cyaoxuan"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-13"},{"lineNumber":58,"author":{"gitId":"cyaoxuan"},"content":"        return Objects.hash(policyNumber, policyIssueDate, policyExpiryDate);","lastModifiedDate":"2023-10-13"},{"lineNumber":59,"author":{"gitId":"cyaoxuan"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":60,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":61,"author":{"gitId":"cyaoxuan"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":62,"author":{"gitId":"cyaoxuan"},"content":"    public String toString() {","lastModifiedDate":"2023-10-13"},{"lineNumber":63,"author":{"gitId":"cyaoxuan"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-13"},{"lineNumber":64,"author":{"gitId":"cyaoxuan"},"content":"                .add(\"policy number\", policyNumber)","lastModifiedDate":"2023-10-13"},{"lineNumber":65,"author":{"gitId":"cyaoxuan"},"content":"                .add(\"policy issue date\", policyIssueDate)","lastModifiedDate":"2023-10-13"},{"lineNumber":66,"author":{"gitId":"cyaoxuan"},"content":"                .add(\"policy expiry date\", policyExpiryDate)","lastModifiedDate":"2023-10-13"},{"lineNumber":67,"author":{"gitId":"cyaoxuan"},"content":"                .toString();","lastModifiedDate":"2023-10-13"},{"lineNumber":68,"author":{"gitId":"cyaoxuan"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":69,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":70,"author":{"gitId":"brendanneojw"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":71,"author":{"gitId":"brendanneojw"},"content":"     * Return a string representation of the Policy that will be displayed on the Person\u0027s Card or the successful","lastModifiedDate":"2023-10-13"},{"lineNumber":72,"author":{"gitId":"brendanneojw"},"content":"     * command box.","lastModifiedDate":"2023-10-13"},{"lineNumber":73,"author":{"gitId":"brendanneojw"},"content":"     *","lastModifiedDate":"2023-10-13"},{"lineNumber":74,"author":{"gitId":"brendanneojw"},"content":"     * @param isPersonCard true if the display is for the Person card, false otherwise.","lastModifiedDate":"2023-10-13"},{"lineNumber":75,"author":{"gitId":"brendanneojw"},"content":"     * @return the string representation of the Policy.","lastModifiedDate":"2023-10-13"},{"lineNumber":76,"author":{"gitId":"brendanneojw"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":77,"author":{"gitId":"brendanneojw"},"content":"    public String toDisplay(boolean isPersonCard) {","lastModifiedDate":"2023-10-13"},{"lineNumber":78,"author":{"gitId":"brendanneojw"},"content":"        if (policyNumber.value.equals(PolicyNumber.DEFAULT_VALUE)) {","lastModifiedDate":"2023-10-13"},{"lineNumber":79,"author":{"gitId":"brendanneojw"},"content":"            // Policy does not actually exist","lastModifiedDate":"2023-10-13"},{"lineNumber":80,"author":{"gitId":"brendanneojw"},"content":"            return \"No Policy Found\";","lastModifiedDate":"2023-10-13"},{"lineNumber":81,"author":{"gitId":"brendanneojw"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":82,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":83,"author":{"gitId":"brendanneojw"},"content":"        if (isPersonCard) {","lastModifiedDate":"2023-10-13"},{"lineNumber":84,"author":{"gitId":"brendanneojw"},"content":"            return policyNumber.value + \"\\n\" + policyIssueDate.toString() + \"\\n\" + policyExpiryDate.toString();","lastModifiedDate":"2023-10-13"},{"lineNumber":85,"author":{"gitId":"brendanneojw"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":86,"author":{"gitId":"brendanneojw"},"content":"        return policyNumber.value + \", \" + policyIssueDate.toString() + \", \" + policyExpiryDate.toString();","lastModifiedDate":"2023-10-13"},{"lineNumber":87,"author":{"gitId":"brendanneojw"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":88,"author":{"gitId":"cyaoxuan"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"brendanneojw":18,"cyaoxuan":70}},{"path":"src/main/java/seedu/address/model/policy/PolicyDate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cyaoxuan"},"content":"package seedu.address.model.policy;","lastModifiedDate":"2023-10-11"},{"lineNumber":2,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":3,"author":{"gitId":"cyaoxuan"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-11"},{"lineNumber":4,"author":{"gitId":"cyaoxuan"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-10-11"},{"lineNumber":5,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":6,"author":{"gitId":"cyaoxuan"},"content":"import java.text.ParseException;","lastModifiedDate":"2023-10-11"},{"lineNumber":7,"author":{"gitId":"cyaoxuan"},"content":"import java.text.SimpleDateFormat;","lastModifiedDate":"2023-10-11"},{"lineNumber":8,"author":{"gitId":"cyaoxuan"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-10-11"},{"lineNumber":9,"author":{"gitId":"cyaoxuan"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-10-11"},{"lineNumber":10,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":11,"author":{"gitId":"cyaoxuan"},"content":"/**","lastModifiedDate":"2023-10-11"},{"lineNumber":12,"author":{"gitId":"cyaoxuan"},"content":" * Represents a car insurance policy issue / expiry date in the address book.","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"cyaoxuan"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidPolicyDate(String)}","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"cyaoxuan"},"content":" */","lastModifiedDate":"2023-10-11"},{"lineNumber":15,"author":{"gitId":"cyaoxuan"},"content":"public class PolicyDate {","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":17,"author":{"gitId":"cyaoxuan"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Policy issue / expiry date should be in the format dd-mm-yyyy\";","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":19,"author":{"gitId":"cyaoxuan"},"content":"    /*","lastModifiedDate":"2023-10-11"},{"lineNumber":20,"author":{"gitId":"cyaoxuan"},"content":"     * Should be in the format dd-mm-yyyy, checked with SimpleDateFormat","lastModifiedDate":"2023-10-11"},{"lineNumber":21,"author":{"gitId":"cyaoxuan"},"content":"     */","lastModifiedDate":"2023-10-11"},{"lineNumber":22,"author":{"gitId":"cyaoxuan"},"content":"    public static final String VALIDATION_DATE_FORMAT \u003d \"dd-MM-yyyy\";","lastModifiedDate":"2023-10-11"},{"lineNumber":23,"author":{"gitId":"cyaoxuan"},"content":"    public static final String DEFAULT_VALUE \u003d \"01-01-1000\";","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":25,"author":{"gitId":"cyaoxuan"},"content":"    public final LocalDate date;","lastModifiedDate":"2023-10-11"},{"lineNumber":26,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":27,"author":{"gitId":"cyaoxuan"},"content":"    /**","lastModifiedDate":"2023-10-11"},{"lineNumber":28,"author":{"gitId":"cyaoxuan"},"content":"     * Constructs a {@code PolicyDate}.","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"cyaoxuan"},"content":"     *","lastModifiedDate":"2023-10-11"},{"lineNumber":30,"author":{"gitId":"cyaoxuan"},"content":"     * @param policyDate A valid policy expiry date.","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"cyaoxuan"},"content":"     */","lastModifiedDate":"2023-10-11"},{"lineNumber":32,"author":{"gitId":"cyaoxuan"},"content":"    public PolicyDate(String policyDate) {","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"cyaoxuan"},"content":"        requireNonNull(policyDate);","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"cyaoxuan"},"content":"        checkArgument(isValidPolicyDate(policyDate), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"cyaoxuan"},"content":"        date \u003d LocalDate.parse(policyDate, DateTimeFormatter.ofPattern(\"dd-MM-yyyy\"));","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"cyaoxuan"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":37,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":38,"author":{"gitId":"cyaoxuan"},"content":"    /**","lastModifiedDate":"2023-10-11"},{"lineNumber":39,"author":{"gitId":"cyaoxuan"},"content":"     * Returns true if a given string is a valid date in the format dd-mm-yyyy.","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"cyaoxuan"},"content":"     */","lastModifiedDate":"2023-10-11"},{"lineNumber":41,"author":{"gitId":"cyaoxuan"},"content":"    public static boolean isValidPolicyDate(String test) {","lastModifiedDate":"2023-10-12"},{"lineNumber":42,"author":{"gitId":"cyaoxuan"},"content":"        try {","lastModifiedDate":"2023-10-11"},{"lineNumber":43,"author":{"gitId":"cyaoxuan"},"content":"            SimpleDateFormat format \u003d new SimpleDateFormat(VALIDATION_DATE_FORMAT);","lastModifiedDate":"2023-10-11"},{"lineNumber":44,"author":{"gitId":"cyaoxuan"},"content":"            format.parse(test);","lastModifiedDate":"2023-10-11"},{"lineNumber":45,"author":{"gitId":"cyaoxuan"},"content":"            return true;","lastModifiedDate":"2023-10-11"},{"lineNumber":46,"author":{"gitId":"cyaoxuan"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2023-10-11"},{"lineNumber":47,"author":{"gitId":"cyaoxuan"},"content":"            return false;","lastModifiedDate":"2023-10-11"},{"lineNumber":48,"author":{"gitId":"cyaoxuan"},"content":"        }","lastModifiedDate":"2023-10-11"},{"lineNumber":49,"author":{"gitId":"cyaoxuan"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":50,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":51,"author":{"gitId":"cyaoxuan"},"content":"    @Override","lastModifiedDate":"2023-10-11"},{"lineNumber":52,"author":{"gitId":"cyaoxuan"},"content":"    public String toString() {","lastModifiedDate":"2023-10-11"},{"lineNumber":53,"author":{"gitId":"cyaoxuan"},"content":"        return date.format(DateTimeFormatter.ofPattern(\"dd-MM-yyyy\"));","lastModifiedDate":"2023-10-13"},{"lineNumber":54,"author":{"gitId":"cyaoxuan"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":55,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":56,"author":{"gitId":"cyaoxuan"},"content":"    @Override","lastModifiedDate":"2023-10-11"},{"lineNumber":57,"author":{"gitId":"cyaoxuan"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-11"},{"lineNumber":58,"author":{"gitId":"cyaoxuan"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-11"},{"lineNumber":59,"author":{"gitId":"cyaoxuan"},"content":"            return true;","lastModifiedDate":"2023-10-11"},{"lineNumber":60,"author":{"gitId":"cyaoxuan"},"content":"        }","lastModifiedDate":"2023-10-11"},{"lineNumber":61,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":62,"author":{"gitId":"cyaoxuan"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-11"},{"lineNumber":63,"author":{"gitId":"cyaoxuan"},"content":"        if (!(other instanceof PolicyDate)) {","lastModifiedDate":"2023-10-12"},{"lineNumber":64,"author":{"gitId":"cyaoxuan"},"content":"            return false;","lastModifiedDate":"2023-10-11"},{"lineNumber":65,"author":{"gitId":"cyaoxuan"},"content":"        }","lastModifiedDate":"2023-10-11"},{"lineNumber":66,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":67,"author":{"gitId":"cyaoxuan"},"content":"        PolicyDate otherPolicyDate \u003d (PolicyDate) other;","lastModifiedDate":"2023-10-12"},{"lineNumber":68,"author":{"gitId":"cyaoxuan"},"content":"        return date.equals(otherPolicyDate.date);","lastModifiedDate":"2023-10-12"},{"lineNumber":69,"author":{"gitId":"cyaoxuan"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":70,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":71,"author":{"gitId":"cyaoxuan"},"content":"    @Override","lastModifiedDate":"2023-10-11"},{"lineNumber":72,"author":{"gitId":"cyaoxuan"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-11"},{"lineNumber":73,"author":{"gitId":"cyaoxuan"},"content":"        return date.hashCode();","lastModifiedDate":"2023-10-11"},{"lineNumber":74,"author":{"gitId":"cyaoxuan"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":75,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":76,"author":{"gitId":"cyaoxuan"},"content":"}","lastModifiedDate":"2023-10-11"}],"authorContributionMap":{"cyaoxuan":76}},{"path":"src/main/java/seedu/address/model/policy/PolicyNumber.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cyaoxuan"},"content":"package seedu.address.model.policy;","lastModifiedDate":"2023-10-11"},{"lineNumber":2,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":3,"author":{"gitId":"cyaoxuan"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-11"},{"lineNumber":4,"author":{"gitId":"cyaoxuan"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-10-11"},{"lineNumber":5,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":6,"author":{"gitId":"cyaoxuan"},"content":"/**","lastModifiedDate":"2023-10-11"},{"lineNumber":7,"author":{"gitId":"cyaoxuan"},"content":" * Represents a car insurance policy number in the address book.","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"cyaoxuan"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidPolicyNumber(String)}","lastModifiedDate":"2023-10-11"},{"lineNumber":9,"author":{"gitId":"cyaoxuan"},"content":" */","lastModifiedDate":"2023-10-11"},{"lineNumber":10,"author":{"gitId":"cyaoxuan"},"content":"public class PolicyNumber {","lastModifiedDate":"2023-10-11"},{"lineNumber":11,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":12,"author":{"gitId":"cyaoxuan"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"cyaoxuan"},"content":"            \"Policy numbers should be an alphanumeric string with 1-8 characters\";","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":15,"author":{"gitId":"cyaoxuan"},"content":"    /*","lastModifiedDate":"2023-10-11"},{"lineNumber":16,"author":{"gitId":"cyaoxuan"},"content":"     * Should be an alphanumeric string with 1-8 characters","lastModifiedDate":"2023-10-11"},{"lineNumber":17,"author":{"gitId":"cyaoxuan"},"content":"     */","lastModifiedDate":"2023-10-11"},{"lineNumber":18,"author":{"gitId":"cyaoxuan"},"content":"    public static final String VALIDATION_REGEX \u003d \"^[a-zA-Z0-9]{1,8}$\";","lastModifiedDate":"2023-10-11"},{"lineNumber":19,"author":{"gitId":"cyaoxuan"},"content":"    public static final String DEFAULT_VALUE \u003d \"NOPOLICY\";","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":21,"author":{"gitId":"cyaoxuan"},"content":"    public final String value;","lastModifiedDate":"2023-10-11"},{"lineNumber":22,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":23,"author":{"gitId":"cyaoxuan"},"content":"    /**","lastModifiedDate":"2023-10-11"},{"lineNumber":24,"author":{"gitId":"cyaoxuan"},"content":"     * Constructs a {@code PolicyNumber}.","lastModifiedDate":"2023-10-11"},{"lineNumber":25,"author":{"gitId":"cyaoxuan"},"content":"     *","lastModifiedDate":"2023-10-11"},{"lineNumber":26,"author":{"gitId":"cyaoxuan"},"content":"     * @param policyNumber A valid policy number.","lastModifiedDate":"2023-10-11"},{"lineNumber":27,"author":{"gitId":"cyaoxuan"},"content":"     */","lastModifiedDate":"2023-10-11"},{"lineNumber":28,"author":{"gitId":"cyaoxuan"},"content":"    public PolicyNumber(String policyNumber) {","lastModifiedDate":"2023-10-11"},{"lineNumber":29,"author":{"gitId":"cyaoxuan"},"content":"        requireNonNull(policyNumber);","lastModifiedDate":"2023-10-11"},{"lineNumber":30,"author":{"gitId":"cyaoxuan"},"content":"        checkArgument(isValidPolicyNumber(policyNumber), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-11"},{"lineNumber":31,"author":{"gitId":"cyaoxuan"},"content":"        value \u003d policyNumber;","lastModifiedDate":"2023-10-11"},{"lineNumber":32,"author":{"gitId":"cyaoxuan"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":33,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":34,"author":{"gitId":"cyaoxuan"},"content":"    /**","lastModifiedDate":"2023-10-11"},{"lineNumber":35,"author":{"gitId":"cyaoxuan"},"content":"     * Returns true if a given string is a valid policy number.","lastModifiedDate":"2023-10-11"},{"lineNumber":36,"author":{"gitId":"cyaoxuan"},"content":"     */","lastModifiedDate":"2023-10-11"},{"lineNumber":37,"author":{"gitId":"cyaoxuan"},"content":"    public static boolean isValidPolicyNumber(String test) {","lastModifiedDate":"2023-10-11"},{"lineNumber":38,"author":{"gitId":"cyaoxuan"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-10-11"},{"lineNumber":39,"author":{"gitId":"cyaoxuan"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":40,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":41,"author":{"gitId":"cyaoxuan"},"content":"    @Override","lastModifiedDate":"2023-10-11"},{"lineNumber":42,"author":{"gitId":"cyaoxuan"},"content":"    public String toString() {","lastModifiedDate":"2023-10-11"},{"lineNumber":43,"author":{"gitId":"cyaoxuan"},"content":"        return value;","lastModifiedDate":"2023-10-11"},{"lineNumber":44,"author":{"gitId":"cyaoxuan"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":45,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":46,"author":{"gitId":"cyaoxuan"},"content":"    @Override","lastModifiedDate":"2023-10-11"},{"lineNumber":47,"author":{"gitId":"cyaoxuan"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-11"},{"lineNumber":48,"author":{"gitId":"cyaoxuan"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-11"},{"lineNumber":49,"author":{"gitId":"cyaoxuan"},"content":"            return true;","lastModifiedDate":"2023-10-11"},{"lineNumber":50,"author":{"gitId":"cyaoxuan"},"content":"        }","lastModifiedDate":"2023-10-11"},{"lineNumber":51,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":52,"author":{"gitId":"cyaoxuan"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-11"},{"lineNumber":53,"author":{"gitId":"cyaoxuan"},"content":"        if (!(other instanceof PolicyNumber)) {","lastModifiedDate":"2023-10-11"},{"lineNumber":54,"author":{"gitId":"cyaoxuan"},"content":"            return false;","lastModifiedDate":"2023-10-11"},{"lineNumber":55,"author":{"gitId":"cyaoxuan"},"content":"        }","lastModifiedDate":"2023-10-11"},{"lineNumber":56,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":57,"author":{"gitId":"cyaoxuan"},"content":"        PolicyNumber otherPolicyNumber \u003d (PolicyNumber) other;","lastModifiedDate":"2023-10-11"},{"lineNumber":58,"author":{"gitId":"cyaoxuan"},"content":"        return value.equals(otherPolicyNumber.value);","lastModifiedDate":"2023-10-11"},{"lineNumber":59,"author":{"gitId":"cyaoxuan"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":60,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":61,"author":{"gitId":"cyaoxuan"},"content":"    @Override","lastModifiedDate":"2023-10-11"},{"lineNumber":62,"author":{"gitId":"cyaoxuan"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-11"},{"lineNumber":63,"author":{"gitId":"cyaoxuan"},"content":"        return value.hashCode();","lastModifiedDate":"2023-10-11"},{"lineNumber":64,"author":{"gitId":"cyaoxuan"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":65,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":66,"author":{"gitId":"cyaoxuan"},"content":"}","lastModifiedDate":"2023-10-11"}],"authorContributionMap":{"cyaoxuan":66}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2016-12-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-20"},{"lineNumber":11,"author":{"gitId":"cyaoxuan"},"content":"import seedu.address.model.person.LicencePlate;","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-20"},{"lineNumber":13,"author":{"gitId":"cyaoxuan"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-20"},{"lineNumber":16,"author":{"gitId":"cyaoxuan"},"content":"import seedu.address.model.policy.Policy;","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"cyaoxuan"},"content":"import seedu.address.model.policy.PolicyDate;","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"cyaoxuan"},"content":"import seedu.address.model.policy.PolicyNumber;","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static Person[] getSamplePersons() {","lastModifiedDate":"2016-12-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        return new Person[] {","lastModifiedDate":"2016-12-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Alex Yeoh\"), new Phone(\"87438807\"), new Email(\"alexyeoh@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"                new Address(\"Blk 30 Geylang Street 29, #06-40\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":29,"author":{"gitId":"cyaoxuan"},"content":"                getTagSet(\"friends\"), new Nric(\"023A\"), new LicencePlate(\"SNB9538E\"),","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"cyaoxuan"},"content":"                new Policy(new PolicyNumber(\"A1231X\"), new PolicyDate(\"01-01-2023\"), new PolicyDate(\"01-01-2024\"))),","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Bernice Yu\"), new Phone(\"99272758\"), new Email(\"berniceyu@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                new Address(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":33,"author":{"gitId":"cyaoxuan"},"content":"                getTagSet(\"colleagues\", \"friends\"), new Nric(\"362D\"), new LicencePlate(\"SLR5E\"),","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"cyaoxuan"},"content":"                new Policy(new PolicyNumber(\"B3425\"), new PolicyDate(\"01-01-2020\"), new PolicyDate(\"01-01-2030\"))),","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Charlotte Oliveiro\"), new Phone(\"93210283\"), new Email(\"charlotte@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                new Address(\"Blk 11 Ang Mo Kio Street 74, #11-04\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":37,"author":{"gitId":"cyaoxuan"},"content":"                getTagSet(\"neighbours\"), new Nric(\"743G\"), new LicencePlate(\"SBA1234A\"),","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"cyaoxuan"},"content":"                new Policy(new PolicyNumber(\"B3425\"), new PolicyDate(\"20-12-2020\"), new PolicyDate(\"01-01-2030\"))),","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            new Person(new Name(\"David Li\"), new Phone(\"91031282\"), new Email(\"lidavid@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                new Address(\"Blk 436 Serangoon Gardens Street 26, #16-43\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":41,"author":{"gitId":"cyaoxuan"},"content":"                getTagSet(\"family\"), new Nric(\"362D\"), new LicencePlate(\"SDN5345A\"),","lastModifiedDate":"2023-10-13"},{"lineNumber":42,"author":{"gitId":"cyaoxuan"},"content":"                    new Policy(new PolicyNumber(PolicyNumber.DEFAULT_VALUE),","lastModifiedDate":"2023-10-13"},{"lineNumber":43,"author":{"gitId":"cyaoxuan"},"content":"                            new PolicyDate(PolicyDate.DEFAULT_VALUE), new PolicyDate(PolicyDate.DEFAULT_VALUE))),","lastModifiedDate":"2023-10-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Irfan Ibrahim\"), new Phone(\"92492021\"), new Email(\"irfan@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                new Address(\"Blk 47 Tampines Street 20, #17-35\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":46,"author":{"gitId":"cyaoxuan"},"content":"                getTagSet(\"classmates\"), new Nric(\"752X\"), new LicencePlate(\"SBP8888T\"),","lastModifiedDate":"2023-10-13"},{"lineNumber":47,"author":{"gitId":"cyaoxuan"},"content":"                    new Policy(new PolicyNumber(PolicyNumber.DEFAULT_VALUE),","lastModifiedDate":"2023-10-13"},{"lineNumber":48,"author":{"gitId":"cyaoxuan"},"content":"                            new PolicyDate(PolicyDate.DEFAULT_VALUE), new PolicyDate(PolicyDate.DEFAULT_VALUE))),","lastModifiedDate":"2023-10-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Roy Balakrishnan\"), new Phone(\"92624417\"), new Email(\"royb@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                new Address(\"Blk 45 Aljunied Street 85, #11-31\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":51,"author":{"gitId":"cyaoxuan"},"content":"                getTagSet(\"colleagues\"), new Nric(\"764J\"), new LicencePlate(\"SJD6453Y\"),","lastModifiedDate":"2023-10-13"},{"lineNumber":52,"author":{"gitId":"cyaoxuan"},"content":"                    new Policy(new PolicyNumber(PolicyNumber.DEFAULT_VALUE),","lastModifiedDate":"2023-10-13"},{"lineNumber":53,"author":{"gitId":"cyaoxuan"},"content":"                            new PolicyDate(PolicyDate.DEFAULT_VALUE), new PolicyDate(PolicyDate.DEFAULT_VALUE)))","lastModifiedDate":"2023-10-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static ReadOnlyAddressBook getSampleAddressBook() {","lastModifiedDate":"2016-12-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        AddressBook sampleAb \u003d new AddressBook();","lastModifiedDate":"2017-04-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        for (Person samplePerson : getSamplePersons()) {","lastModifiedDate":"2016-12-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            sampleAb.addPerson(samplePerson);","lastModifiedDate":"2017-04-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"-":54,"cyaoxuan":20}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedPerson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"cyaoxuan"},"content":"import seedu.address.model.person.LicencePlate;","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"cyaoxuan"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"cyaoxuan"},"content":"import seedu.address.model.policy.Policy;","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"cyaoxuan"},"content":"import seedu.address.model.policy.PolicyDate;","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"cyaoxuan"},"content":"import seedu.address.model.policy.PolicyNumber;","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Person}.","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"class JsonAdaptedPerson {","lastModifiedDate":"2018-12-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Person\u0027s %s field is missing!\";","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private final String address;","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedTag\u003e tags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-09"},{"lineNumber":37,"author":{"gitId":"cyaoxuan"},"content":"    private final String nric;","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"cyaoxuan"},"content":"    private final String licencePlate;","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"cyaoxuan"},"content":"    private final String policyNumber;","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"cyaoxuan"},"content":"    private final String policyIssueDate;","lastModifiedDate":"2023-10-13"},{"lineNumber":41,"author":{"gitId":"cyaoxuan"},"content":"    private final String policyExpiryDate;","lastModifiedDate":"2023-10-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            @JsonProperty(\"email\") String email, @JsonProperty(\"address\") String address,","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"cyaoxuan"},"content":"            @JsonProperty(\"tags\") List\u003cJsonAdaptedTag\u003e tags, @JsonProperty(\"nric\") String nric,","lastModifiedDate":"2023-10-13"},{"lineNumber":50,"author":{"gitId":"cyaoxuan"},"content":"            @JsonProperty(\"licencePlate\") String licencePlate, @JsonProperty(\"policyNumber\") String policyNumber,","lastModifiedDate":"2023-10-13"},{"lineNumber":51,"author":{"gitId":"cyaoxuan"},"content":"            @JsonProperty(\"policyIssueDate\") String policyIssueDate,","lastModifiedDate":"2023-10-13"},{"lineNumber":52,"author":{"gitId":"cyaoxuan"},"content":"            @JsonProperty(\"policyExpiryDate\") String policyExpiryDate) {","lastModifiedDate":"2023-10-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        if (tags !\u003d null) {","lastModifiedDate":"2023-01-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            this.tags.addAll(tags);","lastModifiedDate":"2023-01-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"cyaoxuan"},"content":"        this.nric \u003d nric;","lastModifiedDate":"2023-10-13"},{"lineNumber":61,"author":{"gitId":"cyaoxuan"},"content":"        this.licencePlate \u003d licencePlate;","lastModifiedDate":"2023-10-13"},{"lineNumber":62,"author":{"gitId":"cyaoxuan"},"content":"        this.policyNumber \u003d policyNumber;","lastModifiedDate":"2023-10-13"},{"lineNumber":63,"author":{"gitId":"cyaoxuan"},"content":"        this.policyIssueDate \u003d policyIssueDate;","lastModifiedDate":"2023-10-13"},{"lineNumber":64,"author":{"gitId":"cyaoxuan"},"content":"        this.policyExpiryDate \u003d policyExpiryDate;","lastModifiedDate":"2023-10-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * Converts a given {@code Person} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(Person source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        address \u003d source.getAddress().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        tags.addAll(source.getTags().stream()","lastModifiedDate":"2023-01-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"cyaoxuan"},"content":"        nric \u003d source.getNric().value;","lastModifiedDate":"2023-10-13"},{"lineNumber":79,"author":{"gitId":"cyaoxuan"},"content":"        licencePlate \u003d source.getLicencePlate().value;","lastModifiedDate":"2023-10-13"},{"lineNumber":80,"author":{"gitId":"cyaoxuan"},"content":"        Policy sourcePolicy \u003d source.getPolicy();","lastModifiedDate":"2023-10-13"},{"lineNumber":81,"author":{"gitId":"cyaoxuan"},"content":"        policyNumber \u003d sourcePolicy.getPolicyNumber().value;","lastModifiedDate":"2023-10-13"},{"lineNumber":82,"author":{"gitId":"cyaoxuan"},"content":"        policyIssueDate \u003d sourcePolicy.getPolicyIssueDate().toString();","lastModifiedDate":"2023-10-13"},{"lineNumber":83,"author":{"gitId":"cyaoxuan"},"content":"        policyExpiryDate \u003d sourcePolicy.getPolicyExpiryDate().toString();","lastModifiedDate":"2023-10-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Person} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public Person toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        final List\u003cTag\u003e personTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        for (JsonAdaptedTag tag : tags) {","lastModifiedDate":"2023-01-09"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            personTags.add(tag.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2018-08-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        if (address \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(address)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        final Address modelAddress \u003d new Address(address);","lastModifiedDate":"2018-08-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(personTags);","lastModifiedDate":"2018-08-13"},{"lineNumber":130,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":131,"author":{"gitId":"cyaoxuan"},"content":"        if (nric \u003d\u003d null) {","lastModifiedDate":"2023-10-13"},{"lineNumber":132,"author":{"gitId":"cyaoxuan"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Nric.class.getSimpleName()));","lastModifiedDate":"2023-10-13"},{"lineNumber":133,"author":{"gitId":"cyaoxuan"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":134,"author":{"gitId":"cyaoxuan"},"content":"        if (!Nric.isValidNric(nric)) {","lastModifiedDate":"2023-10-13"},{"lineNumber":135,"author":{"gitId":"cyaoxuan"},"content":"            throw new IllegalValueException(Nric.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-13"},{"lineNumber":136,"author":{"gitId":"cyaoxuan"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":137,"author":{"gitId":"cyaoxuan"},"content":"        final Nric modelNric \u003d new Nric(nric);","lastModifiedDate":"2023-10-13"},{"lineNumber":138,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":139,"author":{"gitId":"cyaoxuan"},"content":"        if (licencePlate \u003d\u003d null) {","lastModifiedDate":"2023-10-13"},{"lineNumber":140,"author":{"gitId":"cyaoxuan"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2023-10-13"},{"lineNumber":141,"author":{"gitId":"cyaoxuan"},"content":"                    LicencePlate.class.getSimpleName()));","lastModifiedDate":"2023-10-13"},{"lineNumber":142,"author":{"gitId":"cyaoxuan"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":143,"author":{"gitId":"cyaoxuan"},"content":"        if (!LicencePlate.isValidLicencePlate(licencePlate)) {","lastModifiedDate":"2023-10-13"},{"lineNumber":144,"author":{"gitId":"cyaoxuan"},"content":"            System.out.println(LicencePlate.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-13"},{"lineNumber":145,"author":{"gitId":"cyaoxuan"},"content":"            throw new IllegalValueException(LicencePlate.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-13"},{"lineNumber":146,"author":{"gitId":"cyaoxuan"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":147,"author":{"gitId":"cyaoxuan"},"content":"        final LicencePlate modelLicencePlate \u003d new LicencePlate(licencePlate);","lastModifiedDate":"2023-10-13"},{"lineNumber":148,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":149,"author":{"gitId":"cyaoxuan"},"content":"        // Policy fields","lastModifiedDate":"2023-10-13"},{"lineNumber":150,"author":{"gitId":"cyaoxuan"},"content":"        if (policyNumber \u003d\u003d null) {","lastModifiedDate":"2023-10-13"},{"lineNumber":151,"author":{"gitId":"cyaoxuan"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2023-10-13"},{"lineNumber":152,"author":{"gitId":"cyaoxuan"},"content":"                    PolicyNumber.class.getSimpleName()));","lastModifiedDate":"2023-10-13"},{"lineNumber":153,"author":{"gitId":"cyaoxuan"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":154,"author":{"gitId":"cyaoxuan"},"content":"        if (!PolicyNumber.isValidPolicyNumber(policyNumber)) {","lastModifiedDate":"2023-10-13"},{"lineNumber":155,"author":{"gitId":"cyaoxuan"},"content":"            throw new IllegalValueException(PolicyNumber.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-13"},{"lineNumber":156,"author":{"gitId":"cyaoxuan"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":157,"author":{"gitId":"cyaoxuan"},"content":"        final PolicyNumber modelPolicyNumber \u003d new PolicyNumber(policyNumber);","lastModifiedDate":"2023-10-13"},{"lineNumber":158,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":159,"author":{"gitId":"cyaoxuan"},"content":"        if (policyIssueDate \u003d\u003d null) {","lastModifiedDate":"2023-10-13"},{"lineNumber":160,"author":{"gitId":"cyaoxuan"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2023-10-13"},{"lineNumber":161,"author":{"gitId":"cyaoxuan"},"content":"                    PolicyDate.class.getSimpleName()));","lastModifiedDate":"2023-10-13"},{"lineNumber":162,"author":{"gitId":"cyaoxuan"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":163,"author":{"gitId":"cyaoxuan"},"content":"        if (!PolicyDate.isValidPolicyDate(policyIssueDate)) {","lastModifiedDate":"2023-10-13"},{"lineNumber":164,"author":{"gitId":"cyaoxuan"},"content":"            throw new IllegalValueException(PolicyDate.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-13"},{"lineNumber":165,"author":{"gitId":"cyaoxuan"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":166,"author":{"gitId":"cyaoxuan"},"content":"        final PolicyDate modelPolicyIssueDate \u003d new PolicyDate(policyIssueDate);","lastModifiedDate":"2023-10-13"},{"lineNumber":167,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":168,"author":{"gitId":"cyaoxuan"},"content":"        if (policyExpiryDate \u003d\u003d null) {","lastModifiedDate":"2023-10-13"},{"lineNumber":169,"author":{"gitId":"cyaoxuan"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2023-10-13"},{"lineNumber":170,"author":{"gitId":"cyaoxuan"},"content":"                    PolicyDate.class.getSimpleName()));","lastModifiedDate":"2023-10-13"},{"lineNumber":171,"author":{"gitId":"cyaoxuan"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":172,"author":{"gitId":"cyaoxuan"},"content":"        if (!PolicyDate.isValidPolicyDate(policyExpiryDate)) {","lastModifiedDate":"2023-10-13"},{"lineNumber":173,"author":{"gitId":"cyaoxuan"},"content":"            throw new IllegalValueException(PolicyDate.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-13"},{"lineNumber":174,"author":{"gitId":"cyaoxuan"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":175,"author":{"gitId":"cyaoxuan"},"content":"        final PolicyDate modelPolicyExpiryDate \u003d new PolicyDate(policyExpiryDate);","lastModifiedDate":"2023-10-13"},{"lineNumber":176,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":177,"author":{"gitId":"cyaoxuan"},"content":"        final Policy modelPolicy \u003d new Policy(modelPolicyNumber, modelPolicyIssueDate, modelPolicyExpiryDate);","lastModifiedDate":"2023-10-13"},{"lineNumber":178,"author":{"gitId":"cyaoxuan"},"content":"        return new Person(modelName, modelPhone, modelEmail, modelAddress, modelTags,","lastModifiedDate":"2023-10-13"},{"lineNumber":179,"author":{"gitId":"cyaoxuan"},"content":"                modelNric, modelLicencePlate, modelPolicy);","lastModifiedDate":"2023-10-13"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":182,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"-":107,"cyaoxuan":75}},{"path":"src/main/java/seedu/address/ui/PersonCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * An UI component that displays information of a {@code Person}.","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class PersonCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListCard.fxml\";","lastModifiedDate":"2016-09-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public final Person person;","lastModifiedDate":"2018-01-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private Label address;","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private Label email;","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2016-12-18"},{"lineNumber":43,"author":{"gitId":"brendanneojw"},"content":"    @FXML","lastModifiedDate":"2023-10-13"},{"lineNumber":44,"author":{"gitId":"brendanneojw"},"content":"    private Label nric;","lastModifiedDate":"2023-10-13"},{"lineNumber":45,"author":{"gitId":"brendanneojw"},"content":"    @FXML","lastModifiedDate":"2023-10-13"},{"lineNumber":46,"author":{"gitId":"brendanneojw"},"content":"    private Label licencePlate;","lastModifiedDate":"2023-10-13"},{"lineNumber":47,"author":{"gitId":"brendanneojw"},"content":"    @FXML","lastModifiedDate":"2023-10-13"},{"lineNumber":48,"author":{"gitId":"brendanneojw"},"content":"    private Label policy;","lastModifiedDate":"2023-10-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2020-05-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2018-01-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        this.person \u003d person;","lastModifiedDate":"2017-07-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        name.setText(person.getName().fullName);","lastModifiedDate":"2017-12-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        phone.setText(person.getPhone().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        address.setText(person.getAddress().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        email.setText(person.getEmail().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":61,"author":{"gitId":"brendanneojw"},"content":"        nric.setText(person.getNric().value);","lastModifiedDate":"2023-10-13"},{"lineNumber":62,"author":{"gitId":"brendanneojw"},"content":"        licencePlate.setText(person.getLicencePlate().value);","lastModifiedDate":"2023-10-13"},{"lineNumber":63,"author":{"gitId":"brendanneojw"},"content":"        policy.setText(person.getPolicy().toDisplay(true));","lastModifiedDate":"2023-10-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        person.getTags().stream()","lastModifiedDate":"2019-01-02"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2019-01-02"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2019-01-02"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"brendanneojw":9,"-":59}},{"path":"src/main/resources/view/PersonListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-07-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"      \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"brendanneojw"},"content":"      \u003cLabel fx:id\u003d\"nric\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$nric\" /\u003e","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"brendanneojw"},"content":"      \u003cLabel fx:id\u003d\"licencePlate\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$licensePlate\" /\u003e","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"brendanneojw"},"content":"      \u003cLabel fx:id\u003d\"policy\" styleClass\u003d\"cell_small_label\" text\u003d\"\\${policy}\" /\u003e","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"brendanneojw":3,"-":36}},{"path":"src/test/java/seedu/address/commons/util/StringUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class StringUtilTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    //---------------- Tests for isNonZeroUnsignedInteger --------------------------------------","lastModifiedDate":"2019-02-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void isNonZeroUnsignedInteger() {","lastModifiedDate":"2019-02-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        // EP: empty strings","lastModifiedDate":"2016-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"  \"));","lastModifiedDate":"2017-06-02"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // EP: not a number","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"a\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"aaa\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // EP: zero","lastModifiedDate":"2016-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"0\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // EP: zero as prefix","lastModifiedDate":"2017-06-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"01\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // EP: signed numbers","lastModifiedDate":"2016-10-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"-1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"+1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // EP: numbers with white space","lastModifiedDate":"2016-10-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\" 10 \")); // Leading/trailing spaces","lastModifiedDate":"2017-06-02"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"1 0\")); // Spaces in the middle","lastModifiedDate":"2017-06-02"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // EP: number larger than Integer.MAX_VALUE","lastModifiedDate":"2017-06-02"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2017-06-02"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // EP: valid numbers, should return true","lastModifiedDate":"2016-10-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"1\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"10\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    //---------------- Tests for containsWordIgnoreCase --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for word: null, empty, multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for sentence: null","lastModifiedDate":"2016-10-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * The four test cases below test one invalid input at a time.","lastModifiedDate":"2016-10-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullWord_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", null));","lastModifiedDate":"2019-03-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_emptyWord_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter cannot be empty\", ()","lastModifiedDate":"2019-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"  \"));","lastModifiedDate":"2019-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullSentence_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(null, \"abc\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for word:","lastModifiedDate":"2016-10-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     *   - any word","lastModifiedDate":"2016-10-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     *   - word containing symbols/numbers","lastModifiedDate":"2016-10-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     *   - word with leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for sentence:","lastModifiedDate":"2016-10-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     *   - empty string","lastModifiedDate":"2016-10-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     *   - one word","lastModifiedDate":"2016-10-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *   - multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     *   - sentence with extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Possible scenarios returning true:","lastModifiedDate":"2016-10-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     *   - matches first word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     *   - last word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     *   - middle word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     *   - matches multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Possible scenarios returning false:","lastModifiedDate":"2016-10-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     *   - query word matches part of a sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     *   - sentence word matches part of the query word","lastModifiedDate":"2016-10-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * The test method below tries to verify all above with a reasonably low number of test cases.","lastModifiedDate":"2016-10-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_validInputs_correctResult() {","lastModifiedDate":"2016-10-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        // Empty sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"\", \"abc\")); // Boundary case","lastModifiedDate":"2016-10-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"    \", \"123\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        // Matches a partial word only","lastModifiedDate":"2016-10-13"},{"lineNumber":106,"author":{"gitId":"brendanneojw"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\",","lastModifiedDate":"2023-10-13"},{"lineNumber":107,"author":{"gitId":"brendanneojw"},"content":"                \"aaa bb ccc\")); // Sentence word bigger than query word","lastModifiedDate":"2023-10-13"},{"lineNumber":108,"author":{"gitId":"brendanneojw"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\",","lastModifiedDate":"2023-10-13"},{"lineNumber":109,"author":{"gitId":"brendanneojw"},"content":"                \"aaa bbbb ccc\")); // Query word bigger than sentence word","lastModifiedDate":"2023-10-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // Matches word in the sentence, different upper/lower case letters","lastModifiedDate":"2016-10-13"},{"lineNumber":112,"author":{"gitId":"brendanneojw"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc\", \"aaa Bbb ccc\")); // First word (boundary case)","lastModifiedDate":"2023-10-13"},{"lineNumber":113,"author":{"gitId":"brendanneojw"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc@1\", \"aaa bBb CCc@1\")); // Last word (boundary case)","lastModifiedDate":"2023-10-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"Aaa\", \"aaa\")); // Only one word in sentence (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":115,"author":{"gitId":"brendanneojw"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"   aaa bbb ccc  \")); // Leading/trailing spaces","lastModifiedDate":"2023-10-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    //---------------- Tests for getDetails --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * Equivalence Partitions: null, valid throwable object","lastModifiedDate":"2016-10-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public void getDetails_exceptionGiven() {","lastModifiedDate":"2016-09-30"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.getDetails(new FileNotFoundException(\"file not found\"))","lastModifiedDate":"2019-03-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            .contains(\"java.io.FileNotFoundException: file not found\"));","lastModifiedDate":"2019-03-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public void getDetails_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.getDetails(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":135,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"brendanneojw":7,"-":128}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.nio.file.AccessDeniedException;","lastModifiedDate":"2023-06-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2017-01-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2016-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy IO exception\");","lastModifiedDate":"2023-06-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_AD_EXCEPTION \u003d new AccessDeniedException(\"dummy access denied exception\");","lastModifiedDate":"2023-06-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        String deleteCommand \u003d \"delete 9\";","lastModifiedDate":"2017-06-14"},{"lineNumber":63,"author":{"gitId":"RSXIX"},"content":"        assertCommandException(deleteCommand, Messages.MESSAGE_NOT_FOUND_INDEX);","lastModifiedDate":"2023-10-17"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2017-06-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2017-06-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":72,"author":{"gitId":"cyaoxuan"},"content":"    /*","lastModifiedDate":"2023-10-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2023-10-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertCommandFailureForExceptionFromStorage(DUMMY_IO_EXCEPTION, String.format(","lastModifiedDate":"2023-10-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                LogicManager.FILE_OPS_ERROR_FORMAT, DUMMY_IO_EXCEPTION.getMessage()));","lastModifiedDate":"2023-10-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsAdException_throwsCommandException() {","lastModifiedDate":"2023-10-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertCommandFailureForExceptionFromStorage(DUMMY_AD_EXCEPTION, String.format(","lastModifiedDate":"2023-10-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                LogicManager.FILE_OPS_PERMISSION_ERROR_FORMAT, DUMMY_AD_EXCEPTION.getMessage()));","lastModifiedDate":"2023-10-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":84,"author":{"gitId":"cyaoxuan"},"content":"    */","lastModifiedDate":"2023-10-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-05-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     * Tests the Logic component\u0027s handling of an {@code IOException} thrown by the Storage component.","lastModifiedDate":"2023-06-13"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-06-13"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     * @param e the exception to be thrown by the Storage component","lastModifiedDate":"2023-06-13"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     * @param expectedMessage the message expected inside exception thrown by the Logic component","lastModifiedDate":"2023-06-13"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    private void assertCommandFailureForExceptionFromStorage(IOException e, String expectedMessage) {","lastModifiedDate":"2023-06-13"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        Path prefPath \u003d temporaryFolder.resolve(\"ExceptionUserPrefs.json\");","lastModifiedDate":"2023-06-13"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        // Inject LogicManager with an AddressBookStorage that throws the IOException e when saving","lastModifiedDate":"2023-06-13"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(prefPath) {","lastModifiedDate":"2023-06-13"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath)","lastModifiedDate":"2023-06-13"},{"lineNumber":157,"author":{"gitId":"-"},"content":"                    throws IOException {","lastModifiedDate":"2023-06-13"},{"lineNumber":158,"author":{"gitId":"-"},"content":"                throw e;","lastModifiedDate":"2023-06-13"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2023-06-13"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2023-06-13"},{"lineNumber":163,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ExceptionUserPrefs.json\"));","lastModifiedDate":"2023-06-13"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2023-06-13"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2023-06-13"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        // Triggers the saveAddressBook method by executing an add command","lastModifiedDate":"2023-06-13"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        String addCommand \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY","lastModifiedDate":"2023-06-13"},{"lineNumber":170,"author":{"gitId":"-"},"content":"                + EMAIL_DESC_AMY + ADDRESS_DESC_AMY;","lastModifiedDate":"2023-06-13"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2023-06-13"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2023-06-13"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(expectedPerson);","lastModifiedDate":"2023-06-13"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2023-06-13"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":176,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"RSXIX":1,"-":173,"cyaoxuan":2}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"KumChaiYin"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LICENCE_PLATE;","lastModifiedDate":"2023-10-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"KumChaiYin"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NRIC;","lastModifiedDate":"2023-10-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"KumChaiYin"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_POLICY_EXPIRY_DATE;","lastModifiedDate":"2023-10-19"},{"lineNumber":12,"author":{"gitId":"KumChaiYin"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_POLICY_ISSUE_DATE;","lastModifiedDate":"2023-10-19"},{"lineNumber":13,"author":{"gitId":"KumChaiYin"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_POLICY_NUMBER;","lastModifiedDate":"2023-10-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2018-01-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-06-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-07-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-07-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_AMY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2017-07-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_BOB \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2017-07-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2017-07-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2017-07-05"},{"lineNumber":43,"author":{"gitId":"KumChaiYin"},"content":"    public static final String VALID_NRIC_AMY \u003d \"567A\";","lastModifiedDate":"2023-10-19"},{"lineNumber":44,"author":{"gitId":"cyaoxuan"},"content":"    public static final String VALID_NRIC_BOB \u003d \"123Z\";","lastModifiedDate":"2023-10-13"},{"lineNumber":45,"author":{"gitId":"KumChaiYin"},"content":"    public static final String VALID_LICENCE_PLATE_AMY \u003d \"SBC123D\";","lastModifiedDate":"2023-10-19"},{"lineNumber":46,"author":{"gitId":"cyaoxuan"},"content":"    public static final String VALID_LICENCE_PLATE_BOB \u003d \"SYZ4321Z\";","lastModifiedDate":"2023-10-13"},{"lineNumber":47,"author":{"gitId":"KumChaiYin"},"content":"    public static final String VALID_POLICY_NO_AMY \u003d \"AIA1234\";","lastModifiedDate":"2023-10-19"},{"lineNumber":48,"author":{"gitId":"cyaoxuan"},"content":"    public static final String VALID_POLICY_NO_BOB \u003d \"BBBB2\";","lastModifiedDate":"2023-10-13"},{"lineNumber":49,"author":{"gitId":"cyaoxuan"},"content":"    public static final String VALID_POLICY_ISSUE_DATE_AMY \u003d \"01-01-2023\";","lastModifiedDate":"2023-10-13"},{"lineNumber":50,"author":{"gitId":"cyaoxuan"},"content":"    public static final String VALID_POLICY_ISSUE_DATE_BOB \u003d \"01-01-2013\";","lastModifiedDate":"2023-10-13"},{"lineNumber":51,"author":{"gitId":"cyaoxuan"},"content":"    public static final String VALID_POLICY_EXPIRY_DATE_AMY \u003d \"01-01-2030\";","lastModifiedDate":"2023-10-13"},{"lineNumber":52,"author":{"gitId":"cyaoxuan"},"content":"    public static final String VALID_POLICY_EXPIRY_DATE_BOB \u003d \"01-01-2025\";","lastModifiedDate":"2023-10-13"},{"lineNumber":53,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":61,"author":{"gitId":"KumChaiYin"},"content":"    public static final String NRIC_DESC_AMY \u003d \" \" + PREFIX_NRIC + VALID_NRIC_AMY;","lastModifiedDate":"2023-10-19"},{"lineNumber":62,"author":{"gitId":"KumChaiYin"},"content":"    public static final String NRIC_DESC_BOB \u003d \" \" + PREFIX_NRIC + VALID_NRIC_BOB;","lastModifiedDate":"2023-10-19"},{"lineNumber":63,"author":{"gitId":"KumChaiYin"},"content":"    public static final String LICENSE_PLATE_DESC_AMY \u003d \" \" + PREFIX_LICENCE_PLATE + VALID_LICENCE_PLATE_AMY;","lastModifiedDate":"2023-10-19"},{"lineNumber":64,"author":{"gitId":"KumChaiYin"},"content":"    public static final String LICENSE_PLATE_DESC_BOB \u003d \" \" + PREFIX_LICENCE_PLATE + VALID_LICENCE_PLATE_BOB;","lastModifiedDate":"2023-10-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_AMY \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_BOB \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":69,"author":{"gitId":"KumChaiYin"},"content":"    public static final String POLICY_NO_DESC_AMY \u003d \" \" + PREFIX_POLICY_NUMBER + VALID_POLICY_NO_AMY;","lastModifiedDate":"2023-10-19"},{"lineNumber":70,"author":{"gitId":"KumChaiYin"},"content":"    public static final String POLICY_NO_DESC_BOB \u003d \" \" + PREFIX_POLICY_NUMBER + VALID_POLICY_NO_BOB;","lastModifiedDate":"2023-10-19"},{"lineNumber":71,"author":{"gitId":"KumChaiYin"},"content":"    public static final String POLICY_ISSUE_DATE_DESC_AMY \u003d \" \" + PREFIX_POLICY_ISSUE_DATE","lastModifiedDate":"2023-10-19"},{"lineNumber":72,"author":{"gitId":"KumChaiYin"},"content":"            + VALID_POLICY_ISSUE_DATE_AMY;","lastModifiedDate":"2023-10-19"},{"lineNumber":73,"author":{"gitId":"KumChaiYin"},"content":"    public static final String POLICY_ISSUE_DATE_DESC_BOB \u003d \" \" + PREFIX_POLICY_ISSUE_DATE","lastModifiedDate":"2023-10-19"},{"lineNumber":74,"author":{"gitId":"KumChaiYin"},"content":"            + VALID_POLICY_ISSUE_DATE_BOB;","lastModifiedDate":"2023-10-19"},{"lineNumber":75,"author":{"gitId":"KumChaiYin"},"content":"    public static final String POLICY_EXPIRY_DATE_DESC_AMY \u003d \" \" + PREFIX_POLICY_EXPIRY_DATE","lastModifiedDate":"2023-10-19"},{"lineNumber":76,"author":{"gitId":"KumChaiYin"},"content":"            + VALID_POLICY_EXPIRY_DATE_AMY;","lastModifiedDate":"2023-10-19"},{"lineNumber":77,"author":{"gitId":"KumChaiYin"},"content":"    public static final String POLICY_EXPIRY_DATE_DESC_BOB \u003d \" \" + PREFIX_POLICY_EXPIRY_DATE","lastModifiedDate":"2023-10-19"},{"lineNumber":78,"author":{"gitId":"KumChaiYin"},"content":"            + VALID_POLICY_EXPIRY_DATE_BOB;","lastModifiedDate":"2023-10-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public static final String INVALID_ADDRESS_DESC \u003d \" \" + PREFIX_ADDRESS; // empty string not allowed for addresses","lastModifiedDate":"2017-07-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2017-07-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        DESC_AMY \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":93,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":94,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        DESC_BOB \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":97,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":121,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * - the address book, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2019-01-25"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPersonList());","lastModifiedDate":"2018-01-10"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredPersonList());","lastModifiedDate":"2017-06-05"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2018-01-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    public static void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2018-01-31"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPersonList().size());","lastModifiedDate":"2018-01-31"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        Person person \u003d model.getFilteredPersonList().get(targetIndex.getZeroBased());","lastModifiedDate":"2018-01-31"},{"lineNumber":150,"author":{"gitId":"brendanneojw"},"content":"        model.updateFilteredPersonList(new NameContainsKeywordsPredicate(person.getName().fullName));","lastModifiedDate":"2023-10-18"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        assertEquals(1, model.getFilteredPersonList().size());","lastModifiedDate":"2018-02-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":155,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"brendanneojw":1,"KumChaiYin":22,"-":124,"cyaoxuan":8}},{"path":"src/test/java/seedu/address/logic/commands/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2018-01-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS,","lastModifiedDate":"2019-02-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                Messages.format(personToDelete));","lastModifiedDate":"2019-02-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-06-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":49,"author":{"gitId":"RSXIX"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_NOT_FOUND_INDEX);","lastModifiedDate":"2023-10-17"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS,","lastModifiedDate":"2019-02-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                Messages.format(personToDelete));","lastModifiedDate":"2019-02-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        showNoPerson(expectedModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-06-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-06-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-06-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":79,"author":{"gitId":"RSXIX"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_NOT_FOUND_INDEX);","lastModifiedDate":"2023-10-17"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        DeleteCommand deleteFirstCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        DeleteCommand deleteSecondCommand \u003d new DeleteCommand(INDEX_SECOND_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        DeleteCommand deleteFirstCommandCopy \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2019-02-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(targetIndex);","lastModifiedDate":"2019-02-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        String expected \u003d DeleteCommand.class.getCanonicalName() + \"{targetIndex\u003d\" + targetIndex + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertEquals(expected, deleteCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2017-06-05"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    private void showNoPerson(Model model) {","lastModifiedDate":"2017-06-05"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(p -\u003e false);","lastModifiedDate":"2017-06-12"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertTrue(model.getFilteredPersonList().isEmpty());","lastModifiedDate":"2018-02-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":120,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"RSXIX":2,"-":118}},{"path":"src/test/java/seedu/address/logic/commands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-05-04"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-04"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2020-12-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class EditCommandTest {","lastModifiedDate":"2017-05-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":33,"author":{"gitId":"cyaoxuan"},"content":"    /*","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(editedPerson).build();","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, descriptor);","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson));","lastModifiedDate":"2023-10-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2023-10-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2023-10-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2023-10-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2023-10-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Person lastPerson \u003d model.getFilteredPersonList().get(indexLastPerson.getZeroBased());","lastModifiedDate":"2023-10-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        PersonBuilder personInList \u003d new PersonBuilder(lastPerson);","lastModifiedDate":"2023-10-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d personInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2023-10-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2023-10-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2023-10-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2023-10-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(indexLastPerson, descriptor);","lastModifiedDate":"2023-10-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson));","lastModifiedDate":"2023-10-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2023-10-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(lastPerson, editedPerson);","lastModifiedDate":"2023-10-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2023-10-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, new EditPersonDescriptor());","lastModifiedDate":"2023-10-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-10-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson));","lastModifiedDate":"2023-10-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2023-10-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2023-10-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        Person personInFilteredList \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-10-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder(personInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2023-10-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2023-10-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2023-10-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson));","lastModifiedDate":"2023-10-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2023-10-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2023-10-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":97,"author":{"gitId":"cyaoxuan"},"content":"    */","lastModifiedDate":"2023-10-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(firstPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_SECOND_PERSON, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        // edit person in filtered list into a duplicate in address book","lastModifiedDate":"2017-05-18"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder(personInList).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-05-18"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-22"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2017-05-18"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * but smaller than size of address book","lastModifiedDate":"2017-05-18"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-18"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-05-18"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex,","lastModifiedDate":"2018-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        final EditCommand standardCommand \u003d new EditCommand(INDEX_FIRST_PERSON, DESC_AMY);","lastModifiedDate":"2018-08-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        EditPersonDescriptor copyDescriptor \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        EditCommand commandWithSameValues \u003d new EditCommand(INDEX_FIRST_PERSON, copyDescriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2017-05-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_SECOND_PERSON, DESC_AMY)));","lastModifiedDate":"2017-05-25"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_FIRST_PERSON, DESC_BOB)));","lastModifiedDate":"2017-05-25"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        Index index \u003d Index.fromOneBased(1);","lastModifiedDate":"2019-02-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2019-02-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(index, editPersonDescriptor);","lastModifiedDate":"2019-02-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        String expected \u003d EditCommand.class.getCanonicalName() + \"{index\u003d\" + index + \", editPersonDescriptor\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"                + editPersonDescriptor + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        assertEquals(expected, editCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"-":179,"cyaoxuan":2}},{"path":"src/test/java/seedu/address/logic/commands/EditPersonDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorTest {","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptorWithSameValues \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(DESC_AMY));","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(null));","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(5));","lastModifiedDate":"2017-05-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(DESC_BOB));","lastModifiedDate":"2017-05-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2019-02-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        String expected \u003d EditPersonDescriptor.class.getCanonicalName() + \"{name\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                + editPersonDescriptor.getName().orElse(null) + \", phone\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                + editPersonDescriptor.getPhone().orElse(null) + \", email\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                + editPersonDescriptor.getEmail().orElse(null) + \", address\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                + editPersonDescriptor.getAddress().orElse(null) + \", tags\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":68,"author":{"gitId":"suryanshkushwaha"},"content":"                + editPersonDescriptor.getTags().orElse(null) + \", nric\u003d\"","lastModifiedDate":"2023-10-17"},{"lineNumber":69,"author":{"gitId":"suryanshkushwaha"},"content":"                + editPersonDescriptor.getNric().orElse(null) + \", licencePlate\u003d\"","lastModifiedDate":"2023-10-17"},{"lineNumber":70,"author":{"gitId":"suryanshkushwaha"},"content":"                + editPersonDescriptor.getLicencePlate().orElse(null) + \", policy\u003d\"","lastModifiedDate":"2023-10-17"},{"lineNumber":71,"author":{"gitId":"suryanshkushwaha"},"content":"                + editPersonDescriptor.getPolicy() + \"}\";","lastModifiedDate":"2023-10-17"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertEquals(expected, editPersonDescriptor.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"suryanshkushwaha":4,"-":70}},{"path":"src/test/java/seedu/address/logic/commands/FindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_PERSONS_LISTED_OVERVIEW;","lastModifiedDate":"2023-07-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"brendanneojw"},"content":"import seedu.address.model.person.EmailContainsKeywordsPredicate;","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"brendanneojw"},"content":"import seedu.address.model.person.LicenceContainsKeywordsPredicate;","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"brendanneojw"},"content":"import seedu.address.model.person.NricContainsKeywordsPredicate;","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"brendanneojw"},"content":"import seedu.address.model.person.PhoneContainsKeywordsPredicate;","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"brendanneojw"},"content":"import seedu.address.model.person.PolicyExpiryContainsKeywordsPredicate;","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"brendanneojw"},"content":"import seedu.address.model.person.PolicyIssueContainsKeywordsPredicate;","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"brendanneojw"},"content":"import seedu.address.model.person.PolicyNumberContainsKeywordsPredicate;","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"brendanneojw"},"content":"import seedu.address.model.person.TagContainsKeywordsPredicate;","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class FindCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2018-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-27"},{"lineNumber":36,"author":{"gitId":"brendanneojw"},"content":"        NameContainsKeywordsPredicate firstNamePredicate \u003d","lastModifiedDate":"2023-10-18"},{"lineNumber":37,"author":{"gitId":"brendanneojw"},"content":"                new NameContainsKeywordsPredicate(\"first\");","lastModifiedDate":"2023-10-18"},{"lineNumber":38,"author":{"gitId":"brendanneojw"},"content":"        NameContainsKeywordsPredicate secondNamePredicate \u003d","lastModifiedDate":"2023-10-18"},{"lineNumber":39,"author":{"gitId":"brendanneojw"},"content":"                new NameContainsKeywordsPredicate(\"second\");","lastModifiedDate":"2023-10-18"},{"lineNumber":40,"author":{"gitId":"brendanneojw"},"content":"        LicenceContainsKeywordsPredicate firstLicencePredicate \u003d","lastModifiedDate":"2023-10-18"},{"lineNumber":41,"author":{"gitId":"brendanneojw"},"content":"                new LicenceContainsKeywordsPredicate(\"SAA1A\");","lastModifiedDate":"2023-10-18"},{"lineNumber":42,"author":{"gitId":"brendanneojw"},"content":"        LicenceContainsKeywordsPredicate secondLicencePredicate \u003d","lastModifiedDate":"2023-10-18"},{"lineNumber":43,"author":{"gitId":"brendanneojw"},"content":"                new LicenceContainsKeywordsPredicate(\"SAA1B\");","lastModifiedDate":"2023-10-18"},{"lineNumber":44,"author":{"gitId":"brendanneojw"},"content":"        NricContainsKeywordsPredicate firstNricPredicate \u003d","lastModifiedDate":"2023-10-18"},{"lineNumber":45,"author":{"gitId":"brendanneojw"},"content":"                new NricContainsKeywordsPredicate(\"000A\");","lastModifiedDate":"2023-10-18"},{"lineNumber":46,"author":{"gitId":"brendanneojw"},"content":"        NricContainsKeywordsPredicate secondNricPredicate \u003d","lastModifiedDate":"2023-10-18"},{"lineNumber":47,"author":{"gitId":"brendanneojw"},"content":"                new NricContainsKeywordsPredicate(\"000B\");","lastModifiedDate":"2023-10-18"},{"lineNumber":48,"author":{"gitId":"brendanneojw"},"content":"        PhoneContainsKeywordsPredicate firstPhonePredicate \u003d","lastModifiedDate":"2023-10-18"},{"lineNumber":49,"author":{"gitId":"brendanneojw"},"content":"                new PhoneContainsKeywordsPredicate(\"12345678\");","lastModifiedDate":"2023-10-18"},{"lineNumber":50,"author":{"gitId":"brendanneojw"},"content":"        PhoneContainsKeywordsPredicate secondPhonePredicate \u003d","lastModifiedDate":"2023-10-18"},{"lineNumber":51,"author":{"gitId":"brendanneojw"},"content":"                new PhoneContainsKeywordsPredicate(\"87654321\");","lastModifiedDate":"2023-10-18"},{"lineNumber":52,"author":{"gitId":"brendanneojw"},"content":"        PolicyNumberContainsKeywordsPredicate firstPolicyNumPredicate \u003d","lastModifiedDate":"2023-10-18"},{"lineNumber":53,"author":{"gitId":"brendanneojw"},"content":"                new PolicyNumberContainsKeywordsPredicate(\"A1234\");","lastModifiedDate":"2023-10-18"},{"lineNumber":54,"author":{"gitId":"brendanneojw"},"content":"        PolicyNumberContainsKeywordsPredicate secondPolicyNumPredicate \u003d","lastModifiedDate":"2023-10-18"},{"lineNumber":55,"author":{"gitId":"brendanneojw"},"content":"                new PolicyNumberContainsKeywordsPredicate(\"B4321\");","lastModifiedDate":"2023-10-18"},{"lineNumber":56,"author":{"gitId":"brendanneojw"},"content":"        TagContainsKeywordsPredicate firstTagPredicate \u003d","lastModifiedDate":"2023-10-18"},{"lineNumber":57,"author":{"gitId":"brendanneojw"},"content":"                new TagContainsKeywordsPredicate(\"friends\");","lastModifiedDate":"2023-10-18"},{"lineNumber":58,"author":{"gitId":"brendanneojw"},"content":"        TagContainsKeywordsPredicate secondTagPredicate \u003d","lastModifiedDate":"2023-10-18"},{"lineNumber":59,"author":{"gitId":"brendanneojw"},"content":"                new TagContainsKeywordsPredicate(\"colleagues\");","lastModifiedDate":"2023-10-18"},{"lineNumber":60,"author":{"gitId":"brendanneojw"},"content":"        PolicyExpiryContainsKeywordsPredicate firstPolicyExpiryPredicate \u003d","lastModifiedDate":"2023-10-18"},{"lineNumber":61,"author":{"gitId":"brendanneojw"},"content":"                new PolicyExpiryContainsKeywordsPredicate(\"25-12-2023\");","lastModifiedDate":"2023-10-18"},{"lineNumber":62,"author":{"gitId":"brendanneojw"},"content":"        PolicyExpiryContainsKeywordsPredicate secondPolicyExpiryPredicate \u003d","lastModifiedDate":"2023-10-18"},{"lineNumber":63,"author":{"gitId":"brendanneojw"},"content":"                new PolicyExpiryContainsKeywordsPredicate(\"14-02-2023\");","lastModifiedDate":"2023-10-18"},{"lineNumber":64,"author":{"gitId":"brendanneojw"},"content":"        EmailContainsKeywordsPredicate firstEmailPredicate \u003d","lastModifiedDate":"2023-10-18"},{"lineNumber":65,"author":{"gitId":"brendanneojw"},"content":"                new EmailContainsKeywordsPredicate(\"weewooowaa@example.com\");","lastModifiedDate":"2023-10-18"},{"lineNumber":66,"author":{"gitId":"brendanneojw"},"content":"        EmailContainsKeywordsPredicate secondEmailPredicate \u003d","lastModifiedDate":"2023-10-18"},{"lineNumber":67,"author":{"gitId":"brendanneojw"},"content":"                new EmailContainsKeywordsPredicate(\"heehoohaa@example.com\");","lastModifiedDate":"2023-10-18"},{"lineNumber":68,"author":{"gitId":"brendanneojw"},"content":"        PolicyIssueContainsKeywordsPredicate firstPolicyIssuePredicate \u003d","lastModifiedDate":"2023-10-18"},{"lineNumber":69,"author":{"gitId":"brendanneojw"},"content":"                new PolicyIssueContainsKeywordsPredicate(\"12-12-2022\");","lastModifiedDate":"2023-10-18"},{"lineNumber":70,"author":{"gitId":"brendanneojw"},"content":"        PolicyIssueContainsKeywordsPredicate secondPolicyIssuePredicate \u003d","lastModifiedDate":"2023-10-18"},{"lineNumber":71,"author":{"gitId":"brendanneojw"},"content":"                new PolicyIssueContainsKeywordsPredicate(\"11-11-2022\");","lastModifiedDate":"2023-10-18"},{"lineNumber":72,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":73,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":74,"author":{"gitId":"brendanneojw"},"content":"        FindCommand findFirstCommand \u003d new FindCommand(firstNamePredicate, firstLicencePredicate,","lastModifiedDate":"2023-10-18"},{"lineNumber":75,"author":{"gitId":"brendanneojw"},"content":"                firstNricPredicate, firstPhonePredicate, firstPolicyNumPredicate, firstTagPredicate,","lastModifiedDate":"2023-10-18"},{"lineNumber":76,"author":{"gitId":"brendanneojw"},"content":"                firstPolicyExpiryPredicate, firstEmailPredicate, firstPolicyIssuePredicate);","lastModifiedDate":"2023-10-18"},{"lineNumber":77,"author":{"gitId":"brendanneojw"},"content":"        FindCommand findSecondCommand \u003d new FindCommand(secondNamePredicate, secondLicencePredicate,","lastModifiedDate":"2023-10-18"},{"lineNumber":78,"author":{"gitId":"brendanneojw"},"content":"                secondNricPredicate, secondPhonePredicate, secondPolicyNumPredicate, secondTagPredicate,","lastModifiedDate":"2023-10-18"},{"lineNumber":79,"author":{"gitId":"brendanneojw"},"content":"                secondPolicyExpiryPredicate, secondEmailPredicate, secondPolicyIssuePredicate);","lastModifiedDate":"2023-10-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"brendanneojw"},"content":"        FindCommand findFirstCommandCopy \u003d new FindCommand(firstNamePredicate, firstLicencePredicate,","lastModifiedDate":"2023-10-18"},{"lineNumber":86,"author":{"gitId":"brendanneojw"},"content":"                firstNricPredicate, firstPhonePredicate, firstPolicyNumPredicate, firstTagPredicate,","lastModifiedDate":"2023-10-18"},{"lineNumber":87,"author":{"gitId":"brendanneojw"},"content":"                firstPolicyExpiryPredicate, firstEmailPredicate, firstPolicyIssuePredicate);","lastModifiedDate":"2023-10-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":101,"author":{"gitId":"brendanneojw"},"content":"    public void execute_noMatchingKeywords_noPersonFound() {","lastModifiedDate":"2023-10-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2017-06-12"},{"lineNumber":103,"author":{"gitId":"brendanneojw"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(\"test\");","lastModifiedDate":"2023-10-18"},{"lineNumber":104,"author":{"gitId":"brendanneojw"},"content":"        LicenceContainsKeywordsPredicate licencePredicate \u003d","lastModifiedDate":"2023-10-18"},{"lineNumber":105,"author":{"gitId":"brendanneojw"},"content":"                new LicenceContainsKeywordsPredicate(\"SAA1B\");","lastModifiedDate":"2023-10-18"},{"lineNumber":106,"author":{"gitId":"brendanneojw"},"content":"        NricContainsKeywordsPredicate nricPredicate \u003d","lastModifiedDate":"2023-10-18"},{"lineNumber":107,"author":{"gitId":"brendanneojw"},"content":"                new NricContainsKeywordsPredicate(\"000A\");","lastModifiedDate":"2023-10-18"},{"lineNumber":108,"author":{"gitId":"brendanneojw"},"content":"        PhoneContainsKeywordsPredicate phonePredicate \u003d","lastModifiedDate":"2023-10-18"},{"lineNumber":109,"author":{"gitId":"brendanneojw"},"content":"                new PhoneContainsKeywordsPredicate(\"12345678\");","lastModifiedDate":"2023-10-18"},{"lineNumber":110,"author":{"gitId":"brendanneojw"},"content":"        PolicyNumberContainsKeywordsPredicate policyNumPredicate \u003d","lastModifiedDate":"2023-10-18"},{"lineNumber":111,"author":{"gitId":"brendanneojw"},"content":"                new PolicyNumberContainsKeywordsPredicate(\"A1234\");","lastModifiedDate":"2023-10-18"},{"lineNumber":112,"author":{"gitId":"brendanneojw"},"content":"        TagContainsKeywordsPredicate tagPredicate \u003d","lastModifiedDate":"2023-10-18"},{"lineNumber":113,"author":{"gitId":"brendanneojw"},"content":"                new TagContainsKeywordsPredicate(\"friends\");","lastModifiedDate":"2023-10-18"},{"lineNumber":114,"author":{"gitId":"brendanneojw"},"content":"        PolicyExpiryContainsKeywordsPredicate policyExpiryPredicate \u003d","lastModifiedDate":"2023-10-18"},{"lineNumber":115,"author":{"gitId":"brendanneojw"},"content":"                new PolicyExpiryContainsKeywordsPredicate(\"25-12-2023\");","lastModifiedDate":"2023-10-18"},{"lineNumber":116,"author":{"gitId":"brendanneojw"},"content":"        EmailContainsKeywordsPredicate emailPredicate \u003d","lastModifiedDate":"2023-10-18"},{"lineNumber":117,"author":{"gitId":"brendanneojw"},"content":"                new EmailContainsKeywordsPredicate(\"weewooowaa@example.com\");","lastModifiedDate":"2023-10-18"},{"lineNumber":118,"author":{"gitId":"brendanneojw"},"content":"        PolicyIssueContainsKeywordsPredicate policyIssuePredicate \u003d","lastModifiedDate":"2023-10-18"},{"lineNumber":119,"author":{"gitId":"brendanneojw"},"content":"                new PolicyIssueContainsKeywordsPredicate(\"12-12-2022\");","lastModifiedDate":"2023-10-18"},{"lineNumber":120,"author":{"gitId":"brendanneojw"},"content":"        FindCommand command \u003d new FindCommand(predicate, licencePredicate, nricPredicate, phonePredicate,","lastModifiedDate":"2023-10-18"},{"lineNumber":121,"author":{"gitId":"brendanneojw"},"content":"                policyNumPredicate, tagPredicate, policyExpiryPredicate, emailPredicate, policyIssuePredicate);","lastModifiedDate":"2023-10-18"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":129,"author":{"gitId":"brendanneojw"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(\"keyword\");","lastModifiedDate":"2023-10-18"},{"lineNumber":130,"author":{"gitId":"brendanneojw"},"content":"        LicenceContainsKeywordsPredicate licencePredicate \u003d","lastModifiedDate":"2023-10-18"},{"lineNumber":131,"author":{"gitId":"brendanneojw"},"content":"                new LicenceContainsKeywordsPredicate(\"SAA1B\");","lastModifiedDate":"2023-10-18"},{"lineNumber":132,"author":{"gitId":"brendanneojw"},"content":"        NricContainsKeywordsPredicate nricPredicate \u003d","lastModifiedDate":"2023-10-18"},{"lineNumber":133,"author":{"gitId":"brendanneojw"},"content":"                new NricContainsKeywordsPredicate(\"000A\");","lastModifiedDate":"2023-10-18"},{"lineNumber":134,"author":{"gitId":"brendanneojw"},"content":"        PhoneContainsKeywordsPredicate phonePredicate \u003d","lastModifiedDate":"2023-10-18"},{"lineNumber":135,"author":{"gitId":"brendanneojw"},"content":"                new PhoneContainsKeywordsPredicate(\"12345678\");","lastModifiedDate":"2023-10-18"},{"lineNumber":136,"author":{"gitId":"brendanneojw"},"content":"        PolicyNumberContainsKeywordsPredicate policyNumPredicate \u003d","lastModifiedDate":"2023-10-18"},{"lineNumber":137,"author":{"gitId":"brendanneojw"},"content":"                new PolicyNumberContainsKeywordsPredicate(\"A1234\");","lastModifiedDate":"2023-10-18"},{"lineNumber":138,"author":{"gitId":"brendanneojw"},"content":"        TagContainsKeywordsPredicate tagPredicate \u003d","lastModifiedDate":"2023-10-18"},{"lineNumber":139,"author":{"gitId":"brendanneojw"},"content":"                new TagContainsKeywordsPredicate(\"friends\");","lastModifiedDate":"2023-10-18"},{"lineNumber":140,"author":{"gitId":"brendanneojw"},"content":"        PolicyExpiryContainsKeywordsPredicate policyExpiryPredicate \u003d","lastModifiedDate":"2023-10-18"},{"lineNumber":141,"author":{"gitId":"brendanneojw"},"content":"                new PolicyExpiryContainsKeywordsPredicate(\"25-12-2023\");","lastModifiedDate":"2023-10-18"},{"lineNumber":142,"author":{"gitId":"brendanneojw"},"content":"        EmailContainsKeywordsPredicate emailPredicate \u003d","lastModifiedDate":"2023-10-18"},{"lineNumber":143,"author":{"gitId":"brendanneojw"},"content":"                new EmailContainsKeywordsPredicate(\"weewooowaa@example.com\");","lastModifiedDate":"2023-10-18"},{"lineNumber":144,"author":{"gitId":"brendanneojw"},"content":"        PolicyIssueContainsKeywordsPredicate policyIssuePredicate \u003d","lastModifiedDate":"2023-10-18"},{"lineNumber":145,"author":{"gitId":"brendanneojw"},"content":"                new PolicyIssueContainsKeywordsPredicate(\"12-12-2022\");","lastModifiedDate":"2023-10-18"},{"lineNumber":146,"author":{"gitId":"brendanneojw"},"content":"        FindCommand findCommand \u003d new FindCommand(predicate, licencePredicate, nricPredicate, phonePredicate,","lastModifiedDate":"2023-10-18"},{"lineNumber":147,"author":{"gitId":"brendanneojw"},"content":"                policyNumPredicate, tagPredicate, policyExpiryPredicate, emailPredicate, policyIssuePredicate);","lastModifiedDate":"2023-10-18"},{"lineNumber":148,"author":{"gitId":"brendanneojw"},"content":"        String expected \u003d FindCommand.class.getCanonicalName() + \"{name predicate\u003d\" + predicate","lastModifiedDate":"2023-10-13"},{"lineNumber":149,"author":{"gitId":"brendanneojw"},"content":"                + \", licence predicate\u003d\" + licencePredicate + \", nric predicate\u003d\" + nricPredicate","lastModifiedDate":"2023-10-18"},{"lineNumber":150,"author":{"gitId":"brendanneojw"},"content":"                + \", phone predicate\u003d\" + phonePredicate + \", policy number predicate\u003d\" + policyNumPredicate","lastModifiedDate":"2023-10-18"},{"lineNumber":151,"author":{"gitId":"brendanneojw"},"content":"                + \", tag predicate\u003d\" + tagPredicate + \", policy expiry predicate\u003d\" + policyExpiryPredicate","lastModifiedDate":"2023-10-18"},{"lineNumber":152,"author":{"gitId":"brendanneojw"},"content":"                + \", email predicate\u003d\" + emailPredicate + \", policy issue predicate\u003d\" + policyIssuePredicate + \"}\";","lastModifiedDate":"2023-10-18"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertEquals(expected, findCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-12"},{"lineNumber":157,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2018-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-12"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    private NameContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2018-08-08"},{"lineNumber":160,"author":{"gitId":"brendanneojw"},"content":"        return new NameContainsKeywordsPredicate(userInput);","lastModifiedDate":"2023-10-18"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":162,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"brendanneojw":100,"-":62}},{"path":"src/test/java/seedu/address/logic/parser/AddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"KumChaiYin"},"content":"import static seedu.address.logic.commands.CommandTestUtil.LICENSE_PLATE_DESC_AMY;","lastModifiedDate":"2023-10-19"},{"lineNumber":14,"author":{"gitId":"KumChaiYin"},"content":"import static seedu.address.logic.commands.CommandTestUtil.LICENSE_PLATE_DESC_BOB;","lastModifiedDate":"2023-10-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":17,"author":{"gitId":"KumChaiYin"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NRIC_DESC_AMY;","lastModifiedDate":"2023-10-19"},{"lineNumber":18,"author":{"gitId":"KumChaiYin"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NRIC_DESC_BOB;","lastModifiedDate":"2023-10-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":21,"author":{"gitId":"KumChaiYin"},"content":"import static seedu.address.logic.commands.CommandTestUtil.POLICY_EXPIRY_DATE_DESC_AMY;","lastModifiedDate":"2023-10-19"},{"lineNumber":22,"author":{"gitId":"KumChaiYin"},"content":"import static seedu.address.logic.commands.CommandTestUtil.POLICY_EXPIRY_DATE_DESC_BOB;","lastModifiedDate":"2023-10-19"},{"lineNumber":23,"author":{"gitId":"KumChaiYin"},"content":"import static seedu.address.logic.commands.CommandTestUtil.POLICY_ISSUE_DATE_DESC_AMY;","lastModifiedDate":"2023-10-19"},{"lineNumber":24,"author":{"gitId":"KumChaiYin"},"content":"import static seedu.address.logic.commands.CommandTestUtil.POLICY_ISSUE_DATE_DESC_BOB;","lastModifiedDate":"2023-10-19"},{"lineNumber":25,"author":{"gitId":"KumChaiYin"},"content":"import static seedu.address.logic.commands.CommandTestUtil.POLICY_NO_DESC_AMY;","lastModifiedDate":"2023-10-19"},{"lineNumber":26,"author":{"gitId":"KumChaiYin"},"content":"import static seedu.address.logic.commands.CommandTestUtil.POLICY_NO_DESC_BOB;","lastModifiedDate":"2023-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2017-12-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-10-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-07-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-07-14"},{"lineNumber":38,"author":{"gitId":"KumChaiYin"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LICENCE_PLATE;","lastModifiedDate":"2023-10-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-07-14"},{"lineNumber":40,"author":{"gitId":"KumChaiYin"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NRIC;","lastModifiedDate":"2023-10-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-07-14"},{"lineNumber":42,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-10-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2023-10-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2023-10-19"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-06-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-06-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-06-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-06-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-06-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2023-10-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"public class AddCommandParserTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    private AddCommandParser parser \u003d new AddCommandParser();","lastModifiedDate":"2017-06-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2023-10-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2023-10-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2023-10-13"},{"lineNumber":67,"author":{"gitId":"KumChaiYin"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2023-10-19"},{"lineNumber":68,"author":{"gitId":"KumChaiYin"},"content":"                + NRIC_DESC_BOB + LICENSE_PLATE_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2023-10-19"},{"lineNumber":69,"author":{"gitId":"KumChaiYin"},"content":"                + TAG_DESC_FRIEND + POLICY_NO_DESC_BOB + POLICY_ISSUE_DATE_DESC_BOB","lastModifiedDate":"2023-10-19"},{"lineNumber":70,"author":{"gitId":"KumChaiYin"},"content":"                + POLICY_EXPIRY_DATE_DESC_BOB, new AddCommand(expectedPerson));","lastModifiedDate":"2023-10-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2023-10-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        Person expectedPersonMultipleTags \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2023-10-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2023-10-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser,","lastModifiedDate":"2023-10-13"},{"lineNumber":76,"author":{"gitId":"KumChaiYin"},"content":"                NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + NRIC_DESC_BOB","lastModifiedDate":"2023-10-19"},{"lineNumber":77,"author":{"gitId":"KumChaiYin"},"content":"                        + LICENSE_PLATE_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2023-10-19"},{"lineNumber":78,"author":{"gitId":"KumChaiYin"},"content":"                        + TAG_DESC_HUSBAND + TAG_DESC_FRIEND","lastModifiedDate":"2023-10-19"},{"lineNumber":79,"author":{"gitId":"KumChaiYin"},"content":"                        + POLICY_NO_DESC_BOB + POLICY_ISSUE_DATE_DESC_BOB + POLICY_EXPIRY_DATE_DESC_BOB,","lastModifiedDate":"2023-10-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                new AddCommand(expectedPersonMultipleTags));","lastModifiedDate":"2023-10-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-07-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void parse_repeatedNonTagValue_failure() {","lastModifiedDate":"2023-07-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        String validExpectedPersonString \u003d NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2023-07-14"},{"lineNumber":86,"author":{"gitId":"KumChaiYin"},"content":"                + NRIC_DESC_BOB + LICENSE_PLATE_DESC_BOB + ADDRESS_DESC_BOB + TAG_DESC_FRIEND;","lastModifiedDate":"2023-10-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        // multiple names","lastModifiedDate":"2023-07-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2023-07-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // multiple phones","lastModifiedDate":"2023-07-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, PHONE_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // multiple emails","lastModifiedDate":"2023-07-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, EMAIL_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_EMAIL));","lastModifiedDate":"2023-07-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // multiple addresses","lastModifiedDate":"2023-07-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, ADDRESS_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_ADDRESS));","lastModifiedDate":"2023-07-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        // multiple fields repeated","lastModifiedDate":"2023-07-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2023-07-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"                validExpectedPersonString + PHONE_DESC_AMY + EMAIL_DESC_AMY + NAME_DESC_AMY + ADDRESS_DESC_AMY","lastModifiedDate":"2023-07-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"                        + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":108,"author":{"gitId":"KumChaiYin"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME, PREFIX_ADDRESS, PREFIX_EMAIL, PREFIX_PHONE,","lastModifiedDate":"2023-10-19"},{"lineNumber":109,"author":{"gitId":"KumChaiYin"},"content":"                        PREFIX_NRIC, PREFIX_LICENCE_PLATE));","lastModifiedDate":"2023-10-19"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // invalid value followed by valid value","lastModifiedDate":"2023-07-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2023-07-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2023-07-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2023-07-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_EMAIL_DESC + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_EMAIL));","lastModifiedDate":"2023-07-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2023-07-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_PHONE_DESC + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2023-07-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_ADDRESS_DESC + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_ADDRESS));","lastModifiedDate":"2023-07-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        // valid value followed by invalid value","lastModifiedDate":"2023-07-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2023-07-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_NAME_DESC,","lastModifiedDate":"2023-07-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2023-07-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2023-07-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_EMAIL_DESC,","lastModifiedDate":"2023-07-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_EMAIL));","lastModifiedDate":"2023-07-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2023-07-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_PHONE_DESC,","lastModifiedDate":"2023-07-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2023-07-14"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_ADDRESS_DESC,","lastModifiedDate":"2023-07-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_ADDRESS));","lastModifiedDate":"2023-07-14"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2023-10-13"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        // zero tags","lastModifiedDate":"2023-10-13"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2023-10-13"},{"lineNumber":152,"author":{"gitId":"KumChaiYin"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2023-10-19"},{"lineNumber":153,"author":{"gitId":"KumChaiYin"},"content":"                        + NRIC_DESC_AMY + LICENSE_PLATE_DESC_AMY + ADDRESS_DESC_AMY","lastModifiedDate":"2023-10-19"},{"lineNumber":154,"author":{"gitId":"KumChaiYin"},"content":"                        + POLICY_NO_DESC_AMY + POLICY_ISSUE_DATE_DESC_AMY + POLICY_EXPIRY_DATE_DESC_AMY,","lastModifiedDate":"2023-10-19"},{"lineNumber":155,"author":{"gitId":"-"},"content":"                new AddCommand(expectedPerson));","lastModifiedDate":"2023-10-13"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-06-15"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        // missing phone prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + VALID_PHONE_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        // missing email prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + VALID_EMAIL_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        // missing address prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + VALID_PHONE_BOB + VALID_EMAIL_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":186,"author":{"gitId":"KumChaiYin"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + NRIC_DESC_BOB","lastModifiedDate":"2023-10-19"},{"lineNumber":187,"author":{"gitId":"KumChaiYin"},"content":"                + LICENSE_PLATE_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2023-10-19"},{"lineNumber":188,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2017-06-15"},{"lineNumber":191,"author":{"gitId":"KumChaiYin"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + INVALID_PHONE_DESC + EMAIL_DESC_BOB + NRIC_DESC_BOB","lastModifiedDate":"2023-10-19"},{"lineNumber":192,"author":{"gitId":"KumChaiYin"},"content":"                + LICENSE_PLATE_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2023-10-19"},{"lineNumber":193,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2017-06-15"},{"lineNumber":196,"author":{"gitId":"KumChaiYin"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + INVALID_EMAIL_DESC + NRIC_DESC_BOB","lastModifiedDate":"2023-10-19"},{"lineNumber":197,"author":{"gitId":"KumChaiYin"},"content":"                + LICENSE_PLATE_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2023-10-19"},{"lineNumber":198,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2017-06-15"},{"lineNumber":201,"author":{"gitId":"KumChaiYin"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + NRIC_DESC_BOB","lastModifiedDate":"2023-10-19"},{"lineNumber":202,"author":{"gitId":"KumChaiYin"},"content":"                + LICENSE_PLATE_DESC_BOB + INVALID_ADDRESS_DESC","lastModifiedDate":"2023-10-19"},{"lineNumber":203,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        // invalid tag","lastModifiedDate":"2017-06-15"},{"lineNumber":206,"author":{"gitId":"KumChaiYin"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + NRIC_DESC_BOB","lastModifiedDate":"2023-10-19"},{"lineNumber":207,"author":{"gitId":"KumChaiYin"},"content":"                + LICENSE_PLATE_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2023-10-19"},{"lineNumber":208,"author":{"gitId":"-"},"content":"                + INVALID_TAG_DESC + VALID_TAG_FRIEND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":211,"author":{"gitId":"KumChaiYin"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + NRIC_DESC_BOB","lastModifiedDate":"2023-10-19"},{"lineNumber":212,"author":{"gitId":"KumChaiYin"},"content":"                + LICENSE_PLATE_DESC_BOB + INVALID_ADDRESS_DESC,","lastModifiedDate":"2023-10-19"},{"lineNumber":213,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":216,"author":{"gitId":"KumChaiYin"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + NRIC_DESC_BOB","lastModifiedDate":"2023-10-19"},{"lineNumber":217,"author":{"gitId":"KumChaiYin"},"content":"                + LICENSE_PLATE_DESC_BOB + ADDRESS_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2023-10-19"},{"lineNumber":218,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-12-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":220,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"KumChaiYin":40,"-":180}},{"path":"src/test/java/seedu/address/logic/parser/AddressBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-06-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"brendanneojw"},"content":"import seedu.address.model.person.EmailContainsKeywordsPredicate;","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"brendanneojw"},"content":"import seedu.address.model.person.LicenceContainsKeywordsPredicate;","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"brendanneojw"},"content":"import seedu.address.model.person.NricContainsKeywordsPredicate;","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-27"},{"lineNumber":26,"author":{"gitId":"brendanneojw"},"content":"import seedu.address.model.person.PhoneContainsKeywordsPredicate;","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"brendanneojw"},"content":"import seedu.address.model.person.PolicyExpiryContainsKeywordsPredicate;","lastModifiedDate":"2023-10-18"},{"lineNumber":28,"author":{"gitId":"brendanneojw"},"content":"import seedu.address.model.person.PolicyIssueContainsKeywordsPredicate;","lastModifiedDate":"2023-10-18"},{"lineNumber":29,"author":{"gitId":"brendanneojw"},"content":"import seedu.address.model.person.PolicyNumberContainsKeywordsPredicate;","lastModifiedDate":"2023-10-18"},{"lineNumber":30,"author":{"gitId":"brendanneojw"},"content":"import seedu.address.model.person.TagContainsKeywordsPredicate;","lastModifiedDate":"2023-10-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonUtil;","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"public class AddressBookParserTest {","lastModifiedDate":"2017-07-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private final AddressBookParser parser \u003d new AddressBookParser();","lastModifiedDate":"2017-07-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"cyaoxuan"},"content":"    /*","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2023-10-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2023-10-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(PersonUtil.getAddCommand(person));","lastModifiedDate":"2023-10-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(new AddCommand(person), command);","lastModifiedDate":"2023-10-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":46,"author":{"gitId":"cyaoxuan"},"content":"    */","lastModifiedDate":"2023-10-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertEquals(new DeleteCommand(INDEX_FIRST_PERSON), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(person).build();","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                + INDEX_FIRST_PERSON.getOneBased() + \" \" + PersonUtil.getEditPersonDescriptorDetails(descriptor));","lastModifiedDate":"2018-03-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertEquals(new EditCommand(INDEX_FIRST_PERSON, descriptor), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":78,"author":{"gitId":"brendanneojw"},"content":"        String keywords \u003d \"foo bar fun\";","lastModifiedDate":"2023-10-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":80,"author":{"gitId":"brendanneojw"},"content":"                FindCommand.COMMAND_WORD + \" n/\" + keywords);","lastModifiedDate":"2023-10-18"},{"lineNumber":81,"author":{"gitId":"brendanneojw"},"content":"        assertEquals(new FindCommand(new NameContainsKeywordsPredicate(keywords),","lastModifiedDate":"2023-10-13"},{"lineNumber":82,"author":{"gitId":"brendanneojw"},"content":"                new LicenceContainsKeywordsPredicate(\"\"),","lastModifiedDate":"2023-10-18"},{"lineNumber":83,"author":{"gitId":"brendanneojw"},"content":"                new NricContainsKeywordsPredicate(\"\"),","lastModifiedDate":"2023-10-18"},{"lineNumber":84,"author":{"gitId":"brendanneojw"},"content":"                new PhoneContainsKeywordsPredicate(\"\"), new PolicyNumberContainsKeywordsPredicate(\"\"),","lastModifiedDate":"2023-10-18"},{"lineNumber":85,"author":{"gitId":"brendanneojw"},"content":"                new TagContainsKeywordsPredicate(\"\"), new PolicyExpiryContainsKeywordsPredicate(\"\"),","lastModifiedDate":"2023-10-18"},{"lineNumber":86,"author":{"gitId":"brendanneojw"},"content":"                new EmailContainsKeywordsPredicate(\"\"), new PolicyIssueContainsKeywordsPredicate(\"\")), command);","lastModifiedDate":"2023-10-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"brendanneojw":16,"-":93,"cyaoxuan":2}},{"path":"src/test/java/seedu/address/logic/parser/DeleteCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":9,"author":{"gitId":"RSXIX"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-06-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2017-06-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * outside of the DeleteCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2017-06-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * same path through the DeleteCommand, and therefore we test only one of them.","lastModifiedDate":"2017-06-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2017-06-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2017-06-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class DeleteCommandParserTest {","lastModifiedDate":"2017-06-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private DeleteCommandParser parser \u003d new DeleteCommandParser();","lastModifiedDate":"2017-06-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \"1\", new DeleteCommand(INDEX_FIRST_PERSON));","lastModifiedDate":"2017-07-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":28,"author":{"gitId":"RSXIX"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"RSXIX"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"RSXIX"},"content":"        assertParseFailure(parser, \"\", String.format(Messages.MESSAGE_MISSING_INDEX, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"RSXIX"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":36,"author":{"gitId":"RSXIX"},"content":"        assertParseFailure(parser, \"a\", String.format(Messages.MESSAGE_IMPOSSIBLE_INDEX, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"RSXIX":8,"-":30}},{"path":"src/test/java/seedu/address/logic/parser/EditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-07-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-07-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-07-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-05-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-05-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-05-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"public class EditCommandParserTest {","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private EditCommandParser parser \u003d new EditCommandParser();","lastModifiedDate":"2017-05-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2017-05-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\", EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-07-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2017-06-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2017-05-04"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2017-06-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":81,"author":{"gitId":"suryanshkushwaha"},"content":"        assertParseFailure(parser, \"1 q/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-17"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2018-09-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2018-09-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2018-09-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_ADDRESS_DESC, Address.MESSAGE_CONSTRAINTS); // invalid address","lastModifiedDate":"2018-09-22"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_TAG_DESC, Tag.MESSAGE_CONSTRAINTS); // invalid tag","lastModifiedDate":"2018-09-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // invalid phone followed by valid email","lastModifiedDate":"2017-05-04"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC + EMAIL_DESC_AMY, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code Person} being edited,","lastModifiedDate":"2017-05-04"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // parsing it together with a valid tag results in error","lastModifiedDate":"2017-05-04"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_DESC_HUSBAND + TAG_EMPTY, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_EMPTY + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_EMPTY + TAG_DESC_FRIEND + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2017-05-04"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC + INVALID_EMAIL_DESC + VALID_ADDRESS_AMY + VALID_PHONE_AMY,","lastModifiedDate":"2017-07-06"},{"lineNumber":103,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + TAG_DESC_HUSBAND","lastModifiedDate":"2017-06-06"},{"lineNumber":110,"author":{"gitId":"-"},"content":"                + EMAIL_DESC_AMY + ADDRESS_DESC_AMY + NAME_DESC_AMY + TAG_DESC_FRIEND;","lastModifiedDate":"2017-06-06"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":113,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":114,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":126,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        // name","lastModifiedDate":"2017-05-04"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        // phone","lastModifiedDate":"2017-05-04"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        // email","lastModifiedDate":"2017-05-04"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        // address","lastModifiedDate":"2017-05-04"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + ADDRESS_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withAddress(VALID_ADDRESS_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        // tags","lastModifiedDate":"2017-05-04"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + TAG_DESC_FRIEND;","lastModifiedDate":"2017-05-25"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_failure() {","lastModifiedDate":"2023-07-14"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        // More extensive testing of duplicate parameter detections is done in","lastModifiedDate":"2023-07-14"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        // AddCommandParserTest#parse_repeatedNonTagValue_failure()","lastModifiedDate":"2023-07-14"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        // valid followed by invalid","lastModifiedDate":"2023-07-14"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2023-07-14"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput, Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        // invalid followed by valid","lastModifiedDate":"2023-07-14"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + INVALID_PHONE_DESC;","lastModifiedDate":"2023-07-14"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput, Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        // mulltiple valid fields repeated","lastModifiedDate":"2023-07-14"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2023-07-14"},{"lineNumber":184,"author":{"gitId":"-"},"content":"                + TAG_DESC_FRIEND + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY + TAG_DESC_FRIEND","lastModifiedDate":"2017-05-25"},{"lineNumber":185,"author":{"gitId":"-"},"content":"                + PHONE_DESC_BOB + ADDRESS_DESC_BOB + EMAIL_DESC_BOB + TAG_DESC_HUSBAND;","lastModifiedDate":"2017-05-25"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput,","lastModifiedDate":"2023-07-14"},{"lineNumber":188,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS));","lastModifiedDate":"2023-07-14"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        // multiple invalid values","lastModifiedDate":"2023-07-14"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + INVALID_ADDRESS_DESC + INVALID_EMAIL_DESC","lastModifiedDate":"2023-07-14"},{"lineNumber":192,"author":{"gitId":"-"},"content":"                + INVALID_PHONE_DESC + INVALID_ADDRESS_DESC + INVALID_EMAIL_DESC;","lastModifiedDate":"2023-07-14"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput,","lastModifiedDate":"2023-07-14"},{"lineNumber":195,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS));","lastModifiedDate":"2023-07-14"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    public void parse_resetTags_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + TAG_EMPTY;","lastModifiedDate":"2017-05-25"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withTags().build();","lastModifiedDate":"2017-05-04"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":208,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"suryanshkushwaha":1,"-":207}},{"path":"src/test/java/seedu/address/logic/parser/FindCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":10,"author":{"gitId":"brendanneojw"},"content":"import seedu.address.model.person.EmailContainsKeywordsPredicate;","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"brendanneojw"},"content":"import seedu.address.model.person.LicenceContainsKeywordsPredicate;","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"brendanneojw"},"content":"import seedu.address.model.person.NricContainsKeywordsPredicate;","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"brendanneojw"},"content":"import seedu.address.model.person.PhoneContainsKeywordsPredicate;","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"brendanneojw"},"content":"import seedu.address.model.person.PolicyExpiryContainsKeywordsPredicate;","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"brendanneojw"},"content":"import seedu.address.model.person.PolicyIssueContainsKeywordsPredicate;","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"brendanneojw"},"content":"import seedu.address.model.person.PolicyNumberContainsKeywordsPredicate;","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"brendanneojw"},"content":"import seedu.address.model.person.TagContainsKeywordsPredicate;","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class FindCommandParserTest {","lastModifiedDate":"2017-06-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private FindCommandParser parser \u003d new FindCommandParser();","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2017-06-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-07-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsFindCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        FindCommand expectedFindCommand \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"brendanneojw"},"content":"                new FindCommand(new NameContainsKeywordsPredicate(\"Alice Bob\"),","lastModifiedDate":"2023-10-18"},{"lineNumber":34,"author":{"gitId":"brendanneojw"},"content":"                        new LicenceContainsKeywordsPredicate(\"\"), new NricContainsKeywordsPredicate(\"\"),","lastModifiedDate":"2023-10-18"},{"lineNumber":35,"author":{"gitId":"brendanneojw"},"content":"                        new PhoneContainsKeywordsPredicate(\"\"), new PolicyNumberContainsKeywordsPredicate(\"\"),","lastModifiedDate":"2023-10-18"},{"lineNumber":36,"author":{"gitId":"brendanneojw"},"content":"                        new TagContainsKeywordsPredicate(\"\"), new PolicyExpiryContainsKeywordsPredicate(\"\"),","lastModifiedDate":"2023-10-18"},{"lineNumber":37,"author":{"gitId":"brendanneojw"},"content":"                        new EmailContainsKeywordsPredicate(\"\"), new PolicyIssueContainsKeywordsPredicate(\"\"));","lastModifiedDate":"2023-10-18"},{"lineNumber":38,"author":{"gitId":"brendanneojw"},"content":"        assertParseSuccess(parser, \"find n/Alice Bob\", expectedFindCommand);","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-27"}],"authorContributionMap":{"brendanneojw":14,"-":27}},{"path":"src/test/java/seedu/address/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-05-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-05-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-05-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":15,"author":{"gitId":"RSXIX"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-05-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-05-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-05-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-05-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2017-05-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2017-05-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d \"123456\";","lastModifiedDate":"2017-05-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d \"123 Main Street #0505\";","lastModifiedDate":"2017-05-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d \"rachel@example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_1 \u003d \"friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_2 \u003d \"neighbour\";","lastModifiedDate":"2017-05-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":46,"author":{"gitId":"RSXIX"},"content":"        assertThrows(ParseException.class, Messages.MESSAGE_IMPOSSIBLE_INDEX, ()","lastModifiedDate":"2023-10-17"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":50,"author":{"gitId":"RSXIX"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":51,"author":{"gitId":"RSXIX"},"content":"    public void parseIndex_missingInput_throwsParseException() {","lastModifiedDate":"2023-10-17"},{"lineNumber":52,"author":{"gitId":"RSXIX"},"content":"        assertThrows(ParseException.class, Messages.MESSAGE_MISSING_INDEX, ()","lastModifiedDate":"2023-10-17"},{"lineNumber":53,"author":{"gitId":"RSXIX"},"content":"                -\u003e ParserUtil.parseIndex(\"\"));","lastModifiedDate":"2023-10-17"},{"lineNumber":54,"author":{"gitId":"RSXIX"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":55,"author":{"gitId":"RSXIX"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2017-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2017-05-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2019-03-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void parsePhone_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE));","lastModifiedDate":"2019-03-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-22"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_PHONE));","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public void parseAddress_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseAddress((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public void parseAddress_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseAddress(INVALID_ADDRESS));","lastModifiedDate":"2019-03-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithoutWhitespace_returnsAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-22"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(VALID_ADDRESS));","lastModifiedDate":"2017-05-30"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithWhitespace_returnsTrimmedAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        String addressWithWhitespace \u003d WHITESPACE + VALID_ADDRESS + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-30"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(addressWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public void parseEmail_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEmail((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public void parseEmail_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(INVALID_EMAIL));","lastModifiedDate":"2019-03-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-22"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(VALID_EMAIL));","lastModifiedDate":"2017-05-30"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        String emailWithWhitespace \u003d WHITESPACE + VALID_EMAIL + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-30"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(emailWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    public void parseTag_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTag(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    public void parseTag_invalidValue_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(INVALID_TAG));","lastModifiedDate":"2019-03-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(VALID_TAG_1));","lastModifiedDate":"2017-05-30"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        String tagWithWhitespace \u003d WHITESPACE + VALID_TAG_1 + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(tagWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    public void parseTags_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTags(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithInvalidTags_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, INVALID_TAG)));","lastModifiedDate":"2019-03-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    public void parseTags_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        assertTrue(ParserUtil.parseTags(Collections.emptyList()).isEmpty());","lastModifiedDate":"2017-05-22"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithValidTags_returnsTagSet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e actualTagSet \u003d ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, VALID_TAG_2));","lastModifiedDate":"2017-05-22"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e expectedTagSet \u003d new HashSet\u003cTag\u003e(Arrays.asList(new Tag(VALID_TAG_1), new Tag(VALID_TAG_2)));","lastModifiedDate":"2017-05-22"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        assertEquals(expectedTagSet, actualTagSet);","lastModifiedDate":"2017-05-22"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":202,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"RSXIX":8,"-":194}},{"path":"src/test/java/seedu/address/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2017-05-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.testutil.AddressBookBuilder;","lastModifiedDate":"2017-05-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(new AddressBook(), new AddressBook(modelManager.getAddressBook()));","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2018-12-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setAddressBookFilePath(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_validPath_setsAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        modelManager.setAddressBookFilePath(path);","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertEquals(path, modelManager.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        modelManager.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBookBuilder().withPerson(ALICE).withPerson(BENSON).build();","lastModifiedDate":"2017-07-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        AddressBook differentAddressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        modelManager \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2018-08-06"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2017-05-31"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // different addressBook -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentAddressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":119,"author":{"gitId":"brendanneojw"},"content":"        String keywords \u003d ALICE.getName().fullName;","lastModifiedDate":"2023-10-18"},{"lineNumber":120,"author":{"gitId":"brendanneojw"},"content":"        modelManager.updateFilteredPersonList(new NameContainsKeywordsPredicate(keywords));","lastModifiedDate":"2023-10-18"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        differentUserPrefs.setAddressBookFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2018-08-09"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, differentUserPrefs)));","lastModifiedDate":"2018-11-27"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"brendanneojw":2,"-":129}},{"path":"src/test/java/seedu/address/model/person/NameContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicateTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"brendanneojw"},"content":"        String firstPredicateKeyword \u003d \"first\";","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"brendanneojw"},"content":"        String secondPredicateKeyword \u003d \"first second\";","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"brendanneojw"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d new NameContainsKeywordsPredicate(firstPredicateKeyword);","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"brendanneojw"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d new NameContainsKeywordsPredicate(secondPredicateKeyword);","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"brendanneojw"},"content":"        NameContainsKeywordsPredicate firstPredicateCopy \u003d new NameContainsKeywordsPredicate(firstPredicateKeyword);","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2017-08-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // One keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"brendanneojw"},"content":"        NameContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2023-10-13"},{"lineNumber":42,"author":{"gitId":"brendanneojw"},"content":"                new NameContainsKeywordsPredicate(\"Alice Bob\");","lastModifiedDate":"2023-10-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"brendanneojw"},"content":"        // Trailing and Leading white spaces","lastModifiedDate":"2023-10-13"},{"lineNumber":46,"author":{"gitId":"brendanneojw"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(\"   Alice Bob    \");","lastModifiedDate":"2023-10-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // Mixed-case keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":50,"author":{"gitId":"brendanneojw"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(\"aLIce bOB\");","lastModifiedDate":"2023-10-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2017-08-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // Zero keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":57,"author":{"gitId":"brendanneojw"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(\"test\");","lastModifiedDate":"2023-10-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // Non-matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":61,"author":{"gitId":"brendanneojw"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(\"Carol\");","lastModifiedDate":"2023-10-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":67,"author":{"gitId":"brendanneojw"},"content":"        String keyword \u003d \"keyword1\";","lastModifiedDate":"2023-10-18"},{"lineNumber":68,"author":{"gitId":"brendanneojw"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(keyword);","lastModifiedDate":"2023-10-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":70,"author":{"gitId":"brendanneojw"},"content":"        String expected \u003d NameContainsKeywordsPredicate.class.getCanonicalName() + \"{keywords\u003d[\" + keyword + \"]}\";","lastModifiedDate":"2023-10-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertEquals(expected, predicate.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"brendanneojw":15,"-":58}},{"path":"src/test/java/seedu/address/model/person/PersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2018-03-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-04-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-04-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":17,"author":{"gitId":"cyaoxuan"},"content":"import seedu.address.model.policy.Policy;","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-03-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class PersonTest {","lastModifiedDate":"2018-03-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2018-03-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e person.getTags().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void isSamePerson() {","lastModifiedDate":"2018-04-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2020-12-18"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2020-12-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                .withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2020-12-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Person editedBob \u003d new PersonBuilder(BOB).withName(VALID_NAME_BOB.toLowerCase()).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2020-12-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_BOB + \" \";","lastModifiedDate":"2020-12-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        editedBob \u003d new PersonBuilder(BOB).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2020-12-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-04-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Person aliceCopy \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2018-04-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2018-04-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2018-04-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2018-04-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        String expected \u003d Person.class.getCanonicalName() + \"{name\u003d\" + ALICE.getName() + \", phone\u003d\" + ALICE.getPhone()","lastModifiedDate":"2019-02-23"},{"lineNumber":97,"author":{"gitId":"cyaoxuan"},"content":"                + \", email\u003d\" + ALICE.getEmail() + \", address\u003d\" + ALICE.getAddress() + \", tags\u003d\" + ALICE.getTags()","lastModifiedDate":"2023-10-13"},{"lineNumber":98,"author":{"gitId":"cyaoxuan"},"content":"                + \", nric\u003d\" + ALICE.getNric() + \", licence plate\u003d\" + ALICE.getLicencePlate() + \", policy\u003d\"","lastModifiedDate":"2023-10-13"},{"lineNumber":99,"author":{"gitId":"cyaoxuan"},"content":"                + Policy.class.getCanonicalName() + \"{policy number\u003d\" + ALICE.getPolicy().getPolicyNumber()","lastModifiedDate":"2023-10-13"},{"lineNumber":100,"author":{"gitId":"cyaoxuan"},"content":"                + \", policy issue date\u003d\" + ALICE.getPolicy().getPolicyIssueDate() + \", policy expiry date\u003d\"","lastModifiedDate":"2023-10-13"},{"lineNumber":101,"author":{"gitId":"cyaoxuan"},"content":"                + ALICE.getPolicy().getPolicyExpiryDate() + \"}}\";","lastModifiedDate":"2023-10-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertEquals(expected, ALICE.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"-":98,"cyaoxuan":6}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedPersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.storage.JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class JsonAdaptedPersonTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"cyaoxuan"},"content":"    private static final String INVALID_NRIC \u003d \"1234567A\";","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"cyaoxuan"},"content":"    private static final String INVALID_LICENCE_PLATE \u003d \"ABC123D\";","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"cyaoxuan"},"content":"    private static final String INVALID_POLICY_NUMBER \u003d \"#AIA\";","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"cyaoxuan"},"content":"    private static final String INVALID_POLICY_DATE \u003d \"01-01-23\";","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d BENSON.getAddress().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BENSON.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"cyaoxuan"},"content":"    private static final String VALID_NRIC \u003d \"567A\";","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"cyaoxuan"},"content":"    private static final String VALID_LICENCE_PLATE \u003d \"SBC123D\";","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"cyaoxuan"},"content":"    private static final String VALID_POLICY_NUMBER \u003d \"AIA1234\";","lastModifiedDate":"2023-10-13"},{"lineNumber":41,"author":{"gitId":"cyaoxuan"},"content":"    private static final String VALID_POLICY_DATE \u003d \"01-01-2023\";","lastModifiedDate":"2023-10-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(BENSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertEquals(BENSON, person.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"cyaoxuan"},"content":"                new JsonAdaptedPerson(INVALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS,","lastModifiedDate":"2023-10-13"},{"lineNumber":53,"author":{"gitId":"cyaoxuan"},"content":"                        VALID_NRIC, VALID_LICENCE_PLATE, VALID_POLICY_NUMBER, VALID_POLICY_DATE, VALID_POLICY_DATE);","lastModifiedDate":"2023-10-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"cyaoxuan"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(null, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS,","lastModifiedDate":"2023-10-13"},{"lineNumber":61,"author":{"gitId":"cyaoxuan"},"content":"                VALID_NRIC, VALID_LICENCE_PLATE, VALID_POLICY_NUMBER, VALID_POLICY_DATE, VALID_POLICY_DATE);","lastModifiedDate":"2023-10-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"cyaoxuan"},"content":"                new JsonAdaptedPerson(VALID_NAME, INVALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS,","lastModifiedDate":"2023-10-13"},{"lineNumber":70,"author":{"gitId":"cyaoxuan"},"content":"                        VALID_NRIC, VALID_LICENCE_PLATE, VALID_POLICY_NUMBER, VALID_POLICY_DATE, VALID_POLICY_DATE);","lastModifiedDate":"2023-10-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"cyaoxuan"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, null, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS,","lastModifiedDate":"2023-10-13"},{"lineNumber":78,"author":{"gitId":"cyaoxuan"},"content":"                VALID_NRIC, VALID_LICENCE_PLATE, VALID_POLICY_NUMBER, VALID_POLICY_DATE, VALID_POLICY_DATE);","lastModifiedDate":"2023-10-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"cyaoxuan"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, INVALID_EMAIL, VALID_ADDRESS, VALID_TAGS,","lastModifiedDate":"2023-10-13"},{"lineNumber":87,"author":{"gitId":"cyaoxuan"},"content":"                        VALID_NRIC, VALID_LICENCE_PLATE, VALID_POLICY_NUMBER, VALID_POLICY_DATE, VALID_POLICY_DATE);","lastModifiedDate":"2023-10-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"cyaoxuan"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, null, VALID_ADDRESS, VALID_TAGS,","lastModifiedDate":"2023-10-13"},{"lineNumber":95,"author":{"gitId":"cyaoxuan"},"content":"                VALID_NRIC, VALID_LICENCE_PLATE, VALID_POLICY_NUMBER, VALID_POLICY_DATE, VALID_POLICY_DATE);","lastModifiedDate":"2023-10-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public void toModelType_invalidAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"cyaoxuan"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, INVALID_ADDRESS, VALID_TAGS,","lastModifiedDate":"2023-10-13"},{"lineNumber":104,"author":{"gitId":"cyaoxuan"},"content":"                        VALID_NRIC, VALID_LICENCE_PLATE, VALID_POLICY_NUMBER, VALID_POLICY_DATE, VALID_POLICY_DATE);","lastModifiedDate":"2023-10-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Address.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public void toModelType_nullAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"cyaoxuan"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, null, VALID_TAGS,","lastModifiedDate":"2023-10-13"},{"lineNumber":112,"author":{"gitId":"cyaoxuan"},"content":"                VALID_NRIC, VALID_LICENCE_PLATE, VALID_POLICY_NUMBER, VALID_POLICY_DATE, VALID_POLICY_DATE);","lastModifiedDate":"2023-10-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2018-08-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":122,"author":{"gitId":"cyaoxuan"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, invalidTags,","lastModifiedDate":"2023-10-13"},{"lineNumber":123,"author":{"gitId":"cyaoxuan"},"content":"                        VALID_NRIC, VALID_LICENCE_PLATE, VALID_POLICY_NUMBER, VALID_POLICY_DATE, VALID_POLICY_DATE);","lastModifiedDate":"2023-10-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"-":101,"cyaoxuan":26}},{"path":"src/test/java/seedu/address/testutil/PersonBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-12-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-04-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-01-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-01-18"},{"lineNumber":8,"author":{"gitId":"cyaoxuan"},"content":"import seedu.address.model.person.LicencePlate;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"cyaoxuan"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-04-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-01-18"},{"lineNumber":13,"author":{"gitId":"cyaoxuan"},"content":"import seedu.address.model.policy.Policy;","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"cyaoxuan"},"content":"import seedu.address.model.policy.PolicyDate;","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"cyaoxuan"},"content":"import seedu.address.model.policy.PolicyNumber;","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-04-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2017-04-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class PersonBuilder {","lastModifiedDate":"2016-09-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2017-04-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2020-12-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_ADDRESS \u003d \"123, Jurong West Ave 6, #08-111\";","lastModifiedDate":"2017-04-05"},{"lineNumber":28,"author":{"gitId":"cyaoxuan"},"content":"    private static final String DEFAULT_NRIC \u003d \"567A\";","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"cyaoxuan"},"content":"    private static final String DEFAULT_LICENCE_PLATE \u003d \"SBC123D\";","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"cyaoxuan"},"content":"    private static final String DEFAULT_POLICY_NUMBER \u003d \"AIA1234\";","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"KumChaiYin"},"content":"    private static final String DEFAULT_POLICY_ISSUE_DATE \u003d \"01-01-2023\";","lastModifiedDate":"2023-10-19"},{"lineNumber":32,"author":{"gitId":"KumChaiYin"},"content":"    private static final String DEFAULT_POLICY_EXPIRY_DATE \u003d \"01-01-2030\";","lastModifiedDate":"2023-10-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private Address address;","lastModifiedDate":"2017-12-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-12-20"},{"lineNumber":39,"author":{"gitId":"cyaoxuan"},"content":"    private Nric nric;","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"cyaoxuan"},"content":"    private LicencePlate licencePlate;","lastModifiedDate":"2023-10-13"},{"lineNumber":41,"author":{"gitId":"cyaoxuan"},"content":"    private Policy policy;","lastModifiedDate":"2023-10-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonBuilder} with the default details.","lastModifiedDate":"2020-05-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public PersonBuilder() {","lastModifiedDate":"2017-08-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2017-12-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2017-12-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        address \u003d new Address(DEFAULT_ADDRESS);","lastModifiedDate":"2017-12-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":52,"author":{"gitId":"cyaoxuan"},"content":"        nric \u003d new Nric(DEFAULT_NRIC);","lastModifiedDate":"2023-10-13"},{"lineNumber":53,"author":{"gitId":"cyaoxuan"},"content":"        licencePlate \u003d new LicencePlate(DEFAULT_LICENCE_PLATE);","lastModifiedDate":"2023-10-13"},{"lineNumber":54,"author":{"gitId":"cyaoxuan"},"content":"        PolicyNumber policyNumber \u003d new PolicyNumber(DEFAULT_POLICY_NUMBER);","lastModifiedDate":"2023-10-13"},{"lineNumber":55,"author":{"gitId":"KumChaiYin"},"content":"        PolicyDate policyIssueDate \u003d new PolicyDate(DEFAULT_POLICY_ISSUE_DATE);","lastModifiedDate":"2023-10-19"},{"lineNumber":56,"author":{"gitId":"KumChaiYin"},"content":"        PolicyDate policyExpiryDate \u003d new PolicyDate(DEFAULT_POLICY_EXPIRY_DATE);","lastModifiedDate":"2023-10-19"},{"lineNumber":57,"author":{"gitId":"cyaoxuan"},"content":"        policy \u003d new Policy(policyNumber, policyIssueDate, policyExpiryDate);","lastModifiedDate":"2023-10-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Initializes the PersonBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2016-12-11"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public PersonBuilder(Person personToCopy) {","lastModifiedDate":"2018-01-10"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        name \u003d personToCopy.getName();","lastModifiedDate":"2017-12-20"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        phone \u003d personToCopy.getPhone();","lastModifiedDate":"2017-12-20"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        email \u003d personToCopy.getEmail();","lastModifiedDate":"2017-12-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        address \u003d personToCopy.getAddress();","lastModifiedDate":"2017-12-20"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e(personToCopy.getTags());","lastModifiedDate":"2017-12-20"},{"lineNumber":69,"author":{"gitId":"cyaoxuan"},"content":"        nric \u003d personToCopy.getNric();","lastModifiedDate":"2023-10-13"},{"lineNumber":70,"author":{"gitId":"cyaoxuan"},"content":"        licencePlate \u003d personToCopy.getLicencePlate();","lastModifiedDate":"2023-10-13"},{"lineNumber":71,"author":{"gitId":"cyaoxuan"},"content":"        policy \u003d personToCopy.getPolicy();","lastModifiedDate":"2023-10-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public PersonBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public PersonBuilder withTags(String ... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2017-12-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public PersonBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        this.address \u003d new Address(address);","lastModifiedDate":"2017-12-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public PersonBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2017-12-20"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public PersonBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2017-12-20"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":114,"author":{"gitId":"cyaoxuan"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":115,"author":{"gitId":"cyaoxuan"},"content":"     * Sets the {@code Nric} of the {@code Person} that we are building.","lastModifiedDate":"2023-10-13"},{"lineNumber":116,"author":{"gitId":"cyaoxuan"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":117,"author":{"gitId":"cyaoxuan"},"content":"    public PersonBuilder withNric(String nric) {","lastModifiedDate":"2023-10-13"},{"lineNumber":118,"author":{"gitId":"cyaoxuan"},"content":"        this.nric \u003d new Nric(nric);","lastModifiedDate":"2023-10-13"},{"lineNumber":119,"author":{"gitId":"cyaoxuan"},"content":"        return this;","lastModifiedDate":"2023-10-13"},{"lineNumber":120,"author":{"gitId":"cyaoxuan"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":121,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":122,"author":{"gitId":"cyaoxuan"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":123,"author":{"gitId":"cyaoxuan"},"content":"     * Sets the {@code LicencePlate} of the {@code Person} that we are building.","lastModifiedDate":"2023-10-13"},{"lineNumber":124,"author":{"gitId":"cyaoxuan"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":125,"author":{"gitId":"cyaoxuan"},"content":"    public PersonBuilder withLicencePlate(String licencePlate) {","lastModifiedDate":"2023-10-13"},{"lineNumber":126,"author":{"gitId":"cyaoxuan"},"content":"        this.licencePlate \u003d new LicencePlate(licencePlate);","lastModifiedDate":"2023-10-13"},{"lineNumber":127,"author":{"gitId":"cyaoxuan"},"content":"        return this;","lastModifiedDate":"2023-10-13"},{"lineNumber":128,"author":{"gitId":"cyaoxuan"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":129,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":130,"author":{"gitId":"cyaoxuan"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":131,"author":{"gitId":"cyaoxuan"},"content":"     * Sets the {@code Policy} of the {@code Person} that we are building.","lastModifiedDate":"2023-10-13"},{"lineNumber":132,"author":{"gitId":"cyaoxuan"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":133,"author":{"gitId":"cyaoxuan"},"content":"    public PersonBuilder withPolicy(String policyNumber, String policyIssueDate, String policyExpiryDate) {","lastModifiedDate":"2023-10-13"},{"lineNumber":134,"author":{"gitId":"cyaoxuan"},"content":"        this.policy \u003d new Policy(new PolicyNumber(policyNumber),","lastModifiedDate":"2023-10-13"},{"lineNumber":135,"author":{"gitId":"cyaoxuan"},"content":"                new PolicyDate(policyIssueDate), new PolicyDate(policyExpiryDate));","lastModifiedDate":"2023-10-13"},{"lineNumber":136,"author":{"gitId":"cyaoxuan"},"content":"        return this;","lastModifiedDate":"2023-10-13"},{"lineNumber":137,"author":{"gitId":"cyaoxuan"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":138,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public Person build() {","lastModifiedDate":"2017-04-05"},{"lineNumber":140,"author":{"gitId":"cyaoxuan"},"content":"        return new Person(name, phone, email, address, tags, nric, licencePlate, policy);","lastModifiedDate":"2023-10-13"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"KumChaiYin":4,"-":95,"cyaoxuan":44}},{"path":"src/test/java/seedu/address/testutil/TypicalPersons.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":7,"author":{"gitId":"KumChaiYin"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_LICENCE_PLATE_AMY;","lastModifiedDate":"2023-10-19"},{"lineNumber":8,"author":{"gitId":"KumChaiYin"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_LICENCE_PLATE_BOB;","lastModifiedDate":"2023-10-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":11,"author":{"gitId":"KumChaiYin"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NRIC_AMY;","lastModifiedDate":"2023-10-19"},{"lineNumber":12,"author":{"gitId":"KumChaiYin"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NRIC_BOB;","lastModifiedDate":"2023-10-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":15,"author":{"gitId":"KumChaiYin"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_POLICY_EXPIRY_DATE_AMY;","lastModifiedDate":"2023-10-19"},{"lineNumber":16,"author":{"gitId":"KumChaiYin"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_POLICY_EXPIRY_DATE_BOB;","lastModifiedDate":"2023-10-19"},{"lineNumber":17,"author":{"gitId":"KumChaiYin"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_POLICY_ISSUE_DATE_AMY;","lastModifiedDate":"2023-10-19"},{"lineNumber":18,"author":{"gitId":"KumChaiYin"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_POLICY_ISSUE_DATE_BOB;","lastModifiedDate":"2023-10-19"},{"lineNumber":19,"author":{"gitId":"KumChaiYin"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_POLICY_NO_AMY;","lastModifiedDate":"2023-10-19"},{"lineNumber":20,"author":{"gitId":"KumChaiYin"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_POLICY_NO_BOB;","lastModifiedDate":"2023-10-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-08-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-08-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Person} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"public class TypicalPersons {","lastModifiedDate":"2017-04-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final Person ALICE \u003d new PersonBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2018-01-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            .withAddress(\"123, Jurong West Ave 6, #08-111\").withEmail(\"alice@example.com\")","lastModifiedDate":"2017-04-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            .withPhone(\"94351253\")","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"cyaoxuan"},"content":"            .withTags(\"friends\").withNric(\"000A\").withLicencePlate(\"SBA1234A\")","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"cyaoxuan"},"content":"            .withPolicy(\"AIA1\", \"01-01-2020\", \"01-02-2020\").build();","lastModifiedDate":"2023-10-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final Person BENSON \u003d new PersonBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2018-01-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            .withAddress(\"311, Clementi Ave 2, #02-25\")","lastModifiedDate":"2017-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            .withEmail(\"johnd@example.com\").withPhone(\"98765432\")","lastModifiedDate":"2017-04-05"},{"lineNumber":44,"author":{"gitId":"cyaoxuan"},"content":"            .withTags(\"owesMoney\", \"friends\").withNric(\"001B\").withLicencePlate(\"SBA5555B\")","lastModifiedDate":"2023-10-13"},{"lineNumber":45,"author":{"gitId":"cyaoxuan"},"content":"            .withPolicy(\"AIA2\", \"12-12-2010\", \"12-12-2020\").build();","lastModifiedDate":"2023-10-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final Person CARL \u003d new PersonBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\")","lastModifiedDate":"2018-01-10"},{"lineNumber":47,"author":{"gitId":"cyaoxuan"},"content":"            .withEmail(\"heinz@example.com\").withAddress(\"wall street\").withNric(\"123C\").withLicencePlate(\"SLR8E\")","lastModifiedDate":"2023-10-13"},{"lineNumber":48,"author":{"gitId":"cyaoxuan"},"content":"            .withPolicy(\"5734534X\", \"31-12-2019\", \"01-01-2020\").build();","lastModifiedDate":"2023-10-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final Person DANIEL \u003d new PersonBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2018-01-10"},{"lineNumber":50,"author":{"gitId":"cyaoxuan"},"content":"            .withEmail(\"cornelia@example.com\").withAddress(\"10th street\").withTags(\"friends\")","lastModifiedDate":"2023-10-13"},{"lineNumber":51,"author":{"gitId":"cyaoxuan"},"content":"            .withNric(\"464J\").withLicencePlate(\"STG46P\")","lastModifiedDate":"2023-10-13"},{"lineNumber":52,"author":{"gitId":"cyaoxuan"},"content":"            .withPolicy(\"NTUC4532\", \"29-02-2004\", \"29-02-2008\").build();","lastModifiedDate":"2023-10-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final Person ELLE \u003d new PersonBuilder().withName(\"Elle Meyer\").withPhone(\"9482224\")","lastModifiedDate":"2018-01-10"},{"lineNumber":54,"author":{"gitId":"cyaoxuan"},"content":"            .withEmail(\"werner@example.com\").withAddress(\"michegan ave\").withNric(\"573H\").withLicencePlate(\"SHL463C\")","lastModifiedDate":"2023-10-13"},{"lineNumber":55,"author":{"gitId":"cyaoxuan"},"content":"            .withPolicy(\"NOPOLICY\", \"01-01-1000\", \"01-01-1000\").build();","lastModifiedDate":"2023-10-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static final Person FIONA \u003d new PersonBuilder().withName(\"Fiona Kunz\").withPhone(\"9482427\")","lastModifiedDate":"2018-01-10"},{"lineNumber":57,"author":{"gitId":"cyaoxuan"},"content":"            .withEmail(\"lydia@example.com\").withAddress(\"little tokyo\").withNric(\"743G\").withLicencePlate(\"SBA1Z\")","lastModifiedDate":"2023-10-13"},{"lineNumber":58,"author":{"gitId":"cyaoxuan"},"content":"            .withPolicy(\"NOPOLICY\", \"01-01-1000\", \"01-01-1000\").build();","lastModifiedDate":"2023-10-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static final Person GEORGE \u003d new PersonBuilder().withName(\"George Best\").withPhone(\"9482442\")","lastModifiedDate":"2018-01-10"},{"lineNumber":60,"author":{"gitId":"cyaoxuan"},"content":"            .withEmail(\"anna@example.com\").withAddress(\"4th street\").withNric(\"674G\").withLicencePlate(\"SNM9735R\")","lastModifiedDate":"2023-10-13"},{"lineNumber":61,"author":{"gitId":"cyaoxuan"},"content":"            .withPolicy(\"NOPOLICY\", \"01-01-1000\", \"01-01-1000\").build();","lastModifiedDate":"2023-10-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public static final Person HOON \u003d new PersonBuilder().withName(\"Hoon Meier\").withPhone(\"8482424\")","lastModifiedDate":"2018-01-10"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            .withEmail(\"stefan@example.com\").withAddress(\"little india\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public static final Person IDA \u003d new PersonBuilder().withName(\"Ida Mueller\").withPhone(\"8482131\")","lastModifiedDate":"2018-01-10"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            .withEmail(\"hans@example.com\").withAddress(\"chicago ave\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    // Manually added - Person\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2017-08-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public static final Person AMY \u003d new PersonBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2018-01-10"},{"lineNumber":71,"author":{"gitId":"KumChaiYin"},"content":"            .withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY).withTags(VALID_TAG_FRIEND)","lastModifiedDate":"2023-10-19"},{"lineNumber":72,"author":{"gitId":"KumChaiYin"},"content":"            .withNric(VALID_NRIC_AMY).withLicencePlate(VALID_LICENCE_PLATE_AMY)","lastModifiedDate":"2023-10-19"},{"lineNumber":73,"author":{"gitId":"KumChaiYin"},"content":"            .withPolicy(VALID_POLICY_NO_AMY, VALID_POLICY_ISSUE_DATE_AMY, VALID_POLICY_EXPIRY_DATE_AMY).build();","lastModifiedDate":"2023-10-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public static final Person BOB \u003d new PersonBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2018-01-10"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND)","lastModifiedDate":"2017-09-21"},{"lineNumber":76,"author":{"gitId":"KumChaiYin"},"content":"            .withNric(VALID_NRIC_BOB).withLicencePlate(VALID_LICENCE_PLATE_BOB)","lastModifiedDate":"2023-10-19"},{"lineNumber":77,"author":{"gitId":"KumChaiYin"},"content":"            .withPolicy(VALID_POLICY_NO_BOB, VALID_POLICY_ISSUE_DATE_BOB, VALID_POLICY_EXPIRY_DATE_BOB).build();","lastModifiedDate":"2023-10-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private TypicalPersons() {} // prevents instantiation","lastModifiedDate":"2017-07-20"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * Returns an {@code AddressBook} with all the typical persons.","lastModifiedDate":"2017-08-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2017-08-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2017-08-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        for (Person person : getTypicalPersons()) {","lastModifiedDate":"2018-01-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            ab.addPerson(person);","lastModifiedDate":"2017-08-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public static List\u003cPerson\u003e getTypicalPersons() {","lastModifiedDate":"2018-01-10"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2017-08-07"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":97,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"KumChaiYin":15,"-":67,"cyaoxuan":15}}]
